{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 25,
                  "endLine": 74,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    end\n\n    # build gzip command used for tar compression\n    gzip_cmd = 'gzip' + (ENV['GZIP_RSYNCABLE'] == 'yes' ? ' --rsyncable' : '')\n\n    cmd = %W(tar -cf #{@local_tar_path} -I #{gzip_cmd} -C /srv/gitlab/tmp/#{@name} . )\n    output, status = run_cmd(cmd)\n",
                    "rendered": {
                      "text": "    end\n\n    # build gzip command used for tar compression\n    gzip_cmd = 'gzip' + (ENV['GZIP_RSYNCABLE'] == 'yes' ? ' --rsyncable' : '')\n\n    cmd = %W(tar -cf #{@local_tar_path} -I #{gzip_cmd} -C /srv/gitlab/tmp/#{@name} . )\n    output, status = run_cmd(cmd)\n",
                      "markdown": "`    end\n\n    # build gzip command used for tar compression\n    gzip_cmd = 'gzip' + (ENV['GZIP_RSYNCABLE'] == 'yes' ? ' --rsyncable' : '')\n\n    cmd = %W(tar -cf #{@local_tar_path} -I #{gzip_cmd} -C /srv/gitlab/tmp/#{@name} . )\n    output, status = run_cmd(cmd)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 5,
                  "endLine": 164,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n      cmd = %W(gsutil rm -f -r gs://#{@remote_bucket_name}/*)\n    when 'azure'\n      cmd = %W(azcopy remove #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token}\n               --output-level essential --recursive=true)\n    end\n\n",
                    "rendered": {
                      "text": "\n      cmd = %W(gsutil rm -f -r gs://#{@remote_bucket_name}/*)\n    when 'azure'\n      cmd = %W(azcopy remove #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token}\n               --output-level essential --recursive=true)\n    end\n\n",
                      "markdown": "`\n      cmd = %W(gsutil rm -f -r gs://#{@remote_bucket_name}/*)\n    when 'azure'\n      cmd = %W(azcopy remove #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token}\n               --output-level essential --recursive=true)\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 5,
                  "endLine": 162,
                  "endColumn": 10,
                  "snippet": {
                    "text": "        return\n      end\n\n      cmd = %W(gsutil rm -f -r gs://#{@remote_bucket_name}/*)\n    when 'azure'\n      cmd = %W(azcopy remove #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token}\n               --output-level essential --recursive=true)\n",
                    "rendered": {
                      "text": "        return\n      end\n\n      cmd = %W(gsutil rm -f -r gs://#{@remote_bucket_name}/*)\n    when 'azure'\n      cmd = %W(azcopy remove #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token}\n               --output-level essential --recursive=true)\n",
                      "markdown": "`        return\n      end\n\n      cmd = %W(gsutil rm -f -r gs://#{@remote_bucket_name}/*)\n    when 'azure'\n      cmd = %W(azcopy remove #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token}\n               --output-level essential --recursive=true)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 7,
                  "endLine": 149,
                  "endColumn": 12,
                  "snippet": {
                    "text": "      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd --stop-on-error del --force --recursive s3://#{@remote_bucket_name})\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 rm --recursive s3://#{@remote_bucket_name}) + @aws_s3_settings.split(\" \")\n      end\n    when 'gcs'\n      # Check if the bucket has any objects\n",
                    "rendered": {
                      "text": "      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd --stop-on-error del --force --recursive s3://#{@remote_bucket_name})\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 rm --recursive s3://#{@remote_bucket_name}) + @aws_s3_settings.split(\" \")\n      end\n    when 'gcs'\n      # Check if the bucket has any objects\n",
                      "markdown": "`      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd --stop-on-error del --force --recursive s3://#{@remote_bucket_name})\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 rm --recursive s3://#{@remote_bucket_name}) + @aws_s3_settings.split(\" \")\n      end\n    when 'gcs'\n      # Check if the bucket has any objects\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 7,
                  "endLine": 147,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    case @backend\n    when 's3'\n      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd --stop-on-error del --force --recursive s3://#{@remote_bucket_name})\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 rm --recursive s3://#{@remote_bucket_name}) + @aws_s3_settings.split(\" \")\n      end\n",
                    "rendered": {
                      "text": "    case @backend\n    when 's3'\n      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd --stop-on-error del --force --recursive s3://#{@remote_bucket_name})\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 rm --recursive s3://#{@remote_bucket_name}) + @aws_s3_settings.split(\" \")\n      end\n",
                      "markdown": "`    case @backend\n    when 's3'\n      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd --stop-on-error del --force --recursive s3://#{@remote_bucket_name})\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 rm --recursive s3://#{@remote_bucket_name}) + @aws_s3_settings.split(\" \")\n      end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 5,
                  "endLine": 133,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    when 'gcs'\n      cmd = %W(gsutil -m rsync -r gs://#{@remote_bucket_name} gs://#{@tmp_bucket_name}/#{backup_file_name}/)\n    when 'azure'\n      cmd = %W(azcopy sync\n               #{azure_util.url}/#{@remote_bucket_name}/?#{azure_util.sas_token}\n               #{azure_util.url}/#{@tmp_bucket_name}/#{backup_file_name}/?#{azure_util.sas_token}\n               --output-level essential)\n",
                    "rendered": {
                      "text": "    when 'gcs'\n      cmd = %W(gsutil -m rsync -r gs://#{@remote_bucket_name} gs://#{@tmp_bucket_name}/#{backup_file_name}/)\n    when 'azure'\n      cmd = %W(azcopy sync\n               #{azure_util.url}/#{@remote_bucket_name}/?#{azure_util.sas_token}\n               #{azure_util.url}/#{@tmp_bucket_name}/#{backup_file_name}/?#{azure_util.sas_token}\n               --output-level essential)\n",
                      "markdown": "`    when 'gcs'\n      cmd = %W(gsutil -m rsync -r gs://#{@remote_bucket_name} gs://#{@tmp_bucket_name}/#{backup_file_name}/)\n    when 'azure'\n      cmd = %W(azcopy sync\n               #{azure_util.url}/#{@remote_bucket_name}/?#{azure_util.sas_token}\n               #{azure_util.url}/#{@tmp_bucket_name}/#{backup_file_name}/?#{azure_util.sas_token}\n               --output-level essential)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 5,
                  "endLine": 131,
                  "endColumn": 10,
                  "snippet": {
                    "text": "        cmd = %W(aws s3 sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r gs://#{@remote_bucket_name} gs://#{@tmp_bucket_name}/#{backup_file_name}/)\n    when 'azure'\n      cmd = %W(azcopy sync\n               #{azure_util.url}/#{@remote_bucket_name}/?#{azure_util.sas_token}\n",
                    "rendered": {
                      "text": "        cmd = %W(aws s3 sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r gs://#{@remote_bucket_name} gs://#{@tmp_bucket_name}/#{backup_file_name}/)\n    when 'azure'\n      cmd = %W(azcopy sync\n               #{azure_util.url}/#{@remote_bucket_name}/?#{azure_util.sas_token}\n",
                      "markdown": "`        cmd = %W(aws s3 sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r gs://#{@remote_bucket_name} gs://#{@tmp_bucket_name}/#{backup_file_name}/)\n    when 'azure'\n      cmd = %W(azcopy sync\n               #{azure_util.url}/#{@remote_bucket_name}/?#{azure_util.sas_token}\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 7,
                  "endLine": 128,
                  "endColumn": 12,
                  "snippet": {
                    "text": "      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/)\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r gs://#{@remote_bucket_name} gs://#{@tmp_bucket_name}/#{backup_file_name}/)\n",
                    "rendered": {
                      "text": "      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/)\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r gs://#{@remote_bucket_name} gs://#{@tmp_bucket_name}/#{backup_file_name}/)\n",
                      "markdown": "`      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/)\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r gs://#{@remote_bucket_name} gs://#{@tmp_bucket_name}/#{backup_file_name}/)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 7,
                  "endLine": 126,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    case @backend\n    when 's3'\n      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/)\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n",
                    "rendered": {
                      "text": "    case @backend\n    when 's3'\n      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/)\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n",
                      "markdown": "`    case @backend\n    when 's3'\n      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/)\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 5,
                  "endLine": 112,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    when 'gcs'\n      cmd = %W(gsutil -m rsync -r #{source_path}/ gs://#{@remote_bucket_name}/#{dir_name})\n    when 'azure'\n      cmd = %W(azcopy sync #{source_path}/ #{azure_util.url}/#{@remote_bucket_name}/#{dir_name}/?#{azure_util.sas_token} --output-level essential)\n    end\n\n    output, status = run_cmd(cmd)\n",
                    "rendered": {
                      "text": "    when 'gcs'\n      cmd = %W(gsutil -m rsync -r #{source_path}/ gs://#{@remote_bucket_name}/#{dir_name})\n    when 'azure'\n      cmd = %W(azcopy sync #{source_path}/ #{azure_util.url}/#{@remote_bucket_name}/#{dir_name}/?#{azure_util.sas_token} --output-level essential)\n    end\n\n    output, status = run_cmd(cmd)\n",
                      "markdown": "`    when 'gcs'\n      cmd = %W(gsutil -m rsync -r #{source_path}/ gs://#{@remote_bucket_name}/#{dir_name})\n    when 'azure'\n      cmd = %W(azcopy sync #{source_path}/ #{azure_util.url}/#{@remote_bucket_name}/#{dir_name}/?#{azure_util.sas_token} --output-level essential)\n    end\n\n    output, status = run_cmd(cmd)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 5,
                  "endLine": 110,
                  "endColumn": 10,
                  "snippet": {
                    "text": "        cmd = %W(aws s3 sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r #{source_path}/ gs://#{@remote_bucket_name}/#{dir_name})\n    when 'azure'\n      cmd = %W(azcopy sync #{source_path}/ #{azure_util.url}/#{@remote_bucket_name}/#{dir_name}/?#{azure_util.sas_token} --output-level essential)\n    end\n",
                    "rendered": {
                      "text": "        cmd = %W(aws s3 sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r #{source_path}/ gs://#{@remote_bucket_name}/#{dir_name})\n    when 'azure'\n      cmd = %W(azcopy sync #{source_path}/ #{azure_util.url}/#{@remote_bucket_name}/#{dir_name}/?#{azure_util.sas_token} --output-level essential)\n    end\n",
                      "markdown": "`        cmd = %W(aws s3 sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r #{source_path}/ gs://#{@remote_bucket_name}/#{dir_name})\n    when 'azure'\n      cmd = %W(azcopy sync #{source_path}/ #{azure_util.url}/#{@remote_bucket_name}/#{dir_name}/?#{azure_util.sas_token} --output-level essential)\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 7,
                  "endLine": 107,
                  "endColumn": 12,
                  "snippet": {
                    "text": "      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd --stop-on-error sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/)\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r #{source_path}/ gs://#{@remote_bucket_name}/#{dir_name})\n",
                    "rendered": {
                      "text": "      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd --stop-on-error sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/)\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r #{source_path}/ gs://#{@remote_bucket_name}/#{dir_name})\n",
                      "markdown": "`      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd --stop-on-error sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/)\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r #{source_path}/ gs://#{@remote_bucket_name}/#{dir_name})\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 7,
                  "endLine": 105,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    case @backend\n    when 's3'\n      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd --stop-on-error sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/)\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n",
                    "rendered": {
                      "text": "    case @backend\n    when 's3'\n      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd --stop-on-error sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/)\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n",
                      "markdown": "`    case @backend\n    when 's3'\n      if @s3_tool == \"s3cmd\"\n        cmd = %W(s3cmd --stop-on-error sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/)\n      elsif @s3_tool == \"awscli\"\n        cmd = %W(aws s3 sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 3,
                  "endLine": 76,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # build gzip command used for tar compression\n    gzip_cmd = 'gzip' + (ENV['GZIP_RSYNCABLE'] == 'yes' ? ' --rsyncable' : '')\n\n    cmd = %W(tar -cf #{@local_tar_path} -I #{gzip_cmd} -C /srv/gitlab/tmp/#{@name} . )\n    output, status = run_cmd(cmd)\n    failure_abort('archive', output) unless status.zero?\n\n",
                    "rendered": {
                      "text": "    # build gzip command used for tar compression\n    gzip_cmd = 'gzip' + (ENV['GZIP_RSYNCABLE'] == 'yes' ? ' --rsyncable' : '')\n\n    cmd = %W(tar -cf #{@local_tar_path} -I #{gzip_cmd} -C /srv/gitlab/tmp/#{@name} . )\n    output, status = run_cmd(cmd)\n    failure_abort('archive', output) unless status.zero?\n\n",
                      "markdown": "`    # build gzip command used for tar compression\n    gzip_cmd = 'gzip' + (ENV['GZIP_RSYNCABLE'] == 'yes' ? ' --rsyncable' : '')\n\n    cmd = %W(tar -cf #{@local_tar_path} -I #{gzip_cmd} -C /srv/gitlab/tmp/#{@name} . )\n    output, status = run_cmd(cmd)\n    failure_abort('archive', output) unless status.zero?\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 5,
                  "endLine": 48,
                  "endColumn": 10,
                  "snippet": {
                    "text": "      cmd = %W(gsutil -m rsync -d -x #{REGEXP_EXCLUDE} -r gs://#{@remote_bucket_name} /srv/gitlab/tmp/#{@name})\n    when 'azure'\n      check_bucket_cmd = %W(azcopy list #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token})\n      cmd = %W(azcopy sync #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token} /srv/gitlab/tmp/#{@name}\n              --output-level essential --exclude-regex=#{REGEXP_EXCLUDE} --delete-destination=true)\n    end\n \n",
                    "rendered": {
                      "text": "      cmd = %W(gsutil -m rsync -d -x #{REGEXP_EXCLUDE} -r gs://#{@remote_bucket_name} /srv/gitlab/tmp/#{@name})\n    when 'azure'\n      check_bucket_cmd = %W(azcopy list #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token})\n      cmd = %W(azcopy sync #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token} /srv/gitlab/tmp/#{@name}\n              --output-level essential --exclude-regex=#{REGEXP_EXCLUDE} --delete-destination=true)\n    end\n \n",
                      "markdown": "`      cmd = %W(gsutil -m rsync -d -x #{REGEXP_EXCLUDE} -r gs://#{@remote_bucket_name} /srv/gitlab/tmp/#{@name})\n    when 'azure'\n      check_bucket_cmd = %W(azcopy list #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token})\n      cmd = %W(azcopy sync #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token} /srv/gitlab/tmp/#{@name}\n              --output-level essential --exclude-regex=#{REGEXP_EXCLUDE} --delete-destination=true)\n    end\n \n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 5,
                  "endLine": 45,
                  "endColumn": 10,
                  "snippet": {
                    "text": "      end\n    when 'gcs'\n      check_bucket_cmd = %W(gsutil ls gs://#{@remote_bucket_name})\n      cmd = %W(gsutil -m rsync -d -x #{REGEXP_EXCLUDE} -r gs://#{@remote_bucket_name} /srv/gitlab/tmp/#{@name})\n    when 'azure'\n      check_bucket_cmd = %W(azcopy list #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token})\n      cmd = %W(azcopy sync #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token} /srv/gitlab/tmp/#{@name}\n",
                    "rendered": {
                      "text": "      end\n    when 'gcs'\n      check_bucket_cmd = %W(gsutil ls gs://#{@remote_bucket_name})\n      cmd = %W(gsutil -m rsync -d -x #{REGEXP_EXCLUDE} -r gs://#{@remote_bucket_name} /srv/gitlab/tmp/#{@name})\n    when 'azure'\n      check_bucket_cmd = %W(azcopy list #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token})\n      cmd = %W(azcopy sync #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token} /srv/gitlab/tmp/#{@name}\n",
                      "markdown": "`      end\n    when 'gcs'\n      check_bucket_cmd = %W(gsutil ls gs://#{@remote_bucket_name})\n      cmd = %W(gsutil -m rsync -d -x #{REGEXP_EXCLUDE} -r gs://#{@remote_bucket_name} /srv/gitlab/tmp/#{@name})\n    when 'azure'\n      check_bucket_cmd = %W(azcopy list #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token})\n      cmd = %W(azcopy sync #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token} /srv/gitlab/tmp/#{@name}\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 7,
                  "endLine": 41,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        cmd = %W(s3cmd --stop-on-error --delete-removed --exclude #{GLOB_EXCLUDE} sync s3://#{@remote_bucket_name}/ /srv/gitlab/tmp/#{@name}/)\n      elsif @s3_tool == \"awscli\"\n        check_bucket_cmd = %W(aws s3api head-bucket --bucket #{@remote_bucket_name}) + @aws_s3_settings.split(\" \")\n        cmd = %W(aws s3 sync --delete --exclude #{GLOB_EXCLUDE} s3://#{@remote_bucket_name}/ /srv/gitlab/tmp/#{@name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      check_bucket_cmd = %W(gsutil ls gs://#{@remote_bucket_name})\n",
                    "rendered": {
                      "text": "        cmd = %W(s3cmd --stop-on-error --delete-removed --exclude #{GLOB_EXCLUDE} sync s3://#{@remote_bucket_name}/ /srv/gitlab/tmp/#{@name}/)\n      elsif @s3_tool == \"awscli\"\n        check_bucket_cmd = %W(aws s3api head-bucket --bucket #{@remote_bucket_name}) + @aws_s3_settings.split(\" \")\n        cmd = %W(aws s3 sync --delete --exclude #{GLOB_EXCLUDE} s3://#{@remote_bucket_name}/ /srv/gitlab/tmp/#{@name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      check_bucket_cmd = %W(gsutil ls gs://#{@remote_bucket_name})\n",
                      "markdown": "`        cmd = %W(s3cmd --stop-on-error --delete-removed --exclude #{GLOB_EXCLUDE} sync s3://#{@remote_bucket_name}/ /srv/gitlab/tmp/#{@name}/)\n      elsif @s3_tool == \"awscli\"\n        check_bucket_cmd = %W(aws s3api head-bucket --bucket #{@remote_bucket_name}) + @aws_s3_settings.split(\" \")\n        cmd = %W(aws s3 sync --delete --exclude #{GLOB_EXCLUDE} s3://#{@remote_bucket_name}/ /srv/gitlab/tmp/#{@name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      check_bucket_cmd = %W(gsutil ls gs://#{@remote_bucket_name})\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 7,
                  "endLine": 38,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    when 's3'\n      if @s3_tool == \"s3cmd\"\n        check_bucket_cmd = %W(s3cmd --limit=1 ls s3://#{@remote_bucket_name})\n        cmd = %W(s3cmd --stop-on-error --delete-removed --exclude #{GLOB_EXCLUDE} sync s3://#{@remote_bucket_name}/ /srv/gitlab/tmp/#{@name}/)\n      elsif @s3_tool == \"awscli\"\n        check_bucket_cmd = %W(aws s3api head-bucket --bucket #{@remote_bucket_name}) + @aws_s3_settings.split(\" \")\n        cmd = %W(aws s3 sync --delete --exclude #{GLOB_EXCLUDE} s3://#{@remote_bucket_name}/ /srv/gitlab/tmp/#{@name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n",
                    "rendered": {
                      "text": "    when 's3'\n      if @s3_tool == \"s3cmd\"\n        check_bucket_cmd = %W(s3cmd --limit=1 ls s3://#{@remote_bucket_name})\n        cmd = %W(s3cmd --stop-on-error --delete-removed --exclude #{GLOB_EXCLUDE} sync s3://#{@remote_bucket_name}/ /srv/gitlab/tmp/#{@name}/)\n      elsif @s3_tool == \"awscli\"\n        check_bucket_cmd = %W(aws s3api head-bucket --bucket #{@remote_bucket_name}) + @aws_s3_settings.split(\" \")\n        cmd = %W(aws s3 sync --delete --exclude #{GLOB_EXCLUDE} s3://#{@remote_bucket_name}/ /srv/gitlab/tmp/#{@name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n",
                      "markdown": "`    when 's3'\n      if @s3_tool == \"s3cmd\"\n        check_bucket_cmd = %W(s3cmd --limit=1 ls s3://#{@remote_bucket_name})\n        cmd = %W(s3cmd --stop-on-error --delete-removed --exclude #{GLOB_EXCLUDE} sync s3://#{@remote_bucket_name}/ /srv/gitlab/tmp/#{@name}/)\n      elsif @s3_tool == \"awscli\"\n        check_bucket_cmd = %W(aws s3api head-bucket --bucket #{@remote_bucket_name}) + @aws_s3_settings.split(\" \")\n        cmd = %W(aws s3 sync --delete --exclude #{GLOB_EXCLUDE} s3://#{@remote_bucket_name}/ /srv/gitlab/tmp/#{@name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 24,
                  "endLine": 131,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        cmd = %W(aws s3 sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r gs://#{@remote_bucket_name} gs://#{@tmp_bucket_name}/#{backup_file_name}/)\n    when 'azure'\n      cmd = %W(azcopy sync\n               #{azure_util.url}/#{@remote_bucket_name}/?#{azure_util.sas_token}\n",
                    "rendered": {
                      "text": "        cmd = %W(aws s3 sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r gs://#{@remote_bucket_name} gs://#{@tmp_bucket_name}/#{backup_file_name}/)\n    when 'azure'\n      cmd = %W(azcopy sync\n               #{azure_util.url}/#{@remote_bucket_name}/?#{azure_util.sas_token}\n",
                      "markdown": "`        cmd = %W(aws s3 sync s3://#{@remote_bucket_name} s3://#{@tmp_bucket_name}/#{backup_file_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r gs://#{@remote_bucket_name} gs://#{@tmp_bucket_name}/#{backup_file_name}/)\n    when 'azure'\n      cmd = %W(azcopy sync\n               #{azure_util.url}/#{@remote_bucket_name}/?#{azure_util.sas_token}\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 24,
                  "endLine": 110,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        cmd = %W(aws s3 sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r #{source_path}/ gs://#{@remote_bucket_name}/#{dir_name})\n    when 'azure'\n      cmd = %W(azcopy sync #{source_path}/ #{azure_util.url}/#{@remote_bucket_name}/#{dir_name}/?#{azure_util.sas_token} --output-level essential)\n    end\n",
                    "rendered": {
                      "text": "        cmd = %W(aws s3 sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r #{source_path}/ gs://#{@remote_bucket_name}/#{dir_name})\n    when 'azure'\n      cmd = %W(azcopy sync #{source_path}/ #{azure_util.url}/#{@remote_bucket_name}/#{dir_name}/?#{azure_util.sas_token} --output-level essential)\n    end\n",
                      "markdown": "`        cmd = %W(aws s3 sync #{source_path}/ s3://#{@remote_bucket_name}/#{dir_name}/) + @aws_s3_settings.split(\" \") + @aws_kms_settings.split(\" \")\n      end\n    when 'gcs'\n      cmd = %W(gsutil -m rsync -r #{source_path}/ gs://#{@remote_bucket_name}/#{dir_name})\n    when 'azure'\n      cmd = %W(azcopy sync #{source_path}/ #{azure_util.url}/#{@remote_bucket_name}/#{dir_name}/?#{azure_util.sas_token} --output-level essential)\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 33,
                  "endLine": 73,
                  "endColumn": 38,
                  "snippet": {
                    "text": "      return\n    end\n\n    # build gzip command used for tar compression\n    gzip_cmd = 'gzip' + (ENV['GZIP_RSYNCABLE'] == 'yes' ? ' --rsyncable' : '')\n\n    cmd = %W(tar -cf #{@local_tar_path} -I #{gzip_cmd} -C /srv/gitlab/tmp/#{@name} . )\n",
                    "rendered": {
                      "text": "      return\n    end\n\n    # build gzip command used for tar compression\n    gzip_cmd = 'gzip' + (ENV['GZIP_RSYNCABLE'] == 'yes' ? ' --rsyncable' : '')\n\n    cmd = %W(tar -cf #{@local_tar_path} -I #{gzip_cmd} -C /srv/gitlab/tmp/#{@name} . )\n",
                      "markdown": "`      return\n    end\n\n    # build gzip command used for tar compression\n    gzip_cmd = 'gzip' + (ENV['GZIP_RSYNCABLE'] == 'yes' ? ' --rsyncable' : '')\n\n    cmd = %W(tar -cf #{@local_tar_path} -I #{gzip_cmd} -C /srv/gitlab/tmp/#{@name} . )\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_backup.rb"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 24,
                  "endLine": 45,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      end\n    when 'gcs'\n      check_bucket_cmd = %W(gsutil ls gs://#{@remote_bucket_name})\n      cmd = %W(gsutil -m rsync -d -x #{REGEXP_EXCLUDE} -r gs://#{@remote_bucket_name} /srv/gitlab/tmp/#{@name})\n    when 'azure'\n      check_bucket_cmd = %W(azcopy list #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token})\n      cmd = %W(azcopy sync #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token} /srv/gitlab/tmp/#{@name}\n",
                    "rendered": {
                      "text": "      end\n    when 'gcs'\n      check_bucket_cmd = %W(gsutil ls gs://#{@remote_bucket_name})\n      cmd = %W(gsutil -m rsync -d -x #{REGEXP_EXCLUDE} -r gs://#{@remote_bucket_name} /srv/gitlab/tmp/#{@name})\n    when 'azure'\n      check_bucket_cmd = %W(azcopy list #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token})\n      cmd = %W(azcopy sync #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token} /srv/gitlab/tmp/#{@name}\n",
                      "markdown": "`      end\n    when 'gcs'\n      check_bucket_cmd = %W(gsutil ls gs://#{@remote_bucket_name})\n      cmd = %W(gsutil -m rsync -d -x #{REGEXP_EXCLUDE} -r gs://#{@remote_bucket_name} /srv/gitlab/tmp/#{@name})\n    when 'azure'\n      check_bucket_cmd = %W(azcopy list #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token})\n      cmd = %W(azcopy sync #{azure_util.url}/#{@remote_bucket_name}?#{azure_util.sas_token} /srv/gitlab/tmp/#{@name}\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_azure.rb"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 3,
                  "endLine": 57,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  def generate_sas(access_key, account, start, expiry)\n    permissions = 'rawdl'  # read, access, write, delete, list\n    protocol = 'https'     # allow https only\n    service = 'b'          # blob storage\n    resources = 'co'       # container + object level\n    version = '2018-11-09' # API Version\n    ip_range = ''          # Allowed IPs\n",
                    "rendered": {
                      "text": "  def generate_sas(access_key, account, start, expiry)\n    permissions = 'rawdl'  # read, access, write, delete, list\n    protocol = 'https'     # allow https only\n    service = 'b'          # blob storage\n    resources = 'co'       # container + object level\n    version = '2018-11-09' # API Version\n    ip_range = ''          # Allowed IPs\n",
                      "markdown": "`  def generate_sas(access_key, account, start, expiry)\n    permissions = 'rawdl'  # read, access, write, delete, list\n    protocol = 'https'     # allow https only\n    service = 'b'          # blob storage\n    resources = 'co'       # container + object level\n    version = '2018-11-09' # API Version\n    ip_range = ''          # Allowed IPs\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_azure.rb"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 10,
                  "endLine": 77,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    ].join(\"\\n\")\n\n    sig = OpenSSL::HMAC.digest('sha256', Base64.decode64(access_key), to_sign)\n    sig = Base64.strict_encode64(sig)\n    sig = URI.encode_www_form_component(sig)\n    token = \"sv=#{version}&ss=#{service}&srt=#{resources}&sp=#{permissions}\"\\\n      \"&se=#{expiry.utc.iso8601}&st=#{start.utc.iso8601}&spr=#{protocol}&sig=#{sig}\"\n",
                    "rendered": {
                      "text": "    ].join(\"\\n\")\n\n    sig = OpenSSL::HMAC.digest('sha256', Base64.decode64(access_key), to_sign)\n    sig = Base64.strict_encode64(sig)\n    sig = URI.encode_www_form_component(sig)\n    token = \"sv=#{version}&ss=#{service}&srt=#{resources}&sp=#{permissions}\"\\\n      \"&se=#{expiry.utc.iso8601}&st=#{start.utc.iso8601}&spr=#{protocol}&sig=#{sig}\"\n",
                      "markdown": "`    ].join(\"\\n\")\n\n    sig = OpenSSL::HMAC.digest('sha256', Base64.decode64(access_key), to_sign)\n    sig = Base64.strict_encode64(sig)\n    sig = URI.encode_www_form_component(sig)\n    token = \"sv=#{version}&ss=#{service}&srt=#{resources}&sp=#{permissions}\"\\\n      \"&se=#{expiry.utc.iso8601}&st=#{start.utc.iso8601}&spr=#{protocol}&sig=#{sig}\"\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_azure.rb"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 41,
                  "endLine": 76,
                  "endColumn": 47,
                  "snippet": {
                    "text": "      \"\"\n    ].join(\"\\n\")\n\n    sig = OpenSSL::HMAC.digest('sha256', Base64.decode64(access_key), to_sign)\n    sig = Base64.strict_encode64(sig)\n    sig = URI.encode_www_form_component(sig)\n    token = \"sv=#{version}&ss=#{service}&srt=#{resources}&sp=#{permissions}\"\\\n",
                    "rendered": {
                      "text": "      \"\"\n    ].join(\"\\n\")\n\n    sig = OpenSSL::HMAC.digest('sha256', Base64.decode64(access_key), to_sign)\n    sig = Base64.strict_encode64(sig)\n    sig = URI.encode_www_form_component(sig)\n    token = \"sv=#{version}&ss=#{service}&srt=#{resources}&sp=#{permissions}\"\\\n",
                      "markdown": "`      \"\"\n    ].join(\"\\n\")\n\n    sig = OpenSSL::HMAC.digest('sha256', Base64.decode64(access_key), to_sign)\n    sig = Base64.strict_encode64(sig)\n    sig = URI.encode_www_form_component(sig)\n    token = \"sv=#{version}&ss=#{service}&srt=#{resources}&sp=#{permissions}\"\\\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/lib/object_storage_azure.rb"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 9,
                  "endLine": 1,
                  "endColumn": 15,
                  "snippet": {
                    "text": "require 'base64'\nrequire 'fileutils'\nrequire 'openssl'\nrequire 'time'\n",
                    "rendered": {
                      "text": "require 'base64'\nrequire 'fileutils'\nrequire 'openssl'\nrequire 'time'\n",
                      "markdown": "`require 'base64'\nrequire 'fileutils'\nrequire 'openssl'\nrequire 'time'\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/object-storage-azure-token"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env ruby\n\nrequire 'object_storage_azure'\n\nconfig = ENV['AZURE_CONFIG_FILE'] || \"/etc/gitlab/objectstorage/azure_config\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env ruby\n\nrequire 'object_storage_azure'\n\nconfig = ENV['AZURE_CONFIG_FILE'] || \"/etc/gitlab/objectstorage/azure_config\"\n",
                      "markdown": "`#!/usr/bin/env ruby\n\nrequire 'object_storage_azure'\n\nconfig = ENV['AZURE_CONFIG_FILE'] || \"/etc/gitlab/objectstorage/azure_config\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/object-storage-restore"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nrequire 'object_storage_backup'\n\nabort(\"restore_item and tar path needs to be passed as arguments to the script\") unless ARGV.length == 2\n\nbucket_name = ENV[\"#{ARGV[0].upcase}_BUCKET_NAME\"] || \"gitlab-#{ARGV[0]}\"\ntmp_bucket  = ENV['TMP_BUCKET_NAME'] || 'tmp'\n",
                    "rendered": {
                      "text": "\nrequire 'object_storage_backup'\n\nabort(\"restore_item and tar path needs to be passed as arguments to the script\") unless ARGV.length == 2\n\nbucket_name = ENV[\"#{ARGV[0].upcase}_BUCKET_NAME\"] || \"gitlab-#{ARGV[0]}\"\ntmp_bucket  = ENV['TMP_BUCKET_NAME'] || 'tmp'\n",
                      "markdown": "`\nrequire 'object_storage_backup'\n\nabort(\"restore_item and tar path needs to be passed as arguments to the script\") unless ARGV.length == 2\n\nbucket_name = ENV[\"#{ARGV[0].upcase}_BUCKET_NAME\"] || \"gitlab-#{ARGV[0]}\"\ntmp_bucket  = ENV['TMP_BUCKET_NAME'] || 'tmp'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/object-storage-restore"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env ruby\n\nrequire 'object_storage_backup'\n\nabort(\"restore_item and tar path needs to be passed as arguments to the script\") unless ARGV.length == 2\n",
                    "rendered": {
                      "text": "#!/usr/bin/env ruby\n\nrequire 'object_storage_backup'\n\nabort(\"restore_item and tar path needs to be passed as arguments to the script\") unless ARGV.length == 2\n",
                      "markdown": "`#!/usr/bin/env ruby\n\nrequire 'object_storage_backup'\n\nabort(\"restore_item and tar path needs to be passed as arguments to the script\") unless ARGV.length == 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/object-storage-backup"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env ruby\n\nrequire 'object_storage_backup'\n\nabort (\"backup_item and output_tar_path arguments needs to be passed to the script\") unless ARGV.length == 2\n",
                    "rendered": {
                      "text": "#!/usr/bin/env ruby\n\nrequire 'object_storage_backup'\n\nabort (\"backup_item and output_tar_path arguments needs to be passed to the script\") unless ARGV.length == 2\n",
                      "markdown": "`#!/usr/bin/env ruby\n\nrequire 'object_storage_backup'\n\nabort (\"backup_item and output_tar_path arguments needs to be passed to the script\") unless ARGV.length == 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/Dockerfile"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 11,
                  "endLine": 11,
                  "snippet": {
                    "text": "\nCOPY patches/ ${BUILD_DIR}/patches\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n         patch \\\n         perl \\\n         make\n",
                    "rendered": {
                      "text": "\nCOPY patches/ ${BUILD_DIR}/patches\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n         patch \\\n         perl \\\n         make\n",
                      "markdown": "`\nCOPY patches/ ${BUILD_DIR}/patches\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n         patch \\\n         perl \\\n         make\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/Dockerfile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 6,
                  "endLine": 19,
                  "endColumn": 12,
                  "snippet": {
                    "text": "RUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n    && mkdir -p /target \\\n    && make DESTDIR=/target install \\\n    && rm -Rf /target/usr/local/man\n",
                    "rendered": {
                      "text": "RUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n    && mkdir -p /target \\\n    && make DESTDIR=/target install \\\n    && rm -Rf /target/usr/local/man\n",
                      "markdown": "`RUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n    && mkdir -p /target \\\n    && make DESTDIR=/target install \\\n    && rm -Rf /target/usr/local/man\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/Dockerfile"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 149,
                  "endLine": 16,
                  "endColumn": 154,
                  "snippet": {
                    "text": "         perl \\\n         make\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n",
                    "rendered": {
                      "text": "         perl \\\n         make\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n",
                      "markdown": "`         perl \\\n         make\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/Dockerfile"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "endLine": 16,
                  "endColumn": 9,
                  "snippet": {
                    "text": "         perl \\\n         make\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n",
                    "rendered": {
                      "text": "         perl \\\n         make\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n",
                      "markdown": "`         perl \\\n         make\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 8,
                  "endLine": 13,
                  "endColumn": 14,
                  "snippet": {
                    "text": "RUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n         patch \\\n         perl \\\n         make\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n",
                    "rendered": {
                      "text": "RUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n         patch \\\n         perl \\\n         make\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n",
                      "markdown": "`RUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n         patch \\\n         perl \\\n         make\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 3,
                  "endLine": 11,
                  "endColumn": 12,
                  "snippet": {
                    "text": "COPY patches/ ${BUILD_DIR}/patches\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n         patch \\\n         perl \\\n         make\n",
                    "rendered": {
                      "text": "COPY patches/ ${BUILD_DIR}/patches\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n         patch \\\n         perl \\\n         make\n",
                      "markdown": "`COPY patches/ ${BUILD_DIR}/patches\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n         patch \\\n         perl \\\n         make\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/Dockerfile"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 3,
                  "endLine": 10,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nCOPY patches/ ${BUILD_DIR}/patches\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n         patch \\\n         perl \\\n",
                    "rendered": {
                      "text": "\nCOPY patches/ ${BUILD_DIR}/patches\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n         patch \\\n         perl \\\n",
                      "markdown": "`\nCOPY patches/ ${BUILD_DIR}/patches\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n         patch \\\n         perl \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/wait-for-deps"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 62,
                  "endLine": 41,
                  "snippet": {
                    "text": "export DB_SCHEMA_TARGET\nexport DATABASE_FILE\n\n# the called script should `exec` the arguments passed to this script\nexec /scripts/rails-dependencies \"$@\"\n",
                    "rendered": {
                      "text": "export DB_SCHEMA_TARGET\nexport DATABASE_FILE\n\n# the called script should `exec` the arguments passed to this script\nexec /scripts/rails-dependencies \"$@\"\n",
                      "markdown": "`export DB_SCHEMA_TARGET\nexport DATABASE_FILE\n\n# the called script should `exec` the arguments passed to this script\nexec /scripts/rails-dependencies \"$@\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/wait-for-deps"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 12,
                  "endLine": 40,
                  "endColumn": 20,
                  "snippet": {
                    "text": "export DB_SCHEMA_TARGET\nexport DATABASE_FILE\n\n# the called script should `exec` the arguments passed to this script\nexec /scripts/rails-dependencies \"$@\"\n",
                    "rendered": {
                      "text": "export DB_SCHEMA_TARGET\nexport DATABASE_FILE\n\n# the called script should `exec` the arguments passed to this script\nexec /scripts/rails-dependencies \"$@\"\n",
                      "markdown": "`export DB_SCHEMA_TARGET\nexport DATABASE_FILE\n\n# the called script should `exec` the arguments passed to this script\nexec /scripts/rails-dependencies \"$@\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/rails-dependencies"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env ruby\n# frozen_string_literal: true\n\n# Get this scripts own path, so we can require\nlib_path = File.dirname(File.expand_path($PROGRAM_NAME))\n",
                    "rendered": {
                      "text": "#!/usr/bin/env ruby\n# frozen_string_literal: true\n\n# Get this scripts own path, so we can require\nlib_path = File.dirname(File.expand_path($PROGRAM_NAME))\n",
                      "markdown": "`#!/usr/bin/env ruby\n# frozen_string_literal: true\n\n# Get this scripts own path, so we can require\nlib_path = File.dirname(File.expand_path($PROGRAM_NAME))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 52,
                  "endLine": 63,
                  "endColumn": 57,
                  "snippet": {
                    "text": "ENTRYPOINT [\"/scripts/entrypoint-ubi.sh\"]\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "ENTRYPOINT [\"/scripts/entrypoint-ubi.sh\"]\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`ENTRYPOINT [\"/scripts/entrypoint-ubi.sh\"]\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 41,
                  "endLine": 61,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ENV CONFIG_FILENAME=config.yml\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint-ubi.sh\"]\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "ENV CONFIG_FILENAME=config.yml\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint-ubi.sh\"]\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`ENV CONFIG_FILENAME=config.yml\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint-ubi.sh\"]\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 12,
                  "endLine": 19,
                  "endColumn": 20,
                  "snippet": {
                    "text": "ADD gitlab-gomplate.tar.gz ${DNF_INSTALL_ROOT}/\nADD gitlab-container-registry.tar.gz ${DNF_INSTALL_ROOT}/\n\nRUN microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/ \\\n    && rm -f /install-root/var/lib/dnf/history*\n",
                    "rendered": {
                      "text": "ADD gitlab-gomplate.tar.gz ${DNF_INSTALL_ROOT}/\nADD gitlab-container-registry.tar.gz ${DNF_INSTALL_ROOT}/\n\nRUN microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/ \\\n    && rm -f /install-root/var/lib/dnf/history*\n",
                      "markdown": "`ADD gitlab-gomplate.tar.gz ${DNF_INSTALL_ROOT}/\nADD gitlab-container-registry.tar.gz ${DNF_INSTALL_ROOT}/\n\nRUN microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/ \\\n    && rm -f /install-root/var/lib/dnf/history*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 30,
                  "endLine": 58,
                  "endColumn": 4,
                  "snippet": {
                    "text": "USER ${UID}\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint-ubi.sh\"]\nCMD [\"/scripts/process-wrapper\"]\n",
                    "rendered": {
                      "text": "USER ${UID}\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint-ubi.sh\"]\nCMD [\"/scripts/process-wrapper\"]\n",
                      "markdown": "`USER ${UID}\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint-ubi.sh\"]\nCMD [\"/scripts/process-wrapper\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 41,
                  "endLine": 57,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nUSER ${UID}\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint-ubi.sh\"]\n",
                    "rendered": {
                      "text": "\nUSER ${UID}\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint-ubi.sh\"]\n",
                      "markdown": "`\nUSER ${UID}\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint-ubi.sh\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 56,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\nENV GITLAB_USER=${GITLAB_USER}\n\n",
                    "rendered": {
                      "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\nENV GITLAB_USER=${GITLAB_USER}\n\n",
                      "markdown": "`    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\nENV GITLAB_USER=${GITLAB_USER}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 3,
                  "endLine": 48,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nRUN ln -sf /usr/local/bin/registry /bin/registry && \\\n    chgrp -R 0 /scripts /home/${GITLAB_USER} && \\\n    chmod -R g=u /scripts /home/${GITLAB_USER}\n\n## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n",
                    "rendered": {
                      "text": "\nRUN ln -sf /usr/local/bin/registry /bin/registry && \\\n    chgrp -R 0 /scripts /home/${GITLAB_USER} && \\\n    chmod -R g=u /scripts /home/${GITLAB_USER}\n\n## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n",
                      "markdown": "`\nRUN ln -sf /usr/local/bin/registry /bin/registry && \\\n    chgrp -R 0 /scripts /home/${GITLAB_USER} && \\\n    chmod -R g=u /scripts /home/${GITLAB_USER}\n\n## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 107,
                  "endLine": 41,
                  "endColumn": 115,
                  "snippet": {
                    "text": "      version=${REGISTRY_VERSION} \\\n      release=${REGISTRY_VERSION} \\\n      summary=\"The Docker toolset to pack, ship, store, and deliver content.\" \\\n      description=\"The Docker toolset to pack, ship, store, and deliver content. This is a fork of official Docker Registry 2.0 implementation.\"\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\nCOPY scripts/ /scripts/\n",
                    "rendered": {
                      "text": "      version=${REGISTRY_VERSION} \\\n      release=${REGISTRY_VERSION} \\\n      summary=\"The Docker toolset to pack, ship, store, and deliver content.\" \\\n      description=\"The Docker toolset to pack, ship, store, and deliver content. This is a fork of official Docker Registry 2.0 implementation.\"\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\nCOPY scripts/ /scripts/\n",
                      "markdown": "`      version=${REGISTRY_VERSION} \\\n      release=${REGISTRY_VERSION} \\\n      summary=\"The Docker toolset to pack, ship, store, and deliver content.\" \\\n      description=\"The Docker toolset to pack, ship, store, and deliver content. This is a fork of official Docker Registry 2.0 implementation.\"\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\nCOPY scripts/ /scripts/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 22,
                  "endLine": 41,
                  "endColumn": 30,
                  "snippet": {
                    "text": "      version=${REGISTRY_VERSION} \\\n      release=${REGISTRY_VERSION} \\\n      summary=\"The Docker toolset to pack, ship, store, and deliver content.\" \\\n      description=\"The Docker toolset to pack, ship, store, and deliver content. This is a fork of official Docker Registry 2.0 implementation.\"\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\nCOPY scripts/ /scripts/\n",
                    "rendered": {
                      "text": "      version=${REGISTRY_VERSION} \\\n      release=${REGISTRY_VERSION} \\\n      summary=\"The Docker toolset to pack, ship, store, and deliver content.\" \\\n      description=\"The Docker toolset to pack, ship, store, and deliver content. This is a fork of official Docker Registry 2.0 implementation.\"\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\nCOPY scripts/ /scripts/\n",
                      "markdown": "`      version=${REGISTRY_VERSION} \\\n      release=${REGISTRY_VERSION} \\\n      summary=\"The Docker toolset to pack, ship, store, and deliver content.\" \\\n      description=\"The Docker toolset to pack, ship, store, and deliver content. This is a fork of official Docker Registry 2.0 implementation.\"\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\nCOPY scripts/ /scripts/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 18,
                  "endLine": 40,
                  "endColumn": 26,
                  "snippet": {
                    "text": "      vendor=\"GitLab\" \\\n      version=${REGISTRY_VERSION} \\\n      release=${REGISTRY_VERSION} \\\n      summary=\"The Docker toolset to pack, ship, store, and deliver content.\" \\\n      description=\"The Docker toolset to pack, ship, store, and deliver content. This is a fork of official Docker Registry 2.0 implementation.\"\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n",
                    "rendered": {
                      "text": "      vendor=\"GitLab\" \\\n      version=${REGISTRY_VERSION} \\\n      release=${REGISTRY_VERSION} \\\n      summary=\"The Docker toolset to pack, ship, store, and deliver content.\" \\\n      description=\"The Docker toolset to pack, ship, store, and deliver content. This is a fork of official Docker Registry 2.0 implementation.\"\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n",
                      "markdown": "`      vendor=\"GitLab\" \\\n      version=${REGISTRY_VERSION} \\\n      release=${REGISTRY_VERSION} \\\n      summary=\"The Docker toolset to pack, ship, store, and deliver content.\" \\\n      description=\"The Docker toolset to pack, ship, store, and deliver content. This is a fork of official Docker Registry 2.0 implementation.\"\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN /scripts/build\n\n# The contents of /assets will be extracted by copy_assets in build.sh\nRUN mv /target /assets\n",
                    "rendered": {
                      "text": "RUN /scripts/build\n\n# The contents of /assets will be extracted by copy_assets in build.sh\nRUN mv /target /assets\n",
                      "markdown": "`RUN /scripts/build\n\n# The contents of /assets will be extracted by copy_assets in build.sh\nRUN mv /target /assets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 163,
                  "endLine": 14,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\nRUN mkdir -p /build /target\nCOPY scripts/ /scripts\n",
                    "rendered": {
                      "text": "ARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\nRUN mkdir -p /build /target\nCOPY scripts/ /scripts\n",
                      "markdown": "`ARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\nRUN mkdir -p /build /target\nCOPY scripts/ /scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 15,
                  "endLine": 13,
                  "endColumn": 20,
                  "snippet": {
                    "text": "ARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\nRUN mkdir -p /build /target\n",
                    "rendered": {
                      "text": "ARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\nRUN mkdir -p /build /target\n",
                      "markdown": "`ARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\nRUN mkdir -p /build /target\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 12,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GM_CHECKSUM_SHA256\nARG _SIGNATURE_KEY=EBDFDB21B020EE8FD151A88DE301047DE1198975\nARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\n",
                    "rendered": {
                      "text": "ARG GM_CHECKSUM_SHA256\nARG _SIGNATURE_KEY=EBDFDB21B020EE8FD151A88DE301047DE1198975\nARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\n",
                      "markdown": "`ARG GM_CHECKSUM_SHA256\nARG _SIGNATURE_KEY=EBDFDB21B020EE8FD151A88DE301047DE1198975\nARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 5,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG BUILD_IMAGE=\n\nFROM ${BUILD_IMAGE}\n\nENV LANG=C.UTF-8\n\nARG GM_VERSION=1.3.36\nARG GM_CHECKSUM_SHA256\n",
                    "rendered": {
                      "text": "ARG BUILD_IMAGE=\n\nFROM ${BUILD_IMAGE}\n\nENV LANG=C.UTF-8\n\nARG GM_VERSION=1.3.36\nARG GM_CHECKSUM_SHA256\n",
                      "markdown": "`ARG BUILD_IMAGE=\n\nFROM ${BUILD_IMAGE}\n\nENV LANG=C.UTF-8\n\nARG GM_VERSION=1.3.36\nARG GM_CHECKSUM_SHA256\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/scripts/dependencies.ubi"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 7,
                  "endLine": 4,
                  "endColumn": 13,
                  "snippet": {
                    "text": "#!/bin/bash\n\n# Install tools and libaries needed for compilation\n# git & curl installed as part of `gitlab-ubi-builder`\n",
                    "rendered": {
                      "text": "#!/bin/bash\n\n# Install tools and libaries needed for compilation\n# git & curl installed as part of `gitlab-ubi-builder`\n",
                      "markdown": "`#!/bin/bash\n\n# Install tools and libaries needed for compilation\n# git & curl installed as part of `gitlab-ubi-builder`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/scripts/dependencies.ubi"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endLine": 4,
                  "endColumn": 6,
                  "snippet": {
                    "text": "#!/bin/bash\n\n# Install tools and libaries needed for compilation\n# git & curl installed as part of `gitlab-ubi-builder`\n",
                    "rendered": {
                      "text": "#!/bin/bash\n\n# Install tools and libaries needed for compilation\n# git & curl installed as part of `gitlab-ubi-builder`\n",
                      "markdown": "`#!/bin/bash\n\n# Install tools and libaries needed for compilation\n# git & curl installed as part of `gitlab-ubi-builder`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docker-compose.yml"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 57,
                  "endLine": 192,
                  "endColumn": 65,
                  "snippet": {
                    "text": "      - ./dev/gitlab-kas/config.yml:/etc/kas/config.yml\n      - ./dev/gitlab-kas/.gitlab_kas_internal_api_secret:/etc/kas/.gitlab_kas_internal_api_secret\n      - ./dev/gitlab-kas/.gitlab_kas_private_api_secret:/etc/kas/.gitlab_kas_private_api_secret\n      - ./dev/gitlab-kas/.redis_password:/etc/kas/.redis_password\n  runner:\n    image: ${GITLAB_RUNNER_IMAGE}\n    depends_on:\n",
                    "rendered": {
                      "text": "      - ./dev/gitlab-kas/config.yml:/etc/kas/config.yml\n      - ./dev/gitlab-kas/.gitlab_kas_internal_api_secret:/etc/kas/.gitlab_kas_internal_api_secret\n      - ./dev/gitlab-kas/.gitlab_kas_private_api_secret:/etc/kas/.gitlab_kas_private_api_secret\n      - ./dev/gitlab-kas/.redis_password:/etc/kas/.redis_password\n  runner:\n    image: ${GITLAB_RUNNER_IMAGE}\n    depends_on:\n",
                      "markdown": "`      - ./dev/gitlab-kas/config.yml:/etc/kas/config.yml\n      - ./dev/gitlab-kas/.gitlab_kas_internal_api_secret:/etc/kas/.gitlab_kas_internal_api_secret\n      - ./dev/gitlab-kas/.gitlab_kas_private_api_secret:/etc/kas/.gitlab_kas_private_api_secret\n      - ./dev/gitlab-kas/.redis_password:/etc/kas/.redis_password\n  runner:\n    image: ${GITLAB_RUNNER_IMAGE}\n    depends_on:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docker-compose.yml"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 32,
                  "endLine": 192,
                  "endColumn": 40,
                  "snippet": {
                    "text": "      - ./dev/gitlab-kas/config.yml:/etc/kas/config.yml\n      - ./dev/gitlab-kas/.gitlab_kas_internal_api_secret:/etc/kas/.gitlab_kas_internal_api_secret\n      - ./dev/gitlab-kas/.gitlab_kas_private_api_secret:/etc/kas/.gitlab_kas_private_api_secret\n      - ./dev/gitlab-kas/.redis_password:/etc/kas/.redis_password\n  runner:\n    image: ${GITLAB_RUNNER_IMAGE}\n    depends_on:\n",
                    "rendered": {
                      "text": "      - ./dev/gitlab-kas/config.yml:/etc/kas/config.yml\n      - ./dev/gitlab-kas/.gitlab_kas_internal_api_secret:/etc/kas/.gitlab_kas_internal_api_secret\n      - ./dev/gitlab-kas/.gitlab_kas_private_api_secret:/etc/kas/.gitlab_kas_private_api_secret\n      - ./dev/gitlab-kas/.redis_password:/etc/kas/.redis_password\n  runner:\n    image: ${GITLAB_RUNNER_IMAGE}\n    depends_on:\n",
                      "markdown": "`      - ./dev/gitlab-kas/config.yml:/etc/kas/config.yml\n      - ./dev/gitlab-kas/.gitlab_kas_internal_api_secret:/etc/kas/.gitlab_kas_internal_api_secret\n      - ./dev/gitlab-kas/.gitlab_kas_private_api_secret:/etc/kas/.gitlab_kas_private_api_secret\n      - ./dev/gitlab-kas/.redis_password:/etc/kas/.redis_password\n  runner:\n    image: ${GITLAB_RUNNER_IMAGE}\n    depends_on:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docker-compose.yml"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 18,
                  "endLine": 171,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    ports:\n      - \"${REGISTRY_PORT}:5000\"\n    environment:\n      - \"REGISTRY_AUTH_TOKEN_REALM='http://localhost:${HOST_PORT}/jwt/auth'\"\n    volumes:\n      - ./dev/registry/config.yml:/etc/docker/registry/config.yml\n      - ./dev/registry/gitlab-registry.crt:/etc/docker/registry/gitlab-registry.crt\n",
                    "rendered": {
                      "text": "    ports:\n      - \"${REGISTRY_PORT}:5000\"\n    environment:\n      - \"REGISTRY_AUTH_TOKEN_REALM='http://localhost:${HOST_PORT}/jwt/auth'\"\n    volumes:\n      - ./dev/registry/config.yml:/etc/docker/registry/config.yml\n      - ./dev/registry/gitlab-registry.crt:/etc/docker/registry/gitlab-registry.crt\n",
                      "markdown": "`    ports:\n      - \"${REGISTRY_PORT}:5000\"\n    environment:\n      - \"REGISTRY_AUTH_TOKEN_REALM='http://localhost:${HOST_PORT}/jwt/auth'\"\n    volumes:\n      - ./dev/registry/config.yml:/etc/docker/registry/config.yml\n      - ./dev/registry/gitlab-registry.crt:/etc/docker/registry/gitlab-registry.crt\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docker-compose.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  postgres:\n    image: postgres:16\n    environment:\n      - \"POSTGRES_PASSWORD=meercat\"\n      - \"POSTGRES_USER=gitlab\"\n      - \"POSTGRES_DB=gitlabhq_production\"\n    volumes:\n",
                    "rendered": {
                      "text": "  postgres:\n    image: postgres:16\n    environment:\n      - \"POSTGRES_PASSWORD=meercat\"\n      - \"POSTGRES_USER=gitlab\"\n      - \"POSTGRES_DB=gitlabhq_production\"\n    volumes:\n",
                      "markdown": "`  postgres:\n    image: postgres:16\n    environment:\n      - \"POSTGRES_PASSWORD=meercat\"\n      - \"POSTGRES_USER=gitlab\"\n      - \"POSTGRES_DB=gitlabhq_production\"\n    volumes:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 454,
                  "startColumn": 29,
                  "endLine": 454,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      if [ -z \"$ACTION\" ]; then\n        ACTION=\"cleanup\"\n      else\n        echo \"Only one action at a time is supported\"\n        exit 1\n      fi\n      shift\n",
                    "rendered": {
                      "text": "      if [ -z \"$ACTION\" ]; then\n        ACTION=\"cleanup\"\n      else\n        echo \"Only one action at a time is supported\"\n        exit 1\n      fi\n      shift\n",
                      "markdown": "`      if [ -z \"$ACTION\" ]; then\n        ACTION=\"cleanup\"\n      else\n        echo \"Only one action at a time is supported\"\n        exit 1\n      fi\n      shift\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 422,
                  "startColumn": 29,
                  "endLine": 422,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      if [ -z \"$ACTION\" ]; then\n        ACTION=\"restore\"\n      else\n        echo \"Only one action at a time is supported\"\n        exit 1\n      fi\n      shift\n",
                    "rendered": {
                      "text": "      if [ -z \"$ACTION\" ]; then\n        ACTION=\"restore\"\n      else\n        echo \"Only one action at a time is supported\"\n        exit 1\n      fi\n      shift\n",
                      "markdown": "`      if [ -z \"$ACTION\" ]; then\n        ACTION=\"restore\"\n      else\n        echo \"Only one action at a time is supported\"\n        exit 1\n      fi\n      shift\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 38,
                  "endLine": 327,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        azcopy copy --block-blob-tier \"${STORAGE_CLASS}\" --output-level essential \\\n          \"${backup_tars_path}/${backup_name}.tar\" \"$(get_azure_url)/${BACKUP_BUCKET_NAME}/${backup_name}.tar?$(get_azure_token)\"\n      fi\n      echo \"[DONE] Backup can be found at ${AZURE_BASE_URL}/${BACKUP_BUCKET_NAME}/${backup_name}.tar\"\n      ;;\n    *) echo \"Unknown backend for backup: ${BACKUP_BACKEND}\" ;;\n  esac\n",
                    "rendered": {
                      "text": "        azcopy copy --block-blob-tier \"${STORAGE_CLASS}\" --output-level essential \\\n          \"${backup_tars_path}/${backup_name}.tar\" \"$(get_azure_url)/${BACKUP_BUCKET_NAME}/${backup_name}.tar?$(get_azure_token)\"\n      fi\n      echo \"[DONE] Backup can be found at ${AZURE_BASE_URL}/${BACKUP_BUCKET_NAME}/${backup_name}.tar\"\n      ;;\n    *) echo \"Unknown backend for backup: ${BACKUP_BACKEND}\" ;;\n  esac\n",
                      "markdown": "`        azcopy copy --block-blob-tier \"${STORAGE_CLASS}\" --output-level essential \\\n          \"${backup_tars_path}/${backup_name}.tar\" \"$(get_azure_url)/${BACKUP_BUCKET_NAME}/${backup_name}.tar?$(get_azure_token)\"\n      fi\n      echo \"[DONE] Backup can be found at ${AZURE_BASE_URL}/${BACKUP_BUCKET_NAME}/${backup_name}.tar\"\n      ;;\n    *) echo \"Unknown backend for backup: ${BACKUP_BACKEND}\" ;;\n  esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 38,
                  "endLine": 317,
                  "endColumn": 42,
                  "snippet": {
                    "text": "      else\n        gsutil cp -s \"${STORAGE_CLASS}\" -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      fi\n      echo \"[DONE] Backup can be found at gs://$BACKUP_BUCKET_NAME/${backup_name}.tar\"\n      ;;\n    azure)\n      if [ -z \"${STORAGE_CLASS}\" ]; then\n",
                    "rendered": {
                      "text": "      else\n        gsutil cp -s \"${STORAGE_CLASS}\" -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      fi\n      echo \"[DONE] Backup can be found at gs://$BACKUP_BUCKET_NAME/${backup_name}.tar\"\n      ;;\n    azure)\n      if [ -z \"${STORAGE_CLASS}\" ]; then\n",
                      "markdown": "`      else\n        gsutil cp -s \"${STORAGE_CLASS}\" -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      fi\n      echo \"[DONE] Backup can be found at gs://$BACKUP_BUCKET_NAME/${backup_name}.tar\"\n      ;;\n    azure)\n      if [ -z \"${STORAGE_CLASS}\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 38,
                  "endLine": 309,
                  "endColumn": 42,
                  "snippet": {
                    "text": "          ;;\n        *) echo \"Unknown S3 tool: $S3_TOOL\" ;;\n      esac\n      echo \"[DONE] Backup can be found at s3://$BACKUP_BUCKET_NAME/${backup_name}.tar\"\n      ;;\n    gcs)\n      if [ -z \"${STORAGE_CLASS}\" ]; then\n",
                    "rendered": {
                      "text": "          ;;\n        *) echo \"Unknown S3 tool: $S3_TOOL\" ;;\n      esac\n      echo \"[DONE] Backup can be found at s3://$BACKUP_BUCKET_NAME/${backup_name}.tar\"\n      ;;\n    gcs)\n      if [ -z \"${STORAGE_CLASS}\" ]; then\n",
                      "markdown": "`          ;;\n        *) echo \"Unknown S3 tool: $S3_TOOL\" ;;\n      esac\n      echo \"[DONE] Backup can be found at s3://$BACKUP_BUCKET_NAME/${backup_name}.tar\"\n      ;;\n    gcs)\n      if [ -z \"${STORAGE_CLASS}\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 500,
                  "startColumn": 37,
                  "endLine": 500,
                  "endColumn": 43,
                  "snippet": {
                    "text": "  AWS_S3_SETTINGS_LIST+=(--region ${AWS_REGION})\nfi\n\n# These variables will be used by the ruby scripts\nAWS_KMS_SETTINGS=\"${AWS_KMS_SETTINGS_LIST[*]}\"\nAWS_S3_SETTINGS=\"${AWS_S3_SETTINGS_LIST[*]}\"\n\n",
                    "rendered": {
                      "text": "  AWS_S3_SETTINGS_LIST+=(--region ${AWS_REGION})\nfi\n\n# These variables will be used by the ruby scripts\nAWS_KMS_SETTINGS=\"${AWS_KMS_SETTINGS_LIST[*]}\"\nAWS_S3_SETTINGS=\"${AWS_S3_SETTINGS_LIST[*]}\"\n\n",
                      "markdown": "`  AWS_S3_SETTINGS_LIST+=(--region ${AWS_REGION})\nfi\n\n# These variables will be used by the ruby scripts\nAWS_KMS_SETTINGS=\"${AWS_KMS_SETTINGS_LIST[*]}\"\nAWS_S3_SETTINGS=\"${AWS_S3_SETTINGS_LIST[*]}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 454,
                  "startColumn": 34,
                  "endLine": 454,
                  "endColumn": 40,
                  "snippet": {
                    "text": "      if [ -z \"$ACTION\" ]; then\n        ACTION=\"cleanup\"\n      else\n        echo \"Only one action at a time is supported\"\n        exit 1\n      fi\n      shift\n",
                    "rendered": {
                      "text": "      if [ -z \"$ACTION\" ]; then\n        ACTION=\"cleanup\"\n      else\n        echo \"Only one action at a time is supported\"\n        exit 1\n      fi\n      shift\n",
                      "markdown": "`      if [ -z \"$ACTION\" ]; then\n        ACTION=\"cleanup\"\n      else\n        echo \"Only one action at a time is supported\"\n        exit 1\n      fi\n      shift\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 422,
                  "startColumn": 34,
                  "endLine": 422,
                  "endColumn": 40,
                  "snippet": {
                    "text": "      if [ -z \"$ACTION\" ]; then\n        ACTION=\"restore\"\n      else\n        echo \"Only one action at a time is supported\"\n        exit 1\n      fi\n      shift\n",
                    "rendered": {
                      "text": "      if [ -z \"$ACTION\" ]; then\n        ACTION=\"restore\"\n      else\n        echo \"Only one action at a time is supported\"\n        exit 1\n      fi\n      shift\n",
                      "markdown": "`      if [ -z \"$ACTION\" ]; then\n        ACTION=\"restore\"\n      else\n        echo \"Only one action at a time is supported\"\n        exit 1\n      fi\n      shift\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 14,
                  "endLine": 315,
                  "endColumn": 18,
                  "snippet": {
                    "text": "      if [ -z \"${STORAGE_CLASS}\" ]; then\n        gsutil cp -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      else\n        gsutil cp -s \"${STORAGE_CLASS}\" -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      fi\n      echo \"[DONE] Backup can be found at gs://$BACKUP_BUCKET_NAME/${backup_name}.tar\"\n      ;;\n",
                    "rendered": {
                      "text": "      if [ -z \"${STORAGE_CLASS}\" ]; then\n        gsutil cp -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      else\n        gsutil cp -s \"${STORAGE_CLASS}\" -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      fi\n      echo \"[DONE] Backup can be found at gs://$BACKUP_BUCKET_NAME/${backup_name}.tar\"\n      ;;\n",
                      "markdown": "`      if [ -z \"${STORAGE_CLASS}\" ]; then\n        gsutil cp -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      else\n        gsutil cp -s \"${STORAGE_CLASS}\" -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      fi\n      echo \"[DONE] Backup can be found at gs://$BACKUP_BUCKET_NAME/${backup_name}.tar\"\n      ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 14,
                  "endLine": 313,
                  "endColumn": 18,
                  "snippet": {
                    "text": "      ;;\n    gcs)\n      if [ -z \"${STORAGE_CLASS}\" ]; then\n        gsutil cp -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      else\n        gsutil cp -s \"${STORAGE_CLASS}\" -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      fi\n",
                    "rendered": {
                      "text": "      ;;\n    gcs)\n      if [ -z \"${STORAGE_CLASS}\" ]; then\n        gsutil cp -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      else\n        gsutil cp -s \"${STORAGE_CLASS}\" -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      fi\n",
                      "markdown": "`      ;;\n    gcs)\n      if [ -z \"${STORAGE_CLASS}\" ]; then\n        gsutil cp -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      else\n        gsutil cp -s \"${STORAGE_CLASS}\" -n ${backup_tars_path}/${backup_name}.tar gs://$BACKUP_BUCKET_NAME > /dev/null\n      fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 18,
                  "endLine": 303,
                  "endColumn": 22,
                  "snippet": {
                    "text": "            aws s3 cp ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} \\\n              \"${backup_tars_path}/${backup_name}.tar\" \"s3://$BACKUP_BUCKET_NAME\" > /dev/null\n          else\n            aws s3 cp --storage-class \"${STORAGE_CLASS}\" ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} \\\n              \"${backup_tars_path}/${backup_name}.tar\" \"s3://$BACKUP_BUCKET_NAME\" > /dev/null\n          fi\n          ;;\n",
                    "rendered": {
                      "text": "            aws s3 cp ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} \\\n              \"${backup_tars_path}/${backup_name}.tar\" \"s3://$BACKUP_BUCKET_NAME\" > /dev/null\n          else\n            aws s3 cp --storage-class \"${STORAGE_CLASS}\" ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} \\\n              \"${backup_tars_path}/${backup_name}.tar\" \"s3://$BACKUP_BUCKET_NAME\" > /dev/null\n          fi\n          ;;\n",
                      "markdown": "`            aws s3 cp ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} \\\n              \"${backup_tars_path}/${backup_name}.tar\" \"s3://$BACKUP_BUCKET_NAME\" > /dev/null\n          else\n            aws s3 cp --storage-class \"${STORAGE_CLASS}\" ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} \\\n              \"${backup_tars_path}/${backup_name}.tar\" \"s3://$BACKUP_BUCKET_NAME\" > /dev/null\n          fi\n          ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 18,
                  "endLine": 300,
                  "endColumn": 22,
                  "snippet": {
                    "text": "          ;;\n        awscli)\n          if [ -z \"${STORAGE_CLASS}\" ]; then\n            aws s3 cp ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} \\\n              \"${backup_tars_path}/${backup_name}.tar\" \"s3://$BACKUP_BUCKET_NAME\" > /dev/null\n          else\n            aws s3 cp --storage-class \"${STORAGE_CLASS}\" ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} \\\n",
                    "rendered": {
                      "text": "          ;;\n        awscli)\n          if [ -z \"${STORAGE_CLASS}\" ]; then\n            aws s3 cp ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} \\\n              \"${backup_tars_path}/${backup_name}.tar\" \"s3://$BACKUP_BUCKET_NAME\" > /dev/null\n          else\n            aws s3 cp --storage-class \"${STORAGE_CLASS}\" ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} \\\n",
                      "markdown": "`          ;;\n        awscli)\n          if [ -z \"${STORAGE_CLASS}\" ]; then\n            aws s3 cp ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} \\\n              \"${backup_tars_path}/${backup_name}.tar\" \"s3://$BACKUP_BUCKET_NAME\" > /dev/null\n          else\n            aws s3 cp --storage-class \"${STORAGE_CLASS}\" ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 31,
                  "endLine": 226,
                  "endColumn": 37,
                  "snippet": {
                    "text": ":db_version: $(gitlab-rails runner \"File.write('/tmp/db_version', ActiveRecord::Migrator.current_version.to_s)\" && cat /tmp/db_version)\n:backup_created_at: $(date --date=\"@$start_timestamp\" \"+%Y-%m-%d %H:%M:%S %z\")\n:gitlab_version: $(get_version)\n:tar_version: $(tar --version | head -n 1)\n:installation_type: gitlab-helm-chart\n:skipped: $1\n:repositories_server_side: $(are_repositories_server_side)\n",
                    "rendered": {
                      "text": ":db_version: $(gitlab-rails runner \"File.write('/tmp/db_version', ActiveRecord::Migrator.current_version.to_s)\" && cat /tmp/db_version)\n:backup_created_at: $(date --date=\"@$start_timestamp\" \"+%Y-%m-%d %H:%M:%S %z\")\n:gitlab_version: $(get_version)\n:tar_version: $(tar --version | head -n 1)\n:installation_type: gitlab-helm-chart\n:skipped: $1\n:repositories_server_side: $(are_repositories_server_side)\n",
                      "markdown": "`:db_version: $(gitlab-rails runner \"File.write('/tmp/db_version', ActiveRecord::Migrator.current_version.to_s)\" && cat /tmp/db_version)\n:backup_created_at: $(date --date=\"@$start_timestamp\" \"+%Y-%m-%d %H:%M:%S %z\")\n:gitlab_version: $(get_version)\n:tar_version: $(tar --version | head -n 1)\n:installation_type: gitlab-helm-chart\n:skipped: $1\n:repositories_server_side: $(are_repositories_server_side)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 114,
                  "endLine": 223,
                  "endColumn": 119,
                  "snippet": {
                    "text": "function write_backup_info(){\n  cat << EOF > $backups_path/backup_information.yml\n:backup_id: $(get_backup_id)\n:db_version: $(gitlab-rails runner \"File.write('/tmp/db_version', ActiveRecord::Migrator.current_version.to_s)\" && cat /tmp/db_version)\n:backup_created_at: $(date --date=\"@$start_timestamp\" \"+%Y-%m-%d %H:%M:%S %z\")\n:gitlab_version: $(get_version)\n:tar_version: $(tar --version | head -n 1)\n",
                    "rendered": {
                      "text": "function write_backup_info(){\n  cat << EOF > $backups_path/backup_information.yml\n:backup_id: $(get_backup_id)\n:db_version: $(gitlab-rails runner \"File.write('/tmp/db_version', ActiveRecord::Migrator.current_version.to_s)\" && cat /tmp/db_version)\n:backup_created_at: $(date --date=\"@$start_timestamp\" \"+%Y-%m-%d %H:%M:%S %z\")\n:gitlab_version: $(get_version)\n:tar_version: $(tar --version | head -n 1)\n",
                      "markdown": "`function write_backup_info(){\n  cat << EOF > $backups_path/backup_information.yml\n:backup_id: $(get_backup_id)\n:db_version: $(gitlab-rails runner \"File.write('/tmp/db_version', ActiveRecord::Migrator.current_version.to_s)\" && cat /tmp/db_version)\n:backup_created_at: $(date --date=\"@$start_timestamp\" \"+%Y-%m-%d %H:%M:%S %z\")\n:gitlab_version: $(get_version)\n:tar_version: $(tar --version | head -n 1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 1,
                  "endLine": 221,
                  "endColumn": 6,
                  "snippet": {
                    "text": "}\n\nfunction write_backup_info(){\n  cat << EOF > $backups_path/backup_information.yml\n:backup_id: $(get_backup_id)\n:db_version: $(gitlab-rails runner \"File.write('/tmp/db_version', ActiveRecord::Migrator.current_version.to_s)\" && cat /tmp/db_version)\n:backup_created_at: $(date --date=\"@$start_timestamp\" \"+%Y-%m-%d %H:%M:%S %z\")\n",
                    "rendered": {
                      "text": "}\n\nfunction write_backup_info(){\n  cat << EOF > $backups_path/backup_information.yml\n:backup_id: $(get_backup_id)\n:db_version: $(gitlab-rails runner \"File.write('/tmp/db_version', ActiveRecord::Migrator.current_version.to_s)\" && cat /tmp/db_version)\n:backup_created_at: $(date --date=\"@$start_timestamp\" \"+%Y-%m-%d %H:%M:%S %z\")\n",
                      "markdown": "`}\n\nfunction write_backup_info(){\n  cat << EOF > $backups_path/backup_information.yml\n:backup_id: $(get_backup_id)\n:db_version: $(gitlab-rails runner \"File.write('/tmp/db_version', ActiveRecord::Migrator.current_version.to_s)\" && cat /tmp/db_version)\n:backup_created_at: $(date --date=\"@$start_timestamp\" \"+%Y-%m-%d %H:%M:%S %z\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 114,
                  "endLine": 153,
                  "endColumn": 120,
                  "snippet": {
                    "text": "          existing_backups=($(s3cmd ${S3_CMD_BACKUP_OPTION} ls s3://$BACKUP_BUCKET_NAME --rinclude '^\\d{10}_\\d{4}_\\d{2}_\\d{2}_.+_gitlab_backup.tar$' | awk '{print $4}' | LC_ALL=C sort))\n          ;;\n        awscli)\n          existing_backups=($(aws s3 ls ${AWS_S3_SETTINGS_LIST[@]} \"s3://$BACKUP_BUCKET_NAME\" | awk '{print $4}' | grep -E '^[0-9]{10}_[0-9]{4}_[0-9]{2}_[0-9]{2}_.+_gitlab_backup.tar$' | LC_ALL=C sort))\n          ;;\n        *)\n          echo \"Unknown S3 tool: ${S3_TOOL}\"\n",
                    "rendered": {
                      "text": "          existing_backups=($(s3cmd ${S3_CMD_BACKUP_OPTION} ls s3://$BACKUP_BUCKET_NAME --rinclude '^\\d{10}_\\d{4}_\\d{2}_\\d{2}_.+_gitlab_backup.tar$' | awk '{print $4}' | LC_ALL=C sort))\n          ;;\n        awscli)\n          existing_backups=($(aws s3 ls ${AWS_S3_SETTINGS_LIST[@]} \"s3://$BACKUP_BUCKET_NAME\" | awk '{print $4}' | grep -E '^[0-9]{10}_[0-9]{4}_[0-9]{2}_[0-9]{2}_.+_gitlab_backup.tar$' | LC_ALL=C sort))\n          ;;\n        *)\n          echo \"Unknown S3 tool: ${S3_TOOL}\"\n",
                      "markdown": "`          existing_backups=($(s3cmd ${S3_CMD_BACKUP_OPTION} ls s3://$BACKUP_BUCKET_NAME --rinclude '^\\d{10}_\\d{4}_\\d{2}_\\d{2}_.+_gitlab_backup.tar$' | awk '{print $4}' | LC_ALL=C sort))\n          ;;\n        awscli)\n          existing_backups=($(aws s3 ls ${AWS_S3_SETTINGS_LIST[@]} \"s3://$BACKUP_BUCKET_NAME\" | awk '{print $4}' | grep -E '^[0-9]{10}_[0-9]{4}_[0-9]{2}_[0-9]{2}_.+_gitlab_backup.tar$' | LC_ALL=C sort))\n          ;;\n        *)\n          echo \"Unknown S3 tool: ${S3_TOOL}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 95,
                  "endLine": 153,
                  "endColumn": 100,
                  "snippet": {
                    "text": "          existing_backups=($(s3cmd ${S3_CMD_BACKUP_OPTION} ls s3://$BACKUP_BUCKET_NAME --rinclude '^\\d{10}_\\d{4}_\\d{2}_\\d{2}_.+_gitlab_backup.tar$' | awk '{print $4}' | LC_ALL=C sort))\n          ;;\n        awscli)\n          existing_backups=($(aws s3 ls ${AWS_S3_SETTINGS_LIST[@]} \"s3://$BACKUP_BUCKET_NAME\" | awk '{print $4}' | grep -E '^[0-9]{10}_[0-9]{4}_[0-9]{2}_[0-9]{2}_.+_gitlab_backup.tar$' | LC_ALL=C sort))\n          ;;\n        *)\n          echo \"Unknown S3 tool: ${S3_TOOL}\"\n",
                    "rendered": {
                      "text": "          existing_backups=($(s3cmd ${S3_CMD_BACKUP_OPTION} ls s3://$BACKUP_BUCKET_NAME --rinclude '^\\d{10}_\\d{4}_\\d{2}_\\d{2}_.+_gitlab_backup.tar$' | awk '{print $4}' | LC_ALL=C sort))\n          ;;\n        awscli)\n          existing_backups=($(aws s3 ls ${AWS_S3_SETTINGS_LIST[@]} \"s3://$BACKUP_BUCKET_NAME\" | awk '{print $4}' | grep -E '^[0-9]{10}_[0-9]{4}_[0-9]{2}_[0-9]{2}_.+_gitlab_backup.tar$' | LC_ALL=C sort))\n          ;;\n        *)\n          echo \"Unknown S3 tool: ${S3_TOOL}\"\n",
                      "markdown": "`          existing_backups=($(s3cmd ${S3_CMD_BACKUP_OPTION} ls s3://$BACKUP_BUCKET_NAME --rinclude '^\\d{10}_\\d{4}_\\d{2}_\\d{2}_.+_gitlab_backup.tar$' | awk '{print $4}' | LC_ALL=C sort))\n          ;;\n        awscli)\n          existing_backups=($(aws s3 ls ${AWS_S3_SETTINGS_LIST[@]} \"s3://$BACKUP_BUCKET_NAME\" | awk '{print $4}' | grep -E '^[0-9]{10}_[0-9]{4}_[0-9]{2}_[0-9]{2}_.+_gitlab_backup.tar$' | LC_ALL=C sort))\n          ;;\n        *)\n          echo \"Unknown S3 tool: ${S3_TOOL}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 150,
                  "endLine": 150,
                  "endColumn": 155,
                  "snippet": {
                    "text": "    s3)\n      case \"$S3_TOOL\" in\n        s3cmd)\n          existing_backups=($(s3cmd ${S3_CMD_BACKUP_OPTION} ls s3://$BACKUP_BUCKET_NAME --rinclude '^\\d{10}_\\d{4}_\\d{2}_\\d{2}_.+_gitlab_backup.tar$' | awk '{print $4}' | LC_ALL=C sort))\n          ;;\n        awscli)\n          existing_backups=($(aws s3 ls ${AWS_S3_SETTINGS_LIST[@]} \"s3://$BACKUP_BUCKET_NAME\" | awk '{print $4}' | grep -E '^[0-9]{10}_[0-9]{4}_[0-9]{2}_[0-9]{2}_.+_gitlab_backup.tar$' | LC_ALL=C sort))\n",
                    "rendered": {
                      "text": "    s3)\n      case \"$S3_TOOL\" in\n        s3cmd)\n          existing_backups=($(s3cmd ${S3_CMD_BACKUP_OPTION} ls s3://$BACKUP_BUCKET_NAME --rinclude '^\\d{10}_\\d{4}_\\d{2}_\\d{2}_.+_gitlab_backup.tar$' | awk '{print $4}' | LC_ALL=C sort))\n          ;;\n        awscli)\n          existing_backups=($(aws s3 ls ${AWS_S3_SETTINGS_LIST[@]} \"s3://$BACKUP_BUCKET_NAME\" | awk '{print $4}' | grep -E '^[0-9]{10}_[0-9]{4}_[0-9]{2}_[0-9]{2}_.+_gitlab_backup.tar$' | LC_ALL=C sort))\n",
                      "markdown": "`    s3)\n      case \"$S3_TOOL\" in\n        s3cmd)\n          existing_backups=($(s3cmd ${S3_CMD_BACKUP_OPTION} ls s3://$BACKUP_BUCKET_NAME --rinclude '^\\d{10}_\\d{4}_\\d{2}_\\d{2}_.+_gitlab_backup.tar$' | awk '{print $4}' | LC_ALL=C sort))\n          ;;\n        awscli)\n          existing_backups=($(aws s3 ls ${AWS_S3_SETTINGS_LIST[@]} \"s3://$BACKUP_BUCKET_NAME\" | awk '{print $4}' | grep -E '^[0-9]{10}_[0-9]{4}_[0-9]{2}_[0-9]{2}_.+_gitlab_backup.tar$' | LC_ALL=C sort))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 93,
                  "endLine": 145,
                  "snippet": {
                    "text": "}\n\nfunction get_existing_backups(){\n  # This will only match backups with the same naming convention as backups generated by this script\n  # Example: TIMESTAMP_YYYY_MM_DD_VERSION_gitlab_backup.tar\n  case $BACKUP_BACKEND in\n    s3)\n      case \"$S3_TOOL\" in\n",
                    "rendered": {
                      "text": "}\n\nfunction get_existing_backups(){\n  # This will only match backups with the same naming convention as backups generated by this script\n  # Example: TIMESTAMP_YYYY_MM_DD_VERSION_gitlab_backup.tar\n  case $BACKUP_BACKEND in\n    s3)\n      case \"$S3_TOOL\" in\n",
                      "markdown": "`}\n\nfunction get_existing_backups(){\n  # This will only match backups with the same naming convention as backups generated by this script\n  # Example: TIMESTAMP_YYYY_MM_DD_VERSION_gitlab_backup.tar\n  case $BACKUP_BACKEND in\n    s3)\n      case \"$S3_TOOL\" in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 1,
                  "endLine": 116,
                  "endColumn": 6,
                  "snippet": {
                    "text": "}\n\nfunction get_version(){\n  cat $rails_dir/VERSION\n}\n\nfunction get_azure_url(){\n",
                    "rendered": {
                      "text": "}\n\nfunction get_version(){\n  cat $rails_dir/VERSION\n}\n\nfunction get_azure_url(){\n",
                      "markdown": "`}\n\nfunction get_version(){\n  cat $rails_dir/VERSION\n}\n\nfunction get_azure_url(){\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 1,
                  "endLine": 112,
                  "endColumn": 6,
                  "snippet": {
                    "text": "function pack_backup(){\n  echo \"Packing up backup tar\"\n  local backup_name=$1\n  tar -cf ${backup_tars_path}/${backup_name}.tar -C $backups_path .\n}\n\nfunction get_version(){\n",
                    "rendered": {
                      "text": "function pack_backup(){\n  echo \"Packing up backup tar\"\n  local backup_name=$1\n  tar -cf ${backup_tars_path}/${backup_name}.tar -C $backups_path .\n}\n\nfunction get_version(){\n",
                      "markdown": "`function pack_backup(){\n  echo \"Packing up backup tar\"\n  local backup_name=$1\n  tar -cf ${backup_tars_path}/${backup_name}.tar -C $backups_path .\n}\n\nfunction get_version(){\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 1,
                  "endLine": 106,
                  "endColumn": 6,
                  "snippet": {
                    "text": "    exit 1\n  fi\n\n  tar -xf $file_path\n}\n\nfunction pack_backup(){\n",
                    "rendered": {
                      "text": "    exit 1\n  fi\n\n  tar -xf $file_path\n}\n\nfunction pack_backup(){\n",
                      "markdown": "`    exit 1\n  fi\n\n  tar -xf $file_path\n}\n\nfunction pack_backup(){\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 17,
                  "endLine": 86,
                  "endColumn": 21,
                  "snippet": {
                    "text": "          *) echo \"Unknown S3 tool: ${S3_TOOL}\" ;;\n        esac\n        ;;\n      gcs) gsutil cp \"gs://$BACKUP_BUCKET_NAME/$file_name\" $output_path > /dev/null ;;\n      azure)\n        azcopy copy \"$(get_azure_url)/${BACKUP_BUCKET_NAME}/${file_name}?$(get_azure_token)\" ${output_path} --output-level quiet ;;\n      *) echo \"Unknown backend: ${BACKUP_BACKEND}\" ;;\n",
                    "rendered": {
                      "text": "          *) echo \"Unknown S3 tool: ${S3_TOOL}\" ;;\n        esac\n        ;;\n      gcs) gsutil cp \"gs://$BACKUP_BUCKET_NAME/$file_name\" $output_path > /dev/null ;;\n      azure)\n        azcopy copy \"$(get_azure_url)/${BACKUP_BUCKET_NAME}/${file_name}?$(get_azure_token)\" ${output_path} --output-level quiet ;;\n      *) echo \"Unknown backend: ${BACKUP_BACKEND}\" ;;\n",
                      "markdown": "`          *) echo \"Unknown S3 tool: ${S3_TOOL}\" ;;\n        esac\n        ;;\n      gcs) gsutil cp \"gs://$BACKUP_BUCKET_NAME/$file_name\" $output_path > /dev/null ;;\n      azure)\n        azcopy copy \"$(get_azure_url)/${BACKUP_BUCKET_NAME}/${file_name}?$(get_azure_token)\" ${output_path} --output-level quiet ;;\n      *) echo \"Unknown backend: ${BACKUP_BACKEND}\" ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 24,
                  "endLine": 82,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      s3)\n        case \"$S3_TOOL\" in\n          s3cmd) s3cmd ${S3_CMD_BACKUP_OPTION} get \"s3://$BACKUP_BUCKET_NAME/$file_name\" $output_path > /dev/null ;;\n          awscli) aws s3 cp \"s3://$BACKUP_BUCKET_NAME/$file_name\" $output_path ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} > /dev/null ;;\n          *) echo \"Unknown S3 tool: ${S3_TOOL}\" ;;\n        esac\n        ;;\n",
                    "rendered": {
                      "text": "      s3)\n        case \"$S3_TOOL\" in\n          s3cmd) s3cmd ${S3_CMD_BACKUP_OPTION} get \"s3://$BACKUP_BUCKET_NAME/$file_name\" $output_path > /dev/null ;;\n          awscli) aws s3 cp \"s3://$BACKUP_BUCKET_NAME/$file_name\" $output_path ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} > /dev/null ;;\n          *) echo \"Unknown S3 tool: ${S3_TOOL}\" ;;\n        esac\n        ;;\n",
                      "markdown": "`      s3)\n        case \"$S3_TOOL\" in\n          s3cmd) s3cmd ${S3_CMD_BACKUP_OPTION} get \"s3://$BACKUP_BUCKET_NAME/$file_name\" $output_path > /dev/null ;;\n          awscli) aws s3 cp \"s3://$BACKUP_BUCKET_NAME/$file_name\" $output_path ${AWS_S3_SETTINGS_LIST[@]} ${AWS_KMS_SETTINGS_LIST[@]} > /dev/null ;;\n          *) echo \"Unknown S3 tool: ${S3_TOOL}\" ;;\n        esac\n        ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 3,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n  if is_url $1; then\n    >&2 echo \"Downloading from $1\";\n    curl -f --retry 6 --progress-bar -o $output_path $1\n  else # It's a timestamp\n    file_name=\"$1_gitlab_backup.tar\"\n    case \"$BACKUP_BACKEND\" in\n",
                    "rendered": {
                      "text": "\n  if is_url $1; then\n    >&2 echo \"Downloading from $1\";\n    curl -f --retry 6 --progress-bar -o $output_path $1\n  else # It's a timestamp\n    file_name=\"$1_gitlab_backup.tar\"\n    case \"$BACKUP_BACKEND\" in\n",
                      "markdown": "`\n  if is_url $1; then\n    >&2 echo \"Downloading from $1\";\n    curl -f --retry 6 --progress-bar -o $output_path $1\n  else # It's a timestamp\n    file_name=\"$1_gitlab_backup.tar\"\n    case \"$BACKUP_BACKEND\" in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/backup-utility"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 1,
                  "endLine": 25,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nfunction usage()\n{\n  cat << HEREDOC\n\n   Usage: backup-utility [--restore|--cleanup] [-f URL] [-t TIMESTAMP] [--skip COMPONENT] [--backend BACKEND] [--s3config CONFIG]\n\n",
                    "rendered": {
                      "text": "\nfunction usage()\n{\n  cat << HEREDOC\n\n   Usage: backup-utility [--restore|--cleanup] [-f URL] [-t TIMESTAMP] [--skip COMPONENT] [--backend BACKEND] [--s3config CONFIG]\n\n",
                      "markdown": "`\nfunction usage()\n{\n  cat << HEREDOC\n\n   Usage: backup-utility [--restore|--cleanup] [-f URL] [-t TIMESTAMP] [--skip COMPONENT] [--backend BACKEND] [--s3config CONFIG]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/scripts/bin/object-storage-azure-url"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env ruby\n\nrequire 'object_storage_azure'\n\nconfig = ENV['AZURE_CONFIG_FILE'] || \"/etc/gitlab/objectstorage/azure_config\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env ruby\n\nrequire 'object_storage_azure'\n\nconfig = ENV['AZURE_CONFIG_FILE'] || \"/etc/gitlab/objectstorage/azure_config\"\n",
                      "markdown": "`#!/usr/bin/env ruby\n\nrequire 'object_storage_azure'\n\nconfig = ENV['AZURE_CONFIG_FILE'] || \"/etc/gitlab/objectstorage/azure_config\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/merge_request_templates/Default.md"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 44,
                  "endLine": 1,
                  "endColumn": 52,
                  "snippet": {
                    "text": "<!-- After merging changes to this template, update the `Default description template for merge requests` -->\n<!-- found under Settings - General Merge Requests -->\n## What does this MR do?\n\n",
                    "rendered": {
                      "text": "<!-- After merging changes to this template, update the `Default description template for merge requests` -->\n<!-- found under Settings - General Merge Requests -->\n## What does this MR do?\n\n",
                      "markdown": "`<!-- After merging changes to this template, update the `Default description template for merge requests` -->\n<!-- found under Settings - General Merge Requests -->\n## What does this MR do?\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/issue_templates/Security developer workflow.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 4,
                  "endLine": 28,
                  "endColumn": 8,
                  "snippet": {
                    "text": "and by a team member of the AppSec team, you're ready to prepare the backports\n\n#### Backports\n\n- [ ] Once the MR is ready to be merged, create MRs targeting the latest 3 stable branches\n   * The 3 stable branches correspond to the versions in the title of the [Security Release Tracking Issue].\n   * At this point, it might be easy to squash the commits from the MR into one\n   * Depending on when development is happening, you may need to wait for the last stable branch to be created. If the ~\"security-notifications\" label is applied to this issue, you will receive a ping when the branch is created.",
                    "rendered": {
                      "text": "and by a team member of the AppSec team, you're ready to prepare the backports\n\n#### Backports\n\n- [ ] Once the MR is ready to be merged, create MRs targeting the latest 3 stable branches\n   * The 3 stable branches correspond to the versions in the title of the [Security Release Tracking Issue].\n   * At this point, it might be easy to squash the commits from the MR into one\n   * Depending on when development is happening, you may need to wait for the last stable branch to be created. If the ~\"security-notifications\" label is applied to this issue, you will receive a ping when the branch is created.",
                      "markdown": "`and by a team member of the AppSec team, you're ready to prepare the backports\n\n#### Backports\n\n- [ ] Once the MR is ready to be merged, create MRs targeting the latest 3 stable branches\n   * The 3 stable branches correspond to the versions in the title of the [Security Release Tracking Issue].\n   * At this point, it might be easy to squash the commits from the MR into one\n   * Depending on when development is happening, you may need to wait for the last stable branch to be created. If the ~\"security-notifications\" label is applied to this issue, you will receive a ping when the branch is created.`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/issue_templates/Security developer workflow.md"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 41,
                  "endLine": 45,
                  "endColumn": 46,
                  "snippet": {
                    "text": " explaining what needs to be done. \n   * This issue will only be included in a security release if it is successfully linked to the security release tracking issue.\n\n#### Documentation and final details\n\n- [ ] Ensure the [Links section](#links) is completed.\n- [ ] Find out the versions affected (the Git history of the files affected may help you with this) and add them to the [details section](#details)\n- [ ] Fill in any upgrade notes that users may need to take into account in the [details section](#details)\n- [ ] Add Yes/No and further details if needed to the migration and settings columns in th",
                    "rendered": {
                      "text": " explaining what needs to be done. \n   * This issue will only be included in a security release if it is successfully linked to the security release tracking issue.\n\n#### Documentation and final details\n\n- [ ] Ensure the [Links section](#links) is completed.\n- [ ] Find out the versions affected (the Git history of the files affected may help you with this) and add them to the [details section](#details)\n- [ ] Fill in any upgrade notes that users may need to take into account in the [details section](#details)\n- [ ] Add Yes/No and further details if needed to the migration and settings columns in th",
                      "markdown": "` explaining what needs to be done. \n   * This issue will only be included in a security release if it is successfully linked to the security release tracking issue.\n\n#### Documentation and final details\n\n- [ ] Ensure the [Links section](#links) is completed.\n- [ ] Find out the versions affected (the Git history of the files affected may help you with this) and add them to the [details section](#details)\n- [ ] Fill in any upgrade notes that users may need to take into account in the [details section](#details)\n- [ ] Add Yes/No and further details if needed to the migration and settings columns in th`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/issue_templates/Security developer workflow.md"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 5,
                  "endLine": 45,
                  "endColumn": 11,
                  "snippet": {
                    "text": "it will leave a comment on the issue explaining what needs to be done. \n   * This issue will only be included in a security release if it is successfully linked to the security release tracking issue.\n\n#### Documentation and final details\n\n- [ ] Ensure the [Links section](#links) is completed.\n- [ ] Find out the versions affected (the Git history of the files affected may help you with this) and add them to the [details section](#details)\n- [ ] Fill in any upgrade notes that users may need to take into account in the [details section](#details)\n- [ ] Add Yes/No and further details if needed to the m",
                    "rendered": {
                      "text": "it will leave a comment on the issue explaining what needs to be done. \n   * This issue will only be included in a security release if it is successfully linked to the security release tracking issue.\n\n#### Documentation and final details\n\n- [ ] Ensure the [Links section](#links) is completed.\n- [ ] Find out the versions affected (the Git history of the files affected may help you with this) and add them to the [details section](#details)\n- [ ] Fill in any upgrade notes that users may need to take into account in the [details section](#details)\n- [ ] Add Yes/No and further details if needed to the m",
                      "markdown": "`it will leave a comment on the issue explaining what needs to be done. \n   * This issue will only be included in a security release if it is successfully linked to the security release tracking issue.\n\n#### Documentation and final details\n\n- [ ] Ensure the [Links section](#links) is completed.\n- [ ] Find out the versions affected (the Git history of the files affected may help you with this) and add them to the [details section](#details)\n- [ ] Fill in any upgrade notes that users may need to take into account in the [details section](#details)\n- [ ] Add Yes/No and further details if needed to the m`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/fips.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 75,
                  "endLine": 35,
                  "endColumn": 83,
                  "snippet": {
                    "text": "    - BUILD_IMAGE_VERSION=\"$(get_version gitlab-ubi-builder)\"\n    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n  after_script:\n    - if [[ \"${CI_COMMIT_TAG}\" == *-fips || \"${CI_COMMIT_REF_NAME}\" == *-fips ]]; then\n",
                    "rendered": {
                      "text": "    - BUILD_IMAGE_VERSION=\"$(get_version gitlab-ubi-builder)\"\n    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n  after_script:\n    - if [[ \"${CI_COMMIT_TAG}\" == *-fips || \"${CI_COMMIT_REF_NAME}\" == *-fips ]]; then\n",
                      "markdown": "`    - BUILD_IMAGE_VERSION=\"$(get_version gitlab-ubi-builder)\"\n    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n  after_script:\n    - if [[ \"${CI_COMMIT_TAG}\" == *-fips || \"${CI_COMMIT_REF_NAME}\" == *-fips ]]; then\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/fips.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 5,
                  "endLine": 36,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n  after_script:\n    - if [[ \"${CI_COMMIT_TAG}\" == *-fips || \"${CI_COMMIT_REF_NAME}\" == *-fips ]]; then\n    -   export FIPS_PIPELINE=\"true\"\n",
                    "rendered": {
                      "text": "    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n  after_script:\n    - if [[ \"${CI_COMMIT_TAG}\" == *-fips || \"${CI_COMMIT_REF_NAME}\" == *-fips ]]; then\n    -   export FIPS_PIPELINE=\"true\"\n",
                      "markdown": "`    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n  after_script:\n    - if [[ \"${CI_COMMIT_TAG}\" == *-fips || \"${CI_COMMIT_REF_NAME}\" == *-fips ]]; then\n    -   export FIPS_PIPELINE=\"true\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/fips.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 5,
                  "endLine": 35,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    - BUILD_IMAGE_VERSION=\"$(get_version gitlab-ubi-builder)\"\n    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n  after_script:\n    - if [[ \"${CI_COMMIT_TAG}\" == *-fips || \"${CI_COMMIT_REF_NAME}\" == *-fips ]]; then\n",
                    "rendered": {
                      "text": "    - BUILD_IMAGE_VERSION=\"$(get_version gitlab-ubi-builder)\"\n    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n  after_script:\n    - if [[ \"${CI_COMMIT_TAG}\" == *-fips || \"${CI_COMMIT_REF_NAME}\" == *-fips ]]; then\n",
                      "markdown": "`    - BUILD_IMAGE_VERSION=\"$(get_version gitlab-ubi-builder)\"\n    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n  after_script:\n    - if [[ \"${CI_COMMIT_TAG}\" == *-fips || \"${CI_COMMIT_REF_NAME}\" == *-fips ]]; then\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/fips.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 36,
                  "endLine": 16,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    # in the gitlab-ee pipeline.\n    - |\n      if [[ $CI_COMMIT_TAG =~ $AUTO_DEPLOY_TAG_REGEX ]]; then\n        echo \"Setting COMPILE_ASSETS env variable for auto-deploy\"\n        export COMPILE_ASSETS=true\n      fi\n    - mkdir -p artifacts/images artifacts/container_versions\n",
                    "rendered": {
                      "text": "    # in the gitlab-ee pipeline.\n    - |\n      if [[ $CI_COMMIT_TAG =~ $AUTO_DEPLOY_TAG_REGEX ]]; then\n        echo \"Setting COMPILE_ASSETS env variable for auto-deploy\"\n        export COMPILE_ASSETS=true\n      fi\n    - mkdir -p artifacts/images artifacts/container_versions\n",
                      "markdown": "`    # in the gitlab-ee pipeline.\n    - |\n      if [[ $CI_COMMIT_TAG =~ $AUTO_DEPLOY_TAG_REGEX ]]; then\n        echo \"Setting COMPILE_ASSETS env variable for auto-deploy\"\n        export COMPILE_ASSETS=true\n      fi\n    - mkdir -p artifacts/images artifacts/container_versions\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/ubi.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 633,
                  "startColumn": 59,
                  "endLine": 633,
                  "endColumn": 67,
                  "snippet": {
                    "text": "      - reports/*\n  dependencies: []\n  before_script:\n    - podman login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}\n    - '[[ -d reports ]] || mkdir reports'\n  script:\n    - 'echo \"Scanning image: ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_COMMIT_REF_NAME}\"'\n",
                    "rendered": {
                      "text": "      - reports/*\n  dependencies: []\n  before_script:\n    - podman login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}\n    - '[[ -d reports ]] || mkdir reports'\n  script:\n    - 'echo \"Scanning image: ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_COMMIT_REF_NAME}\"'\n",
                      "markdown": "`      - reports/*\n  dependencies: []\n  before_script:\n    - podman login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}\n    - '[[ -d reports ]] || mkdir reports'\n  script:\n    - 'echo \"Scanning image: ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_COMMIT_REF_NAME}\"'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/ubi.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 75,
                  "endLine": 47,
                  "endColumn": 83,
                  "snippet": {
                    "text": "    - BUILD_IMAGE_VERSION=\"$(get_version gitlab-ubi-builder)\"\n    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n    \n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    - list_artifacts ubi\n  after_script:\n",
                    "rendered": {
                      "text": "    - BUILD_IMAGE_VERSION=\"$(get_version gitlab-ubi-builder)\"\n    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n    \n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    - list_artifacts ubi\n  after_script:\n",
                      "markdown": "`    - BUILD_IMAGE_VERSION=\"$(get_version gitlab-ubi-builder)\"\n    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n    \n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    - list_artifacts ubi\n  after_script:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/ubi.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 618,
                  "startColumn": 5,
                  "endLine": 618,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  script:\n    - export AWS_ACCESS_KEY_ID=\"${UBI_ASSETS_AWS_ACCESS_KEY_ID}\"\n    - export AWS_SECRET_ACCESS_KEY=\"${UBI_ASSETS_AWS_SECRET_ACCESS_KEY}\"\n    - bash build-scripts/ubi-offline/assets-release.sh\n    - rm -rf artifacts/*\n\n.preflight-certification:\n",
                    "rendered": {
                      "text": "  script:\n    - export AWS_ACCESS_KEY_ID=\"${UBI_ASSETS_AWS_ACCESS_KEY_ID}\"\n    - export AWS_SECRET_ACCESS_KEY=\"${UBI_ASSETS_AWS_SECRET_ACCESS_KEY}\"\n    - bash build-scripts/ubi-offline/assets-release.sh\n    - rm -rf artifacts/*\n\n.preflight-certification:\n",
                      "markdown": "`  script:\n    - export AWS_ACCESS_KEY_ID=\"${UBI_ASSETS_AWS_ACCESS_KEY_ID}\"\n    - export AWS_SECRET_ACCESS_KEY=\"${UBI_ASSETS_AWS_SECRET_ACCESS_KEY}\"\n    - bash build-scripts/ubi-offline/assets-release.sh\n    - rm -rf artifacts/*\n\n.preflight-certification:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/ubi.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 618,
                  "startColumn": 5,
                  "endLine": 618,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  script:\n    - export AWS_ACCESS_KEY_ID=\"${UBI_ASSETS_AWS_ACCESS_KEY_ID}\"\n    - export AWS_SECRET_ACCESS_KEY=\"${UBI_ASSETS_AWS_SECRET_ACCESS_KEY}\"\n    - bash build-scripts/ubi-offline/assets-release.sh\n    - rm -rf artifacts/*\n\n.preflight-certification:\n",
                    "rendered": {
                      "text": "  script:\n    - export AWS_ACCESS_KEY_ID=\"${UBI_ASSETS_AWS_ACCESS_KEY_ID}\"\n    - export AWS_SECRET_ACCESS_KEY=\"${UBI_ASSETS_AWS_SECRET_ACCESS_KEY}\"\n    - bash build-scripts/ubi-offline/assets-release.sh\n    - rm -rf artifacts/*\n\n.preflight-certification:\n",
                      "markdown": "`  script:\n    - export AWS_ACCESS_KEY_ID=\"${UBI_ASSETS_AWS_ACCESS_KEY_ID}\"\n    - export AWS_SECRET_ACCESS_KEY=\"${UBI_ASSETS_AWS_SECRET_ACCESS_KEY}\"\n    - bash build-scripts/ubi-offline/assets-release.sh\n    - rm -rf artifacts/*\n\n.preflight-certification:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/ubi.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 12,
                  "endLine": 612,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    - export UBI_RELEASE_TAG=${CI_COMMIT_TAG:-master}\n    - export AWS_ACCESS_KEY_ID=\"${GPG_KEY_AWS_ACCESS_KEY_ID}\"\n    - export AWS_SECRET_ACCESS_KEY=\"${GPG_KEY_AWS_SECRET_ACCESS_KEY}\"\n    - aws s3 cp --quiet ${GPG_KEY_LOCATION} /tmp/private.pem\n    - gpg --batch --import /tmp/private.pem\n    - rm /tmp/private.pem\n  script:\n",
                    "rendered": {
                      "text": "    - export UBI_RELEASE_TAG=${CI_COMMIT_TAG:-master}\n    - export AWS_ACCESS_KEY_ID=\"${GPG_KEY_AWS_ACCESS_KEY_ID}\"\n    - export AWS_SECRET_ACCESS_KEY=\"${GPG_KEY_AWS_SECRET_ACCESS_KEY}\"\n    - aws s3 cp --quiet ${GPG_KEY_LOCATION} /tmp/private.pem\n    - gpg --batch --import /tmp/private.pem\n    - rm /tmp/private.pem\n  script:\n",
                      "markdown": "`    - export UBI_RELEASE_TAG=${CI_COMMIT_TAG:-master}\n    - export AWS_ACCESS_KEY_ID=\"${GPG_KEY_AWS_ACCESS_KEY_ID}\"\n    - export AWS_SECRET_ACCESS_KEY=\"${GPG_KEY_AWS_SECRET_ACCESS_KEY}\"\n    - aws s3 cp --quiet ${GPG_KEY_LOCATION} /tmp/private.pem\n    - gpg --batch --import /tmp/private.pem\n    - rm /tmp/private.pem\n  script:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/ubi.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 5,
                  "endLine": 48,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n    \n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    - list_artifacts ubi\n  after_script:\n    # Variables set in `before_script` aren't available in `after_script`.\n",
                    "rendered": {
                      "text": "    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n    \n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    - list_artifacts ubi\n  after_script:\n    # Variables set in `before_script` aren't available in `after_script`.\n",
                      "markdown": "`    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n    \n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    - list_artifacts ubi\n  after_script:\n    # Variables set in `before_script` aren't available in `after_script`.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/ubi.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 5,
                  "endLine": 47,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    - BUILD_IMAGE_VERSION=\"$(get_version gitlab-ubi-builder)\"\n    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n    \n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    - list_artifacts ubi\n  after_script:\n",
                    "rendered": {
                      "text": "    - BUILD_IMAGE_VERSION=\"$(get_version gitlab-ubi-builder)\"\n    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n    \n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    - list_artifacts ubi\n  after_script:\n",
                      "markdown": "`    - BUILD_IMAGE_VERSION=\"$(get_version gitlab-ubi-builder)\"\n    - export BUILD_IMAGE=\"${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:${BUILD_IMAGE_VERSION}-ubi\"\n    \n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    - list_artifacts ubi\n  after_script:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/ubi.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 36,
                  "endLine": 31,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    # in the gitlab-ee pipeline.\n    - |\n      if [[ $CI_COMMIT_TAG =~ $AUTO_DEPLOY_TAG_REGEX ]]; then\n        echo \"Setting COMPILE_ASSETS env variable for auto-deploy\"\n        export COMPILE_ASSETS=true\n      fi\n    - mkdir -p artifacts/images artifacts/container_versions\n",
                    "rendered": {
                      "text": "    # in the gitlab-ee pipeline.\n    - |\n      if [[ $CI_COMMIT_TAG =~ $AUTO_DEPLOY_TAG_REGEX ]]; then\n        echo \"Setting COMPILE_ASSETS env variable for auto-deploy\"\n        export COMPILE_ASSETS=true\n      fi\n    - mkdir -p artifacts/images artifacts/container_versions\n",
                      "markdown": "`    # in the gitlab-ee pipeline.\n    - |\n      if [[ $CI_COMMIT_TAG =~ $AUTO_DEPLOY_TAG_REGEX ]]; then\n        echo \"Setting COMPILE_ASSETS env variable for auto-deploy\"\n        export COMPILE_ASSETS=true\n      fi\n    - mkdir -p artifacts/images artifacts/container_versions\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/deps.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 20,
                  "endLine": 9,
                  "endColumn": 86,
                  "snippet": {
                    "text": "  image: registry.gitlab.com/gitlab-org/gitlab-omnibus-builder/distribution_ci_tools:${CI_TOOLS_VERSION}\n  stage: prepare\n  variables:\n    INSTALL_SHA256: \"c95a33432192688a08d935fd5f563fce4110610a51281f887ae88db208b720ba\"\n  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n",
                    "rendered": {
                      "text": "  image: registry.gitlab.com/gitlab-org/gitlab-omnibus-builder/distribution_ci_tools:${CI_TOOLS_VERSION}\n  stage: prepare\n  variables:\n    INSTALL_SHA256: \"c95a33432192688a08d935fd5f563fce4110610a51281f887ae88db208b720ba\"\n  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n",
                      "markdown": "`  image: registry.gitlab.com/gitlab-org/gitlab-omnibus-builder/distribution_ci_tools:${CI_TOOLS_VERSION}\n  stage: prepare\n  variables:\n    INSTALL_SHA256: \"c95a33432192688a08d935fd5f563fce4110610a51281f887ae88db208b720ba\"\n  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/deps.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 22,
                  "endLine": 13,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n    - rm install.sh\n    - $HOME/bin/deps ci\n",
                    "rendered": {
                      "text": "  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n    - rm install.sh\n    - $HOME/bin/deps ci\n",
                      "markdown": "`  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n    - rm install.sh\n    - $HOME/bin/deps ci\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/deps.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 12,
                  "endLine": 1,
                  "endColumn": 20,
                  "snippet": {
                    "text": "# Dependency update job\n# included when:\n# - if: '$DEPS_PIPELINE'\n\n",
                    "rendered": {
                      "text": "# Dependency update job\n# included when:\n# - if: '$DEPS_PIPELINE'\n\n",
                      "markdown": "`# Dependency update job\n# included when:\n# - if: '$DEPS_PIPELINE'\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/deps.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 27,
                  "endLine": 14,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n    - rm install.sh\n    - $HOME/bin/deps ci\n",
                    "rendered": {
                      "text": "    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n    - rm install.sh\n    - $HOME/bin/deps ci\n",
                      "markdown": "`    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n    - rm install.sh\n    - $HOME/bin/deps ci\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/deps.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 22,
                  "endLine": 13,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n    - rm install.sh\n    - $HOME/bin/deps ci\n",
                    "rendered": {
                      "text": "  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n    - rm install.sh\n    - $HOME/bin/deps ci\n",
                      "markdown": "`  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n    - rm install.sh\n    - $HOME/bin/deps ci\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/deps.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 5,
                  "endLine": 13,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n    - rm install.sh\n    - $HOME/bin/deps ci\n",
                    "rendered": {
                      "text": "  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n    - rm install.sh\n    - $HOME/bin/deps ci\n",
                      "markdown": "`  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n    - rm install.sh\n    - $HOME/bin/deps ci\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/deps.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 5,
                  "endLine": 11,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  variables:\n    INSTALL_SHA256: \"c95a33432192688a08d935fd5f563fce4110610a51281f887ae88db208b720ba\"\n  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n",
                    "rendered": {
                      "text": "  variables:\n    INSTALL_SHA256: \"c95a33432192688a08d935fd5f563fce4110610a51281f887ae88db208b720ba\"\n  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n",
                      "markdown": "`  variables:\n    INSTALL_SHA256: \"c95a33432192688a08d935fd5f563fce4110610a51281f887ae88db208b720ba\"\n  script:\n    - curl --retry 6 -fO https://deps.app/install.sh\n    - echo \"${INSTALL_SHA256}  install.sh\" | sha256sum --check\n    - cat install.sh | bash -s -- -b $HOME/bin\n    # Remove the install.sh script otherwise deps gets upset about pending changes when it goes to create new branches\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 6,
                  "endLine": 17,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN mkdir /assets \\\n    && mkdir /assets/licenses \\\n    && mv ${CFSSL_BIN}/cfssl.LICENSE /assets/licenses/ \\\n    && cp -R --parents \\\n        ${CFSSL_BIN}/cfssl* \\\n        /assets\n",
                    "rendered": {
                      "text": "RUN mkdir /assets \\\n    && mkdir /assets/licenses \\\n    && mv ${CFSSL_BIN}/cfssl.LICENSE /assets/licenses/ \\\n    && cp -R --parents \\\n        ${CFSSL_BIN}/cfssl* \\\n        /assets\n",
                      "markdown": "`RUN mkdir /assets \\\n    && mkdir /assets/licenses \\\n    && mv ${CFSSL_BIN}/cfssl.LICENSE /assets/licenses/ \\\n    && cp -R --parents \\\n        ${CFSSL_BIN}/cfssl* \\\n        /assets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 6,
                  "endLine": 16,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nRUN mkdir /assets \\\n    && mkdir /assets/licenses \\\n    && mv ${CFSSL_BIN}/cfssl.LICENSE /assets/licenses/ \\\n    && cp -R --parents \\\n        ${CFSSL_BIN}/cfssl* \\\n        /assets\n",
                    "rendered": {
                      "text": "\nRUN mkdir /assets \\\n    && mkdir /assets/licenses \\\n    && mv ${CFSSL_BIN}/cfssl.LICENSE /assets/licenses/ \\\n    && cp -R --parents \\\n        ${CFSSL_BIN}/cfssl* \\\n        /assets\n",
                      "markdown": "`\nRUN mkdir /assets \\\n    && mkdir /assets/licenses \\\n    && mv ${CFSSL_BIN}/cfssl.LICENSE /assets/licenses/ \\\n    && cp -R --parents \\\n        ${CFSSL_BIN}/cfssl* \\\n        /assets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 23,
                  "endLine": 1,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# ~ gitlab-ubi-builder, expect registry.access.redhat.com/ubi9/ubi\nARG UBI_IMAGE=registry.access.redhat.com/ubi9/ubi-minimal:9.4\nFROM ${UBI_IMAGE}\n\n",
                    "rendered": {
                      "text": "# ~ gitlab-ubi-builder, expect registry.access.redhat.com/ubi9/ubi\nARG UBI_IMAGE=registry.access.redhat.com/ubi9/ubi-minimal:9.4\nFROM ${UBI_IMAGE}\n\n",
                      "markdown": "`# ~ gitlab-ubi-builder, expect registry.access.redhat.com/ubi9/ubi\nARG UBI_IMAGE=registry.access.redhat.com/ubi9/ubi-minimal:9.4\nFROM ${UBI_IMAGE}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/Dockerfile"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 31,
                  "endColumn": 4,
                  "snippet": {
                    "text": "COPY scripts/generate-certificates /scripts/generate-certificates\n\nVOLUME /output\n\nCMD /scripts/generate-certificates\n",
                    "rendered": {
                      "text": "COPY scripts/generate-certificates /scripts/generate-certificates\n\nVOLUME /output\n\nCMD /scripts/generate-certificates\n",
                      "markdown": "`COPY scripts/generate-certificates /scripts/generate-certificates\n\nVOLUME /output\n\nCMD /scripts/generate-certificates\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 22,
                  "endLine": 18,
                  "snippet": {
                    "text": "\nCOPY scripts/install-cfssl.sh /scripts/install-cfssl.sh\n# Add curl vs wget. Simplifies install-cfss.sh for many distros\nRUN apk add --no-cache curl\nRUN /scripts/install-cfssl.sh\n\n## FINAL IMAGE ##\n\n",
                    "rendered": {
                      "text": "\nCOPY scripts/install-cfssl.sh /scripts/install-cfssl.sh\n# Add curl vs wget. Simplifies install-cfss.sh for many distros\nRUN apk add --no-cache curl\nRUN /scripts/install-cfssl.sh\n\n## FINAL IMAGE ##\n\n",
                      "markdown": "`\nCOPY scripts/install-cfssl.sh /scripts/install-cfssl.sh\n# Add curl vs wget. Simplifies install-cfss.sh for many distros\nRUN apk add --no-cache curl\nRUN /scripts/install-cfssl.sh\n\n## FINAL IMAGE ##\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/Dockerfile"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 5,
                  "endLine": 16,
                  "endColumn": 11,
                  "snippet": {
                    "text": "ARG CFSSL_BIN=/usr/local/bin\n\nCOPY scripts/install-cfssl.sh /scripts/install-cfssl.sh\n# Add curl vs wget. Simplifies install-cfss.sh for many distros\nRUN apk add --no-cache curl\nRUN /scripts/install-cfssl.sh\n\n",
                    "rendered": {
                      "text": "ARG CFSSL_BIN=/usr/local/bin\n\nCOPY scripts/install-cfssl.sh /scripts/install-cfssl.sh\n# Add curl vs wget. Simplifies install-cfss.sh for many distros\nRUN apk add --no-cache curl\nRUN /scripts/install-cfssl.sh\n\n",
                      "markdown": "`ARG CFSSL_BIN=/usr/local/bin\n\nCOPY scripts/install-cfssl.sh /scripts/install-cfssl.sh\n# Add curl vs wget. Simplifies install-cfss.sh for many distros\nRUN apk add --no-cache curl\nRUN /scripts/install-cfssl.sh\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 34,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n# generate-certificates script will perform work in this volume\nVOLUME /output\n\nCMD [\"/scripts/generate-certificates\"]\n\n# Default to non-root user\nUSER 65534:65534\n",
                    "rendered": {
                      "text": "\n# generate-certificates script will perform work in this volume\nVOLUME /output\n\nCMD [\"/scripts/generate-certificates\"]\n\n# Default to non-root user\nUSER 65534:65534\n",
                      "markdown": "`\n# generate-certificates script will perform work in this volume\nVOLUME /output\n\nCMD [\"/scripts/generate-certificates\"]\n\n# Default to non-root user\nUSER 65534:65534\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 23,
                  "endLine": 31,
                  "endColumn": 31,
                  "snippet": {
                    "text": "RUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\n# generate-certificates script will perform work in this volume\nVOLUME /output\n\nCMD [\"/scripts/generate-certificates\"]\n",
                    "rendered": {
                      "text": "RUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\n# generate-certificates script will perform work in this volume\nVOLUME /output\n\nCMD [\"/scripts/generate-certificates\"]\n",
                      "markdown": "`RUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\n# generate-certificates script will perform work in this volume\nVOLUME /output\n\nCMD [\"/scripts/generate-certificates\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/registry/config.yml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 2,
                  "endLine": 59,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  host: postgres\n  port: 5432\n  user: gitlab\n  password: meercat\n  sslmode: disable\n",
                    "rendered": {
                      "text": "  host: postgres\n  port: 5432\n  user: gitlab\n  password: meercat\n  sslmode: disable\n",
                      "markdown": "`  host: postgres\n  port: 5432\n  user: gitlab\n  password: meercat\n  sslmode: disable\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/sidekiq-config/sidekiq_queues.yml"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 9,
                  "endLine": 3,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# This configuration file should be exclusively used to set queue settings for\n# Sidekiq. Any other setting should be specified using the Sidekiq CLI or the\n# Sidekiq Ruby API (see config/initializers/sidekiq.rb).\n---\n# All the queues to process and their weights. Every queue _must_ have a weight\n# defined.\n",
                    "rendered": {
                      "text": "# This configuration file should be exclusively used to set queue settings for\n# Sidekiq. Any other setting should be specified using the Sidekiq CLI or the\n# Sidekiq Ruby API (see config/initializers/sidekiq.rb).\n---\n# All the queues to process and their weights. Every queue _must_ have a weight\n# defined.\n",
                      "markdown": "`# This configuration file should be exclusively used to set queue settings for\n# Sidekiq. Any other setting should be specified using the Sidekiq CLI or the\n# Sidekiq Ruby API (see config/initializers/sidekiq.rb).\n---\n# All the queues to process and their weights. Every queue _must_ have a weight\n# defined.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/scripts/wait-for-deps"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 37,
                  "endLine": 44,
                  "endColumn": 45,
                  "snippet": {
                    "text": "  exit 1\nfi\n\n# `exec` the arguments passed to this script (if any)\nexec \"$@\"\n",
                    "rendered": {
                      "text": "  exit 1\nfi\n\n# `exec` the arguments passed to this script (if any)\nexec \"$@\"\n",
                      "markdown": "`  exit 1\nfi\n\n# `exec` the arguments passed to this script (if any)\nexec \"$@\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-geo-logcursor/openshift.metadata"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 28,
                  "endLine": 3,
                  "endColumn": 37,
                  "snippet": {
                    "text": "io.openshift.tags=gitlab-geo-logcursor\nio.openshift.wants=gitlab-webservice,postgresql\nio.k8s.description=Logcursor service in support of GitLab Geo deployments.\nio.openshift.non-scalable=false\nio.openshift-min-memory=700Mi\nio.openshift.min-cpu=300m\n",
                    "rendered": {
                      "text": "io.openshift.tags=gitlab-geo-logcursor\nio.openshift.wants=gitlab-webservice,postgresql\nio.k8s.description=Logcursor service in support of GitLab Geo deployments.\nio.openshift.non-scalable=false\nio.openshift-min-memory=700Mi\nio.openshift.min-cpu=300m\n",
                      "markdown": "`io.openshift.tags=gitlab-geo-logcursor\nio.openshift.wants=gitlab-webservice,postgresql\nio.k8s.description=Logcursor service in support of GitLab Geo deployments.\nio.openshift.non-scalable=false\nio.openshift-min-memory=700Mi\nio.openshift.min-cpu=300m\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-geo-logcursor/Dockerfile"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14,
                  "endColumn": 20,
                  "snippet": {
                    "text": "ARG GITLAB_USER=git\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                    "rendered": {
                      "text": "ARG GITLAB_USER=git\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                      "markdown": "`ARG GITLAB_USER=git\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-geo-logcursor/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 54,
                  "endLine": 23,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-geo-logcursor/Dockerfile"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 20,
                  "endColumn": 4,
                  "snippet": {
                    "text": "USER $GITLAB_USER:$GITLAB_USER\n\nCOPY scripts/ /scripts\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "USER $GITLAB_USER:$GITLAB_USER\n\nCOPY scripts/ /scripts\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                      "markdown": "`USER $GITLAB_USER:$GITLAB_USER\n\nCOPY scripts/ /scripts\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-geo-logcursor/Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 13,
                  "endColumn": 10,
                  "snippet": {
                    "text": "ARG CONFIG=/srv/gitlab/config\nARG GITLAB_USER=git\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nUSER $GITLAB_USER:$GITLAB_USER\n",
                    "rendered": {
                      "text": "ARG CONFIG=/srv/gitlab/config\nARG GITLAB_USER=git\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nUSER $GITLAB_USER:$GITLAB_USER\n",
                      "markdown": "`ARG CONFIG=/srv/gitlab/config\nARG GITLAB_USER=git\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nUSER $GITLAB_USER:$GITLAB_USER\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-geo-logcursor/Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 53,
                  "endLine": 14,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG CONFIG=/srv/gitlab/config\nARG GITLAB_USER=git\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                    "rendered": {
                      "text": "ARG CONFIG=/srv/gitlab/config\nARG GITLAB_USER=git\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                      "markdown": "`ARG CONFIG=/srv/gitlab/config\nARG GITLAB_USER=git\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-geo-logcursor/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "endColumn": 20,
                  "snippet": {
                    "text": "      description=\"Geo Log Cursor daemon.\"\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nCOPY --chown=0:0 --chmod=755 scripts/ /scripts/\n\n",
                    "rendered": {
                      "text": "      description=\"Geo Log Cursor daemon.\"\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nCOPY --chown=0:0 --chmod=755 scripts/ /scripts/\n\n",
                      "markdown": "`      description=\"Geo Log Cursor daemon.\"\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nCOPY --chown=0:0 --chmod=755 scripts/ /scripts/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-geo-logcursor/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 52,
                  "endLine": 33,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-geo-logcursor/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 31,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-geo-logcursor/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 10,
                  "snippet": {
                    "text": "      summary=\"Geo Log Cursor daemon.\" \\\n      description=\"Geo Log Cursor daemon.\"\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nCOPY --chown=0:0 --chmod=755 scripts/ /scripts/\n",
                    "rendered": {
                      "text": "      summary=\"Geo Log Cursor daemon.\" \\\n      description=\"Geo Log Cursor daemon.\"\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nCOPY --chown=0:0 --chmod=755 scripts/ /scripts/\n",
                      "markdown": "`      summary=\"Geo Log Cursor daemon.\" \\\n      description=\"Geo Log Cursor daemon.\"\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nCOPY --chown=0:0 --chmod=755 scripts/ /scripts/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-geo-logcursor/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 53,
                  "endLine": 21,
                  "endColumn": 4,
                  "snippet": {
                    "text": "      summary=\"Geo Log Cursor daemon.\" \\\n      description=\"Geo Log Cursor daemon.\"\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nCOPY --chown=0:0 --chmod=755 scripts/ /scripts/\n\n",
                    "rendered": {
                      "text": "      summary=\"Geo Log Cursor daemon.\" \\\n      description=\"Geo Log Cursor daemon.\"\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nCOPY --chown=0:0 --chmod=755 scripts/ /scripts/\n\n",
                      "markdown": "`      summary=\"Geo Log Cursor daemon.\" \\\n      description=\"Geo Log Cursor daemon.\"\n\n# Control the target for `wait-for-deps` schema check\nENV DB_SCHEMA_TARGET=geo\n\nCOPY --chown=0:0 --chmod=755 scripts/ /scripts/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_accounts_umask_etc_login_defs.sh"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 13,
                  "endLine": 80,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  # If the key exists, change it. Otherwise, add it to the config_file.\n  # We search for the key string followed by a word boundary (matched by \\>),\n  # so if we search for 'setting', 'setting2' won't match.\n  if LC_ALL=C grep -q -m 1 $grep_case_insensitive_option -e \"${key}\\\\>\" \"$config_file\"; then\n    \"${sed_command[@]}\" \"s/${key}\\\\>.*/$formatted_output/g$sed_case_insensitive_option\" \"$config_file\"\n  else\n    # \\n is precaution for case where file ends without trailing newline\n",
                    "rendered": {
                      "text": "  # If the key exists, change it. Otherwise, add it to the config_file.\n  # We search for the key string followed by a word boundary (matched by \\>),\n  # so if we search for 'setting', 'setting2' won't match.\n  if LC_ALL=C grep -q -m 1 $grep_case_insensitive_option -e \"${key}\\\\>\" \"$config_file\"; then\n    \"${sed_command[@]}\" \"s/${key}\\\\>.*/$formatted_output/g$sed_case_insensitive_option\" \"$config_file\"\n  else\n    # \\n is precaution for case where file ends without trailing newline\n",
                      "markdown": "`  # If the key exists, change it. Otherwise, add it to the config_file.\n  # We search for the key string followed by a word boundary (matched by \\>),\n  # so if we search for 'setting', 'setting2' won't match.\n  if LC_ALL=C grep -q -m 1 $grep_case_insensitive_option -e \"${key}\\\\>\" \"$config_file\"; then\n    \"${sed_command[@]}\" \"s/${key}\\\\>.*/$formatted_output/g$sed_case_insensitive_option\" \"$config_file\"\n  else\n    # \\n is precaution for case where file ends without trailing newline\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_accounts_umask_etc_login_defs.sh"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 22,
                  "endLine": 56,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  [ $# -ge \"3\" ] || { echo \"Usage: replace_or_append <config_file_location> <key_to_search> <new_value> [<CCE number or literal '@CCENUM@' if unknown>] [printf-like format, default is '$default_format']\" >&2; exit 1; }\n\n  # Test if the config_file is a symbolic link. If so, use --follow-symlinks with sed.\n  # Otherwise, regular sed command will do.\n  sed_command=('sed' '-i')\n  if test -L \"$config_file\"; then\n    sed_command+=('--follow-symlinks')\n",
                    "rendered": {
                      "text": "  [ $# -ge \"3\" ] || { echo \"Usage: replace_or_append <config_file_location> <key_to_search> <new_value> [<CCE number or literal '@CCENUM@' if unknown>] [printf-like format, default is '$default_format']\" >&2; exit 1; }\n\n  # Test if the config_file is a symbolic link. If so, use --follow-symlinks with sed.\n  # Otherwise, regular sed command will do.\n  sed_command=('sed' '-i')\n  if test -L \"$config_file\"; then\n    sed_command+=('--follow-symlinks')\n",
                      "markdown": "`  [ $# -ge \"3\" ] || { echo \"Usage: replace_or_append <config_file_location> <key_to_search> <new_value> [<CCE number or literal '@CCENUM@' if unknown>] [printf-like format, default is '$default_format']\" >&2; exit 1; }\n\n  # Test if the config_file is a symbolic link. If so, use --follow-symlinks with sed.\n  # Otherwise, regular sed command will do.\n  sed_command=('sed' '-i')\n  if test -L \"$config_file\"; then\n    sed_command+=('--follow-symlinks')\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_accounts_umask_etc_login_defs.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 2,
                  "endLine": 7,
                  "endColumn": 7,
                  "snippet": {
                    "text": "(>&2 echo \"Remediating: 'xccdf_org.ssgproject.content_rule_accounts_umask_etc_login_defs'\")\n\n# Remediation is applicable only in certain platforms\nif rpm --quiet -q shadow-utils; then\n\n\nvar_accounts_user_umask=\"027\"\n",
                    "rendered": {
                      "text": "(>&2 echo \"Remediating: 'xccdf_org.ssgproject.content_rule_accounts_umask_etc_login_defs'\")\n\n# Remediation is applicable only in certain platforms\nif rpm --quiet -q shadow-utils; then\n\n\nvar_accounts_user_umask=\"027\"\n",
                      "markdown": "`(>&2 echo \"Remediating: 'xccdf_org.ssgproject.content_rule_accounts_umask_etc_login_defs'\")\n\n# Remediation is applicable only in certain platforms\nif rpm --quiet -q shadow-utils; then\n\n\nvar_accounts_user_umask=\"027\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_accounts_umask_etc_csh_cshrc.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 6,
                  "snippet": {
                    "text": "var_accounts_user_umask='027'\n\ngrep -q umask /etc/csh.cshrc && \\\n  sed -i \"s/umask.*/umask $var_accounts_user_umask/g\" /etc/csh.cshrc\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/csh.cshrc\nfi\n",
                    "rendered": {
                      "text": "var_accounts_user_umask='027'\n\ngrep -q umask /etc/csh.cshrc && \\\n  sed -i \"s/umask.*/umask $var_accounts_user_umask/g\" /etc/csh.cshrc\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/csh.cshrc\nfi\n",
                      "markdown": "`var_accounts_user_umask='027'\n\ngrep -q umask /etc/csh.cshrc && \\\n  sed -i \"s/umask.*/umask $var_accounts_user_umask/g\" /etc/csh.cshrc\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/csh.cshrc\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_accounts_umask_etc_csh_cshrc.sh"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 8,
                  "endColumn": 5,
                  "snippet": {
                    "text": "(>&2 echo \"Remediating: 'xccdf_org.ssgproject.content_rule_accounts_umask_etc_csh_cshrc'\")\n\nvar_accounts_user_umask='027'\n\ngrep -q umask /etc/csh.cshrc && \\\n  sed -i \"s/umask.*/umask $var_accounts_user_umask/g\" /etc/csh.cshrc\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/csh.cshrc\n",
                    "rendered": {
                      "text": "(>&2 echo \"Remediating: 'xccdf_org.ssgproject.content_rule_accounts_umask_etc_csh_cshrc'\")\n\nvar_accounts_user_umask='027'\n\ngrep -q umask /etc/csh.cshrc && \\\n  sed -i \"s/umask.*/umask $var_accounts_user_umask/g\" /etc/csh.cshrc\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/csh.cshrc\n",
                      "markdown": "`(>&2 echo \"Remediating: 'xccdf_org.ssgproject.content_rule_accounts_umask_etc_csh_cshrc'\")\n\nvar_accounts_user_umask='027'\n\ngrep -q umask /etc/csh.cshrc && \\\n  sed -i \"s/umask.*/umask $var_accounts_user_umask/g\" /etc/csh.cshrc\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/csh.cshrc\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/patches/grpc-system-ssl-1.42.0.patch"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 62,
                  "snippet": {
                    "text": " \n-ENV['EMBED_OPENSSL'] = 'true'\n+# By default, use the system OpenSSL instead of BoringSSL. This is\n+# needed on systems that need to use a FIPS-approved OpenSSL or cannot\n+# compile the embedded BoringSSL module (e.g. s390x).\n+embed_ssl = ENV['EMBED_OPENSSL'] == 'true'\n+ENV['EMBED_OPENSSL'] = embed_ssl ? 'true' : 'false'\n",
                    "rendered": {
                      "text": " \n-ENV['EMBED_OPENSSL'] = 'true'\n+# By default, use the system OpenSSL instead of BoringSSL. This is\n+# needed on systems that need to use a FIPS-approved OpenSSL or cannot\n+# compile the embedded BoringSSL module (e.g. s390x).\n+embed_ssl = ENV['EMBED_OPENSSL'] == 'true'\n+ENV['EMBED_OPENSSL'] = embed_ssl ? 'true' : 'false'\n",
                      "markdown": "` \n-ENV['EMBED_OPENSSL'] = 'true'\n+# By default, use the system OpenSSL instead of BoringSSL. This is\n+# needed on systems that need to use a FIPS-approved OpenSSL or cannot\n+# compile the embedded BoringSSL module (e.g. s390x).\n+embed_ssl = ENV['EMBED_OPENSSL'] == 'true'\n+ENV['EMBED_OPENSSL'] = embed_ssl ? 'true' : 'false'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/patches/grpc-system-ssl-1.42.0.patch"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 29,
                  "endLine": 10,
                  "endColumn": 38,
                  "snippet": {
                    "text": " end\n \n-ENV['EMBED_OPENSSL'] = 'true'\n+# By default, use the system OpenSSL instead of BoringSSL. This is\n+# needed on systems that need to use a FIPS-approved OpenSSL or cannot\n+# compile the embedded BoringSSL module (e.g. s390x).\n+embed_ssl = ENV['EMBED_OPENSSL'] == 'true'\n",
                    "rendered": {
                      "text": " end\n \n-ENV['EMBED_OPENSSL'] = 'true'\n+# By default, use the system OpenSSL instead of BoringSSL. This is\n+# needed on systems that need to use a FIPS-approved OpenSSL or cannot\n+# compile the embedded BoringSSL module (e.g. s390x).\n+embed_ssl = ENV['EMBED_OPENSSL'] == 'true'\n",
                      "markdown": "` end\n \n-ENV['EMBED_OPENSSL'] = 'true'\n+# By default, use the system OpenSSL instead of BoringSSL. This is\n+# needed on systems that need to use a FIPS-approved OpenSSL or cannot\n+# compile the embedded BoringSSL module (e.g. s390x).\n+embed_ssl = ENV['EMBED_OPENSSL'] == 'true'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/patches/grpc-system-ssl-1.48.0.patch"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 53,
                  "endLine": 10,
                  "endColumn": 62,
                  "snippet": {
                    "text": " end\n \n+# By default, use the system OpenSSL instead of BoringSSL. This is\n+# needed on systems that need to use a FIPS-approved OpenSSL or cannot\n+# compile the embedded BoringSSL module (e.g. s390x).\n+embed_ssl = ENV['EMBED_OPENSSL'] == 'true'\n # Don't embed on TruffleRuby (constant-time crypto is unsafe with Sulong, slow build times)\n",
                    "rendered": {
                      "text": " end\n \n+# By default, use the system OpenSSL instead of BoringSSL. This is\n+# needed on systems that need to use a FIPS-approved OpenSSL or cannot\n+# compile the embedded BoringSSL module (e.g. s390x).\n+embed_ssl = ENV['EMBED_OPENSSL'] == 'true'\n # Don't embed on TruffleRuby (constant-time crypto is unsafe with Sulong, slow build times)\n",
                      "markdown": "` end\n \n+# By default, use the system OpenSSL instead of BoringSSL. This is\n+# needed on systems that need to use a FIPS-approved OpenSSL or cannot\n+# compile the embedded BoringSSL module (e.g. s390x).\n+embed_ssl = ENV['EMBED_OPENSSL'] == 'true'\n # Don't embed on TruffleRuby (constant-time crypto is unsafe with Sulong, slow build times)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/patches/grpc-system-ssl-1.48.0.patch"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 29,
                  "endLine": 9,
                  "endColumn": 38,
                  "snippet": {
                    "text": "   ENV['ARFLAGS'] = '-o'\n end\n \n+# By default, use the system OpenSSL instead of BoringSSL. This is\n+# needed on systems that need to use a FIPS-approved OpenSSL or cannot\n+# compile the embedded BoringSSL module (e.g. s390x).\n+embed_ssl = ENV['EMBED_OPENSSL'] == 'true'\n",
                    "rendered": {
                      "text": "   ENV['ARFLAGS'] = '-o'\n end\n \n+# By default, use the system OpenSSL instead of BoringSSL. This is\n+# needed on systems that need to use a FIPS-approved OpenSSL or cannot\n+# compile the embedded BoringSSL module (e.g. s390x).\n+embed_ssl = ENV['EMBED_OPENSSL'] == 'true'\n",
                      "markdown": "`   ENV['ARFLAGS'] = '-o'\n end\n \n+# By default, use the system OpenSSL instead of BoringSSL. This is\n+# needed on systems that need to use a FIPS-approved OpenSSL or cannot\n+# compile the embedded BoringSSL module (e.g. s390x).\n+embed_ssl = ENV['EMBED_OPENSSL'] == 'true'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ubi-builder/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 9,
                  "endColumn": 23,
                  "snippet": {
                    "text": "ARG DNF_OPTS\n\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nENV INCLUDEDIR=/usr/include\n\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n",
                    "rendered": {
                      "text": "ARG DNF_OPTS\n\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nENV INCLUDEDIR=/usr/include\n\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n",
                      "markdown": "`ARG DNF_OPTS\n\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nENV INCLUDEDIR=/usr/include\n\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ubi-builder/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 24,
                  "endLine": 11,
                  "endColumn": 32,
                  "snippet": {
                    "text": "ENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nENV INCLUDEDIR=/usr/include\n\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n        autoconf cmake gcc gcc-c++ make patch perl \\\n        # ubi-minimal does not have findutils or which by default!\n",
                    "rendered": {
                      "text": "ENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nENV INCLUDEDIR=/usr/include\n\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n        autoconf cmake gcc gcc-c++ make patch perl \\\n        # ubi-minimal does not have findutils or which by default!\n",
                      "markdown": "`ENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nENV INCLUDEDIR=/usr/include\n\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n        autoconf cmake gcc gcc-c++ make patch perl \\\n        # ubi-minimal does not have findutils or which by default!\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ubi-builder/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 7,
                  "endLine": 19,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        tar gzip \\\n        bzip2 libedit ncurses uuid libarchive \\\n        curl-devel libicu-devel libffi-devel libedit-devel libuuid-devel openssl-devel ncurses-devel pcre2-devel zlib-devel libstdc++-static \\\n        git \\\n    && mkdir -p ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                    "rendered": {
                      "text": "        tar gzip \\\n        bzip2 libedit ncurses uuid libarchive \\\n        curl-devel libicu-devel libffi-devel libedit-devel libuuid-devel openssl-devel ncurses-devel pcre2-devel zlib-devel libstdc++-static \\\n        git \\\n    && mkdir -p ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                      "markdown": "`        tar gzip \\\n        bzip2 libedit ncurses uuid libarchive \\\n        curl-devel libicu-devel libffi-devel libedit-devel libuuid-devel openssl-devel ncurses-devel pcre2-devel zlib-devel libstdc++-static \\\n        git \\\n    && mkdir -p ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ubi-builder/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 7,
                  "endLine": 16,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        autoconf cmake gcc gcc-c++ make patch perl \\\n        # ubi-minimal does not have findutils or which by default!\n        which findutils \\\n        tar gzip \\\n        bzip2 libedit ncurses uuid libarchive \\\n        curl-devel libicu-devel libffi-devel libedit-devel libuuid-devel openssl-devel ncurses-devel pcre2-devel zlib-devel libstdc++-static \\\n        git \\\n",
                    "rendered": {
                      "text": "        autoconf cmake gcc gcc-c++ make patch perl \\\n        # ubi-minimal does not have findutils or which by default!\n        which findutils \\\n        tar gzip \\\n        bzip2 libedit ncurses uuid libarchive \\\n        curl-devel libicu-devel libffi-devel libedit-devel libuuid-devel openssl-devel ncurses-devel pcre2-devel zlib-devel libstdc++-static \\\n        git \\\n",
                      "markdown": "`        autoconf cmake gcc gcc-c++ make patch perl \\\n        # ubi-minimal does not have findutils or which by default!\n        which findutils \\\n        tar gzip \\\n        bzip2 libedit ncurses uuid libarchive \\\n        curl-devel libicu-devel libffi-devel libedit-devel libuuid-devel openssl-devel ncurses-devel pcre2-devel zlib-devel libstdc++-static \\\n        git \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ubi-builder/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n        autoconf cmake gcc gcc-c++ make patch perl \\\n        # ubi-minimal does not have findutils or which by default!\n        which findutils \\\n        tar gzip \\\n",
                    "rendered": {
                      "text": "\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n        autoconf cmake gcc gcc-c++ make patch perl \\\n        # ubi-minimal does not have findutils or which by default!\n        which findutils \\\n        tar gzip \\\n",
                      "markdown": "`\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n        autoconf cmake gcc gcc-c++ make patch perl \\\n        # ubi-minimal does not have findutils or which by default!\n        which findutils \\\n        tar gzip \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ubi-builder/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 34,
                  "endLine": 9,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG BUILD_DIR=/tmp/build\nARG DNF_OPTS\n\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nENV INCLUDEDIR=/usr/include\n\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n",
                    "rendered": {
                      "text": "ARG BUILD_DIR=/tmp/build\nARG DNF_OPTS\n\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nENV INCLUDEDIR=/usr/include\n\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n",
                      "markdown": "`ARG BUILD_DIR=/tmp/build\nARG DNF_OPTS\n\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nENV INCLUDEDIR=/usr/include\n\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ubi-builder/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 8,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nARG BUILD_DIR=/tmp/build\nARG DNF_OPTS\n\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nENV INCLUDEDIR=/usr/include\n\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n",
                    "rendered": {
                      "text": "\nARG BUILD_DIR=/tmp/build\nARG DNF_OPTS\n\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nENV INCLUDEDIR=/usr/include\n\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n",
                      "markdown": "`\nARG BUILD_DIR=/tmp/build\nARG DNF_OPTS\n\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nENV INCLUDEDIR=/usr/include\n\nRUN microdnf ${DNF_OPTS} update --best --assumeyes --nodocs --setopt=install_weak_deps=0 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/scripts/start-workhorse"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 4,
                  "endLine": 29,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  export GITLAB_WORKHORSE_NET_ARGS=\"-listenAddr 0.0.0.0:${GITLAB_WORKHORSE_LISTEN_PORT:-8181}\"\nfi\n\nif ! grep -q -s '^\\[metrics_listener\\]$' \"${GITLAB_WORKHORSE_CONFIG_FILE}\"; then\n  if [[ \"${GITLAB_WORKHORSE_PROM_LISTEN_ADDR}\" =~ ^.+:[0-9][0-9]{0,4}$ ]]; then\n    export PROMETHEUS_LISTEN_ADDR=\"-prometheusListenAddr ${GITLAB_WORKHORSE_PROM_LISTEN_ADDR}\"\n  fi\n",
                    "rendered": {
                      "text": "  export GITLAB_WORKHORSE_NET_ARGS=\"-listenAddr 0.0.0.0:${GITLAB_WORKHORSE_LISTEN_PORT:-8181}\"\nfi\n\nif ! grep -q -s '^\\[metrics_listener\\]$' \"${GITLAB_WORKHORSE_CONFIG_FILE}\"; then\n  if [[ \"${GITLAB_WORKHORSE_PROM_LISTEN_ADDR}\" =~ ^.+:[0-9][0-9]{0,4}$ ]]; then\n    export PROMETHEUS_LISTEN_ADDR=\"-prometheusListenAddr ${GITLAB_WORKHORSE_PROM_LISTEN_ADDR}\"\n  fi\n",
                      "markdown": "`  export GITLAB_WORKHORSE_NET_ARGS=\"-listenAddr 0.0.0.0:${GITLAB_WORKHORSE_LISTEN_PORT:-8181}\"\nfi\n\nif ! grep -q -s '^\\[metrics_listener\\]$' \"${GITLAB_WORKHORSE_CONFIG_FILE}\"; then\n  if [[ \"${GITLAB_WORKHORSE_PROM_LISTEN_ADDR}\" =~ ^.+:[0-9][0-9]{0,4}$ ]]; then\n    export PROMETHEUS_LISTEN_ADDR=\"-prometheusListenAddr ${GITLAB_WORKHORSE_PROM_LISTEN_ADDR}\"\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/scripts/start-workhorse"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 2,
                  "endLine": 23,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# This can be removed after https://gitlab.com/gitlab-org/charts/gitlab/-/merge_requests/2628\n# is merged and Workhorse fixes its default listeners support to better account\n# for the config file.\nif grep -q -s '^\\[\\[listeners\\]\\]$' \"${GITLAB_WORKHORSE_CONFIG_FILE}\"; then\n  export GITLAB_WORKHORSE_NET_ARGS=\"-listenNetwork unix -listenAddr /tmp/gitlab/workhorse.sock\"\nelse\n  export GITLAB_WORKHORSE_NET_ARGS=\"-listenAddr 0.0.0.0:${GITLAB_WORKHORSE_LISTEN_PORT:-8181}\"\n",
                    "rendered": {
                      "text": "# This can be removed after https://gitlab.com/gitlab-org/charts/gitlab/-/merge_requests/2628\n# is merged and Workhorse fixes its default listeners support to better account\n# for the config file.\nif grep -q -s '^\\[\\[listeners\\]\\]$' \"${GITLAB_WORKHORSE_CONFIG_FILE}\"; then\n  export GITLAB_WORKHORSE_NET_ARGS=\"-listenNetwork unix -listenAddr /tmp/gitlab/workhorse.sock\"\nelse\n  export GITLAB_WORKHORSE_NET_ARGS=\"-listenAddr 0.0.0.0:${GITLAB_WORKHORSE_LISTEN_PORT:-8181}\"\n",
                      "markdown": "`# This can be removed after https://gitlab.com/gitlab-org/charts/gitlab/-/merge_requests/2628\n# is merged and Workhorse fixes its default listeners support to better account\n# for the config file.\nif grep -q -s '^\\[\\[listeners\\]\\]$' \"${GITLAB_WORKHORSE_CONFIG_FILE}\"; then\n  export GITLAB_WORKHORSE_NET_ARGS=\"-listenNetwork unix -listenAddr /tmp/gitlab/workhorse.sock\"\nelse\n  export GITLAB_WORKHORSE_NET_ARGS=\"-listenAddr 0.0.0.0:${GITLAB_WORKHORSE_LISTEN_PORT:-8181}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 6,
                  "endLine": 20,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && make -C src/bin install \\\n    && make -C src/include install \\\n    && make -C src/interfaces install \\\n    && cp -R --parents /usr/local/postgresql /assets\n",
                    "rendered": {
                      "text": "    && make -C src/bin install \\\n    && make -C src/include install \\\n    && make -C src/interfaces install \\\n    && cp -R --parents /usr/local/postgresql /assets\n",
                      "markdown": "`    && make -C src/bin install \\\n    && make -C src/include install \\\n    && make -C src/interfaces install \\\n    && cp -R --parents /usr/local/postgresql /assets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 6,
                  "endLine": 13,
                  "endColumn": 11,
                  "snippet": {
                    "text": " postgresql-${PG_VERSION}.tar.gz \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz.md5 -o postgresql-${PG_VERSION}.tar.gz.md5 \\\n    && [ \"$(cat postgresql-${PG_VERSION}.tar.gz.md5)\" = \"$(md5sum postgresql-${PG_VERSION}.tar.gz)\" ] \\\n    && tar -xzf postgresql-${PG_VERSION}.tar.gz \\\n    && cd postgresql-${PG_VERSION} \\\n    && ./configure --prefix=/usr/local/postgresql --disable-rpath --with-openssl --with-libedit-preferred --with-uuid=e2fs \\\n    && make -j \"$(nproc)\" world-bin \\\n    && make -C src/bin install \\\n    && make -C src/include i",
                    "rendered": {
                      "text": " postgresql-${PG_VERSION}.tar.gz \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz.md5 -o postgresql-${PG_VERSION}.tar.gz.md5 \\\n    && [ \"$(cat postgresql-${PG_VERSION}.tar.gz.md5)\" = \"$(md5sum postgresql-${PG_VERSION}.tar.gz)\" ] \\\n    && tar -xzf postgresql-${PG_VERSION}.tar.gz \\\n    && cd postgresql-${PG_VERSION} \\\n    && ./configure --prefix=/usr/local/postgresql --disable-rpath --with-openssl --with-libedit-preferred --with-uuid=e2fs \\\n    && make -j \"$(nproc)\" world-bin \\\n    && make -C src/bin install \\\n    && make -C src/include i",
                      "markdown": "` postgresql-${PG_VERSION}.tar.gz \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz.md5 -o postgresql-${PG_VERSION}.tar.gz.md5 \\\n    && [ \"$(cat postgresql-${PG_VERSION}.tar.gz.md5)\" = \"$(md5sum postgresql-${PG_VERSION}.tar.gz)\" ] \\\n    && tar -xzf postgresql-${PG_VERSION}.tar.gz \\\n    && cd postgresql-${PG_VERSION} \\\n    && ./configure --prefix=/usr/local/postgresql --disable-rpath --with-openssl --with-libedit-preferred --with-uuid=e2fs \\\n    && make -j \"$(nproc)\" world-bin \\\n    && make -C src/bin install \\\n    && make -C src/include i`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 6,
                  "endLine": 11,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nRUN mkdir /assets \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz -o postgresql-${PG_VERSION}.tar.gz \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz.md5 -o postgresql-${PG_VERSION}.tar.gz.md5 \\\n    && [ \"$(cat postgresql-${PG_VERSION}.tar.gz.md5)\" = \"$(md5sum postgresql-${PG_VERSION}.tar.gz)\" ] \\\n    && tar -xzf postgresql-${PG_VERSION}.tar.gz \\\n    && cd postgresql-${PG_VERSION} \\\n",
                    "rendered": {
                      "text": "\nRUN mkdir /assets \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz -o postgresql-${PG_VERSION}.tar.gz \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz.md5 -o postgresql-${PG_VERSION}.tar.gz.md5 \\\n    && [ \"$(cat postgresql-${PG_VERSION}.tar.gz.md5)\" = \"$(md5sum postgresql-${PG_VERSION}.tar.gz)\" ] \\\n    && tar -xzf postgresql-${PG_VERSION}.tar.gz \\\n    && cd postgresql-${PG_VERSION} \\\n",
                      "markdown": "`\nRUN mkdir /assets \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz -o postgresql-${PG_VERSION}.tar.gz \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz.md5 -o postgresql-${PG_VERSION}.tar.gz.md5 \\\n    && [ \"$(cat postgresql-${PG_VERSION}.tar.gz.md5)\" = \"$(md5sum postgresql-${PG_VERSION}.tar.gz)\" ] \\\n    && tar -xzf postgresql-${PG_VERSION}.tar.gz \\\n    && cd postgresql-${PG_VERSION} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 6,
                  "endLine": 10,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ENV LANG=C.UTF-8\n\nRUN mkdir /assets \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz -o postgresql-${PG_VERSION}.tar.gz \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz.md5 -o postgresql-${PG_VERSION}.tar.gz.md5 \\\n    && [ \"$(cat postgresql-${PG_VERSION}.tar.gz.md5)\" = \"$(md5sum postgresql-${PG_VERSION}.tar.gz)\" ] \\\n    && tar -xzf postgresql-${PG_VERSION}.tar.gz \\\n",
                    "rendered": {
                      "text": "ENV LANG=C.UTF-8\n\nRUN mkdir /assets \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz -o postgresql-${PG_VERSION}.tar.gz \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz.md5 -o postgresql-${PG_VERSION}.tar.gz.md5 \\\n    && [ \"$(cat postgresql-${PG_VERSION}.tar.gz.md5)\" = \"$(md5sum postgresql-${PG_VERSION}.tar.gz)\" ] \\\n    && tar -xzf postgresql-${PG_VERSION}.tar.gz \\\n",
                      "markdown": "`ENV LANG=C.UTF-8\n\nRUN mkdir /assets \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz -o postgresql-${PG_VERSION}.tar.gz \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz.md5 -o postgresql-${PG_VERSION}.tar.gz.md5 \\\n    && [ \"$(cat postgresql-${PG_VERSION}.tar.gz.md5)\" = \"$(md5sum postgresql-${PG_VERSION}.tar.gz)\" ] \\\n    && tar -xzf postgresql-${PG_VERSION}.tar.gz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 7,
                  "endColumn": 4,
                  "snippet": {
                    "text": "FROM ${BUILD_IMAGE}\n\nARG PG_VERSION=16.4\n\nENV LANG=C.UTF-8\n\nRUN mkdir /assets \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz -o postgresql-${PG_VERSION}.tar.gz \\\n",
                    "rendered": {
                      "text": "FROM ${BUILD_IMAGE}\n\nARG PG_VERSION=16.4\n\nENV LANG=C.UTF-8\n\nRUN mkdir /assets \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz -o postgresql-${PG_VERSION}.tar.gz \\\n",
                      "markdown": "`FROM ${BUILD_IMAGE}\n\nARG PG_VERSION=16.4\n\nENV LANG=C.UTF-8\n\nRUN mkdir /assets \\\n    && curl -f --retry 6 https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz -o postgresql-${PG_VERSION}.tar.gz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 24,
                  "endLine": 48,
                  "endColumn": 32,
                  "snippet": {
                    "text": "RUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n# create data directories\nRUN mkdir -p /data/index \\\n",
                    "rendered": {
                      "text": "RUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n# create data directories\nRUN mkdir -p /data/index \\\n",
                      "markdown": "`RUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n# create data directories\nRUN mkdir -p /data/index \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 52,
                  "endLine": 63,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 60,
                  "endLine": 61,
                  "endColumn": 4,
                  "snippet": {
                    "text": "COPY scripts/ /scripts/\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "COPY scripts/ /scripts/\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`COPY scripts/ /scripts/\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 11,
                  "endLine": 45,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ENV PORT=6070\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                    "rendered": {
                      "text": "ENV PORT=6070\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                      "markdown": "`ENV PORT=6070\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 12,
                  "endLine": 23,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n",
                      "markdown": "`  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 4,
                  "endLine": 52,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n# create data directories\nRUN mkdir -p /data/index \\\n  && chown -R $GITLAB_USER:$GITLAB_USER /data\n\nVOLUME [\"/data/index\"]\n\n",
                    "rendered": {
                      "text": "\n# create data directories\nRUN mkdir -p /data/index \\\n  && chown -R $GITLAB_USER:$GITLAB_USER /data\n\nVOLUME [\"/data/index\"]\n\n",
                      "markdown": "`\n# create data directories\nRUN mkdir -p /data/index \\\n  && chown -R $GITLAB_USER:$GITLAB_USER /data\n\nVOLUME [\"/data/index\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 4,
                  "endLine": 46,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n",
                    "rendered": {
                      "text": "\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n",
                      "markdown": "`\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 3,
                  "endLine": 45,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ENV PORT=6070\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                    "rendered": {
                      "text": "ENV PORT=6070\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                      "markdown": "`ENV PORT=6070\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 19,
                  "endLine": 42,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nFROM --platform=${TARGETPLATFORM} ${GITLAB_BASE_IMAGE}\n\nARG GITLAB_USER=git\nENV PORT=6070\n\n# create gitlab user\nRUN apt-get update \\\n",
                    "rendered": {
                      "text": "\nFROM --platform=${TARGETPLATFORM} ${GITLAB_BASE_IMAGE}\n\nARG GITLAB_USER=git\nENV PORT=6070\n\n# create gitlab user\nRUN apt-get update \\\n",
                      "markdown": "`\nFROM --platform=${TARGETPLATFORM} ${GITLAB_BASE_IMAGE}\n\nARG GITLAB_USER=git\nENV PORT=6070\n\n# create gitlab user\nRUN apt-get update \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 4,
                  "endLine": 32,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  && cd \"zoekt-$ZOEKT_VERSION\" \\\n  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-webserver ./cmd/zoekt-webserver/ \\\n  && rm -rf ${GOPATH} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd / \\\n  && rm -rf ${BUILD_DIR}\n",
                    "rendered": {
                      "text": "  && cd \"zoekt-$ZOEKT_VERSION\" \\\n  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-webserver ./cmd/zoekt-webserver/ \\\n  && rm -rf ${GOPATH} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd / \\\n  && rm -rf ${BUILD_DIR}\n",
                      "markdown": "`  && cd \"zoekt-$ZOEKT_VERSION\" \\\n  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-webserver ./cmd/zoekt-webserver/ \\\n  && rm -rf ${GOPATH} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd / \\\n  && rm -rf ${BUILD_DIR}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 4,
                  "endLine": 27,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && wget --output-document zoekt.zip \"$ZOEKT_ARCHIVE_DOWNLOAD_URL\" \\\n  && unzip zoekt.zip \\\n  && cd \"zoekt-$ZOEKT_VERSION\" \\\n  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-webserver ./cmd/zoekt-webserver/ \\\n",
                    "rendered": {
                      "text": "  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && wget --output-document zoekt.zip \"$ZOEKT_ARCHIVE_DOWNLOAD_URL\" \\\n  && unzip zoekt.zip \\\n  && cd \"zoekt-$ZOEKT_VERSION\" \\\n  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-webserver ./cmd/zoekt-webserver/ \\\n",
                      "markdown": "`  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && wget --output-document zoekt.zip \"$ZOEKT_ARCHIVE_DOWNLOAD_URL\" \\\n  && unzip zoekt.zip \\\n  && cd \"zoekt-$ZOEKT_VERSION\" \\\n  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-webserver ./cmd/zoekt-webserver/ \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 4,
                  "endLine": 24,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && wget --output-document zoekt.zip \"$ZOEKT_ARCHIVE_DOWNLOAD_URL\" \\\n",
                    "rendered": {
                      "text": "  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && wget --output-document zoekt.zip \"$ZOEKT_ARCHIVE_DOWNLOAD_URL\" \\\n",
                      "markdown": "`  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && wget --output-document zoekt.zip \"$ZOEKT_ARCHIVE_DOWNLOAD_URL\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 4,
                  "endLine": 23,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n",
                      "markdown": "`  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 6,
                  "snippet": {
                    "text": "ENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n",
                    "rendered": {
                      "text": "ENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n",
                      "markdown": "`ENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-webserver/Dockerfile"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 17,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GOPATH=/go\nARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\nARG GITLAB_BASE_IMAGE\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git \\\n",
                    "rendered": {
                      "text": "ARG GOPATH=/go\nARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\nARG GITLAB_BASE_IMAGE\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git \\\n",
                      "markdown": "`ARG GOPATH=/go\nARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\nARG GITLAB_BASE_IMAGE\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 6,
                  "endLine": 11,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nRUN mkdir /assets \\\n    && pip3 install --compile docutils==${DOCUTILS_VERSION} \\\n    && cp -R --parents \\\n        /usr/local/lib/python3.9/site-packages \\\n        /usr/local/bin/rst2* \\\n        /assets\n",
                    "rendered": {
                      "text": "\nRUN mkdir /assets \\\n    && pip3 install --compile docutils==${DOCUTILS_VERSION} \\\n    && cp -R --parents \\\n        /usr/local/lib/python3.9/site-packages \\\n        /usr/local/bin/rst2* \\\n        /assets\n",
                      "markdown": "`\nRUN mkdir /assets \\\n    && pip3 install --compile docutils==${DOCUTILS_VERSION} \\\n    && cp -R --parents \\\n        /usr/local/lib/python3.9/site-packages \\\n        /usr/local/bin/rst2* \\\n        /assets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 54,
                  "endLine": 39,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 36,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    chmod 0700 public/uploads\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "    chmod 0700 public/uploads\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                      "markdown": "`    chmod 0700 public/uploads\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 34,
                  "endColumn": 4,
                  "snippet": {
                    "text": "RUN cd /srv/gitlab && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n\nCMD [\"/scripts/process-wrapper\"]\n\n",
                    "rendered": {
                      "text": "RUN cd /srv/gitlab && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n\nCMD [\"/scripts/process-wrapper\"]\n\n",
                      "markdown": "`RUN cd /srv/gitlab && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n\nCMD [\"/scripts/process-wrapper\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 3,
                  "endLine": 32,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nRUN cd /srv/gitlab && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n\n",
                    "rendered": {
                      "text": "\nRUN cd /srv/gitlab && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n\n",
                      "markdown": "`\nRUN cd /srv/gitlab && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 30,
                  "endLine": 31,
                  "endColumn": 37,
                  "snippet": {
                    "text": "COPY --chown=git configuration/ ${CONFIG}/\n\nRUN cd /srv/gitlab && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n",
                    "rendered": {
                      "text": "COPY --chown=git configuration/ ${CONFIG}/\n\nRUN cd /srv/gitlab && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n",
                      "markdown": "`COPY --chown=git configuration/ ${CONFIG}/\n\nRUN cd /srv/gitlab && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3,
                  "endLine": 19,
                  "endColumn": 13,
                  "snippet": {
                    "text": "COPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\nRUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\n",
                    "rendered": {
                      "text": "COPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\nRUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\n",
                      "markdown": "`COPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\nRUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 49,
                  "endLine": 18,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG DOCUTILS_VERSION=\"0.19\"\n\nCOPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\nRUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n",
                    "rendered": {
                      "text": "ARG DOCUTILS_VERSION=\"0.19\"\n\nCOPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\nRUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n",
                      "markdown": "`ARG DOCUTILS_VERSION=\"0.19\"\n\nCOPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\nRUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 63,
                  "endColumn": 4,
                  "snippet": {
                    "text": "VOLUME /var/log\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n\nCMD [\"/scripts/process-wrapper\"]\n",
                    "rendered": {
                      "text": "VOLUME /var/log\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n\nCMD [\"/scripts/process-wrapper\"]\n",
                      "markdown": "`VOLUME /var/log\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n\nCMD [\"/scripts/process-wrapper\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 52,
                  "endLine": 61,
                  "endColumn": 57,
                  "snippet": {
                    "text": "# are written to the perms can be fixed\nVOLUME /var/log\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n\nCMD [\"/scripts/process-wrapper\"]\n",
                    "rendered": {
                      "text": "# are written to the perms can be fixed\nVOLUME /var/log\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n\nCMD [\"/scripts/process-wrapper\"]\n",
                      "markdown": "`# are written to the perms can be fixed\nVOLUME /var/log\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n\nCMD [\"/scripts/process-wrapper\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 6,
                  "endLine": 49,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && mkdir -p public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chown -R ${UID}:0 public/uploads /home/${GITLAB_USER} /var/log/gitlab \\\n    && chmod -R g=u public/uploads /home/${GITLAB_USER} /var/log/gitlab\n\n## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n",
                    "rendered": {
                      "text": "    && mkdir -p public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chown -R ${UID}:0 public/uploads /home/${GITLAB_USER} /var/log/gitlab \\\n    && chmod -R g=u public/uploads /home/${GITLAB_USER} /var/log/gitlab\n\n## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n",
                      "markdown": "`    && mkdir -p public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chown -R ${UID}:0 public/uploads /home/${GITLAB_USER} /var/log/gitlab \\\n    && chmod -R g=u public/uploads /home/${GITLAB_USER} /var/log/gitlab\n\n## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 6,
                  "endLine": 48,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN cd /srv/gitlab \\\n    && mkdir -p public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chown -R ${UID}:0 public/uploads /home/${GITLAB_USER} /var/log/gitlab \\\n    && chmod -R g=u public/uploads /home/${GITLAB_USER} /var/log/gitlab\n\n## Hardening: CIS L1 SCAP\n",
                    "rendered": {
                      "text": "RUN cd /srv/gitlab \\\n    && mkdir -p public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chown -R ${UID}:0 public/uploads /home/${GITLAB_USER} /var/log/gitlab \\\n    && chmod -R g=u public/uploads /home/${GITLAB_USER} /var/log/gitlab\n\n## Hardening: CIS L1 SCAP\n",
                      "markdown": "`RUN cd /srv/gitlab \\\n    && mkdir -p public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chown -R ${UID}:0 public/uploads /home/${GITLAB_USER} /var/log/gitlab \\\n    && chmod -R g=u public/uploads /home/${GITLAB_USER} /var/log/gitlab\n\n## Hardening: CIS L1 SCAP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 6,
                  "endLine": 47,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN cd /srv/gitlab \\\n    && mkdir -p public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chown -R ${UID}:0 public/uploads /home/${GITLAB_USER} /var/log/gitlab \\\n    && chmod -R g=u public/uploads /home/${GITLAB_USER} /var/log/gitlab\n\n",
                    "rendered": {
                      "text": "\nRUN cd /srv/gitlab \\\n    && mkdir -p public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chown -R ${UID}:0 public/uploads /home/${GITLAB_USER} /var/log/gitlab \\\n    && chmod -R g=u public/uploads /home/${GITLAB_USER} /var/log/gitlab\n\n",
                      "markdown": "`\nRUN cd /srv/gitlab \\\n    && mkdir -p public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chown -R ${UID}:0 public/uploads /home/${GITLAB_USER} /var/log/gitlab \\\n    && chmod -R g=u public/uploads /home/${GITLAB_USER} /var/log/gitlab\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 43,
                  "endColumn": 4,
                  "snippet": {
                    "text": "      description=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\"\n\nCOPY --from=composite /assets/ /\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n\nRUN cd /srv/gitlab \\\n    && mkdir -p public/uploads \\\n",
                    "rendered": {
                      "text": "      description=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\"\n\nCOPY --from=composite /assets/ /\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n\nRUN cd /srv/gitlab \\\n    && mkdir -p public/uploads \\\n",
                      "markdown": "`      description=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\"\n\nCOPY --from=composite /assets/ /\n\nENV GITALY_FEATURE_DEFAULT_ON=1\n\nRUN cd /srv/gitlab \\\n    && mkdir -p public/uploads \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 29,
                  "endLine": 39,
                  "endColumn": 38,
                  "snippet": {
                    "text": "      version=${GITLAB_VERSION} \\\n      release=${GITLAB_VERSION} \\\n      summary=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\" \\\n      description=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\"\n\nCOPY --from=composite /assets/ /\n\n",
                    "rendered": {
                      "text": "      version=${GITLAB_VERSION} \\\n      release=${GITLAB_VERSION} \\\n      summary=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\" \\\n      description=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\"\n\nCOPY --from=composite /assets/ /\n\n",
                      "markdown": "`      version=${GITLAB_VERSION} \\\n      release=${GITLAB_VERSION} \\\n      summary=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\" \\\n      description=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\"\n\nCOPY --from=composite /assets/ /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 25,
                  "endLine": 38,
                  "endColumn": 34,
                  "snippet": {
                    "text": "      vendor=\"GitLab\" \\\n      version=${GITLAB_VERSION} \\\n      release=${GITLAB_VERSION} \\\n      summary=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\" \\\n      description=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\"\n\nCOPY --from=composite /assets/ /\n",
                    "rendered": {
                      "text": "      vendor=\"GitLab\" \\\n      version=${GITLAB_VERSION} \\\n      release=${GITLAB_VERSION} \\\n      summary=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\" \\\n      description=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\"\n\nCOPY --from=composite /assets/ /\n",
                      "markdown": "`      vendor=\"GitLab\" \\\n      version=${GITLAB_VERSION} \\\n      release=${GITLAB_VERSION} \\\n      summary=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\" \\\n      description=\"GitLab Web Service runs the GitLab Rails application with Puma web server.\"\n\nCOPY --from=composite /assets/ /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3,
                  "endLine": 19,
                  "endColumn": 10,
                  "snippet": {
                    "text": "COPY configuration/ /assets/srv/gitlab/config\nCOPY scripts/ /assets/scripts\n\nRUN chown -R ${UID}:0 /assets/srv/gitlab\n\n## FINAL IMAGE ##\n\n",
                    "rendered": {
                      "text": "COPY configuration/ /assets/srv/gitlab/config\nCOPY scripts/ /assets/scripts\n\nRUN chown -R ${UID}:0 /assets/srv/gitlab\n\n## FINAL IMAGE ##\n\n",
                      "markdown": "`COPY configuration/ /assets/srv/gitlab/config\nCOPY scripts/ /assets/scripts\n\nRUN chown -R ${UID}:0 /assets/srv/gitlab\n\n## FINAL IMAGE ##\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 4,
                  "endLine": 7,
                  "endColumn": 12,
                  "snippet": {
                    "text": "# Use a composite image to set the permissions properly in the artifacts. This\n# is needed due to two limitations with Docker:\n# 1. ADD doesn't set permissions for tarballs: https://github.com/moby/moby/issues/35525\n# 2. docker cp doesn't preserve UID/GID: https://github.com/moby/moby/issues/41727\nFROM ${RAILS_IMAGE} as composite\n\nARG UID\n",
                    "rendered": {
                      "text": "# Use a composite image to set the permissions properly in the artifacts. This\n# is needed due to two limitations with Docker:\n# 1. ADD doesn't set permissions for tarballs: https://github.com/moby/moby/issues/35525\n# 2. docker cp doesn't preserve UID/GID: https://github.com/moby/moby/issues/41727\nFROM ${RAILS_IMAGE} as composite\n\nARG UID\n",
                      "markdown": "`# Use a composite image to set the permissions properly in the artifacts. This\n# is needed due to two limitations with Docker:\n# 1. ADD doesn't set permissions for tarballs: https://github.com/moby/moby/issues/35525\n# 2. docker cp doesn't preserve UID/GID: https://github.com/moby/moby/issues/41727\nFROM ${RAILS_IMAGE} as composite\n\nARG UID\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 27,
                  "endLine": 97,
                  "endColumn": 35,
                  "snippet": {
                    "text": "-    DNG  => ['TIFF', 'Digital Negative'],\n-    DOC  => ['FPX',  'Microsoft Word Document'],\n-    DOCM => [['ZIP','FPX'], 'Office Open XML Document Macro-enabled'],\n-    # Note: I have seen a password-protected DOCX file which was FPX-like, so I assume\n-    # that any other MS Office file could be like this too.  The only difference is\n-    # that the ZIP and FPX formats are checked first, so if this is wrong, no biggie.\n-    DOCX => [['ZIP','FPX'], 'Office Open XML Document'],\n",
                    "rendered": {
                      "text": "-    DNG  => ['TIFF', 'Digital Negative'],\n-    DOC  => ['FPX',  'Microsoft Word Document'],\n-    DOCM => [['ZIP','FPX'], 'Office Open XML Document Macro-enabled'],\n-    # Note: I have seen a password-protected DOCX file which was FPX-like, so I assume\n-    # that any other MS Office file could be like this too.  The only difference is\n-    # that the ZIP and FPX formats are checked first, so if this is wrong, no biggie.\n-    DOCX => [['ZIP','FPX'], 'Office Open XML Document'],\n",
                      "markdown": "`-    DNG  => ['TIFF', 'Digital Negative'],\n-    DOC  => ['FPX',  'Microsoft Word Document'],\n-    DOCM => [['ZIP','FPX'], 'Office Open XML Document Macro-enabled'],\n-    # Note: I have seen a password-protected DOCX file which was FPX-like, so I assume\n-    # that any other MS Office file could be like this too.  The only difference is\n-    # that the ZIP and FPX formats are checked first, so if this is wrong, no biggie.\n-    DOCX => [['ZIP','FPX'], 'Office Open XML Document'],\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 678,
                  "startColumn": 47,
                  "endLine": 678,
                  "endColumn": 51,
                  "snippet": {
                    "text": "-\n-=head1 AUTHOR\n-\n-Copyright 2003-2024, Phil Harvey (philharvey66 at gmail.com)\n-\n-This library is free software; you can redistribute it and/or modify it\n-under the same terms as Perl itself.\n",
                    "rendered": {
                      "text": "-\n-=head1 AUTHOR\n-\n-Copyright 2003-2024, Phil Harvey (philharvey66 at gmail.com)\n-\n-This library is free software; you can redistribute it and/or modify it\n-under the same terms as Perl itself.\n",
                      "markdown": "`-\n-=head1 AUTHOR\n-\n-Copyright 2003-2024, Phil Harvey (philharvey66 at gmail.com)\n-\n-This library is free software; you can redistribute it and/or modify it\n-under the same terms as Perl itself.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 615,
                  "startColumn": 49,
                  "endLine": 615,
                  "endColumn": 53,
                  "snippet": {
                    "text": "-        if ($len2 > 100000000) {\n-            if ($len2 >= 0x80000000) {\n-                if (not $et->Options('LargeFileSupport')) {\n-                    $et->Warn('End of processing at large chunk (LargeFileSupport not enabled)');\n-                    last;\n-                } elsif ($et->Options('LargeFileSupport') eq '2') {\n-                    $et->WarnOnce('Skipping large chunk (LargeFileSupport is 2)');\n",
                    "rendered": {
                      "text": "-        if ($len2 > 100000000) {\n-            if ($len2 >= 0x80000000) {\n-                if (not $et->Options('LargeFileSupport')) {\n-                    $et->Warn('End of processing at large chunk (LargeFileSupport not enabled)');\n-                    last;\n-                } elsif ($et->Options('LargeFileSupport') eq '2') {\n-                    $et->WarnOnce('Skipping large chunk (LargeFileSupport is 2)');\n",
                      "markdown": "`-        if ($len2 > 100000000) {\n-            if ($len2 >= 0x80000000) {\n-                if (not $et->Options('LargeFileSupport')) {\n-                    $et->Warn('End of processing at large chunk (LargeFileSupport not enabled)');\n-                    last;\n-                } elsif ($et->Options('LargeFileSupport') eq '2') {\n-                    $et->WarnOnce('Skipping large chunk (LargeFileSupport is 2)');\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 32,
                  "endLine": 367,
                  "endColumn": 39,
                  "snippet": {
                    "text": "-    XLSB => [['ZIP','FPX'], 'Office Open XML Spreadsheet Binary'],\n-    XLSM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Macro-enabled'],\n-    XLSX => [['ZIP','FPX'], 'Office Open XML Spreadsheet'],\n-    XLT  => ['FPX',  'Microsoft Excel Template'],\n-    XLTM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Template Macro-enabled'],\n-    XLTX => [['ZIP','FPX'], 'Office Open XML Spreadsheet Template'],\n-    XMP  => ['XMP',  'Extensible Metadata Platform'],\n",
                    "rendered": {
                      "text": "-    XLSB => [['ZIP','FPX'], 'Office Open XML Spreadsheet Binary'],\n-    XLSM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Macro-enabled'],\n-    XLSX => [['ZIP','FPX'], 'Office Open XML Spreadsheet'],\n-    XLT  => ['FPX',  'Microsoft Excel Template'],\n-    XLTM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Template Macro-enabled'],\n-    XLTX => [['ZIP','FPX'], 'Office Open XML Spreadsheet Template'],\n-    XMP  => ['XMP',  'Extensible Metadata Platform'],\n",
                      "markdown": "`-    XLSB => [['ZIP','FPX'], 'Office Open XML Spreadsheet Binary'],\n-    XLSM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Macro-enabled'],\n-    XLSX => [['ZIP','FPX'], 'Office Open XML Spreadsheet'],\n-    XLT  => ['FPX',  'Microsoft Excel Template'],\n-    XLTM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Template Macro-enabled'],\n-    XLTX => [['ZIP','FPX'], 'Office Open XML Spreadsheet Template'],\n-    XMP  => ['XMP',  'Extensible Metadata Platform'],\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 363,
                  "startColumn": 32,
                  "endLine": 363,
                  "endColumn": 39,
                  "snippet": {
                    "text": "-    XISF => ['XISF', 'Extensible Image Serialization Format'],\n-    XLA  => ['FPX',  'Microsoft Excel Add-in'],\n-    XLAM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Add-in Macro-enabled'],\n-    XLS  => ['FPX',  'Microsoft Excel Spreadsheet'],\n-    XLSB => [['ZIP','FPX'], 'Office Open XML Spreadsheet Binary'],\n-    XLSM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Macro-enabled'],\n-    XLSX => [['ZIP','FPX'], 'Office Open XML Spreadsheet'],\n",
                    "rendered": {
                      "text": "-    XISF => ['XISF', 'Extensible Image Serialization Format'],\n-    XLA  => ['FPX',  'Microsoft Excel Add-in'],\n-    XLAM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Add-in Macro-enabled'],\n-    XLS  => ['FPX',  'Microsoft Excel Spreadsheet'],\n-    XLSB => [['ZIP','FPX'], 'Office Open XML Spreadsheet Binary'],\n-    XLSM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Macro-enabled'],\n-    XLSX => [['ZIP','FPX'], 'Office Open XML Spreadsheet'],\n",
                      "markdown": "`-    XISF => ['XISF', 'Extensible Image Serialization Format'],\n-    XLA  => ['FPX',  'Microsoft Excel Add-in'],\n-    XLAM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Add-in Macro-enabled'],\n-    XLS  => ['FPX',  'Microsoft Excel Spreadsheet'],\n-    XLSB => [['ZIP','FPX'], 'Office Open XML Spreadsheet Binary'],\n-    XLSM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Macro-enabled'],\n-    XLSX => [['ZIP','FPX'], 'Office Open XML Spreadsheet'],\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 361,
                  "startColumn": 32,
                  "endLine": 361,
                  "endColumn": 39,
                  "snippet": {
                    "text": "-    XCF  => ['XCF',  'GIMP native image format'],\n-    XHTML=> ['HTML', 'Extensible HyperText Markup Language'],\n-    XISF => ['XISF', 'Extensible Image Serialization Format'],\n-    XLA  => ['FPX',  'Microsoft Excel Add-in'],\n-    XLAM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Add-in Macro-enabled'],\n-    XLS  => ['FPX',  'Microsoft Excel Spreadsheet'],\n-    XLSB => [['ZIP','FPX'], 'Office Open XML Spreadsheet Binary'],\n",
                    "rendered": {
                      "text": "-    XCF  => ['XCF',  'GIMP native image format'],\n-    XHTML=> ['HTML', 'Extensible HyperText Markup Language'],\n-    XISF => ['XISF', 'Extensible Image Serialization Format'],\n-    XLA  => ['FPX',  'Microsoft Excel Add-in'],\n-    XLAM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Add-in Macro-enabled'],\n-    XLS  => ['FPX',  'Microsoft Excel Spreadsheet'],\n-    XLSB => [['ZIP','FPX'], 'Office Open XML Spreadsheet Binary'],\n",
                      "markdown": "`-    XCF  => ['XCF',  'GIMP native image format'],\n-    XHTML=> ['HTML', 'Extensible HyperText Markup Language'],\n-    XISF => ['XISF', 'Extensible Image Serialization Format'],\n-    XLA  => ['FPX',  'Microsoft Excel Add-in'],\n-    XLAM => [['ZIP','FPX'], 'Office Open XML Spreadsheet Add-in Macro-enabled'],\n-    XLS  => ['FPX',  'Microsoft Excel Spreadsheet'],\n-    XLSB => [['ZIP','FPX'], 'Office Open XML Spreadsheet Binary'],\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 41,
                  "endLine": 6,
                  "endColumn": 45,
                  "snippet": {
                    "text": "--- a/lib/Image/ExifTool.pm\n+++ b/lib/Image/ExifTool.pm\n@@ -192,19 +192,10 @@ $defaultLang = 'en';    # default language\n # 2) Put types with weak file signatures at end of list to avoid false matches\n # 3) PLIST must be in this list for the binary PLIST format, although it may\n #    cause a file to be checked twice for XML\n-@fileTypes = qw(JPEG EXV CRW DR4 TIFF GIF MRW RAF X3F JP2 PNG MIE MIFF PS PDF\n",
                    "rendered": {
                      "text": "--- a/lib/Image/ExifTool.pm\n+++ b/lib/Image/ExifTool.pm\n@@ -192,19 +192,10 @@ $defaultLang = 'en';    # default language\n # 2) Put types with weak file signatures at end of list to avoid false matches\n # 3) PLIST must be in this list for the binary PLIST format, although it may\n #    cause a file to be checked twice for XML\n-@fileTypes = qw(JPEG EXV CRW DR4 TIFF GIF MRW RAF X3F JP2 PNG MIE MIFF PS PDF\n",
                      "markdown": "`--- a/lib/Image/ExifTool.pm\n+++ b/lib/Image/ExifTool.pm\n@@ -192,19 +192,10 @@ $defaultLang = 'en';    # default language\n # 2) Put types with weak file signatures at end of list to avoid false matches\n # 3) PLIST must be in this list for the binary PLIST format, although it may\n #    cause a file to be checked twice for XML\n-@fileTypes = qw(JPEG EXV CRW DR4 TIFF GIF MRW RAF X3F JP2 PNG MIE MIFF PS PDF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 681,
                  "startColumn": 24,
                  "endLine": 681,
                  "endColumn": 30,
                  "snippet": {
                    "text": "-Copyright 2003-2024, Phil Harvey (philharvey66 at gmail.com)\n-\n-This library is free software; you can redistribute it and/or modify it\n-under the same terms as Perl itself.\n-\n-=head1 REFERENCES\n-\n",
                    "rendered": {
                      "text": "-Copyright 2003-2024, Phil Harvey (philharvey66 at gmail.com)\n-\n-This library is free software; you can redistribute it and/or modify it\n-under the same terms as Perl itself.\n-\n-=head1 REFERENCES\n-\n",
                      "markdown": "`-Copyright 2003-2024, Phil Harvey (philharvey66 at gmail.com)\n-\n-This library is free software; you can redistribute it and/or modify it\n-under the same terms as Perl itself.\n-\n-=head1 REFERENCES\n-\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 68,
                  "endLine": 379,
                  "endColumn": 5,
                  "snippet": {
                    "text": "-    ZIP  => ['ZIP',  'ZIP archive'],\n );\n \n # typical extension for each file type (if different than FileType)\ndiff --git a/lib/Image/ExifTool/AIFF.pm b/lib/Image/ExifTool/AIFF.pm\ndeleted file mode 100644\nindex 5c2ffded..00000000\n--- a/lib/Image/ExifTool/AIFF.pm\n",
                    "rendered": {
                      "text": "-    ZIP  => ['ZIP',  'ZIP archive'],\n );\n \n # typical extension for each file type (if different than FileType)\ndiff --git a/lib/Image/ExifTool/AIFF.pm b/lib/Image/ExifTool/AIFF.pm\ndeleted file mode 100644\nindex 5c2ffded..00000000\n--- a/lib/Image/ExifTool/AIFF.pm\n",
                      "markdown": "`-    ZIP  => ['ZIP',  'ZIP archive'],\n );\n \n # typical extension for each file type (if different than FileType)\ndiff --git a/lib/Image/ExifTool/AIFF.pm b/lib/Image/ExifTool/AIFF.pm\ndeleted file mode 100644\nindex 5c2ffded..00000000\n--- a/lib/Image/ExifTool/AIFF.pm\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 4,
                  "endLine": 332,
                  "endColumn": 9,
                  "snippet": {
                    "text": "-    SRW  => ['TIFF', 'Samsung RAW format'],\n-    SVG  => ['XMP',  'Scalable Vector Graphics'],\n-    SWF  => ['SWF',  'Shockwave Flash'],\n-    TAR  => ['TAR',  'TAR archive'],\n-    THM  => ['JPEG', 'Thumbnail'],\n-    THMX => [['ZIP','FPX'], 'Office Open XML Theme'],\n-    TIF  =>  'TIFF',\n",
                    "rendered": {
                      "text": "-    SRW  => ['TIFF', 'Samsung RAW format'],\n-    SVG  => ['XMP',  'Scalable Vector Graphics'],\n-    SWF  => ['SWF',  'Shockwave Flash'],\n-    TAR  => ['TAR',  'TAR archive'],\n-    THM  => ['JPEG', 'Thumbnail'],\n-    THMX => [['ZIP','FPX'], 'Office Open XML Theme'],\n-    TIF  =>  'TIFF',\n",
                      "markdown": "`-    SRW  => ['TIFF', 'Samsung RAW format'],\n-    SVG  => ['XMP',  'Scalable Vector Graphics'],\n-    SWF  => ['SWF',  'Shockwave Flash'],\n-    TAR  => ['TAR',  'TAR archive'],\n-    THM  => ['JPEG', 'Thumbnail'],\n-    THMX => [['ZIP','FPX'], 'Office Open XML Theme'],\n-    TIF  =>  'TIFF',\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 4,
                  "endLine": 317,
                  "endColumn": 9,
                  "snippet": {
                    "text": "-    RIFF => ['RIFF', 'Resource Interchange File Format'],\n-    RM   => ['Real', 'Real Media'],\n-    RMVB => ['Real', 'Real Media Variable Bitrate'],\n-    RPM  => ['Real', 'Real Media Plug-in Metafile'],\n-    RSRC => ['RSRC', 'Mac OS Resource'],\n-    RTF  => ['RTF',  'Rich Text Format'],\n-    RV   => ['Real', 'Real Video'],\n",
                    "rendered": {
                      "text": "-    RIFF => ['RIFF', 'Resource Interchange File Format'],\n-    RM   => ['Real', 'Real Media'],\n-    RMVB => ['Real', 'Real Media Variable Bitrate'],\n-    RPM  => ['Real', 'Real Media Plug-in Metafile'],\n-    RSRC => ['RSRC', 'Mac OS Resource'],\n-    RTF  => ['RTF',  'Rich Text Format'],\n-    RV   => ['Real', 'Real Video'],\n",
                      "markdown": "`-    RIFF => ['RIFF', 'Resource Interchange File Format'],\n-    RM   => ['Real', 'Real Media'],\n-    RMVB => ['Real', 'Real Media Variable Bitrate'],\n-    RPM  => ['Real', 'Real Media Plug-in Metafile'],\n-    RSRC => ['RSRC', 'Mac OS Resource'],\n-    RTF  => ['RTF',  'Rich Text Format'],\n-    RV   => ['Real', 'Real Video'],\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 4,
                  "endLine": 269,
                  "endColumn": 9,
                  "snippet": {
                    "text": "-    PFM  => [['Font','PFM2'], 'Printer Font Metrics'], # (description is overridden for Portable FloatMap images)\n-    PGF  => ['PGF',  'Progressive Graphics File'],\n-    PGM  => ['PPM',  'Portable Gray Map'],\n-    PHP  => ['PHP',  'PHP Hypertext Preprocessor'],\n-    PHP3 =>  'PHP',\n-    PHP4 =>  'PHP',\n-    PHP5 =>  'PHP',\n",
                    "rendered": {
                      "text": "-    PFM  => [['Font','PFM2'], 'Printer Font Metrics'], # (description is overridden for Portable FloatMap images)\n-    PGF  => ['PGF',  'Progressive Graphics File'],\n-    PGM  => ['PPM',  'Portable Gray Map'],\n-    PHP  => ['PHP',  'PHP Hypertext Preprocessor'],\n-    PHP3 =>  'PHP',\n-    PHP4 =>  'PHP',\n-    PHP5 =>  'PHP',\n",
                      "markdown": "`-    PFM  => [['Font','PFM2'], 'Printer Font Metrics'], # (description is overridden for Portable FloatMap images)\n-    PGF  => ['PGF',  'Progressive Graphics File'],\n-    PGM  => ['PPM',  'Portable Gray Map'],\n-    PHP  => ['PHP',  'PHP Hypertext Preprocessor'],\n-    PHP3 =>  'PHP',\n-    PHP4 =>  'PHP',\n-    PHP5 =>  'PHP',\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 38,
                  "endLine": 14,
                  "endColumn": 43,
                  "snippet": {
                    "text": "-                OGG FLAC APE MPC MKV MXF DV PMP IND PGF ICC ITC FLIR FLIF FPF\n-                LFP HTML VRD RTF FITS XISF XCF DSS QTIF FPX PICT ZIP GZIP PLIST\n-                RAR 7Z BZ2 CZI TAR EXE EXR HDR CHM LNK WMF AVC DEX DPX RAW Font\n-                JUMBF RSRC M2TS MacOS PHP PCX DCX DWF DWG DXF WTV Torrent VCard\n-                LRI R3D AA PDB PFM2 MRC LIF JXL MOI ISO ALIAS JSON MP3 DICOM PCD\n-                NKA ICO TXT AAC);\n+@fileTypes = qw(JPEG TIFF);\n",
                    "rendered": {
                      "text": "-                OGG FLAC APE MPC MKV MXF DV PMP IND PGF ICC ITC FLIR FLIF FPF\n-                LFP HTML VRD RTF FITS XISF XCF DSS QTIF FPX PICT ZIP GZIP PLIST\n-                RAR 7Z BZ2 CZI TAR EXE EXR HDR CHM LNK WMF AVC DEX DPX RAW Font\n-                JUMBF RSRC M2TS MacOS PHP PCX DCX DWF DWG DXF WTV Torrent VCard\n-                LRI R3D AA PDB PFM2 MRC LIF JXL MOI ISO ALIAS JSON MP3 DICOM PCD\n-                NKA ICO TXT AAC);\n+@fileTypes = qw(JPEG TIFF);\n",
                      "markdown": "`-                OGG FLAC APE MPC MKV MXF DV PMP IND PGF ICC ITC FLIR FLIF FPF\n-                LFP HTML VRD RTF FITS XISF XCF DSS QTIF FPX PICT ZIP GZIP PLIST\n-                RAR 7Z BZ2 CZI TAR EXE EXR HDR CHM LNK WMF AVC DEX DPX RAW Font\n-                JUMBF RSRC M2TS MacOS PHP PCX DCX DWF DWG DXF WTV Torrent VCard\n-                LRI R3D AA PDB PFM2 MRC LIF JXL MOI ISO ALIAS JSON MP3 DICOM PCD\n-                NKA ICO TXT AAC);\n+@fileTypes = qw(JPEG TIFF);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/patches/allow-only-tiff-jpeg-exif-strip.patch"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 31,
                  "endLine": 13,
                  "endColumn": 36,
                  "snippet": {
                    "text": "-                PSD XMP BMP WPG BPG PPM RIFF AIFF ASF MOV MPEG Real SWF PSP FLV\n-                OGG FLAC APE MPC MKV MXF DV PMP IND PGF ICC ITC FLIR FLIF FPF\n-                LFP HTML VRD RTF FITS XISF XCF DSS QTIF FPX PICT ZIP GZIP PLIST\n-                RAR 7Z BZ2 CZI TAR EXE EXR HDR CHM LNK WMF AVC DEX DPX RAW Font\n-                JUMBF RSRC M2TS MacOS PHP PCX DCX DWF DWG DXF WTV Torrent VCard\n-                LRI R3D AA PDB PFM2 MRC LIF JXL MOI ISO ALIAS JSON MP3 DICOM PCD\n-                NKA ICO TXT AAC);\n",
                    "rendered": {
                      "text": "-                PSD XMP BMP WPG BPG PPM RIFF AIFF ASF MOV MPEG Real SWF PSP FLV\n-                OGG FLAC APE MPC MKV MXF DV PMP IND PGF ICC ITC FLIR FLIF FPF\n-                LFP HTML VRD RTF FITS XISF XCF DSS QTIF FPX PICT ZIP GZIP PLIST\n-                RAR 7Z BZ2 CZI TAR EXE EXR HDR CHM LNK WMF AVC DEX DPX RAW Font\n-                JUMBF RSRC M2TS MacOS PHP PCX DCX DWF DWG DXF WTV Torrent VCard\n-                LRI R3D AA PDB PFM2 MRC LIF JXL MOI ISO ALIAS JSON MP3 DICOM PCD\n-                NKA ICO TXT AAC);\n",
                      "markdown": "`-                PSD XMP BMP WPG BPG PPM RIFF AIFF ASF MOV MPEG Real SWF PSP FLV\n-                OGG FLAC APE MPC MKV MXF DV PMP IND PGF ICC ITC FLIR FLIF FPF\n-                LFP HTML VRD RTF FITS XISF XCF DSS QTIF FPX PICT ZIP GZIP PLIST\n-                RAR 7Z BZ2 CZI TAR EXE EXR HDR CHM LNK WMF AVC DEX DPX RAW Font\n-                JUMBF RSRC M2TS MacOS PHP PCX DCX DWF DWG DXF WTV Torrent VCard\n-                LRI R3D AA PDB PFM2 MRC LIF JXL MOI ISO ALIAS JSON MP3 DICOM PCD\n-                NKA ICO TXT AAC);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 6,
                  "endLine": 13,
                  "endColumn": 12,
                  "snippet": {
                    "text": "RUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n    && mkdir -p /assets \\\n    && make DESTDIR=/assets install \\\n    && rm -Rf /assets/usr/local/share/man\n",
                    "rendered": {
                      "text": "RUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n    && mkdir -p /assets \\\n    && make DESTDIR=/assets install \\\n    && rm -Rf /assets/usr/local/share/man\n",
                      "markdown": "`RUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n    && mkdir -p /assets \\\n    && make DESTDIR=/assets install \\\n    && rm -Rf /assets/usr/local/share/man\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 149,
                  "endLine": 10,
                  "endColumn": 154,
                  "snippet": {
                    "text": "\nCOPY patches/ ${BUILD_DIR}/patches\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n",
                    "rendered": {
                      "text": "\nCOPY patches/ ${BUILD_DIR}/patches\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n",
                      "markdown": "`\nCOPY patches/ ${BUILD_DIR}/patches\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exiftool/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 3,
                  "endLine": 10,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nCOPY patches/ ${BUILD_DIR}/patches\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n",
                    "rendered": {
                      "text": "\nCOPY patches/ ${BUILD_DIR}/patches\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n",
                      "markdown": "`\nCOPY patches/ ${BUILD_DIR}/patches\n\nRUN curl -f --retry 6 https://gitlab.com/gitlab-org/build/omnibus-mirror/exiftool/-/archive/${EXIFTOOL_VERSION}/exiftool-${EXIFTOOL_VERSION}.tar.gz | tar -xz \\\n    && cd exiftool-${EXIFTOOL_VERSION} \\\n    && patch -p1 < ${BUILD_DIR}/patches/allow-only-tiff-jpeg-exif-strip.patch \\\n    && perl Makefile.PL \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/lib/checks/postgresql.rb"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 35,
                  "endLine": 98,
                  "endColumn": 43,
                  "snippet": {
                    "text": "          end\n\n          puts \"WARNING: Problem accessing #{@shard_name} database (#{ActiveRecord::Base.connection_db_config.database}).\"\\\n               \" Confirm username, password, and permissions.\" if @database_versions.empty?\n\n          # Returning false prevents bailing when BYPASS_SCHEMA_VERSION set.\n          if table_exists\n",
                    "rendered": {
                      "text": "          end\n\n          puts \"WARNING: Problem accessing #{@shard_name} database (#{ActiveRecord::Base.connection_db_config.database}).\"\\\n               \" Confirm username, password, and permissions.\" if @database_versions.empty?\n\n          # Returning false prevents bailing when BYPASS_SCHEMA_VERSION set.\n          if table_exists\n",
                      "markdown": "`          end\n\n          puts \"WARNING: Problem accessing #{@shard_name} database (#{ActiveRecord::Base.connection_db_config.database}).\"\\\n               \" Confirm username, password, and permissions.\" if @database_versions.empty?\n\n          # Returning false prevents bailing when BYPASS_SCHEMA_VERSION set.\n          if table_exists\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/lib/checks/postgresql.rb"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 8,
                  "endLine": 130,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n    def self.production_databases\n      db_configs = database_configurations.configs_for(\n        env_name: 'production', include_replicas: false)\n        # we filter out the embedding DB as it's schema only\n        # receives selected migrations and will lag behind\n        .reject { |db_config| db_config.name == 'embedding' }\n",
                    "rendered": {
                      "text": "\n    def self.production_databases\n      db_configs = database_configurations.configs_for(\n        env_name: 'production', include_replicas: false)\n        # we filter out the embedding DB as it's schema only\n        # receives selected migrations and will lag behind\n        .reject { |db_config| db_config.name == 'embedding' }\n",
                      "markdown": "`\n    def self.production_databases\n      db_configs = database_configurations.configs_for(\n        env_name: 'production', include_replicas: false)\n        # we filter out the embedding DB as it's schema only\n        # receives selected migrations and will lag behind\n        .reject { |db_config| db_config.name == 'embedding' }\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/lib/checks/postgresql.rb"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 25,
                  "endLine": 75,
                  "endColumn": 66,
                  "snippet": {
                    "text": "      BYPASS_SCHEMA_VERSION_KEY='BYPASS_SCHEMA_VERSION'\n\n      def bypass_schema_version_check\n        downcase_value = ENV[BYPASS_SCHEMA_VERSION_KEY].to_s.downcase\n\n        return false if downcase_value.empty?\n        downcase_value != 'false' && downcase_value != '0'\n",
                    "rendered": {
                      "text": "      BYPASS_SCHEMA_VERSION_KEY='BYPASS_SCHEMA_VERSION'\n\n      def bypass_schema_version_check\n        downcase_value = ENV[BYPASS_SCHEMA_VERSION_KEY].to_s.downcase\n\n        return false if downcase_value.empty?\n        downcase_value != 'false' && downcase_value != '0'\n",
                      "markdown": "`      BYPASS_SCHEMA_VERSION_KEY='BYPASS_SCHEMA_VERSION'\n\n      def bypass_schema_version_check\n        downcase_value = ENV[BYPASS_SCHEMA_VERSION_KEY].to_s.downcase\n\n        return false if downcase_value.empty?\n        downcase_value != 'false' && downcase_value != '0'\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/lib/checks/postgresql.rb"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 6,
                  "endLine": 45,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    end\n\n    def self.db_schema_target\n      ENV['DB_SCHEMA_TARGET']\n    end\n\n    class DatabaseConfig\n",
                    "rendered": {
                      "text": "    end\n\n    def self.db_schema_target\n      ENV['DB_SCHEMA_TARGET']\n    end\n\n    class DatabaseConfig\n",
                      "markdown": "`    end\n\n    def self.db_schema_target\n      ENV['DB_SCHEMA_TARGET']\n    end\n\n    class DatabaseConfig\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/custom-instance-setup"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 26,
                  "endLine": 8,
                  "endColumn": 41,
                  "snippet": {
                    "text": "# A proper fix is being tracked in: https://gitlab.com/gitlab-org/gitlab-ee/issues/4156\nputs 'Disabling authorized keys write in the database.'\nsetting = ::ApplicationSetting.current_without_cache || ::ApplicationSetting.create_from_defaults\nsetting.update_attribute(:authorized_keys_enabled, false)\n\nputs 'Enabling incremental logging of CI jobs.'\nFeature.enable('ci_enable_live_trace')\n",
                    "rendered": {
                      "text": "# A proper fix is being tracked in: https://gitlab.com/gitlab-org/gitlab-ee/issues/4156\nputs 'Disabling authorized keys write in the database.'\nsetting = ::ApplicationSetting.current_without_cache || ::ApplicationSetting.create_from_defaults\nsetting.update_attribute(:authorized_keys_enabled, false)\n\nputs 'Enabling incremental logging of CI jobs.'\nFeature.enable('ci_enable_live_trace')\n",
                      "markdown": "`# A proper fix is being tracked in: https://gitlab.com/gitlab-org/gitlab-ee/issues/4156\nputs 'Disabling authorized keys write in the database.'\nsetting = ::ApplicationSetting.current_without_cache || ::ApplicationSetting.create_from_defaults\nsetting.update_attribute(:authorized_keys_enabled, false)\n\nputs 'Enabling incremental logging of CI jobs.'\nFeature.enable('ci_enable_live_trace')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/custom-instance-setup"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 31,
                  "endLine": 4,
                  "endColumn": 46,
                  "snippet": {
                    "text": "#!/usr/bin/env ruby\n# frozen_string_literal: true\n\n# Workaround for disabling the authorized_keys write to the database.\n# A proper fix is being tracked in: https://gitlab.com/gitlab-org/gitlab-ee/issues/4156\nputs 'Disabling authorized keys write in the database.'\nsetting = ::ApplicationSetting.current_without_cache || ::ApplicationSetting.create_from_defaults\n",
                    "rendered": {
                      "text": "#!/usr/bin/env ruby\n# frozen_string_literal: true\n\n# Workaround for disabling the authorized_keys write to the database.\n# A proper fix is being tracked in: https://gitlab.com/gitlab-org/gitlab-ee/issues/4156\nputs 'Disabling authorized keys write in the database.'\nsetting = ::ApplicationSetting.current_without_cache || ::ApplicationSetting.create_from_defaults\n",
                      "markdown": "`#!/usr/bin/env ruby\n# frozen_string_literal: true\n\n# Workaround for disabling the authorized_keys write to the database.\n# A proper fix is being tracked in: https://gitlab.com/gitlab-org/gitlab-ee/issues/4156\nputs 'Disabling authorized keys write in the database.'\nsetting = ::ApplicationSetting.current_without_cache || ::ApplicationSetting.create_from_defaults\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/custom-instance-setup"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env ruby\n# frozen_string_literal: true\n\n# Workaround for disabling the authorized_keys write to the database.\n# A proper fix is being tracked in: https://gitlab.com/gitlab-org/gitlab-ee/issues/4156\n",
                    "rendered": {
                      "text": "#!/usr/bin/env ruby\n# frozen_string_literal: true\n\n# Workaround for disabling the authorized_keys write to the database.\n# A proper fix is being tracked in: https://gitlab.com/gitlab-org/gitlab-ee/issues/4156\n",
                      "markdown": "`#!/usr/bin/env ruby\n# frozen_string_literal: true\n\n# Workaround for disabling the authorized_keys write to the database.\n# A proper fix is being tracked in: https://gitlab.com/gitlab-org/gitlab-ee/issues/4156\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/gitlab-kas/config.yml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 34,
                  "endLine": 20,
                  "endColumn": 42,
                  "snippet": {
                    "text": "redis:\n  server:\n    address: redis:6379\n  password_file: \"/etc/kas/.redis_password\"\napi:\n  listen:\n    address: \":8153\"\n",
                    "rendered": {
                      "text": "redis:\n  server:\n    address: redis:6379\n  password_file: \"/etc/kas/.redis_password\"\napi:\n  listen:\n    address: \":8153\"\n",
                      "markdown": "`redis:\n  server:\n    address: redis:6379\n  password_file: \"/etc/kas/.redis_password\"\napi:\n  listen:\n    address: \":8153\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/gitlab-kas/config.yml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 2,
                  "endLine": 20,
                  "endColumn": 10,
                  "snippet": {
                    "text": "redis:\n  server:\n    address: redis:6379\n  password_file: \"/etc/kas/.redis_password\"\napi:\n  listen:\n    address: \":8153\"\n",
                    "rendered": {
                      "text": "redis:\n  server:\n    address: redis:6379\n  password_file: \"/etc/kas/.redis_password\"\napi:\n  listen:\n    address: \":8153\"\n",
                      "markdown": "`redis:\n  server:\n    address: redis:6379\n  password_file: \"/etc/kas/.redis_password\"\napi:\n  listen:\n    address: \":8153\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/ci_files/variables.yml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 19,
                  "endLine": 56,
                  "endColumn": 85,
                  "snippet": {
                    "text": "  GITLAB_LOGGER_VERSION: \"v3.0.0\"\n  GITLAB_LOGGER_SHA256: \"b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\"\n  GOMPLATE_VERSION: \"v3.11.8\"\n  GOMPLATE_SHA256: \"a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\"\n  EXIFTOOL_VERSION: \"12.93\"\n\n  # Docker configuration\n",
                    "rendered": {
                      "text": "  GITLAB_LOGGER_VERSION: \"v3.0.0\"\n  GITLAB_LOGGER_SHA256: \"b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\"\n  GOMPLATE_VERSION: \"v3.11.8\"\n  GOMPLATE_SHA256: \"a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\"\n  EXIFTOOL_VERSION: \"12.93\"\n\n  # Docker configuration\n",
                      "markdown": "`  GITLAB_LOGGER_VERSION: \"v3.0.0\"\n  GITLAB_LOGGER_SHA256: \"b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\"\n  GOMPLATE_VERSION: \"v3.11.8\"\n  GOMPLATE_SHA256: \"a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\"\n  EXIFTOOL_VERSION: \"12.93\"\n\n  # Docker configuration\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/ci_files/variables.yml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 24,
                  "endLine": 54,
                  "endColumn": 90,
                  "snippet": {
                    "text": "  GM_VERSION: \"1.3.36\"\n  GM_CHECKSUM_SHA256: \"5d5b3fde759cdfc307aaf21df9ebd8c752e3f088bb051dd5df8aac7ba7338f46\"\n  GITLAB_LOGGER_VERSION: \"v3.0.0\"\n  GITLAB_LOGGER_SHA256: \"b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\"\n  GOMPLATE_VERSION: \"v3.11.8\"\n  GOMPLATE_SHA256: \"a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\"\n  EXIFTOOL_VERSION: \"12.93\"\n",
                    "rendered": {
                      "text": "  GM_VERSION: \"1.3.36\"\n  GM_CHECKSUM_SHA256: \"5d5b3fde759cdfc307aaf21df9ebd8c752e3f088bb051dd5df8aac7ba7338f46\"\n  GITLAB_LOGGER_VERSION: \"v3.0.0\"\n  GITLAB_LOGGER_SHA256: \"b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\"\n  GOMPLATE_VERSION: \"v3.11.8\"\n  GOMPLATE_SHA256: \"a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\"\n  EXIFTOOL_VERSION: \"12.93\"\n",
                      "markdown": "`  GM_VERSION: \"1.3.36\"\n  GM_CHECKSUM_SHA256: \"5d5b3fde759cdfc307aaf21df9ebd8c752e3f088bb051dd5df8aac7ba7338f46\"\n  GITLAB_LOGGER_VERSION: \"v3.0.0\"\n  GITLAB_LOGGER_SHA256: \"b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\"\n  GOMPLATE_VERSION: \"v3.11.8\"\n  GOMPLATE_SHA256: \"a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\"\n  EXIFTOOL_VERSION: \"12.93\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/ci_files/variables.yml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 22,
                  "endLine": 52,
                  "endColumn": 88,
                  "snippet": {
                    "text": "  AWSCLI_VERSION: \"1.34.30\"\n  S3CMD_VERSION: \"2.4.0\"\n  GM_VERSION: \"1.3.36\"\n  GM_CHECKSUM_SHA256: \"5d5b3fde759cdfc307aaf21df9ebd8c752e3f088bb051dd5df8aac7ba7338f46\"\n  GITLAB_LOGGER_VERSION: \"v3.0.0\"\n  GITLAB_LOGGER_SHA256: \"b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\"\n  GOMPLATE_VERSION: \"v3.11.8\"\n",
                    "rendered": {
                      "text": "  AWSCLI_VERSION: \"1.34.30\"\n  S3CMD_VERSION: \"2.4.0\"\n  GM_VERSION: \"1.3.36\"\n  GM_CHECKSUM_SHA256: \"5d5b3fde759cdfc307aaf21df9ebd8c752e3f088bb051dd5df8aac7ba7338f46\"\n  GITLAB_LOGGER_VERSION: \"v3.0.0\"\n  GITLAB_LOGGER_SHA256: \"b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\"\n  GOMPLATE_VERSION: \"v3.11.8\"\n",
                      "markdown": "`  AWSCLI_VERSION: \"1.34.30\"\n  S3CMD_VERSION: \"2.4.0\"\n  GM_VERSION: \"1.3.36\"\n  GM_CHECKSUM_SHA256: \"5d5b3fde759cdfc307aaf21df9ebd8c752e3f088bb051dd5df8aac7ba7338f46\"\n  GITLAB_LOGGER_VERSION: \"v3.0.0\"\n  GITLAB_LOGGER_SHA256: \"b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\"\n  GOMPLATE_VERSION: \"v3.11.8\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/ci_files/variables.yml"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 25,
                  "endLine": 48,
                  "endColumn": 91,
                  "snippet": {
                    "text": "  PG_VERSION: \"16.4\"\n  CA_PKG_VERSION: \"20220614-r0\"\n  CFSSL_VERSION: \"1.6.1\"\n  CFSSL_CHECKSUM_SHA256: \"89e600cd5203a025f8b47c6cd5abb9a74b06e3c7f7f7dd3f5b2a00975b15a491\"\n  AWSCLI_VERSION: \"1.34.30\"\n  S3CMD_VERSION: \"2.4.0\"\n  GM_VERSION: \"1.3.36\"\n",
                    "rendered": {
                      "text": "  PG_VERSION: \"16.4\"\n  CA_PKG_VERSION: \"20220614-r0\"\n  CFSSL_VERSION: \"1.6.1\"\n  CFSSL_CHECKSUM_SHA256: \"89e600cd5203a025f8b47c6cd5abb9a74b06e3c7f7f7dd3f5b2a00975b15a491\"\n  AWSCLI_VERSION: \"1.34.30\"\n  S3CMD_VERSION: \"2.4.0\"\n  GM_VERSION: \"1.3.36\"\n",
                      "markdown": "`  PG_VERSION: \"16.4\"\n  CA_PKG_VERSION: \"20220614-r0\"\n  CFSSL_VERSION: \"1.6.1\"\n  CFSSL_CHECKSUM_SHA256: \"89e600cd5203a025f8b47c6cd5abb9a74b06e3c7f7f7dd3f5b2a00975b15a491\"\n  AWSCLI_VERSION: \"1.34.30\"\n  S3CMD_VERSION: \"2.4.0\"\n  GM_VERSION: \"1.3.36\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/ci_files/variables.yml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 17,
                  "endLine": 23,
                  "endColumn": 59,
                  "snippet": {
                    "text": "  GITLAB_ZOEKT_WEBSERVER_VERSION: \"v0.1.0-b8ea9\"\n  GITLAB_ZOEKT_DYNAMIC_INDEXSERVER_VERSION: \"v0.1.0-b8ea9\"\n  GITLAB_ZOEKT_INDEXER_VERSION: \"v0.8.5-64175\"\n  ZOEKT_VERSION: \"b8ea92de2f6c3fc952e9ec3d1df1f58be9a40d80\"\n  ZOEKT_INDEXER_VERSION: \"v0.8.5-64175\"\n\n  # Runtimes & Tools\n",
                    "rendered": {
                      "text": "  GITLAB_ZOEKT_WEBSERVER_VERSION: \"v0.1.0-b8ea9\"\n  GITLAB_ZOEKT_DYNAMIC_INDEXSERVER_VERSION: \"v0.1.0-b8ea9\"\n  GITLAB_ZOEKT_INDEXER_VERSION: \"v0.8.5-64175\"\n  ZOEKT_VERSION: \"b8ea92de2f6c3fc952e9ec3d1df1f58be9a40d80\"\n  ZOEKT_INDEXER_VERSION: \"v0.8.5-64175\"\n\n  # Runtimes & Tools\n",
                      "markdown": "`  GITLAB_ZOEKT_WEBSERVER_VERSION: \"v0.1.0-b8ea9\"\n  GITLAB_ZOEKT_DYNAMIC_INDEXSERVER_VERSION: \"v0.1.0-b8ea9\"\n  GITLAB_ZOEKT_INDEXER_VERSION: \"v0.8.5-64175\"\n  ZOEKT_VERSION: \"b8ea92de2f6c3fc952e9ec3d1df1f58be9a40d80\"\n  ZOEKT_INDEXER_VERSION: \"v0.8.5-64175\"\n\n  # Runtimes & Tools\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/ci_files/variables.yml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 3,
                  "endLine": 59,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  GOMPLATE_SHA256: \"a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\"\n  EXIFTOOL_VERSION: \"12.93\"\n\n  # Docker configuration\n  DOCKER_DRIVER: overlay2\n  DOCKER_HOST: tcp://docker:2375\n  DOCKER_TLS_CERTDIR: \"\"\n",
                    "rendered": {
                      "text": "  GOMPLATE_SHA256: \"a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\"\n  EXIFTOOL_VERSION: \"12.93\"\n\n  # Docker configuration\n  DOCKER_DRIVER: overlay2\n  DOCKER_HOST: tcp://docker:2375\n  DOCKER_TLS_CERTDIR: \"\"\n",
                      "markdown": "`  GOMPLATE_SHA256: \"a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\"\n  EXIFTOOL_VERSION: \"12.93\"\n\n  # Docker configuration\n  DOCKER_DRIVER: overlay2\n  DOCKER_HOST: tcp://docker:2375\n  DOCKER_TLS_CERTDIR: \"\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/ci_files/variables.yml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 56,
                  "endLine": 34,
                  "endColumn": 62,
                  "snippet": {
                    "text": "  GO_VERSION: \"1.22.7\"\n  GO_FIPS_VERSION: \"1.22.7\"\n  GO_FIPS_TAG: \"go1.22.7-1-openssl-fips\"\n  # Follow the Ruby upgrade guidelines when changing the ruby version\n  # link: https://docs.gitlab.com/ee/development/ruby_upgrade.html\n  RUBY_VERSION: 3.2.5\n  NEXT_RUBY_VERSION: 3.2.5\n",
                    "rendered": {
                      "text": "  GO_VERSION: \"1.22.7\"\n  GO_FIPS_VERSION: \"1.22.7\"\n  GO_FIPS_TAG: \"go1.22.7-1-openssl-fips\"\n  # Follow the Ruby upgrade guidelines when changing the ruby version\n  # link: https://docs.gitlab.com/ee/development/ruby_upgrade.html\n  RUBY_VERSION: 3.2.5\n  NEXT_RUBY_VERSION: 3.2.5\n",
                      "markdown": "`  GO_VERSION: \"1.22.7\"\n  GO_FIPS_VERSION: \"1.22.7\"\n  GO_FIPS_TAG: \"go1.22.7-1-openssl-fips\"\n  # Follow the Ruby upgrade guidelines when changing the ruby version\n  # link: https://docs.gitlab.com/ee/development/ruby_upgrade.html\n  RUBY_VERSION: 3.2.5\n  NEXT_RUBY_VERSION: 3.2.5\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/ci_files/variables.yml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 14,
                  "endLine": 34,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  GO_VERSION: \"1.22.7\"\n  GO_FIPS_VERSION: \"1.22.7\"\n  GO_FIPS_TAG: \"go1.22.7-1-openssl-fips\"\n  # Follow the Ruby upgrade guidelines when changing the ruby version\n  # link: https://docs.gitlab.com/ee/development/ruby_upgrade.html\n  RUBY_VERSION: 3.2.5\n  NEXT_RUBY_VERSION: 3.2.5\n",
                    "rendered": {
                      "text": "  GO_VERSION: \"1.22.7\"\n  GO_FIPS_VERSION: \"1.22.7\"\n  GO_FIPS_TAG: \"go1.22.7-1-openssl-fips\"\n  # Follow the Ruby upgrade guidelines when changing the ruby version\n  # link: https://docs.gitlab.com/ee/development/ruby_upgrade.html\n  RUBY_VERSION: 3.2.5\n  NEXT_RUBY_VERSION: 3.2.5\n",
                      "markdown": "`  GO_VERSION: \"1.22.7\"\n  GO_FIPS_VERSION: \"1.22.7\"\n  GO_FIPS_TAG: \"go1.22.7-1-openssl-fips\"\n  # Follow the Ruby upgrade guidelines when changing the ruby version\n  # link: https://docs.gitlab.com/ee/development/ruby_upgrade.html\n  RUBY_VERSION: 3.2.5\n  NEXT_RUBY_VERSION: 3.2.5\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-elasticsearch-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 12,
                  "endLine": 21,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  libicu-dev \\\n  make \\\n  pkg-config' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n",
                    "rendered": {
                      "text": "  libicu-dev \\\n  make \\\n  pkg-config' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n",
                      "markdown": "`  libicu-dev \\\n  make \\\n  pkg-config' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-elasticsearch-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 6,
                  "snippet": {
                    "text": "ASTICSEARCH_INDEXER_VERSION}\" && \\\n  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-elasticsearch-indexer.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-elasticsearch-indexer/repository/archive.tar.bz2?sha=${GITLAB_ELASTICSEARCH_INDEXER_VERSION}\" && \\\n  tar -xjf gitlab-elasticsearch-indexer.tar.bz2 --strip-components=1 && \\\n  rm gitlab-elasticsearch-indexer.tar.bz2 && \\\n  make && \\\n  make install && \\\n  cd / && \\\n  rm -rf \"${BUILD_DIR}\"\n",
                    "rendered": {
                      "text": "ASTICSEARCH_INDEXER_VERSION}\" && \\\n  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-elasticsearch-indexer.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-elasticsearch-indexer/repository/archive.tar.bz2?sha=${GITLAB_ELASTICSEARCH_INDEXER_VERSION}\" && \\\n  tar -xjf gitlab-elasticsearch-indexer.tar.bz2 --strip-components=1 && \\\n  rm gitlab-elasticsearch-indexer.tar.bz2 && \\\n  make && \\\n  make install && \\\n  cd / && \\\n  rm -rf \"${BUILD_DIR}\"\n",
                      "markdown": "`ASTICSEARCH_INDEXER_VERSION}\" && \\\n  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-elasticsearch-indexer.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-elasticsearch-indexer/repository/archive.tar.bz2?sha=${GITLAB_ELASTICSEARCH_INDEXER_VERSION}\" && \\\n  tar -xjf gitlab-elasticsearch-indexer.tar.bz2 --strip-components=1 && \\\n  rm gitlab-elasticsearch-indexer.tar.bz2 && \\\n  make && \\\n  make install && \\\n  cd / && \\\n  rm -rf \"${BUILD_DIR}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-elasticsearch-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 7,
                  "snippet": {
                    "text": "mmends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n\nRUN cd ${BUILD_DIR} && \\\n  echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-elasticsearch-indexer/repository/archive.tar.bz2?sha=${GITLAB_ELASTICSEARCH_INDEXER_VERSION}\" && \\\n  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-elasticsearch-indexer.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-elasticsearch-indexer/repository/archive.tar.bz2?sha=${GITLAB_ELASTICSEARCH_INDEXER_VERSION}\" && \\\n  tar -xjf gitlab-elasticsearch-indexer.tar",
                    "rendered": {
                      "text": "mmends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n\nRUN cd ${BUILD_DIR} && \\\n  echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-elasticsearch-indexer/repository/archive.tar.bz2?sha=${GITLAB_ELASTICSEARCH_INDEXER_VERSION}\" && \\\n  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-elasticsearch-indexer.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-elasticsearch-indexer/repository/archive.tar.bz2?sha=${GITLAB_ELASTICSEARCH_INDEXER_VERSION}\" && \\\n  tar -xjf gitlab-elasticsearch-indexer.tar",
                      "markdown": "`mmends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n\nRUN cd ${BUILD_DIR} && \\\n  echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-elasticsearch-indexer/repository/archive.tar.bz2?sha=${GITLAB_ELASTICSEARCH_INDEXER_VERSION}\" && \\\n  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-elasticsearch-indexer.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-elasticsearch-indexer/repository/archive.tar.bz2?sha=${GITLAB_ELASTICSEARCH_INDEXER_VERSION}\" && \\\n  tar -xjf gitlab-elasticsearch-indexer.tar`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-elasticsearch-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 4,
                  "endLine": 22,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  make \\\n  pkg-config' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n\n",
                    "rendered": {
                      "text": "  make \\\n  pkg-config' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n\n",
                      "markdown": "`  make \\\n  pkg-config' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-elasticsearch-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 4,
                  "endLine": 21,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  libicu-dev \\\n  make \\\n  pkg-config' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n",
                    "rendered": {
                      "text": "  libicu-dev \\\n  make \\\n  pkg-config' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n",
                      "markdown": "`  libicu-dev \\\n  make \\\n  pkg-config' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-elasticsearch-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nRUN buildDeps=' \\\n  gcc \\\n  git \\\n  libicu-dev \\\n  make \\\n  pkg-config' \\\n",
                    "rendered": {
                      "text": "\nRUN buildDeps=' \\\n  gcc \\\n  git \\\n  libicu-dev \\\n  make \\\n  pkg-config' \\\n",
                      "markdown": "`\nRUN buildDeps=' \\\n  gcc \\\n  git \\\n  libicu-dev \\\n  make \\\n  pkg-config' \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-elasticsearch-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 13,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GITLAB_NAMESPACE=\"gitlab-org\"\nARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  gcc \\\n",
                    "rendered": {
                      "text": "ARG GITLAB_NAMESPACE=\"gitlab-org\"\nARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  gcc \\\n",
                      "markdown": "`ARG GITLAB_NAMESPACE=\"gitlab-org\"\nARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  gcc \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/curl_retry_netfail"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3,
                  "endLine": 19,
                  "endColumn": 9,
                  "snippet": {
                    "text": "while [ $tries -lt $max_retries ]; do\n    tries=$(($tries + 1))\n    echo \"$me: attempt # $tries\"\n    curl --retry $max_retries --output \"${FILENAME}\" --fail --silent --show-error --location \"${URL}\"\n    exit_code=$?\n    echo \"$me: attempt # $tries: $exit_code\"\n    if [ $exit_code -ne 18 ] && [ $exit_code -ne 92 ] ; then\n",
                    "rendered": {
                      "text": "while [ $tries -lt $max_retries ]; do\n    tries=$(($tries + 1))\n    echo \"$me: attempt # $tries\"\n    curl --retry $max_retries --output \"${FILENAME}\" --fail --silent --show-error --location \"${URL}\"\n    exit_code=$?\n    echo \"$me: attempt # $tries: $exit_code\"\n    if [ $exit_code -ne 18 ] && [ $exit_code -ne 92 ] ; then\n",
                      "markdown": "`while [ $tries -lt $max_retries ]; do\n    tries=$(($tries + 1))\n    echo \"$me: attempt # $tries\"\n    curl --retry $max_retries --output \"${FILENAME}\" --fail --silent --show-error --location \"${URL}\"\n    exit_code=$?\n    echo \"$me: attempt # $tries: $exit_code\"\n    if [ $exit_code -ne 18 ] && [ $exit_code -ne 92 ] ; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/curl_retry_netfail"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#!/bin/bash\n# curl_retry_netfail\n# curl a resource, retrying if we have an odd network failure.\n# calling: curl_retry_netfail \"URL\" \"filename\"\nURL=\"${1}\"\nFILENAME=\"${2}\"\n",
                    "rendered": {
                      "text": "#!/bin/bash\n# curl_retry_netfail\n# curl a resource, retrying if we have an odd network failure.\n# calling: curl_retry_netfail \"URL\" \"filename\"\nURL=\"${1}\"\nFILENAME=\"${2}\"\n",
                      "markdown": "`#!/bin/bash\n# curl_retry_netfail\n# curl a resource, retrying if we have an odd network failure.\n# calling: curl_retry_netfail \"URL\" \"filename\"\nURL=\"${1}\"\nFILENAME=\"${2}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/reinstall-grpc-if-fips"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 66,
                  "endLine": 58,
                  "endColumn": 72,
                  "snippet": {
                    "text": "  # Instead, we can use `gem install` here and make sure that the gem is\n  # installed for the vendored path (--install-dir). We also need to\n  # make sure the .gemspec is installed there as well (--no-user-install).\n  gem install --install-dir $gem_path --no-user-install --platform ruby --no-document $gem_package\n  rm -f $gem_package\ndone\n\n",
                    "rendered": {
                      "text": "  # Instead, we can use `gem install` here and make sure that the gem is\n  # installed for the vendored path (--install-dir). We also need to\n  # make sure the .gemspec is installed there as well (--no-user-install).\n  gem install --install-dir $gem_path --no-user-install --platform ruby --no-document $gem_package\n  rm -f $gem_package\ndone\n\n",
                      "markdown": "`  # Instead, we can use `gem install` here and make sure that the gem is\n  # installed for the vendored path (--install-dir). We also need to\n  # make sure the .gemspec is installed there as well (--no-user-install).\n  gem install --install-dir $gem_path --no-user-install --platform ruby --no-document $gem_package\n  rm -f $gem_package\ndone\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/reinstall-grpc-if-fips"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 39,
                  "endLine": 50,
                  "snippet": {
                    "text": "  echo \"Patching $version with $patch_filename\"\n  gem_package=\"grpc-$version.gem\"\n  rm -f $gem_package\n  gem fetch grpc -v $version --platform ruby\n  gem patch -p1 $gem_package $patch_filename\n  # `bundle exec` will fail since it will be looking for grpc, which has been uninstalled.\n  # `bundle install` will just reinstall the native gem, unless we modify\n  # Gemfile and unfreeze any changes in Gemfile.lock.\n",
                    "rendered": {
                      "text": "  echo \"Patching $version with $patch_filename\"\n  gem_package=\"grpc-$version.gem\"\n  rm -f $gem_package\n  gem fetch grpc -v $version --platform ruby\n  gem patch -p1 $gem_package $patch_filename\n  # `bundle exec` will fail since it will be looking for grpc, which has been uninstalled.\n  # `bundle install` will just reinstall the native gem, unless we modify\n  # Gemfile and unfreeze any changes in Gemfile.lock.\n",
                      "markdown": "`  echo \"Patching $version with $patch_filename\"\n  gem_package=\"grpc-$version.gem\"\n  rm -f $gem_package\n  gem fetch grpc -v $version --platform ruby\n  gem patch -p1 $gem_package $patch_filename\n  # `bundle exec` will fail since it will be looking for grpc, which has been uninstalled.\n  # `bundle install` will just reinstall the native gem, unless we modify\n  # Gemfile and unfreeze any changes in Gemfile.lock.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/reinstall-grpc-if-fips"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 21,
                  "endLine": 42,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  fi\n\n  if [ ! -f $patch_filename ]; then\n      echo \"Unable to find $patch_filename\"\n      exit 1\n  fi\n\n",
                    "rendered": {
                      "text": "  fi\n\n  if [ ! -f $patch_filename ]; then\n      echo \"Unable to find $patch_filename\"\n      exit 1\n  fi\n\n",
                      "markdown": "`  fi\n\n  if [ ! -f $patch_filename ]; then\n      echo \"Unable to find $patch_filename\"\n      exit 1\n  fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/reinstall-grpc-if-fips"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 58,
                  "endLine": 37,
                  "endColumn": 64,
                  "snippet": {
                    "text": "  #\n  # Is the installed grpc version >= 1.48.0?\n  updated_version=\"1.48.0\"\n  if [[ $(echo -e \"$version\\n$updated_version\" | sort -V | head -n1) == \"$updated_version\" ]]; then\n      patch_filename=${patch_dir}/grpc-system-ssl-$updated_version.patch\n  fi\n\n",
                    "rendered": {
                      "text": "  #\n  # Is the installed grpc version >= 1.48.0?\n  updated_version=\"1.48.0\"\n  if [[ $(echo -e \"$version\\n$updated_version\" | sort -V | head -n1) == \"$updated_version\" ]]; then\n      patch_filename=${patch_dir}/grpc-system-ssl-$updated_version.patch\n  fi\n\n",
                      "markdown": "`  #\n  # Is the installed grpc version >= 1.48.0?\n  updated_version=\"1.48.0\"\n  if [[ $(echo -e \"$version\\n$updated_version\" | sort -V | head -n1) == \"$updated_version\" ]]; then\n      patch_filename=${patch_dir}/grpc-system-ssl-$updated_version.patch\n  fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/reinstall-grpc-if-fips"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 48,
                  "endLine": 37,
                  "endColumn": 54,
                  "snippet": {
                    "text": "  #\n  # Is the installed grpc version >= 1.48.0?\n  updated_version=\"1.48.0\"\n  if [[ $(echo -e \"$version\\n$updated_version\" | sort -V | head -n1) == \"$updated_version\" ]]; then\n      patch_filename=${patch_dir}/grpc-system-ssl-$updated_version.patch\n  fi\n\n",
                    "rendered": {
                      "text": "  #\n  # Is the installed grpc version >= 1.48.0?\n  updated_version=\"1.48.0\"\n  if [[ $(echo -e \"$version\\n$updated_version\" | sort -V | head -n1) == \"$updated_version\" ]]; then\n      patch_filename=${patch_dir}/grpc-system-ssl-$updated_version.patch\n  fi\n\n",
                      "markdown": "`  #\n  # Is the installed grpc version >= 1.48.0?\n  updated_version=\"1.48.0\"\n  if [[ $(echo -e \"$version\\n$updated_version\" | sort -V | head -n1) == \"$updated_version\" ]]; then\n      patch_filename=${patch_dir}/grpc-system-ssl-$updated_version.patch\n  fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/reinstall-grpc-if-fips"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 21,
                  "endLine": 17,
                  "endColumn": 27,
                  "snippet": {
                    "text": "# used. Otherwise it would appear as though `grpc` were not installed.\ngrpc_versions=`bundle exec ruby -e \"puts Gem::Specification.select { |x| x.name == 'grpc' }.map(&:version).uniq.map(&:to_s)\"`\nplatform=`ruby -e \"puts RUBY_PLATFORM\"`\ngem_path=`bundle exec ruby -e \"puts Gem.path.first\"`\n\nif [ -z $grpc_versions ]; then\n  echo \"No grpc gems installed\"\n",
                    "rendered": {
                      "text": "# used. Otherwise it would appear as though `grpc` were not installed.\ngrpc_versions=`bundle exec ruby -e \"puts Gem::Specification.select { |x| x.name == 'grpc' }.map(&:version).uniq.map(&:to_s)\"`\nplatform=`ruby -e \"puts RUBY_PLATFORM\"`\ngem_path=`bundle exec ruby -e \"puts Gem.path.first\"`\n\nif [ -z $grpc_versions ]; then\n  echo \"No grpc gems installed\"\n",
                      "markdown": "`# used. Otherwise it would appear as though `grpc` were not installed.\ngrpc_versions=`bundle exec ruby -e \"puts Gem::Specification.select { |x| x.name == 'grpc' }.map(&:version).uniq.map(&:to_s)\"`\nplatform=`ruby -e \"puts RUBY_PLATFORM\"`\ngem_path=`bundle exec ruby -e \"puts Gem.path.first\"`\n\nif [ -z $grpc_versions ]; then\n  echo \"No grpc gems installed\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/reinstall-grpc-if-fips"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 26,
                  "endLine": 15,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n# We need to use `bundle exec` since a custom bundle path is\n# used. Otherwise it would appear as though `grpc` were not installed.\ngrpc_versions=`bundle exec ruby -e \"puts Gem::Specification.select { |x| x.name == 'grpc' }.map(&:version).uniq.map(&:to_s)\"`\nplatform=`ruby -e \"puts RUBY_PLATFORM\"`\ngem_path=`bundle exec ruby -e \"puts Gem.path.first\"`\n\n",
                    "rendered": {
                      "text": "\n# We need to use `bundle exec` since a custom bundle path is\n# used. Otherwise it would appear as though `grpc` were not installed.\ngrpc_versions=`bundle exec ruby -e \"puts Gem::Specification.select { |x| x.name == 'grpc' }.map(&:version).uniq.map(&:to_s)\"`\nplatform=`ruby -e \"puts RUBY_PLATFORM\"`\ngem_path=`bundle exec ruby -e \"puts Gem.path.first\"`\n\n",
                      "markdown": "`\n# We need to use `bundle exec` since a custom bundle path is\n# used. Otherwise it would appear as though `grpc` were not installed.\ngrpc_versions=`bundle exec ruby -e \"puts Gem::Specification.select { |x| x.name == 'grpc' }.map(&:version).uniq.map(&:to_s)\"`\nplatform=`ruby -e \"puts RUBY_PLATFORM\"`\ngem_path=`bundle exec ruby -e \"puts Gem.path.first\"`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 12,
                  "endLine": 39,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  libossp-uuid-dev \\\n  libxslt-dev \\\n  make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "  libossp-uuid-dev \\\n  libxslt-dev \\\n  make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n",
                      "markdown": "`  libossp-uuid-dev \\\n  libxslt-dev \\\n  make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 11,
                  "endLine": 10,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ENV LANG=C.UTF-8\n\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  bzip2 \\\n  ca-certificates \\\n",
                    "rendered": {
                      "text": "ENV LANG=C.UTF-8\n\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  bzip2 \\\n  ca-certificates \\\n",
                      "markdown": "`ENV LANG=C.UTF-8\n\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  bzip2 \\\n  ca-certificates \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 4,
                  "endLine": 54,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  && make -C src/interfaces install \\\n  && rm -Rf /usr/local/psql/share \\\n  && cd \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf ${BUILD_DIR}\n\nFROM --platform=${TARGETPLATFORM} scratch\n",
                    "rendered": {
                      "text": "  && make -C src/interfaces install \\\n  && rm -Rf /usr/local/psql/share \\\n  && cd \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf ${BUILD_DIR}\n\nFROM --platform=${TARGETPLATFORM} scratch\n",
                      "markdown": "`  && make -C src/interfaces install \\\n  && rm -Rf /usr/local/psql/share \\\n  && cd \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf ${BUILD_DIR}\n\nFROM --platform=${TARGETPLATFORM} scratch\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 4,
                  "endLine": 44,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -sfo postgresql.tar.gz https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz \\\n  && tar -xzf postgresql.tar.gz \\\n  && rm postgresql.tar.gz \\\n  && cd postgresql-${PG_VERSION} \\\n  && ./configure --prefix=/usr/local/psql --with-libedit-preferred --disable-rpath --with-openssl --with-uuid=ossp \\\n",
                    "rendered": {
                      "text": "  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -sfo postgresql.tar.gz https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz \\\n  && tar -xzf postgresql.tar.gz \\\n  && rm postgresql.tar.gz \\\n  && cd postgresql-${PG_VERSION} \\\n  && ./configure --prefix=/usr/local/psql --with-libedit-preferred --disable-rpath --with-openssl --with-uuid=ossp \\\n",
                      "markdown": "`  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -sfo postgresql.tar.gz https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz \\\n  && tar -xzf postgresql.tar.gz \\\n  && rm postgresql.tar.gz \\\n  && cd postgresql-${PG_VERSION} \\\n  && ./configure --prefix=/usr/local/psql --with-libedit-preferred --disable-rpath --with-openssl --with-uuid=ossp \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 4,
                  "endLine": 43,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -sfo postgresql.tar.gz https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz \\\n  && tar -xzf postgresql.tar.gz \\\n  && rm postgresql.tar.gz \\\n  && cd postgresql-${PG_VERSION} \\\n",
                    "rendered": {
                      "text": "  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -sfo postgresql.tar.gz https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz \\\n  && tar -xzf postgresql.tar.gz \\\n  && rm postgresql.tar.gz \\\n  && cd postgresql-${PG_VERSION} \\\n",
                      "markdown": "`  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -sfo postgresql.tar.gz https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz \\\n  && tar -xzf postgresql.tar.gz \\\n  && rm postgresql.tar.gz \\\n  && cd postgresql-${PG_VERSION} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 4,
                  "endLine": 40,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  libxslt-dev \\\n  make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -sfo postgresql.tar.gz https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz \\\n",
                    "rendered": {
                      "text": "  libxslt-dev \\\n  make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -sfo postgresql.tar.gz https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz \\\n",
                      "markdown": "`  libxslt-dev \\\n  make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -sfo postgresql.tar.gz https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  libossp-uuid-dev \\\n  libxslt-dev \\\n  make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "  libossp-uuid-dev \\\n  libxslt-dev \\\n  make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n",
                      "markdown": "`  libossp-uuid-dev \\\n  libxslt-dev \\\n  make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  zlib1g-dev \\\n  coreutils \\\n  libossp-uuid16 \\\n  curl \\\n  gnupg2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n",
                    "rendered": {
                      "text": "  zlib1g-dev \\\n  coreutils \\\n  libossp-uuid16 \\\n  curl \\\n  gnupg2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n",
                      "markdown": "`  zlib1g-dev \\\n  coreutils \\\n  libossp-uuid16 \\\n  curl \\\n  gnupg2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p ${BUILD_DIR}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  libffi-dev \\\n  libssl-dev \\\n  libyaml-dev \\\n  busybox \\\n  zlib1g-dev \\\n  coreutils \\\n  libossp-uuid16 \\\n",
                    "rendered": {
                      "text": "  libffi-dev \\\n  libssl-dev \\\n  libyaml-dev \\\n  busybox \\\n  zlib1g-dev \\\n  coreutils \\\n  libossp-uuid16 \\\n",
                      "markdown": "`  libffi-dev \\\n  libssl-dev \\\n  libyaml-dev \\\n  busybox \\\n  zlib1g-dev \\\n  coreutils \\\n  libossp-uuid16 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 4,
                  "endLine": 11,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  bzip2 \\\n  ca-certificates \\\n  libffi-dev \\\n",
                    "rendered": {
                      "text": "\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  bzip2 \\\n  ca-certificates \\\n  libffi-dev \\\n",
                      "markdown": "`\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  bzip2 \\\n  ca-certificates \\\n  libffi-dev \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 3,
                  "endLine": 10,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ENV LANG=C.UTF-8\n\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  bzip2 \\\n  ca-certificates \\\n",
                    "rendered": {
                      "text": "ENV LANG=C.UTF-8\n\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  bzip2 \\\n  ca-certificates \\\n",
                      "markdown": "`ENV LANG=C.UTF-8\n\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  bzip2 \\\n  ca-certificates \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/postgresql/Dockerfile"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 7,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nARG BUILD_DIR=/tmp/build\nARG PG_VERSION=16.4\n\nENV LANG=C.UTF-8\n\n# install runtime deps\nRUN apt-get update \\\n",
                    "rendered": {
                      "text": "\nARG BUILD_DIR=/tmp/build\nARG PG_VERSION=16.4\n\nENV LANG=C.UTF-8\n\n# install runtime deps\nRUN apt-get update \\\n",
                      "markdown": "`\nARG BUILD_DIR=/tmp/build\nARG PG_VERSION=16.4\n\nENV LANG=C.UTF-8\n\n# install runtime deps\nRUN apt-get update \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 4,
                  "endLine": 54,
                  "endColumn": 12,
                  "snippet": {
                    "text": "As the `docker-compose` deployment does not make use of TLS, `docker` will\nbe \"unhappy\". To address this, you can add the following to\n`/etc/docker/daemon.json` and then restart the service. It will allow\nany hostname that resolves to `127.0.0.1` to be handled as insecure.\n\n```json\n{\n",
                    "rendered": {
                      "text": "As the `docker-compose` deployment does not make use of TLS, `docker` will\nbe \"unhappy\". To address this, you can add the following to\n`/etc/docker/daemon.json` and then restart the service. It will allow\nany hostname that resolves to `127.0.0.1` to be handled as insecure.\n\n```json\n{\n",
                      "markdown": "`As the `docker-compose` deployment does not make use of TLS, `docker` will\nbe \"unhappy\". To address this, you can add the following to\n`/etc/docker/daemon.json` and then restart the service. It will allow\nany hostname that resolves to `127.0.0.1` to be handled as insecure.\n\n```json\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 65,
                  "endLine": 214,
                  "endColumn": 74,
                  "snippet": {
                    "text": "      For more advanced usage see the gomplate [functions](https://docs.gomplate.ca/syntax/#functions).\n\n> For Kubernetes specifically we are mostly relying on the mounting the config\nfiles from ConfigMap objects. With the occasional ENV variable to control the\ncustom container code.\n\n## Links\n",
                    "rendered": {
                      "text": "      For more advanced usage see the gomplate [functions](https://docs.gomplate.ca/syntax/#functions).\n\n> For Kubernetes specifically we are mostly relying on the mounting the config\nfiles from ConfigMap objects. With the occasional ENV variable to control the\ncustom container code.\n\n## Links\n",
                      "markdown": "`      For more advanced usage see the gomplate [functions](https://docs.gomplate.ca/syntax/#functions).\n\n> For Kubernetes specifically we are mostly relying on the mounting the config\nfiles from ConfigMap objects. With the occasional ENV variable to control the\ncustom container code.\n\n## Links\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 37,
                  "endLine": 47,
                  "endColumn": 41,
                  "snippet": {
                    "text": "docker-compose up\n```\n\nThe instance should then be reachable at `http://localhost:3000`\n\n#### Registry access\n\n",
                    "rendered": {
                      "text": "docker-compose up\n```\n\nThe instance should then be reachable at `http://localhost:3000`\n\n#### Registry access\n\n",
                      "markdown": "`docker-compose up\n```\n\nThe instance should then be reachable at `http://localhost:3000`\n\n#### Registry access\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 49,
                  "endLine": 214,
                  "endColumn": 54,
                  "snippet": {
                    "text": "      For more advanced usage see the gomplate [functions](https://docs.gomplate.ca/syntax/#functions).\n\n> For Kubernetes specifically we are mostly relying on the mounting the config\nfiles from ConfigMap objects. With the occasional ENV variable to control the\ncustom container code.\n\n## Links\n",
                    "rendered": {
                      "text": "      For more advanced usage see the gomplate [functions](https://docs.gomplate.ca/syntax/#functions).\n\n> For Kubernetes specifically we are mostly relying on the mounting the config\nfiles from ConfigMap objects. With the occasional ENV variable to control the\ncustom container code.\n\n## Links\n",
                      "markdown": "`      For more advanced usage see the gomplate [functions](https://docs.gomplate.ca/syntax/#functions).\n\n> For Kubernetes specifically we are mostly relying on the mounting the config\nfiles from ConfigMap objects. With the occasional ENV variable to control the\ncustom container code.\n\n## Links\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 6,
                  "endLine": 204,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n1. Mounting templates for the config files already supported by our different software (gitlab.yml, database.yml, resque.yml, etc)\n2. Additionally support the environment variables supported by the software, like https://docs.gitlab.com/ce/administration/environment_variables.html (support them by not doing anything that would drop them from being passed to the running process)\n3. Add ENV variables for configuring the custom code we use in the containers, like the rendering in or of templates, and any wrapper/helper commands\n\nTemplating languages supported:\n\n",
                    "rendered": {
                      "text": "\n1. Mounting templates for the config files already supported by our different software (gitlab.yml, database.yml, resque.yml, etc)\n2. Additionally support the environment variables supported by the software, like https://docs.gitlab.com/ce/administration/environment_variables.html (support them by not doing anything that would drop them from being passed to the running process)\n3. Add ENV variables for configuring the custom code we use in the containers, like the rendering in or of templates, and any wrapper/helper commands\n\nTemplating languages supported:\n\n",
                      "markdown": "`\n1. Mounting templates for the config files already supported by our different software (gitlab.yml, database.yml, resque.yml, etc)\n2. Additionally support the environment variables supported by the software, like https://docs.gitlab.com/ce/administration/environment_variables.html (support them by not doing anything that would drop them from being passed to the running process)\n3. Add ENV variables for configuring the custom code we use in the containers, like the rendering in or of templates, and any wrapper/helper commands\n\nTemplating languages supported:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 1,
                  "endLine": 169,
                  "endColumn": 9,
                  "snippet": {
                    "text": "% docker manifest inspect \\\n  registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v15.4.0 | jq '[.layers[25:32] | .[] | .size] | add'\n53834608\n% docker manifest inspect \\\n  registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee:v15.4.0 | jq '[.layers[25:32] | .[] | .size] | add'\n37880086\n```\n",
                    "rendered": {
                      "text": "% docker manifest inspect \\\n  registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v15.4.0 | jq '[.layers[25:32] | .[] | .size] | add'\n53834608\n% docker manifest inspect \\\n  registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee:v15.4.0 | jq '[.layers[25:32] | .[] | .size] | add'\n37880086\n```\n",
                      "markdown": "`% docker manifest inspect \\\n  registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v15.4.0 | jq '[.layers[25:32] | .[] | .size] | add'\n53834608\n% docker manifest inspect \\\n  registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee:v15.4.0 | jq '[.layers[25:32] | .[] | .size] | add'\n37880086\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 1,
                  "endLine": 166,
                  "endColumn": 9,
                  "snippet": {
                    "text": "webservice and sidekiq containers?\n\n```\n% docker manifest inspect \\\n  registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v15.4.0 | jq '[.layers[25:32] | .[] | .size] | add'\n53834608\n% docker manifest inspect \\\n",
                    "rendered": {
                      "text": "webservice and sidekiq containers?\n\n```\n% docker manifest inspect \\\n  registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v15.4.0 | jq '[.layers[25:32] | .[] | .size] | add'\n53834608\n% docker manifest inspect \\\n",
                      "markdown": "`webservice and sidekiq containers?\n\n```\n% docker manifest inspect \\\n  registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v15.4.0 | jq '[.layers[25:32] | .[] | .size] | add'\n53834608\n% docker manifest inspect \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 1,
                  "endLine": 156,
                  "endColumn": 9,
                  "snippet": {
                    "text": "version of GitLab that may be pulled down. So what does this savings look like?\n\n```\n% docker manifest inspect \\\n  registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v15.4.0 | jq '[.layers[0:25] | .[] | .size] | add'\n617574719\n```\n",
                    "rendered": {
                      "text": "version of GitLab that may be pulled down. So what does this savings look like?\n\n```\n% docker manifest inspect \\\n  registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v15.4.0 | jq '[.layers[0:25] | .[] | .size] | add'\n617574719\n```\n",
                      "markdown": "`version of GitLab that may be pulled down. So what does this savings look like?\n\n```\n% docker manifest inspect \\\n  registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v15.4.0 | jq '[.layers[0:25] | .[] | .size] | add'\n617574719\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 1,
                  "endLine": 106,
                  "endColumn": 7,
                  "snippet": {
                    "text": "bandwidth is needed overall to download images.\n\n```diff\n% diff --color -U 40 \\\n  <(docker inspect registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee:v15.4.0 | jq .[].RootFS.Layers[]) \\\n  <(docker inspect registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v15.4.0 | jq .[].RootFS.Layers[])\n@@ -1,32 +1,32 @@\n",
                    "rendered": {
                      "text": "bandwidth is needed overall to download images.\n\n```diff\n% diff --color -U 40 \\\n  <(docker inspect registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee:v15.4.0 | jq .[].RootFS.Layers[]) \\\n  <(docker inspect registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v15.4.0 | jq .[].RootFS.Layers[])\n@@ -1,32 +1,32 @@\n",
                      "markdown": "`bandwidth is needed overall to download images.\n\n```diff\n% diff --color -U 40 \\\n  <(docker inspect registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee:v15.4.0 | jq .[].RootFS.Layers[]) \\\n  <(docker inspect registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ee:v15.4.0 | jq .[].RootFS.Layers[])\n@@ -1,32 +1,32 @@\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 49,
                  "endLine": 92,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n#### Final Images\n\nThe final images add any specific requirements on top of the cached shared layers.\nFor example, [`Mailroom`] uses the [`gitlab-ruby`] image but does not require any\nof the rails codebase. The [`gitlab-rails`] image bundles the rails codebase with\nthe [`gitlab-ruby`] image for sharing with other containers such as [`gitlab-webservice`].\n",
                    "rendered": {
                      "text": "\n#### Final Images\n\nThe final images add any specific requirements on top of the cached shared layers.\nFor example, [`Mailroom`] uses the [`gitlab-ruby`] image but does not require any\nof the rails codebase. The [`gitlab-rails`] image bundles the rails codebase with\nthe [`gitlab-ruby`] image for sharing with other containers such as [`gitlab-webservice`].\n",
                      "markdown": "`\n#### Final Images\n\nThe final images add any specific requirements on top of the cached shared layers.\nFor example, [`Mailroom`] uses the [`gitlab-ruby`] image but does not require any\nof the rails codebase. The [`gitlab-rails`] image bundles the rails codebase with\nthe [`gitlab-ruby`] image for sharing with other containers such as [`gitlab-webservice`].\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 69,
                  "endLine": 86,
                  "snippet": {
                    "text": "pipeline caches this [`gitlab-base`] layer and reuses it during later build\njobs.\n\nThe pipeline builds containers for common language frameworks such as ruby\nand golang. Each GitLab component then builds using common versions and tooling\nwhich ensures consistent results across the application. The respective containers\nare [`gitlab-ruby`] and [`gitlab-go`].\n\n",
                    "rendered": {
                      "text": "pipeline caches this [`gitlab-base`] layer and reuses it during later build\njobs.\n\nThe pipeline builds containers for common language frameworks such as ruby\nand golang. Each GitLab component then builds using common versions and tooling\nwhich ensures consistent results across the application. The respective containers\nare [`gitlab-ruby`] and [`gitlab-go`].\n\n",
                      "markdown": "`pipeline caches this [`gitlab-base`] layer and reuses it during later build\njobs.\n\nThe pipeline builds containers for common language frameworks such as ruby\nand golang. Each GitLab component then builds using common versions and tooling\nwhich ensures consistent results across the application. The respective containers\nare [`gitlab-ruby`] and [`gitlab-go`].\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 20,
                  "endLine": 81,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#### Dependencies\n\nMany container images rely on the same subset of dependencies. For example, the\nbase layer builds on top of Debian and installs standard build tools. The build\npipeline caches this [`gitlab-base`] layer and reuses it during later build\njobs.\n\n",
                    "rendered": {
                      "text": "#### Dependencies\n\nMany container images rely on the same subset of dependencies. For example, the\nbase layer builds on top of Debian and installs standard build tools. The build\npipeline caches this [`gitlab-base`] layer and reuses it during later build\njobs.\n\n",
                      "markdown": "`#### Dependencies\n\nMany container images rely on the same subset of dependencies. For example, the\nbase layer builds on top of Debian and installs standard build tools. The build\npipeline caches this [`gitlab-base`] layer and reuses it during later build\njobs.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 25,
                  "endLine": 34,
                  "endColumn": 33,
                  "snippet": {
                    "text": "* [gitlab-kas](/gitlab-kas) - The backend for the GitLab Agent for Kubernetes\n* [toolbox](/gitlab-toolbox) - The toolbox container provides utilities for direct interaction with the application suite, without interrupting service containers.\n\n### Dev environment using Docker Compose\n\nA dev test environment is provided with docker-compose.\n\n",
                    "rendered": {
                      "text": "* [gitlab-kas](/gitlab-kas) - The backend for the GitLab Agent for Kubernetes\n* [toolbox](/gitlab-toolbox) - The toolbox container provides utilities for direct interaction with the application suite, without interrupting service containers.\n\n### Dev environment using Docker Compose\n\nA dev test environment is provided with docker-compose.\n\n",
                      "markdown": "`* [gitlab-kas](/gitlab-kas) - The backend for the GitLab Agent for Kubernetes\n* [toolbox](/gitlab-toolbox) - The toolbox container provides utilities for direct interaction with the application suite, without interrupting service containers.\n\n### Dev environment using Docker Compose\n\nA dev test environment is provided with docker-compose.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 143,
                  "endLine": 32,
                  "endColumn": 152,
                  "snippet": {
                    "text": "* [shell](/gitlab-shell) - Running GitLab Shell and OpenSSH to provide git over ssh, and authorized keys support from the database\n* [gitaly](/gitaly) - The Gitaly container that provides a distributed git repos\n* [gitlab-kas](/gitlab-kas) - The backend for the GitLab Agent for Kubernetes\n* [toolbox](/gitlab-toolbox) - The toolbox container provides utilities for direct interaction with the application suite, without interrupting service containers.\n\n### Dev environment using Docker Compose\n\n",
                    "rendered": {
                      "text": "* [shell](/gitlab-shell) - Running GitLab Shell and OpenSSH to provide git over ssh, and authorized keys support from the database\n* [gitaly](/gitaly) - The Gitaly container that provides a distributed git repos\n* [gitlab-kas](/gitlab-kas) - The backend for the GitLab Agent for Kubernetes\n* [toolbox](/gitlab-toolbox) - The toolbox container provides utilities for direct interaction with the application suite, without interrupting service containers.\n\n### Dev environment using Docker Compose\n\n",
                      "markdown": "`* [shell](/gitlab-shell) - Running GitLab Shell and OpenSSH to provide git over ssh, and authorized keys support from the database\n* [gitaly](/gitaly) - The Gitaly container that provides a distributed git repos\n* [gitlab-kas](/gitlab-kas) - The backend for the GitLab Agent for Kubernetes\n* [toolbox](/gitlab-toolbox) - The toolbox container provides utilities for direct interaction with the application suite, without interrupting service containers.\n\n### Dev environment using Docker Compose\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 70,
                  "endLine": 30,
                  "endColumn": 75,
                  "snippet": {
                    "text": "n front of Rails.\n* [sidekiq](/gitlab-sidekiq) - The Sidekiq container that runs async Rails jobs.\n* [shell](/gitlab-shell) - Running GitLab Shell and OpenSSH to provide git over ssh, and authorized keys support from the database\n* [gitaly](/gitaly) - The Gitaly container that provides a distributed git repos\n* [gitlab-kas](/gitlab-kas) - The backend for the GitLab Agent for Kubernetes\n* [toolbox](/gitlab-toolbox) - The toolbox container provides utilities for direct interaction with the application suite, without interrupting service containers.\n\n### Dev environment using Docker Compose\n\nA dev tes",
                    "rendered": {
                      "text": "n front of Rails.\n* [sidekiq](/gitlab-sidekiq) - The Sidekiq container that runs async Rails jobs.\n* [shell](/gitlab-shell) - Running GitLab Shell and OpenSSH to provide git over ssh, and authorized keys support from the database\n* [gitaly](/gitaly) - The Gitaly container that provides a distributed git repos\n* [gitlab-kas](/gitlab-kas) - The backend for the GitLab Agent for Kubernetes\n* [toolbox](/gitlab-toolbox) - The toolbox container provides utilities for direct interaction with the application suite, without interrupting service containers.\n\n### Dev environment using Docker Compose\n\nA dev tes",
                      "markdown": "`n front of Rails.\n* [sidekiq](/gitlab-sidekiq) - The Sidekiq container that runs async Rails jobs.\n* [shell](/gitlab-shell) - Running GitLab Shell and OpenSSH to provide git over ssh, and authorized keys support from the database\n* [gitaly](/gitaly) - The Gitaly container that provides a distributed git repos\n* [gitlab-kas](/gitlab-kas) - The backend for the GitLab Agent for Kubernetes\n* [toolbox](/gitlab-toolbox) - The toolbox container provides utilities for direct interaction with the application suite, without interrupting service containers.\n\n### Dev environment using Docker Compose\n\nA dev tes`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 70,
                  "endLine": 29,
                  "endColumn": 75,
                  "snippet": {
                    "text": "ner that exposes Rails webservers (Puma).\n* [workhorse](/gitlab-workhorse) - The GitLab Workhorse container providing smart-proxy in front of Rails.\n* [sidekiq](/gitlab-sidekiq) - The Sidekiq container that runs async Rails jobs.\n* [shell](/gitlab-shell) - Running GitLab Shell and OpenSSH to provide git over ssh, and authorized keys support from the database\n* [gitaly](/gitaly) - The Gitaly container that provides a distributed git repos\n* [gitlab-kas](/gitlab-kas) - The backend for the GitLab Agent for Kubernetes\n* [toolbox](/gitlab-toolbox) - The toolbox container provides utilities for direct in",
                    "rendered": {
                      "text": "ner that exposes Rails webservers (Puma).\n* [workhorse](/gitlab-workhorse) - The GitLab Workhorse container providing smart-proxy in front of Rails.\n* [sidekiq](/gitlab-sidekiq) - The Sidekiq container that runs async Rails jobs.\n* [shell](/gitlab-shell) - Running GitLab Shell and OpenSSH to provide git over ssh, and authorized keys support from the database\n* [gitaly](/gitaly) - The Gitaly container that provides a distributed git repos\n* [gitlab-kas](/gitlab-kas) - The backend for the GitLab Agent for Kubernetes\n* [toolbox](/gitlab-toolbox) - The toolbox container provides utilities for direct in",
                      "markdown": "`ner that exposes Rails webservers (Puma).\n* [workhorse](/gitlab-workhorse) - The GitLab Workhorse container providing smart-proxy in front of Rails.\n* [sidekiq](/gitlab-sidekiq) - The Sidekiq container that runs async Rails jobs.\n* [shell](/gitlab-shell) - Running GitLab Shell and OpenSSH to provide git over ssh, and authorized keys support from the database\n* [gitaly](/gitaly) - The Gitaly container that provides a distributed git repos\n* [gitlab-kas](/gitlab-kas) - The backend for the GitLab Agent for Kubernetes\n* [toolbox](/gitlab-toolbox) - The toolbox container provides utilities for direct in`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/README.md"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 71,
                  "endLine": 15,
                  "endColumn": 8,
                  "snippet": {
                    "text": "early in the process as possible to ensure effective and timely support prior to\nenabling a new component to be made available for customer consumption.\n\nThe mechanisms created in this repo manage dependencies required by any\nservice as well as ensure conformance to various standards such as the\nFederal Information Processing Standards (FIPS). This removes the burden\nof image building from development teams and enables standardization for all images.\n\n",
                    "rendered": {
                      "text": "early in the process as possible to ensure effective and timely support prior to\nenabling a new component to be made available for customer consumption.\n\nThe mechanisms created in this repo manage dependencies required by any\nservice as well as ensure conformance to various standards such as the\nFederal Information Processing Standards (FIPS). This removes the burden\nof image building from development teams and enables standardization for all images.\n\n",
                      "markdown": "`early in the process as possible to ensure effective and timely support prior to\nenabling a new component to be made available for customer consumption.\n\nThe mechanisms created in this repo manage dependencies required by any\nservice as well as ensure conformance to various standards such as the\nFederal Information Processing Standards (FIPS). This removes the burden\nof image building from development teams and enables standardization for all images.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 97,
                  "endLine": 39,
                  "endColumn": 112,
                  "snippet": {
                    "text": "    && rm -f ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && rm -rf ${DNF_INSTALL_ROOT}/etc/ssh/ssh_host_* ${DNF_INSTALL_ROOT}/etc/ssh/sshd_config.* ${DNF_INSTALL_ROOT}/usr/libexec/openssh/sftp-server ${DNF_INSTALL_ROOT}/usr/lib/systemd/system/sshd* \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/etc/ssh \\\n    && install -o 0 -g 0 -m 0755 ${DNF_INSTALL_ROOT}/scripts/authorized_keys ${DNF_INSTALL_ROOT}/authorized_keys \\\n    && install -d -o ${UID} -g 0 -m 770 ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n",
                    "rendered": {
                      "text": "    && rm -f ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && rm -rf ${DNF_INSTALL_ROOT}/etc/ssh/ssh_host_* ${DNF_INSTALL_ROOT}/etc/ssh/sshd_config.* ${DNF_INSTALL_ROOT}/usr/libexec/openssh/sftp-server ${DNF_INSTALL_ROOT}/usr/lib/systemd/system/sshd* \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/etc/ssh \\\n    && install -o 0 -g 0 -m 0755 ${DNF_INSTALL_ROOT}/scripts/authorized_keys ${DNF_INSTALL_ROOT}/authorized_keys \\\n    && install -d -o ${UID} -g 0 -m 770 ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n",
                      "markdown": "`    && rm -f ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && rm -rf ${DNF_INSTALL_ROOT}/etc/ssh/ssh_host_* ${DNF_INSTALL_ROOT}/etc/ssh/sshd_config.* ${DNF_INSTALL_ROOT}/usr/libexec/openssh/sftp-server ${DNF_INSTALL_ROOT}/usr/lib/systemd/system/sshd* \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/etc/ssh \\\n    && install -o 0 -g 0 -m 0755 ${DNF_INSTALL_ROOT}/scripts/authorized_keys ${DNF_INSTALL_ROOT}/authorized_keys \\\n    && install -d -o ${UID} -g 0 -m 770 ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 61,
                  "endLine": 39,
                  "endColumn": 76,
                  "snippet": {
                    "text": "    && rm -f ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && rm -rf ${DNF_INSTALL_ROOT}/etc/ssh/ssh_host_* ${DNF_INSTALL_ROOT}/etc/ssh/sshd_config.* ${DNF_INSTALL_ROOT}/usr/libexec/openssh/sftp-server ${DNF_INSTALL_ROOT}/usr/lib/systemd/system/sshd* \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/etc/ssh \\\n    && install -o 0 -g 0 -m 0755 ${DNF_INSTALL_ROOT}/scripts/authorized_keys ${DNF_INSTALL_ROOT}/authorized_keys \\\n    && install -d -o ${UID} -g 0 -m 770 ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n",
                    "rendered": {
                      "text": "    && rm -f ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && rm -rf ${DNF_INSTALL_ROOT}/etc/ssh/ssh_host_* ${DNF_INSTALL_ROOT}/etc/ssh/sshd_config.* ${DNF_INSTALL_ROOT}/usr/libexec/openssh/sftp-server ${DNF_INSTALL_ROOT}/usr/lib/systemd/system/sshd* \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/etc/ssh \\\n    && install -o 0 -g 0 -m 0755 ${DNF_INSTALL_ROOT}/scripts/authorized_keys ${DNF_INSTALL_ROOT}/authorized_keys \\\n    && install -d -o ${UID} -g 0 -m 770 ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n",
                      "markdown": "`    && rm -f ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && rm -rf ${DNF_INSTALL_ROOT}/etc/ssh/ssh_host_* ${DNF_INSTALL_ROOT}/etc/ssh/sshd_config.* ${DNF_INSTALL_ROOT}/usr/libexec/openssh/sftp-server ${DNF_INSTALL_ROOT}/usr/lib/systemd/system/sshd* \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/etc/ssh \\\n    && install -o 0 -g 0 -m 0755 ${DNF_INSTALL_ROOT}/scripts/authorized_keys ${DNF_INSTALL_ROOT}/authorized_keys \\\n    && install -d -o ${UID} -g 0 -m 770 ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 51,
                  "endLine": 75,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\nVOLUME /var/log/gitlab-shell\n\nHEALTHCHECK --interval=10s --timeout=3s --retries=3 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nVOLUME /var/log/gitlab-shell\n\nHEALTHCHECK --interval=10s --timeout=3s --retries=3 CMD /scripts/healthcheck\n",
                      "markdown": "`\nVOLUME /var/log/gitlab-shell\n\nHEALTHCHECK --interval=10s --timeout=3s --retries=3 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 71,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ENV CONFIG_TEMPLATE_DIRECTORY=/srv/gitlab-shell\n\nUSER ${UID}\n\nCMD [\"/scripts/process-wrapper\"]\n\nVOLUME /var/log/gitlab-shell\n\n",
                    "rendered": {
                      "text": "ENV CONFIG_TEMPLATE_DIRECTORY=/srv/gitlab-shell\n\nUSER ${UID}\n\nCMD [\"/scripts/process-wrapper\"]\n\nVOLUME /var/log/gitlab-shell\n\n",
                      "markdown": "`ENV CONFIG_TEMPLATE_DIRECTORY=/srv/gitlab-shell\n\nUSER ${UID}\n\nCMD [\"/scripts/process-wrapper\"]\n\nVOLUME /var/log/gitlab-shell\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 12,
                  "endLine": 28,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts\n\nRUN microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -s /bin/bash -R ${DNF_INSTALL_ROOT}/\n\n",
                    "rendered": {
                      "text": "    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts\n\nRUN microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -s /bin/bash -R ${DNF_INSTALL_ROOT}/\n\n",
                      "markdown": "`    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts\n\nRUN microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -s /bin/bash -R ${DNF_INSTALL_ROOT}/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 67,
                  "endColumn": 4,
                  "snippet": {
                    "text": "## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nENV CONFIG_TEMPLATE_DIRECTORY=/srv/gitlab-shell\n\nUSER ${UID}\n\n",
                    "rendered": {
                      "text": "## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nENV CONFIG_TEMPLATE_DIRECTORY=/srv/gitlab-shell\n\nUSER ${UID}\n\n",
                      "markdown": "`## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nENV CONFIG_TEMPLATE_DIRECTORY=/srv/gitlab-shell\n\nUSER ${UID}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 6,
                  "endLine": 38,
                  "endColumn": 13,
                  "snippet": {
                    "text": "${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && rm -rf ${DNF_INSTALL_ROOT}/etc/ssh/ssh_host_* ${DNF_INSTALL_ROOT}/etc/ssh/sshd_config.* ${DNF_INSTALL_ROOT}/usr/libexec/openssh/sftp-server ${DNF_INSTALL_ROOT}/usr/lib/systemd/system/sshd* \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/etc/ssh \\\n    && install -o 0 -g 0 -m 0755 ${DNF_INSTALL_ROOT}/scripts/authorized_keys ${DNF_INSTALL_ROOT}/authorized_keys \\\n    && install -d -o ${UID} -g 0 -m 770 ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n## FINAL ",
                    "rendered": {
                      "text": "${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && rm -rf ${DNF_INSTALL_ROOT}/etc/ssh/ssh_host_* ${DNF_INSTALL_ROOT}/etc/ssh/sshd_config.* ${DNF_INSTALL_ROOT}/usr/libexec/openssh/sftp-server ${DNF_INSTALL_ROOT}/usr/lib/systemd/system/sshd* \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/etc/ssh \\\n    && install -o 0 -g 0 -m 0755 ${DNF_INSTALL_ROOT}/scripts/authorized_keys ${DNF_INSTALL_ROOT}/authorized_keys \\\n    && install -d -o ${UID} -g 0 -m 770 ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n## FINAL ",
                      "markdown": "`${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && rm -rf ${DNF_INSTALL_ROOT}/etc/ssh/ssh_host_* ${DNF_INSTALL_ROOT}/etc/ssh/sshd_config.* ${DNF_INSTALL_ROOT}/usr/libexec/openssh/sftp-server ${DNF_INSTALL_ROOT}/usr/lib/systemd/system/sshd* \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/etc/ssh \\\n    && install -o 0 -g 0 -m 0755 ${DNF_INSTALL_ROOT}/scripts/authorized_keys ${DNF_INSTALL_ROOT}/authorized_keys \\\n    && install -d -o ${UID} -g 0 -m 770 ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n## FINAL `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 6,
                  "endLine": 26,
                  "endColumn": 13,
                  "snippet": {
                    "text": "L_ROOT}/var/log/gitlab-shell \\\n    && touch ${DNF_INSTALL_ROOT}/var/log/gitlab-shell/gitlab-shell.log \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts\n\nRUN microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-util",
                    "rendered": {
                      "text": "L_ROOT}/var/log/gitlab-shell \\\n    && touch ${DNF_INSTALL_ROOT}/var/log/gitlab-shell/gitlab-shell.log \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts\n\nRUN microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-util",
                      "markdown": "`L_ROOT}/var/log/gitlab-shell \\\n    && touch ${DNF_INSTALL_ROOT}/var/log/gitlab-shell/gitlab-shell.log \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts\n\nRUN microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-util`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 6,
                  "endLine": 25,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN mkdir -p ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/var/log/gitlab-shell \\\n    && touch ${DNF_INSTALL_ROOT}/var/log/gitlab-shell/gitlab-shell.log \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts\n\nRUN microdnf update -y && \\\n",
                    "rendered": {
                      "text": "\nRUN mkdir -p ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/var/log/gitlab-shell \\\n    && touch ${DNF_INSTALL_ROOT}/var/log/gitlab-shell/gitlab-shell.log \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts\n\nRUN microdnf update -y && \\\n",
                      "markdown": "`\nRUN mkdir -p ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/var/log/gitlab-shell \\\n    && touch ${DNF_INSTALL_ROOT}/var/log/gitlab-shell/gitlab-shell.log \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/sshd ${DNF_INSTALL_ROOT}/srv/gitlab-shell ${DNF_INSTALL_ROOT}/var/log/gitlab-shell ${DNF_INSTALL_ROOT}/etc/ssh ${DNF_INSTALL_ROOT}/scripts\n\nRUN microdnf update -y && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 130,
                  "endLine": 130,
                  "endColumn": 8,
                  "snippet": {
                    "text": "AuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n\nPasswordAuthentication no\n\nAllowUsers git\n\n",
                    "rendered": {
                      "text": "AuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n\nPasswordAuthentication no\n\nAllowUsers git\n\n",
                      "markdown": "`AuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n\nPasswordAuthentication no\n\nAllowUsers git\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 23,
                  "endLine": 127,
                  "endColumn": 38,
                  "snippet": {
                    "text": "# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n\nPasswordAuthentication no\n",
                    "rendered": {
                      "text": "# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n\nPasswordAuthentication no\n",
                      "markdown": "`# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n\nPasswordAuthentication no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 24,
                  "endLine": 125,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n",
                    "rendered": {
                      "text": "\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n",
                      "markdown": "`\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 19,
                  "endLine": 125,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n",
                    "rendered": {
                      "text": "\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n",
                      "markdown": "`\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 63,
                  "endLine": 124,
                  "endColumn": 78,
                  "snippet": {
                    "text": "#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\n",
                    "rendered": {
                      "text": "#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\n",
                      "markdown": "`#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 58,
                  "endLine": 124,
                  "endColumn": 62,
                  "snippet": {
                    "text": "#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\n",
                    "rendered": {
                      "text": "#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\n",
                      "markdown": "`#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 61,
                  "endLine": 123,
                  "endColumn": 76,
                  "snippet": {
                    "text": "#\tPermitTTY no\n#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\n",
                    "rendered": {
                      "text": "#\tPermitTTY no\n#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\n",
                      "markdown": "`#\tPermitTTY no\n#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 56,
                  "endLine": 123,
                  "endColumn": 60,
                  "snippet": {
                    "text": "#\tPermitTTY no\n#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\n",
                    "rendered": {
                      "text": "#\tPermitTTY no\n#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\n",
                      "markdown": "`#\tPermitTTY no\n#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 36,
                  "endLine": 123,
                  "endColumn": 51,
                  "snippet": {
                    "text": "#\tPermitTTY no\n#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\n",
                    "rendered": {
                      "text": "#\tPermitTTY no\n#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\n",
                      "markdown": "`#\tPermitTTY no\n#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 31,
                  "endLine": 123,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#\tPermitTTY no\n#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\n",
                    "rendered": {
                      "text": "#\tPermitTTY no\n#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\n",
                      "markdown": "`#\tPermitTTY no\n#\tForceCommand cvs server\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile\t.ssh/authorized_keys\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 47,
                  "endLine": 72,
                  "endColumn": 55,
                  "snippet": {
                    "text": "# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n# PAM authentication, then enable this but set PasswordAuthentication\n# and ChallengeResponseAuthentication to 'no'.\n#UsePAM no\n\n",
                    "rendered": {
                      "text": "# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n# PAM authentication, then enable this but set PasswordAuthentication\n# and ChallengeResponseAuthentication to 'no'.\n#UsePAM no\n\n",
                      "markdown": "`# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n# PAM authentication, then enable this but set PasswordAuthentication\n# and ChallengeResponseAuthentication to 'no'.\n#UsePAM no\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 42,
                  "endLine": 70,
                  "endColumn": 50,
                  "snippet": {
                    "text": "# be allowed through the ChallengeResponseAuthentication and\n# PasswordAuthentication.  Depending on your PAM configuration,\n# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n# PAM authentication, then enable this but set PasswordAuthentication\n# and ChallengeResponseAuthentication to 'no'.\n",
                    "rendered": {
                      "text": "# be allowed through the ChallengeResponseAuthentication and\n# PasswordAuthentication.  Depending on your PAM configuration,\n# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n# PAM authentication, then enable this but set PasswordAuthentication\n# and ChallengeResponseAuthentication to 'no'.\n",
                      "markdown": "`# be allowed through the ChallengeResponseAuthentication and\n# PasswordAuthentication.  Depending on your PAM configuration,\n# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n# PAM authentication, then enable this but set PasswordAuthentication\n# and ChallengeResponseAuthentication to 'no'.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 2,
                  "endLine": 68,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# Set this to 'yes' to enable PAM authentication, account processing,\n# and session processing. If this is enabled, PAM authentication will\n# be allowed through the ChallengeResponseAuthentication and\n# PasswordAuthentication.  Depending on your PAM configuration,\n# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n",
                    "rendered": {
                      "text": "# Set this to 'yes' to enable PAM authentication, account processing,\n# and session processing. If this is enabled, PAM authentication will\n# be allowed through the ChallengeResponseAuthentication and\n# PasswordAuthentication.  Depending on your PAM configuration,\n# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n",
                      "markdown": "`# Set this to 'yes' to enable PAM authentication, account processing,\n# and session processing. If this is enabled, PAM authentication will\n# be allowed through the ChallengeResponseAuthentication and\n# PasswordAuthentication.  Depending on your PAM configuration,\n# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 32,
                  "endLine": 52,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n#PermitEmptyPasswords no\n\n# Change to no to disable s/key passwords\nChallengeResponseAuthentication no\n\n# Kerberos options\n",
                    "rendered": {
                      "text": "\n#PermitEmptyPasswords no\n\n# Change to no to disable s/key passwords\nChallengeResponseAuthentication no\n\n# Kerberos options\n",
                      "markdown": "`\n#PermitEmptyPasswords no\n\n# Change to no to disable s/key passwords\nChallengeResponseAuthentication no\n\n# Kerberos options\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 12,
                  "endLine": 50,
                  "endColumn": 20,
                  "snippet": {
                    "text": "# Don't read the user's ~/.rhosts and ~/.shosts files\n#IgnoreRhosts yes\n\n#PermitEmptyPasswords no\n\n# Change to no to disable s/key passwords\nChallengeResponseAuthentication no\n",
                    "rendered": {
                      "text": "# Don't read the user's ~/.rhosts and ~/.shosts files\n#IgnoreRhosts yes\n\n#PermitEmptyPasswords no\n\n# Change to no to disable s/key passwords\nChallengeResponseAuthentication no\n",
                      "markdown": "`# Don't read the user's ~/.rhosts and ~/.shosts files\n#IgnoreRhosts yes\n\n#PermitEmptyPasswords no\n\n# Change to no to disable s/key passwords\nChallengeResponseAuthentication no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 37,
                  "endLine": 44,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts\n#HostbasedAuthentication no\n# Change to yes if you don't trust ~/.ssh/known_hosts for\n# HostbasedAuthentication\n#IgnoreUserKnownHosts no\n# Don't read the user's ~/.rhosts and ~/.shosts files\n",
                    "rendered": {
                      "text": "\n# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts\n#HostbasedAuthentication no\n# Change to yes if you don't trust ~/.ssh/known_hosts for\n# HostbasedAuthentication\n#IgnoreUserKnownHosts no\n# Don't read the user's ~/.rhosts and ~/.shosts files\n",
                      "markdown": "`\n# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts\n#HostbasedAuthentication no\n# Change to yes if you don't trust ~/.ssh/known_hosts for\n# HostbasedAuthentication\n#IgnoreUserKnownHosts no\n# Don't read the user's ~/.rhosts and ~/.shosts files\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 19,
                  "endLine": 134,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\nAllowUsers git\n\n# Enable the use of Git protcol v2\nAcceptEnv GIT_PROTOCOL\n",
                    "rendered": {
                      "text": "\nAllowUsers git\n\n# Enable the use of Git protcol v2\nAcceptEnv GIT_PROTOCOL\n",
                      "markdown": "`\nAllowUsers git\n\n# Enable the use of Git protcol v2\nAcceptEnv GIT_PROTOCOL\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 10,
                  "endLine": 133,
                  "snippet": {
                    "text": "\nPasswordAuthentication no\n\nAllowUsers git\n\n# Enable the use of Git protcol v2\nAcceptEnv GIT_PROTOCOL\n",
                    "rendered": {
                      "text": "\nPasswordAuthentication no\n\nAllowUsers git\n\n# Enable the use of Git protcol v2\nAcceptEnv GIT_PROTOCOL\n",
                      "markdown": "`\nPasswordAuthentication no\n\nAllowUsers git\n\n# Enable the use of Git protcol v2\nAcceptEnv GIT_PROTOCOL\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 25,
                  "endLine": 129,
                  "snippet": {
                    "text": "AuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n\nPasswordAuthentication no\n\nAllowUsers git\n",
                    "rendered": {
                      "text": "AuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n\nPasswordAuthentication no\n\nAllowUsers git\n",
                      "markdown": "`AuthorizedKeysFile\t.ssh/authorized_keys\n\nAuthorizedKeysCommand /authorized_keys %u %k\nAuthorizedKeysCommandUser git\n\nPasswordAuthentication no\n\nAllowUsers git\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/sshd_config"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 11,
                  "endLine": 103,
                  "endColumn": 17,
                  "snippet": {
                    "text": "#Banner none\n\n# override default of no subsystems\n# Subsystem\tsftp\t/usr/lib/ssh/sftp-server\n\n# the following are HPN related configuration options\n# tcp receive buffer polling. disable in non autotuning kernels\n",
                    "rendered": {
                      "text": "#Banner none\n\n# override default of no subsystems\n# Subsystem\tsftp\t/usr/lib/ssh/sftp-server\n\n# the following are HPN related configuration options\n# tcp receive buffer polling. disable in non autotuning kernels\n",
                      "markdown": "`#Banner none\n\n# override default of no subsystems\n# Subsystem\tsftp\t/usr/lib/ssh/sftp-server\n\n# the following are HPN related configuration options\n# tcp receive buffer polling. disable in non autotuning kernels\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/build.sh"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 25,
                  "endLine": 40,
                  "endColumn": 30,
                  "snippet": {
                    "text": "      -f \"${CONTEXT}/Dockerfile${DOCKERFILE_EXT}\" \\\n      -t \"$(qualifiedName ${IMAGE_NAME})\" \\\n      ${DOCKER_OPTS:-} \\\n      \"${CONTEXT}\" 2>&1 | tee \"${WORKSPACE}/${IMAGE_DIR}.out\"\n  } || {\n    echo \"${IMAGE_DIR}\" >> \"${WORKSPACE}/failed.log\"\n  }\n",
                    "rendered": {
                      "text": "      -f \"${CONTEXT}/Dockerfile${DOCKERFILE_EXT}\" \\\n      -t \"$(qualifiedName ${IMAGE_NAME})\" \\\n      ${DOCKER_OPTS:-} \\\n      \"${CONTEXT}\" 2>&1 | tee \"${WORKSPACE}/${IMAGE_DIR}.out\"\n  } || {\n    echo \"${IMAGE_DIR}\" >> \"${WORKSPACE}/failed.log\"\n  }\n",
                      "markdown": "`      -f \"${CONTEXT}/Dockerfile${DOCKERFILE_EXT}\" \\\n      -t \"$(qualifiedName ${IMAGE_NAME})\" \\\n      ${DOCKER_OPTS:-} \\\n      \"${CONTEXT}\" 2>&1 | tee \"${WORKSPACE}/${IMAGE_DIR}.out\"\n  } || {\n    echo \"${IMAGE_DIR}\" >> \"${WORKSPACE}/failed.log\"\n  }\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/build.sh"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  IMAGE_DIR=\"${IMAGE_NAME%*-ee}\"\n  CONTEXT=\"${SCRIPT_HOME}/../../${IMAGE_DIR}\"\n  {\n    docker build \\\n      -f \"${CONTEXT}/Dockerfile${DOCKERFILE_EXT}\" \\\n      -t \"$(qualifiedName ${IMAGE_NAME})\" \\\n      ${DOCKER_OPTS:-} \\\n",
                    "rendered": {
                      "text": "  IMAGE_DIR=\"${IMAGE_NAME%*-ee}\"\n  CONTEXT=\"${SCRIPT_HOME}/../../${IMAGE_DIR}\"\n  {\n    docker build \\\n      -f \"${CONTEXT}/Dockerfile${DOCKERFILE_EXT}\" \\\n      -t \"$(qualifiedName ${IMAGE_NAME})\" \\\n      ${DOCKER_OPTS:-} \\\n",
                      "markdown": "`  IMAGE_DIR=\"${IMAGE_NAME%*-ee}\"\n  CONTEXT=\"${SCRIPT_HOME}/../../${IMAGE_DIR}\"\n  {\n    docker build \\\n      -f \"${CONTEXT}/Dockerfile${DOCKERFILE_EXT}\" \\\n      -t \"$(qualifiedName ${IMAGE_NAME})\" \\\n      ${DOCKER_OPTS:-} \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/build.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 8,
                  "endLine": 12,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#\n# NOTE:\n#\n#   This script requires `docker`.\n#\n\nset -euxo pipefail\n",
                    "rendered": {
                      "text": "#\n# NOTE:\n#\n#   This script requires `docker`.\n#\n\nset -euxo pipefail\n",
                      "markdown": "`#\n# NOTE:\n#\n#   This script requires `docker`.\n#\n\nset -euxo pipefail\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/assets-release.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -euo pipefail\n\nif [ -z \"${UBI_RELEASE_TAG:-}\" ] || \\\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -euo pipefail\n\nif [ -z \"${UBI_RELEASE_TAG:-}\" ] || \\\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -euo pipefail\n\nif [ -z \"${UBI_RELEASE_TAG:-}\" ] || \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/assets-release.sh"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 77,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  releaseAsset \"${asset}\" \"${ASSETS_DIR}/${asset_name}\" \"application/gzip\"\n  addLink \"${ASSETS_URL_PREFIX}/${ASSETS_DIR}\" \"${asset_name}\" \"${asset_name}.asc\" \"${asset_name}.sha256\"\ndone\n\ncurl --retry 6 -f -H \"PRIVATE-TOKEN:${UBI_RELEASE_PAT}\" -H 'Content-Type:application/json' --data \\\n    \"$(printf \\\n      '{\"tag_name\":\"%s\",\"ref\":\"%s\",\"name\":\"%s\",\"description\":\"%s\",\"assets\":{\"links\":[%s]}}' \\\n      \"${UBI_RELEASE_TAG}\" \\\n",
                    "rendered": {
                      "text": "  releaseAsset \"${asset}\" \"${ASSETS_DIR}/${asset_name}\" \"application/gzip\"\n  addLink \"${ASSETS_URL_PREFIX}/${ASSETS_DIR}\" \"${asset_name}\" \"${asset_name}.asc\" \"${asset_name}.sha256\"\ndone\n\ncurl --retry 6 -f -H \"PRIVATE-TOKEN:${UBI_RELEASE_PAT}\" -H 'Content-Type:application/json' --data \\\n    \"$(printf \\\n      '{\"tag_name\":\"%s\",\"ref\":\"%s\",\"name\":\"%s\",\"description\":\"%s\",\"assets\":{\"links\":[%s]}}' \\\n      \"${UBI_RELEASE_TAG}\" \\\n",
                      "markdown": "`  releaseAsset \"${asset}\" \"${ASSETS_DIR}/${asset_name}\" \"application/gzip\"\n  addLink \"${ASSETS_URL_PREFIX}/${ASSETS_DIR}\" \"${asset_name}\" \"${asset_name}.asc\" \"${asset_name}.sha256\"\ndone\n\ncurl --retry 6 -f -H \"PRIVATE-TOKEN:${UBI_RELEASE_PAT}\" -H 'Content-Type:application/json' --data \\\n    \"$(printf \\\n      '{\"tag_name\":\"%s\",\"ref\":\"%s\",\"name\":\"%s\",\"description\":\"%s\",\"assets\":{\"links\":[%s]}}' \\\n      \"${UBI_RELEASE_TAG}\" \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/assets-release.sh"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 55,
                  "endLine": 65,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  s3Copy \"${asset}\" \"${path}\" \"${type}\"\n}\n\ngpg --batch --quiet --yes --armor --export --output gpg\ntar -cvf \"${ASSETS_PACK}\" -C ubi .\ns3Copy 'gpg' 'gpg' 'application/x-pem-file'\nreleaseAsset \"${ASSETS_PACK}\" \"${ASSETS_PACK}\" \"application/x-tar\"\naddLink \"${ASSETS_URL_PREFIX}\" \"${ASSETS_PACK}\" \"${ASSETS_PACK}.asc\" \"${ASSETS_PACK}.sha256\"\n",
                    "rendered": {
                      "text": "  s3Copy \"${asset}\" \"${path}\" \"${type}\"\n}\n\ngpg --batch --quiet --yes --armor --export --output gpg\ntar -cvf \"${ASSETS_PACK}\" -C ubi .\ns3Copy 'gpg' 'gpg' 'application/x-pem-file'\nreleaseAsset \"${ASSETS_PACK}\" \"${ASSETS_PACK}\" \"application/x-tar\"\naddLink \"${ASSETS_URL_PREFIX}\" \"${ASSETS_PACK}\" \"${ASSETS_PACK}.asc\" \"${ASSETS_PACK}.sha256\"\n",
                      "markdown": "`  s3Copy \"${asset}\" \"${path}\" \"${type}\"\n}\n\ngpg --batch --quiet --yes --armor --export --output gpg\ntar -cvf \"${ASSETS_PACK}\" -C ubi .\ns3Copy 'gpg' 'gpg' 'application/x-pem-file'\nreleaseAsset \"${ASSETS_PACK}\" \"${ASSETS_PACK}\" \"application/x-tar\"\naddLink \"${ASSETS_URL_PREFIX}\" \"${ASSETS_PACK}\" \"${ASSETS_PACK}.asc\" \"${ASSETS_PACK}.sha256\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/assets-release.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 8,
                  "endLine": 50,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  local asset=\"${1}\"\n  local path=\"${2}\"\n  local type=\"${3:-text/plain}\"\n  aws s3 cp --quiet --acl public-read --content-type \"${type}\" \"${asset}\" \"s3://${UBI_ASSETS_AWS_BUCKET}/${path}\"\n}\n\nreleaseAsset() {\n",
                    "rendered": {
                      "text": "  local asset=\"${1}\"\n  local path=\"${2}\"\n  local type=\"${3:-text/plain}\"\n  aws s3 cp --quiet --acl public-read --content-type \"${type}\" \"${asset}\" \"s3://${UBI_ASSETS_AWS_BUCKET}/${path}\"\n}\n\nreleaseAsset() {\n",
                      "markdown": "`  local asset=\"${1}\"\n  local path=\"${2}\"\n  local type=\"${3:-text/plain}\"\n  aws s3 cp --quiet --acl public-read --content-type \"${type}\" \"${asset}\" \"s3://${UBI_ASSETS_AWS_BUCKET}/${path}\"\n}\n\nreleaseAsset() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/assets-release.sh"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 24,
                  "endLine": 43,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\nsumAsset() {\n  local asset=\"${1}\"\n  sha256sum \"${asset}\" | awk '{print $1}' > \"${asset}.sha256\"\n}\n\ns3Copy() {\n",
                    "rendered": {
                      "text": "\nsumAsset() {\n  local asset=\"${1}\"\n  sha256sum \"${asset}\" | awk '{print $1}' > \"${asset}.sha256\"\n}\n\ns3Copy() {\n",
                      "markdown": "`\nsumAsset() {\n  local asset=\"${1}\"\n  sha256sum \"${asset}\" | awk '{print $1}' > \"${asset}.sha256\"\n}\n\ns3Copy() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/assets-release.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -euo pipefail\n\nif [ -z \"${UBI_RELEASE_TAG:-}\" ] || \\\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -euo pipefail\n\nif [ -z \"${UBI_RELEASE_TAG:-}\" ] || \\\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -euo pipefail\n\nif [ -z \"${UBI_RELEASE_TAG:-}\" ] || \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/prepare.sh"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 5,
                  "endLine": 54,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    resources=($(sed -rn 's/^ADD (.*.tar.gz).*$/\\1/p' \"${SCRIPT_HOME}/../../${TARGET%*-ee}/Dockerfile.ubi\"))\n    for resource in \"${resources[@]}\"\n    do\n      cp \"${WORKSPACE}/${resource}\" \"${SCRIPT_HOME}/../../${TARGET%*-ee}\"\n    done\n  fi\ndone\n",
                    "rendered": {
                      "text": "    resources=($(sed -rn 's/^ADD (.*.tar.gz).*$/\\1/p' \"${SCRIPT_HOME}/../../${TARGET%*-ee}/Dockerfile.ubi\"))\n    for resource in \"${resources[@]}\"\n    do\n      cp \"${WORKSPACE}/${resource}\" \"${SCRIPT_HOME}/../../${TARGET%*-ee}\"\n    done\n  fi\ndone\n",
                      "markdown": "`    resources=($(sed -rn 's/^ADD (.*.tar.gz).*$/\\1/p' \"${SCRIPT_HOME}/../../${TARGET%*-ee}/Dockerfile.ubi\"))\n    for resource in \"${resources[@]}\"\n    do\n      cp \"${WORKSPACE}/${resource}\" \"${SCRIPT_HOME}/../../${TARGET%*-ee}\"\n    done\n  fi\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/prepare.sh"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 58,
                  "endLine": 46,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Verify the package integrity\ngpg --verify \"${WORKSPACE}/${PACKAGE_NAME}.asc\" \"${WORKSPACE}/${PACKAGE_NAME}\"\n\n# Extract UBI dependencies and move them to build contexts\ntar -xvf \"${WORKSPACE}/${PACKAGE_NAME}\" -C \"${WORKSPACE}\"\nrm \"${WORKSPACE}/${PACKAGE_NAME}\" \"${WORKSPACE}/${PACKAGE_NAME}.asc\"\nfor ARCHIVE in $(ls ${WORKSPACE}); do\n  TARGET=${ARCHIVE%*.tar.gz}\n",
                    "rendered": {
                      "text": "# Verify the package integrity\ngpg --verify \"${WORKSPACE}/${PACKAGE_NAME}.asc\" \"${WORKSPACE}/${PACKAGE_NAME}\"\n\n# Extract UBI dependencies and move them to build contexts\ntar -xvf \"${WORKSPACE}/${PACKAGE_NAME}\" -C \"${WORKSPACE}\"\nrm \"${WORKSPACE}/${PACKAGE_NAME}\" \"${WORKSPACE}/${PACKAGE_NAME}.asc\"\nfor ARCHIVE in $(ls ${WORKSPACE}); do\n  TARGET=${ARCHIVE%*.tar.gz}\n",
                      "markdown": "`# Verify the package integrity\ngpg --verify \"${WORKSPACE}/${PACKAGE_NAME}.asc\" \"${WORKSPACE}/${PACKAGE_NAME}\"\n\n# Extract UBI dependencies and move them to build contexts\ntar -xvf \"${WORKSPACE}/${PACKAGE_NAME}\" -C \"${WORKSPACE}\"\nrm \"${WORKSPACE}/${PACKAGE_NAME}\" \"${WORKSPACE}/${PACKAGE_NAME}.asc\"\nfor ARCHIVE in $(ls ${WORKSPACE}); do\n  TARGET=${ARCHIVE%*.tar.gz}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/prepare.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 2,
                  "endLine": 40,
                  "endColumn": 3,
                  "snippet": {
                    "text": "curl --retry 6 -Lf \"${PACKAGE_URL}.asc\" -o \"${WORKSPACE}/${PACKAGE_NAME}.asc\"\nif [ ! -f \"${CACHE_LOCATION}/${PACKAGE_NAME}\" ]; then\n  curl --retry 6 -Lf \"${PACKAGE_URL}\" -o \"${CACHE_LOCATION}/${PACKAGE_NAME}\"\nfi\ncp \"${CACHE_LOCATION}/${PACKAGE_NAME}\" \"${WORKSPACE}/${PACKAGE_NAME}\"\n\n# Verify the package integrity\ngpg --verify \"${WORKSPACE}/${PACKAGE_NAME}.asc\" \"${WORKSPACE}/${PACKAGE_NAME}\"\n",
                    "rendered": {
                      "text": "curl --retry 6 -Lf \"${PACKAGE_URL}.asc\" -o \"${WORKSPACE}/${PACKAGE_NAME}.asc\"\nif [ ! -f \"${CACHE_LOCATION}/${PACKAGE_NAME}\" ]; then\n  curl --retry 6 -Lf \"${PACKAGE_URL}\" -o \"${CACHE_LOCATION}/${PACKAGE_NAME}\"\nfi\ncp \"${CACHE_LOCATION}/${PACKAGE_NAME}\" \"${WORKSPACE}/${PACKAGE_NAME}\"\n\n# Verify the package integrity\ngpg --verify \"${WORKSPACE}/${PACKAGE_NAME}.asc\" \"${WORKSPACE}/${PACKAGE_NAME}\"\n",
                      "markdown": "`curl --retry 6 -Lf \"${PACKAGE_URL}.asc\" -o \"${WORKSPACE}/${PACKAGE_NAME}.asc\"\nif [ ! -f \"${CACHE_LOCATION}/${PACKAGE_NAME}\" ]; then\n  curl --retry 6 -Lf \"${PACKAGE_URL}\" -o \"${CACHE_LOCATION}/${PACKAGE_NAME}\"\nfi\ncp \"${CACHE_LOCATION}/${PACKAGE_NAME}\" \"${WORKSPACE}/${PACKAGE_NAME}\"\n\n# Verify the package integrity\ngpg --verify \"${WORKSPACE}/${PACKAGE_NAME}.asc\" \"${WORKSPACE}/${PACKAGE_NAME}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/prepare.sh"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# Cache the package but always download the signature.\ncurl --retry 6 -Lf \"${PACKAGE_URL}.asc\" -o \"${WORKSPACE}/${PACKAGE_NAME}.asc\"\nif [ ! -f \"${CACHE_LOCATION}/${PACKAGE_NAME}\" ]; then\n  curl --retry 6 -Lf \"${PACKAGE_URL}\" -o \"${CACHE_LOCATION}/${PACKAGE_NAME}\"\nfi\ncp \"${CACHE_LOCATION}/${PACKAGE_NAME}\" \"${WORKSPACE}/${PACKAGE_NAME}\"\n\n",
                    "rendered": {
                      "text": "# Cache the package but always download the signature.\ncurl --retry 6 -Lf \"${PACKAGE_URL}.asc\" -o \"${WORKSPACE}/${PACKAGE_NAME}.asc\"\nif [ ! -f \"${CACHE_LOCATION}/${PACKAGE_NAME}\" ]; then\n  curl --retry 6 -Lf \"${PACKAGE_URL}\" -o \"${CACHE_LOCATION}/${PACKAGE_NAME}\"\nfi\ncp \"${CACHE_LOCATION}/${PACKAGE_NAME}\" \"${WORKSPACE}/${PACKAGE_NAME}\"\n\n",
                      "markdown": "`# Cache the package but always download the signature.\ncurl --retry 6 -Lf \"${PACKAGE_URL}.asc\" -o \"${WORKSPACE}/${PACKAGE_NAME}.asc\"\nif [ ! -f \"${CACHE_LOCATION}/${PACKAGE_NAME}\" ]; then\n  curl --retry 6 -Lf \"${PACKAGE_URL}\" -o \"${CACHE_LOCATION}/${PACKAGE_NAME}\"\nfi\ncp \"${CACHE_LOCATION}/${PACKAGE_NAME}\" \"${WORKSPACE}/${PACKAGE_NAME}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/prepare.sh"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 54,
                  "endLine": 36,
                  "endColumn": 5,
                  "snippet": {
                    "text": "curl --retry 6 -Lf \"${PACKAGE_HOST}/gpg\" | gpg --import\n\n# Download UBI dependencies package and its signature.\n# Cache the package but always download the signature.\ncurl --retry 6 -Lf \"${PACKAGE_URL}.asc\" -o \"${WORKSPACE}/${PACKAGE_NAME}.asc\"\nif [ ! -f \"${CACHE_LOCATION}/${PACKAGE_NAME}\" ]; then\n  curl --retry 6 -Lf \"${PACKAGE_URL}\" -o \"${CACHE_LOCATION}/${PACKAGE_NAME}\"\nfi\n",
                    "rendered": {
                      "text": "curl --retry 6 -Lf \"${PACKAGE_HOST}/gpg\" | gpg --import\n\n# Download UBI dependencies package and its signature.\n# Cache the package but always download the signature.\ncurl --retry 6 -Lf \"${PACKAGE_URL}.asc\" -o \"${WORKSPACE}/${PACKAGE_NAME}.asc\"\nif [ ! -f \"${CACHE_LOCATION}/${PACKAGE_NAME}\" ]; then\n  curl --retry 6 -Lf \"${PACKAGE_URL}\" -o \"${CACHE_LOCATION}/${PACKAGE_NAME}\"\nfi\n",
                      "markdown": "`curl --retry 6 -Lf \"${PACKAGE_HOST}/gpg\" | gpg --import\n\n# Download UBI dependencies package and its signature.\n# Cache the package but always download the signature.\ncurl --retry 6 -Lf \"${PACKAGE_URL}.asc\" -o \"${WORKSPACE}/${PACKAGE_NAME}.asc\"\nif [ ! -f \"${CACHE_LOCATION}/${PACKAGE_NAME}\" ]; then\n  curl --retry 6 -Lf \"${PACKAGE_URL}\" -o \"${CACHE_LOCATION}/${PACKAGE_NAME}\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/prepare.sh"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 41,
                  "endLine": 32,
                  "endColumn": 5,
                  "snippet": {
                    "text": "mkdir -p \"${WORKSPACE}\"\nmkdir -p \"${CACHE_LOCATION}\"\n\n# Download and import GitLab's public key\ncurl --retry 6 -Lf \"${PACKAGE_HOST}/gpg\" | gpg --import\n\n# Download UBI dependencies package and its signature.\n# Cache the package but always download the signature.\n",
                    "rendered": {
                      "text": "mkdir -p \"${WORKSPACE}\"\nmkdir -p \"${CACHE_LOCATION}\"\n\n# Download and import GitLab's public key\ncurl --retry 6 -Lf \"${PACKAGE_HOST}/gpg\" | gpg --import\n\n# Download UBI dependencies package and its signature.\n# Cache the package but always download the signature.\n",
                      "markdown": "`mkdir -p \"${WORKSPACE}\"\nmkdir -p \"${CACHE_LOCATION}\"\n\n# Download and import GitLab's public key\ncurl --retry 6 -Lf \"${PACKAGE_HOST}/gpg\" | gpg --import\n\n# Download UBI dependencies package and its signature.\n# Cache the package but always download the signature.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/ubi-offline/prepare.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 8,
                  "endLine": 14,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#\n# NOTE:\n#\n#   This script requires `curl`, `gpg`, and `tar`.\n#\n\nSCRIPT_HOME=\"$( cd \"${BASH_SOURCE[0]%/*}\" > /dev/null 2>&1 && pwd )\"\n",
                    "rendered": {
                      "text": "#\n# NOTE:\n#\n#   This script requires `curl`, `gpg`, and `tar`.\n#\n\nSCRIPT_HOME=\"$( cd \"${BASH_SOURCE[0]%/*}\" > /dev/null 2>&1 && pwd )\"\n",
                      "markdown": "`#\n# NOTE:\n#\n#   This script requires `curl`, `gpg`, and `tar`.\n#\n\nSCRIPT_HOME=\"$( cd \"${BASH_SOURCE[0]%/*}\" > /dev/null 2>&1 && pwd )\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/docker_image_sync.sh"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 61,
                  "endLine": 61,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\nsource ./build-scripts/build.sh\n\necho \"${CI_JOB_TOKEN}\" | docker login -u \"gitlab-ci-token\" --password-stdin \"${CI_REGISTRY}\"\n\nwhile IFS=: read -r component tag; do\n  if [[ -z \"${component}\" ]]; then \n",
                    "rendered": {
                      "text": "\nsource ./build-scripts/build.sh\n\necho \"${CI_JOB_TOKEN}\" | docker login -u \"gitlab-ci-token\" --password-stdin \"${CI_REGISTRY}\"\n\nwhile IFS=: read -r component tag; do\n  if [[ -z \"${component}\" ]]; then \n",
                      "markdown": "`\nsource ./build-scripts/build.sh\n\necho \"${CI_JOB_TOKEN}\" | docker login -u \"gitlab-ci-token\" --password-stdin \"${CI_REGISTRY}\"\n\nwhile IFS=: read -r component tag; do\n  if [[ -z \"${component}\" ]]; then \n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/docker_image_sync.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 70,
                  "endLine": 50,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\n    DEST_REGISTRY=${ARTIFACT_REGISTRY:-\"us-east1-docker.pkg.dev\"}\n    DEST_PATH=${ARTIFACT_REGISTRY_PATH:-\"gitlab-com-artifact-registry/images\"}\n    cat \"${ARTIFACT_REGISTRY_SA_FILE}\" | docker login -u _json_key  --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  *)\n    echo \"Invalid destination: $registry_destination\" 1>&2\n",
                    "rendered": {
                      "text": "\n    DEST_REGISTRY=${ARTIFACT_REGISTRY:-\"us-east1-docker.pkg.dev\"}\n    DEST_PATH=${ARTIFACT_REGISTRY_PATH:-\"gitlab-com-artifact-registry/images\"}\n    cat \"${ARTIFACT_REGISTRY_SA_FILE}\" | docker login -u _json_key  --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  *)\n    echo \"Invalid destination: $registry_destination\" 1>&2\n",
                      "markdown": "`\n    DEST_REGISTRY=${ARTIFACT_REGISTRY:-\"us-east1-docker.pkg.dev\"}\n    DEST_PATH=${ARTIFACT_REGISTRY_PATH:-\"gitlab-com-artifact-registry/images\"}\n    cat \"${ARTIFACT_REGISTRY_SA_FILE}\" | docker login -u _json_key  --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  *)\n    echo \"Invalid destination: $registry_destination\" 1>&2\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/docker_image_sync.sh"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 78,
                  "endLine": 40,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\n    DEST_REGISTRY=${COM_REGISTRY:-\"registry.gitlab.com\"}\n    DEST_PATH=${COM_CNG_REGISTRY_PATH:-\"gitlab-org/build/cng\"}\n    echo \"${COM_REGISTRY_PASSWORD}\" | docker login -u \"${CI_REGISTRY_USER}\" --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  artifact-registry)\n    if [ -z $ARTIFACT_REGISTRY_SA_FILE ]; then\n",
                    "rendered": {
                      "text": "\n    DEST_REGISTRY=${COM_REGISTRY:-\"registry.gitlab.com\"}\n    DEST_PATH=${COM_CNG_REGISTRY_PATH:-\"gitlab-org/build/cng\"}\n    echo \"${COM_REGISTRY_PASSWORD}\" | docker login -u \"${CI_REGISTRY_USER}\" --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  artifact-registry)\n    if [ -z $ARTIFACT_REGISTRY_SA_FILE ]; then\n",
                      "markdown": "`\n    DEST_REGISTRY=${COM_REGISTRY:-\"registry.gitlab.com\"}\n    DEST_PATH=${COM_CNG_REGISTRY_PATH:-\"gitlab-org/build/cng\"}\n    echo \"${COM_REGISTRY_PASSWORD}\" | docker login -u \"${CI_REGISTRY_USER}\" --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  artifact-registry)\n    if [ -z $ARTIFACT_REGISTRY_SA_FILE ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/docker_image_sync.sh"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 25,
                  "endLine": 40,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n    DEST_REGISTRY=${COM_REGISTRY:-\"registry.gitlab.com\"}\n    DEST_PATH=${COM_CNG_REGISTRY_PATH:-\"gitlab-org/build/cng\"}\n    echo \"${COM_REGISTRY_PASSWORD}\" | docker login -u \"${CI_REGISTRY_USER}\" --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  artifact-registry)\n    if [ -z $ARTIFACT_REGISTRY_SA_FILE ]; then\n",
                    "rendered": {
                      "text": "\n    DEST_REGISTRY=${COM_REGISTRY:-\"registry.gitlab.com\"}\n    DEST_PATH=${COM_CNG_REGISTRY_PATH:-\"gitlab-org/build/cng\"}\n    echo \"${COM_REGISTRY_PASSWORD}\" | docker login -u \"${CI_REGISTRY_USER}\" --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  artifact-registry)\n    if [ -z $ARTIFACT_REGISTRY_SA_FILE ]; then\n",
                      "markdown": "`\n    DEST_REGISTRY=${COM_REGISTRY:-\"registry.gitlab.com\"}\n    DEST_PATH=${COM_CNG_REGISTRY_PATH:-\"gitlab-org/build/cng\"}\n    echo \"${COM_REGISTRY_PASSWORD}\" | docker login -u \"${CI_REGISTRY_USER}\" --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  artifact-registry)\n    if [ -z $ARTIFACT_REGISTRY_SA_FILE ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/docker_image_sync.sh"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 48,
                  "endLine": 34,
                  "endColumn": 56,
                  "snippet": {
                    "text": "case \"$registry_destination\" in\n  gitlab-com)\n    if [ -z $COM_REGISTRY_PASSWORD ]; then\n      echo 'Skipping sync because $COM_REGISTRY_PASSWORD is not set in environment' 1>&2\n      exit 0\n    fi\n\n",
                    "rendered": {
                      "text": "case \"$registry_destination\" in\n  gitlab-com)\n    if [ -z $COM_REGISTRY_PASSWORD ]; then\n      echo 'Skipping sync because $COM_REGISTRY_PASSWORD is not set in environment' 1>&2\n      exit 0\n    fi\n\n",
                      "markdown": "`case \"$registry_destination\" in\n  gitlab-com)\n    if [ -z $COM_REGISTRY_PASSWORD ]; then\n      echo 'Skipping sync because $COM_REGISTRY_PASSWORD is not set in environment' 1>&2\n      exit 0\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/docker_image_sync.sh"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 26,
                  "endLine": 33,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\ncase \"$registry_destination\" in\n  gitlab-com)\n    if [ -z $COM_REGISTRY_PASSWORD ]; then\n      echo 'Skipping sync because $COM_REGISTRY_PASSWORD is not set in environment' 1>&2\n      exit 0\n    fi\n",
                    "rendered": {
                      "text": "\ncase \"$registry_destination\" in\n  gitlab-com)\n    if [ -z $COM_REGISTRY_PASSWORD ]; then\n      echo 'Skipping sync because $COM_REGISTRY_PASSWORD is not set in environment' 1>&2\n      exit 0\n    fi\n",
                      "markdown": "`\ncase \"$registry_destination\" in\n  gitlab-com)\n    if [ -z $COM_REGISTRY_PASSWORD ]; then\n      echo 'Skipping sync because $COM_REGISTRY_PASSWORD is not set in environment' 1>&2\n      exit 0\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/docker_image_sync.sh"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 24,
                  "endLine": 61,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\nsource ./build-scripts/build.sh\n\necho \"${CI_JOB_TOKEN}\" | docker login -u \"gitlab-ci-token\" --password-stdin \"${CI_REGISTRY}\"\n\nwhile IFS=: read -r component tag; do\n  if [[ -z \"${component}\" ]]; then \n",
                    "rendered": {
                      "text": "\nsource ./build-scripts/build.sh\n\necho \"${CI_JOB_TOKEN}\" | docker login -u \"gitlab-ci-token\" --password-stdin \"${CI_REGISTRY}\"\n\nwhile IFS=: read -r component tag; do\n  if [[ -z \"${component}\" ]]; then \n",
                      "markdown": "`\nsource ./build-scripts/build.sh\n\necho \"${CI_JOB_TOKEN}\" | docker login -u \"gitlab-ci-token\" --password-stdin \"${CI_REGISTRY}\"\n\nwhile IFS=: read -r component tag; do\n  if [[ -z \"${component}\" ]]; then \n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/docker_image_sync.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 40,
                  "endLine": 50,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n    DEST_REGISTRY=${ARTIFACT_REGISTRY:-\"us-east1-docker.pkg.dev\"}\n    DEST_PATH=${ARTIFACT_REGISTRY_PATH:-\"gitlab-com-artifact-registry/images\"}\n    cat \"${ARTIFACT_REGISTRY_SA_FILE}\" | docker login -u _json_key  --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  *)\n    echo \"Invalid destination: $registry_destination\" 1>&2\n",
                    "rendered": {
                      "text": "\n    DEST_REGISTRY=${ARTIFACT_REGISTRY:-\"us-east1-docker.pkg.dev\"}\n    DEST_PATH=${ARTIFACT_REGISTRY_PATH:-\"gitlab-com-artifact-registry/images\"}\n    cat \"${ARTIFACT_REGISTRY_SA_FILE}\" | docker login -u _json_key  --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  *)\n    echo \"Invalid destination: $registry_destination\" 1>&2\n",
                      "markdown": "`\n    DEST_REGISTRY=${ARTIFACT_REGISTRY:-\"us-east1-docker.pkg.dev\"}\n    DEST_PATH=${ARTIFACT_REGISTRY_PATH:-\"gitlab-com-artifact-registry/images\"}\n    cat \"${ARTIFACT_REGISTRY_SA_FILE}\" | docker login -u _json_key  --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  *)\n    echo \"Invalid destination: $registry_destination\" 1>&2\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/docker_image_sync.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 3,
                  "endLine": 50,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    DEST_REGISTRY=${ARTIFACT_REGISTRY:-\"us-east1-docker.pkg.dev\"}\n    DEST_PATH=${ARTIFACT_REGISTRY_PATH:-\"gitlab-com-artifact-registry/images\"}\n    cat \"${ARTIFACT_REGISTRY_SA_FILE}\" | docker login -u _json_key  --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  *)\n    echo \"Invalid destination: $registry_destination\" 1>&2\n",
                    "rendered": {
                      "text": "\n    DEST_REGISTRY=${ARTIFACT_REGISTRY:-\"us-east1-docker.pkg.dev\"}\n    DEST_PATH=${ARTIFACT_REGISTRY_PATH:-\"gitlab-com-artifact-registry/images\"}\n    cat \"${ARTIFACT_REGISTRY_SA_FILE}\" | docker login -u _json_key  --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  *)\n    echo \"Invalid destination: $registry_destination\" 1>&2\n",
                      "markdown": "`\n    DEST_REGISTRY=${ARTIFACT_REGISTRY:-\"us-east1-docker.pkg.dev\"}\n    DEST_PATH=${ARTIFACT_REGISTRY_PATH:-\"gitlab-com-artifact-registry/images\"}\n    cat \"${ARTIFACT_REGISTRY_SA_FILE}\" | docker login -u _json_key  --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  *)\n    echo \"Invalid destination: $registry_destination\" 1>&2\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/docker_image_sync.sh"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 37,
                  "endLine": 40,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n    DEST_REGISTRY=${COM_REGISTRY:-\"registry.gitlab.com\"}\n    DEST_PATH=${COM_CNG_REGISTRY_PATH:-\"gitlab-org/build/cng\"}\n    echo \"${COM_REGISTRY_PASSWORD}\" | docker login -u \"${CI_REGISTRY_USER}\" --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  artifact-registry)\n    if [ -z $ARTIFACT_REGISTRY_SA_FILE ]; then\n",
                    "rendered": {
                      "text": "\n    DEST_REGISTRY=${COM_REGISTRY:-\"registry.gitlab.com\"}\n    DEST_PATH=${COM_CNG_REGISTRY_PATH:-\"gitlab-org/build/cng\"}\n    echo \"${COM_REGISTRY_PASSWORD}\" | docker login -u \"${CI_REGISTRY_USER}\" --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  artifact-registry)\n    if [ -z $ARTIFACT_REGISTRY_SA_FILE ]; then\n",
                      "markdown": "`\n    DEST_REGISTRY=${COM_REGISTRY:-\"registry.gitlab.com\"}\n    DEST_PATH=${COM_CNG_REGISTRY_PATH:-\"gitlab-org/build/cng\"}\n    echo \"${COM_REGISTRY_PASSWORD}\" | docker login -u \"${CI_REGISTRY_USER}\" --password-stdin \"${DEST_REGISTRY}\"\n    ;;\n  artifact-registry)\n    if [ -z $ARTIFACT_REGISTRY_SA_FILE ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/docker_image_sync.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 6,
                  "endColumn": 6,
                  "snippet": {
                    "text": "set -e\n\nusage() {\n  cat <<EOF\nUsage: $0 <image file> <gitlab-com|artifact-registry>\n\nExamples:\n",
                    "rendered": {
                      "text": "set -e\n\nusage() {\n  cat <<EOF\nUsage: $0 <image file> <gitlab-com|artifact-registry>\n\nExamples:\n",
                      "markdown": "`set -e\n\nusage() {\n  cat <<EOF\nUsage: $0 <image file> <gitlab-com|artifact-registry>\n\nExamples:\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 44,
                  "endLine": 391,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n  # Attempt to sign using the prebuilt private key, if it is available\n  if [ -e \"${COSIGN_PRIVATE_KEY}\" ]; then\n    cosign sign --recursive --key \"${COSIGN_PRIVATE_KEY}\" \"${IMAGE_REFERENCE}\"\n  else\n    echo \"Image digest not signed with private key because the key was undefined.\"\n  fi\n",
                    "rendered": {
                      "text": "\n  # Attempt to sign using the prebuilt private key, if it is available\n  if [ -e \"${COSIGN_PRIVATE_KEY}\" ]; then\n    cosign sign --recursive --key \"${COSIGN_PRIVATE_KEY}\" \"${IMAGE_REFERENCE}\"\n  else\n    echo \"Image digest not signed with private key because the key was undefined.\"\n  fi\n",
                      "markdown": "`\n  # Attempt to sign using the prebuilt private key, if it is available\n  if [ -e \"${COSIGN_PRIVATE_KEY}\" ]; then\n    cosign sign --recursive --key \"${COSIGN_PRIVATE_KEY}\" \"${IMAGE_REFERENCE}\"\n  else\n    echo \"Image digest not signed with private key because the key was undefined.\"\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 20,
                  "endLine": 390,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  fi\n\n  # Attempt to sign using the prebuilt private key, if it is available\n  if [ -e \"${COSIGN_PRIVATE_KEY}\" ]; then\n    cosign sign --recursive --key \"${COSIGN_PRIVATE_KEY}\" \"${IMAGE_REFERENCE}\"\n  else\n    echo \"Image digest not signed with private key because the key was undefined.\"\n",
                    "rendered": {
                      "text": "  fi\n\n  # Attempt to sign using the prebuilt private key, if it is available\n  if [ -e \"${COSIGN_PRIVATE_KEY}\" ]; then\n    cosign sign --recursive --key \"${COSIGN_PRIVATE_KEY}\" \"${IMAGE_REFERENCE}\"\n  else\n    echo \"Image digest not signed with private key because the key was undefined.\"\n",
                      "markdown": "`  fi\n\n  # Attempt to sign using the prebuilt private key, if it is available\n  if [ -e \"${COSIGN_PRIVATE_KEY}\" ]; then\n    cosign sign --recursive --key \"${COSIGN_PRIVATE_KEY}\" \"${IMAGE_REFERENCE}\"\n  else\n    echo \"Image digest not signed with private key because the key was undefined.\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000707"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Platform)",
            "id": "BD000707"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 94,
                  "endLine": 138,
                  "endColumn": 103,
                  "snippet": {
                    "text": "  if [ \"$_mediaType\" = \"application/vnd.oci.image.index.v1+json\" -o \"$_mediaType\" = \"application/vnd.docker.distribution.manifest.list.v2+json\" ]; then\n    for arch in \"$@\"\n    do\n      sha_list=$(echo \"${_image_manifest}\" | jq -r --arg arch \"$arch\" '.manifests[] | select (.platform.architecture == $arch) | .digest')\n      for sha in ${sha_list}\n      do\n        image_name=${_image%:*}\n",
                    "rendered": {
                      "text": "  if [ \"$_mediaType\" = \"application/vnd.oci.image.index.v1+json\" -o \"$_mediaType\" = \"application/vnd.docker.distribution.manifest.list.v2+json\" ]; then\n    for arch in \"$@\"\n    do\n      sha_list=$(echo \"${_image_manifest}\" | jq -r --arg arch \"$arch\" '.manifests[] | select (.platform.architecture == $arch) | .digest')\n      for sha in ${sha_list}\n      do\n        image_name=${_image%:*}\n",
                      "markdown": "`  if [ \"$_mediaType\" = \"application/vnd.oci.image.index.v1+json\" -o \"$_mediaType\" = \"application/vnd.docker.distribution.manifest.list.v2+json\" ]; then\n    for arch in \"$@\"\n    do\n      sha_list=$(echo \"${_image_manifest}\" | jq -r --arg arch \"$arch\" '.manifests[] | select (.platform.architecture == $arch) | .digest')\n      for sha in ${sha_list}\n      do\n        image_name=${_image%:*}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000707"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Platform)",
            "id": "BD000707"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 98,
                  "endLine": 107,
                  "endColumn": 107,
                  "snippet": {
                    "text": "    elif [ \"$_mediaType\" = \"application/vnd.oci.image.index.v1+json\" -o \"$_mediaType\" = \"application/vnd.docker.distribution.manifest.list.v2+json\" ]; then\n      for _arch in ${_arch_list[@]}\n      do\n        _sha_list=$(echo \"${_image_manifest}\" | jq -r --arg arch \"$_arch\" '.manifests[] | select (.platform.architecture == $arch) | .digest')\n        if [ -z \"${_sha_list}\" ]; then\n          _has_pre_built_images=${_false}\n        fi\n",
                    "rendered": {
                      "text": "    elif [ \"$_mediaType\" = \"application/vnd.oci.image.index.v1+json\" -o \"$_mediaType\" = \"application/vnd.docker.distribution.manifest.list.v2+json\" ]; then\n      for _arch in ${_arch_list[@]}\n      do\n        _sha_list=$(echo \"${_image_manifest}\" | jq -r --arg arch \"$_arch\" '.manifests[] | select (.platform.architecture == $arch) | .digest')\n        if [ -z \"${_sha_list}\" ]; then\n          _has_pre_built_images=${_false}\n        fi\n",
                      "markdown": "`    elif [ \"$_mediaType\" = \"application/vnd.oci.image.index.v1+json\" -o \"$_mediaType\" = \"application/vnd.docker.distribution.manifest.list.v2+json\" ]; then\n      for _arch in ${_arch_list[@]}\n      do\n        _sha_list=$(echo \"${_image_manifest}\" | jq -r --arg arch \"$_arch\" '.manifests[] | select (.platform.architecture == $arch) | .digest')\n        if [ -z \"${_sha_list}\" ]; then\n          _has_pre_built_images=${_false}\n        fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 711,
                  "startColumn": 3,
                  "endLine": 711,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    export UBI_BUILD_ARGS=\"${UBI_BUILD_ARGS} --build-arg UBI_MICRO_IMAGE=${UBI_MICRO_IMAGE}\"\n    echo \"UBI_BUILD_ARGS: ${UBI_BUILD_ARGS}\"\n  fi\n  # update ALPINE_IMAGE to full origin & digest\n  if [ -f artifacts/container_versions/alpine.txt ]; then\n    export ALPINE_DIGEST=$(cat artifacts/container_versions/alpine.txt) ;\n    export ALPINE_IMAGE=\"${DEPENDENCY_PROXY}${ALPINE_IMAGE}@${ALPINE_DIGEST}\" ;\n",
                    "rendered": {
                      "text": "    export UBI_BUILD_ARGS=\"${UBI_BUILD_ARGS} --build-arg UBI_MICRO_IMAGE=${UBI_MICRO_IMAGE}\"\n    echo \"UBI_BUILD_ARGS: ${UBI_BUILD_ARGS}\"\n  fi\n  # update ALPINE_IMAGE to full origin & digest\n  if [ -f artifacts/container_versions/alpine.txt ]; then\n    export ALPINE_DIGEST=$(cat artifacts/container_versions/alpine.txt) ;\n    export ALPINE_IMAGE=\"${DEPENDENCY_PROXY}${ALPINE_IMAGE}@${ALPINE_DIGEST}\" ;\n",
                      "markdown": "`    export UBI_BUILD_ARGS=\"${UBI_BUILD_ARGS} --build-arg UBI_MICRO_IMAGE=${UBI_MICRO_IMAGE}\"\n    echo \"UBI_BUILD_ARGS: ${UBI_BUILD_ARGS}\"\n  fi\n  # update ALPINE_IMAGE to full origin & digest\n  if [ -f artifacts/container_versions/alpine.txt ]; then\n    export ALPINE_DIGEST=$(cat artifacts/container_versions/alpine.txt) ;\n    export ALPINE_IMAGE=\"${DEPENDENCY_PROXY}${ALPINE_IMAGE}@${ALPINE_DIGEST}\" ;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 704,
                  "startColumn": 3,
                  "endLine": 704,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    export UBI_BUILD_ARGS=\"--build-arg UBI_IMAGE=${UBI_IMAGE}\"\n    echo \"UBI_BUILD_ARGS: ${UBI_BUILD_ARGS}\"\n  fi\n  # update UBI_MICRO_IMAGE to full origin & digest\n  if [ -f artifacts/container_versions/ubi-micro.txt ]; then\n    export UBI_MICRO_DIGEST=$(cat artifacts/container_versions/ubi-micro.txt) ;\n    export UBI_MICRO_IMAGE=\"${UBI_MICRO_IMAGE}@${UBI_MICRO_DIGEST}\" ;\n",
                    "rendered": {
                      "text": "    export UBI_BUILD_ARGS=\"--build-arg UBI_IMAGE=${UBI_IMAGE}\"\n    echo \"UBI_BUILD_ARGS: ${UBI_BUILD_ARGS}\"\n  fi\n  # update UBI_MICRO_IMAGE to full origin & digest\n  if [ -f artifacts/container_versions/ubi-micro.txt ]; then\n    export UBI_MICRO_DIGEST=$(cat artifacts/container_versions/ubi-micro.txt) ;\n    export UBI_MICRO_IMAGE=\"${UBI_MICRO_IMAGE}@${UBI_MICRO_DIGEST}\" ;\n",
                      "markdown": "`    export UBI_BUILD_ARGS=\"--build-arg UBI_IMAGE=${UBI_IMAGE}\"\n    echo \"UBI_BUILD_ARGS: ${UBI_BUILD_ARGS}\"\n  fi\n  # update UBI_MICRO_IMAGE to full origin & digest\n  if [ -f artifacts/container_versions/ubi-micro.txt ]; then\n    export UBI_MICRO_DIGEST=$(cat artifacts/container_versions/ubi-micro.txt) ;\n    export UBI_MICRO_IMAGE=\"${UBI_MICRO_IMAGE}@${UBI_MICRO_DIGEST}\" ;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 697,
                  "startColumn": 3,
                  "endLine": 697,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    export DEBIAN_BUILD_ARGS=\"--build-arg DEBIAN_IMAGE=${DEBIAN_IMAGE}\"\n    echo \"DEBIAN_BUILD_ARGS: ${DEBIAN_BUILD_ARGS}\"\n  fi\n  # update UBI_IMAGE to full origin & digest\n  if [ -f artifacts/container_versions/ubi-minimal.txt ]; then\n    export UBI_DIGEST=$(cat artifacts/container_versions/ubi-minimal.txt) ;\n    export UBI_IMAGE=\"${UBI_IMAGE}@${UBI_DIGEST}\" ;\n",
                    "rendered": {
                      "text": "    export DEBIAN_BUILD_ARGS=\"--build-arg DEBIAN_IMAGE=${DEBIAN_IMAGE}\"\n    echo \"DEBIAN_BUILD_ARGS: ${DEBIAN_BUILD_ARGS}\"\n  fi\n  # update UBI_IMAGE to full origin & digest\n  if [ -f artifacts/container_versions/ubi-minimal.txt ]; then\n    export UBI_DIGEST=$(cat artifacts/container_versions/ubi-minimal.txt) ;\n    export UBI_IMAGE=\"${UBI_IMAGE}@${UBI_DIGEST}\" ;\n",
                      "markdown": "`    export DEBIAN_BUILD_ARGS=\"--build-arg DEBIAN_IMAGE=${DEBIAN_IMAGE}\"\n    echo \"DEBIAN_BUILD_ARGS: ${DEBIAN_BUILD_ARGS}\"\n  fi\n  # update UBI_IMAGE to full origin & digest\n  if [ -f artifacts/container_versions/ubi-minimal.txt ]; then\n    export UBI_DIGEST=$(cat artifacts/container_versions/ubi-minimal.txt) ;\n    export UBI_IMAGE=\"${UBI_IMAGE}@${UBI_DIGEST}\" ;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 690,
                  "startColumn": 3,
                  "endLine": 690,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# If distributions have entries in `container_verions`, export those for use by CI\n# and/or scripting\npopulate_stable_image_vars() {\n  # update DEBIAN_IMAGE to full origin & digest\n  if [ -f artifacts/container_versions/debian.txt ]; then\n    export DEBIAN_DIGEST=$(cat artifacts/container_versions/debian.txt) ;\n    export DEBIAN_IMAGE=\"${DEPENDENCY_PROXY}${DEBIAN_IMAGE}@${DEBIAN_DIGEST}\" ;\n",
                    "rendered": {
                      "text": "# If distributions have entries in `container_verions`, export those for use by CI\n# and/or scripting\npopulate_stable_image_vars() {\n  # update DEBIAN_IMAGE to full origin & digest\n  if [ -f artifacts/container_versions/debian.txt ]; then\n    export DEBIAN_DIGEST=$(cat artifacts/container_versions/debian.txt) ;\n    export DEBIAN_IMAGE=\"${DEPENDENCY_PROXY}${DEBIAN_IMAGE}@${DEBIAN_DIGEST}\" ;\n",
                      "markdown": "`# If distributions have entries in `container_verions`, export those for use by CI\n# and/or scripting\npopulate_stable_image_vars() {\n  # update DEBIAN_IMAGE to full origin & digest\n  if [ -f artifacts/container_versions/debian.txt ]; then\n    export DEBIAN_DIGEST=$(cat artifacts/container_versions/debian.txt) ;\n    export DEBIAN_IMAGE=\"${DEPENDENCY_PROXY}${DEBIAN_IMAGE}@${DEBIAN_DIGEST}\" ;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 665,
                  "startColumn": 19,
                  "endLine": 665,
                  "endColumn": 23,
                  "snippet": {
                    "text": "}\n\n## record_stable_image\n# pull a base image at a tag, record the tag's digest into container_versions\nrecord_stable_image() {\n  image=$1\n  name=$(image_root_name ${image})\n",
                    "rendered": {
                      "text": "}\n\n## record_stable_image\n# pull a base image at a tag, record the tag's digest into container_versions\nrecord_stable_image() {\n  image=$1\n  name=$(image_root_name ${image})\n",
                      "markdown": "`}\n\n## record_stable_image\n# pull a base image at a tag, record the tag's digest into container_versions\nrecord_stable_image() {\n  image=$1\n  name=$(image_root_name ${image})\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 542,
                  "startColumn": 33,
                  "endLine": 542,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    fi\n  elif [ -z \"$1\" ]; then\n    echo \"No version specified. Using commit ref slug as the image tag.\"\n    # If no version was specified at all, we use the slug.\n    version_to_tag=${CI_COMMIT_REF_SLUG}${IMAGE_TAG_EXT}\n  else\n    # If a version was specified on any other scenarios - branch builds or\n",
                    "rendered": {
                      "text": "    fi\n  elif [ -z \"$1\" ]; then\n    echo \"No version specified. Using commit ref slug as the image tag.\"\n    # If no version was specified at all, we use the slug.\n    version_to_tag=${CI_COMMIT_REF_SLUG}${IMAGE_TAG_EXT}\n  else\n    # If a version was specified on any other scenarios - branch builds or\n",
                      "markdown": "`    fi\n  elif [ -z \"$1\" ]; then\n    echo \"No version specified. Using commit ref slug as the image tag.\"\n    # If no version was specified at all, we use the slug.\n    version_to_tag=${CI_COMMIT_REF_SLUG}${IMAGE_TAG_EXT}\n  else\n    # If a version was specified on any other scenarios - branch builds or\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 69,
                  "endLine": 285,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n      _has_multiarch \"${IMAGE_REFERENCE}-buildx\" || exit 1\n      _print_image_sizes \"${IMAGE_REFERENCE}-buildx\" ${_arch_list[@]}\n      #FIXME Hack that issupposed to force mediaType to proper value, at least during initial transition:\n      skopeo copy --all \"docker://${IMAGE_REFERENCE}-buildx\" \"docker://${IMAGE_REFERENCE}\"\n      # buildx's --metadata-file doesn't seem to produce proper detailed information, we'll have to fetch it post-factum:\n      skopeo inspect --raw docker://${IMAGE_REFERENCE} > ${CI_PROJECT_DIR}/artifacts/images/$(get_trimmed_job_name)${IMAGE_TAG_EXT}-metadata.json\n",
                    "rendered": {
                      "text": "\n      _has_multiarch \"${IMAGE_REFERENCE}-buildx\" || exit 1\n      _print_image_sizes \"${IMAGE_REFERENCE}-buildx\" ${_arch_list[@]}\n      #FIXME Hack that issupposed to force mediaType to proper value, at least during initial transition:\n      skopeo copy --all \"docker://${IMAGE_REFERENCE}-buildx\" \"docker://${IMAGE_REFERENCE}\"\n      # buildx's --metadata-file doesn't seem to produce proper detailed information, we'll have to fetch it post-factum:\n      skopeo inspect --raw docker://${IMAGE_REFERENCE} > ${CI_PROJECT_DIR}/artifacts/images/$(get_trimmed_job_name)${IMAGE_TAG_EXT}-metadata.json\n",
                      "markdown": "`\n      _has_multiarch \"${IMAGE_REFERENCE}-buildx\" || exit 1\n      _print_image_sizes \"${IMAGE_REFERENCE}-buildx\" ${_arch_list[@]}\n      #FIXME Hack that issupposed to force mediaType to proper value, at least during initial transition:\n      skopeo copy --all \"docker://${IMAGE_REFERENCE}-buildx\" \"docker://${IMAGE_REFERENCE}\"\n      # buildx's --metadata-file doesn't seem to produce proper detailed information, we'll have to fetch it post-factum:\n      skopeo inspect --raw docker://${IMAGE_REFERENCE} > ${CI_PROJECT_DIR}/artifacts/images/$(get_trimmed_job_name)${IMAGE_TAG_EXT}-metadata.json\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 631,
                  "startColumn": 24,
                  "endLine": 631,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      false_tag=\"artifacts/container_versions/${container%.tar.gz}_tag.txt\"\n      # Write the sha256sum of the tarball as tag. Use cut to drop the file\n      # name from sha256sum's output\n      sha256sum $asset | cut -d \" \" -f 1 > \"${false_tag}\"\n    done\n    shopt -u nullglob\n  fi\n",
                    "rendered": {
                      "text": "      false_tag=\"artifacts/container_versions/${container%.tar.gz}_tag.txt\"\n      # Write the sha256sum of the tarball as tag. Use cut to drop the file\n      # name from sha256sum's output\n      sha256sum $asset | cut -d \" \" -f 1 > \"${false_tag}\"\n    done\n    shopt -u nullglob\n  fi\n",
                      "markdown": "`      false_tag=\"artifacts/container_versions/${container%.tar.gz}_tag.txt\"\n      # Write the sha256sum of the tarball as tag. Use cut to drop the file\n      # name from sha256sum's output\n      sha256sum $asset | cut -d \" \" -f 1 > \"${false_tag}\"\n    done\n    shopt -u nullglob\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 629,
                  "startColumn": 54,
                  "endLine": 629,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    for asset in $assets; do\n      container=$(basename $asset)\n      false_tag=\"artifacts/container_versions/${container%.tar.gz}_tag.txt\"\n      # Write the sha256sum of the tarball as tag. Use cut to drop the file\n      # name from sha256sum's output\n      sha256sum $asset | cut -d \" \" -f 1 > \"${false_tag}\"\n    done\n",
                    "rendered": {
                      "text": "    for asset in $assets; do\n      container=$(basename $asset)\n      false_tag=\"artifacts/container_versions/${container%.tar.gz}_tag.txt\"\n      # Write the sha256sum of the tarball as tag. Use cut to drop the file\n      # name from sha256sum's output\n      sha256sum $asset | cut -d \" \" -f 1 > \"${false_tag}\"\n    done\n",
                      "markdown": "`    for asset in $assets; do\n      container=$(basename $asset)\n      false_tag=\"artifacts/container_versions/${container%.tar.gz}_tag.txt\"\n      # Write the sha256sum of the tarball as tag. Use cut to drop the file\n      # name from sha256sum's output\n      sha256sum $asset | cut -d \" \" -f 1 > \"${false_tag}\"\n    done\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 613,
                  "startColumn": 3,
                  "endLine": 613,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nimport_assets() {\n  if [ \"${UBI_PIPELINE}\" = 'true' ]; then\n    cp $@ $(get_trimmed_job_name)/\n    mock_tags_from_assets\n  fi\n}\n",
                    "rendered": {
                      "text": "\nimport_assets() {\n  if [ \"${UBI_PIPELINE}\" = 'true' ]; then\n    cp $@ $(get_trimmed_job_name)/\n    mock_tags_from_assets\n  fi\n}\n",
                      "markdown": "`\nimport_assets() {\n  if [ \"${UBI_PIPELINE}\" = 'true' ]; then\n    cp $@ $(get_trimmed_job_name)/\n    mock_tags_from_assets\n  fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 607,
                  "startColumn": 3,
                  "endLine": 607,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  if [ \"${UBI_PIPELINE}\" = 'true' -a -f \"artifacts/ubi/${CI_JOB_NAME#build:*}.tar.gz\" ]; then\n    echo \"use_assets: triggered on 'artifacts/ubi/${CI_JOB_NAME#build:*}.tar.gz'\"\n    target=\"${CI_JOB_NAME#build:*}\"\n    cp -R \"artifacts/ubi/${target}.tar.gz\" \"${target%*-ee}/${target}.tar.gz\"\n  fi\n}\n\n",
                    "rendered": {
                      "text": "  if [ \"${UBI_PIPELINE}\" = 'true' -a -f \"artifacts/ubi/${CI_JOB_NAME#build:*}.tar.gz\" ]; then\n    echo \"use_assets: triggered on 'artifacts/ubi/${CI_JOB_NAME#build:*}.tar.gz'\"\n    target=\"${CI_JOB_NAME#build:*}\"\n    cp -R \"artifacts/ubi/${target}.tar.gz\" \"${target%*-ee}/${target}.tar.gz\"\n  fi\n}\n\n",
                      "markdown": "`  if [ \"${UBI_PIPELINE}\" = 'true' -a -f \"artifacts/ubi/${CI_JOB_NAME#build:*}.tar.gz\" ]; then\n    echo \"use_assets: triggered on 'artifacts/ubi/${CI_JOB_NAME#build:*}.tar.gz'\"\n    target=\"${CI_JOB_NAME#build:*}\"\n    cp -R \"artifacts/ubi/${target}.tar.gz\" \"${target%*-ee}/${target}.tar.gz\"\n  fi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 590,
                  "startColumn": 77,
                  "endLine": 590,
                  "endColumn": 82,
                  "snippet": {
                    "text": "    echo \"==== Assets Summary ====\"\n    du -hd2 \"${ASSETS_DIR}/assets\"\n    tar -czf \"${ASSETS_DIR}.tar.gz\" -C \"${ASSETS_DIR}/assets\" .\n    echo $(sha256sum \"${ASSETS_DIR}.tar.gz\") $(du -h \"${ASSETS_DIR}.tar.gz\" | awk '{print $1}')\n    rm -rf \"${ASSETS_DIR}\"\n    echo \"==== Cleanup UBI artifacts\"\n    du -hd1 --all artifacts/ubi/*.tar.gz\n",
                    "rendered": {
                      "text": "    echo \"==== Assets Summary ====\"\n    du -hd2 \"${ASSETS_DIR}/assets\"\n    tar -czf \"${ASSETS_DIR}.tar.gz\" -C \"${ASSETS_DIR}/assets\" .\n    echo $(sha256sum \"${ASSETS_DIR}.tar.gz\") $(du -h \"${ASSETS_DIR}.tar.gz\" | awk '{print $1}')\n    rm -rf \"${ASSETS_DIR}\"\n    echo \"==== Cleanup UBI artifacts\"\n    du -hd1 --all artifacts/ubi/*.tar.gz\n",
                      "markdown": "`    echo \"==== Assets Summary ====\"\n    du -hd2 \"${ASSETS_DIR}/assets\"\n    tar -czf \"${ASSETS_DIR}.tar.gz\" -C \"${ASSETS_DIR}/assets\" .\n    echo $(sha256sum \"${ASSETS_DIR}.tar.gz\") $(du -h \"${ASSETS_DIR}.tar.gz\" | awk '{print $1}')\n    rm -rf \"${ASSETS_DIR}\"\n    echo \"==== Cleanup UBI artifacts\"\n    du -hd1 --all artifacts/ubi/*.tar.gz\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 589,
                  "startColumn": 3,
                  "endLine": 589,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    docker rm assets\n    echo \"==== Assets Summary ====\"\n    du -hd2 \"${ASSETS_DIR}/assets\"\n    tar -czf \"${ASSETS_DIR}.tar.gz\" -C \"${ASSETS_DIR}/assets\" .\n    echo $(sha256sum \"${ASSETS_DIR}.tar.gz\") $(du -h \"${ASSETS_DIR}.tar.gz\" | awk '{print $1}')\n    rm -rf \"${ASSETS_DIR}\"\n    echo \"==== Cleanup UBI artifacts\"\n",
                    "rendered": {
                      "text": "    docker rm assets\n    echo \"==== Assets Summary ====\"\n    du -hd2 \"${ASSETS_DIR}/assets\"\n    tar -czf \"${ASSETS_DIR}.tar.gz\" -C \"${ASSETS_DIR}/assets\" .\n    echo $(sha256sum \"${ASSETS_DIR}.tar.gz\") $(du -h \"${ASSETS_DIR}.tar.gz\" | awk '{print $1}')\n    rm -rf \"${ASSETS_DIR}\"\n    echo \"==== Cleanup UBI artifacts\"\n",
                      "markdown": "`    docker rm assets\n    echo \"==== Assets Summary ====\"\n    du -hd2 \"${ASSETS_DIR}/assets\"\n    tar -czf \"${ASSETS_DIR}.tar.gz\" -C \"${ASSETS_DIR}/assets\" .\n    echo $(sha256sum \"${ASSETS_DIR}.tar.gz\") $(du -h \"${ASSETS_DIR}.tar.gz\" | awk '{print $1}')\n    rm -rf \"${ASSETS_DIR}\"\n    echo \"==== Cleanup UBI artifacts\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 586,
                  "startColumn": 3,
                  "endLine": 586,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    mkdir -p \"${ASSETS_DIR}\"\n    docker create --name assets \"${CI_REGISTRY_IMAGE}/${CI_JOB_NAME#build:*}:${CONTAINER_VERSION}${IMAGE_TAG_EXT}\"\n    docker cp assets:/assets \"${ASSETS_DIR}\"\n    docker rm assets\n    echo \"==== Assets Summary ====\"\n    du -hd2 \"${ASSETS_DIR}/assets\"\n    tar -czf \"${ASSETS_DIR}.tar.gz\" -C \"${ASSETS_DIR}/assets\" .\n",
                    "rendered": {
                      "text": "    mkdir -p \"${ASSETS_DIR}\"\n    docker create --name assets \"${CI_REGISTRY_IMAGE}/${CI_JOB_NAME#build:*}:${CONTAINER_VERSION}${IMAGE_TAG_EXT}\"\n    docker cp assets:/assets \"${ASSETS_DIR}\"\n    docker rm assets\n    echo \"==== Assets Summary ====\"\n    du -hd2 \"${ASSETS_DIR}/assets\"\n    tar -czf \"${ASSETS_DIR}.tar.gz\" -C \"${ASSETS_DIR}/assets\" .\n",
                      "markdown": "`    mkdir -p \"${ASSETS_DIR}\"\n    docker create --name assets \"${CI_REGISTRY_IMAGE}/${CI_JOB_NAME#build:*}:${CONTAINER_VERSION}${IMAGE_TAG_EXT}\"\n    docker cp assets:/assets \"${ASSETS_DIR}\"\n    docker rm assets\n    echo \"==== Assets Summary ====\"\n    du -hd2 \"${ASSETS_DIR}/assets\"\n    tar -czf \"${ASSETS_DIR}.tar.gz\" -C \"${ASSETS_DIR}/assets\" .\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 585,
                  "startColumn": 3,
                  "endLine": 585,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    ASSETS_DIR=\"artifacts/ubi/${CI_JOB_NAME#build:*}\"\n    mkdir -p \"${ASSETS_DIR}\"\n    docker create --name assets \"${CI_REGISTRY_IMAGE}/${CI_JOB_NAME#build:*}:${CONTAINER_VERSION}${IMAGE_TAG_EXT}\"\n    docker cp assets:/assets \"${ASSETS_DIR}\"\n    docker rm assets\n    echo \"==== Assets Summary ====\"\n    du -hd2 \"${ASSETS_DIR}/assets\"\n",
                    "rendered": {
                      "text": "    ASSETS_DIR=\"artifacts/ubi/${CI_JOB_NAME#build:*}\"\n    mkdir -p \"${ASSETS_DIR}\"\n    docker create --name assets \"${CI_REGISTRY_IMAGE}/${CI_JOB_NAME#build:*}:${CONTAINER_VERSION}${IMAGE_TAG_EXT}\"\n    docker cp assets:/assets \"${ASSETS_DIR}\"\n    docker rm assets\n    echo \"==== Assets Summary ====\"\n    du -hd2 \"${ASSETS_DIR}/assets\"\n",
                      "markdown": "`    ASSETS_DIR=\"artifacts/ubi/${CI_JOB_NAME#build:*}\"\n    mkdir -p \"${ASSETS_DIR}\"\n    docker create --name assets \"${CI_REGISTRY_IMAGE}/${CI_JOB_NAME#build:*}:${CONTAINER_VERSION}${IMAGE_TAG_EXT}\"\n    docker cp assets:/assets \"${ASSETS_DIR}\"\n    docker rm assets\n    echo \"==== Assets Summary ====\"\n    du -hd2 \"${ASSETS_DIR}/assets\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 584,
                  "startColumn": 3,
                  "endLine": 584,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  if [ \"${UBI_BUILD_IMAGE}\" = 'true' ]; then\n    ASSETS_DIR=\"artifacts/ubi/${CI_JOB_NAME#build:*}\"\n    mkdir -p \"${ASSETS_DIR}\"\n    docker create --name assets \"${CI_REGISTRY_IMAGE}/${CI_JOB_NAME#build:*}:${CONTAINER_VERSION}${IMAGE_TAG_EXT}\"\n    docker cp assets:/assets \"${ASSETS_DIR}\"\n    docker rm assets\n    echo \"==== Assets Summary ====\"\n",
                    "rendered": {
                      "text": "  if [ \"${UBI_BUILD_IMAGE}\" = 'true' ]; then\n    ASSETS_DIR=\"artifacts/ubi/${CI_JOB_NAME#build:*}\"\n    mkdir -p \"${ASSETS_DIR}\"\n    docker create --name assets \"${CI_REGISTRY_IMAGE}/${CI_JOB_NAME#build:*}:${CONTAINER_VERSION}${IMAGE_TAG_EXT}\"\n    docker cp assets:/assets \"${ASSETS_DIR}\"\n    docker rm assets\n    echo \"==== Assets Summary ====\"\n",
                      "markdown": "`  if [ \"${UBI_BUILD_IMAGE}\" = 'true' ]; then\n    ASSETS_DIR=\"artifacts/ubi/${CI_JOB_NAME#build:*}\"\n    mkdir -p \"${ASSETS_DIR}\"\n    docker create --name assets \"${CI_REGISTRY_IMAGE}/${CI_JOB_NAME#build:*}:${CONTAINER_VERSION}${IMAGE_TAG_EXT}\"\n    docker cp assets:/assets \"${ASSETS_DIR}\"\n    docker rm assets\n    echo \"==== Assets Summary ====\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 577,
                  "startColumn": 1,
                  "endLine": 577,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n  mv ${CODE_PATH} gitlab-code\n}\n\ncopy_assets() {\n",
                    "rendered": {
                      "text": "  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n  mv ${CODE_PATH} gitlab-code\n}\n\ncopy_assets() {\n",
                      "markdown": "`  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n  mv ${CODE_PATH} gitlab-code\n}\n\ncopy_assets() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 576,
                  "startColumn": 56,
                  "endLine": 576,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_DEV_ARTIFACTS_PAT}\" -o gitlab.tar.gz \"$url\"\n  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n  mv ${CODE_PATH} gitlab-code\n}\n\n",
                    "rendered": {
                      "text": "  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_DEV_ARTIFACTS_PAT}\" -o gitlab.tar.gz \"$url\"\n  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n  mv ${CODE_PATH} gitlab-code\n}\n\n",
                      "markdown": "`  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_DEV_ARTIFACTS_PAT}\" -o gitlab.tar.gz \"$url\"\n  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n  mv ${CODE_PATH} gitlab-code\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 576,
                  "startColumn": 29,
                  "endLine": 576,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_DEV_ARTIFACTS_PAT}\" -o gitlab.tar.gz \"$url\"\n  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n  mv ${CODE_PATH} gitlab-code\n}\n\n",
                    "rendered": {
                      "text": "  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_DEV_ARTIFACTS_PAT}\" -o gitlab.tar.gz \"$url\"\n  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n  mv ${CODE_PATH} gitlab-code\n}\n\n",
                      "markdown": "`  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_DEV_ARTIFACTS_PAT}\" -o gitlab.tar.gz \"$url\"\n  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n  mv ${CODE_PATH} gitlab-code\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 574,
                  "startColumn": 1,
                  "endLine": 574,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n  echo \"Downloading source code from $url\"\n  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_DEV_ARTIFACTS_PAT}\" -o gitlab.tar.gz \"$url\"\n  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n  mv ${CODE_PATH} gitlab-code\n",
                    "rendered": {
                      "text": "\n  echo \"Downloading source code from $url\"\n  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_DEV_ARTIFACTS_PAT}\" -o gitlab.tar.gz \"$url\"\n  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n  mv ${CODE_PATH} gitlab-code\n",
                      "markdown": "`\n  echo \"Downloading source code from $url\"\n  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_DEV_ARTIFACTS_PAT}\" -o gitlab.tar.gz \"$url\"\n  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n  mv ${CODE_PATH} gitlab-code\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 573,
                  "startColumn": 1,
                  "endLine": 573,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  local url=\"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2F${GITLAB_PROJECT}/repository/archive.tar.gz?sha=${GITLAB_VERSION}\"\n\n  echo \"Downloading source code from $url\"\n  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_DEV_ARTIFACTS_PAT}\" -o gitlab.tar.gz \"$url\"\n  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n",
                    "rendered": {
                      "text": "  local url=\"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2F${GITLAB_PROJECT}/repository/archive.tar.gz?sha=${GITLAB_VERSION}\"\n\n  echo \"Downloading source code from $url\"\n  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_DEV_ARTIFACTS_PAT}\" -o gitlab.tar.gz \"$url\"\n  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n",
                      "markdown": "`  local url=\"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2F${GITLAB_PROJECT}/repository/archive.tar.gz?sha=${GITLAB_VERSION}\"\n\n  echo \"Downloading source code from $url\"\n  curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_DEV_ARTIFACTS_PAT}\" -o gitlab.tar.gz \"$url\"\n  tar -xzf gitlab.tar.gz\n  CODE_PATH=$(find -maxdepth 1 -name ${GITLAB_PROJECT}-* -print)\n  echo -n $(echo $CODE_PATH | awk -F '-' '{print $NF}' | cut -c -11) > ${CODE_PATH}/REVISION\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 523,
                  "startColumn": 77,
                  "endLine": 523,
                  "endColumn": 82,
                  "snippet": {
                    "text": "\n    version_to_tag=$edition\n  elif is_regular_tag; then\n    echo \"Pipeline running against stable tag and no version specified. Using git tag to as the image tag.\"\n    # If no version is specified, but on a non-auto-deploy tag pipeline, we use\n    # the trimmed tag.\n    trimmed_tag=$(trim_edition $CI_COMMIT_TAG)\n",
                    "rendered": {
                      "text": "\n    version_to_tag=$edition\n  elif is_regular_tag; then\n    echo \"Pipeline running against stable tag and no version specified. Using git tag to as the image tag.\"\n    # If no version is specified, but on a non-auto-deploy tag pipeline, we use\n    # the trimmed tag.\n    trimmed_tag=$(trim_edition $CI_COMMIT_TAG)\n",
                      "markdown": "`\n    version_to_tag=$edition\n  elif is_regular_tag; then\n    echo \"Pipeline running against stable tag and no version specified. Using git tag to as the image tag.\"\n    # If no version is specified, but on a non-auto-deploy tag pipeline, we use\n    # the trimmed tag.\n    trimmed_tag=$(trim_edition $CI_COMMIT_TAG)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 495,
                  "startColumn": 27,
                  "endLine": 495,
                  "endColumn": 32,
                  "snippet": {
                    "text": "}\n\nfunction trim_tag(){\n  echo $(trim_edition $1) | sed -e \"s/^v//\"\n}\n\nfunction is_final_image(){\n",
                    "rendered": {
                      "text": "}\n\nfunction trim_tag(){\n  echo $(trim_edition $1) | sed -e \"s/^v//\"\n}\n\nfunction is_final_image(){\n",
                      "markdown": "`}\n\nfunction trim_tag(){\n  echo $(trim_edition $1) | sed -e \"s/^v//\"\n}\n\nfunction is_final_image(){\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 491,
                  "startColumn": 11,
                  "endLine": 491,
                  "endColumn": 16,
                  "snippet": {
                    "text": "# arguments, we will have something like `v15.1.3-ee-ubi` or\n# `v15.1.3-ee-fips`. We need to strip off the `-ee` part from it.\nfunction trim_edition(){\n  echo $1 | sed -e \"s/-.e\\(-ubi\\|-fips\\)\\?$/\\1/\"\n}\n\nfunction trim_tag(){\n",
                    "rendered": {
                      "text": "# arguments, we will have something like `v15.1.3-ee-ubi` or\n# `v15.1.3-ee-fips`. We need to strip off the `-ee` part from it.\nfunction trim_edition(){\n  echo $1 | sed -e \"s/-.e\\(-ubi\\|-fips\\)\\?$/\\1/\"\n}\n\nfunction trim_tag(){\n",
                      "markdown": "`# arguments, we will have something like `v15.1.3-ee-ubi` or\n# `v15.1.3-ee-fips`. We need to strip off the `-ee` part from it.\nfunction trim_edition(){\n  echo $1 | sed -e \"s/-.e\\(-ubi\\|-fips\\)\\?$/\\1/\"\n}\n\nfunction trim_tag(){\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 464,
                  "startColumn": 26,
                  "endLine": 464,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  if [ ! \"${UBI_PIPELINE}\" == \"true\" ]; then\n    _multiarch_suffix=\"-${ARCH_LIST//,/_}\"\n  fi\n  git ls-tree HEAD -- $1 | awk '{ print $3\"'\"$_multiarch_suffix\"'\" }'\n}\n\nfunction get_target_version(){\n",
                    "rendered": {
                      "text": "  if [ ! \"${UBI_PIPELINE}\" == \"true\" ]; then\n    _multiarch_suffix=\"-${ARCH_LIST//,/_}\"\n  fi\n  git ls-tree HEAD -- $1 | awk '{ print $3\"'\"$_multiarch_suffix\"'\" }'\n}\n\nfunction get_target_version(){\n",
                      "markdown": "`  if [ ! \"${UBI_PIPELINE}\" == \"true\" ]; then\n    _multiarch_suffix=\"-${ARCH_LIST//,/_}\"\n  fi\n  git ls-tree HEAD -- $1 | awk '{ print $3\"'\"$_multiarch_suffix\"'\" }'\n}\n\nfunction get_target_version(){\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 464,
                  "startColumn": 13,
                  "endLine": 464,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  if [ ! \"${UBI_PIPELINE}\" == \"true\" ]; then\n    _multiarch_suffix=\"-${ARCH_LIST//,/_}\"\n  fi\n  git ls-tree HEAD -- $1 | awk '{ print $3\"'\"$_multiarch_suffix\"'\" }'\n}\n\nfunction get_target_version(){\n",
                    "rendered": {
                      "text": "  if [ ! \"${UBI_PIPELINE}\" == \"true\" ]; then\n    _multiarch_suffix=\"-${ARCH_LIST//,/_}\"\n  fi\n  git ls-tree HEAD -- $1 | awk '{ print $3\"'\"$_multiarch_suffix\"'\" }'\n}\n\nfunction get_target_version(){\n",
                      "markdown": "`  if [ ! \"${UBI_PIPELINE}\" == \"true\" ]; then\n    _multiarch_suffix=\"-${ARCH_LIST//,/_}\"\n  fi\n  git ls-tree HEAD -- $1 | awk '{ print $3\"'\"$_multiarch_suffix\"'\" }'\n}\n\nfunction get_target_version(){\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 464,
                  "startColumn": 1,
                  "endLine": 464,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  if [ ! \"${UBI_PIPELINE}\" == \"true\" ]; then\n    _multiarch_suffix=\"-${ARCH_LIST//,/_}\"\n  fi\n  git ls-tree HEAD -- $1 | awk '{ print $3\"'\"$_multiarch_suffix\"'\" }'\n}\n\nfunction get_target_version(){\n",
                    "rendered": {
                      "text": "  if [ ! \"${UBI_PIPELINE}\" == \"true\" ]; then\n    _multiarch_suffix=\"-${ARCH_LIST//,/_}\"\n  fi\n  git ls-tree HEAD -- $1 | awk '{ print $3\"'\"$_multiarch_suffix\"'\" }'\n}\n\nfunction get_target_version(){\n",
                      "markdown": "`  if [ ! \"${UBI_PIPELINE}\" == \"true\" ]; then\n    _multiarch_suffix=\"-${ARCH_LIST//,/_}\"\n  fi\n  git ls-tree HEAD -- $1 | awk '{ print $3\"'\"$_multiarch_suffix\"'\" }'\n}\n\nfunction get_target_version(){\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 415,
                  "startColumn": 37,
                  "endLine": 415,
                  "endColumn": 42,
                  "snippet": {
                    "text": "  echo \"Verifying image digest: ${IMAGE_REFERENCE}\"\n\n  # From the image reference, extract the registry and project\n  registry=$(echo \"${target_image}\" | cut -d '/' -f1)\n  image_reference=\"${target_image#${registry}/}\"\n  project=${image_reference%/*}\n\n",
                    "rendered": {
                      "text": "  echo \"Verifying image digest: ${IMAGE_REFERENCE}\"\n\n  # From the image reference, extract the registry and project\n  registry=$(echo \"${target_image}\" | cut -d '/' -f1)\n  image_reference=\"${target_image#${registry}/}\"\n  project=${image_reference%/*}\n\n",
                      "markdown": "`  echo \"Verifying image digest: ${IMAGE_REFERENCE}\"\n\n  # From the image reference, extract the registry and project\n  registry=$(echo \"${target_image}\" | cut -d '/' -f1)\n  image_reference=\"${target_image#${registry}/}\"\n  project=${image_reference%/*}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 9,
                  "endLine": 311,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      set +x\n      # Output \"Final Image Size: %d\" (gitlab-org/charts/gitlab#1267)\n      docker inspect \"$IMAGE_REFERENCE\" \\\n        | awk '/\"Size\": ([0-9]+)[,]?/{ printf \"Final Image Size: %d\\n\", $2 }'\n\n    fi\n\n",
                    "rendered": {
                      "text": "      set +x\n      # Output \"Final Image Size: %d\" (gitlab-org/charts/gitlab#1267)\n      docker inspect \"$IMAGE_REFERENCE\" \\\n        | awk '/\"Size\": ([0-9]+)[,]?/{ printf \"Final Image Size: %d\\n\", $2 }'\n\n    fi\n\n",
                      "markdown": "`      set +x\n      # Output \"Final Image Size: %d\" (gitlab-org/charts/gitlab#1267)\n      docker inspect \"$IMAGE_REFERENCE\" \\\n        | awk '/\"Size\": ([0-9]+)[,]?/{ printf \"Final Image Size: %d\\n\", $2 }'\n\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 5,
                  "endLine": 310,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        \"${openshift_labels[@]}\"\n      set +x\n      # Output \"Final Image Size: %d\" (gitlab-org/charts/gitlab#1267)\n      docker inspect \"$IMAGE_REFERENCE\" \\\n        | awk '/\"Size\": ([0-9]+)[,]?/{ printf \"Final Image Size: %d\\n\", $2 }'\n\n    fi\n",
                    "rendered": {
                      "text": "        \"${openshift_labels[@]}\"\n      set +x\n      # Output \"Final Image Size: %d\" (gitlab-org/charts/gitlab#1267)\n      docker inspect \"$IMAGE_REFERENCE\" \\\n        | awk '/\"Size\": ([0-9]+)[,]?/{ printf \"Final Image Size: %d\\n\", $2 }'\n\n    fi\n",
                      "markdown": "`        \"${openshift_labels[@]}\"\n      set +x\n      # Output \"Final Image Size: %d\" (gitlab-org/charts/gitlab#1267)\n      docker inspect \"$IMAGE_REFERENCE\" \\\n        | awk '/\"Size\": ([0-9]+)[,]?/{ printf \"Final Image Size: %d\\n\", $2 }'\n\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 5,
                  "endLine": 300,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      echo \"UBI build image. Only building the image, and not pushing to the registry.\"\n      echo \"Using computed CONTAINER_VERSION (${CONTAINER_VERSION}) as the image tag.\"\n      set -x\n      docker build \\\n        --build-arg CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE \\\n        -t \"${IMAGE_REFERENCE}\" \"${DOCKER_ARGS[@]}\" \\\n        -f Dockerfile${DOCKERFILE_EXT} \\\n",
                    "rendered": {
                      "text": "      echo \"UBI build image. Only building the image, and not pushing to the registry.\"\n      echo \"Using computed CONTAINER_VERSION (${CONTAINER_VERSION}) as the image tag.\"\n      set -x\n      docker build \\\n        --build-arg CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE \\\n        -t \"${IMAGE_REFERENCE}\" \"${DOCKER_ARGS[@]}\" \\\n        -f Dockerfile${DOCKERFILE_EXT} \\\n",
                      "markdown": "`      echo \"UBI build image. Only building the image, and not pushing to the registry.\"\n      echo \"Using computed CONTAINER_VERSION (${CONTAINER_VERSION}) as the image tag.\"\n      set -x\n      docker build \\\n        --build-arg CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE \\\n        -t \"${IMAGE_REFERENCE}\" \"${DOCKER_ARGS[@]}\" \\\n        -f Dockerfile${DOCKERFILE_EXT} \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 5,
                  "endLine": 267,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      if force_zstd_build || is_zstd_build; then\n        BUILD_OUTPUT_ARGS+=(--output type=image,name=$CI_REGISTRY_IMAGE:${IMAGE_REFERENCE}-buildx,oci-mediatypes=true,compression=zstd,compression-level=${ZSTD_COMPRESSION_LEVEL},force-compression=true)\n      fi\n      docker buildx build \\\n        --build-context hardening=../hardening \\\n        --platform \"${_platforms}\" \\\n        --provenance=false \\\n",
                    "rendered": {
                      "text": "      if force_zstd_build || is_zstd_build; then\n        BUILD_OUTPUT_ARGS+=(--output type=image,name=$CI_REGISTRY_IMAGE:${IMAGE_REFERENCE}-buildx,oci-mediatypes=true,compression=zstd,compression-level=${ZSTD_COMPRESSION_LEVEL},force-compression=true)\n      fi\n      docker buildx build \\\n        --build-context hardening=../hardening \\\n        --platform \"${_platforms}\" \\\n        --provenance=false \\\n",
                      "markdown": "`      if force_zstd_build || is_zstd_build; then\n        BUILD_OUTPUT_ARGS+=(--output type=image,name=$CI_REGISTRY_IMAGE:${IMAGE_REFERENCE}-buildx,oci-mediatypes=true,compression=zstd,compression-level=${ZSTD_COMPRESSION_LEVEL},force-compression=true)\n      fi\n      docker buildx build \\\n        --build-context hardening=../hardening \\\n        --platform \"${_platforms}\" \\\n        --provenance=false \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 3,
                  "endLine": 247,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    # Build images\n    # Push new image unless it is a UBI build image\n    cp Dockerfile${DOCKERFILE_EXT} ${_base_dir}/artifacts\n    if [ ! \"${UBI_BUILD_IMAGE}\" = 'true' ]; then\n      ## Non-UBI image\n      echo \"Not a UBI build image. Building and pushing the image to the registry.\"\n",
                    "rendered": {
                      "text": "\n    # Build images\n    # Push new image unless it is a UBI build image\n    cp Dockerfile${DOCKERFILE_EXT} ${_base_dir}/artifacts\n    if [ ! \"${UBI_BUILD_IMAGE}\" = 'true' ]; then\n      ## Non-UBI image\n      echo \"Not a UBI build image. Building and pushing the image to the registry.\"\n",
                      "markdown": "`\n    # Build images\n    # Push new image unless it is a UBI build image\n    cp Dockerfile${DOCKERFILE_EXT} ${_base_dir}/artifacts\n    if [ ! \"${UBI_BUILD_IMAGE}\" = 'true' ]; then\n      ## Non-UBI image\n      echo \"Not a UBI build image. Building and pushing the image to the registry.\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 20,
                  "endLine": 201,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        DOCKER_ARGS+=(--no-cache)\n      fi\n    else\n      echo \"Skipping docker caching because of DISABLE_DOCKER_BUILD_CACHE\"\n      DOCKER_ARGS+=(--no-cache)\n    fi\n\n",
                    "rendered": {
                      "text": "        DOCKER_ARGS+=(--no-cache)\n      fi\n    else\n      echo \"Skipping docker caching because of DISABLE_DOCKER_BUILD_CACHE\"\n      DOCKER_ARGS+=(--no-cache)\n    fi\n\n",
                      "markdown": "`        DOCKER_ARGS+=(--no-cache)\n      fi\n    else\n      echo \"Skipping docker caching because of DISABLE_DOCKER_BUILD_CACHE\"\n      DOCKER_ARGS+=(--no-cache)\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 22,
                  "endLine": 197,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        DOCKER_ARGS+=(--cache-from type=registry,ref=$CACHE_REGISTRY:$CACHE_TAG)\n        DOCKER_ARGS+=(--cache-from type=registry,ref=$CACHE_REGISTRY:$FALLBACK_CACHE_TAG)\n      else\n        echo \"Skipping docker caching because of ubi build, stable branch or tag\"\n        DOCKER_ARGS+=(--no-cache)\n      fi\n    else\n",
                    "rendered": {
                      "text": "        DOCKER_ARGS+=(--cache-from type=registry,ref=$CACHE_REGISTRY:$CACHE_TAG)\n        DOCKER_ARGS+=(--cache-from type=registry,ref=$CACHE_REGISTRY:$FALLBACK_CACHE_TAG)\n      else\n        echo \"Skipping docker caching because of ubi build, stable branch or tag\"\n        DOCKER_ARGS+=(--no-cache)\n      fi\n    else\n",
                      "markdown": "`        DOCKER_ARGS+=(--cache-from type=registry,ref=$CACHE_REGISTRY:$CACHE_TAG)\n        DOCKER_ARGS+=(--cache-from type=registry,ref=$CACHE_REGISTRY:$FALLBACK_CACHE_TAG)\n      else\n        echo \"Skipping docker caching because of ubi build, stable branch or tag\"\n        DOCKER_ARGS+=(--no-cache)\n      fi\n    else\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/build.sh"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 3,
                  "endLine": 182,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    DOCKER_ARGS=( \"$@\" )\n\n    # Bring in shared scripts\n    cp -r ../shared/ shared/\n\n    # Skip the build cache if $DISABLE_DOCKER_BUILD_CACHE is set to any value\n    if [ -z ${DISABLE_DOCKER_BUILD_CACHE+x} ]; then\n",
                    "rendered": {
                      "text": "    DOCKER_ARGS=( \"$@\" )\n\n    # Bring in shared scripts\n    cp -r ../shared/ shared/\n\n    # Skip the build cache if $DISABLE_DOCKER_BUILD_CACHE is set to any value\n    if [ -z ${DISABLE_DOCKER_BUILD_CACHE+x} ]; then\n",
                      "markdown": "`    DOCKER_ARGS=( \"$@\" )\n\n    # Bring in shared scripts\n    cp -r ../shared/ shared/\n\n    # Skip the build cache if $DISABLE_DOCKER_BUILD_CACHE is set to any value\n    if [ -z ${DISABLE_DOCKER_BUILD_CACHE+x} ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/db-migrate"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 44,
                  "endLine": 8,
                  "endColumn": 52,
                  "snippet": {
                    "text": "ROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\nfi\n\nSHARED_RUNNERS_REGISTRATION_TOKEN_FILE=\"${SHARED_RUNNERS_REGISTRATION_TOKEN_FILE:-/srv/gitlab/config/gitlab_shared_runners_registration_token}\"\n",
                    "rendered": {
                      "text": "ROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\nfi\n\nSHARED_RUNNERS_REGISTRATION_TOKEN_FILE=\"${SHARED_RUNNERS_REGISTRATION_TOKEN_FILE:-/srv/gitlab/config/gitlab_shared_runners_registration_token}\"\n",
                      "markdown": "`ROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\nfi\n\nSHARED_RUNNERS_REGISTRATION_TOKEN_FILE=\"${SHARED_RUNNERS_REGISTRATION_TOKEN_FILE:-/srv/gitlab/config/gitlab_shared_runners_registration_token}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/db-migrate"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 21,
                  "endLine": 8,
                  "endColumn": 29,
                  "snippet": {
                    "text": "ROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\nfi\n\nSHARED_RUNNERS_REGISTRATION_TOKEN_FILE=\"${SHARED_RUNNERS_REGISTRATION_TOKEN_FILE:-/srv/gitlab/config/gitlab_shared_runners_registration_token}\"\n",
                    "rendered": {
                      "text": "ROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\nfi\n\nSHARED_RUNNERS_REGISTRATION_TOKEN_FILE=\"${SHARED_RUNNERS_REGISTRATION_TOKEN_FILE:-/srv/gitlab/config/gitlab_shared_runners_registration_token}\"\n",
                      "markdown": "`ROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\nfi\n\nSHARED_RUNNERS_REGISTRATION_TOKEN_FILE=\"${SHARED_RUNNERS_REGISTRATION_TOKEN_FILE:-/srv/gitlab/config/gitlab_shared_runners_registration_token}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/db-migrate"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 16,
                  "endLine": 7,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\nROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\nfi\n\n",
                    "rendered": {
                      "text": "\nROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\nfi\n\n",
                      "markdown": "`\nROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/db-migrate"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 74,
                  "endLine": 5,
                  "endColumn": 82,
                  "snippet": {
                    "text": "\nset -e\n\nROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\n",
                    "rendered": {
                      "text": "\nset -e\n\nROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\n",
                      "markdown": "`\nset -e\n\nROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/db-migrate"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 27,
                  "endLine": 5,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\nset -e\n\nROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\n",
                    "rendered": {
                      "text": "\nset -e\n\nROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\n",
                      "markdown": "`\nset -e\n\nROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/scripts/db-migrate"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 5,
                  "endLine": 5,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nset -e\n\nROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\n",
                    "rendered": {
                      "text": "\nset -e\n\nROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\n",
                      "markdown": "`\nset -e\n\nROOT_PASSWORD_FILE=\"${ROOT_PASSWORD_FILE:-/srv/gitlab/config/initial_root_password}\"\n\nif [ -f \"${ROOT_PASSWORD_FILE}\" ]; then\n  export GITLAB_ROOT_PASSWORD=$(cat \"${ROOT_PASSWORD_FILE}\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 6,
                  "endLine": 88,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && cp /usr/local/bin/gitlab-elasticsearch-indexer /assets/usr/bin/ \\\n    && install /usr/local/postgresql/bin/* /assets/usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n        /srv/gitlab \\\n        /usr/local/bin/gm \\\n        /usr/local/share/doc/GraphicsMagick/Copyright.txt \\\n",
                    "rendered": {
                      "text": "    && cp /usr/local/bin/gitlab-elasticsearch-indexer /assets/usr/bin/ \\\n    && install /usr/local/postgresql/bin/* /assets/usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n        /srv/gitlab \\\n        /usr/local/bin/gm \\\n        /usr/local/share/doc/GraphicsMagick/Copyright.txt \\\n",
                      "markdown": "`    && cp /usr/local/bin/gitlab-elasticsearch-indexer /assets/usr/bin/ \\\n    && install /usr/local/postgresql/bin/* /assets/usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n        /srv/gitlab \\\n        /usr/local/bin/gm \\\n        /usr/local/share/doc/GraphicsMagick/Copyright.txt \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 6,
                  "endLine": 87,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && mkdir -p /assets/usr/{bin,lib} /assets${LIBDIR} \\\n    && cp /usr/local/bin/gitlab-elasticsearch-indexer /assets/usr/bin/ \\\n    && install /usr/local/postgresql/bin/* /assets/usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n        /srv/gitlab \\\n        /usr/local/bin/gm \\\n",
                    "rendered": {
                      "text": "    && mkdir -p /assets/usr/{bin,lib} /assets${LIBDIR} \\\n    && cp /usr/local/bin/gitlab-elasticsearch-indexer /assets/usr/bin/ \\\n    && install /usr/local/postgresql/bin/* /assets/usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n        /srv/gitlab \\\n        /usr/local/bin/gm \\\n",
                      "markdown": "`    && mkdir -p /assets/usr/{bin,lib} /assets${LIBDIR} \\\n    && cp /usr/local/bin/gitlab-elasticsearch-indexer /assets/usr/bin/ \\\n    && install /usr/local/postgresql/bin/* /assets/usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n        /srv/gitlab \\\n        /usr/local/bin/gm \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 6,
                  "endLine": 85,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nRUN find /srv/gitlab/public/assets/webpack -name '*.map' -type f -print -delete \\\n    && mkdir -p /assets/usr/{bin,lib} /assets${LIBDIR} \\\n    && cp /usr/local/bin/gitlab-elasticsearch-indexer /assets/usr/bin/ \\\n    && install /usr/local/postgresql/bin/* /assets/usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n",
                    "rendered": {
                      "text": "\nRUN find /srv/gitlab/public/assets/webpack -name '*.map' -type f -print -delete \\\n    && mkdir -p /assets/usr/{bin,lib} /assets${LIBDIR} \\\n    && cp /usr/local/bin/gitlab-elasticsearch-indexer /assets/usr/bin/ \\\n    && install /usr/local/postgresql/bin/* /assets/usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n",
                      "markdown": "`\nRUN find /srv/gitlab/public/assets/webpack -name '*.map' -type f -print -delete \\\n    && mkdir -p /assets/usr/{bin,lib} /assets${LIBDIR} \\\n    && cp /usr/local/bin/gitlab-elasticsearch-indexer /assets/usr/bin/ \\\n    && install /usr/local/postgresql/bin/* /assets/usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 3,
                  "endLine": 83,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nCOPY --from=assets assets /srv/gitlab/public/assets/\n\nRUN find /srv/gitlab/public/assets/webpack -name '*.map' -type f -print -delete \\\n    && mkdir -p /assets/usr/{bin,lib} /assets${LIBDIR} \\\n    && cp /usr/local/bin/gitlab-elasticsearch-indexer /assets/usr/bin/ \\\n    && install /usr/local/postgresql/bin/* /assets/usr/bin/ \\\n",
                    "rendered": {
                      "text": "\nCOPY --from=assets assets /srv/gitlab/public/assets/\n\nRUN find /srv/gitlab/public/assets/webpack -name '*.map' -type f -print -delete \\\n    && mkdir -p /assets/usr/{bin,lib} /assets${LIBDIR} \\\n    && cp /usr/local/bin/gitlab-elasticsearch-indexer /assets/usr/bin/ \\\n    && install /usr/local/postgresql/bin/* /assets/usr/bin/ \\\n",
                      "markdown": "`\nCOPY --from=assets assets /srv/gitlab/public/assets/\n\nRUN find /srv/gitlab/public/assets/webpack -name '*.map' -type f -print -delete \\\n    && mkdir -p /assets/usr/{bin,lib} /assets${LIBDIR} \\\n    && cp /usr/local/bin/gitlab-elasticsearch-indexer /assets/usr/bin/ \\\n    && install /usr/local/postgresql/bin/* /assets/usr/bin/ \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 32,
                  "endLine": 79,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    && rm -rf qa/ rubocop/ tooling/ .gitlab/ .github/ docker/ \\\n    && rm -rf changelogs/ danger/ Dangerfile \\\n    && RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /srv/gitlab/vendor/bundle/ruby \\\n    && mkdir /assets/licenses && cp LICENSE /assets/licenses/GitLab.txt\n\nCOPY --from=assets assets /srv/gitlab/public/assets/\n\n",
                    "rendered": {
                      "text": "    && rm -rf qa/ rubocop/ tooling/ .gitlab/ .github/ docker/ \\\n    && rm -rf changelogs/ danger/ Dangerfile \\\n    && RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /srv/gitlab/vendor/bundle/ruby \\\n    && mkdir /assets/licenses && cp LICENSE /assets/licenses/GitLab.txt\n\nCOPY --from=assets assets /srv/gitlab/public/assets/\n\n",
                      "markdown": "`    && rm -rf qa/ rubocop/ tooling/ .gitlab/ .github/ docker/ \\\n    && rm -rf changelogs/ danger/ Dangerfile \\\n    && RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /srv/gitlab/vendor/bundle/ruby \\\n    && mkdir /assets/licenses && cp LICENSE /assets/licenses/GitLab.txt\n\nCOPY --from=assets assets /srv/gitlab/public/assets/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 58,
                  "endLine": 71,
                  "endColumn": 65,
                  "snippet": {
                    "text": "    && bundle config set --local version system \\\n    && bundle config set --local path /srv/gitlab/vendor/bundle \\\n    && bundle config set --local deployment 'true' \\\n    && bundle config set --local without 'development test mysql aws' \\\n    && bundle install --jobs $(nproc) --retry 5 \\\n    && FIPS_MODE=${FIPS_MODE} /build-scripts/reinstall-grpc-if-fips /build-scripts/patches \\\n    && yarn install --production --pure-lockfile \\\n",
                    "rendered": {
                      "text": "    && bundle config set --local version system \\\n    && bundle config set --local path /srv/gitlab/vendor/bundle \\\n    && bundle config set --local deployment 'true' \\\n    && bundle config set --local without 'development test mysql aws' \\\n    && bundle install --jobs $(nproc) --retry 5 \\\n    && FIPS_MODE=${FIPS_MODE} /build-scripts/reinstall-grpc-if-fips /build-scripts/patches \\\n    && yarn install --production --pure-lockfile \\\n",
                      "markdown": "`    && bundle config set --local version system \\\n    && bundle config set --local path /srv/gitlab/vendor/bundle \\\n    && bundle config set --local deployment 'true' \\\n    && bundle config set --local without 'development test mysql aws' \\\n    && bundle install --jobs $(nproc) --retry 5 \\\n    && FIPS_MODE=${FIPS_MODE} /build-scripts/reinstall-grpc-if-fips /build-scripts/patches \\\n    && yarn install --production --pure-lockfile \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 6,
                  "endLine": 67,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && cd /srv/gitlab \\\n    && printf 'gitlab-cloud-native-image' > INSTALLATION_TYPE \\\n    && for cfg in config/{gitlab,resque,secrets}.yml; do cp ${cfg}.example ${cfg} ; done \\\n    && cp config/database.yml.postgresql config/database.yml \\\n    && bundle config set --local version system \\\n    && bundle config set --local path /srv/gitlab/vendor/bundle \\\n    && bundle config set --local deployment 'true' \\\n",
                    "rendered": {
                      "text": "    && cd /srv/gitlab \\\n    && printf 'gitlab-cloud-native-image' > INSTALLATION_TYPE \\\n    && for cfg in config/{gitlab,resque,secrets}.yml; do cp ${cfg}.example ${cfg} ; done \\\n    && cp config/database.yml.postgresql config/database.yml \\\n    && bundle config set --local version system \\\n    && bundle config set --local path /srv/gitlab/vendor/bundle \\\n    && bundle config set --local deployment 'true' \\\n",
                      "markdown": "`    && cd /srv/gitlab \\\n    && printf 'gitlab-cloud-native-image' > INSTALLATION_TYPE \\\n    && for cfg in config/{gitlab,resque,secrets}.yml; do cp ${cfg}.example ${cfg} ; done \\\n    && cp config/database.yml.postgresql config/database.yml \\\n    && bundle config set --local version system \\\n    && bundle config set --local path /srv/gitlab/vendor/bundle \\\n    && bundle config set --local deployment 'true' \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 56,
                  "endLine": 66,
                  "endColumn": 60,
                  "snippet": {
                    "text": "    && cp REVISION /srv/gitlab \\\n    && cd /srv/gitlab \\\n    && printf 'gitlab-cloud-native-image' > INSTALLATION_TYPE \\\n    && for cfg in config/{gitlab,resque,secrets}.yml; do cp ${cfg}.example ${cfg} ; done \\\n    && cp config/database.yml.postgresql config/database.yml \\\n    && bundle config set --local version system \\\n    && bundle config set --local path /srv/gitlab/vendor/bundle \\\n",
                    "rendered": {
                      "text": "    && cp REVISION /srv/gitlab \\\n    && cd /srv/gitlab \\\n    && printf 'gitlab-cloud-native-image' > INSTALLATION_TYPE \\\n    && for cfg in config/{gitlab,resque,secrets}.yml; do cp ${cfg}.example ${cfg} ; done \\\n    && cp config/database.yml.postgresql config/database.yml \\\n    && bundle config set --local version system \\\n    && bundle config set --local path /srv/gitlab/vendor/bundle \\\n",
                      "markdown": "`    && cp REVISION /srv/gitlab \\\n    && cd /srv/gitlab \\\n    && printf 'gitlab-cloud-native-image' > INSTALLATION_TYPE \\\n    && for cfg in config/{gitlab,resque,secrets}.yml; do cp ${cfg}.example ${cfg} ; done \\\n    && cp config/database.yml.postgresql config/database.yml \\\n    && bundle config set --local version system \\\n    && bundle config set --local path /srv/gitlab/vendor/bundle \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 6,
                  "endLine": 63,
                  "endColumn": 10,
                  "snippet": {
                    "text": "        \"${VERSION}\" \\\n    && mkdir -p /srv \\\n    && mv ${PROJECT}-${VERSION} /srv/gitlab \\\n    && cp REVISION /srv/gitlab \\\n    && cd /srv/gitlab \\\n    && printf 'gitlab-cloud-native-image' > INSTALLATION_TYPE \\\n    && for cfg in config/{gitlab,resque,secrets}.yml; do cp ${cfg}.example ${cfg} ; done \\\n",
                    "rendered": {
                      "text": "        \"${VERSION}\" \\\n    && mkdir -p /srv \\\n    && mv ${PROJECT}-${VERSION} /srv/gitlab \\\n    && cp REVISION /srv/gitlab \\\n    && cd /srv/gitlab \\\n    && printf 'gitlab-cloud-native-image' > INSTALLATION_TYPE \\\n    && for cfg in config/{gitlab,resque,secrets}.yml; do cp ${cfg}.example ${cfg} ; done \\\n",
                      "markdown": "`        \"${VERSION}\" \\\n    && mkdir -p /srv \\\n    && mv ${PROJECT}-${VERSION} /srv/gitlab \\\n    && cp REVISION /srv/gitlab \\\n    && cd /srv/gitlab \\\n    && printf 'gitlab-cloud-native-image' > INSTALLATION_TYPE \\\n    && for cfg in config/{gitlab,resque,secrets}.yml; do cp ${cfg}.example ${cfg} ; done \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 6,
                  "endLine": 62,
                  "endColumn": 10,
                  "snippet": {
                    "text": "        \"${PROJECT}\" \\\n        \"${VERSION}\" \\\n    && mkdir -p /srv \\\n    && mv ${PROJECT}-${VERSION} /srv/gitlab \\\n    && cp REVISION /srv/gitlab \\\n    && cd /srv/gitlab \\\n    && printf 'gitlab-cloud-native-image' > INSTALLATION_TYPE \\\n",
                    "rendered": {
                      "text": "        \"${PROJECT}\" \\\n        \"${VERSION}\" \\\n    && mkdir -p /srv \\\n    && mv ${PROJECT}-${VERSION} /srv/gitlab \\\n    && cp REVISION /srv/gitlab \\\n    && cd /srv/gitlab \\\n    && printf 'gitlab-cloud-native-image' > INSTALLATION_TYPE \\\n",
                      "markdown": "`        \"${PROJECT}\" \\\n        \"${VERSION}\" \\\n    && mkdir -p /srv \\\n    && mv ${PROJECT}-${VERSION} /srv/gitlab \\\n    && cp REVISION /srv/gitlab \\\n    && cd /srv/gitlab \\\n    && printf 'gitlab-cloud-native-image' > INSTALLATION_TYPE \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 16,
                  "endLine": 54,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV USE_DB=false\nENV SKIP_STORAGE_VALIDATION=true\n\nRUN /gitlab-fetch \\\n        \"${API_URL}\" \\\n",
                    "rendered": {
                      "text": "\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV USE_DB=false\nENV SKIP_STORAGE_VALIDATION=true\n\nRUN /gitlab-fetch \\\n        \"${API_URL}\" \\\n",
                      "markdown": "`\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV USE_DB=false\nENV SKIP_STORAGE_VALIDATION=true\n\nRUN /gitlab-fetch \\\n        \"${API_URL}\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 23,
                  "endLine": 53,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV USE_DB=false\nENV SKIP_STORAGE_VALIDATION=true\n\nRUN /gitlab-fetch \\\n",
                    "rendered": {
                      "text": "    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV USE_DB=false\nENV SKIP_STORAGE_VALIDATION=true\n\nRUN /gitlab-fetch \\\n",
                      "markdown": "`    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV USE_DB=false\nENV SKIP_STORAGE_VALIDATION=true\n\nRUN /gitlab-fetch \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 24,
                  "endLine": 52,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV USE_DB=false\nENV SKIP_STORAGE_VALIDATION=true\n\n",
                    "rendered": {
                      "text": "    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV USE_DB=false\nENV SKIP_STORAGE_VALIDATION=true\n\n",
                      "markdown": "`    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV USE_DB=false\nENV SKIP_STORAGE_VALIDATION=true\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 51,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    && cp -R /usr/local/postgresql/include/. /usr/include/ \\\n    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV USE_DB=false\nENV SKIP_STORAGE_VALIDATION=true\n",
                    "rendered": {
                      "text": "    && cp -R /usr/local/postgresql/include/. /usr/include/ \\\n    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV USE_DB=false\nENV SKIP_STORAGE_VALIDATION=true\n",
                      "markdown": "`    && cp -R /usr/local/postgresql/include/. /usr/include/ \\\n    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV USE_DB=false\nENV SKIP_STORAGE_VALIDATION=true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 6,
                  "endLine": 48,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && cp -R /usr/local/postgresql/include/. /usr/include/ \\\n    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\nENV RAILS_ENV=production\n",
                    "rendered": {
                      "text": "    && install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && cp -R /usr/local/postgresql/include/. /usr/include/ \\\n    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\nENV RAILS_ENV=production\n",
                      "markdown": "`    && install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && cp -R /usr/local/postgresql/include/. /usr/include/ \\\n    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\nENV RAILS_ENV=production\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 6,
                  "endLine": 47,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN mkdir /assets \\\n    && install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && cp -R /usr/local/postgresql/include/. /usr/include/ \\\n    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\n",
                    "rendered": {
                      "text": "RUN mkdir /assets \\\n    && install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && cp -R /usr/local/postgresql/include/. /usr/include/ \\\n    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\n",
                      "markdown": "`RUN mkdir /assets \\\n    && install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && cp -R /usr/local/postgresql/include/. /usr/include/ \\\n    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 6,
                  "endLine": 46,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nRUN mkdir /assets \\\n    && install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && cp -R /usr/local/postgresql/include/. /usr/include/ \\\n    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n",
                    "rendered": {
                      "text": "\nRUN mkdir /assets \\\n    && install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && cp -R /usr/local/postgresql/include/. /usr/include/ \\\n    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n",
                      "markdown": "`\nRUN mkdir /assets \\\n    && install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && cp -R /usr/local/postgresql/include/. /usr/include/ \\\n    && cp -R /usr/local/postgresql/share/. /usr/share/ \\\n    && printf 'install: --no-document\\nupdate: --no-document\\n' > ~/.gemrc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 6,
                  "endLine": 40,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nRUN mkdir /usr/local/yarn ; YARN_TARBALL=\"yarn-v${YARN_VERSION}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://yarnpkg.com/downloads/${YARN_VERSION}/${YARN_TARBALL}\" ${YARN_TARBALL} \\\n    && tar --strip-components 1 -xzC /usr/local/yarn -f ${YARN_TARBALL} \\\n    && ln -sf /usr/local/yarn/bin/yarn /usr/local/bin/ \\\n    && ln -sf /usr/local/yarn/bin/yarnpkg /usr/local/bin/\n\n",
                    "rendered": {
                      "text": "\nRUN mkdir /usr/local/yarn ; YARN_TARBALL=\"yarn-v${YARN_VERSION}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://yarnpkg.com/downloads/${YARN_VERSION}/${YARN_TARBALL}\" ${YARN_TARBALL} \\\n    && tar --strip-components 1 -xzC /usr/local/yarn -f ${YARN_TARBALL} \\\n    && ln -sf /usr/local/yarn/bin/yarn /usr/local/bin/ \\\n    && ln -sf /usr/local/yarn/bin/yarnpkg /usr/local/bin/\n\n",
                      "markdown": "`\nRUN mkdir /usr/local/yarn ; YARN_TARBALL=\"yarn-v${YARN_VERSION}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://yarnpkg.com/downloads/${YARN_VERSION}/${YARN_TARBALL}\" ${YARN_TARBALL} \\\n    && tar --strip-components 1 -xzC /usr/local/yarn -f ${YARN_TARBALL} \\\n    && ln -sf /usr/local/yarn/bin/yarn /usr/local/bin/ \\\n    && ln -sf /usr/local/yarn/bin/yarnpkg /usr/local/bin/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nRUN NODE_TARBALL=\"node-v${NODE_VERSION}-linux-${ARCH}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://nodejs.org/download/release/v${NODE_VERSION}/${NODE_TARBALL}\" ${NODE_TARBALL} \\\n    && tar --strip-components 1 -xzC /usr/local/ -f ${NODE_TARBALL}\n\nRUN mkdir /usr/local/yarn ; YARN_TARBALL=\"yarn-v${YARN_VERSION}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://yarnpkg.com/downloads/${YARN_VERSION}/${YARN_TARBALL}\" ${YARN_TARBALL} \\\n",
                    "rendered": {
                      "text": "\nRUN NODE_TARBALL=\"node-v${NODE_VERSION}-linux-${ARCH}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://nodejs.org/download/release/v${NODE_VERSION}/${NODE_TARBALL}\" ${NODE_TARBALL} \\\n    && tar --strip-components 1 -xzC /usr/local/ -f ${NODE_TARBALL}\n\nRUN mkdir /usr/local/yarn ; YARN_TARBALL=\"yarn-v${YARN_VERSION}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://yarnpkg.com/downloads/${YARN_VERSION}/${YARN_TARBALL}\" ${YARN_TARBALL} \\\n",
                      "markdown": "`\nRUN NODE_TARBALL=\"node-v${NODE_VERSION}-linux-${ARCH}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://nodejs.org/download/release/v${NODE_VERSION}/${NODE_TARBALL}\" ${NODE_TARBALL} \\\n    && tar --strip-components 1 -xzC /usr/local/ -f ${NODE_TARBALL}\n\nRUN mkdir /usr/local/yarn ; YARN_TARBALL=\"yarn-v${YARN_VERSION}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://yarnpkg.com/downloads/${YARN_VERSION}/${YARN_TARBALL}\" ${YARN_TARBALL} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 89,
                  "endLine": 30,
                  "endColumn": 94,
                  "snippet": {
                    "text": "ENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 git krb5-devel clang-devel\n\nCOPY shared/build-scripts/ /build-scripts\n\n",
                    "rendered": {
                      "text": "ENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 git krb5-devel clang-devel\n\nCOPY shared/build-scripts/ /build-scripts\n\n",
                      "markdown": "`ENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 git krb5-devel clang-devel\n\nCOPY shared/build-scripts/ /build-scripts\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 30,
                  "endLine": 28,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ADD gitlab-elasticsearch-indexer.tar.gz /\nADD gitlab-graphicsmagick.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 git krb5-devel clang-devel\n\n",
                    "rendered": {
                      "text": "ADD gitlab-elasticsearch-indexer.tar.gz /\nADD gitlab-graphicsmagick.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 git krb5-devel clang-devel\n\n",
                      "markdown": "`ADD gitlab-elasticsearch-indexer.tar.gz /\nADD gitlab-graphicsmagick.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 git krb5-devel clang-devel\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 27,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ADD postgresql.tar.gz /\nADD gitlab-elasticsearch-indexer.tar.gz /\nADD gitlab-graphicsmagick.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 git krb5-devel clang-devel\n",
                    "rendered": {
                      "text": "ADD postgresql.tar.gz /\nADD gitlab-elasticsearch-indexer.tar.gz /\nADD gitlab-graphicsmagick.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 git krb5-devel clang-devel\n",
                      "markdown": "`ADD postgresql.tar.gz /\nADD gitlab-elasticsearch-indexer.tar.gz /\nADD gitlab-graphicsmagick.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 git krb5-devel clang-devel\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 23,
                  "endLine": 244,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    && apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\nCOPY --chown=git --from=builder /srv/gitlab /srv/gitlab\nCOPY --chown=git --from=builder /var/opt/gitlab /var/opt/gitlab\n",
                    "rendered": {
                      "text": "    && apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\nCOPY --chown=git --from=builder /srv/gitlab /srv/gitlab\nCOPY --chown=git --from=builder /var/opt/gitlab /var/opt/gitlab\n",
                      "markdown": "`    && apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\nCOPY --chown=git --from=builder /srv/gitlab /srv/gitlab\nCOPY --chown=git --from=builder /var/opt/gitlab /var/opt/gitlab\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 23,
                  "endLine": 97,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    && ln -sf /usr/local/yarn/bin/yarnpkg /usr/local/bin/\n\n# create gitlab user\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n# $DATADIR is the main mountpoint for gitlab data volume\nRUN mkdir ${DATADIR} && \\\n",
                    "rendered": {
                      "text": "    && ln -sf /usr/local/yarn/bin/yarnpkg /usr/local/bin/\n\n# create gitlab user\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n# $DATADIR is the main mountpoint for gitlab data volume\nRUN mkdir ${DATADIR} && \\\n",
                      "markdown": "`    && ln -sf /usr/local/yarn/bin/yarnpkg /usr/local/bin/\n\n# create gitlab user\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n# $DATADIR is the main mountpoint for gitlab data volume\nRUN mkdir ${DATADIR} && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 46,
                  "endLine": 163,
                  "endColumn": 70,
                  "snippet": {
                    "text": "# compile GetText PO files\nCOPY --from=node-deps /srv/gitlab/node_modules /srv/gitlab/node_modules\nRUN cd /srv/gitlab && \\\n    sudo -u ${GITLAB_USER} -H $COMPILE_ASSETS_ENV bundle exec rake gettext:compile\n\n<% if compile_assets %>\n# compile assets\n",
                    "rendered": {
                      "text": "# compile GetText PO files\nCOPY --from=node-deps /srv/gitlab/node_modules /srv/gitlab/node_modules\nRUN cd /srv/gitlab && \\\n    sudo -u ${GITLAB_USER} -H $COMPILE_ASSETS_ENV bundle exec rake gettext:compile\n\n<% if compile_assets %>\n# compile assets\n",
                      "markdown": "`# compile GetText PO files\nCOPY --from=node-deps /srv/gitlab/node_modules /srv/gitlab/node_modules\nRUN cd /srv/gitlab && \\\n    sudo -u ${GITLAB_USER} -H $COMPILE_ASSETS_ENV bundle exec rake gettext:compile\n\n<% if compile_assets %>\n# compile assets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 14,
                  "endLine": 240,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    libedit-dev \\\n    libxml2-dev \\\n    sudo' \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/*\n\n",
                    "rendered": {
                      "text": "    libedit-dev \\\n    libxml2-dev \\\n    sudo' \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/*\n\n",
                      "markdown": "`    libedit-dev \\\n    libxml2-dev \\\n    sudo' \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 14,
                  "endLine": 208,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -q -y --no-install-recommends \\\n         libicu72 tzdata xtail \\\n         libpng16-16 libtiff6 libturbojpeg0 zlib1g \\\n",
                    "rendered": {
                      "text": "\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -q -y --no-install-recommends \\\n         libicu72 tzdata xtail \\\n         libpng16-16 libtiff6 libturbojpeg0 zlib1g \\\n",
                      "markdown": "`\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -q -y --no-install-recommends \\\n         libicu72 tzdata xtail \\\n         libpng16-16 libtiff6 libturbojpeg0 zlib1g \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 60,
                  "endLine": 192,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# exit code of this command will be that of `du`\n\n<% if !compile_assets %>\n# install assets from assets container (see ARG ASSETS_IMAGE at top)\nCOPY --chown=git --from=assets assets /srv/gitlab/public/assets/\n<% end %>\n\n",
                    "rendered": {
                      "text": "# exit code of this command will be that of `du`\n\n<% if !compile_assets %>\n# install assets from assets container (see ARG ASSETS_IMAGE at top)\nCOPY --chown=git --from=assets assets /srv/gitlab/public/assets/\n<% end %>\n\n",
                      "markdown": "`# exit code of this command will be that of `du`\n\n<% if !compile_assets %>\n# install assets from assets container (see ARG ASSETS_IMAGE at top)\nCOPY --chown=git --from=assets assets /srv/gitlab/public/assets/\n<% end %>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 14,
                  "endLine": 81,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    libkrb5-dev \\\n    git \\\n    sudo' \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p ${BUILD_DIR}\n",
                    "rendered": {
                      "text": "    libkrb5-dev \\\n    git \\\n    sudo' \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p ${BUILD_DIR}\n",
                      "markdown": "`    libkrb5-dev \\\n    git \\\n    sudo' \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p ${BUILD_DIR}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 14,
                  "endLine": 50,
                  "endColumn": 22,
                  "snippet": {
                    "text": "# install runtime deps\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 tzdata \\\n    && rm -rf /var/lib/apt/lists/*\n\n",
                    "rendered": {
                      "text": "# install runtime deps\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 tzdata \\\n    && rm -rf /var/lib/apt/lists/*\n\n",
                      "markdown": "`# install runtime deps\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 tzdata \\\n    && rm -rf /var/lib/apt/lists/*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 267,
                  "endLine": 268,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    ln -s /srv/gitlab/GITLAB_SHELL_VERSION /home/git/gitlab-shell/VERSION\n\nCOPY --chown=${GITLAB_USER} scripts/ /scripts\n\nENV RAILS_ENV=production \\\n    BOOTSNAP_CACHE_DIR=/srv/gitlab/bootsnap \\\n    RUBYOPT=\"-W:no-experimental\" \\\n    EXECJS_RUNTIME=Disabled \\\n",
                    "rendered": {
                      "text": "    ln -s /srv/gitlab/GITLAB_SHELL_VERSION /home/git/gitlab-shell/VERSION\n\nCOPY --chown=${GITLAB_USER} scripts/ /scripts\n\nENV RAILS_ENV=production \\\n    BOOTSNAP_CACHE_DIR=/srv/gitlab/bootsnap \\\n    RUBYOPT=\"-W:no-experimental\" \\\n    EXECJS_RUNTIME=Disabled \\\n",
                      "markdown": "`    ln -s /srv/gitlab/GITLAB_SHELL_VERSION /home/git/gitlab-shell/VERSION\n\nCOPY --chown=${GITLAB_USER} scripts/ /scripts\n\nENV RAILS_ENV=production \\\n    BOOTSNAP_CACHE_DIR=/srv/gitlab/bootsnap \\\n    RUBYOPT=\"-W:no-experimental\" \\\n    EXECJS_RUNTIME=Disabled \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 3,
                  "endLine": 263,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n    chown git:git /home/git/gitlab-shell && \\\n    ln -s /srv/gitlab/GITLAB_SHELL_VERSION /home/git/gitlab-shell/VERSION\n\nCOPY --chown=${GITLAB_USER} scripts/ /scripts\n",
                    "rendered": {
                      "text": "    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n    chown git:git /home/git/gitlab-shell && \\\n    ln -s /srv/gitlab/GITLAB_SHELL_VERSION /home/git/gitlab-shell/VERSION\n\nCOPY --chown=${GITLAB_USER} scripts/ /scripts\n",
                      "markdown": "`    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n    chown git:git /home/git/gitlab-shell && \\\n    ln -s /srv/gitlab/GITLAB_SHELL_VERSION /home/git/gitlab-shell/VERSION\n\nCOPY --chown=${GITLAB_USER} scripts/ /scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 3,
                  "endLine": 261,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n    chown git:git /home/git/gitlab-shell && \\\n    ln -s /srv/gitlab/GITLAB_SHELL_VERSION /home/git/gitlab-shell/VERSION\n",
                    "rendered": {
                      "text": "    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n    chown git:git /home/git/gitlab-shell && \\\n    ln -s /srv/gitlab/GITLAB_SHELL_VERSION /home/git/gitlab-shell/VERSION\n",
                      "markdown": "`    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n    chown git:git /home/git/gitlab-shell && \\\n    ln -s /srv/gitlab/GITLAB_SHELL_VERSION /home/git/gitlab-shell/VERSION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 30,
                  "endLine": 260,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n    chown git:git /home/git/gitlab-shell && \\\n",
                    "rendered": {
                      "text": "    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n    chown git:git /home/git/gitlab-shell && \\\n",
                      "markdown": "`    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n    chown git:git /home/git/gitlab-shell && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 56,
                  "endLine": 259,
                  "endColumn": 63,
                  "snippet": {
                    "text": "    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n",
                    "rendered": {
                      "text": "    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n",
                      "markdown": "`    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 47,
                  "endLine": 259,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n",
                    "rendered": {
                      "text": "    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n",
                      "markdown": "`    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 3,
                  "endLine": 259,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n",
                    "rendered": {
                      "text": "    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n",
                      "markdown": "`    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n    mkdir /home/git/gitlab-shell && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 3,
                  "endLine": 258,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n",
                    "rendered": {
                      "text": "    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n",
                      "markdown": "`    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n    chmod 0700 public/uploads && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 3,
                  "endLine": 257,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n",
                    "rendered": {
                      "text": "    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n",
                      "markdown": "`    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n    mkdir -p public/uploads && chown ${GITLAB_USER}:${GITLAB_USER} public/uploads && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 3,
                  "endLine": 256,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n",
                    "rendered": {
                      "text": "    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n",
                      "markdown": "`    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n    find ${DATADIR}/repo -type d -print0 | sudo xargs -0 chmod g+s && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 3,
                  "endLine": 255,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    chmod o-rwx config/database.yml && \\\n    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n",
                    "rendered": {
                      "text": "    chmod o-rwx config/database.yml && \\\n    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n",
                      "markdown": "`    chmod o-rwx config/database.yml && \\\n    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n    chmod -R ug-s ${DATADIR}/repo && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 3,
                  "endLine": 254,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    cd /srv/gitlab && \\\n    chmod o-rwx config/database.yml && \\\n    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n",
                    "rendered": {
                      "text": "    cd /srv/gitlab && \\\n    chmod o-rwx config/database.yml && \\\n    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n",
                      "markdown": "`    cd /srv/gitlab && \\\n    chmod o-rwx config/database.yml && \\\n    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n    chmod -R ug+rwX,o-rwx ${DATADIR}/repo && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 3,
                  "endLine": 253,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    ln -s /var/log/gitlab /srv/gitlab/log && \\\n    cd /srv/gitlab && \\\n    chmod o-rwx config/database.yml && \\\n    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n",
                    "rendered": {
                      "text": "    ln -s /var/log/gitlab /srv/gitlab/log && \\\n    cd /srv/gitlab && \\\n    chmod o-rwx config/database.yml && \\\n    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n",
                      "markdown": "`    ln -s /var/log/gitlab /srv/gitlab/log && \\\n    cd /srv/gitlab && \\\n    chmod o-rwx config/database.yml && \\\n    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n    chmod -R ug+rwX shared/pages/ && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 3,
                  "endLine": 252,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN mv /srv/gitlab/log /var/log/gitlab && \\\n    ln -s /var/log/gitlab /srv/gitlab/log && \\\n    cd /srv/gitlab && \\\n    chmod o-rwx config/database.yml && \\\n    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n",
                    "rendered": {
                      "text": "RUN mv /srv/gitlab/log /var/log/gitlab && \\\n    ln -s /var/log/gitlab /srv/gitlab/log && \\\n    cd /srv/gitlab && \\\n    chmod o-rwx config/database.yml && \\\n    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n",
                      "markdown": "`RUN mv /srv/gitlab/log /var/log/gitlab && \\\n    ln -s /var/log/gitlab /srv/gitlab/log && \\\n    cd /srv/gitlab && \\\n    chmod o-rwx config/database.yml && \\\n    chmod 0600 config/secrets.yml && \\\n    chmod -R u+rwX builds/ && \\\n    chmod -R u+rwX shared/artifacts/ && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 3,
                  "endLine": 249,
                  "endColumn": 7,
                  "snippet": {
                    "text": "COPY --chown=git --from=builder /srv/gitlab /srv/gitlab\nCOPY --chown=git --from=builder /var/opt/gitlab /var/opt/gitlab\n\nRUN mv /srv/gitlab/log /var/log/gitlab && \\\n    ln -s /var/log/gitlab /srv/gitlab/log && \\\n    cd /srv/gitlab && \\\n    chmod o-rwx config/database.yml && \\\n",
                    "rendered": {
                      "text": "COPY --chown=git --from=builder /srv/gitlab /srv/gitlab\nCOPY --chown=git --from=builder /var/opt/gitlab /var/opt/gitlab\n\nRUN mv /srv/gitlab/log /var/log/gitlab && \\\n    ln -s /var/log/gitlab /srv/gitlab/log && \\\n    cd /srv/gitlab && \\\n    chmod o-rwx config/database.yml && \\\n",
                      "markdown": "`COPY --chown=git --from=builder /srv/gitlab /srv/gitlab\nCOPY --chown=git --from=builder /var/opt/gitlab /var/opt/gitlab\n\nRUN mv /srv/gitlab/log /var/log/gitlab && \\\n    ln -s /var/log/gitlab /srv/gitlab/log && \\\n    cd /srv/gitlab && \\\n    chmod o-rwx config/database.yml && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 6,
                  "endLine": 241,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    libxml2-dev \\\n    sudo' \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                    "rendered": {
                      "text": "    libxml2-dev \\\n    sudo' \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                      "markdown": "`    libxml2-dev \\\n    sudo' \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 6,
                  "endLine": 240,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    libedit-dev \\\n    libxml2-dev \\\n    sudo' \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/*\n\n",
                    "rendered": {
                      "text": "    libedit-dev \\\n    libxml2-dev \\\n    sudo' \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/*\n\n",
                      "markdown": "`    libedit-dev \\\n    libxml2-dev \\\n    sudo' \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 8,
                  "endLine": 213,
                  "endColumn": 14,
                  "snippet": {
                    "text": "         libicu72 tzdata xtail \\\n         libpng16-16 libtiff6 libturbojpeg0 zlib1g \\\n         # required for exiftool\n         perl \\\n         # required for diagnostic report compression\n         gzip \\\n    && rm -rf /var/lib/apt/lists/*\n",
                    "rendered": {
                      "text": "         libicu72 tzdata xtail \\\n         libpng16-16 libtiff6 libturbojpeg0 zlib1g \\\n         # required for exiftool\n         perl \\\n         # required for diagnostic report compression\n         gzip \\\n    && rm -rf /var/lib/apt/lists/*\n",
                      "markdown": "`         libicu72 tzdata xtail \\\n         libpng16-16 libtiff6 libturbojpeg0 zlib1g \\\n         # required for exiftool\n         perl \\\n         # required for diagnostic report compression\n         gzip \\\n    && rm -rf /var/lib/apt/lists/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 6,
                  "endLine": 209,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -q -y --no-install-recommends \\\n         libicu72 tzdata xtail \\\n         libpng16-16 libtiff6 libturbojpeg0 zlib1g \\\n         # required for exiftool\n",
                    "rendered": {
                      "text": "# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -q -y --no-install-recommends \\\n         libicu72 tzdata xtail \\\n         libpng16-16 libtiff6 libturbojpeg0 zlib1g \\\n         # required for exiftool\n",
                      "markdown": "`# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -q -y --no-install-recommends \\\n         libicu72 tzdata xtail \\\n         libpng16-16 libtiff6 libturbojpeg0 zlib1g \\\n         # required for exiftool\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 6,
                  "endLine": 208,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -q -y --no-install-recommends \\\n         libicu72 tzdata xtail \\\n         libpng16-16 libtiff6 libturbojpeg0 zlib1g \\\n",
                    "rendered": {
                      "text": "\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -q -y --no-install-recommends \\\n         libicu72 tzdata xtail \\\n         libpng16-16 libtiff6 libturbojpeg0 zlib1g \\\n",
                      "markdown": "`\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -q -y --no-install-recommends \\\n         libicu72 tzdata xtail \\\n         libpng16-16 libtiff6 libturbojpeg0 zlib1g \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 3,
                  "endLine": 197,
                  "endColumn": 9,
                  "snippet": {
                    "text": "<% end %>\n\n# remove uncompressed maps as per #2062\nRUN find /srv/gitlab/public/assets/webpack -name '*.map' -type f -print -delete\n\n## FINAL IMAGE ##\n\n",
                    "rendered": {
                      "text": "<% end %>\n\n# remove uncompressed maps as per #2062\nRUN find /srv/gitlab/public/assets/webpack -name '*.map' -type f -print -delete\n\n## FINAL IMAGE ##\n\n",
                      "markdown": "`<% end %>\n\n# remove uncompressed maps as per #2062\nRUN find /srv/gitlab/public/assets/webpack -name '*.map' -type f -print -delete\n\n## FINAL IMAGE ##\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 43,
                  "endLine": 180,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems\n\n# Set the path that bootsnap will use for cache\nENV BOOTSNAP_CACHE_DIR=/srv/gitlab/bootsnap\nENV ENABLE_BOOTSNAP=1\n\n# Generate bootsnap cache\nRUN echo \"Generating bootsnap cache\"; \\\n",
                    "rendered": {
                      "text": "    RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems\n\n# Set the path that bootsnap will use for cache\nENV BOOTSNAP_CACHE_DIR=/srv/gitlab/bootsnap\nENV ENABLE_BOOTSNAP=1\n\n# Generate bootsnap cache\nRUN echo \"Generating bootsnap cache\"; \\\n",
                      "markdown": "`    RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems\n\n# Set the path that bootsnap will use for cache\nENV BOOTSNAP_CACHE_DIR=/srv/gitlab/bootsnap\nENV ENABLE_BOOTSNAP=1\n\n# Generate bootsnap cache\nRUN echo \"Generating bootsnap cache\"; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 47,
                  "endLine": 179,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    rm -rf changelogs/ danger/ Dangerfile && \\\n    RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems\n\n# Set the path that bootsnap will use for cache\nENV BOOTSNAP_CACHE_DIR=/srv/gitlab/bootsnap\nENV ENABLE_BOOTSNAP=1\n\n# Generate bootsnap cache\n",
                    "rendered": {
                      "text": "    rm -rf changelogs/ danger/ Dangerfile && \\\n    RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems\n\n# Set the path that bootsnap will use for cache\nENV BOOTSNAP_CACHE_DIR=/srv/gitlab/bootsnap\nENV ENABLE_BOOTSNAP=1\n\n# Generate bootsnap cache\n",
                      "markdown": "`    rm -rf changelogs/ danger/ Dangerfile && \\\n    RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems\n\n# Set the path that bootsnap will use for cache\nENV BOOTSNAP_CACHE_DIR=/srv/gitlab/bootsnap\nENV ENABLE_BOOTSNAP=1\n\n# Generate bootsnap cache\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 3,
                  "endLine": 158,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n    sed --in-place \"s:/home/git/repositories:${DATADIR}/repo:\" config/gitlab.yml && \\\n    cp --remove-destination /srv/gitlab/VERSION /srv/gitlab/workhorse/VERSION\n\n# compile GetText PO files\nCOPY --from=node-deps /srv/gitlab/node_modules /srv/gitlab/node_modules\n",
                    "rendered": {
                      "text": "    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n    sed --in-place \"s:/home/git/repositories:${DATADIR}/repo:\" config/gitlab.yml && \\\n    cp --remove-destination /srv/gitlab/VERSION /srv/gitlab/workhorse/VERSION\n\n# compile GetText PO files\nCOPY --from=node-deps /srv/gitlab/node_modules /srv/gitlab/node_modules\n",
                      "markdown": "`    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n    sed --in-place \"s:/home/git/repositories:${DATADIR}/repo:\" config/gitlab.yml && \\\n    cp --remove-destination /srv/gitlab/VERSION /srv/gitlab/workhorse/VERSION\n\n# compile GetText PO files\nCOPY --from=node-deps /srv/gitlab/node_modules /srv/gitlab/node_modules\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 3,
                  "endLine": 157,
                  "endColumn": 8,
                  "snippet": {
                    "text": "<% end -%>\n    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n    sed --in-place \"s:/home/git/repositories:${DATADIR}/repo:\" config/gitlab.yml && \\\n    cp --remove-destination /srv/gitlab/VERSION /srv/gitlab/workhorse/VERSION\n\n# compile GetText PO files\n",
                    "rendered": {
                      "text": "<% end -%>\n    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n    sed --in-place \"s:/home/git/repositories:${DATADIR}/repo:\" config/gitlab.yml && \\\n    cp --remove-destination /srv/gitlab/VERSION /srv/gitlab/workhorse/VERSION\n\n# compile GetText PO files\n",
                      "markdown": "`<% end -%>\n    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n    sed --in-place \"s:/home/git/repositories:${DATADIR}/repo:\" config/gitlab.yml && \\\n    cp --remove-destination /srv/gitlab/VERSION /srv/gitlab/workhorse/VERSION\n\n# compile GetText PO files\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 3,
                  "endLine": 156,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n<% end -%>\n    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n    sed --in-place \"s:/home/git/repositories:${DATADIR}/repo:\" config/gitlab.yml && \\\n    cp --remove-destination /srv/gitlab/VERSION /srv/gitlab/workhorse/VERSION\n\n",
                    "rendered": {
                      "text": "    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n<% end -%>\n    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n    sed --in-place \"s:/home/git/repositories:${DATADIR}/repo:\" config/gitlab.yml && \\\n    cp --remove-destination /srv/gitlab/VERSION /srv/gitlab/workhorse/VERSION\n\n",
                      "markdown": "`    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n<% end -%>\n    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n    sed --in-place \"s:/home/git/repositories:${DATADIR}/repo:\" config/gitlab.yml && \\\n    cp --remove-destination /srv/gitlab/VERSION /srv/gitlab/workhorse/VERSION\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 3,
                  "endLine": 155,
                  "endColumn": 8,
                  "snippet": {
                    "text": "<% unless ee? -%>\n    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n<% end -%>\n    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n    sed --in-place \"s:/home/git/repositories:${DATADIR}/repo:\" config/gitlab.yml && \\\n    cp --remove-destination /srv/gitlab/VERSION /srv/gitlab/workhorse/VERSION\n",
                    "rendered": {
                      "text": "<% unless ee? -%>\n    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n<% end -%>\n    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n    sed --in-place \"s:/home/git/repositories:${DATADIR}/repo:\" config/gitlab.yml && \\\n    cp --remove-destination /srv/gitlab/VERSION /srv/gitlab/workhorse/VERSION\n",
                      "markdown": "`<% unless ee? -%>\n    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n<% end -%>\n    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n    sed --in-place \"s:/home/git/repositories:${DATADIR}/repo:\" config/gitlab.yml && \\\n    cp --remove-destination /srv/gitlab/VERSION /srv/gitlab/workhorse/VERSION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 3,
                  "endLine": 153,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n<% unless ee? -%>\n    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n<% end -%>\n    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n",
                    "rendered": {
                      "text": "    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n<% unless ee? -%>\n    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n<% end -%>\n    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n",
                      "markdown": "`    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n<% unless ee? -%>\n    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n<% end -%>\n    sed --in-place \"/port: 80/d\" config/gitlab.yml && \\\n    sed --in-place \"s/# user:.*/user: ${GITLAB_USER}/\" config/gitlab.yml && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 3,
                  "endLine": 151,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n<% unless ee? -%>\n    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n<% end -%>\n",
                    "rendered": {
                      "text": "    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n<% unless ee? -%>\n    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n<% end -%>\n",
                      "markdown": "`    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n<% unless ee? -%>\n    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n<% end -%>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 29,
                  "endLine": 150,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    sudo -u ${GITLAB_USER} -H cp config/gitlab.yml.example config/gitlab.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n<% unless ee? -%>\n    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n",
                    "rendered": {
                      "text": "    sudo -u ${GITLAB_USER} -H cp config/gitlab.yml.example config/gitlab.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n<% unless ee? -%>\n    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n",
                      "markdown": "`    sudo -u ${GITLAB_USER} -H cp config/gitlab.yml.example config/gitlab.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n<% unless ee? -%>\n    sed --in-place \"/geo:/,/^$/d\" config/database.yml && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 29,
                  "endLine": 149,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    sudo -u ${GITLAB_USER} -H echo 'gitlab-cloud-native-image' > INSTALLATION_TYPE && \\\n    sudo -u ${GITLAB_USER} -H cp config/gitlab.yml.example config/gitlab.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n<% unless ee? -%>\n",
                    "rendered": {
                      "text": "    sudo -u ${GITLAB_USER} -H echo 'gitlab-cloud-native-image' > INSTALLATION_TYPE && \\\n    sudo -u ${GITLAB_USER} -H cp config/gitlab.yml.example config/gitlab.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n<% unless ee? -%>\n",
                      "markdown": "`    sudo -u ${GITLAB_USER} -H echo 'gitlab-cloud-native-image' > INSTALLATION_TYPE && \\\n    sudo -u ${GITLAB_USER} -H cp config/gitlab.yml.example config/gitlab.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n<% unless ee? -%>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 29,
                  "endLine": 148,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    sudo -u ${GITLAB_USER} -H mkdir ${DATADIR}/.upgrade-status && \\\n    sudo -u ${GITLAB_USER} -H echo 'gitlab-cloud-native-image' > INSTALLATION_TYPE && \\\n    sudo -u ${GITLAB_USER} -H cp config/gitlab.yml.example config/gitlab.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n",
                    "rendered": {
                      "text": "    sudo -u ${GITLAB_USER} -H mkdir ${DATADIR}/.upgrade-status && \\\n    sudo -u ${GITLAB_USER} -H echo 'gitlab-cloud-native-image' > INSTALLATION_TYPE && \\\n    sudo -u ${GITLAB_USER} -H cp config/gitlab.yml.example config/gitlab.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n",
                      "markdown": "`    sudo -u ${GITLAB_USER} -H mkdir ${DATADIR}/.upgrade-status && \\\n    sudo -u ${GITLAB_USER} -H echo 'gitlab-cloud-native-image' > INSTALLATION_TYPE && \\\n    sudo -u ${GITLAB_USER} -H cp config/gitlab.yml.example config/gitlab.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n    sed --in-place \"/host: localhost/d\" config/gitlab.yml && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 29,
                  "endLine": 147,
                  "endColumn": 33,
                  "snippet": {
                    "text": "RUN cd /srv/gitlab && \\\n    sudo -u ${GITLAB_USER} -H mkdir ${DATADIR}/.upgrade-status && \\\n    sudo -u ${GITLAB_USER} -H echo 'gitlab-cloud-native-image' > INSTALLATION_TYPE && \\\n    sudo -u ${GITLAB_USER} -H cp config/gitlab.yml.example config/gitlab.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n",
                    "rendered": {
                      "text": "RUN cd /srv/gitlab && \\\n    sudo -u ${GITLAB_USER} -H mkdir ${DATADIR}/.upgrade-status && \\\n    sudo -u ${GITLAB_USER} -H echo 'gitlab-cloud-native-image' > INSTALLATION_TYPE && \\\n    sudo -u ${GITLAB_USER} -H cp config/gitlab.yml.example config/gitlab.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n",
                      "markdown": "`RUN cd /srv/gitlab && \\\n    sudo -u ${GITLAB_USER} -H mkdir ${DATADIR}/.upgrade-status && \\\n    sudo -u ${GITLAB_USER} -H echo 'gitlab-cloud-native-image' > INSTALLATION_TYPE && \\\n    sudo -u ${GITLAB_USER} -H cp config/gitlab.yml.example config/gitlab.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/resque.yml.example config/resque.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/secrets.yml.example config/secrets.yml && \\\n    sudo -u ${GITLAB_USER} -H cp config/database.yml.postgresql config/database.yml && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 11,
                  "endLine": 140,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n\n# Configure GitLab\nCOPY --chown=${GITLAB_USER}:${GITLAB_USER} gitlab-code/ /srv/gitlab/\n",
                    "rendered": {
                      "text": "    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n\n# Configure GitLab\nCOPY --chown=${GITLAB_USER}:${GITLAB_USER} gitlab-code/ /srv/gitlab/\n",
                      "markdown": "`    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n\n# Configure GitLab\nCOPY --chown=${GITLAB_USER}:${GITLAB_USER} gitlab-code/ /srv/gitlab/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 70,
                  "endLine": 139,
                  "endColumn": 77,
                  "snippet": {
                    "text": "    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n\n# Configure GitLab\n",
                    "rendered": {
                      "text": "    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n\n# Configure GitLab\n",
                      "markdown": "`    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n\n# Configure GitLab\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 11,
                  "endLine": 139,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n\n# Configure GitLab\n",
                    "rendered": {
                      "text": "    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n\n# Configure GitLab\n",
                      "markdown": "`    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n\n# Configure GitLab\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 11,
                  "endLine": 138,
                  "endColumn": 16,
                  "snippet": {
                    "text": "RUN cd /srv/gitlab && \\\n    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n\n",
                    "rendered": {
                      "text": "RUN cd /srv/gitlab && \\\n    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n\n",
                      "markdown": "`RUN cd /srv/gitlab && \\\n    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 11,
                  "endLine": 137,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\nRUN cd /srv/gitlab && \\\n    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n",
                    "rendered": {
                      "text": "\nRUN cd /srv/gitlab && \\\n    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n",
                      "markdown": "`\nRUN cd /srv/gitlab && \\\n    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n    sudo -u git -H bundle install --jobs 4 --retry 5\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 11,
                  "endLine": 136,
                  "endColumn": 16,
                  "snippet": {
                    "text": "<% end %>\n\nRUN cd /srv/gitlab && \\\n    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n",
                    "rendered": {
                      "text": "<% end %>\n\nRUN cd /srv/gitlab && \\\n    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n",
                      "markdown": "`<% end %>\n\nRUN cd /srv/gitlab && \\\n    sudo -u git -H bundle config set --local version system && \\\n    sudo -u git -H bundle config set --local clean 'true' && \\\n    sudo -u git -H bundle config set --local deployment 'true' && \\\n    sudo -u git -H bundle config set --local without 'development test mysql aws' && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 11,
                  "endLine": 127,
                  "endColumn": 16,
                  "snippet": {
                    "text": "RUN cd /srv/gitlab && \\\n    mkdir -p vendor/bundle && \\\n    sudo -u git -H bundle config set --local gemfile <%= gitlab_bundle_gemfile %> && \\\n    sudo -u git -H bundle config set --local path /srv/gitlab/vendor/bundle/\n<% else %>\n# Only copy relevant files first, this allows to cache the layer separately and not re-install gems on non dependency changes\nCOPY --chown=git gitlab-code/Gemfile gitlab-code/Gemfile.lock gitlab-code/Gemfile.checksum /srv/gitlab/\n",
                    "rendered": {
                      "text": "RUN cd /srv/gitlab && \\\n    mkdir -p vendor/bundle && \\\n    sudo -u git -H bundle config set --local gemfile <%= gitlab_bundle_gemfile %> && \\\n    sudo -u git -H bundle config set --local path /srv/gitlab/vendor/bundle/\n<% else %>\n# Only copy relevant files first, this allows to cache the layer separately and not re-install gems on non dependency changes\nCOPY --chown=git gitlab-code/Gemfile gitlab-code/Gemfile.lock gitlab-code/Gemfile.checksum /srv/gitlab/\n",
                      "markdown": "`RUN cd /srv/gitlab && \\\n    mkdir -p vendor/bundle && \\\n    sudo -u git -H bundle config set --local gemfile <%= gitlab_bundle_gemfile %> && \\\n    sudo -u git -H bundle config set --local path /srv/gitlab/vendor/bundle/\n<% else %>\n# Only copy relevant files first, this allows to cache the layer separately and not re-install gems on non dependency changes\nCOPY --chown=git gitlab-code/Gemfile gitlab-code/Gemfile.lock gitlab-code/Gemfile.checksum /srv/gitlab/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 11,
                  "endLine": 126,
                  "endColumn": 16,
                  "snippet": {
                    "text": "COPY --chown=git vendor/bundle/${TARGETARCH} /srv/gitlab/vendor/bundle\nRUN cd /srv/gitlab && \\\n    mkdir -p vendor/bundle && \\\n    sudo -u git -H bundle config set --local gemfile <%= gitlab_bundle_gemfile %> && \\\n    sudo -u git -H bundle config set --local path /srv/gitlab/vendor/bundle/\n<% else %>\n# Only copy relevant files first, this allows to cache the layer separately and not re-install gems on non dependency changes\n",
                    "rendered": {
                      "text": "COPY --chown=git vendor/bundle/${TARGETARCH} /srv/gitlab/vendor/bundle\nRUN cd /srv/gitlab && \\\n    mkdir -p vendor/bundle && \\\n    sudo -u git -H bundle config set --local gemfile <%= gitlab_bundle_gemfile %> && \\\n    sudo -u git -H bundle config set --local path /srv/gitlab/vendor/bundle/\n<% else %>\n# Only copy relevant files first, this allows to cache the layer separately and not re-install gems on non dependency changes\n",
                      "markdown": "`COPY --chown=git vendor/bundle/${TARGETARCH} /srv/gitlab/vendor/bundle\nRUN cd /srv/gitlab && \\\n    mkdir -p vendor/bundle && \\\n    sudo -u git -H bundle config set --local gemfile <%= gitlab_bundle_gemfile %> && \\\n    sudo -u git -H bundle config set --local path /srv/gitlab/vendor/bundle/\n<% else %>\n# Only copy relevant files first, this allows to cache the layer separately and not re-install gems on non dependency changes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 40,
                  "endLine": 106,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    chown -R ${GITLAB_USER}:${GITLAB_USER} ${DATADIR}\n\n# Install node_modules in separate stage to not invalidate cache of next steps when it changes\n# Also speeds up the build by installing node dependencies and gems in parallel\nFROM builder-base AS node-deps\n\nARG CACHE_BUSTER=false\n",
                    "rendered": {
                      "text": "    chown -R ${GITLAB_USER}:${GITLAB_USER} ${DATADIR}\n\n# Install node_modules in separate stage to not invalidate cache of next steps when it changes\n# Also speeds up the build by installing node dependencies and gems in parallel\nFROM builder-base AS node-deps\n\nARG CACHE_BUSTER=false\n",
                      "markdown": "`    chown -R ${GITLAB_USER}:${GITLAB_USER} ${DATADIR}\n\n# Install node_modules in separate stage to not invalidate cache of next steps when it changes\n# Also speeds up the build by installing node dependencies and gems in parallel\nFROM builder-base AS node-deps\n\nARG CACHE_BUSTER=false\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 3,
                  "endLine": 103,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN mkdir ${DATADIR} && \\\n    cd ${DATADIR} && \\\n    mkdir data repo config && \\\n    chown -R ${GITLAB_USER}:${GITLAB_USER} ${DATADIR}\n\n# Install node_modules in separate stage to not invalidate cache of next steps when it changes\n# Also speeds up the build by installing node dependencies and gems in parallel\n",
                    "rendered": {
                      "text": "RUN mkdir ${DATADIR} && \\\n    cd ${DATADIR} && \\\n    mkdir data repo config && \\\n    chown -R ${GITLAB_USER}:${GITLAB_USER} ${DATADIR}\n\n# Install node_modules in separate stage to not invalidate cache of next steps when it changes\n# Also speeds up the build by installing node dependencies and gems in parallel\n",
                      "markdown": "`RUN mkdir ${DATADIR} && \\\n    cd ${DATADIR} && \\\n    mkdir data repo config && \\\n    chown -R ${GITLAB_USER}:${GITLAB_USER} ${DATADIR}\n\n# Install node_modules in separate stage to not invalidate cache of next steps when it changes\n# Also speeds up the build by installing node dependencies and gems in parallel\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 6,
                  "endLine": 92,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nRUN mkdir /usr/local/yarn ; YARN_TARBALL=\"yarn-v${YARN_VERSION}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://yarnpkg.com/downloads/${YARN_VERSION}/${YARN_TARBALL}\" ${YARN_TARBALL} \\\n    && tar --strip-components 1 -xzC /usr/local/yarn -f ${YARN_TARBALL} \\\n    && ln -sf /usr/local/yarn/bin/yarn /usr/local/bin/ \\\n    && ln -sf /usr/local/yarn/bin/yarnpkg /usr/local/bin/\n\n",
                    "rendered": {
                      "text": "\nRUN mkdir /usr/local/yarn ; YARN_TARBALL=\"yarn-v${YARN_VERSION}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://yarnpkg.com/downloads/${YARN_VERSION}/${YARN_TARBALL}\" ${YARN_TARBALL} \\\n    && tar --strip-components 1 -xzC /usr/local/yarn -f ${YARN_TARBALL} \\\n    && ln -sf /usr/local/yarn/bin/yarn /usr/local/bin/ \\\n    && ln -sf /usr/local/yarn/bin/yarnpkg /usr/local/bin/\n\n",
                      "markdown": "`\nRUN mkdir /usr/local/yarn ; YARN_TARBALL=\"yarn-v${YARN_VERSION}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://yarnpkg.com/downloads/${YARN_VERSION}/${YARN_TARBALL}\" ${YARN_TARBALL} \\\n    && tar --strip-components 1 -xzC /usr/local/yarn -f ${YARN_TARBALL} \\\n    && ln -sf /usr/local/yarn/bin/yarn /usr/local/bin/ \\\n    && ln -sf /usr/local/yarn/bin/yarnpkg /usr/local/bin/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 6,
                  "endLine": 88,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nRUN NODE_TARBALL=\"node-v${NODE_VERSION}-linux-${ARCH}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://nodejs.org/download/release/v${NODE_VERSION}/${NODE_TARBALL}\" ${NODE_TARBALL} \\\n    && tar --strip-components 1 -xzC /usr/local/ -f ${NODE_TARBALL}\n\nRUN mkdir /usr/local/yarn ; YARN_TARBALL=\"yarn-v${YARN_VERSION}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://yarnpkg.com/downloads/${YARN_VERSION}/${YARN_TARBALL}\" ${YARN_TARBALL} \\\n",
                    "rendered": {
                      "text": "\nRUN NODE_TARBALL=\"node-v${NODE_VERSION}-linux-${ARCH}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://nodejs.org/download/release/v${NODE_VERSION}/${NODE_TARBALL}\" ${NODE_TARBALL} \\\n    && tar --strip-components 1 -xzC /usr/local/ -f ${NODE_TARBALL}\n\nRUN mkdir /usr/local/yarn ; YARN_TARBALL=\"yarn-v${YARN_VERSION}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://yarnpkg.com/downloads/${YARN_VERSION}/${YARN_TARBALL}\" ${YARN_TARBALL} \\\n",
                      "markdown": "`\nRUN NODE_TARBALL=\"node-v${NODE_VERSION}-linux-${ARCH}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://nodejs.org/download/release/v${NODE_VERSION}/${NODE_TARBALL}\" ${NODE_TARBALL} \\\n    && tar --strip-components 1 -xzC /usr/local/ -f ${NODE_TARBALL}\n\nRUN mkdir /usr/local/yarn ; YARN_TARBALL=\"yarn-v${YARN_VERSION}.tar.gz\" ; \\\n    /build-scripts/curl_retry_netfail \"https://yarnpkg.com/downloads/${YARN_VERSION}/${YARN_TARBALL}\" ${YARN_TARBALL} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 37,
                  "endLine": 82,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    git \\\n    sudo' \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p ${BUILD_DIR}\n\n",
                    "rendered": {
                      "text": "    git \\\n    sudo' \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p ${BUILD_DIR}\n\n",
                      "markdown": "`    git \\\n    sudo' \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p ${BUILD_DIR}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 6,
                  "endLine": 81,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    libkrb5-dev \\\n    git \\\n    sudo' \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p ${BUILD_DIR}\n",
                    "rendered": {
                      "text": "    libkrb5-dev \\\n    git \\\n    sudo' \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p ${BUILD_DIR}\n",
                      "markdown": "`    libkrb5-dev \\\n    git \\\n    sudo' \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p ${BUILD_DIR}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 3,
                  "endLine": 79,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    pkg-config \\\n    libkrb5-3 \\\n    libkrb5-dev \\\n    git \\\n    sudo' \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $buildDeps \\\n",
                    "rendered": {
                      "text": "    pkg-config \\\n    libkrb5-3 \\\n    libkrb5-dev \\\n    git \\\n    sudo' \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $buildDeps \\\n",
                      "markdown": "`    pkg-config \\\n    libkrb5-3 \\\n    libkrb5-dev \\\n    git \\\n    sudo' \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $buildDeps \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 6,
                  "endLine": 51,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 tzdata \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Include postgres client tools\n",
                    "rendered": {
                      "text": "# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 tzdata \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Include postgres client tools\n",
                      "markdown": "`# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 tzdata \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Include postgres client tools\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.erb"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 6,
                  "endLine": 50,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# install runtime deps\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 tzdata \\\n    && rm -rf /var/lib/apt/lists/*\n\n",
                    "rendered": {
                      "text": "# install runtime deps\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 tzdata \\\n    && rm -rf /var/lib/apt/lists/*\n\n",
                      "markdown": "`# install runtime deps\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866729\nRUN mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 tzdata \\\n    && rm -rf /var/lib/apt/lists/*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 82,
                  "endColumn": 4,
                  "snippet": {
                    "text": "      description=\"Rails container for GitLab.\"\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\nENV RAILS_ENV=production \\\n    BOOTSNAP_CACHE_DIR=/srv/gitlab/bootsnap \\\n    ENABLE_BOOTSNAP=1 \\\n    RUBYOPT=\"-W:no-experimental\" \\\n",
                    "rendered": {
                      "text": "      description=\"Rails container for GitLab.\"\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\nENV RAILS_ENV=production \\\n    BOOTSNAP_CACHE_DIR=/srv/gitlab/bootsnap \\\n    ENABLE_BOOTSNAP=1 \\\n    RUBYOPT=\"-W:no-experimental\" \\\n",
                      "markdown": "`      description=\"Rails container for GitLab.\"\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\nENV RAILS_ENV=production \\\n    BOOTSNAP_CACHE_DIR=/srv/gitlab/bootsnap \\\n    ENABLE_BOOTSNAP=1 \\\n    RUBYOPT=\"-W:no-experimental\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 6,
                  "endLine": 60,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n    && sed -e \"s/# user:.*/user: ${GITLAB_USER}/\" -e \"s:/home/git/repositories:${GITLAB_DATA}/repo:\" -i config/gitlab.yml \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}\n\nFROM ${RUBY_IMAGE} as final\n\n",
                    "rendered": {
                      "text": "    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n    && sed -e \"s/# user:.*/user: ${GITLAB_USER}/\" -e \"s:/home/git/repositories:${GITLAB_DATA}/repo:\" -i config/gitlab.yml \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}\n\nFROM ${RUBY_IMAGE} as final\n\n",
                      "markdown": "`    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n    && sed -e \"s/# user:.*/user: ${GITLAB_USER}/\" -e \"s:/home/git/repositories:${GITLAB_DATA}/repo:\" -i config/gitlab.yml \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}\n\nFROM ${RUBY_IMAGE} as final\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 6,
                  "endLine": 59,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n    && sed -e \"s/# user:.*/user: ${GITLAB_USER}/\" -e \"s:/home/git/repositories:${GITLAB_DATA}/repo:\" -i config/gitlab.yml \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}\n\nFROM ${RUBY_IMAGE} as final\n",
                    "rendered": {
                      "text": "    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n    && sed -e \"s/# user:.*/user: ${GITLAB_USER}/\" -e \"s:/home/git/repositories:${GITLAB_DATA}/repo:\" -i config/gitlab.yml \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}\n\nFROM ${RUBY_IMAGE} as final\n",
                      "markdown": "`    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n    && sed -e \"s/# user:.*/user: ${GITLAB_USER}/\" -e \"s:/home/git/repositories:${GITLAB_DATA}/repo:\" -i config/gitlab.yml \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}\n\nFROM ${RUBY_IMAGE} as final\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 6,
                  "endLine": 58,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n    && sed -e \"s/# user:.*/user: ${GITLAB_USER}/\" -e \"s:/home/git/repositories:${GITLAB_DATA}/repo:\" -i config/gitlab.yml \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}\n\n",
                    "rendered": {
                      "text": "    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n    && sed -e \"s/# user:.*/user: ${GITLAB_USER}/\" -e \"s:/home/git/repositories:${GITLAB_DATA}/repo:\" -i config/gitlab.yml \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}\n\n",
                      "markdown": "`    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n    && sed -e \"s/# user:.*/user: ${GITLAB_USER}/\" -e \"s:/home/git/repositories:${GITLAB_DATA}/repo:\" -i config/gitlab.yml \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 6,
                  "endLine": 56,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n    && sed -e \"s/# user:.*/user: ${GITLAB_USER}/\" -e \"s:/home/git/repositories:${GITLAB_DATA}/repo:\" -i config/gitlab.yml \\\n",
                    "rendered": {
                      "text": "    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n    && sed -e \"s/# user:.*/user: ${GITLAB_USER}/\" -e \"s:/home/git/repositories:${GITLAB_DATA}/repo:\" -i config/gitlab.yml \\\n",
                      "markdown": "`    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n    && sed -e \"s/# user:.*/user: ${GITLAB_USER}/\" -e \"s:/home/git/repositories:${GITLAB_DATA}/repo:\" -i config/gitlab.yml \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 6,
                  "endLine": 55,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n",
                    "rendered": {
                      "text": "    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n",
                      "markdown": "`    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION ${DNF_INSTALL_ROOT}/home/git/gitlab-shell/VERSION \\\n    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 6,
                  "endLine": 53,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n",
                    "rendered": {
                      "text": "    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n",
                      "markdown": "`    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 6,
                  "endLine": 52,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n",
                    "rendered": {
                      "text": "    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n",
                      "markdown": "`    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n    && chown ${UID}:0 ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 6,
                  "endLine": 51,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && chown -R ${UID}:0 public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n",
                    "rendered": {
                      "text": "    && chown -R ${UID}:0 public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n",
                      "markdown": "`    && chown -R ${UID}:0 public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n    && mkdir ${DNF_INSTALL_ROOT}/home/git/gitlab-shell \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 6,
                  "endLine": 50,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && mkdir -p public/uploads \\\n    && chown -R ${UID}:0 public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n",
                    "rendered": {
                      "text": "    && mkdir -p public/uploads \\\n    && chown -R ${UID}:0 public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n",
                      "markdown": "`    && mkdir -p public/uploads \\\n    && chown -R ${UID}:0 public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n    && chmod -R ug+rwX shared/pages/ \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 6,
                  "endLine": 49,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && cd ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && mkdir -p public/uploads \\\n    && chown -R ${UID}:0 public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n",
                    "rendered": {
                      "text": "    && cd ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && mkdir -p public/uploads \\\n    && chown -R ${UID}:0 public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n",
                      "markdown": "`    && cd ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && mkdir -p public/uploads \\\n    && chown -R ${UID}:0 public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n    && chmod -R u+rwX builds/ shared/artifacts/ \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 6,
                  "endLine": 48,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && ln -s /var/log/gitlab ${DNF_INSTALL_ROOT}/srv/gitlab/log \\\n    && cd ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && mkdir -p public/uploads \\\n    && chown -R ${UID}:0 public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n",
                    "rendered": {
                      "text": "    && ln -s /var/log/gitlab ${DNF_INSTALL_ROOT}/srv/gitlab/log \\\n    && cd ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && mkdir -p public/uploads \\\n    && chown -R ${UID}:0 public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n",
                      "markdown": "`    && ln -s /var/log/gitlab ${DNF_INSTALL_ROOT}/srv/gitlab/log \\\n    && cd ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && mkdir -p public/uploads \\\n    && chown -R ${UID}:0 public/uploads \\\n    && chmod 0700 public/uploads \\\n    && chmod o-rwx config/database.yml \\\n    && chmod 0600 config/secrets.yml \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 6,
                  "endLine": 44,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && mv ${DNF_INSTALL_ROOT}/srv/gitlab/log/ ${DNF_INSTALL_ROOT}/var/log/gitlab/ \\\n    && ln -s /var/log/gitlab ${DNF_INSTALL_ROOT}/srv/gitlab/log \\\n    && cd ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && mkdir -p public/uploads \\\n",
                    "rendered": {
                      "text": "RUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && mv ${DNF_INSTALL_ROOT}/srv/gitlab/log/ ${DNF_INSTALL_ROOT}/var/log/gitlab/ \\\n    && ln -s /var/log/gitlab ${DNF_INSTALL_ROOT}/srv/gitlab/log \\\n    && cd ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && mkdir -p public/uploads \\\n",
                      "markdown": "`RUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && mv ${DNF_INSTALL_ROOT}/srv/gitlab/log/ ${DNF_INSTALL_ROOT}/var/log/gitlab/ \\\n    && ln -s /var/log/gitlab ${DNF_INSTALL_ROOT}/srv/gitlab/log \\\n    && cd ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && mkdir -p public/uploads \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 6,
                  "endLine": 43,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && mv ${DNF_INSTALL_ROOT}/srv/gitlab/log/ ${DNF_INSTALL_ROOT}/var/log/gitlab/ \\\n    && ln -s /var/log/gitlab ${DNF_INSTALL_ROOT}/srv/gitlab/log \\\n    && cd ${DNF_INSTALL_ROOT}/srv/gitlab \\\n",
                    "rendered": {
                      "text": "\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && mv ${DNF_INSTALL_ROOT}/srv/gitlab/log/ ${DNF_INSTALL_ROOT}/var/log/gitlab/ \\\n    && ln -s /var/log/gitlab ${DNF_INSTALL_ROOT}/srv/gitlab/log \\\n    && cd ${DNF_INSTALL_ROOT}/srv/gitlab \\\n",
                      "markdown": "`\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && mv ${DNF_INSTALL_ROOT}/srv/gitlab/log/ ${DNF_INSTALL_ROOT}/var/log/gitlab/ \\\n    && ln -s /var/log/gitlab ${DNF_INSTALL_ROOT}/srv/gitlab/log \\\n    && cd ${DNF_INSTALL_ROOT}/srv/gitlab \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 6,
                  "endLine": 42,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && mv ${DNF_INSTALL_ROOT}/srv/gitlab/log/ ${DNF_INSTALL_ROOT}/var/log/gitlab/ \\\n    && ln -s /var/log/gitlab ${DNF_INSTALL_ROOT}/srv/gitlab/log \\\n",
                    "rendered": {
                      "text": "    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && mv ${DNF_INSTALL_ROOT}/srv/gitlab/log/ ${DNF_INSTALL_ROOT}/var/log/gitlab/ \\\n    && ln -s /var/log/gitlab ${DNF_INSTALL_ROOT}/srv/gitlab/log \\\n",
                      "markdown": "`    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && mv ${DNF_INSTALL_ROOT}/srv/gitlab/log/ ${DNF_INSTALL_ROOT}/var/log/gitlab/ \\\n    && ln -s /var/log/gitlab ${DNF_INSTALL_ROOT}/srv/gitlab/log \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 3,
                  "endLine": 41,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && chmod -R ug+rwX,o-rwx ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo \\\n    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && mv ${DNF_INSTALL_ROOT}/srv/gitlab/log/ ${DNF_INSTALL_ROOT}/var/log/gitlab/ \\\n",
                    "rendered": {
                      "text": "    && chmod -R ug+rwX,o-rwx ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo \\\n    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && mv ${DNF_INSTALL_ROOT}/srv/gitlab/log/ ${DNF_INSTALL_ROOT}/var/log/gitlab/ \\\n",
                      "markdown": "`    && chmod -R ug+rwX,o-rwx ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo \\\n    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && mv ${DNF_INSTALL_ROOT}/srv/gitlab/log/ ${DNF_INSTALL_ROOT}/var/log/gitlab/ \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 6,
                  "endLine": 39,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && mkdir -p ${DNF_INSTALL_ROOT}${GITLAB_DATA}/{.upgrade-status,data,repo,config} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${GITLAB_DATA} \\\n    && chmod -R ug+rwX,o-rwx ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo \\\n    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n",
                    "rendered": {
                      "text": "    && mkdir -p ${DNF_INSTALL_ROOT}${GITLAB_DATA}/{.upgrade-status,data,repo,config} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${GITLAB_DATA} \\\n    && chmod -R ug+rwX,o-rwx ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo \\\n    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n",
                      "markdown": "`    && mkdir -p ${DNF_INSTALL_ROOT}${GITLAB_DATA}/{.upgrade-status,data,repo,config} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${GITLAB_DATA} \\\n    && chmod -R ug+rwX,o-rwx ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo \\\n    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/scripts/lib ${DNF_INSTALL_ROOT}/scripts/lib/checks \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 6,
                  "endLine": 38,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}${GITLAB_DATA}/{.upgrade-status,data,repo,config} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${GITLAB_DATA} \\\n    && chmod -R ug+rwX,o-rwx ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo \\\n    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n",
                    "rendered": {
                      "text": "    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}${GITLAB_DATA}/{.upgrade-status,data,repo,config} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${GITLAB_DATA} \\\n    && chmod -R ug+rwX,o-rwx ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo \\\n    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n",
                      "markdown": "`    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}${GITLAB_DATA}/{.upgrade-status,data,repo,config} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${GITLAB_DATA} \\\n    && chmod -R ug+rwX,o-rwx ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo \\\n    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 6,
                  "endLine": 37,
                  "endColumn": 13,
                  "snippet": {
                    "text": "            gpgme \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}${GITLAB_DATA}/{.upgrade-status,data,repo,config} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${GITLAB_DATA} \\\n    && chmod -R ug+rwX,o-rwx ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo \\\n    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\n",
                    "rendered": {
                      "text": "            gpgme \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}${GITLAB_DATA}/{.upgrade-status,data,repo,config} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${GITLAB_DATA} \\\n    && chmod -R ug+rwX,o-rwx ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo \\\n    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\n",
                      "markdown": "`            gpgme \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}${GITLAB_DATA}/{.upgrade-status,data,repo,config} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${GITLAB_DATA} \\\n    && chmod -R ug+rwX,o-rwx ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo \\\n    && chmod -R ug-s ${DNF_INSTALL_ROOT}${GITLAB_DATA}/repo\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 6,
                  "endLine": 25,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/gitlab\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/\n",
                    "rendered": {
                      "text": "\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/gitlab\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/\n",
                      "markdown": "`\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/gitlab\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 6,
                  "endLine": 24,
                  "endColumn": 13,
                  "snippet": {
                    "text": "COPY scripts/ ${DNF_INSTALL_ROOT}/scripts\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/gitlab\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n",
                    "rendered": {
                      "text": "COPY scripts/ ${DNF_INSTALL_ROOT}/scripts\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/gitlab\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n",
                      "markdown": "`COPY scripts/ ${DNF_INSTALL_ROOT}/scripts\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/gitlab\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 3,
                  "endLine": 23,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/gitlab\n\n",
                    "rendered": {
                      "text": "\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/gitlab\n\n",
                      "markdown": "`\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts\n\nRUN chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod o-w ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/srv/gitlab\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/renderDockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env ruby\n\nrequire 'erb'\nrequire 'fileutils'\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env ruby\n\nrequire 'erb'\nrequire 'fileutils'\n\n",
                      "markdown": "`#!/usr/bin/env ruby\n\nrequire 'erb'\nrequire 'fileutils'\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.2/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 20,
                  "endLine": 10,
                  "endColumn": 38,
                  "snippet": {
                    "text": "and malloc allocations statistics.\n\nThis is designed to measure a memory allocations\nin a multi-threaded environments (concurrent requests\nprocessing) with an accurate information about allocated\nmemory within a given execution context.\n\n",
                    "rendered": {
                      "text": "and malloc allocations statistics.\n\nThis is designed to measure a memory allocations\nin a multi-threaded environments (concurrent requests\nprocessing) with an accurate information about allocated\nmemory within a given execution context.\n\n",
                      "markdown": "`and malloc allocations statistics.\n\nThis is designed to measure a memory allocations\nin a multi-threaded environments (concurrent requests\nprocessing) with an accurate information about allocated\nmemory within a given execution context.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.2/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 1,
                  "endLine": 210,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+\n     rb_vm_register_special_exception(ruby_error_stream_closed, rb_eIOError,\n                                      \"stream closed in another thread\");\n \ndiff --git a/vm_core.h b/vm_core.h\nindex d86fdbaecd..ecd17fb6f4 100644\n--- a/vm_core.h\n+++ b/vm_core.h\n",
                    "rendered": {
                      "text": "+\n     rb_vm_register_special_exception(ruby_error_stream_closed, rb_eIOError,\n                                      \"stream closed in another thread\");\n \ndiff --git a/vm_core.h b/vm_core.h\nindex d86fdbaecd..ecd17fb6f4 100644\n--- a/vm_core.h\n+++ b/vm_core.h\n",
                      "markdown": "`+\n     rb_vm_register_special_exception(ruby_error_stream_closed, rb_eIOError,\n                                      \"stream closed in another thread\");\n \ndiff --git a/vm_core.h b/vm_core.h\nindex d86fdbaecd..ecd17fb6f4 100644\n--- a/vm_core.h\n+++ b/vm_core.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.2/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 14,
                  "endLine": 150,
                  "endColumn": 20,
                  "snippet": {
                    "text": "+ruby_threadptr_for_trace_memory_allocations(void)\n+{\n+    // The order of this checks is important due\n+    // to how Ruby VM is initialized\n+    if (GET_VM()->thread_trace_memory_allocations && GET_EC() != NULL) {\n+        return GET_THREAD();\n+    }\n",
                    "rendered": {
                      "text": "+ruby_threadptr_for_trace_memory_allocations(void)\n+{\n+    // The order of this checks is important due\n+    // to how Ruby VM is initialized\n+    if (GET_VM()->thread_trace_memory_allocations && GET_EC() != NULL) {\n+        return GET_THREAD();\n+    }\n",
                      "markdown": "`+ruby_threadptr_for_trace_memory_allocations(void)\n+{\n+    // The order of this checks is important due\n+    // to how Ruby VM is initialized\n+    if (GET_VM()->thread_trace_memory_allocations && GET_EC() != NULL) {\n+        return GET_THREAD();\n+    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.2/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 4,
                  "endLine": 137,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+      assert_operator(by, :>, after[key]-before[key], \"expected the #{key} to change less than #{by}\")\n+    end\n+  end\n+end\ndiff --git a/thread.c b/thread.c\nindex 56a5644552..176509e1be 100644\n--- a/thread.c\n+++ b/thread.c\n",
                    "rendered": {
                      "text": "+      assert_operator(by, :>, after[key]-before[key], \"expected the #{key} to change less than #{by}\")\n+    end\n+  end\n+end\ndiff --git a/thread.c b/thread.c\nindex 56a5644552..176509e1be 100644\n--- a/thread.c\n+++ b/thread.c\n",
                      "markdown": "`+      assert_operator(by, :>, after[key]-before[key], \"expected the #{key} to change less than #{by}\")\n+    end\n+  end\n+end\ndiff --git a/thread.c b/thread.c\nindex 56a5644552..176509e1be 100644\n--- a/thread.c\n+++ b/thread.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.2/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 90,
                  "endLine": 64,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+\n     if (type == MEMOP_TYPE_MALLOC) {\n       retry:\n         if (malloc_increase > malloc_limit && ruby_native_thread_p() && !dont_gc_val()) {\ndiff --git a/test/ruby/test_thread_trace_memory_allocations.rb b/test/ruby/test_thread_trace_memory_allocations.rb\nnew file mode 100644\nindex 0000000000..2e28151357\n--- /dev/null\n",
                    "rendered": {
                      "text": "+\n     if (type == MEMOP_TYPE_MALLOC) {\n       retry:\n         if (malloc_increase > malloc_limit && ruby_native_thread_p() && !dont_gc_val()) {\ndiff --git a/test/ruby/test_thread_trace_memory_allocations.rb b/test/ruby/test_thread_trace_memory_allocations.rb\nnew file mode 100644\nindex 0000000000..2e28151357\n--- /dev/null\n",
                      "markdown": "`+\n     if (type == MEMOP_TYPE_MALLOC) {\n       retry:\n         if (malloc_increase > malloc_limit && ruby_native_thread_p() && !dont_gc_val()) {\ndiff --git a/test/ruby/test_thread_trace_memory_allocations.rb b/test/ruby/test_thread_trace_memory_allocations.rb\nnew file mode 100644\nindex 0000000000..2e28151357\n--- /dev/null\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.2/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 26,
                  "endColumn": 5,
                  "snippet": {
                    "text": " vm_core.h                                     | 17 +++++\n 4 files changed, 159 insertions(+)\n create mode 100644 test/ruby/test_thread_trace_memory_allocations.rb\n\ndiff --git a/gc.c b/gc.c\nindex 54400e4f6b..9fa9bf35d9 100644\n--- a/gc.c\n+++ b/gc.c\n",
                    "rendered": {
                      "text": " vm_core.h                                     | 17 +++++\n 4 files changed, 159 insertions(+)\n create mode 100644 test/ruby/test_thread_trace_memory_allocations.rb\n\ndiff --git a/gc.c b/gc.c\nindex 54400e4f6b..9fa9bf35d9 100644\n--- a/gc.c\n+++ b/gc.c\n",
                      "markdown": "` vm_core.h                                     | 17 +++++\n 4 files changed, 159 insertions(+)\n create mode 100644 test/ruby/test_thread_trace_memory_allocations.rb\n\ndiff --git a/gc.c b/gc.c\nindex 54400e4f6b..9fa9bf35d9 100644\n--- a/gc.c\n+++ b/gc.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.2/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 18,
                  "endLine": 15,
                  "endColumn": 24,
                  "snippet": {
                    "text": "memory within a given execution context.\n\nExample: Measure memory pressure generated by a given\nrequests to easier find requests with a lot of allocations.\n\nRef: https://gitlab.com/gitlab-org/gitlab/-/issues/296530\n---\n",
                    "rendered": {
                      "text": "memory within a given execution context.\n\nExample: Measure memory pressure generated by a given\nrequests to easier find requests with a lot of allocations.\n\nRef: https://gitlab.com/gitlab-org/gitlab/-/issues/296530\n---\n",
                      "markdown": "`memory within a given execution context.\n\nExample: Measure memory pressure generated by a given\nrequests to easier find requests with a lot of allocations.\n\nRef: https://gitlab.com/gitlab-org/gitlab/-/issues/296530\n---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.0/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 20,
                  "endLine": 10,
                  "endColumn": 38,
                  "snippet": {
                    "text": "and malloc allocations statistics.\n\nThis is designed to measure a memory allocations\nin a multi-threaded environments (concurrent requests\nprocessing) with an accurate information about allocated\nmemory within a given execution context.\n\n",
                    "rendered": {
                      "text": "and malloc allocations statistics.\n\nThis is designed to measure a memory allocations\nin a multi-threaded environments (concurrent requests\nprocessing) with an accurate information about allocated\nmemory within a given execution context.\n\n",
                      "markdown": "`and malloc allocations statistics.\n\nThis is designed to measure a memory allocations\nin a multi-threaded environments (concurrent requests\nprocessing) with an accurate information about allocated\nmemory within a given execution context.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.0/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 1,
                  "endLine": 210,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+\n     rb_vm_register_special_exception(ruby_error_stream_closed, rb_eIOError,\n \t\t\t\t     \"stream closed in another thread\");\n \ndiff --git a/vm_core.h b/vm_core.h\nindex 5f8d4ab87670..ac15f72fa25b 100644\n--- a/vm_core.h\n+++ b/vm_core.h\n",
                    "rendered": {
                      "text": "+\n     rb_vm_register_special_exception(ruby_error_stream_closed, rb_eIOError,\n \t\t\t\t     \"stream closed in another thread\");\n \ndiff --git a/vm_core.h b/vm_core.h\nindex 5f8d4ab87670..ac15f72fa25b 100644\n--- a/vm_core.h\n+++ b/vm_core.h\n",
                      "markdown": "`+\n     rb_vm_register_special_exception(ruby_error_stream_closed, rb_eIOError,\n \t\t\t\t     \"stream closed in another thread\");\n \ndiff --git a/vm_core.h b/vm_core.h\nindex 5f8d4ab87670..ac15f72fa25b 100644\n--- a/vm_core.h\n+++ b/vm_core.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.0/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 14,
                  "endLine": 150,
                  "endColumn": 20,
                  "snippet": {
                    "text": "+ruby_threadptr_for_trace_memory_allocations(void)\n+{\n+    // The order of this checks is important due\n+    // to how Ruby VM is initialized\n+    if (GET_VM()->thread_trace_memory_allocations && GET_EC() != NULL) {\n+        return GET_THREAD();\n+    }\n",
                    "rendered": {
                      "text": "+ruby_threadptr_for_trace_memory_allocations(void)\n+{\n+    // The order of this checks is important due\n+    // to how Ruby VM is initialized\n+    if (GET_VM()->thread_trace_memory_allocations && GET_EC() != NULL) {\n+        return GET_THREAD();\n+    }\n",
                      "markdown": "`+ruby_threadptr_for_trace_memory_allocations(void)\n+{\n+    // The order of this checks is important due\n+    // to how Ruby VM is initialized\n+    if (GET_VM()->thread_trace_memory_allocations && GET_EC() != NULL) {\n+        return GET_THREAD();\n+    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.0/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 4,
                  "endLine": 137,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+      assert_operator(by, :>, after[key]-before[key], \"expected the #{key} to change less than #{by}\")\n+    end\n+  end\n+end\ndiff --git a/thread.c b/thread.c\nindex dce181d24e02..247440766cdf 100644\n--- a/thread.c\n+++ b/thread.c\n",
                    "rendered": {
                      "text": "+      assert_operator(by, :>, after[key]-before[key], \"expected the #{key} to change less than #{by}\")\n+    end\n+  end\n+end\ndiff --git a/thread.c b/thread.c\nindex dce181d24e02..247440766cdf 100644\n--- a/thread.c\n+++ b/thread.c\n",
                      "markdown": "`+      assert_operator(by, :>, after[key]-before[key], \"expected the #{key} to change less than #{by}\")\n+    end\n+  end\n+end\ndiff --git a/thread.c b/thread.c\nindex dce181d24e02..247440766cdf 100644\n--- a/thread.c\n+++ b/thread.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.0/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 83,
                  "endLine": 64,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+\n     if (type == MEMOP_TYPE_MALLOC) {\n       retry:\n \tif (malloc_increase > malloc_limit && ruby_native_thread_p() && !dont_gc_val()) {\ndiff --git a/test/ruby/test_thread_trace_memory_allocations.rb b/test/ruby/test_thread_trace_memory_allocations.rb\nnew file mode 100644\nindex 000000000000..2e281513578b\n--- /dev/null\n",
                    "rendered": {
                      "text": "+\n     if (type == MEMOP_TYPE_MALLOC) {\n       retry:\n \tif (malloc_increase > malloc_limit && ruby_native_thread_p() && !dont_gc_val()) {\ndiff --git a/test/ruby/test_thread_trace_memory_allocations.rb b/test/ruby/test_thread_trace_memory_allocations.rb\nnew file mode 100644\nindex 000000000000..2e281513578b\n--- /dev/null\n",
                      "markdown": "`+\n     if (type == MEMOP_TYPE_MALLOC) {\n       retry:\n \tif (malloc_increase > malloc_limit && ruby_native_thread_p() && !dont_gc_val()) {\ndiff --git a/test/ruby/test_thread_trace_memory_allocations.rb b/test/ruby/test_thread_trace_memory_allocations.rb\nnew file mode 100644\nindex 000000000000..2e281513578b\n--- /dev/null\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.0/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 26,
                  "endColumn": 5,
                  "snippet": {
                    "text": " vm_core.h                                     | 17 +++++\n 4 files changed, 159 insertions(+)\n create mode 100644 test/ruby/test_thread_trace_memory_allocations.rb\n\ndiff --git a/gc.c b/gc.c\nindex 27cf65b196a3..280c62fbe341 100644\n--- a/gc.c\n+++ b/gc.c\n",
                    "rendered": {
                      "text": " vm_core.h                                     | 17 +++++\n 4 files changed, 159 insertions(+)\n create mode 100644 test/ruby/test_thread_trace_memory_allocations.rb\n\ndiff --git a/gc.c b/gc.c\nindex 27cf65b196a3..280c62fbe341 100644\n--- a/gc.c\n+++ b/gc.c\n",
                      "markdown": "` vm_core.h                                     | 17 +++++\n 4 files changed, 159 insertions(+)\n create mode 100644 test/ruby/test_thread_trace_memory_allocations.rb\n\ndiff --git a/gc.c b/gc.c\nindex 27cf65b196a3..280c62fbe341 100644\n--- a/gc.c\n+++ b/gc.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.0/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 18,
                  "endLine": 15,
                  "endColumn": 24,
                  "snippet": {
                    "text": "memory within a given execution context.\n\nExample: Measure memory pressure generated by a given\nrequests to easier find requests with a lot of allocations.\n\nRef: https://gitlab.com/gitlab-org/gitlab/-/issues/296530\n---\n",
                    "rendered": {
                      "text": "memory within a given execution context.\n\nExample: Measure memory pressure generated by a given\nrequests to easier find requests with a lot of allocations.\n\nRef: https://gitlab.com/gitlab-org/gitlab/-/issues/296530\n---\n",
                      "markdown": "`memory within a given execution context.\n\nExample: Measure memory pressure generated by a given\nrequests to easier find requests with a lot of allocations.\n\nRef: https://gitlab.com/gitlab-org/gitlab/-/issues/296530\n---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 10,
                  "endLine": 35,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    && export LDFLAGS=\"-Wl,--no-as-needed\" \\\n    && cflags=\"-fno-omit-frame-pointer\" ./configure --prefix=/usr --libdir=${LIBDIR} --with-jemalloc --disable-dtrace --disable-install-doc --disable-install-rdoc --enable-shared --with-out-ext=dbm,readline --without-gmp --without-gdbm --without-tk \\\n    && make -j \"$(nproc)\" install \\\n    && gem update --no-document --system ${RUBYGEMS_VERSION} \\\n    && gem install bundler --version ${BUNDLER_VERSION} --force --no-document \\\n    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n",
                    "rendered": {
                      "text": "    && export LDFLAGS=\"-Wl,--no-as-needed\" \\\n    && cflags=\"-fno-omit-frame-pointer\" ./configure --prefix=/usr --libdir=${LIBDIR} --with-jemalloc --disable-dtrace --disable-install-doc --disable-install-rdoc --enable-shared --with-out-ext=dbm,readline --without-gmp --without-gdbm --without-tk \\\n    && make -j \"$(nproc)\" install \\\n    && gem update --no-document --system ${RUBYGEMS_VERSION} \\\n    && gem install bundler --version ${BUNDLER_VERSION} --force --no-document \\\n    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n",
                      "markdown": "`    && export LDFLAGS=\"-Wl,--no-as-needed\" \\\n    && cflags=\"-fno-omit-frame-pointer\" ./configure --prefix=/usr --libdir=${LIBDIR} --with-jemalloc --disable-dtrace --disable-install-doc --disable-install-rdoc --enable-shared --with-out-ext=dbm,readline --without-gmp --without-gdbm --without-tk \\\n    && make -j \"$(nproc)\" install \\\n    && gem update --no-document --system ${RUBYGEMS_VERSION} \\\n    && gem install bundler --version ${BUNDLER_VERSION} --force --no-document \\\n    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 6,
                  "endLine": 42,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n      /usr/bin/{ruby,rdoc,irb,erb,rake,gem,bundler,bundle} \\\n      ${LIBDIR}/{ruby/,libruby.*,libjemalloc.*} \\\n      /usr/include/{ruby-*,jemalloc}/ \\\n",
                    "rendered": {
                      "text": "    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n      /usr/bin/{ruby,rdoc,irb,erb,rake,gem,bundler,bundle} \\\n      ${LIBDIR}/{ruby/,libruby.*,libjemalloc.*} \\\n      /usr/include/{ruby-*,jemalloc}/ \\\n",
                      "markdown": "`    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n      /usr/bin/{ruby,rdoc,irb,erb,rake,gem,bundler,bundle} \\\n      ${LIBDIR}/{ruby/,libruby.*,libjemalloc.*} \\\n      /usr/include/{ruby-*,jemalloc}/ \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 6,
                  "endLine": 40,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n      /usr/bin/{ruby,rdoc,irb,erb,rake,gem,bundler,bundle} \\\n",
                    "rendered": {
                      "text": "    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n      /usr/bin/{ruby,rdoc,irb,erb,rake,gem,bundler,bundle} \\\n",
                      "markdown": "`    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n      /usr/bin/{ruby,rdoc,irb,erb,rake,gem,bundler,bundle} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 112,
                  "endLine": 39,
                  "endColumn": 117,
                  "snippet": {
                    "text": "    && gem install bundler --version ${BUNDLER_VERSION} --force --no-document \\\n    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n",
                    "rendered": {
                      "text": "    && gem install bundler --version ${BUNDLER_VERSION} --force --no-document \\\n    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n",
                      "markdown": "`    && gem install bundler --version ${BUNDLER_VERSION} --force --no-document \\\n    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 6,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    && gem install bundler --version ${BUNDLER_VERSION} --force --no-document \\\n    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n",
                    "rendered": {
                      "text": "    && gem install bundler --version ${BUNDLER_VERSION} --force --no-document \\\n    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n",
                      "markdown": "`    && gem install bundler --version ${BUNDLER_VERSION} --force --no-document \\\n    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 18,
                  "endLine": 37,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    && make -j \"$(nproc)\" install \\\n    && gem update --no-document --system ${RUBYGEMS_VERSION} \\\n    && gem install bundler --version ${BUNDLER_VERSION} --force --no-document \\\n    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n",
                    "rendered": {
                      "text": "    && make -j \"$(nproc)\" install \\\n    && gem update --no-document --system ${RUBYGEMS_VERSION} \\\n    && gem install bundler --version ${BUNDLER_VERSION} --force --no-document \\\n    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n",
                      "markdown": "`    && make -j \"$(nproc)\" install \\\n    && gem update --no-document --system ${RUBYGEMS_VERSION} \\\n    && gem install bundler --version ${BUNDLER_VERSION} --force --no-document \\\n    && gem install openssl --version \"${OPENSSL_GEM_VERSION}\" --force --no-document \\\n    && cd .. \\\n    && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n    && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 116,
                  "endLine": 29,
                  "endColumn": 121,
                  "snippet": {
                    "text": "    && cd .. \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 libyaml-devel \\\n    && export RUBY_MAJOR_VERSION=\"${RUBY_VERSION%.*}\" \\\n    && curl -f --retry 6 -s https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR_VERSION}/ruby-${RUBY_VERSION}.tar.gz | tar -xz \\\n    && cd ruby-${RUBY_VERSION} \\\n    && /build-scripts/apply_ruby_patches.sh ${BUILD_DIR}/patches ${RUBY_VERSION} \\\n    && export LDFLAGS=\"-Wl,--no-as-needed\" \\\n",
                    "rendered": {
                      "text": "    && cd .. \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 libyaml-devel \\\n    && export RUBY_MAJOR_VERSION=\"${RUBY_VERSION%.*}\" \\\n    && curl -f --retry 6 -s https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR_VERSION}/ruby-${RUBY_VERSION}.tar.gz | tar -xz \\\n    && cd ruby-${RUBY_VERSION} \\\n    && /build-scripts/apply_ruby_patches.sh ${BUILD_DIR}/patches ${RUBY_VERSION} \\\n    && export LDFLAGS=\"-Wl,--no-as-needed\" \\\n",
                      "markdown": "`    && cd .. \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 libyaml-devel \\\n    && export RUBY_MAJOR_VERSION=\"${RUBY_VERSION%.*}\" \\\n    && curl -f --retry 6 -s https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR_VERSION}/ruby-${RUBY_VERSION}.tar.gz | tar -xz \\\n    && cd ruby-${RUBY_VERSION} \\\n    && /build-scripts/apply_ruby_patches.sh ${BUILD_DIR}/patches ${RUBY_VERSION} \\\n    && export LDFLAGS=\"-Wl,--no-as-needed\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 6,
                  "endLine": 29,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    && cd .. \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 libyaml-devel \\\n    && export RUBY_MAJOR_VERSION=\"${RUBY_VERSION%.*}\" \\\n    && curl -f --retry 6 -s https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR_VERSION}/ruby-${RUBY_VERSION}.tar.gz | tar -xz \\\n    && cd ruby-${RUBY_VERSION} \\\n    && /build-scripts/apply_ruby_patches.sh ${BUILD_DIR}/patches ${RUBY_VERSION} \\\n    && export LDFLAGS=\"-Wl,--no-as-needed\" \\\n",
                    "rendered": {
                      "text": "    && cd .. \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 libyaml-devel \\\n    && export RUBY_MAJOR_VERSION=\"${RUBY_VERSION%.*}\" \\\n    && curl -f --retry 6 -s https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR_VERSION}/ruby-${RUBY_VERSION}.tar.gz | tar -xz \\\n    && cd ruby-${RUBY_VERSION} \\\n    && /build-scripts/apply_ruby_patches.sh ${BUILD_DIR}/patches ${RUBY_VERSION} \\\n    && export LDFLAGS=\"-Wl,--no-as-needed\" \\\n",
                      "markdown": "`    && cd .. \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 libyaml-devel \\\n    && export RUBY_MAJOR_VERSION=\"${RUBY_VERSION%.*}\" \\\n    && curl -f --retry 6 -s https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR_VERSION}/ruby-${RUBY_VERSION}.tar.gz | tar -xz \\\n    && cd ruby-${RUBY_VERSION} \\\n    && /build-scripts/apply_ruby_patches.sh ${BUILD_DIR}/patches ${RUBY_VERSION} \\\n    && export LDFLAGS=\"-Wl,--no-as-needed\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6,
                  "endLine": 22,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nRUN mkdir /assets \\\n    && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n    && tar -xjf jemalloc.tar.bz2 \\\n    && cd jemalloc-${JEMALLOC_VERSION} \\\n    && ./autogen.sh --prefix=/usr --libdir=${LIBDIR} --enable-prof \\\n    && make -j \"$(nproc)\" install \\\n",
                    "rendered": {
                      "text": "\nRUN mkdir /assets \\\n    && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n    && tar -xjf jemalloc.tar.bz2 \\\n    && cd jemalloc-${JEMALLOC_VERSION} \\\n    && ./autogen.sh --prefix=/usr --libdir=${LIBDIR} --enable-prof \\\n    && make -j \"$(nproc)\" install \\\n",
                      "markdown": "`\nRUN mkdir /assets \\\n    && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n    && tar -xjf jemalloc.tar.bz2 \\\n    && cd jemalloc-${JEMALLOC_VERSION} \\\n    && ./autogen.sh --prefix=/usr --libdir=${LIBDIR} --enable-prof \\\n    && make -j \"$(nproc)\" install \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 6,
                  "endLine": 21,
                  "endColumn": 12,
                  "snippet": {
                    "text": "COPY patches/ /patches\n\nRUN mkdir /assets \\\n    && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n    && tar -xjf jemalloc.tar.bz2 \\\n    && cd jemalloc-${JEMALLOC_VERSION} \\\n    && ./autogen.sh --prefix=/usr --libdir=${LIBDIR} --enable-prof \\\n",
                    "rendered": {
                      "text": "COPY patches/ /patches\n\nRUN mkdir /assets \\\n    && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n    && tar -xjf jemalloc.tar.bz2 \\\n    && cd jemalloc-${JEMALLOC_VERSION} \\\n    && ./autogen.sh --prefix=/usr --libdir=${LIBDIR} --enable-prof \\\n",
                      "markdown": "`COPY patches/ /patches\n\nRUN mkdir /assets \\\n    && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n    && tar -xjf jemalloc.tar.bz2 \\\n    && cd jemalloc-${JEMALLOC_VERSION} \\\n    && ./autogen.sh --prefix=/usr --libdir=${LIBDIR} --enable-prof \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 16,
                  "endLine": 15,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nADD gitlab-rust.tar.gz /\n\nENV LANG=C.UTF-8\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nCOPY shared/build-scripts/ /build-scripts\nCOPY patches/ /patches\n",
                    "rendered": {
                      "text": "\nADD gitlab-rust.tar.gz /\n\nENV LANG=C.UTF-8\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nCOPY shared/build-scripts/ /build-scripts\nCOPY patches/ /patches\n",
                      "markdown": "`\nADD gitlab-rust.tar.gz /\n\nENV LANG=C.UTF-8\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nCOPY shared/build-scripts/ /build-scripts\nCOPY patches/ /patches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 14,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG OPENSSL_GEM_VERSION=\"~>3.2.0\"\n\nADD gitlab-rust.tar.gz /\n\nENV LANG=C.UTF-8\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nCOPY shared/build-scripts/ /build-scripts\n",
                    "rendered": {
                      "text": "ARG OPENSSL_GEM_VERSION=\"~>3.2.0\"\n\nADD gitlab-rust.tar.gz /\n\nENV LANG=C.UTF-8\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nCOPY shared/build-scripts/ /build-scripts\n",
                      "markdown": "`ARG OPENSSL_GEM_VERSION=\"~>3.2.0\"\n\nADD gitlab-rust.tar.gz /\n\nENV LANG=C.UTF-8\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nCOPY shared/build-scripts/ /build-scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 104,
                  "endLine": 105,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n\t&& rm -rf /root/.gem/ \\\n\t&& RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /usr/lib/ruby/gems\n\nCMD [ \"irb\" ]\n",
                    "rendered": {
                      "text": "  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n\t&& rm -rf /root/.gem/ \\\n\t&& RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /usr/lib/ruby/gems\n\nCMD [ \"irb\" ]\n",
                      "markdown": "`  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n\t&& rm -rf /root/.gem/ \\\n\t&& RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /usr/lib/ruby/gems\n\nCMD [ \"irb\" ]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 7,
                  "endLine": 98,
                  "endColumn": 15,
                  "snippet": {
                    "text": "ARG BUNDLER_VERSION\nARG RBREADLINE_VERSION=0.5.5\n\nRUN gem update --no-document --system \"$RUBYGEMS_VERSION\" \\\n  && gem install bundler --version \"$BUNDLER_VERSION\" --force --no-document \\\n  && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n",
                    "rendered": {
                      "text": "ARG BUNDLER_VERSION\nARG RBREADLINE_VERSION=0.5.5\n\nRUN gem update --no-document --system \"$RUBYGEMS_VERSION\" \\\n  && gem install bundler --version \"$BUNDLER_VERSION\" --force --no-document \\\n  && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n",
                      "markdown": "`ARG BUNDLER_VERSION\nARG RBREADLINE_VERSION=0.5.5\n\nRUN gem update --no-document --system \"$RUBYGEMS_VERSION\" \\\n  && gem install bundler --version \"$BUNDLER_VERSION\" --force --no-document \\\n  && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 11,
                  "endLine": 78,
                  "endColumn": 19,
                  "snippet": {
                    "text": "FROM --platform=${TARGETPLATFORM} ${GITLAB_BASE_IMAGE} AS final_builder\n\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    bzip2 \\\n    libffi-dev \\\n",
                    "rendered": {
                      "text": "FROM --platform=${TARGETPLATFORM} ${GITLAB_BASE_IMAGE} AS final_builder\n\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    bzip2 \\\n    libffi-dev \\\n",
                      "markdown": "`FROM --platform=${TARGETPLATFORM} ${GITLAB_BASE_IMAGE} AS final_builder\n\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    bzip2 \\\n    libffi-dev \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 12,
                  "endLine": 49,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  libxslt-dev \\\n  make \\\n  xz-utils' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "  libxslt-dev \\\n  make \\\n  xz-utils' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n",
                      "markdown": "`  libxslt-dev \\\n  make \\\n  xz-utils' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 11,
                  "endLine": 16,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ARG JEMALLOC_VERSION=5.3.0\n\n# install development deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    libffi-dev \\\n    libgdbm6 \\\n",
                    "rendered": {
                      "text": "ARG JEMALLOC_VERSION=5.3.0\n\n# install development deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    libffi-dev \\\n    libgdbm6 \\\n",
                      "markdown": "`ARG JEMALLOC_VERSION=5.3.0\n\n# install development deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    libffi-dev \\\n    libgdbm6 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 4,
                  "endLine": 101,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN gem update --no-document --system \"$RUBYGEMS_VERSION\" \\\n  && gem install bundler --version \"$BUNDLER_VERSION\" --force --no-document \\\n  && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n\t&& rm -rf /root/.gem/ \\\n\t&& RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /usr/lib/ruby/gems\n\n",
                    "rendered": {
                      "text": "RUN gem update --no-document --system \"$RUBYGEMS_VERSION\" \\\n  && gem install bundler --version \"$BUNDLER_VERSION\" --force --no-document \\\n  && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n\t&& rm -rf /root/.gem/ \\\n\t&& RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /usr/lib/ruby/gems\n\n",
                      "markdown": "`RUN gem update --no-document --system \"$RUBYGEMS_VERSION\" \\\n  && gem install bundler --version \"$BUNDLER_VERSION\" --force --no-document \\\n  && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n\t&& rm -rf /root/.gem/ \\\n\t&& RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /usr/lib/ruby/gems\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 110,
                  "endLine": 100,
                  "endColumn": 115,
                  "snippet": {
                    "text": "\nRUN gem update --no-document --system \"$RUBYGEMS_VERSION\" \\\n  && gem install bundler --version \"$BUNDLER_VERSION\" --force --no-document \\\n  && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n\t&& rm -rf /root/.gem/ \\\n\t&& RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /usr/lib/ruby/gems\n",
                    "rendered": {
                      "text": "\nRUN gem update --no-document --system \"$RUBYGEMS_VERSION\" \\\n  && gem install bundler --version \"$BUNDLER_VERSION\" --force --no-document \\\n  && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n\t&& rm -rf /root/.gem/ \\\n\t&& RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /usr/lib/ruby/gems\n",
                      "markdown": "`\nRUN gem update --no-document --system \"$RUBYGEMS_VERSION\" \\\n  && gem install bundler --version \"$BUNDLER_VERSION\" --force --no-document \\\n  && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n\t&& rm -rf /root/.gem/ \\\n\t&& RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /usr/lib/ruby/gems\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 4,
                  "endLine": 100,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nRUN gem update --no-document --system \"$RUBYGEMS_VERSION\" \\\n  && gem install bundler --version \"$BUNDLER_VERSION\" --force --no-document \\\n  && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n\t&& rm -rf /root/.gem/ \\\n\t&& RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /usr/lib/ruby/gems\n",
                    "rendered": {
                      "text": "\nRUN gem update --no-document --system \"$RUBYGEMS_VERSION\" \\\n  && gem install bundler --version \"$BUNDLER_VERSION\" --force --no-document \\\n  && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n\t&& rm -rf /root/.gem/ \\\n\t&& RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /usr/lib/ruby/gems\n",
                      "markdown": "`\nRUN gem update --no-document --system \"$RUBYGEMS_VERSION\" \\\n  && gem install bundler --version \"$BUNDLER_VERSION\" --force --no-document \\\n  && curl --retry 6 -sfL https://github.com/connoratherton/rb-readline/archive/v${RBREADLINE_VERSION}.tar.gz | tar -xz \\\n  && ruby rb-readline-${RBREADLINE_VERSION}/setup.rb && rm -rf rb-readline-${RBREADLINE_VERSION} \\\n\t&& rm -rf /root/.gem/ \\\n\t&& RUBY_VERSION=${RUBY_VERSION} /build-scripts/cleanup-gems /usr/lib/ruby/gems\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 4,
                  "endLine": 79,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    bzip2 \\\n    libffi-dev \\\n    libgdbm6 \\\n",
                    "rendered": {
                      "text": "\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    bzip2 \\\n    libffi-dev \\\n    libgdbm6 \\\n",
                      "markdown": "`\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    bzip2 \\\n    libffi-dev \\\n    libgdbm6 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 3,
                  "endLine": 78,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM --platform=${TARGETPLATFORM} ${GITLAB_BASE_IMAGE} AS final_builder\n\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    bzip2 \\\n    libffi-dev \\\n",
                    "rendered": {
                      "text": "FROM --platform=${TARGETPLATFORM} ${GITLAB_BASE_IMAGE} AS final_builder\n\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    bzip2 \\\n    libffi-dev \\\n",
                      "markdown": "`FROM --platform=${TARGETPLATFORM} ${GITLAB_BASE_IMAGE} AS final_builder\n\n# install runtime deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    bzip2 \\\n    libffi-dev \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  && cflags=\"-fno-omit-frame-pointer\" ./configure --prefix=/usr --with-jemalloc --with-out-ext=dbm,readline --enable-shared --disable-install-rdoc --disable-install-doc  --without-gmp --without-gdbm --without-tk --disable-dtrace \\\n  && make -j \"$(nproc)\" install DESTDIR=/assets \\\n  && cd \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf ${BUILD_DIR}\n\n## FINAL IMAGE ##\n",
                    "rendered": {
                      "text": "  && cflags=\"-fno-omit-frame-pointer\" ./configure --prefix=/usr --with-jemalloc --with-out-ext=dbm,readline --enable-shared --disable-install-rdoc --disable-install-doc  --without-gmp --without-gdbm --without-tk --disable-dtrace \\\n  && make -j \"$(nproc)\" install DESTDIR=/assets \\\n  && cd \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf ${BUILD_DIR}\n\n## FINAL IMAGE ##\n",
                      "markdown": "`  && cflags=\"-fno-omit-frame-pointer\" ./configure --prefix=/usr --with-jemalloc --with-out-ext=dbm,readline --enable-shared --disable-install-rdoc --disable-install-doc  --without-gmp --without-gdbm --without-tk --disable-dtrace \\\n  && make -j \"$(nproc)\" install DESTDIR=/assets \\\n  && cd \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf ${BUILD_DIR}\n\n## FINAL IMAGE ##\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 4,
                  "endLine": 62,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  && cd .. \\\n  && export RUBY_MAJOR_VERSION=\"${RUBY_VERSION%.*}\" \\\n  && curl --retry 6 -sfo ruby.tar.xz https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR_VERSION}/ruby-${RUBY_VERSION}.tar.xz \\\n  && tar -xf ruby.tar.xz \\\n  && rm ruby.tar.xz \\\n  && cd ruby-${RUBY_VERSION} \\\n  && /build-scripts/apply_ruby_patches.sh ${BUILD_DIR}/patches ${RUBY_VERSION} \\\n",
                    "rendered": {
                      "text": "  && cd .. \\\n  && export RUBY_MAJOR_VERSION=\"${RUBY_VERSION%.*}\" \\\n  && curl --retry 6 -sfo ruby.tar.xz https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR_VERSION}/ruby-${RUBY_VERSION}.tar.xz \\\n  && tar -xf ruby.tar.xz \\\n  && rm ruby.tar.xz \\\n  && cd ruby-${RUBY_VERSION} \\\n  && /build-scripts/apply_ruby_patches.sh ${BUILD_DIR}/patches ${RUBY_VERSION} \\\n",
                      "markdown": "`  && cd .. \\\n  && export RUBY_MAJOR_VERSION=\"${RUBY_VERSION%.*}\" \\\n  && curl --retry 6 -sfo ruby.tar.xz https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR_VERSION}/ruby-${RUBY_VERSION}.tar.xz \\\n  && tar -xf ruby.tar.xz \\\n  && rm ruby.tar.xz \\\n  && cd ruby-${RUBY_VERSION} \\\n  && /build-scripts/apply_ruby_patches.sh ${BUILD_DIR}/patches ${RUBY_VERSION} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 4,
                  "endLine": 61,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  && make -j \"$(nproc)\" install DESTDIR=/assets \\\n  && cd .. \\\n  && export RUBY_MAJOR_VERSION=\"${RUBY_VERSION%.*}\" \\\n  && curl --retry 6 -sfo ruby.tar.xz https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR_VERSION}/ruby-${RUBY_VERSION}.tar.xz \\\n  && tar -xf ruby.tar.xz \\\n  && rm ruby.tar.xz \\\n  && cd ruby-${RUBY_VERSION} \\\n",
                    "rendered": {
                      "text": "  && make -j \"$(nproc)\" install DESTDIR=/assets \\\n  && cd .. \\\n  && export RUBY_MAJOR_VERSION=\"${RUBY_VERSION%.*}\" \\\n  && curl --retry 6 -sfo ruby.tar.xz https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR_VERSION}/ruby-${RUBY_VERSION}.tar.xz \\\n  && tar -xf ruby.tar.xz \\\n  && rm ruby.tar.xz \\\n  && cd ruby-${RUBY_VERSION} \\\n",
                      "markdown": "`  && make -j \"$(nproc)\" install DESTDIR=/assets \\\n  && cd .. \\\n  && export RUBY_MAJOR_VERSION=\"${RUBY_VERSION%.*}\" \\\n  && curl --retry 6 -sfo ruby.tar.xz https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR_VERSION}/ruby-${RUBY_VERSION}.tar.xz \\\n  && tar -xf ruby.tar.xz \\\n  && rm ruby.tar.xz \\\n  && cd ruby-${RUBY_VERSION} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 4,
                  "endLine": 54,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n  && tar -xjf jemalloc.tar.bz2 \\\n  && cd jemalloc-${JEMALLOC_VERSION} \\\n  && ./autogen.sh --prefix=/usr --enable-prof \\\n  && make -j \"$(nproc)\" install \\\n",
                    "rendered": {
                      "text": "  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n  && tar -xjf jemalloc.tar.bz2 \\\n  && cd jemalloc-${JEMALLOC_VERSION} \\\n  && ./autogen.sh --prefix=/usr --enable-prof \\\n  && make -j \"$(nproc)\" install \\\n",
                      "markdown": "`  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n  && tar -xjf jemalloc.tar.bz2 \\\n  && cd jemalloc-${JEMALLOC_VERSION} \\\n  && ./autogen.sh --prefix=/usr --enable-prof \\\n  && make -j \"$(nproc)\" install \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 4,
                  "endLine": 53,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n  && tar -xjf jemalloc.tar.bz2 \\\n  && cd jemalloc-${JEMALLOC_VERSION} \\\n  && ./autogen.sh --prefix=/usr --enable-prof \\\n",
                    "rendered": {
                      "text": "  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n  && tar -xjf jemalloc.tar.bz2 \\\n  && cd jemalloc-${JEMALLOC_VERSION} \\\n  && ./autogen.sh --prefix=/usr --enable-prof \\\n",
                      "markdown": "`  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n  && tar -xjf jemalloc.tar.bz2 \\\n  && cd jemalloc-${JEMALLOC_VERSION} \\\n  && ./autogen.sh --prefix=/usr --enable-prof \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  make \\\n  xz-utils' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n",
                    "rendered": {
                      "text": "  make \\\n  xz-utils' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n",
                      "markdown": "`  make \\\n  xz-utils' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n  && curl --retry 6 -L -sfo jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  libxslt-dev \\\n  make \\\n  xz-utils' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "  libxslt-dev \\\n  make \\\n  xz-utils' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n",
                      "markdown": "`  libxslt-dev \\\n  make \\\n  xz-utils' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 9,
                  "endLine": 34,
                  "endColumn": 15,
                  "snippet": {
                    "text": "COPY shared/build-scripts/ /build-scripts\nCOPY patches/ ${BUILD_DIR}/patches\n\n# Install Ruby from source\nRUN buildDeps=' \\\n  autoconf \\\n  bison \\\n",
                    "rendered": {
                      "text": "COPY shared/build-scripts/ /build-scripts\nCOPY patches/ ${BUILD_DIR}/patches\n\n# Install Ruby from source\nRUN buildDeps=' \\\n  autoconf \\\n  bison \\\n",
                      "markdown": "`COPY shared/build-scripts/ /build-scripts\nCOPY patches/ ${BUILD_DIR}/patches\n\n# Install Ruby from source\nRUN buildDeps=' \\\n  autoconf \\\n  bison \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 4,
                  "endLine": 17,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n# install development deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    libffi-dev \\\n    libgdbm6 \\\n    libssl-dev \\\n",
                    "rendered": {
                      "text": "\n# install development deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    libffi-dev \\\n    libgdbm6 \\\n    libssl-dev \\\n",
                      "markdown": "`\n# install development deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    libffi-dev \\\n    libgdbm6 \\\n    libssl-dev \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "endLine": 16,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ARG JEMALLOC_VERSION=5.3.0\n\n# install development deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    libffi-dev \\\n    libgdbm6 \\\n",
                    "rendered": {
                      "text": "ARG JEMALLOC_VERSION=5.3.0\n\n# install development deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    libffi-dev \\\n    libgdbm6 \\\n",
                      "markdown": "`ARG JEMALLOC_VERSION=5.3.0\n\n# install development deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    libffi-dev \\\n    libgdbm6 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 67,
                  "endLine": 11,
                  "endColumn": 76,
                  "snippet": {
                    "text": "COPY --from=gitlab-rust /assets /\n\nARG BUILD_DIR=/tmp/build\n# Requires Ruby 3.1 or newer, because older versions do not support OpenSSL 3.\nARG RUBY_VERSION=3.2.5\nARG JEMALLOC_VERSION=5.3.0\n\n",
                    "rendered": {
                      "text": "COPY --from=gitlab-rust /assets /\n\nARG BUILD_DIR=/tmp/build\n# Requires Ruby 3.1 or newer, because older versions do not support OpenSSL 3.\nARG RUBY_VERSION=3.2.5\nARG JEMALLOC_VERSION=5.3.0\n\n",
                      "markdown": "`COPY --from=gitlab-rust /assets /\n\nARG BUILD_DIR=/tmp/build\n# Requires Ruby 3.1 or newer, because older versions do not support OpenSSL 3.\nARG RUBY_VERSION=3.2.5\nARG JEMALLOC_VERSION=5.3.0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 10,
                  "endLine": 11,
                  "endColumn": 16,
                  "snippet": {
                    "text": "COPY --from=gitlab-rust /assets /\n\nARG BUILD_DIR=/tmp/build\n# Requires Ruby 3.1 or newer, because older versions do not support OpenSSL 3.\nARG RUBY_VERSION=3.2.5\nARG JEMALLOC_VERSION=5.3.0\n\n",
                    "rendered": {
                      "text": "COPY --from=gitlab-rust /assets /\n\nARG BUILD_DIR=/tmp/build\n# Requires Ruby 3.1 or newer, because older versions do not support OpenSSL 3.\nARG RUBY_VERSION=3.2.5\nARG JEMALLOC_VERSION=5.3.0\n\n",
                      "markdown": "`COPY --from=gitlab-rust /assets /\n\nARG BUILD_DIR=/tmp/build\n# Requires Ruby 3.1 or newer, because older versions do not support OpenSSL 3.\nARG RUBY_VERSION=3.2.5\nARG JEMALLOC_VERSION=5.3.0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 48,
                  "endLine": 49,
                  "endColumn": 4,
                  "snippet": {
                    "text": "## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nCMD [ \"irb\" ]\n",
                    "rendered": {
                      "text": "## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nCMD [ \"irb\" ]\n",
                      "markdown": "`## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nCMD [ \"irb\" ]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 38,
                  "endLine": 41,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\n# copy libstdc++ libraries required by ruby from ubi-minimal image since they do not exist in ubi-micro image\n# original package: libstdc++, src: gcc\nCOPY --from=build /usr/lib64/libstdc++.so* /usr/lib64/\n\n",
                    "rendered": {
                      "text": "\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\n# copy libstdc++ libraries required by ruby from ubi-minimal image since they do not exist in ubi-micro image\n# original package: libstdc++, src: gcc\nCOPY --from=build /usr/lib64/libstdc++.so* /usr/lib64/\n\n",
                      "markdown": "`\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\n# copy libstdc++ libraries required by ruby from ubi-minimal image since they do not exist in ubi-micro image\n# original package: libstdc++, src: gcc\nCOPY --from=build /usr/lib64/libstdc++.so* /usr/lib64/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 6,
                  "endLine": 20,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 ncurses libedit diffutils libyaml-devel \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\nFROM ${GITLAB_BASE_IMAGE}\n",
                    "rendered": {
                      "text": "RUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 ncurses libedit diffutils libyaml-devel \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\nFROM ${GITLAB_BASE_IMAGE}\n",
                      "markdown": "`RUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 ncurses libedit diffutils libyaml-devel \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\nFROM ${GITLAB_BASE_IMAGE}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\n# Install runtime deps. openssh-client is required so that SSH client binaries\n",
                    "rendered": {
                      "text": "    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\n# Install runtime deps. openssh-client is required so that SSH client binaries\n",
                      "markdown": "`    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\n# Install runtime deps. openssh-client is required so that SSH client binaries\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "RUN chown -R $GITLAB_USER:$GITLAB_USER /scripts\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n",
                    "rendered": {
                      "text": "RUN chown -R $GITLAB_USER:$GITLAB_USER /scripts\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n",
                      "markdown": "`RUN chown -R $GITLAB_USER:$GITLAB_USER /scripts\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 11,
                  "endLine": 30,
                  "endColumn": 19,
                  "snippet": {
                    "text": "# are present for repository mirroring.\n# xtail is necessary for logs that are tailed after the pod starts\n# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/1957\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-client xtail\n\n# Add scripts\n",
                    "rendered": {
                      "text": "# are present for repository mirroring.\n# xtail is necessary for logs that are tailed after the pod starts\n# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/1957\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-client xtail\n\n# Add scripts\n",
                      "markdown": "`# are present for repository mirroring.\n# xtail is necessary for logs that are tailed after the pod starts\n# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/1957\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-client xtail\n\n# Add scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# Add scripts\nCOPY scripts/  /scripts/\n\nRUN chown -R $GITLAB_USER:$GITLAB_USER /scripts\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                    "rendered": {
                      "text": "# Add scripts\nCOPY scripts/  /scripts/\n\nRUN chown -R $GITLAB_USER:$GITLAB_USER /scripts\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                      "markdown": "`# Add scripts\nCOPY scripts/  /scripts/\n\nRUN chown -R $GITLAB_USER:$GITLAB_USER /scripts\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6,
                  "endLine": 31,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# xtail is necessary for logs that are tailed after the pod starts\n# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/1957\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-client xtail\n\n# Add scripts\nCOPY scripts/  /scripts/\n",
                    "rendered": {
                      "text": "# xtail is necessary for logs that are tailed after the pod starts\n# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/1957\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-client xtail\n\n# Add scripts\nCOPY scripts/  /scripts/\n",
                      "markdown": "`# xtail is necessary for logs that are tailed after the pod starts\n# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/1957\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-client xtail\n\n# Add scripts\nCOPY scripts/  /scripts/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 12,
                  "snippet": {
                    "text": "# are present for repository mirroring.\n# xtail is necessary for logs that are tailed after the pod starts\n# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/1957\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-client xtail\n\n# Add scripts\n",
                    "rendered": {
                      "text": "# are present for repository mirroring.\n# xtail is necessary for logs that are tailed after the pod starts\n# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/1957\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-client xtail\n\n# Add scripts\n",
                      "markdown": "`# are present for repository mirroring.\n# xtail is necessary for logs that are tailed after the pod starts\n# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/1957\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-client xtail\n\n# Add scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 58,
                  "endLine": 26,
                  "endColumn": 63,
                  "snippet": {
                    "text": "ENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\n# Install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\n# xtail is necessary for logs that are tailed after the pod starts\n# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/1957\n",
                    "rendered": {
                      "text": "ENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\n# Install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\n# xtail is necessary for logs that are tailed after the pod starts\n# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/1957\n",
                      "markdown": "`ENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\n# Install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\n# xtail is necessary for logs that are tailed after the pod starts\n# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/1957\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 26,
                  "endLine": 24,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\n# Install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\n",
                    "rendered": {
                      "text": "    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\n# Install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\n",
                      "markdown": "`    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\n# Install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 23,
                  "endColumn": 4,
                  "snippet": {
                    "text": "RUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\n# Install runtime deps. openssh-client is required so that SSH client binaries\n",
                    "rendered": {
                      "text": "RUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\n# Install runtime deps. openssh-client is required so that SSH client binaries\n",
                      "markdown": "`RUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\n# Install runtime deps. openssh-client is required so that SSH client binaries\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3,
                  "endLine": 19,
                  "endColumn": 13,
                  "snippet": {
                    "text": "COPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\nRUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\n",
                    "rendered": {
                      "text": "COPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\nRUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\n",
                      "markdown": "`COPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\nRUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 49,
                  "endLine": 18,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n# BEGIN python install\nCOPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\nRUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n",
                    "rendered": {
                      "text": "\n# BEGIN python install\nCOPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\nRUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n",
                      "markdown": "`\n# BEGIN python install\nCOPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\nRUN ldconfig \\\n    && /usr/local/bin/pip3 install --compile docutils==${DOCUTILS_VERSION}\n# END python install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      summary=\"Sidekiq daemon.\" \\\n      description=\"Sidekiq daemon.\"\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n",
                    "rendered": {
                      "text": "      summary=\"Sidekiq daemon.\" \\\n      description=\"Sidekiq daemon.\"\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n",
                      "markdown": "`      summary=\"Sidekiq daemon.\" \\\n      description=\"Sidekiq daemon.\"\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 52,
                  "endLine": 70,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 68,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Declare /var/log volume after initial log files\n# are written to the perms can be fixed\nVOLUME /var/log\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "# Declare /var/log volume after initial log files\n# are written to the perms can be fixed\nVOLUME /var/log\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`# Declare /var/log volume after initial log files\n# are written to the perms can be fixed\nVOLUME /var/log\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 12,
                  "endLine": 24,
                  "endColumn": 20,
                  "snippet": {
                    "text": "ADD gitlab-logger.tar.gz ${DNF_INSTALL_ROOT}/usr/local/bin/\n\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts/\nRUN microdnf update -y \\\n    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -u ${UID} -m ${GITLAB_USER} -R ${DNF_INSTALL_ROOT}/\n\n",
                    "rendered": {
                      "text": "ADD gitlab-logger.tar.gz ${DNF_INSTALL_ROOT}/usr/local/bin/\n\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts/\nRUN microdnf update -y \\\n    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -u ${UID} -m ${GITLAB_USER} -R ${DNF_INSTALL_ROOT}/\n\n",
                      "markdown": "`ADD gitlab-logger.tar.gz ${DNF_INSTALL_ROOT}/usr/local/bin/\n\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts/\nRUN microdnf update -y \\\n    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -u ${UID} -m ${GITLAB_USER} -R ${DNF_INSTALL_ROOT}/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 26,
                  "endLine": 54,
                  "endColumn": 4,
                  "snippet": {
                    "text": "      summary=\"Sidekiq daemon.\" \\\n      description=\"Sidekiq daemon.\"\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\n",
                    "rendered": {
                      "text": "      summary=\"Sidekiq daemon.\" \\\n      description=\"Sidekiq daemon.\"\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\n",
                      "markdown": "`      summary=\"Sidekiq daemon.\" \\\n      description=\"Sidekiq daemon.\"\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 53,
                  "endColumn": 4,
                  "snippet": {
                    "text": "      release=${GITLAB_VERSION} \\\n      summary=\"Sidekiq daemon.\" \\\n      description=\"Sidekiq daemon.\"\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n",
                    "rendered": {
                      "text": "      release=${GITLAB_VERSION} \\\n      summary=\"Sidekiq daemon.\" \\\n      description=\"Sidekiq daemon.\"\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n",
                      "markdown": "`      release=${GITLAB_VERSION} \\\n      summary=\"Sidekiq daemon.\" \\\n      description=\"Sidekiq daemon.\"\n\nENV SIDEKIQ_CONCURRENCY=25\nENV SIDEKIQ_TIMEOUT=25\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 6,
                  "endLine": 33,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && rm ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && rm -f /install-root/var/lib/dnf/history*\n\nFROM ${RAILS_IMAGE}\n",
                    "rendered": {
                      "text": "    && rm ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && rm -f /install-root/var/lib/dnf/history*\n\nFROM ${RAILS_IMAGE}\n",
                      "markdown": "`    && rm ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && rm -f /install-root/var/lib/dnf/history*\n\nFROM ${RAILS_IMAGE}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 6,
                  "endLine": 32,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && rm -f /install-root/var/lib/dnf/history*\n\n",
                    "rendered": {
                      "text": "    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && rm -f /install-root/var/lib/dnf/history*\n\n",
                      "markdown": "`    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && rm -f /install-root/var/lib/dnf/history*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-kas/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 6,
                  "endLine": 34,
                  "endColumn": 10,
                  "snippet": {
                    "text": "       FIPS_MODE=\"${FIPS_MODE}\" \\\n       make kas \\\n    && mkdir /assets/licenses \\\n    && cp LICENSE /assets/licenses/GitLab.txt\n",
                    "rendered": {
                      "text": "       FIPS_MODE=\"${FIPS_MODE}\" \\\n       make kas \\\n    && mkdir /assets/licenses \\\n    && cp LICENSE /assets/licenses/GitLab.txt\n",
                      "markdown": "`       FIPS_MODE=\"${FIPS_MODE}\" \\\n       make kas \\\n    && mkdir /assets/licenses \\\n    && cp LICENSE /assets/licenses/GitLab.txt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-kas/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 11,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\nARG FIPS_MODE=\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n",
                    "rendered": {
                      "text": "ARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\nARG FIPS_MODE=\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n",
                      "markdown": "`ARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\nARG FIPS_MODE=\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-kas/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 11,
                  "endLine": 17,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n",
                    "rendered": {
                      "text": "ENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n",
                      "markdown": "`ENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-kas/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 6,
                  "endLine": 23,
                  "endColumn": 11,
                  "snippet": {
                    "text": "{GITLAB_KAS_VERSION}\" \\\n    && curl -fL --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-kas.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n    && mkdir -p \"${BUILD_DIR}\" \\\n    && tar -xjf gitlab-kas.tar.bz2 -C \"${BUILD_DIR}\" --strip-components=1 \\\n    && rm gitlab-kas.tar.bz2 \\\n    && cd \"${BUILD_DIR}\" \\\n    && echo \"Building kas binary\" \\\n    && GIT_COMMIT=\"${GITLAB_KAS_VERSION}\" GIT_TAG=\"${GITLAB_KAS_VERSION}\" TARGET_DIRECTORY=/usr/bin make kas\n\n## FINAL IMAGE ##\n\n# build imag",
                    "rendered": {
                      "text": "{GITLAB_KAS_VERSION}\" \\\n    && curl -fL --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-kas.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n    && mkdir -p \"${BUILD_DIR}\" \\\n    && tar -xjf gitlab-kas.tar.bz2 -C \"${BUILD_DIR}\" --strip-components=1 \\\n    && rm gitlab-kas.tar.bz2 \\\n    && cd \"${BUILD_DIR}\" \\\n    && echo \"Building kas binary\" \\\n    && GIT_COMMIT=\"${GITLAB_KAS_VERSION}\" GIT_TAG=\"${GITLAB_KAS_VERSION}\" TARGET_DIRECTORY=/usr/bin make kas\n\n## FINAL IMAGE ##\n\n# build imag",
                      "markdown": "`{GITLAB_KAS_VERSION}\" \\\n    && curl -fL --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-kas.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n    && mkdir -p \"${BUILD_DIR}\" \\\n    && tar -xjf gitlab-kas.tar.bz2 -C \"${BUILD_DIR}\" --strip-components=1 \\\n    && rm gitlab-kas.tar.bz2 \\\n    && cd \"${BUILD_DIR}\" \\\n    && echo \"Building kas binary\" \\\n    && GIT_COMMIT=\"${GITLAB_KAS_VERSION}\" GIT_TAG=\"${GITLAB_KAS_VERSION}\" TARGET_DIRECTORY=/usr/bin make kas\n\n## FINAL IMAGE ##\n\n# build imag`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-kas/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 6,
                  "endLine": 21,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n    && curl -fL --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-kas.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n    && mkdir -p \"${BUILD_DIR}\" \\\n    && tar -xjf gitlab-kas.tar.bz2 -C \"${BUILD_DIR}\" --strip-components=1 \\\n    && rm gitlab-kas.tar.bz2 \\\n",
                    "rendered": {
                      "text": "\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n    && curl -fL --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-kas.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n    && mkdir -p \"${BUILD_DIR}\" \\\n    && tar -xjf gitlab-kas.tar.bz2 -C \"${BUILD_DIR}\" --strip-components=1 \\\n    && rm gitlab-kas.tar.bz2 \\\n",
                      "markdown": "`\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n    && curl -fL --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-kas.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n    && mkdir -p \"${BUILD_DIR}\" \\\n    && tar -xjf gitlab-kas.tar.bz2 -C \"${BUILD_DIR}\" --strip-components=1 \\\n    && rm gitlab-kas.tar.bz2 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-kas/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 56,
                  "endLine": 18,
                  "snippet": {
                    "text": "ENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n    && curl -fL --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-kas.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n",
                    "rendered": {
                      "text": "ENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n    && curl -fL --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-kas.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n",
                      "markdown": "`ENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n    && curl -fL --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-kas.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-kas/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 21,
                  "endLine": 17,
                  "endColumn": 30,
                  "snippet": {
                    "text": "ENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n",
                    "rendered": {
                      "text": "ENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n",
                      "markdown": "`ENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-kas/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 17,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n",
                    "rendered": {
                      "text": "ENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n",
                      "markdown": "`ENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n\n# install kas\nRUN echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fcluster-integration%2Fgitlab-agent/repository/archive.tar.bz2?sha=${GITLAB_KAS_VERSION}\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-kas/Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 14,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\nARG TARGETARCH\n\nENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n",
                    "rendered": {
                      "text": "ARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\nARG TARGETARCH\n\nENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n",
                      "markdown": "`ARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\nARG TARGETARCH\n\nENV GOTOOLCHAIN=local\n\n# install debian packages\nRUN apt-get update && apt-get install -y build-essential git\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN /scripts/build\n\n# The contents of /assets will be extracted by copy_assets in build.sh\nRUN mv /target /assets\n",
                    "rendered": {
                      "text": "RUN /scripts/build\n\n# The contents of /assets will be extracted by copy_assets in build.sh\nRUN mv /target /assets\n",
                      "markdown": "`RUN /scripts/build\n\n# The contents of /assets will be extracted by copy_assets in build.sh\nRUN mv /target /assets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 13,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GITLAB_LOGGER_SHA256=b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\n\nENV GITLAB_LOGGER_SOURCE_URL=\"https://gitlab.com/gitlab-org/cloud-native/gitlab-logger/-/archive/${GITLAB_LOGGER_VERSION}/gitlab-logger-${GITLAB_LOGGER_VERSION}.tar.gz\"\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n",
                    "rendered": {
                      "text": "ARG GITLAB_LOGGER_SHA256=b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\n\nENV GITLAB_LOGGER_SOURCE_URL=\"https://gitlab.com/gitlab-org/cloud-native/gitlab-logger/-/archive/${GITLAB_LOGGER_VERSION}/gitlab-logger-${GITLAB_LOGGER_VERSION}.tar.gz\"\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n",
                      "markdown": "`ARG GITLAB_LOGGER_SHA256=b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\n\nENV GITLAB_LOGGER_SOURCE_URL=\"https://gitlab.com/gitlab-org/cloud-native/gitlab-logger/-/archive/${GITLAB_LOGGER_VERSION}/gitlab-logger-${GITLAB_LOGGER_VERSION}.tar.gz\"\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 11,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nARG GITLAB_LOGGER_VERSION=v3.0.0\nARG GITLAB_LOGGER_SHA256=b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\n\nENV GITLAB_LOGGER_SOURCE_URL=\"https://gitlab.com/gitlab-org/cloud-native/gitlab-logger/-/archive/${GITLAB_LOGGER_VERSION}/gitlab-logger-${GITLAB_LOGGER_VERSION}.tar.gz\"\n\nENV GOTOOLCHAIN=local\n\n",
                    "rendered": {
                      "text": "\nARG GITLAB_LOGGER_VERSION=v3.0.0\nARG GITLAB_LOGGER_SHA256=b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\n\nENV GITLAB_LOGGER_SOURCE_URL=\"https://gitlab.com/gitlab-org/cloud-native/gitlab-logger/-/archive/${GITLAB_LOGGER_VERSION}/gitlab-logger-${GITLAB_LOGGER_VERSION}.tar.gz\"\n\nENV GOTOOLCHAIN=local\n\n",
                      "markdown": "`\nARG GITLAB_LOGGER_VERSION=v3.0.0\nARG GITLAB_LOGGER_SHA256=b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\n\nENV GITLAB_LOGGER_SOURCE_URL=\"https://gitlab.com/gitlab-org/cloud-native/gitlab-logger/-/archive/${GITLAB_LOGGER_VERSION}/gitlab-logger-${GITLAB_LOGGER_VERSION}.tar.gz\"\n\nENV GOTOOLCHAIN=local\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 5,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG BUILD_IMAGE=\n\nFROM ${BUILD_IMAGE}\n\nENV LANG=C.UTF-8\n\n\nARG GITLAB_LOGGER_VERSION=v3.0.0\n",
                    "rendered": {
                      "text": "ARG BUILD_IMAGE=\n\nFROM ${BUILD_IMAGE}\n\nENV LANG=C.UTF-8\n\n\nARG GITLAB_LOGGER_VERSION=v3.0.0\n",
                      "markdown": "`ARG BUILD_IMAGE=\n\nFROM ${BUILD_IMAGE}\n\nENV LANG=C.UTF-8\n\n\nARG GITLAB_LOGGER_VERSION=v3.0.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 12,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GITLAB_LOGGER_SHA256=b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\n\nENV GITLAB_LOGGER_SOURCE_URL=\"https://gitlab.com/gitlab-org/cloud-native/gitlab-logger/-/archive/${GITLAB_LOGGER_VERSION}/gitlab-logger-${GITLAB_LOGGER_VERSION}.tar.gz\"\n\nENV GOTOOLCHAIN=local\n\nRUN mkdir -p /build /target\nCOPY scripts/ /scripts\n",
                    "rendered": {
                      "text": "ARG GITLAB_LOGGER_SHA256=b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\n\nENV GITLAB_LOGGER_SOURCE_URL=\"https://gitlab.com/gitlab-org/cloud-native/gitlab-logger/-/archive/${GITLAB_LOGGER_VERSION}/gitlab-logger-${GITLAB_LOGGER_VERSION}.tar.gz\"\n\nENV GOTOOLCHAIN=local\n\nRUN mkdir -p /build /target\nCOPY scripts/ /scripts\n",
                      "markdown": "`ARG GITLAB_LOGGER_SHA256=b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\n\nENV GITLAB_LOGGER_SOURCE_URL=\"https://gitlab.com/gitlab-org/cloud-native/gitlab-logger/-/archive/${GITLAB_LOGGER_VERSION}/gitlab-logger-${GITLAB_LOGGER_VERSION}.tar.gz\"\n\nENV GOTOOLCHAIN=local\n\nRUN mkdir -p /build /target\nCOPY scripts/ /scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/Dockerfile"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 10,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nARG GITLAB_LOGGER_VERSION=v3.0.0\nARG GITLAB_LOGGER_SHA256=b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\n\nENV GITLAB_LOGGER_SOURCE_URL=\"https://gitlab.com/gitlab-org/cloud-native/gitlab-logger/-/archive/${GITLAB_LOGGER_VERSION}/gitlab-logger-${GITLAB_LOGGER_VERSION}.tar.gz\"\n\nENV GOTOOLCHAIN=local\n\n",
                    "rendered": {
                      "text": "\nARG GITLAB_LOGGER_VERSION=v3.0.0\nARG GITLAB_LOGGER_SHA256=b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\n\nENV GITLAB_LOGGER_SOURCE_URL=\"https://gitlab.com/gitlab-org/cloud-native/gitlab-logger/-/archive/${GITLAB_LOGGER_VERSION}/gitlab-logger-${GITLAB_LOGGER_VERSION}.tar.gz\"\n\nENV GOTOOLCHAIN=local\n\n",
                      "markdown": "`\nARG GITLAB_LOGGER_VERSION=v3.0.0\nARG GITLAB_LOGGER_SHA256=b6bca21e3eba525334f4b140d9d9405181a25821365ccd9065402fa050af78d5\n\nENV GITLAB_LOGGER_SOURCE_URL=\"https://gitlab.com/gitlab-org/cloud-native/gitlab-logger/-/archive/${GITLAB_LOGGER_VERSION}/gitlab-logger-${GITLAB_LOGGER_VERSION}.tar.gz\"\n\nENV GOTOOLCHAIN=local\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/000_rhel_disable_subscription.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 3,
                  "endLine": 7,
                  "endColumn": 8,
                  "snippet": {
                    "text": "(>&2 echo \"RHEL: Disable subscription manager, use only official UBI repos\")\n# Disable all repositories (to limit RHEL host repositories) and only use official UBI repositories\nif [ -e /etc/dnf/plugins/subscription-manager.conf ]; then\n    sed -i \"s/enabled=1/enabled=0/\" /etc/dnf/plugins/subscription-manager.conf\nfi\n",
                    "rendered": {
                      "text": "(>&2 echo \"RHEL: Disable subscription manager, use only official UBI repos\")\n# Disable all repositories (to limit RHEL host repositories) and only use official UBI repositories\nif [ -e /etc/dnf/plugins/subscription-manager.conf ]; then\n    sed -i \"s/enabled=1/enabled=0/\" /etc/dnf/plugins/subscription-manager.conf\nfi\n",
                      "markdown": "`(>&2 echo \"RHEL: Disable subscription manager, use only official UBI repos\")\n# Disable all repositories (to limit RHEL host repositories) and only use official UBI repositories\nif [ -e /etc/dnf/plugins/subscription-manager.conf ]; then\n    sed -i \"s/enabled=1/enabled=0/\" /etc/dnf/plugins/subscription-manager.conf\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_accounts_umask_etc_bashrc.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 1,
                  "endLine": 14,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n\ngrep -q \"^[^#]*\\bumask\" /etc/bashrc && \\\n  sed -i -E -e \"s/^([^#]*\\bumask)[[:space:]]+[[:digit:]]+/\\1 $var_accounts_user_umask/g\" /etc/bashrc\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/bashrc\nfi\n",
                    "rendered": {
                      "text": "\n\ngrep -q \"^[^#]*\\bumask\" /etc/bashrc && \\\n  sed -i -E -e \"s/^([^#]*\\bumask)[[:space:]]+[[:digit:]]+/\\1 $var_accounts_user_umask/g\" /etc/bashrc\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/bashrc\nfi\n",
                      "markdown": "`\n\ngrep -q \"^[^#]*\\bumask\" /etc/bashrc && \\\n  sed -i -E -e \"s/^([^#]*\\bumask)[[:space:]]+[[:digit:]]+/\\1 $var_accounts_user_umask/g\" /etc/bashrc\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/bashrc\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_accounts_umask_etc_bashrc.sh"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 13,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nvar_accounts_user_umask='027'\n\n\ngrep -q \"^[^#]*\\bumask\" /etc/bashrc && \\\n  sed -i -E -e \"s/^([^#]*\\bumask)[[:space:]]+[[:digit:]]+/\\1 $var_accounts_user_umask/g\" /etc/bashrc\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/bashrc\n",
                    "rendered": {
                      "text": "\nvar_accounts_user_umask='027'\n\n\ngrep -q \"^[^#]*\\bumask\" /etc/bashrc && \\\n  sed -i -E -e \"s/^([^#]*\\bumask)[[:space:]]+[[:digit:]]+/\\1 $var_accounts_user_umask/g\" /etc/bashrc\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/bashrc\n",
                      "markdown": "`\nvar_accounts_user_umask='027'\n\n\ngrep -q \"^[^#]*\\bumask\" /etc/bashrc && \\\n  sed -i -E -e \"s/^([^#]*\\bumask)[[:space:]]+[[:digit:]]+/\\1 $var_accounts_user_umask/g\" /etc/bashrc\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/bashrc\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 16,
                  "endLine": 48,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\n# Default to non-root user\nUSER 65534:65534\nENV HOME=/tmp/kube",
                    "rendered": {
                      "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\n# Default to non-root user\nUSER 65534:65534\nENV HOME=/tmp/kube",
                      "markdown": "`    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\n# Default to non-root user\nUSER 65534:65534\nENV HOME=/tmp/kube`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 117,
                  "endLine": 20,
                  "endColumn": 126,
                  "snippet": {
                    "text": "ADD kubectl.tar.gz ${DNF_INSTALL_ROOT}/\n\nRUN chmod +x ${DNF_INSTALL_ROOT}/usr/local/bin/{kubectl,yq} \\\n    && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 openssh openssl gawk \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                    "rendered": {
                      "text": "ADD kubectl.tar.gz ${DNF_INSTALL_ROOT}/\n\nRUN chmod +x ${DNF_INSTALL_ROOT}/usr/local/bin/{kubectl,yq} \\\n    && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 openssh openssl gawk \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                      "markdown": "`ADD kubectl.tar.gz ${DNF_INSTALL_ROOT}/\n\nRUN chmod +x ${DNF_INSTALL_ROOT}/usr/local/bin/{kubectl,yq} \\\n    && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 openssh openssl gawk \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3,
                  "endLine": 19,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nADD kubectl.tar.gz ${DNF_INSTALL_ROOT}/\n\nRUN chmod +x ${DNF_INSTALL_ROOT}/usr/local/bin/{kubectl,yq} \\\n    && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 openssh openssl gawk \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n",
                    "rendered": {
                      "text": "\nADD kubectl.tar.gz ${DNF_INSTALL_ROOT}/\n\nRUN chmod +x ${DNF_INSTALL_ROOT}/usr/local/bin/{kubectl,yq} \\\n    && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 openssh openssl gawk \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n",
                      "markdown": "`\nADD kubectl.tar.gz ${DNF_INSTALL_ROOT}/\n\nRUN chmod +x ${DNF_INSTALL_ROOT}/usr/local/bin/{kubectl,yq} \\\n    && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 openssh openssl gawk \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm ${DNF_INSTALL_ROOT}/usr/libexec/openssh/ssh-keysign \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/danger/ruby_upgrade/Dangerfile"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 36,
                  "endLine": 10,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\ndiff = git.diff_for_file(\".gitlab-ci.yml\")\n\nwarn format(RUBY_UPGRADE_MESSAGE) if diff && diff.patch =~ /[+-]+.*RUBY_VERSION/\n",
                    "rendered": {
                      "text": "\ndiff = git.diff_for_file(\".gitlab-ci.yml\")\n\nwarn format(RUBY_UPGRADE_MESSAGE) if diff && diff.patch =~ /[+-]+.*RUBY_VERSION/\n",
                      "markdown": "`\ndiff = git.diff_for_file(\".gitlab-ci.yml\")\n\nwarn format(RUBY_UPGRADE_MESSAGE) if diff && diff.patch =~ /[+-]+.*RUBY_VERSION/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/danger/ruby_upgrade/Dangerfile"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 8,
                  "endColumn": 5,
                  "snippet": {
                    "text": "Please make sure this merge request follows all standards established\nwithin the [Ruby upgrade guidelines](https://docs.gitlab.com/ee/development/ruby_upgrade.html).\nMSG\n\ndiff = git.diff_for_file(\".gitlab-ci.yml\")\n\nwarn format(RUBY_UPGRADE_MESSAGE) if diff && diff.patch =~ /[+-]+.*RUBY_VERSION/\n",
                    "rendered": {
                      "text": "Please make sure this merge request follows all standards established\nwithin the [Ruby upgrade guidelines](https://docs.gitlab.com/ee/development/ruby_upgrade.html).\nMSG\n\ndiff = git.diff_for_file(\".gitlab-ci.yml\")\n\nwarn format(RUBY_UPGRADE_MESSAGE) if diff && diff.patch =~ /[+-]+.*RUBY_VERSION/\n",
                      "markdown": "`Please make sure this merge request follows all standards established\nwithin the [Ruby upgrade guidelines](https://docs.gitlab.com/ee/development/ruby_upgrade.html).\nMSG\n\ndiff = git.diff_for_file(\".gitlab-ci.yml\")\n\nwarn format(RUBY_UPGRADE_MESSAGE) if diff && diff.patch =~ /[+-]+.*RUBY_VERSION/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/danger/ruby_upgrade/Dangerfile"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 34,
                  "endLine": 2,
                  "endColumn": 40,
                  "snippet": {
                    "text": "RUBY_UPGRADE_MESSAGE = <<~MSG.freeze\nThis merge request is updating the Ruby version.\n\nPlease make sure this merge request follows all standards established\nwithin the [Ruby upgrade guidelines](https://docs.gitlab.com/ee/development/ruby_upgrade.html).\n",
                    "rendered": {
                      "text": "RUBY_UPGRADE_MESSAGE = <<~MSG.freeze\nThis merge request is updating the Ruby version.\n\nPlease make sure this merge request follows all standards established\nwithin the [Ruby upgrade guidelines](https://docs.gitlab.com/ee/development/ruby_upgrade.html).\n",
                      "markdown": "`RUBY_UPGRADE_MESSAGE = <<~MSG.freeze\nThis merge request is updating the Ruby version.\n\nPlease make sure this merge request follows all standards established\nwithin the [Ruby upgrade guidelines](https://docs.gitlab.com/ee/development/ruby_upgrade.html).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6,
                  "endLine": 22,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && FIPS_MODE=${FIPS_MODE} make -C /srv/gitlab/workhorse install \\\n    && mkdir /assets/licenses && cp /licenses/GitLab.txt /assets/licenses/ \\\n    && cp -R --parents \\\n        /usr/local/bin/gitlab-* \\\n        /srv/gitlab/public \\\n        /srv/gitlab/doc \\\n",
                    "rendered": {
                      "text": "    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && FIPS_MODE=${FIPS_MODE} make -C /srv/gitlab/workhorse install \\\n    && mkdir /assets/licenses && cp /licenses/GitLab.txt /assets/licenses/ \\\n    && cp -R --parents \\\n        /usr/local/bin/gitlab-* \\\n        /srv/gitlab/public \\\n        /srv/gitlab/doc \\\n",
                      "markdown": "`    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && FIPS_MODE=${FIPS_MODE} make -C /srv/gitlab/workhorse install \\\n    && mkdir /assets/licenses && cp /licenses/GitLab.txt /assets/licenses/ \\\n    && cp -R --parents \\\n        /usr/local/bin/gitlab-* \\\n        /srv/gitlab/public \\\n        /srv/gitlab/doc \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 32,
                  "endLine": 21,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    && mkdir /assets \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && FIPS_MODE=${FIPS_MODE} make -C /srv/gitlab/workhorse install \\\n    && mkdir /assets/licenses && cp /licenses/GitLab.txt /assets/licenses/ \\\n    && cp -R --parents \\\n        /usr/local/bin/gitlab-* \\\n        /srv/gitlab/public \\\n",
                    "rendered": {
                      "text": "    && mkdir /assets \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && FIPS_MODE=${FIPS_MODE} make -C /srv/gitlab/workhorse install \\\n    && mkdir /assets/licenses && cp /licenses/GitLab.txt /assets/licenses/ \\\n    && cp -R --parents \\\n        /usr/local/bin/gitlab-* \\\n        /srv/gitlab/public \\\n",
                      "markdown": "`    && mkdir /assets \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && FIPS_MODE=${FIPS_MODE} make -C /srv/gitlab/workhorse install \\\n    && mkdir /assets/licenses && cp /licenses/GitLab.txt /assets/licenses/ \\\n    && cp -R --parents \\\n        /usr/local/bin/gitlab-* \\\n        /srv/gitlab/public \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 17,
                  "endColumn": 13,
                  "snippet": {
                    "text": "ADD gitlab-go.tar.gz /\nADD gitlab-rails-ee.tar.gz /\n\nRUN ldconfig \\\n    && mkdir /assets \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && FIPS_MODE=${FIPS_MODE} make -C /srv/gitlab/workhorse install \\\n",
                    "rendered": {
                      "text": "ADD gitlab-go.tar.gz /\nADD gitlab-rails-ee.tar.gz /\n\nRUN ldconfig \\\n    && mkdir /assets \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && FIPS_MODE=${FIPS_MODE} make -C /srv/gitlab/workhorse install \\\n",
                      "markdown": "`ADD gitlab-go.tar.gz /\nADD gitlab-rails-ee.tar.gz /\n\nRUN ldconfig \\\n    && mkdir /assets \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && FIPS_MODE=${FIPS_MODE} make -C /srv/gitlab/workhorse install \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 12,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG API_URL=\nARG API_TOKEN=\nARG FIPS_MODE=\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\nADD gitlab-rails-ee.tar.gz /\n",
                    "rendered": {
                      "text": "ARG API_URL=\nARG API_TOKEN=\nARG FIPS_MODE=\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\nADD gitlab-rails-ee.tar.gz /\n",
                      "markdown": "`ARG API_URL=\nARG API_TOKEN=\nARG FIPS_MODE=\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\nADD gitlab-rails-ee.tar.gz /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/scripts/healthcheck"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 5,
                  "endColumn": 5,
                  "snippet": {
                    "text": "#!/bin/bash\n\nset -e\n\ncurl --retry 6 -sqf \"http://127.0.0.1:6065/indexer/health\"\n",
                    "rendered": {
                      "text": "#!/bin/bash\n\nset -e\n\ncurl --retry 6 -sqf \"http://127.0.0.1:6065/indexer/health\"\n",
                      "markdown": "`#!/bin/bash\n\nset -e\n\ncurl --retry 6 -sqf \"http://127.0.0.1:6065/indexer/health\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.1/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 20,
                  "endLine": 10,
                  "endColumn": 38,
                  "snippet": {
                    "text": "and malloc allocations statistics.\n\nThis is designed to measure a memory allocations\nin a multi-threaded environments (concurrent requests\nprocessing) with an accurate information about allocated\nmemory within a given execution context.\n\n",
                    "rendered": {
                      "text": "and malloc allocations statistics.\n\nThis is designed to measure a memory allocations\nin a multi-threaded environments (concurrent requests\nprocessing) with an accurate information about allocated\nmemory within a given execution context.\n\n",
                      "markdown": "`and malloc allocations statistics.\n\nThis is designed to measure a memory allocations\nin a multi-threaded environments (concurrent requests\nprocessing) with an accurate information about allocated\nmemory within a given execution context.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.1/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 1,
                  "endLine": 210,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+\n     rb_vm_register_special_exception(ruby_error_stream_closed, rb_eIOError,\n \t\t\t\t     \"stream closed in another thread\");\n \ndiff --git a/vm_core.h b/vm_core.h\nindex 11866b85e5..f36b582cc7 100644\n--- a/vm_core.h\n+++ b/vm_core.h\n",
                    "rendered": {
                      "text": "+\n     rb_vm_register_special_exception(ruby_error_stream_closed, rb_eIOError,\n \t\t\t\t     \"stream closed in another thread\");\n \ndiff --git a/vm_core.h b/vm_core.h\nindex 11866b85e5..f36b582cc7 100644\n--- a/vm_core.h\n+++ b/vm_core.h\n",
                      "markdown": "`+\n     rb_vm_register_special_exception(ruby_error_stream_closed, rb_eIOError,\n \t\t\t\t     \"stream closed in another thread\");\n \ndiff --git a/vm_core.h b/vm_core.h\nindex 11866b85e5..f36b582cc7 100644\n--- a/vm_core.h\n+++ b/vm_core.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.1/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 14,
                  "endLine": 150,
                  "endColumn": 20,
                  "snippet": {
                    "text": "+ruby_threadptr_for_trace_memory_allocations(void)\n+{\n+    // The order of this checks is important due\n+    // to how Ruby VM is initialized\n+    if (GET_VM()->thread_trace_memory_allocations && GET_EC() != NULL) {\n+        return GET_THREAD();\n+    }\n",
                    "rendered": {
                      "text": "+ruby_threadptr_for_trace_memory_allocations(void)\n+{\n+    // The order of this checks is important due\n+    // to how Ruby VM is initialized\n+    if (GET_VM()->thread_trace_memory_allocations && GET_EC() != NULL) {\n+        return GET_THREAD();\n+    }\n",
                      "markdown": "`+ruby_threadptr_for_trace_memory_allocations(void)\n+{\n+    // The order of this checks is important due\n+    // to how Ruby VM is initialized\n+    if (GET_VM()->thread_trace_memory_allocations && GET_EC() != NULL) {\n+        return GET_THREAD();\n+    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.1/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 4,
                  "endLine": 137,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+      assert_operator(by, :>, after[key]-before[key], \"expected the #{key} to change less than #{by}\")\n+    end\n+  end\n+end\ndiff --git a/thread.c b/thread.c\nindex de29340713..c02f2b7945 100644\n--- a/thread.c\n+++ b/thread.c\n",
                    "rendered": {
                      "text": "+      assert_operator(by, :>, after[key]-before[key], \"expected the #{key} to change less than #{by}\")\n+    end\n+  end\n+end\ndiff --git a/thread.c b/thread.c\nindex de29340713..c02f2b7945 100644\n--- a/thread.c\n+++ b/thread.c\n",
                      "markdown": "`+      assert_operator(by, :>, after[key]-before[key], \"expected the #{key} to change less than #{by}\")\n+    end\n+  end\n+end\ndiff --git a/thread.c b/thread.c\nindex de29340713..c02f2b7945 100644\n--- a/thread.c\n+++ b/thread.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.1/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 83,
                  "endLine": 64,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+\n     if (type == MEMOP_TYPE_MALLOC) {\n       retry:\n \tif (malloc_increase > malloc_limit && ruby_native_thread_p() && !dont_gc_val()) {\ndiff --git a/test/ruby/test_thread_trace_memory_allocations.rb b/test/ruby/test_thread_trace_memory_allocations.rb\nnew file mode 100644\nindex 0000000000..2e28151357\n--- /dev/null\n",
                    "rendered": {
                      "text": "+\n     if (type == MEMOP_TYPE_MALLOC) {\n       retry:\n \tif (malloc_increase > malloc_limit && ruby_native_thread_p() && !dont_gc_val()) {\ndiff --git a/test/ruby/test_thread_trace_memory_allocations.rb b/test/ruby/test_thread_trace_memory_allocations.rb\nnew file mode 100644\nindex 0000000000..2e28151357\n--- /dev/null\n",
                      "markdown": "`+\n     if (type == MEMOP_TYPE_MALLOC) {\n       retry:\n \tif (malloc_increase > malloc_limit && ruby_native_thread_p() && !dont_gc_val()) {\ndiff --git a/test/ruby/test_thread_trace_memory_allocations.rb b/test/ruby/test_thread_trace_memory_allocations.rb\nnew file mode 100644\nindex 0000000000..2e28151357\n--- /dev/null\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.1/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 26,
                  "endColumn": 5,
                  "snippet": {
                    "text": " vm_core.h                                     | 17 +++++\n 4 files changed, 159 insertions(+)\n create mode 100644 test/ruby/test_thread_trace_memory_allocations.rb\n\ndiff --git a/gc.c b/gc.c\nindex 030a4627bd..5e57e4bbfd 100644\n--- a/gc.c\n+++ b/gc.c\n",
                    "rendered": {
                      "text": " vm_core.h                                     | 17 +++++\n 4 files changed, 159 insertions(+)\n create mode 100644 test/ruby/test_thread_trace_memory_allocations.rb\n\ndiff --git a/gc.c b/gc.c\nindex 030a4627bd..5e57e4bbfd 100644\n--- a/gc.c\n+++ b/gc.c\n",
                      "markdown": "` vm_core.h                                     | 17 +++++\n 4 files changed, 159 insertions(+)\n create mode 100644 test/ruby/test_thread_trace_memory_allocations.rb\n\ndiff --git a/gc.c b/gc.c\nindex 030a4627bd..5e57e4bbfd 100644\n--- a/gc.c\n+++ b/gc.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.1/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 18,
                  "endLine": 15,
                  "endColumn": 24,
                  "snippet": {
                    "text": "memory within a given execution context.\n\nExample: Measure memory pressure generated by a given\nrequests to easier find requests with a lot of allocations.\n\nRef: https://gitlab.com/gitlab-org/gitlab/-/issues/296530\n---\n",
                    "rendered": {
                      "text": "memory within a given execution context.\n\nExample: Measure memory pressure generated by a given\nrequests to easier find requests with a lot of allocations.\n\nRef: https://gitlab.com/gitlab-org/gitlab/-/issues/296530\n---\n",
                      "markdown": "`memory within a given execution context.\n\nExample: Measure memory pressure generated by a given\nrequests to easier find requests with a lot of allocations.\n\nRef: https://gitlab.com/gitlab-org/gitlab/-/issues/296530\n---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.1.5/fiddle-closure.patch"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 13,
                  "endLine": 127,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+                     initialize_rescue, (VALUE)&data);\n }\n \n static VALUE\ndiff --git a/version.h b/version.h\nindex 7c8bc046b33c54..99b715563a17ba 100644\n--- a/version.h\n+++ b/version.h\n",
                    "rendered": {
                      "text": "+                     initialize_rescue, (VALUE)&data);\n }\n \n static VALUE\ndiff --git a/version.h b/version.h\nindex 7c8bc046b33c54..99b715563a17ba 100644\n--- a/version.h\n+++ b/version.h\n",
                      "markdown": "`+                     initialize_rescue, (VALUE)&data);\n }\n \n static VALUE\ndiff --git a/version.h b/version.h\nindex 7c8bc046b33c54..99b715563a17ba 100644\n--- a/version.h\n+++ b/version.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/3.1.5/fiddle-closure.patch"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 20,
                  "endColumn": 5,
                  "snippet": {
                    "text": " ext/fiddle/closure.c | 56 ++++++++++++++++++++++++++++++++++----------\n version.h            |  6 ++---\n 2 files changed, 46 insertions(+), 16 deletions(-)\n\ndiff --git a/ext/fiddle/closure.c b/ext/fiddle/closure.c\nindex 27f448a24f0108..c08ec5940da84c 100644\n--- a/ext/fiddle/closure.c\n+++ b/ext/fiddle/closure.c\n",
                    "rendered": {
                      "text": " ext/fiddle/closure.c | 56 ++++++++++++++++++++++++++++++++++----------\n version.h            |  6 ++---\n 2 files changed, 46 insertions(+), 16 deletions(-)\n\ndiff --git a/ext/fiddle/closure.c b/ext/fiddle/closure.c\nindex 27f448a24f0108..c08ec5940da84c 100644\n--- a/ext/fiddle/closure.c\n+++ b/ext/fiddle/closure.c\n",
                      "markdown": "` ext/fiddle/closure.c | 56 ++++++++++++++++++++++++++++++++++----------\n version.h            |  6 ++---\n 2 files changed, 46 insertions(+), 16 deletions(-)\n\ndiff --git a/ext/fiddle/closure.c b/ext/fiddle/closure.c\nindex 27f448a24f0108..c08ec5940da84c 100644\n--- a/ext/fiddle/closure.c\n+++ b/ext/fiddle/closure.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/2.7/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 20,
                  "endLine": 10,
                  "endColumn": 38,
                  "snippet": {
                    "text": "and malloc allocations statistics.\n\nThis is designed to measure a memory allocations\nin a multi-threaded environments (concurrent requests\nprocessing) with an accurate information about allocated\nmemory within a given execution context.\n\n",
                    "rendered": {
                      "text": "and malloc allocations statistics.\n\nThis is designed to measure a memory allocations\nin a multi-threaded environments (concurrent requests\nprocessing) with an accurate information about allocated\nmemory within a given execution context.\n\n",
                      "markdown": "`and malloc allocations statistics.\n\nThis is designed to measure a memory allocations\nin a multi-threaded environments (concurrent requests\nprocessing) with an accurate information about allocated\nmemory within a given execution context.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/2.7/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 1,
                  "endLine": 208,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+\n     rb_vm_register_special_exception(ruby_error_stream_closed, rb_eIOError,\n \t\t\t\t     \"stream closed in another thread\");\n \ndiff --git a/vm_core.h b/vm_core.h\nindex 12c3ac377551..63cdf55fa6ed 100644\n--- a/vm_core.h\n+++ b/vm_core.h\n",
                    "rendered": {
                      "text": "+\n     rb_vm_register_special_exception(ruby_error_stream_closed, rb_eIOError,\n \t\t\t\t     \"stream closed in another thread\");\n \ndiff --git a/vm_core.h b/vm_core.h\nindex 12c3ac377551..63cdf55fa6ed 100644\n--- a/vm_core.h\n+++ b/vm_core.h\n",
                      "markdown": "`+\n     rb_vm_register_special_exception(ruby_error_stream_closed, rb_eIOError,\n \t\t\t\t     \"stream closed in another thread\");\n \ndiff --git a/vm_core.h b/vm_core.h\nindex 12c3ac377551..63cdf55fa6ed 100644\n--- a/vm_core.h\n+++ b/vm_core.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/2.7/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 14,
                  "endLine": 148,
                  "endColumn": 20,
                  "snippet": {
                    "text": "+ruby_threadptr_for_trace_memory_allocations(void)\n+{\n+    // The order of this checks is important due\n+    // to how Ruby VM is initialized\n+    if (GET_VM()->thread_trace_memory_allocations && GET_EC() != NULL) {\n+        return GET_THREAD();\n+    }\n",
                    "rendered": {
                      "text": "+ruby_threadptr_for_trace_memory_allocations(void)\n+{\n+    // The order of this checks is important due\n+    // to how Ruby VM is initialized\n+    if (GET_VM()->thread_trace_memory_allocations && GET_EC() != NULL) {\n+        return GET_THREAD();\n+    }\n",
                      "markdown": "`+ruby_threadptr_for_trace_memory_allocations(void)\n+{\n+    // The order of this checks is important due\n+    // to how Ruby VM is initialized\n+    if (GET_VM()->thread_trace_memory_allocations && GET_EC() != NULL) {\n+        return GET_THREAD();\n+    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/2.7/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 4,
                  "endLine": 135,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+      assert_operator(by, :>, after[key]-before[key], \"expected the #{key} to change less than #{by}\")\n+    end\n+  end\n+end\ndiff --git a/thread.c b/thread.c\nindex 708aaa471d99..d68a59e9f2d6 100644\n--- a/thread.c\n+++ b/thread.c\n",
                    "rendered": {
                      "text": "+      assert_operator(by, :>, after[key]-before[key], \"expected the #{key} to change less than #{by}\")\n+    end\n+  end\n+end\ndiff --git a/thread.c b/thread.c\nindex 708aaa471d99..d68a59e9f2d6 100644\n--- a/thread.c\n+++ b/thread.c\n",
                      "markdown": "`+      assert_operator(by, :>, after[key]-before[key], \"expected the #{key} to change less than #{by}\")\n+    end\n+  end\n+end\ndiff --git a/thread.c b/thread.c\nindex 708aaa471d99..d68a59e9f2d6 100644\n--- a/thread.c\n+++ b/thread.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/2.7/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 77,
                  "endLine": 62,
                  "endColumn": 5,
                  "snippet": {
                    "text": "+\n     if (type == MEMOP_TYPE_MALLOC) {\n       retry:\n \tif (malloc_increase > malloc_limit && ruby_native_thread_p() && !dont_gc) {\ndiff --git a/test/ruby/test_thread_trace_memory_allocations.rb b/test/ruby/test_thread_trace_memory_allocations.rb\nnew file mode 100644\nindex 000000000000..2e281513578b\n--- /dev/null\n",
                    "rendered": {
                      "text": "+\n     if (type == MEMOP_TYPE_MALLOC) {\n       retry:\n \tif (malloc_increase > malloc_limit && ruby_native_thread_p() && !dont_gc) {\ndiff --git a/test/ruby/test_thread_trace_memory_allocations.rb b/test/ruby/test_thread_trace_memory_allocations.rb\nnew file mode 100644\nindex 000000000000..2e281513578b\n--- /dev/null\n",
                      "markdown": "`+\n     if (type == MEMOP_TYPE_MALLOC) {\n       retry:\n \tif (malloc_increase > malloc_limit && ruby_native_thread_p() && !dont_gc) {\ndiff --git a/test/ruby/test_thread_trace_memory_allocations.rb b/test/ruby/test_thread_trace_memory_allocations.rb\nnew file mode 100644\nindex 000000000000..2e281513578b\n--- /dev/null\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/2.7/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 24,
                  "endColumn": 5,
                  "snippet": {
                    "text": " vm_core.h                                     | 17 +++++\n 4 files changed, 159 insertions(+)\n create mode 100644 test/ruby/test_thread_trace_memory_allocations.rb\n\ndiff --git a/gc.c b/gc.c\nindex 73faf46b128b..f2dcd2935052 100644\n--- a/gc.c\n+++ b/gc.c\n",
                    "rendered": {
                      "text": " vm_core.h                                     | 17 +++++\n 4 files changed, 159 insertions(+)\n create mode 100644 test/ruby/test_thread_trace_memory_allocations.rb\n\ndiff --git a/gc.c b/gc.c\nindex 73faf46b128b..f2dcd2935052 100644\n--- a/gc.c\n+++ b/gc.c\n",
                      "markdown": "` vm_core.h                                     | 17 +++++\n 4 files changed, 159 insertions(+)\n create mode 100644 test/ruby/test_thread_trace_memory_allocations.rb\n\ndiff --git a/gc.c b/gc.c\nindex 73faf46b128b..f2dcd2935052 100644\n--- a/gc.c\n+++ b/gc.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ruby/patches/2.7/thread-memory-allocations.patch"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 18,
                  "endLine": 15,
                  "endColumn": 24,
                  "snippet": {
                    "text": "memory within a given execution context.\n\nExample: Measure memory pressure generated by a given\nrequests to easier find requests with a lot of allocations.\n---\n gc.c                                          | 20 ++++++\n .../test_thread_trace_memory_allocations.rb   | 67 +++++++++++++++++++\n",
                    "rendered": {
                      "text": "memory within a given execution context.\n\nExample: Measure memory pressure generated by a given\nrequests to easier find requests with a lot of allocations.\n---\n gc.c                                          | 20 ++++++\n .../test_thread_trace_memory_allocations.rb   | 67 +++++++++++++++++++\n",
                      "markdown": "`memory within a given execution context.\n\nExample: Measure memory pressure generated by a given\nrequests to easier find requests with a lot of allocations.\n---\n gc.c                                          | 20 ++++++\n .../test_thread_trace_memory_allocations.rb   | 67 +++++++++++++++++++\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 27,
                  "endLine": 15,
                  "endColumn": 42,
                  "snippet": {
                    "text": "secret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n# Default is gitlab-shell.log in the root directory.\n",
                    "rendered": {
                      "text": "secret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n# Default is gitlab-shell.log in the root directory.\n",
                      "markdown": "`secret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n# Default is gitlab-shell.log in the root directory.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 22,
                  "endLine": 15,
                  "endColumn": 26,
                  "snippet": {
                    "text": "secret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n# Default is gitlab-shell.log in the root directory.\n",
                    "rendered": {
                      "text": "secret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n# Default is gitlab-shell.log in the root directory.\n",
                      "markdown": "`secret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n# Default is gitlab-shell.log in the root directory.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 15,
                  "endLine": 14,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nsecret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n",
                    "rendered": {
                      "text": "\nsecret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n",
                      "markdown": "`\nsecret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 22,
                  "endLine": 65,
                  "endColumn": 29,
                  "snippet": {
                    "text": "{% if env.Getenv \"CUSTOM_HOOKS_DIR\" %}\n# Parent directory for global custom hook directories (pre-receive.d, update.d, post-receive.d)\n# Default is hooks in the gitlab-shell directory.\ncustom_hooks_dir: \"{% env.Getenv \"CUSTOM_HOOKS_DIR\" %}\"\n{% end %}\n",
                    "rendered": {
                      "text": "{% if env.Getenv \"CUSTOM_HOOKS_DIR\" %}\n# Parent directory for global custom hook directories (pre-receive.d, update.d, post-receive.d)\n# Default is hooks in the gitlab-shell directory.\ncustom_hooks_dir: \"{% env.Getenv \"CUSTOM_HOOKS_DIR\" %}\"\n{% end %}\n",
                      "markdown": "`{% if env.Getenv \"CUSTOM_HOOKS_DIR\" %}\n# Parent directory for global custom hook directories (pre-receive.d, update.d, post-receive.d)\n# Default is hooks in the gitlab-shell directory.\ncustom_hooks_dir: \"{% env.Getenv \"CUSTOM_HOOKS_DIR\" %}\"\n{% end %}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 6,
                  "endLine": 62,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    libpath: \"libgssapi_krb5.so.2\"\n{% end %}\n\n{% if env.Getenv \"CUSTOM_HOOKS_DIR\" %}\n# Parent directory for global custom hook directories (pre-receive.d, update.d, post-receive.d)\n# Default is hooks in the gitlab-shell directory.\ncustom_hooks_dir: \"{% env.Getenv \"CUSTOM_HOOKS_DIR\" %}\"\n",
                    "rendered": {
                      "text": "    libpath: \"libgssapi_krb5.so.2\"\n{% end %}\n\n{% if env.Getenv \"CUSTOM_HOOKS_DIR\" %}\n# Parent directory for global custom hook directories (pre-receive.d, update.d, post-receive.d)\n# Default is hooks in the gitlab-shell directory.\ncustom_hooks_dir: \"{% env.Getenv \"CUSTOM_HOOKS_DIR\" %}\"\n",
                      "markdown": "`    libpath: \"libgssapi_krb5.so.2\"\n{% end %}\n\n{% if env.Getenv \"CUSTOM_HOOKS_DIR\" %}\n# Parent directory for global custom hook directories (pre-receive.d, update.d, post-receive.d)\n# Default is hooks in the gitlab-shell directory.\ncustom_hooks_dir: \"{% env.Getenv \"CUSTOM_HOOKS_DIR\" %}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 15,
                  "endLine": 1,
                  "endColumn": 22,
                  "snippet": {
                    "text": "{%- $daemon := env.Getenv \"SSH_DAEMON\" -%}\n# This file is managed by gitlab-ctl. Manual changes will be\n# erased! To change the contents below, edit /etc/gitlab/gitlab.rb\n# and run `sudo gitlab-ctl reconfigure`.\n",
                    "rendered": {
                      "text": "{%- $daemon := env.Getenv \"SSH_DAEMON\" -%}\n# This file is managed by gitlab-ctl. Manual changes will be\n# erased! To change the contents below, edit /etc/gitlab/gitlab.rb\n# and run `sudo gitlab-ctl reconfigure`.\n",
                      "markdown": "`{%- $daemon := env.Getenv \"SSH_DAEMON\" -%}\n# This file is managed by gitlab-ctl. Manual changes will be\n# erased! To change the contents below, edit /etc/gitlab/gitlab.rb\n# and run `sudo gitlab-ctl reconfigure`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 79,
                  "endLine": 56,
                  "endColumn": 88,
                  "snippet": {
                    "text": "    enabled: false\n    # Keytab path. Defaults to \"\", system default (usually /etc/krb5.keytab).\n    keytab: \"\"\n    # The Kerberos service name to be used by sshd. Defaults to \"\", accepts any service name in keytab file.\n    service_principal_name: \"\"\n    # GSSAPI Library path - this needs to be set to libgssapi_krb5.so.2 for our images\n    libpath: \"libgssapi_krb5.so.2\"\n",
                    "rendered": {
                      "text": "    enabled: false\n    # Keytab path. Defaults to \"\", system default (usually /etc/krb5.keytab).\n    keytab: \"\"\n    # The Kerberos service name to be used by sshd. Defaults to \"\", accepts any service name in keytab file.\n    service_principal_name: \"\"\n    # GSSAPI Library path - this needs to be set to libgssapi_krb5.so.2 for our images\n    libpath: \"libgssapi_krb5.so.2\"\n",
                      "markdown": "`    enabled: false\n    # Keytab path. Defaults to \"\", system default (usually /etc/krb5.keytab).\n    keytab: \"\"\n    # The Kerberos service name to be used by sshd. Defaults to \"\", accepts any service name in keytab file.\n    service_principal_name: \"\"\n    # GSSAPI Library path - this needs to be set to libgssapi_krb5.so.2 for our images\n    libpath: \"libgssapi_krb5.so.2\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 18,
                  "endLine": 56,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    enabled: false\n    # Keytab path. Defaults to \"\", system default (usually /etc/krb5.keytab).\n    keytab: \"\"\n    # The Kerberos service name to be used by sshd. Defaults to \"\", accepts any service name in keytab file.\n    service_principal_name: \"\"\n    # GSSAPI Library path - this needs to be set to libgssapi_krb5.so.2 for our images\n    libpath: \"libgssapi_krb5.so.2\"\n",
                    "rendered": {
                      "text": "    enabled: false\n    # Keytab path. Defaults to \"\", system default (usually /etc/krb5.keytab).\n    keytab: \"\"\n    # The Kerberos service name to be used by sshd. Defaults to \"\", accepts any service name in keytab file.\n    service_principal_name: \"\"\n    # GSSAPI Library path - this needs to be set to libgssapi_krb5.so.2 for our images\n    libpath: \"libgssapi_krb5.so.2\"\n",
                      "markdown": "`    enabled: false\n    # Keytab path. Defaults to \"\", system default (usually /etc/krb5.keytab).\n    keytab: \"\"\n    # The Kerberos service name to be used by sshd. Defaults to \"\", accepts any service name in keytab file.\n    service_principal_name: \"\"\n    # GSSAPI Library path - this needs to be set to libgssapi_krb5.so.2 for our images\n    libpath: \"libgssapi_krb5.so.2\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 3,
                  "endLine": 43,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  web_listen: \"0.0.0.0:9122\"\n  # Maximum number of concurrent sessions allowed on a single SSH connection. Defaults to 100.\n  concurrent_sessions_limit: 100\n  # SSH host key files.\n  host_key_files:\n  {%- range file.Walk \"/etc/ssh\" %}\n    {%- if filepath.Match \"/etc/ssh/ssh_host_*_key\" . %}\n",
                    "rendered": {
                      "text": "  web_listen: \"0.0.0.0:9122\"\n  # Maximum number of concurrent sessions allowed on a single SSH connection. Defaults to 100.\n  concurrent_sessions_limit: 100\n  # SSH host key files.\n  host_key_files:\n  {%- range file.Walk \"/etc/ssh\" %}\n    {%- if filepath.Match \"/etc/ssh/ssh_host_*_key\" . %}\n",
                      "markdown": "`  web_listen: \"0.0.0.0:9122\"\n  # Maximum number of concurrent sessions allowed on a single SSH connection. Defaults to 100.\n  concurrent_sessions_limit: 100\n  # SSH host key files.\n  host_key_files:\n  {%- range file.Walk \"/etc/ssh\" %}\n    {%- if filepath.Match \"/etc/ssh/ssh_host_*_key\" . %}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 61,
                  "endLine": 41,
                  "endColumn": 66,
                  "snippet": {
                    "text": "  listen: \"[::]:2222\"\n  # Address which the server listens on HTTP for monitoring/health checks. Defaults to 0.0.0.0:9122.\n  web_listen: \"0.0.0.0:9122\"\n  # Maximum number of concurrent sessions allowed on a single SSH connection. Defaults to 100.\n  concurrent_sessions_limit: 100\n  # SSH host key files.\n  host_key_files:\n",
                    "rendered": {
                      "text": "  listen: \"[::]:2222\"\n  # Address which the server listens on HTTP for monitoring/health checks. Defaults to 0.0.0.0:9122.\n  web_listen: \"0.0.0.0:9122\"\n  # Maximum number of concurrent sessions allowed on a single SSH connection. Defaults to 100.\n  concurrent_sessions_limit: 100\n  # SSH host key files.\n  host_key_files:\n",
                      "markdown": "`  listen: \"[::]:2222\"\n  # Address which the server listens on HTTP for monitoring/health checks. Defaults to 0.0.0.0:9122.\n  web_listen: \"0.0.0.0:9122\"\n  # Maximum number of concurrent sessions allowed on a single SSH connection. Defaults to 100.\n  concurrent_sessions_limit: 100\n  # SSH host key files.\n  host_key_files:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 21,
                  "endLine": 37,
                  "endColumn": 26,
                  "snippet": {
                    "text": "{% if eq $daemon \"gitlab-sshd\" %}\n# This section configures the built-in SSH server. Ignored when running on OpenSSH.\nsshd:\n  # Address which the SSH server listens on. Defaults to [::]:2222.\n  listen: \"[::]:2222\"\n  # Address which the server listens on HTTP for monitoring/health checks. Defaults to 0.0.0.0:9122.\n  web_listen: \"0.0.0.0:9122\"\n",
                    "rendered": {
                      "text": "{% if eq $daemon \"gitlab-sshd\" %}\n# This section configures the built-in SSH server. Ignored when running on OpenSSH.\nsshd:\n  # Address which the SSH server listens on. Defaults to [::]:2222.\n  listen: \"[::]:2222\"\n  # Address which the server listens on HTTP for monitoring/health checks. Defaults to 0.0.0.0:9122.\n  web_listen: \"0.0.0.0:9122\"\n",
                      "markdown": "`{% if eq $daemon \"gitlab-sshd\" %}\n# This section configures the built-in SSH server. Ignored when running on OpenSSH.\nsshd:\n  # Address which the SSH server listens on. Defaults to [::]:2222.\n  listen: \"[::]:2222\"\n  # Address which the server listens on HTTP for monitoring/health checks. Defaults to 0.0.0.0:9122.\n  web_listen: \"0.0.0.0:9122\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 38,
                  "endLine": 35,
                  "endColumn": 43,
                  "snippet": {
                    "text": "audit_usernames: false\n\n{% if eq $daemon \"gitlab-sshd\" %}\n# This section configures the built-in SSH server. Ignored when running on OpenSSH.\nsshd:\n  # Address which the SSH server listens on. Defaults to [::]:2222.\n  listen: \"[::]:2222\"\n",
                    "rendered": {
                      "text": "audit_usernames: false\n\n{% if eq $daemon \"gitlab-sshd\" %}\n# This section configures the built-in SSH server. Ignored when running on OpenSSH.\nsshd:\n  # Address which the SSH server listens on. Defaults to [::]:2222.\n  listen: \"[::]:2222\"\n",
                      "markdown": "`audit_usernames: false\n\n{% if eq $daemon \"gitlab-sshd\" %}\n# This section configures the built-in SSH server. Ignored when running on OpenSSH.\nsshd:\n  # Address which the SSH server listens on. Defaults to [::]:2222.\n  listen: \"[::]:2222\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 5,
                  "endLine": 8,
                  "snippet": {
                    "text": "# and run `sudo gitlab-ctl reconfigure`.\n\n# GitLab user. git by default\nuser: git\n\n# Url to gitlab instance. Used for api calls. Should end with a slash.\ngitlab_url: \"http://workhorse:8181/\"\n\n",
                    "rendered": {
                      "text": "# and run `sudo gitlab-ctl reconfigure`.\n\n# GitLab user. git by default\nuser: git\n\n# Url to gitlab instance. Used for api calls. Should end with a slash.\ngitlab_url: \"http://workhorse:8181/\"\n\n",
                      "markdown": "`# and run `sudo gitlab-ctl reconfigure`.\n\n# GitLab user. git by default\nuser: git\n\n# Url to gitlab instance. Used for api calls. Should end with a slash.\ngitlab_url: \"http://workhorse:8181/\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.tpl"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 19,
                  "snippet": {
                    "text": "# erased! To change the contents below, edit /etc/gitlab/gitlab.rb\n# and run `sudo gitlab-ctl reconfigure`.\n\n# GitLab user. git by default\nuser: git\n\n# Url to gitlab instance. Used for api calls. Should end with a slash.\n",
                    "rendered": {
                      "text": "# erased! To change the contents below, edit /etc/gitlab/gitlab.rb\n# and run `sudo gitlab-ctl reconfigure`.\n\n# GitLab user. git by default\nuser: git\n\n# Url to gitlab instance. Used for api calls. Should end with a slash.\n",
                      "markdown": "`# erased! To change the contents below, edit /etc/gitlab/gitlab.rb\n# and run `sudo gitlab-ctl reconfigure`.\n\n# GitLab user. git by default\nuser: git\n\n# Url to gitlab instance. Used for api calls. Should end with a slash.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.erb"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 27,
                  "endLine": 14,
                  "endColumn": 42,
                  "snippet": {
                    "text": "secret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n# Default is gitlab-shell.log in the root directory.\n",
                    "rendered": {
                      "text": "secret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n# Default is gitlab-shell.log in the root directory.\n",
                      "markdown": "`secret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n# Default is gitlab-shell.log in the root directory.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.erb"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 22,
                  "endLine": 14,
                  "endColumn": 26,
                  "snippet": {
                    "text": "secret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n# Default is gitlab-shell.log in the root directory.\n",
                    "rendered": {
                      "text": "secret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n# Default is gitlab-shell.log in the root directory.\n",
                      "markdown": "`secret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n# Default is gitlab-shell.log in the root directory.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.erb"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 15,
                  "endLine": 13,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nsecret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n",
                    "rendered": {
                      "text": "\nsecret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n",
                      "markdown": "`\nsecret_file: /srv/gitlab-secrets/.gitlab_shell_secret\n\n# File used as authorized_keys for gitlab user\nauth_file: \"/home/git/.ssh/authorized_keys\"\n\n# Log file.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.erb"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 79,
                  "endLine": 53,
                  "endColumn": 88,
                  "snippet": {
                    "text": "    enabled: false\n    # Keytab path. Defaults to \"\", system default (usually /etc/krb5.keytab).\n    keytab: \"\"\n    # The Kerberos service name to be used by sshd. Defaults to \"\", accepts any service name in keytab file.\n    service_principal_name: \"\"\n    # GSSAPI Library path - this needs to be set to libgssapi_krb5.so.2 for our images\n    libpath: \"libgssapi_krb5.so.2\"\n",
                    "rendered": {
                      "text": "    enabled: false\n    # Keytab path. Defaults to \"\", system default (usually /etc/krb5.keytab).\n    keytab: \"\"\n    # The Kerberos service name to be used by sshd. Defaults to \"\", accepts any service name in keytab file.\n    service_principal_name: \"\"\n    # GSSAPI Library path - this needs to be set to libgssapi_krb5.so.2 for our images\n    libpath: \"libgssapi_krb5.so.2\"\n",
                      "markdown": "`    enabled: false\n    # Keytab path. Defaults to \"\", system default (usually /etc/krb5.keytab).\n    keytab: \"\"\n    # The Kerberos service name to be used by sshd. Defaults to \"\", accepts any service name in keytab file.\n    service_principal_name: \"\"\n    # GSSAPI Library path - this needs to be set to libgssapi_krb5.so.2 for our images\n    libpath: \"libgssapi_krb5.so.2\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.erb"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 18,
                  "endLine": 53,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    enabled: false\n    # Keytab path. Defaults to \"\", system default (usually /etc/krb5.keytab).\n    keytab: \"\"\n    # The Kerberos service name to be used by sshd. Defaults to \"\", accepts any service name in keytab file.\n    service_principal_name: \"\"\n    # GSSAPI Library path - this needs to be set to libgssapi_krb5.so.2 for our images\n    libpath: \"libgssapi_krb5.so.2\"\n",
                    "rendered": {
                      "text": "    enabled: false\n    # Keytab path. Defaults to \"\", system default (usually /etc/krb5.keytab).\n    keytab: \"\"\n    # The Kerberos service name to be used by sshd. Defaults to \"\", accepts any service name in keytab file.\n    service_principal_name: \"\"\n    # GSSAPI Library path - this needs to be set to libgssapi_krb5.so.2 for our images\n    libpath: \"libgssapi_krb5.so.2\"\n",
                      "markdown": "`    enabled: false\n    # Keytab path. Defaults to \"\", system default (usually /etc/krb5.keytab).\n    keytab: \"\"\n    # The Kerberos service name to be used by sshd. Defaults to \"\", accepts any service name in keytab file.\n    service_principal_name: \"\"\n    # GSSAPI Library path - this needs to be set to libgssapi_krb5.so.2 for our images\n    libpath: \"libgssapi_krb5.so.2\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.erb"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 3,
                  "endLine": 42,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  web_listen: \"0.0.0.0:9122\"\n  # Maximum number of concurrent sessions allowed on a single SSH connection. Defaults to 100.\n  concurrent_sessions_limit: 100\n  # SSH host key files.\n  host_key_files:\n  <% Dir[\"/etc/ssh/ssh_host_*_key\"].each do |file| %>\n  <%= \"- #{file}\" %>\n",
                    "rendered": {
                      "text": "  web_listen: \"0.0.0.0:9122\"\n  # Maximum number of concurrent sessions allowed on a single SSH connection. Defaults to 100.\n  concurrent_sessions_limit: 100\n  # SSH host key files.\n  host_key_files:\n  <% Dir[\"/etc/ssh/ssh_host_*_key\"].each do |file| %>\n  <%= \"- #{file}\" %>\n",
                      "markdown": "`  web_listen: \"0.0.0.0:9122\"\n  # Maximum number of concurrent sessions allowed on a single SSH connection. Defaults to 100.\n  concurrent_sessions_limit: 100\n  # SSH host key files.\n  host_key_files:\n  <% Dir[\"/etc/ssh/ssh_host_*_key\"].each do |file| %>\n  <%= \"- #{file}\" %>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.erb"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 61,
                  "endLine": 40,
                  "endColumn": 66,
                  "snippet": {
                    "text": "  listen: \"[::]:2222\"\n  # Address which the server listens on HTTP for monitoring/health checks. Defaults to 0.0.0.0:9122.\n  web_listen: \"0.0.0.0:9122\"\n  # Maximum number of concurrent sessions allowed on a single SSH connection. Defaults to 100.\n  concurrent_sessions_limit: 100\n  # SSH host key files.\n  host_key_files:\n",
                    "rendered": {
                      "text": "  listen: \"[::]:2222\"\n  # Address which the server listens on HTTP for monitoring/health checks. Defaults to 0.0.0.0:9122.\n  web_listen: \"0.0.0.0:9122\"\n  # Maximum number of concurrent sessions allowed on a single SSH connection. Defaults to 100.\n  concurrent_sessions_limit: 100\n  # SSH host key files.\n  host_key_files:\n",
                      "markdown": "`  listen: \"[::]:2222\"\n  # Address which the server listens on HTTP for monitoring/health checks. Defaults to 0.0.0.0:9122.\n  web_listen: \"0.0.0.0:9122\"\n  # Maximum number of concurrent sessions allowed on a single SSH connection. Defaults to 100.\n  concurrent_sessions_limit: 100\n  # SSH host key files.\n  host_key_files:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.erb"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 21,
                  "endLine": 36,
                  "endColumn": 26,
                  "snippet": {
                    "text": "<% if ENV['SSH_DAEMON'] == 'gitlab-sshd' %>\n# This section configures the built-in SSH server. Ignored when running on OpenSSH.\nsshd:\n  # Address which the SSH server listens on. Defaults to [::]:2222.\n  listen: \"[::]:2222\"\n  # Address which the server listens on HTTP for monitoring/health checks. Defaults to 0.0.0.0:9122.\n  web_listen: \"0.0.0.0:9122\"\n",
                    "rendered": {
                      "text": "<% if ENV['SSH_DAEMON'] == 'gitlab-sshd' %>\n# This section configures the built-in SSH server. Ignored when running on OpenSSH.\nsshd:\n  # Address which the SSH server listens on. Defaults to [::]:2222.\n  listen: \"[::]:2222\"\n  # Address which the server listens on HTTP for monitoring/health checks. Defaults to 0.0.0.0:9122.\n  web_listen: \"0.0.0.0:9122\"\n",
                      "markdown": "`<% if ENV['SSH_DAEMON'] == 'gitlab-sshd' %>\n# This section configures the built-in SSH server. Ignored when running on OpenSSH.\nsshd:\n  # Address which the SSH server listens on. Defaults to [::]:2222.\n  listen: \"[::]:2222\"\n  # Address which the server listens on HTTP for monitoring/health checks. Defaults to 0.0.0.0:9122.\n  web_listen: \"0.0.0.0:9122\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.erb"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "audit_usernames: false\n\n<% if ENV['SSH_DAEMON'] == 'gitlab-sshd' %>\n# This section configures the built-in SSH server. Ignored when running on OpenSSH.\nsshd:\n  # Address which the SSH server listens on. Defaults to [::]:2222.\n  listen: \"[::]:2222\"\n",
                    "rendered": {
                      "text": "audit_usernames: false\n\n<% if ENV['SSH_DAEMON'] == 'gitlab-sshd' %>\n# This section configures the built-in SSH server. Ignored when running on OpenSSH.\nsshd:\n  # Address which the SSH server listens on. Defaults to [::]:2222.\n  listen: \"[::]:2222\"\n",
                      "markdown": "`audit_usernames: false\n\n<% if ENV['SSH_DAEMON'] == 'gitlab-sshd' %>\n# This section configures the built-in SSH server. Ignored when running on OpenSSH.\nsshd:\n  # Address which the SSH server listens on. Defaults to [::]:2222.\n  listen: \"[::]:2222\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.erb"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 5,
                  "endLine": 7,
                  "snippet": {
                    "text": "# and run `sudo gitlab-ctl reconfigure`.\n\n# GitLab user. git by default\nuser: git\n\n# Url to gitlab instance. Used for api calls. Should end with a slash.\ngitlab_url: \"http://workhorse:8181/\"\n\n",
                    "rendered": {
                      "text": "# and run `sudo gitlab-ctl reconfigure`.\n\n# GitLab user. git by default\nuser: git\n\n# Url to gitlab instance. Used for api calls. Should end with a slash.\ngitlab_url: \"http://workhorse:8181/\"\n\n",
                      "markdown": "`# and run `sudo gitlab-ctl reconfigure`.\n\n# GitLab user. git by default\nuser: git\n\n# Url to gitlab instance. Used for api calls. Should end with a slash.\ngitlab_url: \"http://workhorse:8181/\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/shell-config/config.yml.erb"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 19,
                  "snippet": {
                    "text": "# erased! To change the contents below, edit /etc/gitlab/gitlab.rb\n# and run `sudo gitlab-ctl reconfigure`.\n\n# GitLab user. git by default\nuser: git\n\n# Url to gitlab instance. Used for api calls. Should end with a slash.\n",
                    "rendered": {
                      "text": "# erased! To change the contents below, edit /etc/gitlab/gitlab.rb\n# and run `sudo gitlab-ctl reconfigure`.\n\n# GitLab user. git by default\nuser: git\n\n# Url to gitlab instance. Used for api calls. Should end with a slash.\n",
                      "markdown": "`# erased! To change the contents below, edit /etc/gitlab/gitlab.rb\n# and run `sudo gitlab-ctl reconfigure`.\n\n# GitLab user. git by default\nuser: git\n\n# Url to gitlab instance. Used for api calls. Should end with a slash.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/workhorse-config/workhorse-config.toml.tpl"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n[redis]\nURL = \"tcp://redis:6379\"\nPassword = \"redis-meercat\"\n\n[image_resizer]\n  max_scaler_procs = 100\n",
                    "rendered": {
                      "text": "\n[redis]\nURL = \"tcp://redis:6379\"\nPassword = \"redis-meercat\"\n\n[image_resizer]\n  max_scaler_procs = 100\n",
                      "markdown": "`\n[redis]\nURL = \"tcp://redis:6379\"\nPassword = \"redis-meercat\"\n\n[image_resizer]\n  max_scaler_procs = 100\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/workhorse-config/workhorse-config.toml.tpl"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 10,
                  "endLine": 25,
                  "endColumn": 17,
                  "snippet": {
                    "text": "[metrics_listener]\nnetwork = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_METRICS_LISTEN_PORT\" \"9229\" | conv.Atoi %}\"\n{%-   if (env.Getenv \"GITLAB_WORKHORSE_METRICS_TLS_ENABLED\" \"false\" | conv.ToBool) %}\n[metrics_listener.tls]\ncertificate = \"/etc/gitlab/gitlab-workhorse/tls.crt\"\nkey = \"/etc/gitlab/gitlab-workhorse/tls.key\"\n",
                    "rendered": {
                      "text": "[metrics_listener]\nnetwork = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_METRICS_LISTEN_PORT\" \"9229\" | conv.Atoi %}\"\n{%-   if (env.Getenv \"GITLAB_WORKHORSE_METRICS_TLS_ENABLED\" \"false\" | conv.ToBool) %}\n[metrics_listener.tls]\ncertificate = \"/etc/gitlab/gitlab-workhorse/tls.crt\"\nkey = \"/etc/gitlab/gitlab-workhorse/tls.key\"\n",
                      "markdown": "`[metrics_listener]\nnetwork = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_METRICS_LISTEN_PORT\" \"9229\" | conv.Atoi %}\"\n{%-   if (env.Getenv \"GITLAB_WORKHORSE_METRICS_TLS_ENABLED\" \"false\" | conv.ToBool) %}\n[metrics_listener.tls]\ncertificate = \"/etc/gitlab/gitlab-workhorse/tls.crt\"\nkey = \"/etc/gitlab/gitlab-workhorse/tls.key\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/workhorse-config/workhorse-config.toml.tpl"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 19,
                  "endLine": 24,
                  "endColumn": 26,
                  "snippet": {
                    "text": "{%- if (env.Getenv \"GITLAB_WORKHORSE_METRICS_ENABLED\" \"false\" | conv.ToBool) %}\n[metrics_listener]\nnetwork = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_METRICS_LISTEN_PORT\" \"9229\" | conv.Atoi %}\"\n{%-   if (env.Getenv \"GITLAB_WORKHORSE_METRICS_TLS_ENABLED\" \"false\" | conv.ToBool) %}\n[metrics_listener.tls]\ncertificate = \"/etc/gitlab/gitlab-workhorse/tls.crt\"\n",
                    "rendered": {
                      "text": "{%- if (env.Getenv \"GITLAB_WORKHORSE_METRICS_ENABLED\" \"false\" | conv.ToBool) %}\n[metrics_listener]\nnetwork = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_METRICS_LISTEN_PORT\" \"9229\" | conv.Atoi %}\"\n{%-   if (env.Getenv \"GITLAB_WORKHORSE_METRICS_TLS_ENABLED\" \"false\" | conv.ToBool) %}\n[metrics_listener.tls]\ncertificate = \"/etc/gitlab/gitlab-workhorse/tls.crt\"\n",
                      "markdown": "`{%- if (env.Getenv \"GITLAB_WORKHORSE_METRICS_ENABLED\" \"false\" | conv.ToBool) %}\n[metrics_listener]\nnetwork = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_METRICS_LISTEN_PORT\" \"9229\" | conv.Atoi %}\"\n{%-   if (env.Getenv \"GITLAB_WORKHORSE_METRICS_TLS_ENABLED\" \"false\" | conv.ToBool) %}\n[metrics_listener.tls]\ncertificate = \"/etc/gitlab/gitlab-workhorse/tls.crt\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/workhorse-config/workhorse-config.toml.tpl"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  key = \"/etc/gitlab/gitlab-workhorse/tls.key\"\n{%- end %}\n\n{%- if (env.Getenv \"GITLAB_WORKHORSE_METRICS_ENABLED\" \"false\" | conv.ToBool) %}\n[metrics_listener]\nnetwork = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_METRICS_LISTEN_PORT\" \"9229\" | conv.Atoi %}\"\n",
                    "rendered": {
                      "text": "  key = \"/etc/gitlab/gitlab-workhorse/tls.key\"\n{%- end %}\n\n{%- if (env.Getenv \"GITLAB_WORKHORSE_METRICS_ENABLED\" \"false\" | conv.ToBool) %}\n[metrics_listener]\nnetwork = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_METRICS_LISTEN_PORT\" \"9229\" | conv.Atoi %}\"\n",
                      "markdown": "`  key = \"/etc/gitlab/gitlab-workhorse/tls.key\"\n{%- end %}\n\n{%- if (env.Getenv \"GITLAB_WORKHORSE_METRICS_ENABLED\" \"false\" | conv.ToBool) %}\n[metrics_listener]\nnetwork = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_METRICS_LISTEN_PORT\" \"9229\" | conv.Atoi %}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/workhorse-config/workhorse-config.toml.tpl"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 15,
                  "snippet": {
                    "text": "network = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_LISTEN_PORT\" \"8181\" | conv.Atoi %}\"\n\n{%- if (env.Getenv \"GITLAB_WORKHORSE_LISTEN_TLS\" \"false\" | conv.ToBool) %}\n[listeners.tls]\n  certificate = \"/etc/gitlab/gitlab-workhorse/tls.crt\"\n  key = \"/etc/gitlab/gitlab-workhorse/tls.key\"\n",
                    "rendered": {
                      "text": "network = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_LISTEN_PORT\" \"8181\" | conv.Atoi %}\"\n\n{%- if (env.Getenv \"GITLAB_WORKHORSE_LISTEN_TLS\" \"false\" | conv.ToBool) %}\n[listeners.tls]\n  certificate = \"/etc/gitlab/gitlab-workhorse/tls.crt\"\n  key = \"/etc/gitlab/gitlab-workhorse/tls.key\"\n",
                      "markdown": "`network = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_LISTEN_PORT\" \"8181\" | conv.Atoi %}\"\n\n{%- if (env.Getenv \"GITLAB_WORKHORSE_LISTEN_TLS\" \"false\" | conv.ToBool) %}\n[listeners.tls]\n  certificate = \"/etc/gitlab/gitlab-workhorse/tls.crt\"\n  key = \"/etc/gitlab/gitlab-workhorse/tls.key\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/workhorse-config/workhorse-config.toml.tpl"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 19,
                  "endLine": 13,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n[[listeners]]\nnetwork = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_LISTEN_PORT\" \"8181\" | conv.Atoi %}\"\n\n{%- if (env.Getenv \"GITLAB_WORKHORSE_LISTEN_TLS\" \"false\" | conv.ToBool) %}\n[listeners.tls]\n",
                    "rendered": {
                      "text": "\n[[listeners]]\nnetwork = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_LISTEN_PORT\" \"8181\" | conv.Atoi %}\"\n\n{%- if (env.Getenv \"GITLAB_WORKHORSE_LISTEN_TLS\" \"false\" | conv.ToBool) %}\n[listeners.tls]\n",
                      "markdown": "`\n[[listeners]]\nnetwork = \"tcp\"\naddr = \"0.0.0.0:{% env.Getenv \"GITLAB_WORKHORSE_LISTEN_PORT\" \"8181\" | conv.Atoi %}\"\n\n{%- if (env.Getenv \"GITLAB_WORKHORSE_LISTEN_TLS\" \"false\" | conv.ToBool) %}\n[listeners.tls]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/scripts/process-wrapper"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7,
                  "endLine": 13,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    else\n        # touch logs that would be generated by Jobs\n        touch /var/log/gitlab/repocheck.log\n        tail -f /var/log/gitlab/* &\n    fi\nfi\n\n",
                    "rendered": {
                      "text": "    else\n        # touch logs that would be generated by Jobs\n        touch /var/log/gitlab/repocheck.log\n        tail -f /var/log/gitlab/* &\n    fi\nfi\n\n",
                      "markdown": "`    else\n        # touch logs that would be generated by Jobs\n        touch /var/log/gitlab/repocheck.log\n        tail -f /var/log/gitlab/* &\n    fi\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/openshift.metadata"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 33,
                  "endLine": 3,
                  "endColumn": 42,
                  "snippet": {
                    "text": "io.openshift.tags=gitlab-sidekiq\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab Sidekiq service container.\nio.openshift.non-scalable=false\nio.openshift-min-memory=2Gi\nio.openshift.min-cpu=900m\n",
                    "rendered": {
                      "text": "io.openshift.tags=gitlab-sidekiq\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab Sidekiq service container.\nio.openshift.non-scalable=false\nio.openshift-min-memory=2Gi\nio.openshift.min-cpu=900m\n",
                      "markdown": "`io.openshift.tags=gitlab-sidekiq\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab Sidekiq service container.\nio.openshift.non-scalable=false\nio.openshift-min-memory=2Gi\nio.openshift.min-cpu=900m\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-sidekiq/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 6,
                  "endLine": 11,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nRUN mkdir /assets \\\n    && pip3 install --compile docutils==${DOCUTILS_VERSION} \\\n    && cp -R --parents \\\n        /usr/local/lib/python3.9/site-packages \\\n        /usr/local/bin/rst2* \\\n        /assets\n",
                    "rendered": {
                      "text": "\nRUN mkdir /assets \\\n    && pip3 install --compile docutils==${DOCUTILS_VERSION} \\\n    && cp -R --parents \\\n        /usr/local/lib/python3.9/site-packages \\\n        /usr/local/bin/rst2* \\\n        /assets\n",
                      "markdown": "`\nRUN mkdir /assets \\\n    && pip3 install --compile docutils==${DOCUTILS_VERSION} \\\n    && cp -R --parents \\\n        /usr/local/lib/python3.9/site-packages \\\n        /usr/local/bin/rst2* \\\n        /assets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/scripts/download"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 19,
                  "endLine": 16,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n# Verify source tarball\necho \"${GITLAB_LOGGER_SHA256} $(basename \"${GITLAB_LOGGER_SOURCE_URL}\")\" > SHASUM\nsha256sum -c SHASUM\ntar xzf \"$(basename \"${GITLAB_LOGGER_SOURCE_URL}\")\"\n\npopd # from /build\n",
                    "rendered": {
                      "text": "\n# Verify source tarball\necho \"${GITLAB_LOGGER_SHA256} $(basename \"${GITLAB_LOGGER_SOURCE_URL}\")\" > SHASUM\nsha256sum -c SHASUM\ntar xzf \"$(basename \"${GITLAB_LOGGER_SOURCE_URL}\")\"\n\npopd # from /build\n",
                      "markdown": "`\n# Verify source tarball\necho \"${GITLAB_LOGGER_SHA256} $(basename \"${GITLAB_LOGGER_SOURCE_URL}\")\" > SHASUM\nsha256sum -c SHASUM\ntar xzf \"$(basename \"${GITLAB_LOGGER_SOURCE_URL}\")\"\n\npopd # from /build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/scripts/download"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 19,
                  "endLine": 11,
                  "endColumn": 5,
                  "snippet": {
                    "text": "set -exo pipefail\n\npushd /build\n# Downloads sources\ncurl --retry 6 -fLOsS \"${GITLAB_LOGGER_SOURCE_URL}\"\n\n# Verify source tarball\necho \"${GITLAB_LOGGER_SHA256} $(basename \"${GITLAB_LOGGER_SOURCE_URL}\")\" > SHASUM\n",
                    "rendered": {
                      "text": "set -exo pipefail\n\npushd /build\n# Downloads sources\ncurl --retry 6 -fLOsS \"${GITLAB_LOGGER_SOURCE_URL}\"\n\n# Verify source tarball\necho \"${GITLAB_LOGGER_SHA256} $(basename \"${GITLAB_LOGGER_SOURCE_URL}\")\" > SHASUM\n",
                      "markdown": "`set -exo pipefail\n\npushd /build\n# Downloads sources\ncurl --retry 6 -fLOsS \"${GITLAB_LOGGER_SOURCE_URL}\"\n\n# Verify source tarball\necho \"${GITLAB_LOGGER_SHA256} $(basename \"${GITLAB_LOGGER_SOURCE_URL}\")\" > SHASUM\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/scripts/download"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/bin/bash\n# This script designed to download and verify the sources of GitLab Logger\n# Items from environment:\n# - GITLAB_LOGGER_SOURCE_URL - complete URL of the source tarball\n# - GITLAB_LOGGER_SHA256 - The shasum of the tarball\n",
                    "rendered": {
                      "text": "#!/bin/bash\n# This script designed to download and verify the sources of GitLab Logger\n# Items from environment:\n# - GITLAB_LOGGER_SOURCE_URL - complete URL of the source tarball\n# - GITLAB_LOGGER_SHA256 - The shasum of the tarball\n",
                      "markdown": "`#!/bin/bash\n# This script designed to download and verify the sources of GitLab Logger\n# Items from environment:\n# - GITLAB_LOGGER_SOURCE_URL - complete URL of the source tarball\n# - GITLAB_LOGGER_SHA256 - The shasum of the tarball\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/scripts/dependencies"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 7,
                  "endLine": 5,
                  "snippet": {
                    "text": "#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends git curl make\n",
                    "rendered": {
                      "text": "#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends git curl make\n",
                      "markdown": "`#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends git curl make\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/scripts/dependencies"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 45,
                  "endLine": 7,
                  "endColumn": 50,
                  "snippet": {
                    "text": "apt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends git curl make\n",
                    "rendered": {
                      "text": "apt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends git curl make\n",
                      "markdown": "`apt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends git curl make\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/scripts/dependencies"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 51,
                  "endLine": 7,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends git curl make\n",
                    "rendered": {
                      "text": "\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends git curl make\n",
                      "markdown": "`\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends git curl make\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-logger/scripts/dependencies"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends git curl make\n",
                    "rendered": {
                      "text": "#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends git curl make\n",
                      "markdown": "`#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends git curl make\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 11,
                  "endLine": 17,
                  "endColumn": 19,
                  "snippet": {
                    "text": "# Providing to environment, for easy information gathering.\nENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n",
                    "rendered": {
                      "text": "# Providing to environment, for easy information gathering.\nENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n",
                      "markdown": "`# Providing to environment, for easy information gathering.\nENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 63,
                  "endLine": 29,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n# Default to non-root user\nUSER 65534:65534\n# kubectl needs a writable HOME (gitlab-org/charts/gitlab#3021)\nENV HOME=/tmp/kube\n",
                    "rendered": {
                      "text": "\n# Default to non-root user\nUSER 65534:65534\n# kubectl needs a writable HOME (gitlab-org/charts/gitlab#3021)\nENV HOME=/tmp/kube\n",
                      "markdown": "`\n# Default to non-root user\nUSER 65534:65534\n# kubectl needs a writable HOME (gitlab-org/charts/gitlab#3021)\nENV HOME=/tmp/kube\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 4,
                  "endLine": 24,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n  && mv yq_linux_$TARGETARCH /usr/local/bin/yq\n\n# Default to non-root user\nUSER 65534:65534\n",
                    "rendered": {
                      "text": "  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n  && mv yq_linux_$TARGETARCH /usr/local/bin/yq\n\n# Default to non-root user\nUSER 65534:65534\n",
                      "markdown": "`  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n  && mv yq_linux_$TARGETARCH /usr/local/bin/yq\n\n# Default to non-root user\nUSER 65534:65534\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 4,
                  "endLine": 23,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n  && mv yq_linux_$TARGETARCH /usr/local/bin/yq\n\n# Default to non-root user\n",
                    "rendered": {
                      "text": "  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n  && mv yq_linux_$TARGETARCH /usr/local/bin/yq\n\n# Default to non-root user\n",
                      "markdown": "`  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n  && mv yq_linux_$TARGETARCH /usr/local/bin/yq\n\n# Default to non-root user\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 4,
                  "endLine": 22,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n  && mv yq_linux_$TARGETARCH /usr/local/bin/yq\n\n",
                    "rendered": {
                      "text": "  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n  && mv yq_linux_$TARGETARCH /usr/local/bin/yq\n\n",
                      "markdown": "`  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n  && mv yq_linux_$TARGETARCH /usr/local/bin/yq\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 4,
                  "endLine": 21,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n  && mv yq_linux_$TARGETARCH /usr/local/bin/yq\n",
                    "rendered": {
                      "text": "  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n  && mv yq_linux_$TARGETARCH /usr/local/bin/yq\n",
                      "markdown": "`  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n  && mv yq_linux_$TARGETARCH /usr/local/bin/yq\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 4,
                  "endLine": 20,
                  "endColumn": 11,
                  "snippet": {
                    "text": "RUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n",
                    "rendered": {
                      "text": "RUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n",
                      "markdown": "`RUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n  && chmod +x yq_linux_$TARGETARCH \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 4,
                  "endLine": 19,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n",
                    "rendered": {
                      "text": "\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n",
                      "markdown": "`\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n  && curl --retry 6 -LsfO https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$TARGETARCH \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 47,
                  "endLine": 18,
                  "endColumn": 53,
                  "snippet": {
                    "text": "ENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n",
                    "rendered": {
                      "text": "ENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n",
                      "markdown": "`ENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 4,
                  "endLine": 18,
                  "endColumn": 13,
                  "snippet": {
                    "text": "ENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n",
                    "rendered": {
                      "text": "ENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n",
                      "markdown": "`ENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n  && mv kubectl /usr/local/bin/kubectl \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 17,
                  "endColumn": 12,
                  "snippet": {
                    "text": "# Providing to environment, for easy information gathering.\nENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n",
                    "rendered": {
                      "text": "# Providing to environment, for easy information gathering.\nENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n",
                      "markdown": "`# Providing to environment, for easy information gathering.\nENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n  && curl --retry 6 -LsfO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x kubectl \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/kubectl/Dockerfile"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 59,
                  "endLine": 15,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG YQ_VERSION\nARG TARGETARCH\n\n# Providing to environment, for easy information gathering.\nENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n",
                    "rendered": {
                      "text": "ARG YQ_VERSION\nARG TARGETARCH\n\n# Providing to environment, for easy information gathering.\nENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n",
                      "markdown": "`ARG YQ_VERSION\nARG TARGETARCH\n\n# Providing to environment, for easy information gathering.\nENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends curl ca-certificates libssl3 openssh-client \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 23,
                  "endLine": 45,
                  "endColumn": 31,
                  "snippet": {
                    "text": "ARG GITLAB_USER=git\n\n# create gitlab user\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n  install -d -o ${GITLAB_USER} /var/log/gitlab/ && \\\n  install -d -o ${GITLAB_USER} ${DATADIR} && \\\n  install -d -o ${GITLAB_USER} ${CONFIG}\n",
                    "rendered": {
                      "text": "ARG GITLAB_USER=git\n\n# create gitlab user\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n  install -d -o ${GITLAB_USER} /var/log/gitlab/ && \\\n  install -d -o ${GITLAB_USER} ${DATADIR} && \\\n  install -d -o ${GITLAB_USER} ${CONFIG}\n",
                      "markdown": "`ARG GITLAB_USER=git\n\n# create gitlab user\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n  install -d -o ${GITLAB_USER} /var/log/gitlab/ && \\\n  install -d -o ${GITLAB_USER} ${DATADIR} && \\\n  install -d -o ${GITLAB_USER} ${CONFIG}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 54,
                  "endLine": 70,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nCMD [\"/scripts/start-workhorse\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/scripts/start-workhorse\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/scripts/start-workhorse\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 67,
                  "endColumn": 4,
                  "snippet": {
                    "text": "USER $GITLAB_USER:$GITLAB_USER\n\nCOPY scripts/ /scripts/\n\nCMD [\"/scripts/start-workhorse\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "USER $GITLAB_USER:$GITLAB_USER\n\nCOPY scripts/ /scripts/\n\nCMD [\"/scripts/start-workhorse\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                      "markdown": "`USER $GITLAB_USER:$GITLAB_USER\n\nCOPY scripts/ /scripts/\n\nCMD [\"/scripts/start-workhorse\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 11,
                  "endLine": 57,
                  "endColumn": 19,
                  "snippet": {
                    "text": "COPY --from=rails --chown=git /srv/gitlab/doc/ /srv/gitlab/doc/\n\n# Requirement of exiftool\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y perl \\\n  && rm -rf /var/lib/apt/lists/* \n\n",
                    "rendered": {
                      "text": "COPY --from=rails --chown=git /srv/gitlab/doc/ /srv/gitlab/doc/\n\n# Requirement of exiftool\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y perl \\\n  && rm -rf /var/lib/apt/lists/* \n\n",
                      "markdown": "`COPY --from=rails --chown=git /srv/gitlab/doc/ /srv/gitlab/doc/\n\n# Requirement of exiftool\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y perl \\\n  && rm -rf /var/lib/apt/lists/* \n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 12,
                  "endLine": 27,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n",
                      "markdown": "`\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 47,
                  "endLine": 58,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n# Requirement of exiftool\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y perl \\\n  && rm -rf /var/lib/apt/lists/* \n\nCOPY --from=exiftool_image / /\n",
                    "rendered": {
                      "text": "\n# Requirement of exiftool\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y perl \\\n  && rm -rf /var/lib/apt/lists/* \n\nCOPY --from=exiftool_image / /\n",
                      "markdown": "`\n# Requirement of exiftool\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y perl \\\n  && rm -rf /var/lib/apt/lists/* \n\nCOPY --from=exiftool_image / /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 4,
                  "endLine": 58,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n# Requirement of exiftool\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y perl \\\n  && rm -rf /var/lib/apt/lists/* \n\nCOPY --from=exiftool_image / /\n",
                    "rendered": {
                      "text": "\n# Requirement of exiftool\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y perl \\\n  && rm -rf /var/lib/apt/lists/* \n\nCOPY --from=exiftool_image / /\n",
                      "markdown": "`\n# Requirement of exiftool\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y perl \\\n  && rm -rf /var/lib/apt/lists/* \n\nCOPY --from=exiftool_image / /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 3,
                  "endLine": 57,
                  "endColumn": 12,
                  "snippet": {
                    "text": "COPY --from=rails --chown=git /srv/gitlab/doc/ /srv/gitlab/doc/\n\n# Requirement of exiftool\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y perl \\\n  && rm -rf /var/lib/apt/lists/* \n\n",
                    "rendered": {
                      "text": "COPY --from=rails --chown=git /srv/gitlab/doc/ /srv/gitlab/doc/\n\n# Requirement of exiftool\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y perl \\\n  && rm -rf /var/lib/apt/lists/* \n\n",
                      "markdown": "`COPY --from=rails --chown=git /srv/gitlab/doc/ /srv/gitlab/doc/\n\n# Requirement of exiftool\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y perl \\\n  && rm -rf /var/lib/apt/lists/* \n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 47,
                  "endLine": 33,
                  "endColumn": 53,
                  "snippet": {
                    "text": "  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  # install perl for exiftool requirement\n  && apt-get install -y --no-install-recommends perl \\\n  && rm -rf /var/lib/apt/lists/*\n\n## FINAL IMAGE ##\n",
                    "rendered": {
                      "text": "  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  # install perl for exiftool requirement\n  && apt-get install -y --no-install-recommends perl \\\n  && rm -rf /var/lib/apt/lists/*\n\n## FINAL IMAGE ##\n",
                      "markdown": "`  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  # install perl for exiftool requirement\n  && apt-get install -y --no-install-recommends perl \\\n  && rm -rf /var/lib/apt/lists/*\n\n## FINAL IMAGE ##\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 4,
                  "endLine": 33,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  # install perl for exiftool requirement\n  && apt-get install -y --no-install-recommends perl \\\n  && rm -rf /var/lib/apt/lists/*\n\n## FINAL IMAGE ##\n",
                    "rendered": {
                      "text": "  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  # install perl for exiftool requirement\n  && apt-get install -y --no-install-recommends perl \\\n  && rm -rf /var/lib/apt/lists/*\n\n## FINAL IMAGE ##\n",
                      "markdown": "`  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  # install perl for exiftool requirement\n  && apt-get install -y --no-install-recommends perl \\\n  && rm -rf /var/lib/apt/lists/*\n\n## FINAL IMAGE ##\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 11,
                  "endLine": 32,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  # install perl for exiftool requirement\n  && apt-get install -y --no-install-recommends perl \\\n  && rm -rf /var/lib/apt/lists/*\n\n",
                    "rendered": {
                      "text": "  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  # install perl for exiftool requirement\n  && apt-get install -y --no-install-recommends perl \\\n  && rm -rf /var/lib/apt/lists/*\n\n",
                      "markdown": "`  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  # install perl for exiftool requirement\n  && apt-get install -y --no-install-recommends perl \\\n  && rm -rf /var/lib/apt/lists/*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 4,
                  "endLine": 31,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  # install perl for exiftool requirement\n  && apt-get install -y --no-install-recommends perl \\\n  && rm -rf /var/lib/apt/lists/*\n",
                    "rendered": {
                      "text": "  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  # install perl for exiftool requirement\n  && apt-get install -y --no-install-recommends perl \\\n  && rm -rf /var/lib/apt/lists/*\n",
                      "markdown": "`  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  # install perl for exiftool requirement\n  && apt-get install -y --no-install-recommends perl \\\n  && rm -rf /var/lib/apt/lists/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 4,
                  "endLine": 28,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n",
                    "rendered": {
                      "text": "RUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n",
                      "markdown": "`RUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 4,
                  "endLine": 27,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n",
                      "markdown": "`\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n  && rm -rf ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endLine": 26,
                  "endColumn": 6,
                  "snippet": {
                    "text": "COPY --from=rails /srv/gitlab/workhorse ${BUILD_DIR}/workhorse\n\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n",
                    "rendered": {
                      "text": "COPY --from=rails /srv/gitlab/workhorse ${BUILD_DIR}/workhorse\n\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n",
                      "markdown": "`COPY --from=rails /srv/gitlab/workhorse ${BUILD_DIR}/workhorse\n\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && FIPS_MODE=${FIPS_MODE} make -C ${BUILD_DIR}/workhorse install \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 20,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nARG BUILD_DIR=/tmp/build\nARG FIPS_MODE=\n\nENV GOTOOLCHAIN=local\n\nRUN mkdir -p ${BUILD_DIR}\nCOPY --from=rails /srv/gitlab/workhorse ${BUILD_DIR}/workhorse\n",
                    "rendered": {
                      "text": "\nARG BUILD_DIR=/tmp/build\nARG FIPS_MODE=\n\nENV GOTOOLCHAIN=local\n\nRUN mkdir -p ${BUILD_DIR}\nCOPY --from=rails /srv/gitlab/workhorse ${BUILD_DIR}/workhorse\n",
                      "markdown": "`\nARG BUILD_DIR=/tmp/build\nARG FIPS_MODE=\n\nENV GOTOOLCHAIN=local\n\nRUN mkdir -p ${BUILD_DIR}\nCOPY --from=rails /srv/gitlab/workhorse ${BUILD_DIR}/workhorse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 52,
                  "endLine": 68,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nCMD [\"/scripts/start-workhorse\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/scripts/start-workhorse\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/scripts/start-workhorse\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 66,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nCMD [\"/scripts/start-workhorse\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nCMD [\"/scripts/start-workhorse\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nCMD [\"/scripts/start-workhorse\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 56,
                  "endColumn": 4,
                  "snippet": {
                    "text": "      release=${GITLAB_VERSION} \\\n      summary=\"Gitlab Workhorse is a smart reverse proxy for GitLab.\" \\\n      description=\"Gitlab Workhorse is a smart reverse proxy for GitLab. It handles large HTTP requests.\"\n\nENV LANG=C.UTF-8\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\n",
                    "rendered": {
                      "text": "      release=${GITLAB_VERSION} \\\n      summary=\"Gitlab Workhorse is a smart reverse proxy for GitLab.\" \\\n      description=\"Gitlab Workhorse is a smart reverse proxy for GitLab. It handles large HTTP requests.\"\n\nENV LANG=C.UTF-8\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\n",
                      "markdown": "`      release=${GITLAB_VERSION} \\\n      summary=\"Gitlab Workhorse is a smart reverse proxy for GitLab.\" \\\n      description=\"Gitlab Workhorse is a smart reverse proxy for GitLab. It handles large HTTP requests.\"\n\nENV LANG=C.UTF-8\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 6,
                  "endLine": 27,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN install -d -o ${UID} -g 0 -m 0770 ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && install -d -o ${UID} -g 0 -m 0770 ${DNF_INSTALL_ROOT}/srv/gitlab/config \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/\n",
                    "rendered": {
                      "text": "RUN install -d -o ${UID} -g 0 -m 0770 ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && install -d -o ${UID} -g 0 -m 0770 ${DNF_INSTALL_ROOT}/srv/gitlab/config \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/\n",
                      "markdown": "`RUN install -d -o ${UID} -g 0 -m 0770 ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && install -d -o ${UID} -g 0 -m 0770 ${DNF_INSTALL_ROOT}/srv/gitlab/config \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-workhorse/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 6,
                  "endLine": 26,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN install -d -o ${UID} -g 0 -m 0770 ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && install -d -o ${UID} -g 0 -m 0770 ${DNF_INSTALL_ROOT}/srv/gitlab/config \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n",
                    "rendered": {
                      "text": "\nRUN install -d -o ${UID} -g 0 -m 0770 ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && install -d -o ${UID} -g 0 -m 0770 ${DNF_INSTALL_ROOT}/srv/gitlab/config \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n",
                      "markdown": "`\nRUN install -d -o ${UID} -g 0 -m 0770 ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && install -d -o ${UID} -g 0 -m 0770 ${DNF_INSTALL_ROOT}/srv/gitlab/config \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/srv/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 24,
                  "endLine": 53,
                  "endColumn": 32,
                  "snippet": {
                    "text": "RUN apt-get update \\\n  && apt-get install -y --no-install-recommends libseccomp2 libjansson4 libyaml-0-2 libxml2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n  && mkdir -p /data/index \\\n  && chown -R $GITLAB_USER:$GITLAB_USER /data/index\n\n",
                    "rendered": {
                      "text": "RUN apt-get update \\\n  && apt-get install -y --no-install-recommends libseccomp2 libjansson4 libyaml-0-2 libxml2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n  && mkdir -p /data/index \\\n  && chown -R $GITLAB_USER:$GITLAB_USER /data/index\n\n",
                      "markdown": "`RUN apt-get update \\\n  && apt-get install -y --no-install-recommends libseccomp2 libjansson4 libyaml-0-2 libxml2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n  && mkdir -p /data/index \\\n  && chown -R $GITLAB_USER:$GITLAB_USER /data/index\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 52,
                  "endLine": 67,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 65,
                  "endColumn": 4,
                  "snippet": {
                    "text": "COPY scripts/ /scripts/\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "COPY scripts/ /scripts/\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`COPY scripts/ /scripts/\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 11,
                  "endLine": 50,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nARG GITLAB_USER=git\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends libseccomp2 libjansson4 libyaml-0-2 libxml2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n",
                    "rendered": {
                      "text": "\nARG GITLAB_USER=git\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends libseccomp2 libjansson4 libyaml-0-2 libxml2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n",
                      "markdown": "`\nARG GITLAB_USER=git\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends libseccomp2 libjansson4 libyaml-0-2 libxml2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 12,
                  "endLine": 22,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nRUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps\n\n# install universal-ctags from source\n",
                    "rendered": {
                      "text": "\nRUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps\n\n# install universal-ctags from source\n",
                      "markdown": "`\nRUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps\n\n# install universal-ctags from source\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n  && mkdir -p /data/index \\\n  && chown -R $GITLAB_USER:$GITLAB_USER /data/index\n\nVOLUME [\"/data/index\"]\n\n",
                    "rendered": {
                      "text": "  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n  && mkdir -p /data/index \\\n  && chown -R $GITLAB_USER:$GITLAB_USER /data/index\n\nVOLUME [\"/data/index\"]\n\n",
                      "markdown": "`  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n  && mkdir -p /data/index \\\n  && chown -R $GITLAB_USER:$GITLAB_USER /data/index\n\nVOLUME [\"/data/index\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 4,
                  "endLine": 51,
                  "endColumn": 13,
                  "snippet": {
                    "text": "ARG GITLAB_USER=git\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends libseccomp2 libjansson4 libyaml-0-2 libxml2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n  && mkdir -p /data/index \\\n",
                    "rendered": {
                      "text": "ARG GITLAB_USER=git\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends libseccomp2 libjansson4 libyaml-0-2 libxml2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n  && mkdir -p /data/index \\\n",
                      "markdown": "`ARG GITLAB_USER=git\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends libseccomp2 libjansson4 libyaml-0-2 libxml2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n  && mkdir -p /data/index \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 3,
                  "endLine": 50,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nARG GITLAB_USER=git\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends libseccomp2 libjansson4 libyaml-0-2 libxml2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n",
                    "rendered": {
                      "text": "\nARG GITLAB_USER=git\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends libseccomp2 libjansson4 libyaml-0-2 libxml2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n",
                      "markdown": "`\nARG GITLAB_USER=git\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends libseccomp2 libjansson4 libyaml-0-2 libxml2 \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 4,
                  "endLine": 42,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  && cd \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && git reset --hard $ZOEKT_INDEXER_VERSION \\\n  && CGO_ENABLED=0 make build \\\n  && mv ./bin/gitlab-zoekt-indexer /usr/local/bin/gitlab-zoekt-indexer\n\n## FINAL IMAGE ##\n\n",
                    "rendered": {
                      "text": "  && cd \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && git reset --hard $ZOEKT_INDEXER_VERSION \\\n  && CGO_ENABLED=0 make build \\\n  && mv ./bin/gitlab-zoekt-indexer /usr/local/bin/gitlab-zoekt-indexer\n\n## FINAL IMAGE ##\n\n",
                      "markdown": "`  && cd \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && git reset --hard $ZOEKT_INDEXER_VERSION \\\n  && CGO_ENABLED=0 make build \\\n  && mv ./bin/gitlab-zoekt-indexer /usr/local/bin/gitlab-zoekt-indexer\n\n## FINAL IMAGE ##\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 4,
                  "endLine": 40,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  && cd ${BUILD_DIR} \\\n  && git clone $ZOEKT_INDEXER_REPO \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && cd \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && git reset --hard $ZOEKT_INDEXER_VERSION \\\n  && CGO_ENABLED=0 make build \\\n  && mv ./bin/gitlab-zoekt-indexer /usr/local/bin/gitlab-zoekt-indexer\n\n",
                    "rendered": {
                      "text": "  && cd ${BUILD_DIR} \\\n  && git clone $ZOEKT_INDEXER_REPO \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && cd \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && git reset --hard $ZOEKT_INDEXER_VERSION \\\n  && CGO_ENABLED=0 make build \\\n  && mv ./bin/gitlab-zoekt-indexer /usr/local/bin/gitlab-zoekt-indexer\n\n",
                      "markdown": "`  && cd ${BUILD_DIR} \\\n  && git clone $ZOEKT_INDEXER_REPO \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && cd \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && git reset --hard $ZOEKT_INDEXER_VERSION \\\n  && CGO_ENABLED=0 make build \\\n  && mv ./bin/gitlab-zoekt-indexer /usr/local/bin/gitlab-zoekt-indexer\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 4,
                  "endLine": 38,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nRUN mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && git clone $ZOEKT_INDEXER_REPO \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && cd \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && git reset --hard $ZOEKT_INDEXER_VERSION \\\n  && CGO_ENABLED=0 make build \\\n",
                    "rendered": {
                      "text": "\nRUN mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && git clone $ZOEKT_INDEXER_REPO \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && cd \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && git reset --hard $ZOEKT_INDEXER_VERSION \\\n  && CGO_ENABLED=0 make build \\\n",
                      "markdown": "`\nRUN mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && git clone $ZOEKT_INDEXER_REPO \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && cd \"gitlab-zoekt-indexer-$ZOEKT_INDEXER_VERSION\" \\\n  && git reset --hard $ZOEKT_INDEXER_VERSION \\\n  && CGO_ENABLED=0 make build \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 4,
                  "endLine": 34,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  && ./autogen.sh \\\n  && ./configure --program-prefix=universal- --enable-json \\\n  && make -j$(nproc) \\\n  && mv ./ctags /usr/local/bin/universal-ctags\n\nRUN mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "  && ./autogen.sh \\\n  && ./configure --program-prefix=universal- --enable-json \\\n  && make -j$(nproc) \\\n  && mv ./ctags /usr/local/bin/universal-ctags\n\nRUN mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n",
                      "markdown": "`  && ./autogen.sh \\\n  && ./configure --program-prefix=universal- --enable-json \\\n  && make -j$(nproc) \\\n  && mv ./ctags /usr/local/bin/universal-ctags\n\nRUN mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 4,
                  "endLine": 30,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  && cd ${BUILD_DIR} \\\n  && git clone https://github.com/universal-ctags/ctags.git \"ctags-$CTAGS_VERSION\" \\\n  && cd \"ctags-$CTAGS_VERSION\" \\\n  && git reset --hard $CTAGS_VERSION \\\n  && ./autogen.sh \\\n  && ./configure --program-prefix=universal- --enable-json \\\n  && make -j$(nproc) \\\n",
                    "rendered": {
                      "text": "  && cd ${BUILD_DIR} \\\n  && git clone https://github.com/universal-ctags/ctags.git \"ctags-$CTAGS_VERSION\" \\\n  && cd \"ctags-$CTAGS_VERSION\" \\\n  && git reset --hard $CTAGS_VERSION \\\n  && ./autogen.sh \\\n  && ./configure --program-prefix=universal- --enable-json \\\n  && make -j$(nproc) \\\n",
                      "markdown": "`  && cd ${BUILD_DIR} \\\n  && git clone https://github.com/universal-ctags/ctags.git \"ctags-$CTAGS_VERSION\" \\\n  && cd \"ctags-$CTAGS_VERSION\" \\\n  && git reset --hard $CTAGS_VERSION \\\n  && ./autogen.sh \\\n  && ./configure --program-prefix=universal- --enable-json \\\n  && make -j$(nproc) \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 4,
                  "endLine": 28,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# install universal-ctags from source\nRUN mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && git clone https://github.com/universal-ctags/ctags.git \"ctags-$CTAGS_VERSION\" \\\n  && cd \"ctags-$CTAGS_VERSION\" \\\n  && git reset --hard $CTAGS_VERSION \\\n  && ./autogen.sh \\\n",
                    "rendered": {
                      "text": "# install universal-ctags from source\nRUN mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && git clone https://github.com/universal-ctags/ctags.git \"ctags-$CTAGS_VERSION\" \\\n  && cd \"ctags-$CTAGS_VERSION\" \\\n  && git reset --hard $CTAGS_VERSION \\\n  && ./autogen.sh \\\n",
                      "markdown": "`# install universal-ctags from source\nRUN mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && git clone https://github.com/universal-ctags/ctags.git \"ctags-$CTAGS_VERSION\" \\\n  && cd \"ctags-$CTAGS_VERSION\" \\\n  && git reset --hard $CTAGS_VERSION \\\n  && ./autogen.sh \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 4,
                  "endLine": 23,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps\n\n# install universal-ctags from source\nRUN mkdir -p ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "RUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps\n\n# install universal-ctags from source\nRUN mkdir -p ${BUILD_DIR} \\\n",
                      "markdown": "`RUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps\n\n# install universal-ctags from source\nRUN mkdir -p ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 4,
                  "endLine": 22,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps\n\n# install universal-ctags from source\n",
                    "rendered": {
                      "text": "\nRUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps\n\n# install universal-ctags from source\n",
                      "markdown": "`\nRUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps\n\n# install universal-ctags from source\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 6,
                  "snippet": {
                    "text": "ENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps\n\n",
                    "rendered": {
                      "text": "ENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps\n\n",
                      "markdown": "`ENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 18,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GOPATH=/go\nARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\nARG GITLAB_BASE_IMAGE\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n",
                    "rendered": {
                      "text": "ARG GOPATH=/go\nARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\nARG GITLAB_BASE_IMAGE\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n",
                      "markdown": "`ARG GOPATH=/go\nARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\nARG GITLAB_BASE_IMAGE\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git pkg-config build-essential autoconf automake libjansson-dev' \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000707"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Platform)",
            "id": "BD000707"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/metrics.sh"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 97,
                  "endLine": 37,
                  "endColumn": 106,
                  "snippet": {
                    "text": "      # for _arch in ${_arch_list[@]}\n      for _arch in ${_arch_list}\n      do\n        sha_list=$(echo \"${_image_manifest}\" | jq -r --arg arch \"$_arch\" '.manifests[] | select (.platform.architecture == $arch) | .digest')\n        for sha in ${sha_list}\n        do\n          image_name=${tagged_image%%:*}\n",
                    "rendered": {
                      "text": "      # for _arch in ${_arch_list[@]}\n      for _arch in ${_arch_list}\n      do\n        sha_list=$(echo \"${_image_manifest}\" | jq -r --arg arch \"$_arch\" '.manifests[] | select (.platform.architecture == $arch) | .digest')\n        for sha in ${sha_list}\n        do\n          image_name=${tagged_image%%:*}\n",
                      "markdown": "`      # for _arch in ${_arch_list[@]}\n      for _arch in ${_arch_list}\n      do\n        sha_list=$(echo \"${_image_manifest}\" | jq -r --arg arch \"$_arch\" '.manifests[] | select (.platform.architecture == $arch) | .digest')\n        for sha in ${sha_list}\n        do\n          image_name=${tagged_image%%:*}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/metrics.sh"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 5,
                  "endLine": 57,
                  "endColumn": 10,
                  "snippet": {
                    "text": "      layers=$(echo ${_image_manifest} | jq -r '.layers | length')\n      total_size=$(echo ${_image_manifest} | jq -r '[ .layers[].size ] | add')\n      # append to METRICS_FILE\n      cat << EOF >> \"${METRICS_FILE}\"\ncontainer_layers{image=\"${tagged_image}-${_arch}\"} ${layers}\ncontainer_total_compressed_bytes{image=\"${tagged_image}-${_arch}\"} ${total_size}\nEOF\n",
                    "rendered": {
                      "text": "      layers=$(echo ${_image_manifest} | jq -r '.layers | length')\n      total_size=$(echo ${_image_manifest} | jq -r '[ .layers[].size ] | add')\n      # append to METRICS_FILE\n      cat << EOF >> \"${METRICS_FILE}\"\ncontainer_layers{image=\"${tagged_image}-${_arch}\"} ${layers}\ncontainer_total_compressed_bytes{image=\"${tagged_image}-${_arch}\"} ${total_size}\nEOF\n",
                      "markdown": "`      layers=$(echo ${_image_manifest} | jq -r '.layers | length')\n      total_size=$(echo ${_image_manifest} | jq -r '[ .layers[].size ] | add')\n      # append to METRICS_FILE\n      cat << EOF >> \"${METRICS_FILE}\"\ncontainer_layers{image=\"${tagged_image}-${_arch}\"} ${layers}\ncontainer_total_compressed_bytes{image=\"${tagged_image}-${_arch}\"} ${total_size}\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/metrics.sh"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 9,
                  "endLine": 44,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          _arch_manifest=$(skopeo inspect --raw \"docker://${CI_REGISTRY_IMAGE}/${image_name}@${sha}\" )\n          layers=$(echo \"${_arch_manifest}\" | jq -r '.layers | length')\n          total_size=$(echo \"${_arch_manifest}\" | jq -r '[ .layers[].size ] | add')\n          cat << EOF >> \"${METRICS_FILE}\"\ncontainer_layers{image=\"${tagged_image}-${_arch}\"} ${layers}\ncontainer_total_compressed_bytes{image=\"${tagged_image}-${_arch}\"} ${total_size}\nEOF\n",
                    "rendered": {
                      "text": "          _arch_manifest=$(skopeo inspect --raw \"docker://${CI_REGISTRY_IMAGE}/${image_name}@${sha}\" )\n          layers=$(echo \"${_arch_manifest}\" | jq -r '.layers | length')\n          total_size=$(echo \"${_arch_manifest}\" | jq -r '[ .layers[].size ] | add')\n          cat << EOF >> \"${METRICS_FILE}\"\ncontainer_layers{image=\"${tagged_image}-${_arch}\"} ${layers}\ncontainer_total_compressed_bytes{image=\"${tagged_image}-${_arch}\"} ${total_size}\nEOF\n",
                      "markdown": "`          _arch_manifest=$(skopeo inspect --raw \"docker://${CI_REGISTRY_IMAGE}/${image_name}@${sha}\" )\n          layers=$(echo \"${_arch_manifest}\" | jq -r '.layers | length')\n          total_size=$(echo \"${_arch_manifest}\" | jq -r '[ .layers[].size ] | add')\n          cat << EOF >> \"${METRICS_FILE}\"\ncontainer_layers{image=\"${tagged_image}-${_arch}\"} ${layers}\ncontainer_total_compressed_bytes{image=\"${tagged_image}-${_arch}\"} ${total_size}\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/build-scripts/metrics.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n  mkdir -p metrics\n  METRICS_FILE=metrics/image_metrics.txt\n  cat << EOF > \"${METRICS_FILE}\"\n# TYPE container_total_compressed_bytes gauge\n# UNIT container_total_compressed_bytes bytes\n# HELP container_total_compressed_bytes Sum of container layer sizes in bytes\n",
                    "rendered": {
                      "text": "\n  mkdir -p metrics\n  METRICS_FILE=metrics/image_metrics.txt\n  cat << EOF > \"${METRICS_FILE}\"\n# TYPE container_total_compressed_bytes gauge\n# UNIT container_total_compressed_bytes bytes\n# HELP container_total_compressed_bytes Sum of container layer sizes in bytes\n",
                      "markdown": "`\n  mkdir -p metrics\n  METRICS_FILE=metrics/image_metrics.txt\n  cat << EOF > \"${METRICS_FILE}\"\n# TYPE container_total_compressed_bytes gauge\n# UNIT container_total_compressed_bytes bytes\n# HELP container_total_compressed_bytes Sum of container layer sizes in bytes\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6,
                  "endLine": 22,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && pip3 install --upgrade pip setuptools \\\n    && rm -rf /usr/local/lib/python3.9/test \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && cp -R  --parents /usr/local/{bin,lib,include} /assets\n",
                    "rendered": {
                      "text": "    && pip3 install --upgrade pip setuptools \\\n    && rm -rf /usr/local/lib/python3.9/test \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && cp -R  --parents /usr/local/{bin,lib,include} /assets\n",
                      "markdown": "`    && pip3 install --upgrade pip setuptools \\\n    && rm -rf /usr/local/lib/python3.9/test \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && cp -R  --parents /usr/local/{bin,lib,include} /assets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 6,
                  "endLine": 21,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    && ldconfig \\\n    && pip3 install --upgrade pip setuptools \\\n    && rm -rf /usr/local/lib/python3.9/test \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && cp -R  --parents /usr/local/{bin,lib,include} /assets\n",
                    "rendered": {
                      "text": "    && ldconfig \\\n    && pip3 install --upgrade pip setuptools \\\n    && rm -rf /usr/local/lib/python3.9/test \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && cp -R  --parents /usr/local/{bin,lib,include} /assets\n",
                      "markdown": "`    && ldconfig \\\n    && pip3 install --upgrade pip setuptools \\\n    && rm -rf /usr/local/lib/python3.9/test \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && cp -R  --parents /usr/local/{bin,lib,include} /assets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 29,
                  "endLine": 19,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    && make -j \"$(nproc)\" \\\n    && make -j \"$(nproc)\" install \\\n    && ldconfig \\\n    && pip3 install --upgrade pip setuptools \\\n    && rm -rf /usr/local/lib/python3.9/test \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && cp -R  --parents /usr/local/{bin,lib,include} /assets\n",
                    "rendered": {
                      "text": "    && make -j \"$(nproc)\" \\\n    && make -j \"$(nproc)\" install \\\n    && ldconfig \\\n    && pip3 install --upgrade pip setuptools \\\n    && rm -rf /usr/local/lib/python3.9/test \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && cp -R  --parents /usr/local/{bin,lib,include} /assets\n",
                      "markdown": "`    && make -j \"$(nproc)\" \\\n    && make -j \"$(nproc)\" install \\\n    && ldconfig \\\n    && pip3 install --upgrade pip setuptools \\\n    && rm -rf /usr/local/lib/python3.9/test \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && cp -R  --parents /usr/local/{bin,lib,include} /assets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 6,
                  "endLine": 18,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    && ./configure --prefix=/usr/local --enable-shared --with-readline=editline LDFLAGS='-Wl,--rpath=/usr/local/lib' \\\n    && make -j \"$(nproc)\" \\\n    && make -j \"$(nproc)\" install \\\n    && ldconfig \\\n    && pip3 install --upgrade pip setuptools \\\n    && rm -rf /usr/local/lib/python3.9/test \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n",
                    "rendered": {
                      "text": "    && ./configure --prefix=/usr/local --enable-shared --with-readline=editline LDFLAGS='-Wl,--rpath=/usr/local/lib' \\\n    && make -j \"$(nproc)\" \\\n    && make -j \"$(nproc)\" install \\\n    && ldconfig \\\n    && pip3 install --upgrade pip setuptools \\\n    && rm -rf /usr/local/lib/python3.9/test \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n",
                      "markdown": "`    && ./configure --prefix=/usr/local --enable-shared --with-readline=editline LDFLAGS='-Wl,--rpath=/usr/local/lib' \\\n    && make -j \"$(nproc)\" \\\n    && make -j \"$(nproc)\" install \\\n    && ldconfig \\\n    && pip3 install --upgrade pip setuptools \\\n    && rm -rf /usr/local/lib/python3.9/test \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 6,
                  "endLine": 13,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz.asc -o Python-${PYTHON_VERSION}.tgz.asc \\\n    && gpg2 --keyserver hkps://keys.openpgp.org --auto-key-retrieve --verify Python-${PYTHON_VERSION}.tgz.asc Python-${PYTHON_VERSION}.tgz \\\n    && tar -xzf Python-${PYTHON_VERSION}.tgz \\\n    && cd Python-${PYTHON_VERSION} \\\n    && ./configure --prefix=/usr/local --enable-shared --with-readline=editline LDFLAGS='-Wl,--rpath=/usr/local/lib' \\\n    && make -j \"$(nproc)\" \\\n    && make -j \"$(nproc)\" install \\\n    && ldconfig \\\n    && pip3 install --upgr",
                    "rendered": {
                      "text": "\\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz.asc -o Python-${PYTHON_VERSION}.tgz.asc \\\n    && gpg2 --keyserver hkps://keys.openpgp.org --auto-key-retrieve --verify Python-${PYTHON_VERSION}.tgz.asc Python-${PYTHON_VERSION}.tgz \\\n    && tar -xzf Python-${PYTHON_VERSION}.tgz \\\n    && cd Python-${PYTHON_VERSION} \\\n    && ./configure --prefix=/usr/local --enable-shared --with-readline=editline LDFLAGS='-Wl,--rpath=/usr/local/lib' \\\n    && make -j \"$(nproc)\" \\\n    && make -j \"$(nproc)\" install \\\n    && ldconfig \\\n    && pip3 install --upgr",
                      "markdown": "`\\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz.asc -o Python-${PYTHON_VERSION}.tgz.asc \\\n    && gpg2 --keyserver hkps://keys.openpgp.org --auto-key-retrieve --verify Python-${PYTHON_VERSION}.tgz.asc Python-${PYTHON_VERSION}.tgz \\\n    && tar -xzf Python-${PYTHON_VERSION}.tgz \\\n    && cd Python-${PYTHON_VERSION} \\\n    && ./configure --prefix=/usr/local --enable-shared --with-readline=editline LDFLAGS='-Wl,--rpath=/usr/local/lib' \\\n    && make -j \"$(nproc)\" \\\n    && make -j \"$(nproc)\" install \\\n    && ldconfig \\\n    && pip3 install --upgr`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 6,
                  "endLine": 11,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nRUN mkdir /assets \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz -o Python-${PYTHON_VERSION}.tgz \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz.asc -o Python-${PYTHON_VERSION}.tgz.asc \\\n    && gpg2 --keyserver hkps://keys.openpgp.org --auto-key-retrieve --verify Python-${PYTHON_VERSION}.tgz.asc Python-${PYTHON_VERSION}.tgz \\\n    && tar -xzf Python-${PYTHON_VERSION}.tgz \\\n    && cd Python-${PYTHON_VERSION} \\\n",
                    "rendered": {
                      "text": "\nRUN mkdir /assets \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz -o Python-${PYTHON_VERSION}.tgz \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz.asc -o Python-${PYTHON_VERSION}.tgz.asc \\\n    && gpg2 --keyserver hkps://keys.openpgp.org --auto-key-retrieve --verify Python-${PYTHON_VERSION}.tgz.asc Python-${PYTHON_VERSION}.tgz \\\n    && tar -xzf Python-${PYTHON_VERSION}.tgz \\\n    && cd Python-${PYTHON_VERSION} \\\n",
                      "markdown": "`\nRUN mkdir /assets \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz -o Python-${PYTHON_VERSION}.tgz \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz.asc -o Python-${PYTHON_VERSION}.tgz.asc \\\n    && gpg2 --keyserver hkps://keys.openpgp.org --auto-key-retrieve --verify Python-${PYTHON_VERSION}.tgz.asc Python-${PYTHON_VERSION}.tgz \\\n    && tar -xzf Python-${PYTHON_VERSION}.tgz \\\n    && cd Python-${PYTHON_VERSION} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 6,
                  "endLine": 10,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ENV LANG=C.UTF-8\n\nRUN mkdir /assets \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz -o Python-${PYTHON_VERSION}.tgz \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz.asc -o Python-${PYTHON_VERSION}.tgz.asc \\\n    && gpg2 --keyserver hkps://keys.openpgp.org --auto-key-retrieve --verify Python-${PYTHON_VERSION}.tgz.asc Python-${PYTHON_VERSION}.tgz \\\n    && tar -xzf Python-${PYTHON_VERSION}.tgz \\\n",
                    "rendered": {
                      "text": "ENV LANG=C.UTF-8\n\nRUN mkdir /assets \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz -o Python-${PYTHON_VERSION}.tgz \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz.asc -o Python-${PYTHON_VERSION}.tgz.asc \\\n    && gpg2 --keyserver hkps://keys.openpgp.org --auto-key-retrieve --verify Python-${PYTHON_VERSION}.tgz.asc Python-${PYTHON_VERSION}.tgz \\\n    && tar -xzf Python-${PYTHON_VERSION}.tgz \\\n",
                      "markdown": "`ENV LANG=C.UTF-8\n\nRUN mkdir /assets \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz -o Python-${PYTHON_VERSION}.tgz \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz.asc -o Python-${PYTHON_VERSION}.tgz.asc \\\n    && gpg2 --keyserver hkps://keys.openpgp.org --auto-key-retrieve --verify Python-${PYTHON_VERSION}.tgz.asc Python-${PYTHON_VERSION}.tgz \\\n    && tar -xzf Python-${PYTHON_VERSION}.tgz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 7,
                  "endColumn": 4,
                  "snippet": {
                    "text": "FROM ${BUILD_IMAGE}\n\nARG PYTHON_VERSION=3.9.20\n\nENV LANG=C.UTF-8\n\nRUN mkdir /assets \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz -o Python-${PYTHON_VERSION}.tgz \\\n",
                    "rendered": {
                      "text": "FROM ${BUILD_IMAGE}\n\nARG PYTHON_VERSION=3.9.20\n\nENV LANG=C.UTF-8\n\nRUN mkdir /assets \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz -o Python-${PYTHON_VERSION}.tgz \\\n",
                      "markdown": "`FROM ${BUILD_IMAGE}\n\nARG PYTHON_VERSION=3.9.20\n\nENV LANG=C.UTF-8\n\nRUN mkdir /assets \\\n    && curl -f --retry 6 -L https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz -o Python-${PYTHON_VERSION}.tgz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 35,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  apt-get purge -y $buildDeps && \\\n  rm -rf /var/lib/apt/list/* && \\\n  rm -rf ${BUILD_DIR}\n\nCMD [ \"python\" ]\n",
                    "rendered": {
                      "text": "  apt-get purge -y $buildDeps && \\\n  rm -rf /var/lib/apt/list/* && \\\n  rm -rf ${BUILD_DIR}\n\nCMD [ \"python\" ]\n",
                      "markdown": "`  apt-get purge -y $buildDeps && \\\n  rm -rf /var/lib/apt/list/* && \\\n  rm -rf ${BUILD_DIR}\n\nCMD [ \"python\" ]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 9,
                  "endLine": 17,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  libssl-dev \\\n  make \\\n  zlib1g-dev' && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n",
                    "rendered": {
                      "text": "  libssl-dev \\\n  make \\\n  zlib1g-dev' && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n",
                      "markdown": "`  libssl-dev \\\n  make \\\n  zlib1g-dev' && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  rm -rf /usr/local/lib/python3.9/lib-dynload/_sqlite3.* && \\\n  rm -rf /usr/local/lib/python3.9/test && \\\n  find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + && \\\n  apt-get purge -y $buildDeps && \\\n  rm -rf /var/lib/apt/list/* && \\\n  rm -rf ${BUILD_DIR}\n\n",
                    "rendered": {
                      "text": "  rm -rf /usr/local/lib/python3.9/lib-dynload/_sqlite3.* && \\\n  rm -rf /usr/local/lib/python3.9/test && \\\n  find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + && \\\n  apt-get purge -y $buildDeps && \\\n  rm -rf /var/lib/apt/list/* && \\\n  rm -rf ${BUILD_DIR}\n\n",
                      "markdown": "`  rm -rf /usr/local/lib/python3.9/lib-dynload/_sqlite3.* && \\\n  rm -rf /usr/local/lib/python3.9/test && \\\n  find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + && \\\n  apt-get purge -y $buildDeps && \\\n  rm -rf /var/lib/apt/list/* && \\\n  rm -rf ${BUILD_DIR}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  rm -rf /usr/local/lib/python3.9/lib-dynload/dbm.* && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/_sqlite3.* && \\\n  rm -rf /usr/local/lib/python3.9/test && \\\n  find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + && \\\n  apt-get purge -y $buildDeps && \\\n  rm -rf /var/lib/apt/list/* && \\\n  rm -rf ${BUILD_DIR}\n",
                    "rendered": {
                      "text": "  rm -rf /usr/local/lib/python3.9/lib-dynload/dbm.* && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/_sqlite3.* && \\\n  rm -rf /usr/local/lib/python3.9/test && \\\n  find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + && \\\n  apt-get purge -y $buildDeps && \\\n  rm -rf /var/lib/apt/list/* && \\\n  rm -rf ${BUILD_DIR}\n",
                      "markdown": "`  rm -rf /usr/local/lib/python3.9/lib-dynload/dbm.* && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/_sqlite3.* && \\\n  rm -rf /usr/local/lib/python3.9/test && \\\n  find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + && \\\n  apt-get purge -y $buildDeps && \\\n  rm -rf /var/lib/apt/list/* && \\\n  rm -rf ${BUILD_DIR}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  ./configure --enable-shared --with-readline=editline --with-dbmliborder= && make && \\\n  make install && \\\n  ldconfig && \\\n  pip3 install --upgrade pip setuptools && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/dbm.* && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/_sqlite3.* && \\\n  rm -rf /usr/local/lib/python3.9/test && \\\n",
                    "rendered": {
                      "text": "  ./configure --enable-shared --with-readline=editline --with-dbmliborder= && make && \\\n  make install && \\\n  ldconfig && \\\n  pip3 install --upgrade pip setuptools && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/dbm.* && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/_sqlite3.* && \\\n  rm -rf /usr/local/lib/python3.9/test && \\\n",
                      "markdown": "`  ./configure --enable-shared --with-readline=editline --with-dbmliborder= && make && \\\n  make install && \\\n  ldconfig && \\\n  pip3 install --upgrade pip setuptools && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/dbm.* && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/_sqlite3.* && \\\n  rm -rf /usr/local/lib/python3.9/test && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 1,
                  "endLine": 25,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  cd ${BUILD_DIR}/Python-${PYTHON_VERSION} && \\\n  ./configure --enable-shared --with-readline=editline --with-dbmliborder= && make && \\\n  make install && \\\n  ldconfig && \\\n  pip3 install --upgrade pip setuptools && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/dbm.* && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/_sqlite3.* && \\\n",
                    "rendered": {
                      "text": "  cd ${BUILD_DIR}/Python-${PYTHON_VERSION} && \\\n  ./configure --enable-shared --with-readline=editline --with-dbmliborder= && make && \\\n  make install && \\\n  ldconfig && \\\n  pip3 install --upgrade pip setuptools && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/dbm.* && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/_sqlite3.* && \\\n",
                      "markdown": "`  cd ${BUILD_DIR}/Python-${PYTHON_VERSION} && \\\n  ./configure --enable-shared --with-readline=editline --with-dbmliborder= && make && \\\n  make install && \\\n  ldconfig && \\\n  pip3 install --upgrade pip setuptools && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/dbm.* && \\\n  rm -rf /usr/local/lib/python3.9/lib-dynload/_sqlite3.* && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n  | tar -xz -C ${BUILD_DIR}  && \\\n  cd ${BUILD_DIR}/Python-${PYTHON_VERSION} && \\\n  ./configure --enable-shared --with-readline=editline --with-dbmliborder= && make && \\\n  make install && \\\n",
                    "rendered": {
                      "text": "  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n  | tar -xz -C ${BUILD_DIR}  && \\\n  cd ${BUILD_DIR}/Python-${PYTHON_VERSION} && \\\n  ./configure --enable-shared --with-readline=editline --with-dbmliborder= && make && \\\n  make install && \\\n",
                      "markdown": "`  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n  | tar -xz -C ${BUILD_DIR}  && \\\n  cd ${BUILD_DIR}/Python-${PYTHON_VERSION} && \\\n  ./configure --enable-shared --with-readline=editline --with-dbmliborder= && make && \\\n  make install && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  apt-get update && \\\n  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n  | tar -xz -C ${BUILD_DIR}  && \\\n  cd ${BUILD_DIR}/Python-${PYTHON_VERSION} && \\\n  ./configure --enable-shared --with-readline=editline --with-dbmliborder= && make && \\\n",
                    "rendered": {
                      "text": "  apt-get update && \\\n  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n  | tar -xz -C ${BUILD_DIR}  && \\\n  cd ${BUILD_DIR}/Python-${PYTHON_VERSION} && \\\n  ./configure --enable-shared --with-readline=editline --with-dbmliborder= && make && \\\n",
                      "markdown": "`  apt-get update && \\\n  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n  | tar -xz -C ${BUILD_DIR}  && \\\n  cd ${BUILD_DIR}/Python-${PYTHON_VERSION} && \\\n  ./configure --enable-shared --with-readline=editline --with-dbmliborder= && make && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  make \\\n  zlib1g-dev' && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n  | tar -xz -C ${BUILD_DIR}  && \\\n",
                    "rendered": {
                      "text": "  make \\\n  zlib1g-dev' && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n  | tar -xz -C ${BUILD_DIR}  && \\\n",
                      "markdown": "`  make \\\n  zlib1g-dev' && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n  | tar -xz -C ${BUILD_DIR}  && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  libssl-dev \\\n  make \\\n  zlib1g-dev' && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n",
                    "rendered": {
                      "text": "  libssl-dev \\\n  make \\\n  zlib1g-dev' && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n",
                      "markdown": "`  libssl-dev \\\n  make \\\n  zlib1g-dev' && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends $buildDeps && \\\n  mkdir ${BUILD_DIR} && \\\n  curl --retry 6 -fsSL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-python/Dockerfile"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN buildDeps=' \\\n  build-essential \\\n  ca-certificates \\\n  curl \\\n  file \\\n  gcc \\\n  libffi-dev \\\n",
                    "rendered": {
                      "text": "RUN buildDeps=' \\\n  build-essential \\\n  ca-certificates \\\n  curl \\\n  file \\\n  gcc \\\n  libffi-dev \\\n",
                      "markdown": "`RUN buildDeps=' \\\n  build-essential \\\n  ca-certificates \\\n  curl \\\n  file \\\n  gcc \\\n  libffi-dev \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/doc/adr/0002-use-tini-for-process-management.md"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 77,
                  "endColumn": 7,
                  "snippet": {
                    "text": "no extra configuration to run. The latest release for `tini` is dated\n2020-04-19, while the latest release for `dumb-init` is dated\n2021-02-01.\n\nDocker uses a fork of `tini` in `docker-init`. The GitLab Runner ships\nwith `tini` in its RedHat-based helper.\n\nOmnibus GitLab and the GitLab Development Kit use `runit`, but it requires\n",
                    "rendered": {
                      "text": "no extra configuration to run. The latest release for `tini` is dated\n2020-04-19, while the latest release for `dumb-init` is dated\n2021-02-01.\n\nDocker uses a fork of `tini` in `docker-init`. The GitLab Runner ships\nwith `tini` in its RedHat-based helper.\n\nOmnibus GitLab and the GitLab Development Kit use `runit`, but it requires\n",
                      "markdown": "`no extra configuration to run. The latest release for `tini` is dated\n2020-04-19, while the latest release for `dumb-init` is dated\n2021-02-01.\n\nDocker uses a fork of `tini` in `docker-init`. The GitLab Runner ships\nwith `tini` in its RedHat-based helper.\n\nOmnibus GitLab and the GitLab Development Kit use `runit`, but it requires\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/doc/adr/0002-use-tini-for-process-management.md"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 69,
                  "endLine": 35,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n### Why are there so many zombie processes?\n\nIt appears that both `webservice` and `sidekiq` nodes use the `gpgme`\nRuby gem, which shells out to `gpgconf` and `gpg` when a user manages\nGPG keys:\n\n```ruby\n",
                    "rendered": {
                      "text": "\n### Why are there so many zombie processes?\n\nIt appears that both `webservice` and `sidekiq` nodes use the `gpgme`\nRuby gem, which shells out to `gpgconf` and `gpg` when a user manages\nGPG keys:\n\n```ruby\n",
                      "markdown": "`\n### Why are there so many zombie processes?\n\nIt appears that both `webservice` and `sidekiq` nodes use the `gpgme`\nRuby gem, which shells out to `gpgconf` and `gpg` when a user manages\nGPG keys:\n\n```ruby\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/configuration/puma.rb"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 96,
                  "endLine": 61,
                  "endColumn": 104,
                  "snippet": {
                    "text": "  }\n\n  ssl_params[:ca] = ENV['PUMA_SSL_CLIENT_CERT'] if ENV['PUMA_SSL_CLIENT_CERT']\n  ssl_params[:key_password_command] = ENV['PUMA_SSL_KEY_PASSWORD_COMMAND'] if ENV['PUMA_SSL_KEY_PASSWORD_COMMAND']\n  ssl_params[:ssl_cipher_filter] = ENV['PUMA_SSL_CIPHER_FILTER'] if ENV['PUMA_SSL_CIPHER_FILTER']\n  ssl_params[:verify_mode] = ENV['PUMA_SSL_VERIFY_MODE'] || 'none'\n\n",
                    "rendered": {
                      "text": "  }\n\n  ssl_params[:ca] = ENV['PUMA_SSL_CLIENT_CERT'] if ENV['PUMA_SSL_CLIENT_CERT']\n  ssl_params[:key_password_command] = ENV['PUMA_SSL_KEY_PASSWORD_COMMAND'] if ENV['PUMA_SSL_KEY_PASSWORD_COMMAND']\n  ssl_params[:ssl_cipher_filter] = ENV['PUMA_SSL_CIPHER_FILTER'] if ENV['PUMA_SSL_CIPHER_FILTER']\n  ssl_params[:verify_mode] = ENV['PUMA_SSL_VERIFY_MODE'] || 'none'\n\n",
                      "markdown": "`  }\n\n  ssl_params[:ca] = ENV['PUMA_SSL_CLIENT_CERT'] if ENV['PUMA_SSL_CLIENT_CERT']\n  ssl_params[:key_password_command] = ENV['PUMA_SSL_KEY_PASSWORD_COMMAND'] if ENV['PUMA_SSL_KEY_PASSWORD_COMMAND']\n  ssl_params[:ssl_cipher_filter] = ENV['PUMA_SSL_CIPHER_FILTER'] if ENV['PUMA_SSL_CIPHER_FILTER']\n  ssl_params[:verify_mode] = ENV['PUMA_SSL_VERIFY_MODE'] || 'none'\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/configuration/puma.rb"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 56,
                  "endLine": 61,
                  "endColumn": 64,
                  "snippet": {
                    "text": "  }\n\n  ssl_params[:ca] = ENV['PUMA_SSL_CLIENT_CERT'] if ENV['PUMA_SSL_CLIENT_CERT']\n  ssl_params[:key_password_command] = ENV['PUMA_SSL_KEY_PASSWORD_COMMAND'] if ENV['PUMA_SSL_KEY_PASSWORD_COMMAND']\n  ssl_params[:ssl_cipher_filter] = ENV['PUMA_SSL_CIPHER_FILTER'] if ENV['PUMA_SSL_CIPHER_FILTER']\n  ssl_params[:verify_mode] = ENV['PUMA_SSL_VERIFY_MODE'] || 'none'\n\n",
                    "rendered": {
                      "text": "  }\n\n  ssl_params[:ca] = ENV['PUMA_SSL_CLIENT_CERT'] if ENV['PUMA_SSL_CLIENT_CERT']\n  ssl_params[:key_password_command] = ENV['PUMA_SSL_KEY_PASSWORD_COMMAND'] if ENV['PUMA_SSL_KEY_PASSWORD_COMMAND']\n  ssl_params[:ssl_cipher_filter] = ENV['PUMA_SSL_CIPHER_FILTER'] if ENV['PUMA_SSL_CIPHER_FILTER']\n  ssl_params[:verify_mode] = ENV['PUMA_SSL_VERIFY_MODE'] || 'none'\n\n",
                      "markdown": "`  }\n\n  ssl_params[:ca] = ENV['PUMA_SSL_CLIENT_CERT'] if ENV['PUMA_SSL_CLIENT_CERT']\n  ssl_params[:key_password_command] = ENV['PUMA_SSL_KEY_PASSWORD_COMMAND'] if ENV['PUMA_SSL_KEY_PASSWORD_COMMAND']\n  ssl_params[:ssl_cipher_filter] = ENV['PUMA_SSL_CIPHER_FILTER'] if ENV['PUMA_SSL_CIPHER_FILTER']\n  ssl_params[:verify_mode] = ENV['PUMA_SSL_VERIFY_MODE'] || 'none'\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/configuration/puma.rb"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 18,
                  "endLine": 61,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  }\n\n  ssl_params[:ca] = ENV['PUMA_SSL_CLIENT_CERT'] if ENV['PUMA_SSL_CLIENT_CERT']\n  ssl_params[:key_password_command] = ENV['PUMA_SSL_KEY_PASSWORD_COMMAND'] if ENV['PUMA_SSL_KEY_PASSWORD_COMMAND']\n  ssl_params[:ssl_cipher_filter] = ENV['PUMA_SSL_CIPHER_FILTER'] if ENV['PUMA_SSL_CIPHER_FILTER']\n  ssl_params[:verify_mode] = ENV['PUMA_SSL_VERIFY_MODE'] || 'none'\n\n",
                    "rendered": {
                      "text": "  }\n\n  ssl_params[:ca] = ENV['PUMA_SSL_CLIENT_CERT'] if ENV['PUMA_SSL_CLIENT_CERT']\n  ssl_params[:key_password_command] = ENV['PUMA_SSL_KEY_PASSWORD_COMMAND'] if ENV['PUMA_SSL_KEY_PASSWORD_COMMAND']\n  ssl_params[:ssl_cipher_filter] = ENV['PUMA_SSL_CIPHER_FILTER'] if ENV['PUMA_SSL_CIPHER_FILTER']\n  ssl_params[:verify_mode] = ENV['PUMA_SSL_VERIFY_MODE'] || 'none'\n\n",
                      "markdown": "`  }\n\n  ssl_params[:ca] = ENV['PUMA_SSL_CLIENT_CERT'] if ENV['PUMA_SSL_CLIENT_CERT']\n  ssl_params[:key_password_command] = ENV['PUMA_SSL_KEY_PASSWORD_COMMAND'] if ENV['PUMA_SSL_KEY_PASSWORD_COMMAND']\n  ssl_params[:ssl_cipher_filter] = ENV['PUMA_SSL_CIPHER_FILTER'] if ENV['PUMA_SSL_CIPHER_FILTER']\n  ssl_params[:verify_mode] = ENV['PUMA_SSL_VERIFY_MODE'] || 'none'\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/configuration/puma.rb"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 55,
                  "endLine": 35,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# Bind the server to \"url\". \"tcp://\", \"unix://\" and \"ssl://\" are the only\n# accepted protocols.\n\n# We want to provide the ability to enable individually control HTTP (`INTERNAL_PORT`)\n# HTTPS (`SSL_INTERNAL_PORT`):\n#\n# 1. HTTP on, HTTPS on: Since `INTERNAL_PORT` is configured, we listen on it.\n",
                    "rendered": {
                      "text": "# Bind the server to \"url\". \"tcp://\", \"unix://\" and \"ssl://\" are the only\n# accepted protocols.\n\n# We want to provide the ability to enable individually control HTTP (`INTERNAL_PORT`)\n# HTTPS (`SSL_INTERNAL_PORT`):\n#\n# 1. HTTP on, HTTPS on: Since `INTERNAL_PORT` is configured, we listen on it.\n",
                      "markdown": "`# Bind the server to \"url\". \"tcp://\", \"unix://\" and \"ssl://\" are the only\n# accepted protocols.\n\n# We want to provide the ability to enable individually control HTTP (`INTERNAL_PORT`)\n# HTTPS (`SSL_INTERNAL_PORT`):\n#\n# 1. HTTP on, HTTPS on: Since `INTERNAL_PORT` is configured, we listen on it.\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-webservice/scripts/process-wrapper"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  if command -v xtail >/dev/null; then\n    xtail /var/log/gitlab &\n  else\n    tail -f /var/log/gitlab/* &\n  fi\nfi\n\n",
                    "rendered": {
                      "text": "  if command -v xtail >/dev/null; then\n    xtail /var/log/gitlab &\n  else\n    tail -f /var/log/gitlab/* &\n  fi\nfi\n\n",
                      "markdown": "`  if command -v xtail >/dev/null; then\n    xtail /var/log/gitlab &\n  else\n    tail -f /var/log/gitlab/* &\n  fi\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-gomplate/scripts/build"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 37,
                  "endLine": 9,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\ncd /build/gomplate-${GOMPLATE_VERSION#v}\nmkdir -p /target\nCOMMIT=${GOMPLATE_VERSION} make build\ncp bin/* /target/\n",
                    "rendered": {
                      "text": "\ncd /build/gomplate-${GOMPLATE_VERSION#v}\nmkdir -p /target\nCOMMIT=${GOMPLATE_VERSION} make build\ncp bin/* /target/\n",
                      "markdown": "`\ncd /build/gomplate-${GOMPLATE_VERSION#v}\nmkdir -p /target\nCOMMIT=${GOMPLATE_VERSION} make build\ncp bin/* /target/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-gomplate/scripts/download"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 74,
                  "endLine": 18,
                  "endColumn": 4,
                  "snippet": {
                    "text": "curl --retry 6 -fLOsS \"${GOMPLATE_SOURCE_URL}\"\n\n# Verify source tarball\nsha256sum -c <<< \"${GOMPLATE_SHA256} $(basename \"${GOMPLATE_SOURCE_URL}\")\"\ntar xzf \"$(basename \"${GOMPLATE_SOURCE_URL}\")\"\n\npopd # from /build\n",
                    "rendered": {
                      "text": "curl --retry 6 -fLOsS \"${GOMPLATE_SOURCE_URL}\"\n\n# Verify source tarball\nsha256sum -c <<< \"${GOMPLATE_SHA256} $(basename \"${GOMPLATE_SOURCE_URL}\")\"\ntar xzf \"$(basename \"${GOMPLATE_SOURCE_URL}\")\"\n\npopd # from /build\n",
                      "markdown": "`curl --retry 6 -fLOsS \"${GOMPLATE_SOURCE_URL}\"\n\n# Verify source tarball\nsha256sum -c <<< \"${GOMPLATE_SHA256} $(basename \"${GOMPLATE_SOURCE_URL}\")\"\ntar xzf \"$(basename \"${GOMPLATE_SOURCE_URL}\")\"\n\npopd # from /build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-gomplate/scripts/download"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 19,
                  "endLine": 14,
                  "endColumn": 5,
                  "snippet": {
                    "text": "GOMPLATE_SHA256=\"${2}\"\n\npushd /build\n# Downloads sources\ncurl --retry 6 -fLOsS \"${GOMPLATE_SOURCE_URL}\"\n\n# Verify source tarball\nsha256sum -c <<< \"${GOMPLATE_SHA256} $(basename \"${GOMPLATE_SOURCE_URL}\")\"\n",
                    "rendered": {
                      "text": "GOMPLATE_SHA256=\"${2}\"\n\npushd /build\n# Downloads sources\ncurl --retry 6 -fLOsS \"${GOMPLATE_SOURCE_URL}\"\n\n# Verify source tarball\nsha256sum -c <<< \"${GOMPLATE_SHA256} $(basename \"${GOMPLATE_SOURCE_URL}\")\"\n",
                      "markdown": "`GOMPLATE_SHA256=\"${2}\"\n\npushd /build\n# Downloads sources\ncurl --retry 6 -fLOsS \"${GOMPLATE_SOURCE_URL}\"\n\n# Verify source tarball\nsha256sum -c <<< \"${GOMPLATE_SHA256} $(basename \"${GOMPLATE_SOURCE_URL}\")\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-gomplate/scripts/download"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/bin/bash\n# This script designed to download and verify the sources of Gomplate\n# Items from environment:\n# - GOMPLATE_SOURCE_URL - complete URL of the source tarball\n# - GOMPLATE_SHA256 - The shasum of the tarball\n",
                    "rendered": {
                      "text": "#!/bin/bash\n# This script designed to download and verify the sources of Gomplate\n# Items from environment:\n# - GOMPLATE_SOURCE_URL - complete URL of the source tarball\n# - GOMPLATE_SHA256 - The shasum of the tarball\n",
                      "markdown": "`#!/bin/bash\n# This script designed to download and verify the sources of Gomplate\n# Items from environment:\n# - GOMPLATE_SOURCE_URL - complete URL of the source tarball\n# - GOMPLATE_SHA256 - The shasum of the tarball\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-gomplate/scripts/dependencies"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 7,
                  "endLine": 5,
                  "snippet": {
                    "text": "#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends make\n",
                    "rendered": {
                      "text": "#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends make\n",
                      "markdown": "`#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends make\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-gomplate/scripts/dependencies"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 51,
                  "endLine": 7,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends make\n",
                    "rendered": {
                      "text": "\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends make\n",
                      "markdown": "`\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends make\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-gomplate/scripts/dependencies"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends make\n",
                    "rendered": {
                      "text": "#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends make\n",
                      "markdown": "`#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends make\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-gomplate/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6,
                  "endLine": 22,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN mkdir -p /assets/usr/local/bin \\\n    && /scripts/download $GOMPLATE_SOURCE_URL $GOMPLATE_SHA256 \\\n    && /scripts/build $GOMPLATE_VERSION \\\n    && mv /target/gomplate /assets/usr/local/bin/gomplate\n",
                    "rendered": {
                      "text": "RUN mkdir -p /assets/usr/local/bin \\\n    && /scripts/download $GOMPLATE_SOURCE_URL $GOMPLATE_SHA256 \\\n    && /scripts/build $GOMPLATE_VERSION \\\n    && mv /target/gomplate /assets/usr/local/bin/gomplate\n",
                      "markdown": "`RUN mkdir -p /assets/usr/local/bin \\\n    && /scripts/download $GOMPLATE_SOURCE_URL $GOMPLATE_SHA256 \\\n    && /scripts/build $GOMPLATE_VERSION \\\n    && mv /target/gomplate /assets/usr/local/bin/gomplate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-gomplate/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 11,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nENV LANG=C.UTF-8\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n",
                    "rendered": {
                      "text": "\nENV LANG=C.UTF-8\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n",
                      "markdown": "`\nENV LANG=C.UTF-8\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-gomplate/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 16,
                  "endLine": 9,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GOMPLATE_VERSION=\"v3.11.8\"\nARG GOMPLATE_SHA256=a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\n\nENV LANG=C.UTF-8\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n\n",
                    "rendered": {
                      "text": "ARG GOMPLATE_VERSION=\"v3.11.8\"\nARG GOMPLATE_SHA256=a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\n\nENV LANG=C.UTF-8\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n\n",
                      "markdown": "`ARG GOMPLATE_VERSION=\"v3.11.8\"\nARG GOMPLATE_SHA256=a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\n\nENV LANG=C.UTF-8\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-gomplate/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 8,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nARG GOMPLATE_VERSION=\"v3.11.8\"\nARG GOMPLATE_SHA256=a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\n\nENV LANG=C.UTF-8\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n",
                    "rendered": {
                      "text": "\nARG GOMPLATE_VERSION=\"v3.11.8\"\nARG GOMPLATE_SHA256=a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\n\nENV LANG=C.UTF-8\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n",
                      "markdown": "`\nARG GOMPLATE_VERSION=\"v3.11.8\"\nARG GOMPLATE_SHA256=a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\n\nENV LANG=C.UTF-8\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-gomplate/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 12,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GOMPLATE_SHA256=a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\n\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n\nRUN mkdir -p /build /target\nCOPY scripts/ /scripts\n",
                    "rendered": {
                      "text": "ARG GOMPLATE_SHA256=a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\n\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n\nRUN mkdir -p /build /target\nCOPY scripts/ /scripts\n",
                      "markdown": "`ARG GOMPLATE_SHA256=a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\n\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n\nRUN mkdir -p /build /target\nCOPY scripts/ /scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-gomplate/Dockerfile"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 10,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nARG GOMPLATE_VERSION=\"v3.11.8\"\nARG GOMPLATE_SHA256=a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\n\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n\n",
                    "rendered": {
                      "text": "\nARG GOMPLATE_VERSION=\"v3.11.8\"\nARG GOMPLATE_SHA256=a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\n\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n\n",
                      "markdown": "`\nARG GOMPLATE_VERSION=\"v3.11.8\"\nARG GOMPLATE_SHA256=a38ba762e57a0aa5d7040f818a1ddbb613c42bf0432c897e33a99d21388ecdc7\n\nENV GOMPLATE_SOURCE_URL=https://github.com/hairyhenderson/gomplate/archive/refs/tags/$GOMPLATE_VERSION.tar.gz\n\nENV GOTOOLCHAIN=local\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rails/patches/yarn.patch"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 22,
                  "endLine": 4,
                  "endColumn": 5,
                  "snippet": {
                    "text": "#!/bin/sh\n\ncd /home/$USER/gitlab/\ncurl --retry 6 -fs https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/14543.diff | patch && \\\necho \"Yarn patch applied successfully!\"\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\ncd /home/$USER/gitlab/\ncurl --retry 6 -fs https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/14543.diff | patch && \\\necho \"Yarn patch applied successfully!\"\n",
                      "markdown": "`#!/bin/sh\n\ncd /home/$USER/gitlab/\ncurl --retry 6 -fs https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/14543.diff | patch && \\\necho \"Yarn patch applied successfully!\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/gitaly-config/config.toml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 2,
                  "endLine": 57,
                  "endColumn": 10,
                  "snippet": {
                    "text": "[gitlab.http-settings]\n# read_timeout = 300\n# user = someone\n# password = somepass\n# ca_file = /etc/ssl/cert.pem\n# ca_path = /etc/pki/tls/certs\n\n",
                    "rendered": {
                      "text": "[gitlab.http-settings]\n# read_timeout = 300\n# user = someone\n# password = somepass\n# ca_file = /etc/ssl/cert.pem\n# ca_path = /etc/pki/tls/certs\n\n",
                      "markdown": "`[gitlab.http-settings]\n# read_timeout = 300\n# user = someone\n# password = somepass\n# ca_file = /etc/ssl/cert.pem\n# ca_path = /etc/pki/tls/certs\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/gitaly-config/config.toml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 67,
                  "endLine": 6,
                  "endColumn": 71,
                  "snippet": {
                    "text": "# The directory where Gitaly's executables are stored\nbin_dir = \"/usr/local/bin\"\n\n# The directory where Gitaly creates files and directories required at runtime.\n# This includes e.g. internal sockets, the Git execution environment or\n# Gitaly's hooks.\nruntime_dir = \"/home/git\"\n",
                    "rendered": {
                      "text": "# The directory where Gitaly's executables are stored\nbin_dir = \"/usr/local/bin\"\n\n# The directory where Gitaly creates files and directories required at runtime.\n# This includes e.g. internal sockets, the Git execution environment or\n# Gitaly's hooks.\nruntime_dir = \"/home/git\"\n",
                      "markdown": "`# The directory where Gitaly's executables are stored\nbin_dir = \"/usr/local/bin\"\n\n# The directory where Gitaly creates files and directories required at runtime.\n# This includes e.g. internal sockets, the Git execution environment or\n# Gitaly's hooks.\nruntime_dir = \"/home/git\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/gitaly-config/config.toml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# prometheus_listen_addr = \"localhost:9236\"\n#\n\n# # Git executable settings\n[git]\nuse_bundled_binaries = true\n\n",
                    "rendered": {
                      "text": "# prometheus_listen_addr = \"localhost:9236\"\n#\n\n# # Git executable settings\n[git]\nuse_bundled_binaries = true\n\n",
                      "markdown": "`# prometheus_listen_addr = \"localhost:9236\"\n#\n\n# # Git executable settings\n[git]\nuse_bundled_binaries = true\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/gitaly-config/config.toml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 42,
                  "endLine": 7,
                  "endColumn": 47,
                  "snippet": {
                    "text": "bin_dir = \"/usr/local/bin\"\n\n# The directory where Gitaly creates files and directories required at runtime.\n# This includes e.g. internal sockets, the Git execution environment or\n# Gitaly's hooks.\nruntime_dir = \"/home/git\"\n\n",
                    "rendered": {
                      "text": "bin_dir = \"/usr/local/bin\"\n\n# The directory where Gitaly creates files and directories required at runtime.\n# This includes e.g. internal sockets, the Git execution environment or\n# Gitaly's hooks.\nruntime_dir = \"/home/git\"\n\n",
                      "markdown": "`bin_dir = \"/usr/local/bin\"\n\n# The directory where Gitaly creates files and directories required at runtime.\n# This includes e.g. internal sockets, the Git execution environment or\n# Gitaly's hooks.\nruntime_dir = \"/home/git\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/openshift.metadata"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 31,
                  "endLine": 3,
                  "endColumn": 40,
                  "snippet": {
                    "text": "io.openshift.tags=gitlab-pages\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab Pages service container.\nio.openshift.non-scalable=false\nio.openshift-min-memory=2Gi\nio.openshift.min-cpu=900m\n",
                    "rendered": {
                      "text": "io.openshift.tags=gitlab-pages\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab Pages service container.\nio.openshift.non-scalable=false\nio.openshift-min-memory=2Gi\nio.openshift.min-cpu=900m\n",
                      "markdown": "`io.openshift.tags=gitlab-pages\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab Pages service container.\nio.openshift.non-scalable=false\nio.openshift-min-memory=2Gi\nio.openshift.min-cpu=900m\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 32,
                  "endLine": 30,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    && cd ${PROJECT}-${VERSION} \\\n    && FIPS_MODE=${FIPS_MODE} GOEXPERIMENT=${EXTRA_EXPERIMENT_FLAGS} make 'gitlab-pages' \"LAST_TAG=v${VERSION}\" \"VERSION=${VERSION}\" \\\n    && install -D -m +x ./gitlab-pages /assets/usr/local/bin/gitlab-pages \\\n    && mkdir /assets/licenses && cp LICENSE /assets/licenses/GitLab.txt\n",
                    "rendered": {
                      "text": "    && cd ${PROJECT}-${VERSION} \\\n    && FIPS_MODE=${FIPS_MODE} GOEXPERIMENT=${EXTRA_EXPERIMENT_FLAGS} make 'gitlab-pages' \"LAST_TAG=v${VERSION}\" \"VERSION=${VERSION}\" \\\n    && install -D -m +x ./gitlab-pages /assets/usr/local/bin/gitlab-pages \\\n    && mkdir /assets/licenses && cp LICENSE /assets/licenses/GitLab.txt\n",
                      "markdown": "`    && cd ${PROJECT}-${VERSION} \\\n    && FIPS_MODE=${FIPS_MODE} GOEXPERIMENT=${EXTRA_EXPERIMENT_FLAGS} make 'gitlab-pages' \"LAST_TAG=v${VERSION}\" \"VERSION=${VERSION}\" \\\n    && install -D -m +x ./gitlab-pages /assets/usr/local/bin/gitlab-pages \\\n    && mkdir /assets/licenses && cp LICENSE /assets/licenses/GitLab.txt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3,
                  "endLine": 19,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nENV PRIVATE_TOKEN=${API_TOKEN}\n\nRUN ldconfig \\\n    && mkdir /assets \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && /gitlab-fetch \\\n",
                    "rendered": {
                      "text": "\nENV PRIVATE_TOKEN=${API_TOKEN}\n\nRUN ldconfig \\\n    && mkdir /assets \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && /gitlab-fetch \\\n",
                      "markdown": "`\nENV PRIVATE_TOKEN=${API_TOKEN}\n\nRUN ldconfig \\\n    && mkdir /assets \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && /gitlab-fetch \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 17,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\n\nRUN ldconfig \\\n    && mkdir /assets \\\n",
                    "rendered": {
                      "text": "ENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\n\nRUN ldconfig \\\n    && mkdir /assets \\\n",
                      "markdown": "`ENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\n\nRUN ldconfig \\\n    && mkdir /assets \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 13,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG API_TOKEN=\nARG FIPS_MODE=0\nARG EXTRA_EXPERIMENT_FLAGS=\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n",
                    "rendered": {
                      "text": "ARG API_TOKEN=\nARG FIPS_MODE=0\nARG EXTRA_EXPERIMENT_FLAGS=\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n",
                      "markdown": "`ARG API_TOKEN=\nARG FIPS_MODE=0\nARG EXTRA_EXPERIMENT_FLAGS=\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 23,
                  "endLine": 38,
                  "endColumn": 31,
                  "snippet": {
                    "text": "ARG DATA_DIRECTORY=/srv/gitlab-pages\n\n# create gitlab user, necessary directories and set ownership\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n    && mkdir -p ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab \\\n    && chown -R ${GITLAB_USER}:${GITLAB_USER} ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab\n\n",
                    "rendered": {
                      "text": "ARG DATA_DIRECTORY=/srv/gitlab-pages\n\n# create gitlab user, necessary directories and set ownership\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n    && mkdir -p ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab \\\n    && chown -R ${GITLAB_USER}:${GITLAB_USER} ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab\n\n",
                      "markdown": "`ARG DATA_DIRECTORY=/srv/gitlab-pages\n\n# create gitlab user, necessary directories and set ownership\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n    && mkdir -p ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab \\\n    && chown -R ${GITLAB_USER}:${GITLAB_USER} ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 54,
                  "endLine": 53,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nCMD [\"/scripts/start-pages\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/scripts/start-pages\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/scripts/start-pages\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 50,
                  "endColumn": 4,
                  "snippet": {
                    "text": "USER $GITLAB_USER:$GITLAB_USER\n\nCOPY scripts/ /scripts/\n\nCMD [\"/scripts/start-pages\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "USER $GITLAB_USER:$GITLAB_USER\n\nCOPY scripts/ /scripts/\n\nCMD [\"/scripts/start-pages\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                      "markdown": "`USER $GITLAB_USER:$GITLAB_USER\n\nCOPY scripts/ /scripts/\n\nCMD [\"/scripts/start-pages\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 11,
                  "endLine": 21,
                  "snippet": {
                    "text": "\nWORKDIR /tmp/build\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n  \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-pages/repository/archive.tar.bz2?sha=${GITLAB_PAGES_VERSION}\" \\\n",
                    "rendered": {
                      "text": "\nWORKDIR /tmp/build\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n  \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-pages/repository/archive.tar.bz2?sha=${GITLAB_PAGES_VERSION}\" \\\n",
                      "markdown": "`\nWORKDIR /tmp/build\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n  \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-pages/repository/archive.tar.bz2?sha=${GITLAB_PAGES_VERSION}\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 44,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    && chown -R ${GITLAB_USER}:${GITLAB_USER} ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab\n\nCOPY --from=builder /usr/local/bin/gitlab-pages /bin/gitlab-pages\n\nENV CONFIG_TEMPLATE_DIRECTORY=${CONFIG_DIRECTORY}\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                    "rendered": {
                      "text": "    && chown -R ${GITLAB_USER}:${GITLAB_USER} ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab\n\nCOPY --from=builder /usr/local/bin/gitlab-pages /bin/gitlab-pages\n\nENV CONFIG_TEMPLATE_DIRECTORY=${CONFIG_DIRECTORY}\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                      "markdown": "`    && chown -R ${GITLAB_USER}:${GITLAB_USER} ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab\n\nCOPY --from=builder /usr/local/bin/gitlab-pages /bin/gitlab-pages\n\nENV CONFIG_TEMPLATE_DIRECTORY=${CONFIG_DIRECTORY}\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 6,
                  "endLine": 40,
                  "endColumn": 13,
                  "snippet": {
                    "text": "# create gitlab user, necessary directories and set ownership\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n    && mkdir -p ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab \\\n    && chown -R ${GITLAB_USER}:${GITLAB_USER} ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab\n\nCOPY --from=builder /usr/local/bin/gitlab-pages /bin/gitlab-pages\n\n",
                    "rendered": {
                      "text": "# create gitlab user, necessary directories and set ownership\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n    && mkdir -p ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab \\\n    && chown -R ${GITLAB_USER}:${GITLAB_USER} ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab\n\nCOPY --from=builder /usr/local/bin/gitlab-pages /bin/gitlab-pages\n\n",
                      "markdown": "`# create gitlab user, necessary directories and set ownership\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} \\\n    && mkdir -p ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab \\\n    && chown -R ${GITLAB_USER}:${GITLAB_USER} ${CONFIG_DIRECTORY} ${DATA_DIRECTORY} /var/log/gitlab\n\nCOPY --from=builder /usr/local/bin/gitlab-pages /bin/gitlab-pages\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n  \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-pages/repository/archive.tar.bz2?sha=${GITLAB_PAGES_VERSION}\" \\\n  | tar xj --strip-components=1\nRUN make 'gitlab-pages' \"LAST_TAG=v${GITLAB_PAGES_VERSION}\" \"VERSION=${GITLAB_PAGES_VERSION}\"\nRUN install -m +x ./gitlab-pages /usr/local/bin/gitlab-pages\n\n",
                    "rendered": {
                      "text": "  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n  \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-pages/repository/archive.tar.bz2?sha=${GITLAB_PAGES_VERSION}\" \\\n  | tar xj --strip-components=1\nRUN make 'gitlab-pages' \"LAST_TAG=v${GITLAB_PAGES_VERSION}\" \"VERSION=${GITLAB_PAGES_VERSION}\"\nRUN install -m +x ./gitlab-pages /usr/local/bin/gitlab-pages\n\n",
                      "markdown": "`  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n  \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-pages/repository/archive.tar.bz2?sha=${GITLAB_PAGES_VERSION}\" \\\n  | tar xj --strip-components=1\nRUN make 'gitlab-pages' \"LAST_TAG=v${GITLAB_PAGES_VERSION}\" \"VERSION=${GITLAB_PAGES_VERSION}\"\nRUN install -m +x ./gitlab-pages /usr/local/bin/gitlab-pages\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 3,
                  "endLine": 23,
                  "endColumn": 9,
                  "snippet": {
                    "text": "RUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n  \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-pages/repository/archive.tar.bz2?sha=${GITLAB_PAGES_VERSION}\" \\\n  | tar xj --strip-components=1\nRUN make 'gitlab-pages' \"LAST_TAG=v${GITLAB_PAGES_VERSION}\" \"VERSION=${GITLAB_PAGES_VERSION}\"\n",
                    "rendered": {
                      "text": "RUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n  \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-pages/repository/archive.tar.bz2?sha=${GITLAB_PAGES_VERSION}\" \\\n  | tar xj --strip-components=1\nRUN make 'gitlab-pages' \"LAST_TAG=v${GITLAB_PAGES_VERSION}\" \"VERSION=${GITLAB_PAGES_VERSION}\"\n",
                      "markdown": "`RUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n  \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-pages/repository/archive.tar.bz2?sha=${GITLAB_PAGES_VERSION}\" \\\n  | tar xj --strip-components=1\nRUN make 'gitlab-pages' \"LAST_TAG=v${GITLAB_PAGES_VERSION}\" \"VERSION=${GITLAB_PAGES_VERSION}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 12,
                  "snippet": {
                    "text": "WORKDIR /tmp/build\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n  \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-pages/repository/archive.tar.bz2?sha=${GITLAB_PAGES_VERSION}\" \\\n",
                    "rendered": {
                      "text": "WORKDIR /tmp/build\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n  \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-pages/repository/archive.tar.bz2?sha=${GITLAB_PAGES_VERSION}\" \\\n",
                      "markdown": "`WORKDIR /tmp/build\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n  \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-pages/repository/archive.tar.bz2?sha=${GITLAB_PAGES_VERSION}\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 20,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nWORKDIR /tmp/build\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n",
                    "rendered": {
                      "text": "\nWORKDIR /tmp/build\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n",
                      "markdown": "`\nWORKDIR /tmp/build\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n  make\nRUN curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 16,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG CI_API_V4_URL=\"https://gitlab.com/api/v4\"\n# the token is used in security and build mirrors of the project\nARG FETCH_ARTIFACTS_PAT\n\nENV GOTOOLCHAIN=local\n\nWORKDIR /tmp/build\n\n",
                    "rendered": {
                      "text": "ARG CI_API_V4_URL=\"https://gitlab.com/api/v4\"\n# the token is used in security and build mirrors of the project\nARG FETCH_ARTIFACTS_PAT\n\nENV GOTOOLCHAIN=local\n\nWORKDIR /tmp/build\n\n",
                      "markdown": "`ARG CI_API_V4_URL=\"https://gitlab.com/api/v4\"\n# the token is used in security and build mirrors of the project\nARG FETCH_ARTIFACTS_PAT\n\nENV GOTOOLCHAIN=local\n\nWORKDIR /tmp/build\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 54,
                  "endLine": 69,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nCMD [\"/scripts/start-pages\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/scripts/start-pages\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/scripts/start-pages\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 66,
                  "endColumn": 4,
                  "snippet": {
                    "text": "USER ${UID}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitlab-pages\n\nCMD [\"/scripts/start-pages\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "USER ${UID}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitlab-pages\n\nCMD [\"/scripts/start-pages\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n",
                      "markdown": "`USER ${UID}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitlab-pages\n\nCMD [\"/scripts/start-pages\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 \\\nCMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 64,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitlab-pages\n\nCMD [\"/scripts/start-pages\"]\n\n",
                    "rendered": {
                      "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitlab-pages\n\nCMD [\"/scripts/start-pages\"]\n\n",
                      "markdown": "`    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitlab-pages\n\nCMD [\"/scripts/start-pages\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 6,
                  "endLine": 32,
                  "endColumn": 13,
                  "snippet": {
                    "text": "   && mkdir -p ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}/scripts\n\n# Add software to ${DNF_INSTALL_ROOT} so it's available in final image\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --se",
                    "rendered": {
                      "text": "   && mkdir -p ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}/scripts\n\n# Add software to ${DNF_INSTALL_ROOT} so it's available in final image\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --se",
                      "markdown": "`   && mkdir -p ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}/scripts\n\n# Add software to ${DNF_INSTALL_ROOT} so it's available in final image\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --se`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-pages/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6,
                  "endLine": 31,
                  "endColumn": 13,
                  "snippet": {
                    "text": "dnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/ \\\n    && mkdir -p ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_RO",
                    "rendered": {
                      "text": "dnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/ \\\n    && mkdir -p ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_RO",
                      "markdown": "`dnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/ \\\n    && mkdir -p ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}${DATA_DIRECTORY} ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_RO`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 163,
                  "endLine": 12,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\nRUN mkdir -p /build /target\nCOPY scripts/ /scripts\n",
                    "rendered": {
                      "text": "ARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\nRUN mkdir -p /build /target\nCOPY scripts/ /scripts\n",
                      "markdown": "`ARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\nRUN mkdir -p /build /target\nCOPY scripts/ /scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 15,
                  "endLine": 11,
                  "endColumn": 20,
                  "snippet": {
                    "text": "ARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\nRUN mkdir -p /build /target\n",
                    "rendered": {
                      "text": "ARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\nRUN mkdir -p /build /target\n",
                      "markdown": "`ARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\nRUN mkdir -p /build /target\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/Dockerfile"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 10,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GM_CHECKSUM_SHA256\nARG _SIGNATURE_KEY=EBDFDB21B020EE8FD151A88DE301047DE1198975\nARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\n",
                    "rendered": {
                      "text": "ARG GM_CHECKSUM_SHA256\nARG _SIGNATURE_KEY=EBDFDB21B020EE8FD151A88DE301047DE1198975\nARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\n",
                      "markdown": "`ARG GM_CHECKSUM_SHA256\nARG _SIGNATURE_KEY=EBDFDB21B020EE8FD151A88DE301047DE1198975\nARG _SIGNATURE_ENFORCE=1\n\nENV GM_SOURCE_URL=\"https://ftp.fau.de/macports/distfiles/GraphicsMagick/GraphicsMagick-${GM_VERSION}.tar.xz\"\n# SourceForge # ENV GM_SOURCE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz/download\"\nENV GM_SIGNATURE_URL=\"https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/${GM_VERSION}/GraphicsMagick-${GM_VERSION}.tar.xz.sig/download\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-elasticsearch-indexer/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 6,
                  "endLine": 27,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && cd ${PROJECT}-${VERSION} \\\n    && make \\\n    && make install \\\n    && cp --parents /usr/local/bin/gitlab-elasticsearch-indexer /assets\n",
                    "rendered": {
                      "text": "    && cd ${PROJECT}-${VERSION} \\\n    && make \\\n    && make install \\\n    && cp --parents /usr/local/bin/gitlab-elasticsearch-indexer /assets\n",
                      "markdown": "`    && cd ${PROJECT}-${VERSION} \\\n    && make \\\n    && make install \\\n    && cp --parents /usr/local/bin/gitlab-elasticsearch-indexer /assets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-elasticsearch-indexer/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 15,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\n\nRUN mkdir -p /assets \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n",
                    "rendered": {
                      "text": "ENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\n\nRUN mkdir -p /assets \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n",
                      "markdown": "`ENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\n\nRUN mkdir -p /assets \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-elasticsearch-indexer/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 11,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG VERSION=v1.3.0\nARG API_URL=\nARG API_TOKEN=\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n",
                    "rendered": {
                      "text": "ARG VERSION=v1.3.0\nARG API_URL=\nARG API_TOKEN=\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n",
                      "markdown": "`ARG VERSION=v1.3.0\nARG API_URL=\nARG API_TOKEN=\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/apply_ruby_patches.sh"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 38,
                  "endLine": 25,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    done\nfi\n\n# Apply patches that apply to specific Ruby versions\nif [[ -d \"${patchdir}/${ruby_version}\" ]]; then\n    for i in \"${patchdir}/${ruby_version}\"/*.patch; do\n    echo \"$i...\"\n",
                    "rendered": {
                      "text": "    done\nfi\n\n# Apply patches that apply to specific Ruby versions\nif [[ -d \"${patchdir}/${ruby_version}\" ]]; then\n    for i in \"${patchdir}/${ruby_version}\"/*.patch; do\n    echo \"$i...\"\n",
                      "markdown": "`    done\nfi\n\n# Apply patches that apply to specific Ruby versions\nif [[ -d \"${patchdir}/${ruby_version}\" ]]; then\n    for i in \"${patchdir}/${ruby_version}\"/*.patch; do\n    echo \"$i...\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/apply_ruby_patches.sh"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    fi\ndone < \"${patchdir}/mandatory_patches\"\n\n# Apply patches that apply to all Ruby major versions\nif [[ -d \"${patchdir}/${ruby_major_version}\" ]]; then\n    for i in \"${patchdir}/${ruby_major_version}\"/*.patch; do\n    echo \"$i...\"\n",
                    "rendered": {
                      "text": "    fi\ndone < \"${patchdir}/mandatory_patches\"\n\n# Apply patches that apply to all Ruby major versions\nif [[ -d \"${patchdir}/${ruby_major_version}\" ]]; then\n    for i in \"${patchdir}/${ruby_major_version}\"/*.patch; do\n    echo \"$i...\"\n",
                      "markdown": "`    fi\ndone < \"${patchdir}/mandatory_patches\"\n\n# Apply patches that apply to all Ruby major versions\nif [[ -d \"${patchdir}/${ruby_major_version}\" ]]; then\n    for i in \"${patchdir}/${ruby_major_version}\"/*.patch; do\n    echo \"$i...\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/cleanup-gems"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 45,
                  "endLine": 112,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  find \"${ruby_dir}\"/*/gems/${gem}-*/lib ! -path */\"${ruby_ver}\"/* -name '*.so' -type f -print -delete || true\ndone\n\n# Remove extraneous shared libraries for grpc\nfind \"${ruby_dir}\"/*/gems/grpc-*/src/ruby/lib/grpc ! -path */\"${ruby_ver}\"/* -name '*.so' -type f -print -delete || true\n",
                    "rendered": {
                      "text": "  find \"${ruby_dir}\"/*/gems/${gem}-*/lib ! -path */\"${ruby_ver}\"/* -name '*.so' -type f -print -delete || true\ndone\n\n# Remove extraneous shared libraries for grpc\nfind \"${ruby_dir}\"/*/gems/grpc-*/src/ruby/lib/grpc ! -path */\"${ruby_ver}\"/* -name '*.so' -type f -print -delete || true\n",
                      "markdown": "`  find \"${ruby_dir}\"/*/gems/${gem}-*/lib ! -path */\"${ruby_ver}\"/* -name '*.so' -type f -print -delete || true\ndone\n\n# Remove extraneous shared libraries for grpc\nfind \"${ruby_dir}\"/*/gems/grpc-*/src/ruby/lib/grpc ! -path */\"${ruby_ver}\"/* -name '*.so' -type f -print -delete || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/cleanup-gems"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 1,
                  "endLine": 108,
                  "endColumn": 7,
                  "snippet": {
                    "text": "gems=(\"gitlab-glfm-markdown\" \"google-protobuf\" \"nokogiri\" \"prometheus-client-mmap\" \"re2\")\n\nfor gem in \"${gems[@]}\"; do\n  find \"${ruby_dir}\"/*/gems/${gem}-*/lib ! -path */\"${ruby_ver}\"/* -name '*.so' -type f -print -delete || true\ndone\n\n# Remove extraneous shared libraries for grpc\n",
                    "rendered": {
                      "text": "gems=(\"gitlab-glfm-markdown\" \"google-protobuf\" \"nokogiri\" \"prometheus-client-mmap\" \"re2\")\n\nfor gem in \"${gems[@]}\"; do\n  find \"${ruby_dir}\"/*/gems/${gem}-*/lib ! -path */\"${ruby_ver}\"/* -name '*.so' -type f -print -delete || true\ndone\n\n# Remove extraneous shared libraries for grpc\n",
                      "markdown": "`gems=(\"gitlab-glfm-markdown\" \"google-protobuf\" \"nokogiri\" \"prometheus-client-mmap\" \"re2\")\n\nfor gem in \"${gems[@]}\"; do\n  find \"${ruby_dir}\"/*/gems/${gem}-*/lib ! -path */\"${ruby_ver}\"/* -name '*.so' -type f -print -delete || true\ndone\n\n# Remove extraneous shared libraries for grpc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/cleanup-gems"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 53,
                  "endLine": 95,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# Clean up extraneous shared libraries for precompiled gems.\n#\n# Precompiled gems can be identified via the `x86_64-linux` suffix:\n# $ ls -1 /srv/gitlab/vendor/bundle/ruby/3.1.0/gems | grep x86_64-linux\n# devfile-0.0.24.pre.alpha1-x86_64-linux\n# gitlab-glfm-markdown-0.0.12-x86_64-linux\n# google-protobuf-3.25.2-x86_64-linux\n",
                    "rendered": {
                      "text": "# Clean up extraneous shared libraries for precompiled gems.\n#\n# Precompiled gems can be identified via the `x86_64-linux` suffix:\n# $ ls -1 /srv/gitlab/vendor/bundle/ruby/3.1.0/gems | grep x86_64-linux\n# devfile-0.0.24.pre.alpha1-x86_64-linux\n# gitlab-glfm-markdown-0.0.12-x86_64-linux\n# google-protobuf-3.25.2-x86_64-linux\n",
                      "markdown": "`# Clean up extraneous shared libraries for precompiled gems.\n#\n# Precompiled gems can be identified via the `x86_64-linux` suffix:\n# $ ls -1 /srv/gitlab/vendor/bundle/ruby/3.1.0/gems | grep x86_64-linux\n# devfile-0.0.24.pre.alpha1-x86_64-linux\n# gitlab-glfm-markdown-0.0.12-x86_64-linux\n# google-protobuf-3.25.2-x86_64-linux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/shared/build-scripts/cleanup-gems"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 79,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  ${ruby_dir}/*/gems/grpc-*/src/ruby/ext \\\n  ${ruby_dir}/*/gems/grpc-*/src/ruby/spec \\\n  ${ruby_dir}/*/gems/grpc-*/third_party\n\nfind ${ruby_dir} -name '*.gem' -type f -print -delete\n\n# Clean up native gems\n# gpgme cleanup is broken until https://github.com/ueno/ruby-gpgme/pull/178\n",
                    "rendered": {
                      "text": "  ${ruby_dir}/*/gems/grpc-*/src/ruby/ext \\\n  ${ruby_dir}/*/gems/grpc-*/src/ruby/spec \\\n  ${ruby_dir}/*/gems/grpc-*/third_party\n\nfind ${ruby_dir} -name '*.gem' -type f -print -delete\n\n# Clean up native gems\n# gpgme cleanup is broken until https://github.com/ueno/ruby-gpgme/pull/178\n",
                      "markdown": "`  ${ruby_dir}/*/gems/grpc-*/src/ruby/ext \\\n  ${ruby_dir}/*/gems/grpc-*/src/ruby/spec \\\n  ${ruby_dir}/*/gems/grpc-*/third_party\n\nfind ${ruby_dir} -name '*.gem' -type f -print -delete\n\n# Clean up native gems\n# gpgme cleanup is broken until https://github.com/ueno/ruby-gpgme/pull/178\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ubi-builder/scripts/gitlab-fetch"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 104,
                  "endLine": 19,
                  "endColumn": 3,
                  "snippet": {
                    "text": "TOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n",
                    "rendered": {
                      "text": "TOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n",
                      "markdown": "`TOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ubi-builder/scripts/gitlab-fetch"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 81,
                  "endLine": 18,
                  "endColumn": 86,
                  "snippet": {
                    "text": "TOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n",
                    "rendered": {
                      "text": "TOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n",
                      "markdown": "`TOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ubi-builder/scripts/gitlab-fetch"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 54,
                  "endLine": 18,
                  "endColumn": 59,
                  "snippet": {
                    "text": "TOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n",
                    "rendered": {
                      "text": "TOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n",
                      "markdown": "`TOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ubi-builder/scripts/gitlab-fetch"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 43,
                  "endLine": 17,
                  "endColumn": 48,
                  "snippet": {
                    "text": "URL=\"${API_URL}/projects/${NAMESPACE}%2F${PROJECT}/repository/archive.tar.gz?sha=${VERSION}\"\nTOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n",
                    "rendered": {
                      "text": "URL=\"${API_URL}/projects/${NAMESPACE}%2F${PROJECT}/repository/archive.tar.gz?sha=${VERSION}\"\nTOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n",
                      "markdown": "`URL=\"${API_URL}/projects/${NAMESPACE}%2F${PROJECT}/repository/archive.tar.gz?sha=${VERSION}\"\nTOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-ubi-builder/scripts/gitlab-fetch"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 17,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nURL=\"${API_URL}/projects/${NAMESPACE}%2F${PROJECT}/repository/archive.tar.gz?sha=${VERSION}\"\nTOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n",
                    "rendered": {
                      "text": "\nURL=\"${API_URL}/projects/${NAMESPACE}%2F${PROJECT}/repository/archive.tar.gz?sha=${VERSION}\"\nTOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n",
                      "markdown": "`\nURL=\"${API_URL}/projects/${NAMESPACE}%2F${PROJECT}/repository/archive.tar.gz?sha=${VERSION}\"\nTOKEN=\"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\"\n\ncurl --retry 6 -fL -H \"${TOKEN}\" \"${URL}\" | tar -xz\necho -n $(find -maxdepth 1 -name ${PROJECT}-* -print | awk -F '-' '{print $NF}' | cut -c -11) > REVISION\nmv ${PROJECT}-* \"${PROJECT}-${VERSION}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/scripts/entrypoint.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 2,
                  "endLine": 7,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# If in RHEL / UBI images, set ENV.\n# NOTICE: ubi-micro does not have grep\nif grep -q 'ID=\"rhel\"' /etc/os-release ; then\n  export HOME=/home/${GITLAB_USER}\n  export USER=${GITLAB_USER}\n  export USERNAME=${GITLAB_USER}\n",
                    "rendered": {
                      "text": "\n# If in RHEL / UBI images, set ENV.\n# NOTICE: ubi-micro does not have grep\nif grep -q 'ID=\"rhel\"' /etc/os-release ; then\n  export HOME=/home/${GITLAB_USER}\n  export USER=${GITLAB_USER}\n  export USERNAME=${GITLAB_USER}\n",
                      "markdown": "`\n# If in RHEL / UBI images, set ENV.\n# NOTICE: ubi-micro does not have grep\nif grep -q 'ID=\"rhel\"' /etc/os-release ; then\n  export HOME=/home/${GITLAB_USER}\n  export USER=${GITLAB_USER}\n  export USERNAME=${GITLAB_USER}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/scripts/entrypoint.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 33,
                  "endLine": 7,
                  "snippet": {
                    "text": "set -e\n\n# If in RHEL / UBI images, set ENV.\n# NOTICE: ubi-micro does not have grep\nif grep -q 'ID=\"rhel\"' /etc/os-release ; then\n  export HOME=/home/${GITLAB_USER}\n  export USER=${GITLAB_USER}\n  export USERNAME=${GITLAB_USER}\n",
                    "rendered": {
                      "text": "set -e\n\n# If in RHEL / UBI images, set ENV.\n# NOTICE: ubi-micro does not have grep\nif grep -q 'ID=\"rhel\"' /etc/os-release ; then\n  export HOME=/home/${GITLAB_USER}\n  export USER=${GITLAB_USER}\n  export USERNAME=${GITLAB_USER}\n",
                      "markdown": "`set -e\n\n# If in RHEL / UBI images, set ENV.\n# NOTICE: ubi-micro does not have grep\nif grep -q 'ID=\"rhel\"' /etc/os-release ; then\n  export HOME=/home/${GITLAB_USER}\n  export USER=${GITLAB_USER}\n  export USERNAME=${GITLAB_USER}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 6,
                  "endLine": 23,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nRUN mkdir -p /assets /assets${LIBDIR} \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n        ${LIBDIR}/ruby/gems \\\n        /usr/bin/gitlab-exporter \\\n        /licenses \\\n",
                    "rendered": {
                      "text": "\nRUN mkdir -p /assets /assets${LIBDIR} \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n        ${LIBDIR}/ruby/gems \\\n        /usr/bin/gitlab-exporter \\\n        /licenses \\\n",
                      "markdown": "`\nRUN mkdir -p /assets /assets${LIBDIR} \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n        ${LIBDIR}/ruby/gems \\\n        /usr/bin/gitlab-exporter \\\n        /licenses \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6,
                  "endLine": 22,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems\n\nRUN mkdir -p /assets /assets${LIBDIR} \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n        ${LIBDIR}/ruby/gems \\\n        /usr/bin/gitlab-exporter \\\n",
                    "rendered": {
                      "text": "    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems\n\nRUN mkdir -p /assets /assets${LIBDIR} \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n        ${LIBDIR}/ruby/gems \\\n        /usr/bin/gitlab-exporter \\\n",
                      "markdown": "`    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems\n\nRUN mkdir -p /assets /assets${LIBDIR} \\\n    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \\\n    && cp -R --parents \\\n        ${LIBDIR}/ruby/gems \\\n        /usr/bin/gitlab-exporter \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 6,
                  "endLine": 17,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && mv /usr/local/postgresql/include/* /usr/include/ \\\n    && mv /usr/local/postgresql/share/* /usr/share/ \\\n    && gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems\n\n",
                    "rendered": {
                      "text": "RUN install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && mv /usr/local/postgresql/include/* /usr/include/ \\\n    && mv /usr/local/postgresql/share/* /usr/share/ \\\n    && gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems\n\n",
                      "markdown": "`RUN install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && mv /usr/local/postgresql/include/* /usr/include/ \\\n    && mv /usr/local/postgresql/share/* /usr/share/ \\\n    && gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 6,
                  "endLine": 16,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nRUN install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && mv /usr/local/postgresql/include/* /usr/include/ \\\n    && mv /usr/local/postgresql/share/* /usr/share/ \\\n    && gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems\n",
                    "rendered": {
                      "text": "\nRUN install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && mv /usr/local/postgresql/include/* /usr/include/ \\\n    && mv /usr/local/postgresql/share/* /usr/share/ \\\n    && gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems\n",
                      "markdown": "`\nRUN install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && mv /usr/local/postgresql/include/* /usr/include/ \\\n    && mv /usr/local/postgresql/share/* /usr/share/ \\\n    && gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 6,
                  "endLine": 15,
                  "endColumn": 10,
                  "snippet": {
                    "text": "COPY shared/build-scripts/ /build-scripts\n\nRUN install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && mv /usr/local/postgresql/include/* /usr/include/ \\\n    && mv /usr/local/postgresql/share/* /usr/share/ \\\n    && gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} \\\n",
                    "rendered": {
                      "text": "COPY shared/build-scripts/ /build-scripts\n\nRUN install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && mv /usr/local/postgresql/include/* /usr/include/ \\\n    && mv /usr/local/postgresql/share/* /usr/share/ \\\n    && gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} \\\n",
                      "markdown": "`COPY shared/build-scripts/ /build-scripts\n\nRUN install /usr/local/postgresql/bin/* /usr/bin/ \\\n    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \\\n    && mv /usr/local/postgresql/include/* /usr/include/ \\\n    && mv /usr/local/postgresql/share/* /usr/share/ \\\n    && gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 34,
                  "endLine": 6,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nFROM ${BUILD_IMAGE}\n\nARG GITLAB_EXPORTER_VERSION=15.0.0\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nADD gitlab-ruby.tar.gz /\nADD postgresql.tar.gz /\n",
                    "rendered": {
                      "text": "\nFROM ${BUILD_IMAGE}\n\nARG GITLAB_EXPORTER_VERSION=15.0.0\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nADD gitlab-ruby.tar.gz /\nADD postgresql.tar.gz /\n",
                      "markdown": "`\nFROM ${BUILD_IMAGE}\n\nARG GITLAB_EXPORTER_VERSION=15.0.0\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nADD gitlab-ruby.tar.gz /\nADD postgresql.tar.gz /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 52,
                  "endLine": 58,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  FORCE_BUILDX_ZSTD: \"false\"\n  BUILDKIT_IMAGE: \"moby/buildkit:v0.16.0\"\n  ZSTD_COMPRESSION_LEVEL: 10\n  # Buildx cluster connection settings should be set at project level:\n  BUILDX_CLUSTER_NAME: \"\"\n  BUILDX_GCLOUD_PROJECT: \"\"\n  BUILDX_CLUSTER_ZONE: \"\"\n",
                    "rendered": {
                      "text": "  FORCE_BUILDX_ZSTD: \"false\"\n  BUILDKIT_IMAGE: \"moby/buildkit:v0.16.0\"\n  ZSTD_COMPRESSION_LEVEL: 10\n  # Buildx cluster connection settings should be set at project level:\n  BUILDX_CLUSTER_NAME: \"\"\n  BUILDX_GCLOUD_PROJECT: \"\"\n  BUILDX_CLUSTER_ZONE: \"\"\n",
                      "markdown": "`  FORCE_BUILDX_ZSTD: \"false\"\n  BUILDKIT_IMAGE: \"moby/buildkit:v0.16.0\"\n  ZSTD_COMPRESSION_LEVEL: 10\n  # Buildx cluster connection settings should be set at project level:\n  BUILDX_CLUSTER_NAME: \"\"\n  BUILDX_GCLOUD_PROJECT: \"\"\n  BUILDX_CLUSTER_ZONE: \"\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 36,
                  "endLine": 114,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    # No pipeline on tag pushes to com. We build them in dev and sync to com\n    - if: '$CI_PROJECT_PATH == \"gitlab-org/build/CNG\" && $CI_COMMIT_TAG'\n      when: never\n    # For auto-deploy tags, use next Ruby version if the variable is set.\n    - if: '$CI_COMMIT_TAG =~ $WF_AUTO_DEPLOY_TAG_REGEX && $USE_NEXT_RUBY_VERSION_IN_AUTODEPLOY == \"true\"'\n      variables:\n        PIPELINE_TYPE: AUTO_DEPLOY_BUILD_PIPELINE\n",
                    "rendered": {
                      "text": "    # No pipeline on tag pushes to com. We build them in dev and sync to com\n    - if: '$CI_PROJECT_PATH == \"gitlab-org/build/CNG\" && $CI_COMMIT_TAG'\n      when: never\n    # For auto-deploy tags, use next Ruby version if the variable is set.\n    - if: '$CI_COMMIT_TAG =~ $WF_AUTO_DEPLOY_TAG_REGEX && $USE_NEXT_RUBY_VERSION_IN_AUTODEPLOY == \"true\"'\n      variables:\n        PIPELINE_TYPE: AUTO_DEPLOY_BUILD_PIPELINE\n",
                      "markdown": "`    # No pipeline on tag pushes to com. We build them in dev and sync to com\n    - if: '$CI_PROJECT_PATH == \"gitlab-org/build/CNG\" && $CI_COMMIT_TAG'\n      when: never\n    # For auto-deploy tags, use next Ruby version if the variable is set.\n    - if: '$CI_COMMIT_TAG =~ $WF_AUTO_DEPLOY_TAG_REGEX && $USE_NEXT_RUBY_VERSION_IN_AUTODEPLOY == \"true\"'\n      variables:\n        PIPELINE_TYPE: AUTO_DEPLOY_BUILD_PIPELINE\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/images.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 5,
                  "endLine": 103,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  script:\n    - cat artifacts/images/*.txt > image_versions.txt\n    - rm -rf artifacts/*\n    - bash build-scripts/docker_image_sync.sh image_versions.txt $SYNC_DEST\n  artifacts:\n    paths:\n      - artifacts/\n",
                    "rendered": {
                      "text": "  script:\n    - cat artifacts/images/*.txt > image_versions.txt\n    - rm -rf artifacts/*\n    - bash build-scripts/docker_image_sync.sh image_versions.txt $SYNC_DEST\n  artifacts:\n    paths:\n      - artifacts/\n",
                      "markdown": "`  script:\n    - cat artifacts/images/*.txt > image_versions.txt\n    - rm -rf artifacts/*\n    - bash build-scripts/docker_image_sync.sh image_versions.txt $SYNC_DEST\n  artifacts:\n    paths:\n      - artifacts/\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/images.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 5,
                  "endLine": 151,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        images=\"${images},${ALPINE_IMAGE}\";\n        dedupe_model=cng/debian.yaml;\n      fi\n    - curl -fS\n        --request POST\n        --form ref=master\n        --form \"variables[IMAGES]=$images\"\n",
                    "rendered": {
                      "text": "        images=\"${images},${ALPINE_IMAGE}\";\n        dedupe_model=cng/debian.yaml;\n      fi\n    - curl -fS\n        --request POST\n        --form ref=master\n        --form \"variables[IMAGES]=$images\"\n",
                      "markdown": "`        images=\"${images},${ALPINE_IMAGE}\";\n        dedupe_model=cng/debian.yaml;\n      fi\n    - curl -fS\n        --request POST\n        --form ref=master\n        --form \"variables[IMAGES]=$images\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/images.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 38,
                  "endLine": 142,
                  "endColumn": 45,
                  "snippet": {
                    "text": "  needs: [\"final-images-listing\"]\n  allow_failure: true\n  script:\n    - images=$(cat artifacts/final/* | xargs printf \"$CI_REGISTRY_IMAGE/%s,\")\n    - if [ \"${UBI_PIPELINE}\" == \"true\" -o \"${FIPS_PIPELINE}\" == \"true\" ]; then\n        images=\"${images},${UBI_MICRO_IMAGE},${UBI_IMAGE}\";\n        dedupe_model=cng/ubi-micro.yaml;\n",
                    "rendered": {
                      "text": "  needs: [\"final-images-listing\"]\n  allow_failure: true\n  script:\n    - images=$(cat artifacts/final/* | xargs printf \"$CI_REGISTRY_IMAGE/%s,\")\n    - if [ \"${UBI_PIPELINE}\" == \"true\" -o \"${FIPS_PIPELINE}\" == \"true\" ]; then\n        images=\"${images},${UBI_MICRO_IMAGE},${UBI_IMAGE}\";\n        dedupe_model=cng/ubi-micro.yaml;\n",
                      "markdown": "`  needs: [\"final-images-listing\"]\n  allow_failure: true\n  script:\n    - images=$(cat artifacts/final/* | xargs printf \"$CI_REGISTRY_IMAGE/%s,\")\n    - if [ \"${UBI_PIPELINE}\" == \"true\" -o \"${FIPS_PIPELINE}\" == \"true\" ]; then\n        images=\"${images},${UBI_MICRO_IMAGE},${UBI_IMAGE}\";\n        dedupe_model=cng/ubi-micro.yaml;\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/images.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 7,
                  "endLine": 116,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  after_script:\n    - if $(echo $CI_COMMIT_TAG | grep -Eq 'v*-ubi'); then\n    -   UBI_IMAGES=$(cat artifacts/gitlab-com-images.txt | xargs printf ', %s')\n    -   curl -fS\n          --request POST\n          --form ref=master\n          --form \"variables[IMAGES]=${UBI_IMAGES:2}\"\n",
                    "rendered": {
                      "text": "  after_script:\n    - if $(echo $CI_COMMIT_TAG | grep -Eq 'v*-ubi'); then\n    -   UBI_IMAGES=$(cat artifacts/gitlab-com-images.txt | xargs printf ', %s')\n    -   curl -fS\n          --request POST\n          --form ref=master\n          --form \"variables[IMAGES]=${UBI_IMAGES:2}\"\n",
                      "markdown": "`  after_script:\n    - if $(echo $CI_COMMIT_TAG | grep -Eq 'v*-ubi'); then\n    -   UBI_IMAGES=$(cat artifacts/gitlab-com-images.txt | xargs printf ', %s')\n    -   curl -fS\n          --request POST\n          --form ref=master\n          --form \"variables[IMAGES]=${UBI_IMAGES:2}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/images.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 58,
                  "endLine": 115,
                  "endColumn": 65,
                  "snippet": {
                    "text": "    SYNC_DEST: gitlab-com\n  after_script:\n    - if $(echo $CI_COMMIT_TAG | grep -Eq 'v*-ubi'); then\n    -   UBI_IMAGES=$(cat artifacts/gitlab-com-images.txt | xargs printf ', %s')\n    -   curl -fS\n          --request POST\n          --form ref=master\n",
                    "rendered": {
                      "text": "    SYNC_DEST: gitlab-com\n  after_script:\n    - if $(echo $CI_COMMIT_TAG | grep -Eq 'v*-ubi'); then\n    -   UBI_IMAGES=$(cat artifacts/gitlab-com-images.txt | xargs printf ', %s')\n    -   curl -fS\n          --request POST\n          --form ref=master\n",
                      "markdown": "`    SYNC_DEST: gitlab-com\n  after_script:\n    - if $(echo $CI_COMMIT_TAG | grep -Eq 'v*-ubi'); then\n    -   UBI_IMAGES=$(cat artifacts/gitlab-com-images.txt | xargs printf ', %s')\n    -   curl -fS\n          --request POST\n          --form ref=master\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/images.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 32,
                  "endLine": 114,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  variables:\n    SYNC_DEST: gitlab-com\n  after_script:\n    - if $(echo $CI_COMMIT_TAG | grep -Eq 'v*-ubi'); then\n    -   UBI_IMAGES=$(cat artifacts/gitlab-com-images.txt | xargs printf ', %s')\n    -   curl -fS\n          --request POST\n",
                    "rendered": {
                      "text": "  variables:\n    SYNC_DEST: gitlab-com\n  after_script:\n    - if $(echo $CI_COMMIT_TAG | grep -Eq 'v*-ubi'); then\n    -   UBI_IMAGES=$(cat artifacts/gitlab-com-images.txt | xargs printf ', %s')\n    -   curl -fS\n          --request POST\n",
                      "markdown": "`  variables:\n    SYNC_DEST: gitlab-com\n  after_script:\n    - if $(echo $CI_COMMIT_TAG | grep -Eq 'v*-ubi'); then\n    -   UBI_IMAGES=$(cat artifacts/gitlab-com-images.txt | xargs printf ', %s')\n    -   curl -fS\n          --request POST\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/images.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 5,
                  "endLine": 103,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  script:\n    - cat artifacts/images/*.txt > image_versions.txt\n    - rm -rf artifacts/*\n    - bash build-scripts/docker_image_sync.sh image_versions.txt $SYNC_DEST\n  artifacts:\n    paths:\n      - artifacts/\n",
                    "rendered": {
                      "text": "  script:\n    - cat artifacts/images/*.txt > image_versions.txt\n    - rm -rf artifacts/*\n    - bash build-scripts/docker_image_sync.sh image_versions.txt $SYNC_DEST\n  artifacts:\n    paths:\n      - artifacts/\n",
                      "markdown": "`  script:\n    - cat artifacts/images/*.txt > image_versions.txt\n    - rm -rf artifacts/*\n    - bash build-scripts/docker_image_sync.sh image_versions.txt $SYNC_DEST\n  artifacts:\n    paths:\n      - artifacts/\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/images.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 5,
                  "endLine": 101,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    - docker:${DOCKER_VERSION}-dind\n  allow_failure: false\n  script:\n    - cat artifacts/images/*.txt > image_versions.txt\n    - rm -rf artifacts/*\n    - bash build-scripts/docker_image_sync.sh image_versions.txt $SYNC_DEST\n  artifacts:\n",
                    "rendered": {
                      "text": "    - docker:${DOCKER_VERSION}-dind\n  allow_failure: false\n  script:\n    - cat artifacts/images/*.txt > image_versions.txt\n    - rm -rf artifacts/*\n    - bash build-scripts/docker_image_sync.sh image_versions.txt $SYNC_DEST\n  artifacts:\n",
                      "markdown": "`    - docker:${DOCKER_VERSION}-dind\n  allow_failure: false\n  script:\n    - cat artifacts/images/*.txt > image_versions.txt\n    - rm -rf artifacts/*\n    - bash build-scripts/docker_image_sync.sh image_versions.txt $SYNC_DEST\n  artifacts:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 75,
                  "endLine": 118,
                  "endColumn": 83,
                  "snippet": {
                    "text": "    - fi\n    - export {CONTAINER_VERSION,BASE_VERSION}=$(get_version gitlab-base)\n    - export TARGET_VERSION=$(get_target_version)\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    \n    - !reference [.init_buildx_template, script]\n",
                    "rendered": {
                      "text": "    - fi\n    - export {CONTAINER_VERSION,BASE_VERSION}=$(get_version gitlab-base)\n    - export TARGET_VERSION=$(get_target_version)\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    \n    - !reference [.init_buildx_template, script]\n",
                      "markdown": "`    - fi\n    - export {CONTAINER_VERSION,BASE_VERSION}=$(get_version gitlab-base)\n    - export TARGET_VERSION=$(get_target_version)\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    \n    - !reference [.init_buildx_template, script]\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 823,
                  "startColumn": 9,
                  "endLine": 823,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    -     mkdir -p ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     container_id=$(docker create --platform=linux/${arch} \"${CI_REGISTRY_IMAGE}/${image_name}\")\n    -     docker cp $container_id:/srv/gitlab/vendor/bundle ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     docker rm -v $container_id\n    -   done\n    -   IFS=\"${old_IFS}\"\n    - fi\n",
                    "rendered": {
                      "text": "    -     mkdir -p ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     container_id=$(docker create --platform=linux/${arch} \"${CI_REGISTRY_IMAGE}/${image_name}\")\n    -     docker cp $container_id:/srv/gitlab/vendor/bundle ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     docker rm -v $container_id\n    -   done\n    -   IFS=\"${old_IFS}\"\n    - fi\n",
                      "markdown": "`    -     mkdir -p ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     container_id=$(docker create --platform=linux/${arch} \"${CI_REGISTRY_IMAGE}/${image_name}\")\n    -     docker cp $container_id:/srv/gitlab/vendor/bundle ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     docker rm -v $container_id\n    -   done\n    -   IFS=\"${old_IFS}\"\n    - fi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 822,
                  "startColumn": 9,
                  "endLine": 822,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    -   for arch in ${ARCH_LIST}; do \n    -     mkdir -p ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     container_id=$(docker create --platform=linux/${arch} \"${CI_REGISTRY_IMAGE}/${image_name}\")\n    -     docker cp $container_id:/srv/gitlab/vendor/bundle ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     docker rm -v $container_id\n    -   done\n    -   IFS=\"${old_IFS}\"\n",
                    "rendered": {
                      "text": "    -   for arch in ${ARCH_LIST}; do \n    -     mkdir -p ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     container_id=$(docker create --platform=linux/${arch} \"${CI_REGISTRY_IMAGE}/${image_name}\")\n    -     docker cp $container_id:/srv/gitlab/vendor/bundle ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     docker rm -v $container_id\n    -   done\n    -   IFS=\"${old_IFS}\"\n",
                      "markdown": "`    -   for arch in ${ARCH_LIST}; do \n    -     mkdir -p ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     container_id=$(docker create --platform=linux/${arch} \"${CI_REGISTRY_IMAGE}/${image_name}\")\n    -     docker cp $container_id:/srv/gitlab/vendor/bundle ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     docker rm -v $container_id\n    -   done\n    -   IFS=\"${old_IFS}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 797,
                  "startColumn": 5,
                  "endLine": 797,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    - gm_image=\"${CI_REGISTRY_IMAGE}/gitlab-graphicsmagick:${gm_version}\"\n    - exiftool_version=$(cat artifacts/container_versions/gitlab-exiftool_tag.txt)\n    - exiftool_image=\"${CI_REGISTRY_IMAGE}/gitlab-exiftool:${exiftool_version}\"\n    - docker pull $pg_image > /dev/null || true\n    - export ASSETS_IMAGE=\"${ASSETS_IMAGE_REGISTRY_PREFIX}/${CE_PROJECT}/${ASSETS_IMAGE_PREFIX}-ce:${GITLAB_ASSETS_TAG}\"\n    - fetch_assets\n    - (cd $(get_trimmed_job_name) && download_gitlab $GITLAB_VERSION $CE_PROJECT)\n",
                    "rendered": {
                      "text": "    - gm_image=\"${CI_REGISTRY_IMAGE}/gitlab-graphicsmagick:${gm_version}\"\n    - exiftool_version=$(cat artifacts/container_versions/gitlab-exiftool_tag.txt)\n    - exiftool_image=\"${CI_REGISTRY_IMAGE}/gitlab-exiftool:${exiftool_version}\"\n    - docker pull $pg_image > /dev/null || true\n    - export ASSETS_IMAGE=\"${ASSETS_IMAGE_REGISTRY_PREFIX}/${CE_PROJECT}/${ASSETS_IMAGE_PREFIX}-ce:${GITLAB_ASSETS_TAG}\"\n    - fetch_assets\n    - (cd $(get_trimmed_job_name) && download_gitlab $GITLAB_VERSION $CE_PROJECT)\n",
                      "markdown": "`    - gm_image=\"${CI_REGISTRY_IMAGE}/gitlab-graphicsmagick:${gm_version}\"\n    - exiftool_version=$(cat artifacts/container_versions/gitlab-exiftool_tag.txt)\n    - exiftool_image=\"${CI_REGISTRY_IMAGE}/gitlab-exiftool:${exiftool_version}\"\n    - docker pull $pg_image > /dev/null || true\n    - export ASSETS_IMAGE=\"${ASSETS_IMAGE_REGISTRY_PREFIX}/${CE_PROJECT}/${ASSETS_IMAGE_PREFIX}-ce:${GITLAB_ASSETS_TAG}\"\n    - fetch_assets\n    - (cd $(get_trimmed_job_name) && download_gitlab $GITLAB_VERSION $CE_PROJECT)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 763,
                  "startColumn": 9,
                  "endLine": 763,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    -     mkdir -p ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     container_id=$(docker create --platform=linux/${arch} \"${CI_REGISTRY_IMAGE}/${image_name}\")\n    -     docker cp $container_id:/srv/gitlab/vendor/bundle ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     docker rm -v $container_id\n    -   done\n    -   IFS=\"${old_IFS}\"\n    - fi\n",
                    "rendered": {
                      "text": "    -     mkdir -p ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     container_id=$(docker create --platform=linux/${arch} \"${CI_REGISTRY_IMAGE}/${image_name}\")\n    -     docker cp $container_id:/srv/gitlab/vendor/bundle ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     docker rm -v $container_id\n    -   done\n    -   IFS=\"${old_IFS}\"\n    - fi\n",
                      "markdown": "`    -     mkdir -p ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     container_id=$(docker create --platform=linux/${arch} \"${CI_REGISTRY_IMAGE}/${image_name}\")\n    -     docker cp $container_id:/srv/gitlab/vendor/bundle ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     docker rm -v $container_id\n    -   done\n    -   IFS=\"${old_IFS}\"\n    - fi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 762,
                  "startColumn": 9,
                  "endLine": 762,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    -   for arch in ${ARCH_LIST}; do \n    -     mkdir -p ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     container_id=$(docker create --platform=linux/${arch} \"${CI_REGISTRY_IMAGE}/${image_name}\")\n    -     docker cp $container_id:/srv/gitlab/vendor/bundle ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     docker rm -v $container_id\n    -   done\n    -   IFS=\"${old_IFS}\"\n",
                    "rendered": {
                      "text": "    -   for arch in ${ARCH_LIST}; do \n    -     mkdir -p ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     container_id=$(docker create --platform=linux/${arch} \"${CI_REGISTRY_IMAGE}/${image_name}\")\n    -     docker cp $container_id:/srv/gitlab/vendor/bundle ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     docker rm -v $container_id\n    -   done\n    -   IFS=\"${old_IFS}\"\n",
                      "markdown": "`    -   for arch in ${ARCH_LIST}; do \n    -     mkdir -p ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     container_id=$(docker create --platform=linux/${arch} \"${CI_REGISTRY_IMAGE}/${image_name}\")\n    -     docker cp $container_id:/srv/gitlab/vendor/bundle ${CI_PROJECT_DIR}/gitlab-rails/vendor/${arch}\n    -     docker rm -v $container_id\n    -   done\n    -   IFS=\"${old_IFS}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 736,
                  "startColumn": 5,
                  "endLine": 736,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    - gm_image=\"${CI_REGISTRY_IMAGE}/gitlab-graphicsmagick:${gm_version}\"\n    - exiftool_version=$(cat artifacts/container_versions/gitlab-exiftool_tag.txt)\n    - exiftool_image=\"${CI_REGISTRY_IMAGE}/gitlab-exiftool:${exiftool_version}\"\n    - docker pull $pg_image > /dev/null || true\n    - export ASSETS_IMAGE=\"${ASSETS_IMAGE_REGISTRY_PREFIX}/${EE_PROJECT}/${ASSETS_IMAGE_PREFIX}-ee:${GITLAB_ASSETS_TAG}\"\n    - fetch_assets\n    - build_if_needed --build-arg \"GITLAB_VERSION=${GITLAB_VERSION}\"\n",
                    "rendered": {
                      "text": "    - gm_image=\"${CI_REGISTRY_IMAGE}/gitlab-graphicsmagick:${gm_version}\"\n    - exiftool_version=$(cat artifacts/container_versions/gitlab-exiftool_tag.txt)\n    - exiftool_image=\"${CI_REGISTRY_IMAGE}/gitlab-exiftool:${exiftool_version}\"\n    - docker pull $pg_image > /dev/null || true\n    - export ASSETS_IMAGE=\"${ASSETS_IMAGE_REGISTRY_PREFIX}/${EE_PROJECT}/${ASSETS_IMAGE_PREFIX}-ee:${GITLAB_ASSETS_TAG}\"\n    - fetch_assets\n    - build_if_needed --build-arg \"GITLAB_VERSION=${GITLAB_VERSION}\"\n",
                      "markdown": "`    - gm_image=\"${CI_REGISTRY_IMAGE}/gitlab-graphicsmagick:${gm_version}\"\n    - exiftool_version=$(cat artifacts/container_versions/gitlab-exiftool_tag.txt)\n    - exiftool_image=\"${CI_REGISTRY_IMAGE}/gitlab-exiftool:${exiftool_version}\"\n    - docker pull $pg_image > /dev/null || true\n    - export ASSETS_IMAGE=\"${ASSETS_IMAGE_REGISTRY_PREFIX}/${EE_PROJECT}/${ASSETS_IMAGE_PREFIX}-ee:${GITLAB_ASSETS_TAG}\"\n    - fetch_assets\n    - build_if_needed --build-arg \"GITLAB_VERSION=${GITLAB_VERSION}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 7,
                  "endLine": 180,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    - if [ -n \"${KUBECONFIG}\" -a \"${DISABLE_BUILDX_CLUSTER}\" != \"true\" ]; then\n    -   docker buildx inspect --bootstrap\n    -   docker buildx stop ${BUILDX_NAMESPACE}\n    -   docker buildx rm ${BUILDX_NAMESPACE}\n    -   kubectl delete namespace ${BUILDX_NAMESPACE} || true\n    - fi\n  retry: 2\n",
                    "rendered": {
                      "text": "    - if [ -n \"${KUBECONFIG}\" -a \"${DISABLE_BUILDX_CLUSTER}\" != \"true\" ]; then\n    -   docker buildx inspect --bootstrap\n    -   docker buildx stop ${BUILDX_NAMESPACE}\n    -   docker buildx rm ${BUILDX_NAMESPACE}\n    -   kubectl delete namespace ${BUILDX_NAMESPACE} || true\n    - fi\n  retry: 2\n",
                      "markdown": "`    - if [ -n \"${KUBECONFIG}\" -a \"${DISABLE_BUILDX_CLUSTER}\" != \"true\" ]; then\n    -   docker buildx inspect --bootstrap\n    -   docker buildx stop ${BUILDX_NAMESPACE}\n    -   docker buildx rm ${BUILDX_NAMESPACE}\n    -   kubectl delete namespace ${BUILDX_NAMESPACE} || true\n    - fi\n  retry: 2\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 7,
                  "endLine": 179,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    - !reference [.init_buildx_template, script]\n    - if [ -n \"${KUBECONFIG}\" -a \"${DISABLE_BUILDX_CLUSTER}\" != \"true\" ]; then\n    -   docker buildx inspect --bootstrap\n    -   docker buildx stop ${BUILDX_NAMESPACE}\n    -   docker buildx rm ${BUILDX_NAMESPACE}\n    -   kubectl delete namespace ${BUILDX_NAMESPACE} || true\n    - fi\n",
                    "rendered": {
                      "text": "    - !reference [.init_buildx_template, script]\n    - if [ -n \"${KUBECONFIG}\" -a \"${DISABLE_BUILDX_CLUSTER}\" != \"true\" ]; then\n    -   docker buildx inspect --bootstrap\n    -   docker buildx stop ${BUILDX_NAMESPACE}\n    -   docker buildx rm ${BUILDX_NAMESPACE}\n    -   kubectl delete namespace ${BUILDX_NAMESPACE} || true\n    - fi\n",
                      "markdown": "`    - !reference [.init_buildx_template, script]\n    - if [ -n \"${KUBECONFIG}\" -a \"${DISABLE_BUILDX_CLUSTER}\" != \"true\" ]; then\n    -   docker buildx inspect --bootstrap\n    -   docker buildx stop ${BUILDX_NAMESPACE}\n    -   docker buildx rm ${BUILDX_NAMESPACE}\n    -   kubectl delete namespace ${BUILDX_NAMESPACE} || true\n    - fi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 7,
                  "endLine": 178,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  script:\n    - !reference [.init_buildx_template, script]\n    - if [ -n \"${KUBECONFIG}\" -a \"${DISABLE_BUILDX_CLUSTER}\" != \"true\" ]; then\n    -   docker buildx inspect --bootstrap\n    -   docker buildx stop ${BUILDX_NAMESPACE}\n    -   docker buildx rm ${BUILDX_NAMESPACE}\n    -   kubectl delete namespace ${BUILDX_NAMESPACE} || true\n",
                    "rendered": {
                      "text": "  script:\n    - !reference [.init_buildx_template, script]\n    - if [ -n \"${KUBECONFIG}\" -a \"${DISABLE_BUILDX_CLUSTER}\" != \"true\" ]; then\n    -   docker buildx inspect --bootstrap\n    -   docker buildx stop ${BUILDX_NAMESPACE}\n    -   docker buildx rm ${BUILDX_NAMESPACE}\n    -   kubectl delete namespace ${BUILDX_NAMESPACE} || true\n",
                      "markdown": "`  script:\n    - !reference [.init_buildx_template, script]\n    - if [ -n \"${KUBECONFIG}\" -a \"${DISABLE_BUILDX_CLUSTER}\" != \"true\" ]; then\n    -   docker buildx inspect --bootstrap\n    -   docker buildx stop ${BUILDX_NAMESPACE}\n    -   docker buildx rm ${BUILDX_NAMESPACE}\n    -   kubectl delete namespace ${BUILDX_NAMESPACE} || true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 5,
                  "endLine": 122,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    \n    - !reference [.init_buildx_template, script]\n    - docker buildx inspect --bootstrap\n    - populate_stable_image_vars\n  after_script:\n    # Variables set in `before_script` aren't available in `after_script`.\n",
                    "rendered": {
                      "text": "    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    \n    - !reference [.init_buildx_template, script]\n    - docker buildx inspect --bootstrap\n    - populate_stable_image_vars\n  after_script:\n    # Variables set in `before_script` aren't available in `after_script`.\n",
                      "markdown": "`    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    \n    - !reference [.init_buildx_template, script]\n    - docker buildx inspect --bootstrap\n    - populate_stable_image_vars\n  after_script:\n    # Variables set in `before_script` aren't available in `after_script`.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 5,
                  "endLine": 119,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    - export {CONTAINER_VERSION,BASE_VERSION}=$(get_version gitlab-base)\n    - export TARGET_VERSION=$(get_target_version)\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    \n    - !reference [.init_buildx_template, script]\n    - docker buildx inspect --bootstrap\n",
                    "rendered": {
                      "text": "    - export {CONTAINER_VERSION,BASE_VERSION}=$(get_version gitlab-base)\n    - export TARGET_VERSION=$(get_target_version)\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    \n    - !reference [.init_buildx_template, script]\n    - docker buildx inspect --bootstrap\n",
                      "markdown": "`    - export {CONTAINER_VERSION,BASE_VERSION}=$(get_version gitlab-base)\n    - export TARGET_VERSION=$(get_target_version)\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    \n    - !reference [.init_buildx_template, script]\n    - docker buildx inspect --bootstrap\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 5,
                  "endLine": 118,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    - fi\n    - export {CONTAINER_VERSION,BASE_VERSION}=$(get_version gitlab-base)\n    - export TARGET_VERSION=$(get_target_version)\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    \n    - !reference [.init_buildx_template, script]\n",
                    "rendered": {
                      "text": "    - fi\n    - export {CONTAINER_VERSION,BASE_VERSION}=$(get_version gitlab-base)\n    - export TARGET_VERSION=$(get_target_version)\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    \n    - !reference [.init_buildx_template, script]\n",
                      "markdown": "`    - fi\n    - export {CONTAINER_VERSION,BASE_VERSION}=$(get_version gitlab-base)\n    - export TARGET_VERSION=$(get_target_version)\n    - docker login -u \"$CI_DEPENDENCY_PROXY_USER\" -p \"$CI_DEPENDENCY_PROXY_PASSWORD\" \"$CI_DEPENDENCY_PROXY_SERVER\"\n    - docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" \"$CI_REGISTRY\"\n    \n    - !reference [.init_buildx_template, script]\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 36,
                  "endLine": 89,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    # See https://gitlab.com/gitlab-org/omnibus-gitlab/-/issues/5805\n    - |\n      if [[ $CI_COMMIT_TAG =~ $AUTO_DEPLOY_TAG_REGEX ]] && [[ \"${AUTO_DEPLOY_COMPILE_ASSETS}\" == \"true\" ]]; then\n        echo \"Setting COMPILE_ASSETS env variable for auto-deploy\"\n        export COMPILE_ASSETS=true\n      fi\n    - IFS=\",\" read -ra _archs <<< \"${PLATFORMS}\"\n",
                    "rendered": {
                      "text": "    # See https://gitlab.com/gitlab-org/omnibus-gitlab/-/issues/5805\n    - |\n      if [[ $CI_COMMIT_TAG =~ $AUTO_DEPLOY_TAG_REGEX ]] && [[ \"${AUTO_DEPLOY_COMPILE_ASSETS}\" == \"true\" ]]; then\n        echo \"Setting COMPILE_ASSETS env variable for auto-deploy\"\n        export COMPILE_ASSETS=true\n      fi\n    - IFS=\",\" read -ra _archs <<< \"${PLATFORMS}\"\n",
                      "markdown": "`    # See https://gitlab.com/gitlab-org/omnibus-gitlab/-/issues/5805\n    - |\n      if [[ $CI_COMMIT_TAG =~ $AUTO_DEPLOY_TAG_REGEX ]] && [[ \"${AUTO_DEPLOY_COMPILE_ASSETS}\" == \"true\" ]]; then\n        echo \"Setting COMPILE_ASSETS env variable for auto-deploy\"\n        export COMPILE_ASSETS=true\n      fi\n    - IFS=\",\" read -ra _archs <<< \"${PLATFORMS}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 7,
                  "endLine": 62,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    -     docker buildx create --use --driver-opt=\"image=${BUILDKIT_IMAGE}\"\n    -   fi\n    - else\n    -   docker buildx create --use --driver-opt=\"image=${BUILDKIT_IMAGE}\"\n    - fi\n\n# Used to override the default storage driver from overlay2\n",
                    "rendered": {
                      "text": "    -     docker buildx create --use --driver-opt=\"image=${BUILDKIT_IMAGE}\"\n    -   fi\n    - else\n    -   docker buildx create --use --driver-opt=\"image=${BUILDKIT_IMAGE}\"\n    - fi\n\n# Used to override the default storage driver from overlay2\n",
                      "markdown": "`    -     docker buildx create --use --driver-opt=\"image=${BUILDKIT_IMAGE}\"\n    -   fi\n    - else\n    -   docker buildx create --use --driver-opt=\"image=${BUILDKIT_IMAGE}\"\n    - fi\n\n# Used to override the default storage driver from overlay2\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 9,
                  "endLine": 59,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          done\n    -     IFS=\"${old_IFS}\"\n    -   else\n    -     docker buildx create --use --driver-opt=\"image=${BUILDKIT_IMAGE}\"\n    -   fi\n    - else\n    -   docker buildx create --use --driver-opt=\"image=${BUILDKIT_IMAGE}\"\n",
                    "rendered": {
                      "text": "          done\n    -     IFS=\"${old_IFS}\"\n    -   else\n    -     docker buildx create --use --driver-opt=\"image=${BUILDKIT_IMAGE}\"\n    -   fi\n    - else\n    -   docker buildx create --use --driver-opt=\"image=${BUILDKIT_IMAGE}\"\n",
                      "markdown": "`          done\n    -     IFS=\"${old_IFS}\"\n    -   else\n    -     docker buildx create --use --driver-opt=\"image=${BUILDKIT_IMAGE}\"\n    -   fi\n    - else\n    -   docker buildx create --use --driver-opt=\"image=${BUILDKIT_IMAGE}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/ci/common.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 11,
                  "endLine": 48,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            if force_zstd_build || is_zstd_build; then\n              _k8s_driver_opt+=\",image=${BUILDKIT_IMAGE:-}\"\n            fi\n            docker buildx create ${create_flag} \\\n              --name=${BUILDX_NAMESPACE} \\\n              --buildkitd-flags=\"--debug\" \\\n              --platform=linux/${arch} \\\n",
                    "rendered": {
                      "text": "            if force_zstd_build || is_zstd_build; then\n              _k8s_driver_opt+=\",image=${BUILDKIT_IMAGE:-}\"\n            fi\n            docker buildx create ${create_flag} \\\n              --name=${BUILDX_NAMESPACE} \\\n              --buildkitd-flags=\"--debug\" \\\n              --platform=linux/${arch} \\\n",
                      "markdown": "`            if force_zstd_build || is_zstd_build; then\n              _k8s_driver_opt+=\",image=${BUILDKIT_IMAGE:-}\"\n            fi\n            docker buildx create ${create_flag} \\\n              --name=${BUILDX_NAMESPACE} \\\n              --buildkitd-flags=\"--debug\" \\\n              --platform=linux/${arch} \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/scripts/renovate/azcopy_update_url.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nget_latest_static_url() {\n  curl -s -D - https://aka.ms/downloadazcopy-v10-linux | awk '{if($1 ~ /Location/){printf \"%s\",$2}}' | tr -d '\\r'\n}\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nget_latest_static_url() {\n  curl -s -D - https://aka.ms/downloadazcopy-v10-linux | awk '{if($1 ~ /Location/){printf \"%s\",$2}}' | tr -d '\\r'\n}\n",
                      "markdown": "`#!/usr/bin/env bash\n\nget_latest_static_url() {\n  curl -s -D - https://aka.ms/downloadazcopy-v10-linux | awk '{if($1 ~ /Location/){printf \"%s\",$2}}' | tr -d '\\r'\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/scripts/renovate/azcopy_update_url.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 1,
                  "endLine": 12,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  local file=\"$2\"\n\n  new_url=${new_url//amd64/\\$\\{TARGETARCH\\}}\n  sed -i \"s|ARG AZCOPY_STATIC_URL=\\\".*\\\"|ARG AZCOPY_STATIC_URL=\\\"${new_url}\\\"|\" \"${file}\"\n}\n\nurl=$(get_latest_static_url)\n",
                    "rendered": {
                      "text": "  local file=\"$2\"\n\n  new_url=${new_url//amd64/\\$\\{TARGETARCH\\}}\n  sed -i \"s|ARG AZCOPY_STATIC_URL=\\\".*\\\"|ARG AZCOPY_STATIC_URL=\\\"${new_url}\\\"|\" \"${file}\"\n}\n\nurl=$(get_latest_static_url)\n",
                      "markdown": "`  local file=\"$2\"\n\n  new_url=${new_url//amd64/\\$\\{TARGETARCH\\}}\n  sed -i \"s|ARG AZCOPY_STATIC_URL=\\\".*\\\"|ARG AZCOPY_STATIC_URL=\\\"${new_url}\\\"|\" \"${file}\"\n}\n\nurl=$(get_latest_static_url)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/scripts/renovate/azcopy_update_url.sh"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 56,
                  "endLine": 4,
                  "endColumn": 61,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nget_latest_static_url() {\n  curl -s -D - https://aka.ms/downloadazcopy-v10-linux | awk '{if($1 ~ /Location/){printf \"%s\",$2}}' | tr -d '\\r'\n}\n\nreplace_static_url() {\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nget_latest_static_url() {\n  curl -s -D - https://aka.ms/downloadazcopy-v10-linux | awk '{if($1 ~ /Location/){printf \"%s\",$2}}' | tr -d '\\r'\n}\n\nreplace_static_url() {\n",
                      "markdown": "`#!/usr/bin/env bash\n\nget_latest_static_url() {\n  curl -s -D - https://aka.ms/downloadazcopy-v10-linux | awk '{if($1 ~ /Location/){printf \"%s\",$2}}' | tr -d '\\r'\n}\n\nreplace_static_url() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/scripts/renovate/azcopy_update_url.sh"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endLine": 4,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nget_latest_static_url() {\n  curl -s -D - https://aka.ms/downloadazcopy-v10-linux | awk '{if($1 ~ /Location/){printf \"%s\",$2}}' | tr -d '\\r'\n}\n\nreplace_static_url() {\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nget_latest_static_url() {\n  curl -s -D - https://aka.ms/downloadazcopy-v10-linux | awk '{if($1 ~ /Location/){printf \"%s\",$2}}' | tr -d '\\r'\n}\n\nreplace_static_url() {\n",
                      "markdown": "`#!/usr/bin/env bash\n\nget_latest_static_url() {\n  curl -s -D - https://aka.ms/downloadazcopy-v10-linux | awk '{if($1 ~ /Location/){printf \"%s\",$2}}' | tr -d '\\r'\n}\n\nreplace_static_url() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.gitlab/scripts/renovate/azcopy_update_url.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nget_latest_static_url() {\n  curl -s -D - https://aka.ms/downloadazcopy-v10-linux | awk '{if($1 ~ /Location/){printf \"%s\",$2}}' | tr -d '\\r'\n}\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nget_latest_static_url() {\n  curl -s -D - https://aka.ms/downloadazcopy-v10-linux | awk '{if($1 ~ /Location/){printf \"%s\",$2}}' | tr -d '\\r'\n}\n",
                      "markdown": "`#!/usr/bin/env bash\n\nget_latest_static_url() {\n  curl -s -D - https://aka.ms/downloadazcopy-v10-linux | awk '{if($1 ~ /Location/){printf \"%s\",$2}}' | tr -d '\\r'\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/scripts/process-wrapper"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 9,
                  "snippet": {
                    "text": "elif command -v xtail >/dev/null; then\n    xtail /var/log/gitaly &\nelse\n    tail -f /var/log/gitaly/* &\nfi\n\nif [ \"${USE_PRAEFECT_SERVICE:-0}\" -eq 1 ]; then\n",
                    "rendered": {
                      "text": "elif command -v xtail >/dev/null; then\n    xtail /var/log/gitaly &\nelse\n    tail -f /var/log/gitaly/* &\nfi\n\nif [ \"${USE_PRAEFECT_SERVICE:-0}\" -eq 1 ]; then\n",
                      "markdown": "`elif command -v xtail >/dev/null; then\n    xtail /var/log/gitaly &\nelse\n    tail -f /var/log/gitaly/* &\nfi\n\nif [ \"${USE_PRAEFECT_SERVICE:-0}\" -eq 1 ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/scripts/healthcheck"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 31,
                  "endLine": 6,
                  "endColumn": 37,
                  "snippet": {
                    "text": "set -e\n\n# Check that gitaly is running\nss -tulnp '( sport = :8075 )' | grep gitaly\n",
                    "rendered": {
                      "text": "set -e\n\n# Check that gitaly is running\nss -tulnp '( sport = :8075 )' | grep gitaly\n",
                      "markdown": "`set -e\n\n# Check that gitaly is running\nss -tulnp '( sport = :8075 )' | grep gitaly\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/openshift.metadata"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 32,
                  "endLine": 3,
                  "endColumn": 41,
                  "snippet": {
                    "text": "io.openshift.tags=gitlab-gitaly\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab Gitaly service container.\nio.openshift.non-scalable=false\nio.openshift-min-memory=200Mi\nio.openshift.min-cpu=100m\n",
                    "rendered": {
                      "text": "io.openshift.tags=gitlab-gitaly\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab Gitaly service container.\nio.openshift.non-scalable=false\nio.openshift-min-memory=200Mi\nio.openshift.min-cpu=100m\n",
                      "markdown": "`io.openshift.tags=gitlab-gitaly\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab Gitaly service container.\nio.openshift.non-scalable=false\nio.openshift-min-memory=200Mi\nio.openshift.min-cpu=100m\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rust/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 6,
                  "endLine": 21,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    && curl --retry 6 -sfo rust_signing_key.pub  https://static.rust-lang.org/rust-key.gpg.ascii \\\n    && gpg2 --import rust_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify rust.tar.gz.asc rust.tar.gz \\\n    && tar -xzf rust.tar.gz \\\n    && rust-$RUST_VERSION-$RUST_PLATFORM/install.sh --components=rustc,cargo,rust-std-$RUST_PLATFORM --destdir=/assets \\\n    && rm rust.tar.gz \\\n    && rm -rf ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "    && curl --retry 6 -sfo rust_signing_key.pub  https://static.rust-lang.org/rust-key.gpg.ascii \\\n    && gpg2 --import rust_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify rust.tar.gz.asc rust.tar.gz \\\n    && tar -xzf rust.tar.gz \\\n    && rust-$RUST_VERSION-$RUST_PLATFORM/install.sh --components=rustc,cargo,rust-std-$RUST_PLATFORM --destdir=/assets \\\n    && rm rust.tar.gz \\\n    && rm -rf ${BUILD_DIR} \\\n",
                      "markdown": "`    && curl --retry 6 -sfo rust_signing_key.pub  https://static.rust-lang.org/rust-key.gpg.ascii \\\n    && gpg2 --import rust_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify rust.tar.gz.asc rust.tar.gz \\\n    && tar -xzf rust.tar.gz \\\n    && rust-$RUST_VERSION-$RUST_PLATFORM/install.sh --components=rustc,cargo,rust-std-$RUST_PLATFORM --destdir=/assets \\\n    && rm rust.tar.gz \\\n    && rm -rf ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rust/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 6,
                  "endLine": 18,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && curl --retry 6 -sfo rust.tar.gz.asc ${RUST_URL}.asc \\\n    && curl --retry 6 -sfo rust_signing_key.pub  https://static.rust-lang.org/rust-key.gpg.ascii \\\n    && gpg2 --import rust_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify rust.tar.gz.asc rust.tar.gz \\\n    && tar -xzf rust.tar.gz \\\n",
                    "rendered": {
                      "text": "    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && curl --retry 6 -sfo rust.tar.gz.asc ${RUST_URL}.asc \\\n    && curl --retry 6 -sfo rust_signing_key.pub  https://static.rust-lang.org/rust-key.gpg.ascii \\\n    && gpg2 --import rust_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify rust.tar.gz.asc rust.tar.gz \\\n    && tar -xzf rust.tar.gz \\\n",
                      "markdown": "`    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && curl --retry 6 -sfo rust.tar.gz.asc ${RUST_URL}.asc \\\n    && curl --retry 6 -sfo rust_signing_key.pub  https://static.rust-lang.org/rust-key.gpg.ascii \\\n    && gpg2 --import rust_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify rust.tar.gz.asc rust.tar.gz \\\n    && tar -xzf rust.tar.gz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rust/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 6,
                  "endLine": 17,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 tar gzip \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && curl --retry 6 -sfo rust.tar.gz.asc ${RUST_URL}.asc \\\n    && curl --retry 6 -sfo rust_signing_key.pub  https://static.rust-lang.org/rust-key.gpg.ascii \\\n    && gpg2 --import rust_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify rust.tar.gz.asc rust.tar.gz \\\n",
                    "rendered": {
                      "text": "    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 tar gzip \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && curl --retry 6 -sfo rust.tar.gz.asc ${RUST_URL}.asc \\\n    && curl --retry 6 -sfo rust_signing_key.pub  https://static.rust-lang.org/rust-key.gpg.ascii \\\n    && gpg2 --import rust_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify rust.tar.gz.asc rust.tar.gz \\\n",
                      "markdown": "`    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 tar gzip \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && curl --retry 6 -sfo rust.tar.gz.asc ${RUST_URL}.asc \\\n    && curl --retry 6 -sfo rust_signing_key.pub  https://static.rust-lang.org/rust-key.gpg.ascii \\\n    && gpg2 --import rust_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify rust.tar.gz.asc rust.tar.gz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rust/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 6,
                  "endLine": 16,
                  "endColumn": 12,
                  "snippet": {
                    "text": "RUN mkdir ${BUILD_DIR} \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 tar gzip \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && curl --retry 6 -sfo rust.tar.gz.asc ${RUST_URL}.asc \\\n    && curl --retry 6 -sfo rust_signing_key.pub  https://static.rust-lang.org/rust-key.gpg.ascii \\\n    && gpg2 --import rust_signing_key.pub \\\n",
                    "rendered": {
                      "text": "RUN mkdir ${BUILD_DIR} \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 tar gzip \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && curl --retry 6 -sfo rust.tar.gz.asc ${RUST_URL}.asc \\\n    && curl --retry 6 -sfo rust_signing_key.pub  https://static.rust-lang.org/rust-key.gpg.ascii \\\n    && gpg2 --import rust_signing_key.pub \\\n",
                      "markdown": "`RUN mkdir ${BUILD_DIR} \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 tar gzip \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && curl --retry 6 -sfo rust.tar.gz.asc ${RUST_URL}.asc \\\n    && curl --retry 6 -sfo rust_signing_key.pub  https://static.rust-lang.org/rust-key.gpg.ascii \\\n    && gpg2 --import rust_signing_key.pub \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rust/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 92,
                  "endLine": 14,
                  "endColumn": 97,
                  "snippet": {
                    "text": "\n# Install Rust\nRUN mkdir ${BUILD_DIR} \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 tar gzip \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && curl --retry 6 -sfo rust.tar.gz.asc ${RUST_URL}.asc \\\n",
                    "rendered": {
                      "text": "\n# Install Rust\nRUN mkdir ${BUILD_DIR} \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 tar gzip \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && curl --retry 6 -sfo rust.tar.gz.asc ${RUST_URL}.asc \\\n",
                      "markdown": "`\n# Install Rust\nRUN mkdir ${BUILD_DIR} \\\n    && microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 tar gzip \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && curl --retry 6 -sfo rust.tar.gz.asc ${RUST_URL}.asc \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rust/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 10,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG RUST_PLATFORM=x86_64-unknown-linux-gnu\nARG BUILD_DIR=/tmp/build\nARG DNF_OPTS\n\nENV RUST_URL=\"https://static.rust-lang.org/dist/rust-$RUST_VERSION-$RUST_PLATFORM.tar.gz\"\n\n# Install Rust\nRUN mkdir ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "ARG RUST_PLATFORM=x86_64-unknown-linux-gnu\nARG BUILD_DIR=/tmp/build\nARG DNF_OPTS\n\nENV RUST_URL=\"https://static.rust-lang.org/dist/rust-$RUST_VERSION-$RUST_PLATFORM.tar.gz\"\n\n# Install Rust\nRUN mkdir ${BUILD_DIR} \\\n",
                      "markdown": "`ARG RUST_PLATFORM=x86_64-unknown-linux-gnu\nARG BUILD_DIR=/tmp/build\nARG DNF_OPTS\n\nENV RUST_URL=\"https://static.rust-lang.org/dist/rust-$RUST_VERSION-$RUST_PLATFORM.tar.gz\"\n\n# Install Rust\nRUN mkdir ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rust/Dockerfile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 11,
                  "endLine": 18,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ENV RUST_URL=\"https://static.rust-lang.org/dist/rust-$RUST_VERSION-$RUST_PLATFORM.tar.gz\"\n\n# Install Rust\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n",
                    "rendered": {
                      "text": "ENV RUST_URL=\"https://static.rust-lang.org/dist/rust-$RUST_VERSION-$RUST_PLATFORM.tar.gz\"\n\n# Install Rust\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n",
                      "markdown": "`ENV RUST_URL=\"https://static.rust-lang.org/dist/rust-$RUST_VERSION-$RUST_PLATFORM.tar.gz\"\n\n# Install Rust\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rust/Dockerfile"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 6,
                  "endLine": 25,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && tar -xzf rust.tar.gz \\\n    && rust-$RUST_VERSION-$RUST_PLATFORM/install.sh --components=rustc,cargo,rust-std-$RUST_PLATFORM --destdir=/assets \\\n    && rm rust.tar.gz \\\n    && rm -rf /var/lib/apt/lists/* \\\n",
                    "rendered": {
                      "text": "    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && tar -xzf rust.tar.gz \\\n    && rust-$RUST_VERSION-$RUST_PLATFORM/install.sh --components=rustc,cargo,rust-std-$RUST_PLATFORM --destdir=/assets \\\n    && rm rust.tar.gz \\\n    && rm -rf /var/lib/apt/lists/* \\\n",
                      "markdown": "`    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && tar -xzf rust.tar.gz \\\n    && rust-$RUST_VERSION-$RUST_PLATFORM/install.sh --components=rustc,cargo,rust-std-$RUST_PLATFORM --destdir=/assets \\\n    && rm rust.tar.gz \\\n    && rm -rf /var/lib/apt/lists/* \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rust/Dockerfile"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 6,
                  "endLine": 24,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        ca-certificates \\\n    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && tar -xzf rust.tar.gz \\\n    && rust-$RUST_VERSION-$RUST_PLATFORM/install.sh --components=rustc,cargo,rust-std-$RUST_PLATFORM --destdir=/assets \\\n    && rm rust.tar.gz \\\n",
                    "rendered": {
                      "text": "        ca-certificates \\\n    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && tar -xzf rust.tar.gz \\\n    && rust-$RUST_VERSION-$RUST_PLATFORM/install.sh --components=rustc,cargo,rust-std-$RUST_PLATFORM --destdir=/assets \\\n    && rm rust.tar.gz \\\n",
                      "markdown": "`        ca-certificates \\\n    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo rust.tar.gz ${RUST_URL} \\\n    && tar -xzf rust.tar.gz \\\n    && rust-$RUST_VERSION-$RUST_PLATFORM/install.sh --components=rustc,cargo,rust-std-$RUST_PLATFORM --destdir=/assets \\\n    && rm rust.tar.gz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rust/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 7,
                  "endLine": 20,
                  "endColumn": 13,
                  "snippet": {
                    "text": "# Install Rust\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "# Install Rust\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n",
                      "markdown": "`# Install Rust\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rust/Dockerfile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 6,
                  "endLine": 19,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n# Install Rust\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n    && mkdir ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "\n# Install Rust\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n    && mkdir ${BUILD_DIR} \\\n",
                      "markdown": "`\n# Install Rust\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n    && mkdir ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rust/Dockerfile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ENV RUST_URL=\"https://static.rust-lang.org/dist/rust-$RUST_VERSION-$RUST_PLATFORM.tar.gz\"\n\n# Install Rust\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n",
                    "rendered": {
                      "text": "ENV RUST_URL=\"https://static.rust-lang.org/dist/rust-$RUST_VERSION-$RUST_PLATFORM.tar.gz\"\n\n# Install Rust\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n",
                      "markdown": "`ENV RUST_URL=\"https://static.rust-lang.org/dist/rust-$RUST_VERSION-$RUST_PLATFORM.tar.gz\"\n\n# Install Rust\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-rust/Dockerfile"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 50,
                  "endLine": 15,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG RUST_PLATFORM=x86_64-unknown-linux-gnu\nFROM --platform=${TARGETPLATFORM} base as base-arm64\nARG RUST_PLATFORM=aarch64-unknown-linux-gnu\nFROM --platform=${TARGETPLATFORM} base-$TARGETARCH\nENV RUST_URL=\"https://static.rust-lang.org/dist/rust-$RUST_VERSION-$RUST_PLATFORM.tar.gz\"\n\n# Install Rust\nRUN apt-get update \\\n",
                    "rendered": {
                      "text": "ARG RUST_PLATFORM=x86_64-unknown-linux-gnu\nFROM --platform=${TARGETPLATFORM} base as base-arm64\nARG RUST_PLATFORM=aarch64-unknown-linux-gnu\nFROM --platform=${TARGETPLATFORM} base-$TARGETARCH\nENV RUST_URL=\"https://static.rust-lang.org/dist/rust-$RUST_VERSION-$RUST_PLATFORM.tar.gz\"\n\n# Install Rust\nRUN apt-get update \\\n",
                      "markdown": "`ARG RUST_PLATFORM=x86_64-unknown-linux-gnu\nFROM --platform=${TARGETPLATFORM} base as base-arm64\nARG RUST_PLATFORM=aarch64-unknown-linux-gnu\nFROM --platform=${TARGETPLATFORM} base-$TARGETARCH\nENV RUST_URL=\"https://static.rust-lang.org/dist/rust-$RUST_VERSION-$RUST_PLATFORM.tar.gz\"\n\n# Install Rust\nRUN apt-get update \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 6,
                  "endLine": 16,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    && curl -f --retry 6 https://dl.google.com/linux/linux_signing_key.pub -o linux_signing_key.pub \\\n    && gpg2 --import linux_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify go${GO_VERSION}.linux-amd64.tar.gz.asc go${GO_VERSION}.linux-amd64.tar.gz \\\n    && tar -C /assets/usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz\n",
                    "rendered": {
                      "text": "    && curl -f --retry 6 https://dl.google.com/linux/linux_signing_key.pub -o linux_signing_key.pub \\\n    && gpg2 --import linux_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify go${GO_VERSION}.linux-amd64.tar.gz.asc go${GO_VERSION}.linux-amd64.tar.gz \\\n    && tar -C /assets/usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz\n",
                      "markdown": "`    && curl -f --retry 6 https://dl.google.com/linux/linux_signing_key.pub -o linux_signing_key.pub \\\n    && gpg2 --import linux_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify go${GO_VERSION}.linux-amd64.tar.gz.asc go${GO_VERSION}.linux-amd64.tar.gz \\\n    && tar -C /assets/usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 6,
                  "endLine": 13,
                  "endColumn": 12,
                  "snippet": {
                    "text": "r/local \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz.asc -o go${GO_VERSION}.linux-amd64.tar.gz.asc \\\n    && curl -f --retry 6 https://dl.google.com/linux/linux_signing_key.pub -o linux_signing_key.pub \\\n    && gpg2 --import linux_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify go${GO_VERSION}.linux-amd64.tar.gz.asc go${GO_VERSION}.linux-amd64.tar.gz \\\n    && tar -C /assets/usr/local -xzf go${GO_VERS",
                    "rendered": {
                      "text": "r/local \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz.asc -o go${GO_VERSION}.linux-amd64.tar.gz.asc \\\n    && curl -f --retry 6 https://dl.google.com/linux/linux_signing_key.pub -o linux_signing_key.pub \\\n    && gpg2 --import linux_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify go${GO_VERSION}.linux-amd64.tar.gz.asc go${GO_VERSION}.linux-amd64.tar.gz \\\n    && tar -C /assets/usr/local -xzf go${GO_VERS",
                      "markdown": "`r/local \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz.asc -o go${GO_VERSION}.linux-amd64.tar.gz.asc \\\n    && curl -f --retry 6 https://dl.google.com/linux/linux_signing_key.pub -o linux_signing_key.pub \\\n    && gpg2 --import linux_signing_key.pub \\\n    && gpg2 --auto-key-retrieve --verify go${GO_VERSION}.linux-amd64.tar.gz.asc go${GO_VERSION}.linux-amd64.tar.gz \\\n    && tar -C /assets/usr/local -xzf go${GO_VERS`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 6,
                  "endLine": 12,
                  "endColumn": 12,
                  "snippet": {
                    "text": "--assumeyes --nodocs --setopt=install_weak_deps=0 curl-minimal ca-certificates tar gzip \\\n    && microdnf clean all -y\\\n    && mkdir -p /assets/usr/local \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz.asc -o go${GO_VERSION}.linux-amd64.tar.gz.asc \\\n    && curl -f --retry 6 https://dl.google.com/linux/linux_signing_key.pub -o linux_signing_key.pub \\\n    && gpg2 --import linux_signing_key.pub \\\n    && gpg2 --auto-",
                    "rendered": {
                      "text": "--assumeyes --nodocs --setopt=install_weak_deps=0 curl-minimal ca-certificates tar gzip \\\n    && microdnf clean all -y\\\n    && mkdir -p /assets/usr/local \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz.asc -o go${GO_VERSION}.linux-amd64.tar.gz.asc \\\n    && curl -f --retry 6 https://dl.google.com/linux/linux_signing_key.pub -o linux_signing_key.pub \\\n    && gpg2 --import linux_signing_key.pub \\\n    && gpg2 --auto-",
                      "markdown": "`--assumeyes --nodocs --setopt=install_weak_deps=0 curl-minimal ca-certificates tar gzip \\\n    && microdnf clean all -y\\\n    && mkdir -p /assets/usr/local \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz.asc -o go${GO_VERSION}.linux-amd64.tar.gz.asc \\\n    && curl -f --retry 6 https://dl.google.com/linux/linux_signing_key.pub -o linux_signing_key.pub \\\n    && gpg2 --import linux_signing_key.pub \\\n    && gpg2 --auto-`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 6,
                  "endLine": 11,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ry.access.redhat.com/ubi9/ubi-minimal:9.4\n\nFROM ${UBI_IMAGE}\n\nARG GO_VERSION=1.22.7\nARG DNF_OPTS\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 curl-minimal ca-certificates tar gzip \\\n    && microdnf clean all -y\\\n    && mkdir -p /assets/usr/local \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz.asc -o go${GO_VERSION}.linux-amd64.tar.gz.asc \\\n    && curl -f --retry 6 htt",
                    "rendered": {
                      "text": "ry.access.redhat.com/ubi9/ubi-minimal:9.4\n\nFROM ${UBI_IMAGE}\n\nARG GO_VERSION=1.22.7\nARG DNF_OPTS\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 curl-minimal ca-certificates tar gzip \\\n    && microdnf clean all -y\\\n    && mkdir -p /assets/usr/local \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz.asc -o go${GO_VERSION}.linux-amd64.tar.gz.asc \\\n    && curl -f --retry 6 htt",
                      "markdown": "`ry.access.redhat.com/ubi9/ubi-minimal:9.4\n\nFROM ${UBI_IMAGE}\n\nARG GO_VERSION=1.22.7\nARG DNF_OPTS\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 curl-minimal ca-certificates tar gzip \\\n    && microdnf clean all -y\\\n    && mkdir -p /assets/usr/local \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz.asc -o go${GO_VERSION}.linux-amd64.tar.gz.asc \\\n    && curl -f --retry 6 htt`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 118,
                  "endLine": 8,
                  "endColumn": 123,
                  "snippet": {
                    "text": "ARG GO_VERSION=1.22.7\nARG DNF_OPTS\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 curl-minimal ca-certificates tar gzip \\\n    && microdnf clean all -y\\\n    && mkdir -p /assets/usr/local \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz \\\n",
                    "rendered": {
                      "text": "ARG GO_VERSION=1.22.7\nARG DNF_OPTS\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 curl-minimal ca-certificates tar gzip \\\n    && microdnf clean all -y\\\n    && mkdir -p /assets/usr/local \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz \\\n",
                      "markdown": "`ARG GO_VERSION=1.22.7\nARG DNF_OPTS\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 curl-minimal ca-certificates tar gzip \\\n    && microdnf clean all -y\\\n    && mkdir -p /assets/usr/local \\\n    && curl -f --retry 6 https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 11,
                  "endLine": 12,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ENV GO_URL=\"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-$TARGETARCH.tar.gz\"\n\n# Install go\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n",
                    "rendered": {
                      "text": "ENV GO_URL=\"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-$TARGETARCH.tar.gz\"\n\n# Install go\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n",
                      "markdown": "`ENV GO_URL=\"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-$TARGETARCH.tar.gz\"\n\n# Install go\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 21,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo golang.tar.xz ${GO_URL} \\\n    && tar -xf golang.tar.xz \\\n    &&  mv ${BUILD_DIR}/go /usr/local/go \\\n    &&  rm golang.tar.xz \\\n    &&  rm -rf /var/lib/apt/lists/* \\\n    &&  ln -sf /usr/local/go/bin/go /usr/local/go/bin/gofmt /usr/local/go/bin/godoc /usr/local/bin/ \\\n",
                    "rendered": {
                      "text": "    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo golang.tar.xz ${GO_URL} \\\n    && tar -xf golang.tar.xz \\\n    &&  mv ${BUILD_DIR}/go /usr/local/go \\\n    &&  rm golang.tar.xz \\\n    &&  rm -rf /var/lib/apt/lists/* \\\n    &&  ln -sf /usr/local/go/bin/go /usr/local/go/bin/gofmt /usr/local/go/bin/godoc /usr/local/bin/ \\\n",
                      "markdown": "`    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo golang.tar.xz ${GO_URL} \\\n    && tar -xf golang.tar.xz \\\n    &&  mv ${BUILD_DIR}/go /usr/local/go \\\n    &&  rm golang.tar.xz \\\n    &&  rm -rf /var/lib/apt/lists/* \\\n    &&  ln -sf /usr/local/go/bin/go /usr/local/go/bin/gofmt /usr/local/go/bin/godoc /usr/local/bin/ \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 6,
                  "endLine": 20,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo golang.tar.xz ${GO_URL} \\\n    && tar -xf golang.tar.xz \\\n    &&  mv ${BUILD_DIR}/go /usr/local/go \\\n    &&  rm golang.tar.xz \\\n    &&  rm -rf /var/lib/apt/lists/* \\\n",
                    "rendered": {
                      "text": "    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo golang.tar.xz ${GO_URL} \\\n    && tar -xf golang.tar.xz \\\n    &&  mv ${BUILD_DIR}/go /usr/local/go \\\n    &&  rm golang.tar.xz \\\n    &&  rm -rf /var/lib/apt/lists/* \\\n",
                      "markdown": "`    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo golang.tar.xz ${GO_URL} \\\n    && tar -xf golang.tar.xz \\\n    &&  mv ${BUILD_DIR}/go /usr/local/go \\\n    &&  rm golang.tar.xz \\\n    &&  rm -rf /var/lib/apt/lists/* \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 6,
                  "endLine": 19,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        bzip2 \\\n    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo golang.tar.xz ${GO_URL} \\\n    && tar -xf golang.tar.xz \\\n    &&  mv ${BUILD_DIR}/go /usr/local/go \\\n    &&  rm golang.tar.xz \\\n",
                    "rendered": {
                      "text": "        bzip2 \\\n    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo golang.tar.xz ${GO_URL} \\\n    && tar -xf golang.tar.xz \\\n    &&  mv ${BUILD_DIR}/go /usr/local/go \\\n    &&  rm golang.tar.xz \\\n",
                      "markdown": "`        bzip2 \\\n    && mkdir ${BUILD_DIR} \\\n    && cd ${BUILD_DIR} \\\n    && curl --retry 6 -sfo golang.tar.xz ${GO_URL} \\\n    && tar -xf golang.tar.xz \\\n    &&  mv ${BUILD_DIR}/go /usr/local/go \\\n    &&  rm golang.tar.xz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 14,
                  "endColumn": 13,
                  "snippet": {
                    "text": "# Install go\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n        bzip2 \\\n    && mkdir ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "# Install go\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n        bzip2 \\\n    && mkdir ${BUILD_DIR} \\\n",
                      "markdown": "`# Install go\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n        bzip2 \\\n    && mkdir ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 6,
                  "endLine": 13,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n# Install go\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n        bzip2 \\\n",
                    "rendered": {
                      "text": "\n# Install go\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n        bzip2 \\\n",
                      "markdown": "`\n# Install go\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n        bzip2 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 3,
                  "endLine": 12,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ENV GO_URL=\"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-$TARGETARCH.tar.gz\"\n\n# Install go\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n",
                    "rendered": {
                      "text": "ENV GO_URL=\"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-$TARGETARCH.tar.gz\"\n\n# Install go\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n",
                      "markdown": "`ENV GO_URL=\"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-$TARGETARCH.tar.gz\"\n\n# Install go\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n        ca-certificates \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 9,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG TARGETARCH\nARG GO_VERSION=1.22.7\nARG BUILD_DIR=/tmp/build\n\nENV GO_URL=\"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-$TARGETARCH.tar.gz\"\n\n# Install go\nRUN apt-get update \\\n",
                    "rendered": {
                      "text": "ARG TARGETARCH\nARG GO_VERSION=1.22.7\nARG BUILD_DIR=/tmp/build\n\nENV GO_URL=\"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-$TARGETARCH.tar.gz\"\n\n# Install go\nRUN apt-get update \\\n",
                      "markdown": "`ARG TARGETARCH\nARG GO_VERSION=1.22.7\nARG BUILD_DIR=/tmp/build\n\nENV GO_URL=\"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-$TARGETARCH.tar.gz\"\n\n# Install go\nRUN apt-get update \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 24,
                  "endLine": 50,
                  "endColumn": 32,
                  "snippet": {
                    "text": "RUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n# create data directories\nRUN mkdir -p /data/index /data/repos \\\n",
                    "rendered": {
                      "text": "RUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n# create data directories\nRUN mkdir -p /data/index /data/repos \\\n",
                      "markdown": "`RUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n# create data directories\nRUN mkdir -p /data/index /data/repos \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 52,
                  "endLine": 65,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 63,
                  "endColumn": 4,
                  "snippet": {
                    "text": "COPY scripts/ /scripts/\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "COPY scripts/ /scripts/\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`COPY scripts/ /scripts/\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 11,
                  "endLine": 47,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ENV PORT=6060\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                    "rendered": {
                      "text": "ENV PORT=6060\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                      "markdown": "`ENV PORT=6060\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 12,
                  "endLine": 23,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n",
                      "markdown": "`  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 4,
                  "endLine": 54,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n# create data directories\nRUN mkdir -p /data/index /data/repos \\\n  && chown -R $GITLAB_USER:$GITLAB_USER /data\n\nVOLUME [\"/data/index\", \"/data/repos\"]\n\n",
                    "rendered": {
                      "text": "\n# create data directories\nRUN mkdir -p /data/index /data/repos \\\n  && chown -R $GITLAB_USER:$GITLAB_USER /data\n\nVOLUME [\"/data/index\", \"/data/repos\"]\n\n",
                      "markdown": "`\n# create data directories\nRUN mkdir -p /data/index /data/repos \\\n  && chown -R $GITLAB_USER:$GITLAB_USER /data\n\nVOLUME [\"/data/index\", \"/data/repos\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 63,
                  "endLine": 48,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n",
                    "rendered": {
                      "text": "\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n",
                      "markdown": "`\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 4,
                  "endLine": 48,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n",
                    "rendered": {
                      "text": "\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n",
                      "markdown": "`\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 3,
                  "endLine": 47,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ENV PORT=6060\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                    "rendered": {
                      "text": "ENV PORT=6060\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                      "markdown": "`ENV PORT=6060\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends universal-ctags git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 19,
                  "endLine": 44,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nFROM --platform=${TARGETPLATFORM} ${GITLAB_BASE_IMAGE}\n\nARG GITLAB_USER=git\nENV PORT=6060\n\n# create gitlab user\nRUN apt-get update \\\n",
                    "rendered": {
                      "text": "\nFROM --platform=${TARGETPLATFORM} ${GITLAB_BASE_IMAGE}\n\nARG GITLAB_USER=git\nENV PORT=6060\n\n# create gitlab user\nRUN apt-get update \\\n",
                      "markdown": "`\nFROM --platform=${TARGETPLATFORM} ${GITLAB_BASE_IMAGE}\n\nARG GITLAB_USER=git\nENV PORT=6060\n\n# create gitlab user\nRUN apt-get update \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 4,
                  "endLine": 34,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-git-index ./cmd/zoekt-git-index/ \\\n  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-dynamic-indexserver ./cmd/zoekt-dynamic-indexserver/ \\\n  && rm -rf ${GOPATH} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd / \\\n  && rm -rf ${BUILD_DIR}\n",
                    "rendered": {
                      "text": "  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-git-index ./cmd/zoekt-git-index/ \\\n  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-dynamic-indexserver ./cmd/zoekt-dynamic-indexserver/ \\\n  && rm -rf ${GOPATH} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd / \\\n  && rm -rf ${BUILD_DIR}\n",
                      "markdown": "`  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-git-index ./cmd/zoekt-git-index/ \\\n  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-dynamic-indexserver ./cmd/zoekt-dynamic-indexserver/ \\\n  && rm -rf ${GOPATH} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd / \\\n  && rm -rf ${BUILD_DIR}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 4,
                  "endLine": 27,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && wget --output-document zoekt.zip \"$ZOEKT_ARCHIVE_DOWNLOAD_URL\" \\\n  && unzip zoekt.zip \\\n  && cd \"zoekt-$ZOEKT_VERSION\" \\\n  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-git-clone ./cmd/zoekt-git-clone/ \\\n",
                    "rendered": {
                      "text": "  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && wget --output-document zoekt.zip \"$ZOEKT_ARCHIVE_DOWNLOAD_URL\" \\\n  && unzip zoekt.zip \\\n  && cd \"zoekt-$ZOEKT_VERSION\" \\\n  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-git-clone ./cmd/zoekt-git-clone/ \\\n",
                      "markdown": "`  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && wget --output-document zoekt.zip \"$ZOEKT_ARCHIVE_DOWNLOAD_URL\" \\\n  && unzip zoekt.zip \\\n  && cd \"zoekt-$ZOEKT_VERSION\" \\\n  && GOTOOLCHAIN=$GOTOOLCHAIN CGO_ENABLED=0 go build -o /usr/local/bin/zoekt-git-clone ./cmd/zoekt-git-clone/ \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 4,
                  "endLine": 24,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && wget --output-document zoekt.zip \"$ZOEKT_ARCHIVE_DOWNLOAD_URL\" \\\n",
                    "rendered": {
                      "text": "  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && wget --output-document zoekt.zip \"$ZOEKT_ARCHIVE_DOWNLOAD_URL\" \\\n",
                      "markdown": "`  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n  && wget --output-document zoekt.zip \"$ZOEKT_ARCHIVE_DOWNLOAD_URL\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 4,
                  "endLine": 23,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n",
                    "rendered": {
                      "text": "  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n",
                      "markdown": "`  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p ${BUILD_DIR} \\\n  && cd ${BUILD_DIR} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 6,
                  "snippet": {
                    "text": "ENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n",
                    "rendered": {
                      "text": "ENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n",
                      "markdown": "`ENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git \\\n  unzip \\\n  wget' \\\n  && apt-get update \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-dynamic-indexserver/Dockerfile"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 17,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GOPATH=/go\nARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\nARG GITLAB_BASE_IMAGE\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git \\\n",
                    "rendered": {
                      "text": "ARG GOPATH=/go\nARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\nARG GITLAB_BASE_IMAGE\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git \\\n",
                      "markdown": "`ARG GOPATH=/go\nARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\nARG GITLAB_BASE_IMAGE\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/install-cfssl.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 22,
                  "endLine": 8,
                  "endColumn": 88,
                  "snippet": {
                    "text": "# Version & SHA2 of the checksums list\nCFSSL_VERSION=${CFSSL_VERSION:-1.6.1}\nCFSSL_CHECKSUM_SHA256=\"89e600cd5203a025f8b47c6cd5abb9a74b06e3c7f7f7dd3f5b2a00975b15a491\"\nCFSSL_SOURCE_CHECKSUM=\"6795ee399b54a3e560768e8bbe742cfb4810e1bcac1cf8a2d99f7e491f66e109\"\n# Download and install CFSSL from https://github.com/cloudflare/cfssl/releases\nCFSSL_PKG_URL=\"https://github.com/cloudflare/cfssl/releases/download/v${CFSSL_VERSION}\"\nCFSSL_INSTALL_URL=\"github.com/cloudflare/cfssl/cmd\"\n",
                    "rendered": {
                      "text": "# Version & SHA2 of the checksums list\nCFSSL_VERSION=${CFSSL_VERSION:-1.6.1}\nCFSSL_CHECKSUM_SHA256=\"89e600cd5203a025f8b47c6cd5abb9a74b06e3c7f7f7dd3f5b2a00975b15a491\"\nCFSSL_SOURCE_CHECKSUM=\"6795ee399b54a3e560768e8bbe742cfb4810e1bcac1cf8a2d99f7e491f66e109\"\n# Download and install CFSSL from https://github.com/cloudflare/cfssl/releases\nCFSSL_PKG_URL=\"https://github.com/cloudflare/cfssl/releases/download/v${CFSSL_VERSION}\"\nCFSSL_INSTALL_URL=\"github.com/cloudflare/cfssl/cmd\"\n",
                      "markdown": "`# Version & SHA2 of the checksums list\nCFSSL_VERSION=${CFSSL_VERSION:-1.6.1}\nCFSSL_CHECKSUM_SHA256=\"89e600cd5203a025f8b47c6cd5abb9a74b06e3c7f7f7dd3f5b2a00975b15a491\"\nCFSSL_SOURCE_CHECKSUM=\"6795ee399b54a3e560768e8bbe742cfb4810e1bcac1cf8a2d99f7e491f66e109\"\n# Download and install CFSSL from https://github.com/cloudflare/cfssl/releases\nCFSSL_PKG_URL=\"https://github.com/cloudflare/cfssl/releases/download/v${CFSSL_VERSION}\"\nCFSSL_INSTALL_URL=\"github.com/cloudflare/cfssl/cmd\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/install-cfssl.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 22,
                  "endLine": 7,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\n# Version & SHA2 of the checksums list\nCFSSL_VERSION=${CFSSL_VERSION:-1.6.1}\nCFSSL_CHECKSUM_SHA256=\"89e600cd5203a025f8b47c6cd5abb9a74b06e3c7f7f7dd3f5b2a00975b15a491\"\nCFSSL_SOURCE_CHECKSUM=\"6795ee399b54a3e560768e8bbe742cfb4810e1bcac1cf8a2d99f7e491f66e109\"\n# Download and install CFSSL from https://github.com/cloudflare/cfssl/releases\nCFSSL_PKG_URL=\"https://github.com/cloudflare/cfssl/releases/download/v${CFSSL_VERSION}\"\n",
                    "rendered": {
                      "text": "\n# Version & SHA2 of the checksums list\nCFSSL_VERSION=${CFSSL_VERSION:-1.6.1}\nCFSSL_CHECKSUM_SHA256=\"89e600cd5203a025f8b47c6cd5abb9a74b06e3c7f7f7dd3f5b2a00975b15a491\"\nCFSSL_SOURCE_CHECKSUM=\"6795ee399b54a3e560768e8bbe742cfb4810e1bcac1cf8a2d99f7e491f66e109\"\n# Download and install CFSSL from https://github.com/cloudflare/cfssl/releases\nCFSSL_PKG_URL=\"https://github.com/cloudflare/cfssl/releases/download/v${CFSSL_VERSION}\"\n",
                      "markdown": "`\n# Version & SHA2 of the checksums list\nCFSSL_VERSION=${CFSSL_VERSION:-1.6.1}\nCFSSL_CHECKSUM_SHA256=\"89e600cd5203a025f8b47c6cd5abb9a74b06e3c7f7f7dd3f5b2a00975b15a491\"\nCFSSL_SOURCE_CHECKSUM=\"6795ee399b54a3e560768e8bbe742cfb4810e1bcac1cf8a2d99f7e491f66e109\"\n# Download and install CFSSL from https://github.com/cloudflare/cfssl/releases\nCFSSL_PKG_URL=\"https://github.com/cloudflare/cfssl/releases/download/v${CFSSL_VERSION}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/install-cfssl.sh"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 23,
                  "endLine": 80,
                  "endColumn": 5,
                  "snippet": {
                    "text": "    mv $GOPATH/bin/${item} ${CFSSL_BIN}/${item}\n  done\nfi\necho \"Fetching LICENSE\"\ncurl --retry 6 -fJLo ${CFSSL_BIN}/cfssl.LICENSE \"${CFSSL_LICENSE}\"\n\ncd $CWD\nrm -rf $WORK_DIR\n",
                    "rendered": {
                      "text": "    mv $GOPATH/bin/${item} ${CFSSL_BIN}/${item}\n  done\nfi\necho \"Fetching LICENSE\"\ncurl --retry 6 -fJLo ${CFSSL_BIN}/cfssl.LICENSE \"${CFSSL_LICENSE}\"\n\ncd $CWD\nrm -rf $WORK_DIR\n",
                      "markdown": "`    mv $GOPATH/bin/${item} ${CFSSL_BIN}/${item}\n  done\nfi\necho \"Fetching LICENSE\"\ncurl --retry 6 -fJLo ${CFSSL_BIN}/cfssl.LICENSE \"${CFSSL_LICENSE}\"\n\ncd $CWD\nrm -rf $WORK_DIR\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/install-cfssl.sh"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 3,
                  "endLine": 76,
                  "endColumn": 7,
                  "snippet": {
                    "text": "else\n  for item in ${CFSSL_ITEMS} ; do\n    echo \"Placing '${item}' in '${CFSSL_BIN}'\"\n    mv $GOPATH/bin/${item} ${CFSSL_BIN}/${item}\n  done\nfi\necho \"Fetching LICENSE\"\n",
                    "rendered": {
                      "text": "else\n  for item in ${CFSSL_ITEMS} ; do\n    echo \"Placing '${item}' in '${CFSSL_BIN}'\"\n    mv $GOPATH/bin/${item} ${CFSSL_BIN}/${item}\n  done\nfi\necho \"Fetching LICENSE\"\n",
                      "markdown": "`else\n  for item in ${CFSSL_ITEMS} ; do\n    echo \"Placing '${item}' in '${CFSSL_BIN}'\"\n    mv $GOPATH/bin/${item} ${CFSSL_BIN}/${item}\n  done\nfi\necho \"Fetching LICENSE\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/install-cfssl.sh"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 3,
                  "endLine": 71,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  for item in ${CFSSL_ITEMS} ; do\n    echo \"Placing '${item}' in '${CFSSL_BIN}'\"\n    mv \"${item}_${CFSSL_VERSION}_${CFSSL_PLATFORM}\" ${CFSSL_BIN}/${item}\n    chmod +x ${CFSSL_BIN}/${item}\n  done\nelse\n  for item in ${CFSSL_ITEMS} ; do\n",
                    "rendered": {
                      "text": "  for item in ${CFSSL_ITEMS} ; do\n    echo \"Placing '${item}' in '${CFSSL_BIN}'\"\n    mv \"${item}_${CFSSL_VERSION}_${CFSSL_PLATFORM}\" ${CFSSL_BIN}/${item}\n    chmod +x ${CFSSL_BIN}/${item}\n  done\nelse\n  for item in ${CFSSL_ITEMS} ; do\n",
                      "markdown": "`  for item in ${CFSSL_ITEMS} ; do\n    echo \"Placing '${item}' in '${CFSSL_BIN}'\"\n    mv \"${item}_${CFSSL_VERSION}_${CFSSL_PLATFORM}\" ${CFSSL_BIN}/${item}\n    chmod +x ${CFSSL_BIN}/${item}\n  done\nelse\n  for item in ${CFSSL_ITEMS} ; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/install-cfssl.sh"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 3,
                  "endLine": 70,
                  "endColumn": 7,
                  "snippet": {
                    "text": "if [ $TARGETARCH = \"amd64\" ]; then\n  for item in ${CFSSL_ITEMS} ; do\n    echo \"Placing '${item}' in '${CFSSL_BIN}'\"\n    mv \"${item}_${CFSSL_VERSION}_${CFSSL_PLATFORM}\" ${CFSSL_BIN}/${item}\n    chmod +x ${CFSSL_BIN}/${item}\n  done\nelse\n",
                    "rendered": {
                      "text": "if [ $TARGETARCH = \"amd64\" ]; then\n  for item in ${CFSSL_ITEMS} ; do\n    echo \"Placing '${item}' in '${CFSSL_BIN}'\"\n    mv \"${item}_${CFSSL_VERSION}_${CFSSL_PLATFORM}\" ${CFSSL_BIN}/${item}\n    chmod +x ${CFSSL_BIN}/${item}\n  done\nelse\n",
                      "markdown": "`if [ $TARGETARCH = \"amd64\" ]; then\n  for item in ${CFSSL_ITEMS} ; do\n    echo \"Placing '${item}' in '${CFSSL_BIN}'\"\n    mv \"${item}_${CFSSL_VERSION}_${CFSSL_PLATFORM}\" ${CFSSL_BIN}/${item}\n    chmod +x ${CFSSL_BIN}/${item}\n  done\nelse\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/install-cfssl.sh"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 1,
                  "endLine": 54,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  echo \"${CFSSL_SOURCE_CHECKSUM}  cfssl-v${CFSSL_VERSION}.zip\" >> checksums.txt\n\n  echo \"Installing items: ${CFSSL_ITEMS}\"\n  curl -L http://github.com/cloudflare/cfssl/zipball/v${CFSSL_VERSION}/ -o cfssl-v${CFSSL_VERSION}.zip\n  unzip cfssl-v${CFSSL_VERSION}.zip\n  SOURCE=$(find -maxdepth 1 -name cloudflare-cfssl-* -print)\n  cd $SOURCE\n",
                    "rendered": {
                      "text": "  echo \"${CFSSL_SOURCE_CHECKSUM}  cfssl-v${CFSSL_VERSION}.zip\" >> checksums.txt\n\n  echo \"Installing items: ${CFSSL_ITEMS}\"\n  curl -L http://github.com/cloudflare/cfssl/zipball/v${CFSSL_VERSION}/ -o cfssl-v${CFSSL_VERSION}.zip\n  unzip cfssl-v${CFSSL_VERSION}.zip\n  SOURCE=$(find -maxdepth 1 -name cloudflare-cfssl-* -print)\n  cd $SOURCE\n",
                      "markdown": "`  echo \"${CFSSL_SOURCE_CHECKSUM}  cfssl-v${CFSSL_VERSION}.zip\" >> checksums.txt\n\n  echo \"Installing items: ${CFSSL_ITEMS}\"\n  curl -L http://github.com/cloudflare/cfssl/zipball/v${CFSSL_VERSION}/ -o cfssl-v${CFSSL_VERSION}.zip\n  unzip cfssl-v${CFSSL_VERSION}.zip\n  SOURCE=$(find -maxdepth 1 -name cloudflare-cfssl-* -print)\n  cd $SOURCE\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/install-cfssl.sh"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 22,
                  "endLine": 40,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  done\nelse\n  if [ \"$UBI_BUILD_IMAGE\" = false ]; then\n    apk add --no-cache git make musl-dev go gcc\n    export GOROOT=/usr/lib/go\n  else\n    microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 go\n",
                    "rendered": {
                      "text": "  done\nelse\n  if [ \"$UBI_BUILD_IMAGE\" = false ]; then\n    apk add --no-cache git make musl-dev go gcc\n    export GOROOT=/usr/lib/go\n  else\n    microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 go\n",
                      "markdown": "`  done\nelse\n  if [ \"$UBI_BUILD_IMAGE\" = false ]; then\n    apk add --no-cache git make musl-dev go gcc\n    export GOROOT=/usr/lib/go\n  else\n    microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 go\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/install-cfssl.sh"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    ITEM_URL=\"${CFSSL_PKG_URL}/${ITEM_PATH}\"\n    echo \"Fetching '${item}' from '${ITEM_URL}'\"\n    curl --retry 6 -fJLO  \"$ITEM_URL\"\n    grep ${ITEM_PATH} ${CHECKSUM_FILE} >> checksums.txt\n  done\nelse\n  if [ \"$UBI_BUILD_IMAGE\" = false ]; then\n",
                    "rendered": {
                      "text": "    ITEM_URL=\"${CFSSL_PKG_URL}/${ITEM_PATH}\"\n    echo \"Fetching '${item}' from '${ITEM_URL}'\"\n    curl --retry 6 -fJLO  \"$ITEM_URL\"\n    grep ${ITEM_PATH} ${CHECKSUM_FILE} >> checksums.txt\n  done\nelse\n  if [ \"$UBI_BUILD_IMAGE\" = false ]; then\n",
                      "markdown": "`    ITEM_URL=\"${CFSSL_PKG_URL}/${ITEM_PATH}\"\n    echo \"Fetching '${item}' from '${ITEM_URL}'\"\n    curl --retry 6 -fJLO  \"$ITEM_URL\"\n    grep ${ITEM_PATH} ${CHECKSUM_FILE} >> checksums.txt\n  done\nelse\n  if [ \"$UBI_BUILD_IMAGE\" = false ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/install-cfssl.sh"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 3,
                  "endLine": 35,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    ITEM_PATH=\"${item}_${CFSSL_VERSION}_${CFSSL_PLATFORM}\"\n    ITEM_URL=\"${CFSSL_PKG_URL}/${ITEM_PATH}\"\n    echo \"Fetching '${item}' from '${ITEM_URL}'\"\n    curl --retry 6 -fJLO  \"$ITEM_URL\"\n    grep ${ITEM_PATH} ${CHECKSUM_FILE} >> checksums.txt\n  done\nelse\n",
                    "rendered": {
                      "text": "    ITEM_PATH=\"${item}_${CFSSL_VERSION}_${CFSSL_PLATFORM}\"\n    ITEM_URL=\"${CFSSL_PKG_URL}/${ITEM_PATH}\"\n    echo \"Fetching '${item}' from '${ITEM_URL}'\"\n    curl --retry 6 -fJLO  \"$ITEM_URL\"\n    grep ${ITEM_PATH} ${CHECKSUM_FILE} >> checksums.txt\n  done\nelse\n",
                      "markdown": "`    ITEM_PATH=\"${item}_${CFSSL_VERSION}_${CFSSL_PLATFORM}\"\n    ITEM_URL=\"${CFSSL_PKG_URL}/${ITEM_PATH}\"\n    echo \"Fetching '${item}' from '${ITEM_URL}'\"\n    curl --retry 6 -fJLO  \"$ITEM_URL\"\n    grep ${ITEM_PATH} ${CHECKSUM_FILE} >> checksums.txt\n  done\nelse\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/install-cfssl.sh"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  # Fetch CHECKSUMS\n  echo \"Fecthing CHECKSUMS for ${CFSSL_VERSION}\"\n  CHECKSUM_FILE=\"cfssl_${CFSSL_VERSION}_checksums.txt\"\n  curl --retry 6 -fJLO \"${CFSSL_PKG_URL}/${CHECKSUM_FILE}\"\n\n  echo \"Fetching items: ${CFSSL_ITEMS}\"\n  for item in ${CFSSL_ITEMS} ; do\n",
                    "rendered": {
                      "text": "  # Fetch CHECKSUMS\n  echo \"Fecthing CHECKSUMS for ${CFSSL_VERSION}\"\n  CHECKSUM_FILE=\"cfssl_${CFSSL_VERSION}_checksums.txt\"\n  curl --retry 6 -fJLO \"${CFSSL_PKG_URL}/${CHECKSUM_FILE}\"\n\n  echo \"Fetching items: ${CFSSL_ITEMS}\"\n  for item in ${CFSSL_ITEMS} ; do\n",
                      "markdown": "`  # Fetch CHECKSUMS\n  echo \"Fecthing CHECKSUMS for ${CFSSL_VERSION}\"\n  CHECKSUM_FILE=\"cfssl_${CFSSL_VERSION}_checksums.txt\"\n  curl --retry 6 -fJLO \"${CFSSL_PKG_URL}/${CHECKSUM_FILE}\"\n\n  echo \"Fetching items: ${CFSSL_ITEMS}\"\n  for item in ${CFSSL_ITEMS} ; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/generate-certificates"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 53,
                  "endLine": 94,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  wildcard-csr.json | cfssljson -bare wildcard\n\n# Ensure generated artifacts are world readable to allow\n# the kubectl container to create Kubernetes Secrets.\nchmod +r /output/*-key.pem\n",
                    "rendered": {
                      "text": "  wildcard-csr.json | cfssljson -bare wildcard\n\n# Ensure generated artifacts are world readable to allow\n# the kubectl container to create Kubernetes Secrets.\nchmod +r /output/*-key.pem\n",
                      "markdown": "`  wildcard-csr.json | cfssljson -bare wildcard\n\n# Ensure generated artifacts are world readable to allow\n# the kubectl container to create Kubernetes Secrets.\nchmod +r /output/*-key.pem\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/generate-certificates"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 25,
                  "endLine": 66,
                  "endColumn": 4,
                  "snippet": {
                    "text": "}\nCA_CSR\n\necho \"wildcard-csr.json:\"\ntee wildcard-csr.json <<WILDCARD_CSR\n{\n  \"CN\": \"${CERT_SUBJECT}\",\n  \"hosts\": [\n",
                    "rendered": {
                      "text": "}\nCA_CSR\n\necho \"wildcard-csr.json:\"\ntee wildcard-csr.json <<WILDCARD_CSR\n{\n  \"CN\": \"${CERT_SUBJECT}\",\n  \"hosts\": [\n",
                      "markdown": "`}\nCA_CSR\n\necho \"wildcard-csr.json:\"\ntee wildcard-csr.json <<WILDCARD_CSR\n{\n  \"CN\": \"${CERT_SUBJECT}\",\n  \"hosts\": [\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/generate-certificates"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 19,
                  "endLine": 49,
                  "endColumn": 4,
                  "snippet": {
                    "text": "}\nCA_CONFIG\n\necho \"ca-csr.json:\"\ntee ca-csr.json <<CA_CSR\n{\n  \"CN\": \"${CA_SUBJECT}\",\n  \"key\": {\n",
                    "rendered": {
                      "text": "}\nCA_CONFIG\n\necho \"ca-csr.json:\"\ntee ca-csr.json <<CA_CSR\n{\n  \"CN\": \"${CA_SUBJECT}\",\n  \"key\": {\n",
                      "markdown": "`}\nCA_CONFIG\n\necho \"ca-csr.json:\"\ntee ca-csr.json <<CA_CSR\n{\n  \"CN\": \"${CA_SUBJECT}\",\n  \"key\": {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/cfssl-self-sign/scripts/generate-certificates"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 22,
                  "endLine": 27,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo \"cfssl version:\"\ncfssl version\n\necho \"ca-config.json:\"\ntee ca-config.json  <<CA_CONFIG\n{\n  \"signing\": {\n    \"default\": {\n",
                    "rendered": {
                      "text": "echo \"cfssl version:\"\ncfssl version\n\necho \"ca-config.json:\"\ntee ca-config.json  <<CA_CONFIG\n{\n  \"signing\": {\n    \"default\": {\n",
                      "markdown": "`echo \"cfssl version:\"\ncfssl version\n\necho \"ca-config.json:\"\ntee ca-config.json  <<CA_CONFIG\n{\n  \"signing\": {\n    \"default\": {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/sidekiq-config/secrets.yml"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 2,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "---\nproduction:\n  secret_key_base: 963365e80c3b379754ab1277d54fbb5e68a4833131f03e4a097165568e900190d5e0f57d565f0b611be69f70c8cfbd06f47fbf7e9966793b6bc802c8d323efb6\n  otp_key_base: e62021080e20756e9a650079ac9794a88f0d312331512d639e468d8aaf8bd44b45322884197f3cd5bd5c699fe4949aee29bb8fa9d749260cac37f7294c04d1de\n  db_key_base: 76fd4c76ad88731035c849ba42fbe298742776b52a2c27c25181a08a8d4b1755ae19870fec0bca8b21060a2f1b960ff958ba861e25580a1474e1f3bb63152883\n  openid_connect_signing_key: |\n",
                    "rendered": {
                      "text": "---\nproduction:\n  secret_key_base: 963365e80c3b379754ab1277d54fbb5e68a4833131f03e4a097165568e900190d5e0f57d565f0b611be69f70c8cfbd06f47fbf7e9966793b6bc802c8d323efb6\n  otp_key_base: e62021080e20756e9a650079ac9794a88f0d312331512d639e468d8aaf8bd44b45322884197f3cd5bd5c699fe4949aee29bb8fa9d749260cac37f7294c04d1de\n  db_key_base: 76fd4c76ad88731035c849ba42fbe298742776b52a2c27c25181a08a8d4b1755ae19870fec0bca8b21060a2f1b960ff958ba861e25580a1474e1f3bb63152883\n  openid_connect_signing_key: |\n",
                      "markdown": "`---\nproduction:\n  secret_key_base: 963365e80c3b379754ab1277d54fbb5e68a4833131f03e4a097165568e900190d5e0f57d565f0b611be69f70c8cfbd06f47fbf7e9966793b6bc802c8d323efb6\n  otp_key_base: e62021080e20756e9a650079ac9794a88f0d312331512d639e468d8aaf8bd44b45322884197f3cd5bd5c699fe4949aee29bb8fa9d749260cac37f7294c04d1de\n  db_key_base: 76fd4c76ad88731035c849ba42fbe298742776b52a2c27c25181a08a8d4b1755ae19870fec0bca8b21060a2f1b960ff958ba861e25580a1474e1f3bb63152883\n  openid_connect_signing_key: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/sidekiq-config/database.yml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 4,
                  "endLine": 21,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    database: gitlabhq_production\n    pool: 10\n    username: gitlab\n    password: meercat\n    host: postgres\n    port: 5432\n    database_tasks: false\n",
                    "rendered": {
                      "text": "    database: gitlabhq_production\n    pool: 10\n    username: gitlab\n    password: meercat\n    host: postgres\n    port: 5432\n    database_tasks: false\n",
                      "markdown": "`    database: gitlabhq_production\n    pool: 10\n    username: gitlab\n    password: meercat\n    host: postgres\n    port: 5432\n    database_tasks: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/sidekiq-config/database.yml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    database: gitlabhq_production\n    pool: 10\n    username: gitlab\n    password: meercat\n    host: postgres\n    port: 5432\n    # load_balancing:\n",
                    "rendered": {
                      "text": "    database: gitlabhq_production\n    pool: 10\n    username: gitlab\n    password: meercat\n    host: postgres\n    port: 5432\n    # load_balancing:\n",
                      "markdown": "`    database: gitlabhq_production\n    pool: 10\n    username: gitlab\n    password: meercat\n    host: postgres\n    port: 5432\n    # load_balancing:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/sidekiq-config/gitlab.yml"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 29,
                  "endLine": 67,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    client_path: /home/git/gitaly/bin\n    token: gitalytokengitalytoken\n  repositories:\n    storages: # You must have at least a `default` storage path.\n      default:\n        path: /var/opt/gitlab/repo\n        gitaly_address: tcp://gitaly:8075 # TCP connections are supported too (e.g. tcp://host:port)\n",
                    "rendered": {
                      "text": "    client_path: /home/git/gitaly/bin\n    token: gitalytokengitalytoken\n  repositories:\n    storages: # You must have at least a `default` storage path.\n      default:\n        path: /var/opt/gitlab/repo\n        gitaly_address: tcp://gitaly:8075 # TCP connections are supported too (e.g. tcp://host:port)\n",
                      "markdown": "`    client_path: /home/git/gitaly/bin\n    token: gitalytokengitalytoken\n  repositories:\n    storages: # You must have at least a `default` storage path.\n      default:\n        path: /var/opt/gitlab/repo\n        gitaly_address: tcp://gitaly:8075 # TCP connections are supported too (e.g. tcp://host:port)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-kas/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 10,
                  "snippet": {
                    "text": "COPY --from=target   / ${DNF_INSTALL_ROOT}/\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n  openssl \\\n  && microdnf ${DNF_OPTS_ROOT} clean all \\\n  && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n",
                    "rendered": {
                      "text": "COPY --from=target   / ${DNF_INSTALL_ROOT}/\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n  openssl \\\n  && microdnf ${DNF_OPTS_ROOT} clean all \\\n  && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n",
                      "markdown": "`COPY --from=target   / ${DNF_INSTALL_ROOT}/\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n  openssl \\\n  && microdnf ${DNF_OPTS_ROOT} clean all \\\n  && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_coredump_disable_backtraces.sh"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 8,
                  "endLine": 16,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    touch \"/etc/systemd/coredump.conf\"\nfi\ncp \"/etc/systemd/coredump.conf\" \"/etc/systemd/coredump.conf.bak\"\n# Insert at the end of the file\nprintf '%s\\n' \"ProcessSizeMax=0\" >> \"/etc/systemd/coredump.conf\"\n# Clean up after ourselves.\nrm \"/etc/systemd/coredump.conf.bak\"\n",
                    "rendered": {
                      "text": "    touch \"/etc/systemd/coredump.conf\"\nfi\ncp \"/etc/systemd/coredump.conf\" \"/etc/systemd/coredump.conf.bak\"\n# Insert at the end of the file\nprintf '%s\\n' \"ProcessSizeMax=0\" >> \"/etc/systemd/coredump.conf\"\n# Clean up after ourselves.\nrm \"/etc/systemd/coredump.conf.bak\"\n",
                      "markdown": "`    touch \"/etc/systemd/coredump.conf\"\nfi\ncp \"/etc/systemd/coredump.conf\" \"/etc/systemd/coredump.conf.bak\"\n# Insert at the end of the file\nprintf '%s\\n' \"ProcessSizeMax=0\" >> \"/etc/systemd/coredump.conf\"\n# Clean up after ourselves.\nrm \"/etc/systemd/coredump.conf.bak\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_coredump_disable_backtraces.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 3,
                  "snippet": {
                    "text": "    LC_ALL=C sed -i \"/^\\s*ProcessSizeMax\\s*=\\s*/Id\" \"/etc/systemd/coredump.conf\"\nelse\n    touch \"/etc/systemd/coredump.conf\"\nfi\ncp \"/etc/systemd/coredump.conf\" \"/etc/systemd/coredump.conf.bak\"\n# Insert at the end of the file\nprintf '%s\\n' \"ProcessSizeMax=0\" >> \"/etc/systemd/coredump.conf\"\n# Clean up after ourselves.\n",
                    "rendered": {
                      "text": "    LC_ALL=C sed -i \"/^\\s*ProcessSizeMax\\s*=\\s*/Id\" \"/etc/systemd/coredump.conf\"\nelse\n    touch \"/etc/systemd/coredump.conf\"\nfi\ncp \"/etc/systemd/coredump.conf\" \"/etc/systemd/coredump.conf.bak\"\n# Insert at the end of the file\nprintf '%s\\n' \"ProcessSizeMax=0\" >> \"/etc/systemd/coredump.conf\"\n# Clean up after ourselves.\n",
                      "markdown": "`    LC_ALL=C sed -i \"/^\\s*ProcessSizeMax\\s*=\\s*/Id\" \"/etc/systemd/coredump.conf\"\nelse\n    touch \"/etc/systemd/coredump.conf\"\nfi\ncp \"/etc/systemd/coredump.conf\" \"/etc/systemd/coredump.conf.bak\"\n# Insert at the end of the file\nprintf '%s\\n' \"ProcessSizeMax=0\" >> \"/etc/systemd/coredump.conf\"\n# Clean up after ourselves.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_coredump_disable_backtraces.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 17,
                  "snippet": {
                    "text": "fi\n\nif [ -e \"/etc/systemd/coredump.conf\" ] ; then\n    LC_ALL=C sed -i \"/^\\s*ProcessSizeMax\\s*=\\s*/Id\" \"/etc/systemd/coredump.conf\"\nelse\n    touch \"/etc/systemd/coredump.conf\"\nfi\n",
                    "rendered": {
                      "text": "fi\n\nif [ -e \"/etc/systemd/coredump.conf\" ] ; then\n    LC_ALL=C sed -i \"/^\\s*ProcessSizeMax\\s*=\\s*/Id\" \"/etc/systemd/coredump.conf\"\nelse\n    touch \"/etc/systemd/coredump.conf\"\nfi\n",
                      "markdown": "`fi\n\nif [ -e \"/etc/systemd/coredump.conf\" ] ; then\n    LC_ALL=C sed -i \"/^\\s*ProcessSizeMax\\s*=\\s*/Id\" \"/etc/systemd/coredump.conf\"\nelse\n    touch \"/etc/systemd/coredump.conf\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_disable_users_coredumps.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 7,
                  "endLine": 12,
                  "endColumn": 12,
                  "snippet": {
                    "text": "SECURITY_LIMITS_FILE=\"/etc/security/limits.conf\"\n\nif grep -qE '\\*\\s+hard\\s+core' $SECURITY_LIMITS_FILE; then\n        sed -ri 's/(hard\\s+core\\s+)[[:digit:]]+/\\1 0/' $SECURITY_LIMITS_FILE\nelse\n        echo \"*     hard   core    0\" >> $SECURITY_LIMITS_FILE\nfi\n",
                    "rendered": {
                      "text": "SECURITY_LIMITS_FILE=\"/etc/security/limits.conf\"\n\nif grep -qE '\\*\\s+hard\\s+core' $SECURITY_LIMITS_FILE; then\n        sed -ri 's/(hard\\s+core\\s+)[[:digit:]]+/\\1 0/' $SECURITY_LIMITS_FILE\nelse\n        echo \"*     hard   core    0\" >> $SECURITY_LIMITS_FILE\nfi\n",
                      "markdown": "`SECURITY_LIMITS_FILE=\"/etc/security/limits.conf\"\n\nif grep -qE '\\*\\s+hard\\s+core' $SECURITY_LIMITS_FILE; then\n        sed -ri 's/(hard\\s+core\\s+)[[:digit:]]+/\\1 0/' $SECURITY_LIMITS_FILE\nelse\n        echo \"*     hard   core    0\" >> $SECURITY_LIMITS_FILE\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_disable_users_coredumps.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 2,
                  "endLine": 11,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nSECURITY_LIMITS_FILE=\"/etc/security/limits.conf\"\n\nif grep -qE '\\*\\s+hard\\s+core' $SECURITY_LIMITS_FILE; then\n        sed -ri 's/(hard\\s+core\\s+)[[:digit:]]+/\\1 0/' $SECURITY_LIMITS_FILE\nelse\n        echo \"*     hard   core    0\" >> $SECURITY_LIMITS_FILE\n",
                    "rendered": {
                      "text": "\nSECURITY_LIMITS_FILE=\"/etc/security/limits.conf\"\n\nif grep -qE '\\*\\s+hard\\s+core' $SECURITY_LIMITS_FILE; then\n        sed -ri 's/(hard\\s+core\\s+)[[:digit:]]+/\\1 0/' $SECURITY_LIMITS_FILE\nelse\n        echo \"*     hard   core    0\" >> $SECURITY_LIMITS_FILE\n",
                      "markdown": "`\nSECURITY_LIMITS_FILE=\"/etc/security/limits.conf\"\n\nif grep -qE '\\*\\s+hard\\s+core' $SECURITY_LIMITS_FILE; then\n        sed -ri 's/(hard\\s+core\\s+)[[:digit:]]+/\\1 0/' $SECURITY_LIMITS_FILE\nelse\n        echo \"*     hard   core    0\" >> $SECURITY_LIMITS_FILE\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_disable_users_coredumps.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 2,
                  "endLine": 7,
                  "endColumn": 7,
                  "snippet": {
                    "text": "(>&2 echo \"Remediating: 'xccdf_org.ssgproject.content_rule_disable_users_coredumps'\")\n\n# Remediation is applicable only in certain platforms\nif rpm --quiet -q pam; then\n\nSECURITY_LIMITS_FILE=\"/etc/security/limits.conf\"\n\n",
                    "rendered": {
                      "text": "(>&2 echo \"Remediating: 'xccdf_org.ssgproject.content_rule_disable_users_coredumps'\")\n\n# Remediation is applicable only in certain platforms\nif rpm --quiet -q pam; then\n\nSECURITY_LIMITS_FILE=\"/etc/security/limits.conf\"\n\n",
                      "markdown": "`(>&2 echo \"Remediating: 'xccdf_org.ssgproject.content_rule_disable_users_coredumps'\")\n\n# Remediation is applicable only in certain platforms\nif rpm --quiet -q pam; then\n\nSECURITY_LIMITS_FILE=\"/etc/security/limits.conf\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/ci-variables.md"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 19,
                  "endLine": 84,
                  "endColumn": 30,
                  "snippet": {
                    "text": "| BUILD_TRIGGER_TOKEN                           | |\n| CHART_BUILD_TOKEN                             | |\n| GCR_AUTH_CONFIG                               | |\n| HELM_RELEASE_BOT_PRIVATE_KEY                  | |\n| FETCH_GEMS_BUNDLE_IMAGE                       | |\n",
                    "rendered": {
                      "text": "| BUILD_TRIGGER_TOKEN                           | |\n| CHART_BUILD_TOKEN                             | |\n| GCR_AUTH_CONFIG                               | |\n| HELM_RELEASE_BOT_PRIVATE_KEY                  | |\n| FETCH_GEMS_BUNDLE_IMAGE                       | |\n",
                      "markdown": "`| BUILD_TRIGGER_TOKEN                           | |\n| CHART_BUILD_TOKEN                             | |\n| GCR_AUTH_CONFIG                               | |\n| HELM_RELEASE_BOT_PRIVATE_KEY                  | |\n| FETCH_GEMS_BUNDLE_IMAGE                       | |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/ci-variables.md"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 15,
                  "endLine": 70,
                  "endColumn": 23,
                  "snippet": {
                    "text": "                      | GitLab Private Access Token for creating a new release object on release. |\n| COM_REGISTRY                                  | Docker location of the public registry. |\n| COM_CNG_PROJECT                               | Project name for the public CNG project. |\n| COM_REGISTRY_PASSWORD                         | Access token for syncing to the public registry. |\n| REDHAT_PROJECT_JSON                           | JSON hash of OSPID and project ID. See [build details](build.md#context). |\n| REDHAT_API_TOKEN                              | Red Hat token used for certification scans. |\n",
                    "rendered": {
                      "text": "                      | GitLab Private Access Token for creating a new release object on release. |\n| COM_REGISTRY                                  | Docker location of the public registry. |\n| COM_CNG_PROJECT                               | Project name for the public CNG project. |\n| COM_REGISTRY_PASSWORD                         | Access token for syncing to the public registry. |\n| REDHAT_PROJECT_JSON                           | JSON hash of OSPID and project ID. See [build details](build.md#context). |\n| REDHAT_API_TOKEN                              | Red Hat token used for certification scans. |\n",
                      "markdown": "`                      | GitLab Private Access Token for creating a new release object on release. |\n| COM_REGISTRY                                  | Docker location of the public registry. |\n| COM_CNG_PROJECT                               | Project name for the public CNG project. |\n| COM_REGISTRY_PASSWORD                         | Access token for syncing to the public registry. |\n| REDHAT_PROJECT_JSON                           | JSON hash of OSPID and project ID. See [build details](build.md#context). |\n| REDHAT_API_TOKEN                              | Red Hat token used for certification scans. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/ci-variables.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 67,
                  "endLine": 40,
                  "endColumn": 71,
                  "snippet": {
                    "text": " `2` |\n| BUILDX_CPU                                    | CPU resource definition for `buildx` pods. Defaults to `1` |\n| BUILDX_MEMORY                                 | Memory resource definition for `buildx` pods. Defaults to `2G` |\n| BUILDX_AUTO_CLEANUP                           | Run `stop_buildx` at the end of pipeline without waiting for environment cleanup to take care of it. This prevents cache retention for buildx agents but allows for clean pipeline completion. | \n| TOP_UPSTREAM_SOURCE_PROJECT                   | Full path of upstream project when build pipeline was triggered from another ",
                    "rendered": {
                      "text": " `2` |\n| BUILDX_CPU                                    | CPU resource definition for `buildx` pods. Defaults to `1` |\n| BUILDX_MEMORY                                 | Memory resource definition for `buildx` pods. Defaults to `2G` |\n| BUILDX_AUTO_CLEANUP                           | Run `stop_buildx` at the end of pipeline without waiting for environment cleanup to take care of it. This prevents cache retention for buildx agents but allows for clean pipeline completion. | \n| TOP_UPSTREAM_SOURCE_PROJECT                   | Full path of upstream project when build pipeline was triggered from another ",
                      "markdown": "` `2` |\n| BUILDX_CPU                                    | CPU resource definition for `buildx` pods. Defaults to `1` |\n| BUILDX_MEMORY                                 | Memory resource definition for `buildx` pods. Defaults to `2G` |\n| BUILDX_AUTO_CLEANUP                           | Run `stop_buildx` at the end of pipeline without waiting for environment cleanup to take care of it. This prevents cache retention for buildx agents but allows for clean pipeline completion. | \n| TOP_UPSTREAM_SOURCE_PROJECT                   | Full path of upstream project when build pipeline was triggered from another `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/ci-variables.md"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 57,
                  "endLine": 73,
                  "endColumn": 62,
                  "snippet": {
                    "text": "e public registry. |\n| REDHAT_PROJECT_JSON                           | JSON hash of OSPID and project ID. See [build details](build.md#context). |\n| REDHAT_API_TOKEN                              | Red Hat token used for certification scans. |\n| REDHAT_CERTIFICATION                          | Trigger Red Hat UBI certification when set to \"true\" |\n| SCANNING_TRIGGER_PIPELINE                     | GitLab pipeline location to trigger security scanning. |\n| SCANNING_TRIGGER_TOKEN                        | Trigger Token for the security scanning project. |\n\n## Unknown/outdated variables\n\n| Environment Var",
                    "rendered": {
                      "text": "e public registry. |\n| REDHAT_PROJECT_JSON                           | JSON hash of OSPID and project ID. See [build details](build.md#context). |\n| REDHAT_API_TOKEN                              | Red Hat token used for certification scans. |\n| REDHAT_CERTIFICATION                          | Trigger Red Hat UBI certification when set to \"true\" |\n| SCANNING_TRIGGER_PIPELINE                     | GitLab pipeline location to trigger security scanning. |\n| SCANNING_TRIGGER_TOKEN                        | Trigger Token for the security scanning project. |\n\n## Unknown/outdated variables\n\n| Environment Var",
                      "markdown": "`e public registry. |\n| REDHAT_PROJECT_JSON                           | JSON hash of OSPID and project ID. See [build details](build.md#context). |\n| REDHAT_API_TOKEN                              | Red Hat token used for certification scans. |\n| REDHAT_CERTIFICATION                          | Trigger Red Hat UBI certification when set to \"true\" |\n| SCANNING_TRIGGER_PIPELINE                     | GitLab pipeline location to trigger security scanning. |\n| SCANNING_TRIGGER_TOKEN                        | Trigger Token for the security scanning project. |\n\n## Unknown/outdated variables\n\n| Environment Var`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/ci-variables.md"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 49,
                  "endLine": 72,
                  "endColumn": 54,
                  "snippet": {
                    "text": "e public CNG project. |\n| COM_REGISTRY_PASSWORD                         | Access token for syncing to the public registry. |\n| REDHAT_PROJECT_JSON                           | JSON hash of OSPID and project ID. See [build details](build.md#context). |\n| REDHAT_API_TOKEN                              | Red Hat token used for certification scans. |\n| REDHAT_CERTIFICATION                          | Trigger Red Hat UBI certification when set to \"true\" |\n| SCANNING_TRIGGER_PIPELINE                     | GitLab pipeline location to trigger security scanning. |\n| SCANNING_TRIGGER_TOKEN                      ",
                    "rendered": {
                      "text": "e public CNG project. |\n| COM_REGISTRY_PASSWORD                         | Access token for syncing to the public registry. |\n| REDHAT_PROJECT_JSON                           | JSON hash of OSPID and project ID. See [build details](build.md#context). |\n| REDHAT_API_TOKEN                              | Red Hat token used for certification scans. |\n| REDHAT_CERTIFICATION                          | Trigger Red Hat UBI certification when set to \"true\" |\n| SCANNING_TRIGGER_PIPELINE                     | GitLab pipeline location to trigger security scanning. |\n| SCANNING_TRIGGER_TOKEN                      ",
                      "markdown": "`e public CNG project. |\n| COM_REGISTRY_PASSWORD                         | Access token for syncing to the public registry. |\n| REDHAT_PROJECT_JSON                           | JSON hash of OSPID and project ID. See [build details](build.md#context). |\n| REDHAT_API_TOKEN                              | Red Hat token used for certification scans. |\n| REDHAT_CERTIFICATION                          | Trigger Red Hat UBI certification when set to \"true\" |\n| SCANNING_TRIGGER_PIPELINE                     | GitLab pipeline location to trigger security scanning. |\n| SCANNING_TRIGGER_TOKEN                      `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/ci-variables.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 49,
                  "endLine": 68,
                  "endColumn": 57,
                  "snippet": {
                    "text": "elease assets. |\n| RELEASE_API                                   | Target GitLab API location when pushing release assets. |\n| UBI_RELEASE_PAT                               | GitLab Private Access Token for creating a new release object on release. |\n| COM_REGISTRY                                  | Docker location of the public registry. |\n| COM_CNG_PROJECT                               | Project name for the public CNG project. |\n| COM_REGISTRY_PASSWORD                         | Access token for syncing to the public registry. |\n| REDHAT_PROJECT_JSON                           | JSON hash of OSPID an",
                    "rendered": {
                      "text": "elease assets. |\n| RELEASE_API                                   | Target GitLab API location when pushing release assets. |\n| UBI_RELEASE_PAT                               | GitLab Private Access Token for creating a new release object on release. |\n| COM_REGISTRY                                  | Docker location of the public registry. |\n| COM_CNG_PROJECT                               | Project name for the public CNG project. |\n| COM_REGISTRY_PASSWORD                         | Access token for syncing to the public registry. |\n| REDHAT_PROJECT_JSON                           | JSON hash of OSPID an",
                      "markdown": "`elease assets. |\n| RELEASE_API                                   | Target GitLab API location when pushing release assets. |\n| UBI_RELEASE_PAT                               | GitLab Private Access Token for creating a new release object on release. |\n| COM_REGISTRY                                  | Docker location of the public registry. |\n| COM_CNG_PROJECT                               | Project name for the public CNG project. |\n| COM_REGISTRY_PASSWORD                         | Access token for syncing to the public registry. |\n| REDHAT_PROJECT_JSON                           | JSON hash of OSPID an`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/ci-variables.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 99,
                  "endLine": 21,
                  "endColumn": 107,
                  "snippet": {
                    "text": "ILS_IMAGE_BUILDS                      | Similar to `FORCE_IMAGE_BUILDS`, but only for `gitlab-rails-*` image. Setting `true` will set `FORCE_IMAGE_BUILDS` to true in `gitlab-rails-*` job definition. |\n| DISABLE_DOCKER_BUILD_CACHE                    | Setting any value ensures that builds run without docker build cache. |\n| UBI_PIPELINE                                  | Setting to \"true\" indicates this will be a UBI only pipeline. |\n| CE_PIPELINE                                   | Setting any value indicates this will be a CE only pipeline. |\n| EE_PIPELINE                                   | Setting ",
                    "rendered": {
                      "text": "ILS_IMAGE_BUILDS                      | Similar to `FORCE_IMAGE_BUILDS`, but only for `gitlab-rails-*` image. Setting `true` will set `FORCE_IMAGE_BUILDS` to true in `gitlab-rails-*` job definition. |\n| DISABLE_DOCKER_BUILD_CACHE                    | Setting any value ensures that builds run without docker build cache. |\n| UBI_PIPELINE                                  | Setting to \"true\" indicates this will be a UBI only pipeline. |\n| CE_PIPELINE                                   | Setting any value indicates this will be a CE only pipeline. |\n| EE_PIPELINE                                   | Setting ",
                      "markdown": "`ILS_IMAGE_BUILDS                      | Similar to `FORCE_IMAGE_BUILDS`, but only for `gitlab-rails-*` image. Setting `true` will set `FORCE_IMAGE_BUILDS` to true in `gitlab-rails-*` job definition. |\n| DISABLE_DOCKER_BUILD_CACHE                    | Setting any value ensures that builds run without docker build cache. |\n| UBI_PIPELINE                                  | Setting to \"true\" indicates this will be a UBI only pipeline. |\n| CE_PIPELINE                                   | Setting any value indicates this will be a CE only pipeline. |\n| EE_PIPELINE                                   | Setting `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/ci-variables.md"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 109,
                  "endLine": 16,
                  "endColumn": 117,
                  "snippet": {
                    "text": "ning the GitLab EE source code for the gitlab-rails-ee image. |\n| FETCH_DEV_ARTIFACTS_PAT                       | Access token with permission to pull source assets from private locations. |\n| ASSETS_IMAGE_REGISTRY_PREFIX                  | Pull pre-built GitLab assets container image from specified Docker registry location. |\n| COMPILE_ASSETS                                | Setting `true` generates fresh rails assets instead of copying them from the assets image. |\n| AUTO_DEPLOY_COMPILE_ASSETS                    | Setting `true` causes `COMPILE_ASSETS` variable to be set to `true` in auto-deploy tag",
                    "rendered": {
                      "text": "ning the GitLab EE source code for the gitlab-rails-ee image. |\n| FETCH_DEV_ARTIFACTS_PAT                       | Access token with permission to pull source assets from private locations. |\n| ASSETS_IMAGE_REGISTRY_PREFIX                  | Pull pre-built GitLab assets container image from specified Docker registry location. |\n| COMPILE_ASSETS                                | Setting `true` generates fresh rails assets instead of copying them from the assets image. |\n| AUTO_DEPLOY_COMPILE_ASSETS                    | Setting `true` causes `COMPILE_ASSETS` variable to be set to `true` in auto-deploy tag",
                      "markdown": "`ning the GitLab EE source code for the gitlab-rails-ee image. |\n| FETCH_DEV_ARTIFACTS_PAT                       | Access token with permission to pull source assets from private locations. |\n| ASSETS_IMAGE_REGISTRY_PREFIX                  | Pull pre-built GitLab assets container image from specified Docker registry location. |\n| COMPILE_ASSETS                                | Setting `true` generates fresh rails assets instead of copying them from the assets image. |\n| AUTO_DEPLOY_COMPILE_ASSETS                    | Setting `true` causes `COMPILE_ASSETS` variable to be set to `true` in auto-deploy tag`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11,
                  "endLine": 25,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ENV LANG=C.UTF-8\n\n# install shared runtime dependencies\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    procps \\\n    busybox \\\n",
                    "rendered": {
                      "text": "ENV LANG=C.UTF-8\n\n# install shared runtime dependencies\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    procps \\\n    busybox \\\n",
                      "markdown": "`ENV LANG=C.UTF-8\n\n# install shared runtime dependencies\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    procps \\\n    busybox \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 39,
                  "endLine": 47,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Install gitlab-logger\nCOPY --from=gitlab-logger /gitlab-logger /usr/local/bin/gitlab-logger\n\n# Configure default path for set-config\nENV CONFIG_TEMPLATE_DIRECTORY=/etc\n\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n",
                    "rendered": {
                      "text": "# Install gitlab-logger\nCOPY --from=gitlab-logger /gitlab-logger /usr/local/bin/gitlab-logger\n\n# Configure default path for set-config\nENV CONFIG_TEMPLATE_DIRECTORY=/etc\n\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n",
                      "markdown": "`# Install gitlab-logger\nCOPY --from=gitlab-logger /gitlab-logger /usr/local/bin/gitlab-logger\n\n# Configure default path for set-config\nENV CONFIG_TEMPLATE_DIRECTORY=/etc\n\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 3,
                  "endLine": 38,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n# Add scripts\nCOPY scripts/ /scripts\nRUN chown -R 0:0 /scripts/\n\n# Install gomplate\nCOPY --from=gomplate /gomplate /usr/local/bin/gomplate\n",
                    "rendered": {
                      "text": "\n# Add scripts\nCOPY scripts/ /scripts\nRUN chown -R 0:0 /scripts/\n\n# Install gomplate\nCOPY --from=gomplate /gomplate /usr/local/bin/gomplate\n",
                      "markdown": "`\n# Add scripts\nCOPY scripts/ /scripts\nRUN chown -R 0:0 /scripts/\n\n# Install gomplate\nCOPY --from=gomplate /gomplate /usr/local/bin/gomplate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 31,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    busybox \\\n    less \\\n    xtail \\\n    curl \\\n    ca-certificates \\\n    tini \\\n  && rm -rf /var/lib/apt/lists/*\n",
                    "rendered": {
                      "text": "    busybox \\\n    less \\\n    xtail \\\n    curl \\\n    ca-certificates \\\n    tini \\\n  && rm -rf /var/lib/apt/lists/*\n",
                      "markdown": "`    busybox \\\n    less \\\n    xtail \\\n    curl \\\n    ca-certificates \\\n    tini \\\n  && rm -rf /var/lib/apt/lists/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 3,
                  "endLine": 28,
                  "endColumn": 12,
                  "snippet": {
                    "text": "RUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    procps \\\n    busybox \\\n    less \\\n    xtail \\\n    curl \\\n",
                    "rendered": {
                      "text": "RUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    procps \\\n    busybox \\\n    less \\\n    xtail \\\n    curl \\\n",
                      "markdown": "`RUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    procps \\\n    busybox \\\n    less \\\n    xtail \\\n    curl \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 4,
                  "endLine": 26,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n# install shared runtime dependencies\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    procps \\\n    busybox \\\n    less \\\n",
                    "rendered": {
                      "text": "\n# install shared runtime dependencies\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    procps \\\n    busybox \\\n    less \\\n",
                      "markdown": "`\n# install shared runtime dependencies\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    procps \\\n    busybox \\\n    less \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ENV LANG=C.UTF-8\n\n# install shared runtime dependencies\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    procps \\\n    busybox \\\n",
                    "rendered": {
                      "text": "ENV LANG=C.UTF-8\n\n# install shared runtime dependencies\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    procps \\\n    busybox \\\n",
                      "markdown": "`ENV LANG=C.UTF-8\n\n# install shared runtime dependencies\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    procps \\\n    busybox \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 22,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nFROM --platform=${TARGETPLATFORM} ${DEBIAN_IMAGE}\n\n# Set default LANG\nENV LANG=C.UTF-8\n\n# install shared runtime dependencies\nRUN apt-get update \\\n",
                    "rendered": {
                      "text": "\nFROM --platform=${TARGETPLATFORM} ${DEBIAN_IMAGE}\n\n# Set default LANG\nENV LANG=C.UTF-8\n\n# install shared runtime dependencies\nRUN apt-get update \\\n",
                      "markdown": "`\nFROM --platform=${TARGETPLATFORM} ${DEBIAN_IMAGE}\n\n# Set default LANG\nENV LANG=C.UTF-8\n\n# install shared runtime dependencies\nRUN apt-get update \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 23,
                  "endLine": 17,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install build deps\n",
                    "rendered": {
                      "text": "\n# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install build deps\n",
                      "markdown": "`\n# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install build deps\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 37,
                  "endColumn": 4,
                  "snippet": {
                    "text": "RUN mkdir -p ${CONFIG_DIRECTORY}; chown -R $GITLAB_USER ${CONFIG_DIRECTORY}\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n",
                    "rendered": {
                      "text": "RUN mkdir -p ${CONFIG_DIRECTORY}; chown -R $GITLAB_USER ${CONFIG_DIRECTORY}\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n",
                      "markdown": "`RUN mkdir -p ${CONFIG_DIRECTORY}; chown -R $GITLAB_USER ${CONFIG_DIRECTORY}\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nCMD [\"/scripts/process-wrapper\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 11,
                  "endLine": 22,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n# install build deps\nRUN buildDeps='build-essential' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps libpq-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n",
                    "rendered": {
                      "text": "\n# install build deps\nRUN buildDeps='build-essential' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps libpq-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n",
                      "markdown": "`\n# install build deps\nRUN buildDeps='build-essential' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps libpq-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 33,
                  "endLine": 33,
                  "endColumn": 40,
                  "snippet": {
                    "text": "ENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nRUN mkdir -p ${CONFIG_DIRECTORY}; chown -R $GITLAB_USER ${CONFIG_DIRECTORY}\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                    "rendered": {
                      "text": "ENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nRUN mkdir -p ${CONFIG_DIRECTORY}; chown -R $GITLAB_USER ${CONFIG_DIRECTORY}\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                      "markdown": "`ENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nRUN mkdir -p ${CONFIG_DIRECTORY}; chown -R $GITLAB_USER ${CONFIG_DIRECTORY}\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 41,
                  "endLine": 31,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    SUDO_FORCE_REMOVE=yes apt-get purge -y --auto-remove $buildDeps\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nRUN mkdir -p ${CONFIG_DIRECTORY}; chown -R $GITLAB_USER ${CONFIG_DIRECTORY}\n\n",
                    "rendered": {
                      "text": "    SUDO_FORCE_REMOVE=yes apt-get purge -y --auto-remove $buildDeps\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nRUN mkdir -p ${CONFIG_DIRECTORY}; chown -R $GITLAB_USER ${CONFIG_DIRECTORY}\n\n",
                      "markdown": "`    SUDO_FORCE_REMOVE=yes apt-get purge -y --auto-remove $buildDeps\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nRUN mkdir -p ${CONFIG_DIRECTORY}; chown -R $GITLAB_USER ${CONFIG_DIRECTORY}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 64,
                  "endLine": 30,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    /build-scripts/cleanup-gems /usr/lib/ruby/gems && \\\n    SUDO_FORCE_REMOVE=yes apt-get purge -y --auto-remove $buildDeps\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nRUN mkdir -p ${CONFIG_DIRECTORY}; chown -R $GITLAB_USER ${CONFIG_DIRECTORY}\n",
                    "rendered": {
                      "text": "    /build-scripts/cleanup-gems /usr/lib/ruby/gems && \\\n    SUDO_FORCE_REMOVE=yes apt-get purge -y --auto-remove $buildDeps\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nRUN mkdir -p ${CONFIG_DIRECTORY}; chown -R $GITLAB_USER ${CONFIG_DIRECTORY}\n",
                      "markdown": "`    /build-scripts/cleanup-gems /usr/lib/ruby/gems && \\\n    SUDO_FORCE_REMOVE=yes apt-get purge -y --auto-remove $buildDeps\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nRUN mkdir -p ${CONFIG_DIRECTORY}; chown -R $GITLAB_USER ${CONFIG_DIRECTORY}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 29,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n    /build-scripts/cleanup-gems /usr/lib/ruby/gems && \\\n    SUDO_FORCE_REMOVE=yes apt-get purge -y --auto-remove $buildDeps\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\n",
                    "rendered": {
                      "text": "    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n    /build-scripts/cleanup-gems /usr/lib/ruby/gems && \\\n    SUDO_FORCE_REMOVE=yes apt-get purge -y --auto-remove $buildDeps\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\n",
                      "markdown": "`    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n    /build-scripts/cleanup-gems /usr/lib/ruby/gems && \\\n    SUDO_FORCE_REMOVE=yes apt-get purge -y --auto-remove $buildDeps\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 25,
                  "endLine": 27,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    rm -rf /var/lib/apt/lists/* && \\\n    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n    /build-scripts/cleanup-gems /usr/lib/ruby/gems && \\\n    SUDO_FORCE_REMOVE=yes apt-get purge -y --auto-remove $buildDeps\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\n",
                    "rendered": {
                      "text": "    rm -rf /var/lib/apt/lists/* && \\\n    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n    /build-scripts/cleanup-gems /usr/lib/ruby/gems && \\\n    SUDO_FORCE_REMOVE=yes apt-get purge -y --auto-remove $buildDeps\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\n",
                      "markdown": "`    rm -rf /var/lib/apt/lists/* && \\\n    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n    /build-scripts/cleanup-gems /usr/lib/ruby/gems && \\\n    SUDO_FORCE_REMOVE=yes apt-get purge -y --auto-remove $buildDeps\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 3,
                  "endLine": 23,
                  "endColumn": 12,
                  "snippet": {
                    "text": "# install build deps\nRUN buildDeps='build-essential' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps libpq-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n    /build-scripts/cleanup-gems /usr/lib/ruby/gems && \\\n",
                    "rendered": {
                      "text": "# install build deps\nRUN buildDeps='build-essential' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps libpq-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n    /build-scripts/cleanup-gems /usr/lib/ruby/gems && \\\n",
                      "markdown": "`# install build deps\nRUN buildDeps='build-essential' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps libpq-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n    /build-scripts/cleanup-gems /usr/lib/ruby/gems && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 3,
                  "endLine": 22,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n# install build deps\nRUN buildDeps='build-essential' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps libpq-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n",
                    "rendered": {
                      "text": "\n# install build deps\nRUN buildDeps='build-essential' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps libpq-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n",
                      "markdown": "`\n# install build deps\nRUN buildDeps='build-essential' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps libpq-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    gem install gitlab-exporter -v ${GITLAB_EXPORTER_VERSION} && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install build deps\nRUN buildDeps='build-essential' && \\\n",
                    "rendered": {
                      "text": "# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install build deps\nRUN buildDeps='build-essential' && \\\n",
                      "markdown": "`# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install build deps\nRUN buildDeps='build-essential' && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9,
                  "endLine": 40,
                  "endColumn": 13,
                  "snippet": {
                    "text": "reported by emailing contact@gitlab.com.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://contributor-covenant.org), version 1.1.0,\navailable at [https://contributor-covenant.org/version/1/1/0/](https://contributor-covenant.org/version/1/1/0/).\n",
                    "rendered": {
                      "text": "reported by emailing contact@gitlab.com.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://contributor-covenant.org), version 1.1.0,\navailable at [https://contributor-covenant.org/version/1/1/0/](https://contributor-covenant.org/version/1/1/0/).\n",
                      "markdown": "`reported by emailing contact@gitlab.com.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://contributor-covenant.org), version 1.1.0,\navailable at [https://contributor-covenant.org/version/1/1/0/](https://contributor-covenant.org/version/1/1/0/).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 88,
                  "endLine": 9,
                  "endColumn": 92,
                  "snippet": {
                    "text": "distributed by GitLab B.V., you reserve all right, title, and interest in and to\nyour Contributions.\n\nAll contributions are subject to the Developer Certificate of Origin and license set out at [docs.gitlab.com/ce/legal/developer_certificate_of_origin](https://docs.gitlab.com/ce/legal/developer_certificate_of_origin).\n\n_This notice should stay as the first item in the CONTRIBUTING.md file._\n\n",
                    "rendered": {
                      "text": "distributed by GitLab B.V., you reserve all right, title, and interest in and to\nyour Contributions.\n\nAll contributions are subject to the Developer Certificate of Origin and license set out at [docs.gitlab.com/ce/legal/developer_certificate_of_origin](https://docs.gitlab.com/ce/legal/developer_certificate_of_origin).\n\n_This notice should stay as the first item in the CONTRIBUTING.md file._\n\n",
                      "markdown": "`distributed by GitLab B.V., you reserve all right, title, and interest in and to\nyour Contributions.\n\nAll contributions are subject to the Developer Certificate of Origin and license set out at [docs.gitlab.com/ce/legal/developer_certificate_of_origin](https://docs.gitlab.com/ce/legal/developer_certificate_of_origin).\n\n_This notice should stay as the first item in the CONTRIBUTING.md file._\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 6,
                  "endLine": 23,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n    && cp -R --parents \\\n        /usr/local/lib/python3.9/site-packages \\\n        /usr/local/bin/ \\\n        /assets\n",
                    "rendered": {
                      "text": "    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n    && cp -R --parents \\\n        /usr/local/lib/python3.9/site-packages \\\n        /usr/local/bin/ \\\n        /assets\n",
                      "markdown": "`    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n    && cp -R --parents \\\n        /usr/local/lib/python3.9/site-packages \\\n        /usr/local/bin/ \\\n        /assets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6,
                  "endLine": 22,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n    && cp -R --parents \\\n        /usr/local/lib/python3.9/site-packages \\\n        /usr/local/bin/ \\\n",
                    "rendered": {
                      "text": "    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n    && cp -R --parents \\\n        /usr/local/lib/python3.9/site-packages \\\n        /usr/local/bin/ \\\n",
                      "markdown": "`    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n    && cp -R --parents \\\n        /usr/local/lib/python3.9/site-packages \\\n        /usr/local/bin/ \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 46,
                  "endLine": 20,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n    && cp -R --parents \\\n",
                    "rendered": {
                      "text": "    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n    && cp -R --parents \\\n",
                      "markdown": "`    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n    && cp -R --parents \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 6,
                  "endLine": 20,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n    && cp -R --parents \\\n",
                    "rendered": {
                      "text": "    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n    && cp -R --parents \\\n",
                      "markdown": "`    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n    && cp -R --parents \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 40,
                  "endLine": 19,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n",
                    "rendered": {
                      "text": "    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n",
                      "markdown": "`    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 6,
                  "endLine": 19,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n",
                    "rendered": {
                      "text": "    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n",
                      "markdown": "`    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n    && rm -rf /tmp/azcopy \\\n    && mv /tmp/gitaly/usr/local/bin/gitaly-backup /usr/local/bin \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 6,
                  "endLine": 17,
                  "endColumn": 12,
                  "snippet": {
                    "text": "RUN mkdir /assets \\\n    && pip3 install awscli==${AWSCLI_VERSION} s3cmd==${S3CMD_VERSION} gsutil==${GSUTIL_VERSION} crcmod \\\n    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n",
                    "rendered": {
                      "text": "RUN mkdir /assets \\\n    && pip3 install awscli==${AWSCLI_VERSION} s3cmd==${S3CMD_VERSION} gsutil==${GSUTIL_VERSION} crcmod \\\n    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n",
                      "markdown": "`RUN mkdir /assets \\\n    && pip3 install awscli==${AWSCLI_VERSION} s3cmd==${S3CMD_VERSION} gsutil==${GSUTIL_VERSION} crcmod \\\n    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -exec rm -r {} + \\\n    && mkdir /tmp/azcopy \\\n    && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n    && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 11,
                  "endLine": 26,
                  "endColumn": 19,
                  "snippet": {
                    "text": "COPY --from=python /usr/local/include /usr/local/include/\nCOPY --from=gitaly  /usr/local/bin/gitaly-backup /usr/local/bin/\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n  gcc \\\n  ca-certificates \\\n",
                    "rendered": {
                      "text": "COPY --from=python /usr/local/include /usr/local/include/\nCOPY --from=gitaly  /usr/local/bin/gitaly-backup /usr/local/bin/\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n  gcc \\\n  ca-certificates \\\n",
                      "markdown": "`COPY --from=python /usr/local/include /usr/local/include/\nCOPY --from=gitaly  /usr/local/bin/gitaly-backup /usr/local/bin/\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n  gcc \\\n  ca-certificates \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 44,
                  "endLine": 42,
                  "endColumn": 51,
                  "snippet": {
                    "text": "  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n  && rm -rf /tmp/azcopy \\\n  && rm -rf /var/lib/apt/lists/*\n\n",
                    "rendered": {
                      "text": "  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n  && rm -rf /tmp/azcopy \\\n  && rm -rf /var/lib/apt/lists/*\n\n",
                      "markdown": "`  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n  && rm -rf /tmp/azcopy \\\n  && rm -rf /var/lib/apt/lists/*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 4,
                  "endLine": 42,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n  && rm -rf /tmp/azcopy \\\n  && rm -rf /var/lib/apt/lists/*\n\n",
                    "rendered": {
                      "text": "  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n  && rm -rf /tmp/azcopy \\\n  && rm -rf /var/lib/apt/lists/*\n\n",
                      "markdown": "`  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n  && rm -rf /tmp/azcopy \\\n  && rm -rf /var/lib/apt/lists/*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 38,
                  "endLine": 41,
                  "endColumn": 43,
                  "snippet": {
                    "text": "  && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n  && rm -rf /tmp/azcopy \\\n  && rm -rf /var/lib/apt/lists/*\n",
                    "rendered": {
                      "text": "  && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n  && rm -rf /tmp/azcopy \\\n  && rm -rf /var/lib/apt/lists/*\n",
                      "markdown": "`  && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n  && rm -rf /tmp/azcopy \\\n  && rm -rf /var/lib/apt/lists/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 4,
                  "endLine": 41,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n  && rm -rf /tmp/azcopy \\\n  && rm -rf /var/lib/apt/lists/*\n",
                    "rendered": {
                      "text": "  && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n  && rm -rf /tmp/azcopy \\\n  && rm -rf /var/lib/apt/lists/*\n",
                      "markdown": "`  && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n  && rm -rf /tmp/azcopy \\\n  && rm -rf /var/lib/apt/lists/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  && pip3 install gsutil==${GSUTIL_VERSION} crcmod \\\n  && pip3 cache purge \\\n  && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n",
                    "rendered": {
                      "text": "  && pip3 install gsutil==${GSUTIL_VERSION} crcmod \\\n  && pip3 cache purge \\\n  && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n",
                      "markdown": "`  && pip3 install gsutil==${GSUTIL_VERSION} crcmod \\\n  && pip3 cache purge \\\n  && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n  && cp /tmp/azcopy/azcopy /usr/local/bin && chmod 755 /usr/local/bin/azcopy \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 4,
                  "endLine": 38,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  && pip3 install --upgrade awscli==${AWSCLI_VERSION} s3cmd==${S3CMD_VERSION} \\\n  && pip3 install gsutil==${GSUTIL_VERSION} crcmod \\\n  && pip3 cache purge \\\n  && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n",
                    "rendered": {
                      "text": "  && pip3 install --upgrade awscli==${AWSCLI_VERSION} s3cmd==${S3CMD_VERSION} \\\n  && pip3 install gsutil==${GSUTIL_VERSION} crcmod \\\n  && pip3 cache purge \\\n  && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n",
                      "markdown": "`  && pip3 install --upgrade awscli==${AWSCLI_VERSION} s3cmd==${S3CMD_VERSION} \\\n  && pip3 install gsutil==${GSUTIL_VERSION} crcmod \\\n  && pip3 cache purge \\\n  && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n  && apt-get purge -y --auto-remove gcc \\\n  && mkdir /tmp/azcopy \\\n  && curl -sL \"${AZCOPY_STATIC_URL}\" | tar xzf - -C /tmp/azcopy --strip-components=1 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 4,
                  "endLine": 34,
                  "endColumn": 14,
                  "snippet": {
                    "text": "  openssl \\\n  tar \\\n  redis-tools \\\n  && ldconfig \\\n  && pip3 install --upgrade awscli==${AWSCLI_VERSION} s3cmd==${S3CMD_VERSION} \\\n  && pip3 install gsutil==${GSUTIL_VERSION} crcmod \\\n  && pip3 cache purge \\\n",
                    "rendered": {
                      "text": "  openssl \\\n  tar \\\n  redis-tools \\\n  && ldconfig \\\n  && pip3 install --upgrade awscli==${AWSCLI_VERSION} s3cmd==${S3CMD_VERSION} \\\n  && pip3 install gsutil==${GSUTIL_VERSION} crcmod \\\n  && pip3 cache purge \\\n",
                      "markdown": "`  openssl \\\n  tar \\\n  redis-tools \\\n  && ldconfig \\\n  && pip3 install --upgrade awscli==${AWSCLI_VERSION} s3cmd==${S3CMD_VERSION} \\\n  && pip3 install gsutil==${GSUTIL_VERSION} crcmod \\\n  && pip3 cache purge \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  ca-certificates \\\n  jq \\\n  openssl \\\n  tar \\\n  redis-tools \\\n  && ldconfig \\\n  && pip3 install --upgrade awscli==${AWSCLI_VERSION} s3cmd==${S3CMD_VERSION} \\\n",
                    "rendered": {
                      "text": "  ca-certificates \\\n  jq \\\n  openssl \\\n  tar \\\n  redis-tools \\\n  && ldconfig \\\n  && pip3 install --upgrade awscli==${AWSCLI_VERSION} s3cmd==${S3CMD_VERSION} \\\n",
                      "markdown": "`  ca-certificates \\\n  jq \\\n  openssl \\\n  tar \\\n  redis-tools \\\n  && ldconfig \\\n  && pip3 install --upgrade awscli==${AWSCLI_VERSION} s3cmd==${S3CMD_VERSION} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  gcc \\\n  ca-certificates \\\n  jq \\\n  openssl \\\n  tar \\\n  redis-tools \\\n  && ldconfig \\\n",
                    "rendered": {
                      "text": "  gcc \\\n  ca-certificates \\\n  jq \\\n  openssl \\\n  tar \\\n  redis-tools \\\n  && ldconfig \\\n",
                      "markdown": "`  gcc \\\n  ca-certificates \\\n  jq \\\n  openssl \\\n  tar \\\n  redis-tools \\\n  && ldconfig \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 12,
                  "snippet": {
                    "text": "COPY --from=gitaly  /usr/local/bin/gitaly-backup /usr/local/bin/\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n  gcc \\\n  ca-certificates \\\n  jq \\\n",
                    "rendered": {
                      "text": "COPY --from=gitaly  /usr/local/bin/gitaly-backup /usr/local/bin/\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n  gcc \\\n  ca-certificates \\\n  jq \\\n",
                      "markdown": "`COPY --from=gitaly  /usr/local/bin/gitaly-backup /usr/local/bin/\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n  gcc \\\n  ca-certificates \\\n  jq \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 12,
                  "snippet": {
                    "text": "COPY --from=python /usr/local/include /usr/local/include/\nCOPY --from=gitaly  /usr/local/bin/gitaly-backup /usr/local/bin/\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n  gcc \\\n  ca-certificates \\\n",
                    "rendered": {
                      "text": "COPY --from=python /usr/local/include /usr/local/include/\nCOPY --from=gitaly  /usr/local/bin/gitaly-backup /usr/local/bin/\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n  gcc \\\n  ca-certificates \\\n",
                      "markdown": "`COPY --from=python /usr/local/include /usr/local/include/\nCOPY --from=gitaly  /usr/local/bin/gitaly-backup /usr/local/bin/\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n  gcc \\\n  ca-certificates \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 12,
                  "endLine": 25,
                  "endColumn": 20,
                  "snippet": {
                    "text": "COPY scripts/bin/* ${DNF_INSTALL_ROOT}/usr/local/bin/\nCOPY scripts/lib/* ${DNF_INSTALL_ROOT}/${LIBDIR}/ruby/vendor_ruby/\n\nRUN microdnf update -y \\\n    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -u ${UID} -m ${GITLAB_USER} -R ${DNF_INSTALL_ROOT}/\n\n",
                    "rendered": {
                      "text": "COPY scripts/bin/* ${DNF_INSTALL_ROOT}/usr/local/bin/\nCOPY scripts/lib/* ${DNF_INSTALL_ROOT}/${LIBDIR}/ruby/vendor_ruby/\n\nRUN microdnf update -y \\\n    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -u ${UID} -m ${GITLAB_USER} -R ${DNF_INSTALL_ROOT}/\n\n",
                      "markdown": "`COPY scripts/bin/* ${DNF_INSTALL_ROOT}/usr/local/bin/\nCOPY scripts/lib/* ${DNF_INSTALL_ROOT}/${LIBDIR}/ruby/vendor_ruby/\n\nRUN microdnf update -y \\\n    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -u ${UID} -m ${GITLAB_USER} -R ${DNF_INSTALL_ROOT}/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 42,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GITLAB_USER=git\nARG UID=1000\nARG DNF_INSTALL_ROOT=/install-root\n\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nARG FIPS_MODE=0\n\nLABEL source=\"https://gitlab.com/gitlab-org/build/CNG/-/tree/master/gitlab-toolbox\" \\\n",
                    "rendered": {
                      "text": "ARG GITLAB_USER=git\nARG UID=1000\nARG DNF_INSTALL_ROOT=/install-root\n\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nARG FIPS_MODE=0\n\nLABEL source=\"https://gitlab.com/gitlab-org/build/CNG/-/tree/master/gitlab-toolbox\" \\\n",
                      "markdown": "`ARG GITLAB_USER=git\nARG UID=1000\nARG DNF_INSTALL_ROOT=/install-root\n\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\nARG FIPS_MODE=0\n\nLABEL source=\"https://gitlab.com/gitlab-org/build/CNG/-/tree/master/gitlab-toolbox\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 6,
                  "endLine": 33,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab\n\nFROM ${RAILS_IMAGE}\n\n",
                    "rendered": {
                      "text": "    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab\n\nFROM ${RAILS_IMAGE}\n\n",
                      "markdown": "`    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab\n\nFROM ${RAILS_IMAGE}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 6,
                  "endLine": 32,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 openssl jq \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab\n\nFROM ${RAILS_IMAGE}\n",
                    "rendered": {
                      "text": "RUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 openssl jq \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab\n\nFROM ${RAILS_IMAGE}\n",
                      "markdown": "`RUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 openssl jq \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab\n\nFROM ${RAILS_IMAGE}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 106,
                  "endLine": 29,
                  "endColumn": 115,
                  "snippet": {
                    "text": "    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -u ${UID} -m ${GITLAB_USER} -R ${DNF_INSTALL_ROOT}/\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 openssl jq \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n",
                    "rendered": {
                      "text": "    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -u ${UID} -m ${GITLAB_USER} -R ${DNF_INSTALL_ROOT}/\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 openssl jq \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n",
                      "markdown": "`    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -u ${UID} -m ${GITLAB_USER} -R ${DNF_INSTALL_ROOT}/\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 openssl jq \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} ${DNF_INSTALL_ROOT}/var/log/gitlab \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-toolbox/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 34,
                  "endLine": 14,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG UID=1000\nARG DNF_OPTS\nARG DNF_OPTS_ROOT\nARG DNF_INSTALL_ROOT=/install-root\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nRUN mkdir -p ${DNF_INSTALL_ROOT}\nCOPY --from=target / ${DNF_INSTALL_ROOT}/\n",
                    "rendered": {
                      "text": "ARG UID=1000\nARG DNF_OPTS\nARG DNF_OPTS_ROOT\nARG DNF_INSTALL_ROOT=/install-root\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nRUN mkdir -p ${DNF_INSTALL_ROOT}\nCOPY --from=target / ${DNF_INSTALL_ROOT}/\n",
                      "markdown": "`ARG UID=1000\nARG DNF_OPTS\nARG DNF_OPTS_ROOT\nARG DNF_INSTALL_ROOT=/install-root\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nRUN mkdir -p ${DNF_INSTALL_ROOT}\nCOPY --from=target / ${DNF_INSTALL_ROOT}/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/scripts/install-dependencies"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 7,
                  "endLine": 5,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\nset -e\n\napt-get update -q\nDEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends make \\\n        build-essential \\\n        libicu-dev\n",
                    "rendered": {
                      "text": "\nset -e\n\napt-get update -q\nDEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends make \\\n        build-essential \\\n        libicu-dev\n",
                      "markdown": "`\nset -e\n\napt-get update -q\nDEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends make \\\n        build-essential \\\n        libicu-dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/scripts/install-dependencies"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 30,
                  "endLine": 21,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n/build-scripts/cleanup-gems /usr/lib/ruby/gems\n\nDEBIAN_FRONTEND=noninteractive apt-get purge -yq make build-essential libicu-dev\n",
                    "rendered": {
                      "text": "\n/build-scripts/cleanup-gems /usr/lib/ruby/gems\n\nDEBIAN_FRONTEND=noninteractive apt-get purge -yq make build-essential libicu-dev\n",
                      "markdown": "`\n/build-scripts/cleanup-gems /usr/lib/ruby/gems\n\nDEBIAN_FRONTEND=noninteractive apt-get purge -yq make build-essential libicu-dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/scripts/install-dependencies"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 30,
                  "endLine": 6,
                  "endColumn": 39,
                  "snippet": {
                    "text": "set -e\n\napt-get update -q\nDEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends make \\\n        build-essential \\\n        libicu-dev\n\n",
                    "rendered": {
                      "text": "set -e\n\napt-get update -q\nDEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends make \\\n        build-essential \\\n        libicu-dev\n\n",
                      "markdown": "`set -e\n\napt-get update -q\nDEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends make \\\n        build-essential \\\n        libicu-dev\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/scripts/install-dependencies"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 5,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#!/bin/bash\n\nset -e\n\napt-get update -q\nDEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends make \\\n        build-essential \\\n        libicu-dev\n",
                    "rendered": {
                      "text": "#!/bin/bash\n\nset -e\n\napt-get update -q\nDEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends make \\\n        build-essential \\\n        libicu-dev\n",
                      "markdown": "`#!/bin/bash\n\nset -e\n\napt-get update -q\nDEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends make \\\n        build-essential \\\n        libicu-dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/openshift.metadata"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 34,
                  "snippet": {
                    "text": "io.openshift.tags=gitlab-mailroom\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab service container for mailroom.\nio.openshift.non-scalable=false\nio.openshift-min-memory=150Mi\nio.openshift.min-cpu=100m\n",
                    "rendered": {
                      "text": "io.openshift.tags=gitlab-mailroom\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab service container for mailroom.\nio.openshift.non-scalable=false\nio.openshift-min-memory=150Mi\nio.openshift.min-cpu=100m\n",
                      "markdown": "`io.openshift.tags=gitlab-mailroom\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab service container for mailroom.\nio.openshift.non-scalable=false\nio.openshift-min-memory=150Mi\nio.openshift.min-cpu=100m\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6,
                  "endLine": 22,
                  "endColumn": 10,
                  "snippet": {
                    "text": "      webrick:1.7.0 \\\n      gitlab-mail_room:${MAILROOM_VERSION} \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n      ${LIBDIR}/ruby/gems \\\n      /usr/bin/mail_room \\\n      /licenses \\\n",
                    "rendered": {
                      "text": "      webrick:1.7.0 \\\n      gitlab-mail_room:${MAILROOM_VERSION} \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n      ${LIBDIR}/ruby/gems \\\n      /usr/bin/mail_room \\\n      /licenses \\\n",
                      "markdown": "`      webrick:1.7.0 \\\n      gitlab-mail_room:${MAILROOM_VERSION} \\\n    && /build-scripts/cleanup-gems ${LIBDIR}/ruby/gems \\\n    && cp -R --parents \\\n      ${LIBDIR}/ruby/gems \\\n      /usr/bin/mail_room \\\n      /licenses \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 27,
                  "endLine": 6,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nFROM ${BUILD_IMAGE}\n\nARG MAILROOM_VERSION=0.0.25\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nADD gitlab-ruby.tar.gz /\nADD https://gitlab.com/gitlab-org/gitlab-mail_room/-/raw/master/LICENSE.txt /licenses/GitLab.txt\n",
                    "rendered": {
                      "text": "\nFROM ${BUILD_IMAGE}\n\nARG MAILROOM_VERSION=0.0.25\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nADD gitlab-ruby.tar.gz /\nADD https://gitlab.com/gitlab-org/gitlab-mail_room/-/raw/master/LICENSE.txt /licenses/GitLab.txt\n",
                      "markdown": "`\nFROM ${BUILD_IMAGE}\n\nARG MAILROOM_VERSION=0.0.25\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nADD gitlab-ruby.tar.gz /\nADD https://gitlab.com/gitlab-org/gitlab-mail_room/-/raw/master/LICENSE.txt /licenses/GitLab.txt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 31,
                  "snippet": {
                    "text": "ARG MAILROOM_VERSION=0.0.25\nARG GITLAB_USER=git\n\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\nCOPY scripts/  /scripts/\n",
                    "rendered": {
                      "text": "ARG MAILROOM_VERSION=0.0.25\nARG GITLAB_USER=git\n\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\nCOPY scripts/  /scripts/\n",
                      "markdown": "`ARG MAILROOM_VERSION=0.0.25\nARG GITLAB_USER=git\n\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\nCOPY scripts/  /scripts/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 106,
                  "endLine": 18,
                  "endColumn": 4,
                  "snippet": {
                    "text": "COPY scripts/  /scripts/\nCOPY shared/build-scripts/ /build-scripts\n\nRUN MAILROOM_VERSION=${MAILROOM_VERSION} /scripts/install-dependencies && rm /scripts/install-dependencies\nCMD [\"/usr/bin/mail_room\", \"-c\", \"/var/opt/gitlab/mail_room.yml\", \"--log-exit-as\", \"json\"]\n",
                    "rendered": {
                      "text": "COPY scripts/  /scripts/\nCOPY shared/build-scripts/ /build-scripts\n\nRUN MAILROOM_VERSION=${MAILROOM_VERSION} /scripts/install-dependencies && rm /scripts/install-dependencies\nCMD [\"/usr/bin/mail_room\", \"-c\", \"/var/opt/gitlab/mail_room.yml\", \"--log-exit-as\", \"json\"]\n",
                      "markdown": "`COPY scripts/  /scripts/\nCOPY shared/build-scripts/ /build-scripts\n\nRUN MAILROOM_VERSION=${MAILROOM_VERSION} /scripts/install-dependencies && rm /scripts/install-dependencies\nCMD [\"/usr/bin/mail_room\", \"-c\", \"/var/opt/gitlab/mail_room.yml\", \"--log-exit-as\", \"json\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/Dockerfile"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 3,
                  "endLine": 12,
                  "endColumn": 8,
                  "snippet": {
                    "text": "ARG GITLAB_USER=git\n\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\nCOPY scripts/  /scripts/\nCOPY shared/build-scripts/ /build-scripts\n",
                    "rendered": {
                      "text": "ARG GITLAB_USER=git\n\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\nCOPY scripts/  /scripts/\nCOPY shared/build-scripts/ /build-scripts\n",
                      "markdown": "`ARG GITLAB_USER=git\n\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\nCOPY scripts/  /scripts/\nCOPY shared/build-scripts/ /build-scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 52,
                  "endLine": 58,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nCMD [\"/usr/bin/mail_room\", \"-c\", \"/var/opt/gitlab/mail_room.yml\", \"--log-exit-as\", \"json\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/usr/bin/mail_room\", \"-c\", \"/var/opt/gitlab/mail_room.yml\", \"--log-exit-as\", \"json\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/usr/bin/mail_room\", \"-c\", \"/var/opt/gitlab/mail_room.yml\", \"--log-exit-as\", \"json\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 56,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nCMD [\"/usr/bin/mail_room\", \"-c\", \"/var/opt/gitlab/mail_room.yml\", \"--log-exit-as\", \"json\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nCMD [\"/usr/bin/mail_room\", \"-c\", \"/var/opt/gitlab/mail_room.yml\", \"--log-exit-as\", \"json\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nCMD [\"/usr/bin/mail_room\", \"-c\", \"/var/opt/gitlab/mail_room.yml\", \"--log-exit-as\", \"json\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 12,
                  "endLine": 21,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts/\n\nRUN microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/ && \\\n    chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} && \\\n",
                    "rendered": {
                      "text": "\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts/\n\nRUN microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/ && \\\n    chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} && \\\n",
                      "markdown": "`\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts/\n\nRUN microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/ && \\\n    chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-mailroom/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/ && \\\n    chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} && \\\n    chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER}\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 procps libicu tzdata \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n",
                    "rendered": {
                      "text": "    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/ && \\\n    chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} && \\\n    chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER}\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 procps libicu tzdata \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n",
                      "markdown": "`    microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils && \\\n    adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/ && \\\n    chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} && \\\n    chmod -R g=u ${DNF_INSTALL_ROOT}/scripts ${DNF_INSTALL_ROOT}/home/${GITLAB_USER}\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 procps libicu tzdata \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/scripts/authorized_keys"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 58,
                  "endLine": 4,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/bash\n\nif [[ \"$1\" == \"git\" ]]; then\n  /srv/gitlab-shell/bin/gitlab-shell-authorized-keys-check git $1 $2\nfi\n",
                    "rendered": {
                      "text": "#!/bin/bash\n\nif [[ \"$1\" == \"git\" ]]; then\n  /srv/gitlab-shell/bin/gitlab-shell-authorized-keys-check git $1 $2\nfi\n",
                      "markdown": "`#!/bin/bash\n\nif [[ \"$1\" == \"git\" ]]; then\n  /srv/gitlab-shell/bin/gitlab-shell-authorized-keys-check git $1 $2\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/scripts/process-wrapper"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 5,
                  "endLine": 30,
                  "endColumn": 11,
                  "snippet": {
                    "text": "      xtail /var/log/gitlab-shell &\n    else\n      touch /var/log/gitlab-shell/ssh.log\n      tail -f /var/log/gitlab-shell/* &\n    fi\n  fi\n\n",
                    "rendered": {
                      "text": "      xtail /var/log/gitlab-shell &\n    else\n      touch /var/log/gitlab-shell/ssh.log\n      tail -f /var/log/gitlab-shell/* &\n    fi\n  fi\n\n",
                      "markdown": "`      xtail /var/log/gitlab-shell &\n    else\n      touch /var/log/gitlab-shell/ssh.log\n      tail -f /var/log/gitlab-shell/* &\n    fi\n  fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/scripts/process-wrapper"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 3,
                  "endLine": 12,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  echo \"Using existing Host Keys\"\n  # copy from KEYS_DIRECTORY to /etc/ssh as needed\n  if [ \"$KEYS_DIRECTORY\" != \"/etc/ssh\" ]; then\n    cp $KEYS_DIRECTORY/ssh_host_* \"/etc/ssh/\"\n  fi\nelse\n  echo \"Generating Host Keys\"\n",
                    "rendered": {
                      "text": "  echo \"Using existing Host Keys\"\n  # copy from KEYS_DIRECTORY to /etc/ssh as needed\n  if [ \"$KEYS_DIRECTORY\" != \"/etc/ssh\" ]; then\n    cp $KEYS_DIRECTORY/ssh_host_* \"/etc/ssh/\"\n  fi\nelse\n  echo \"Generating Host Keys\"\n",
                      "markdown": "`  echo \"Using existing Host Keys\"\n  # copy from KEYS_DIRECTORY to /etc/ssh as needed\n  if [ \"$KEYS_DIRECTORY\" != \"/etc/ssh\" ]; then\n    cp $KEYS_DIRECTORY/ssh_host_* \"/etc/ssh/\"\n  fi\nelse\n  echo \"Generating Host Keys\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/openshift.metadata"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 31,
                  "endLine": 3,
                  "endColumn": 40,
                  "snippet": {
                    "text": "io.openshift.tags=gitlab-shell\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab Shell service container.\nio.openshift.non-scalable=false\nio.openshift-min-memory=6Mi\nio.openshift.min-cpu=0m\n",
                    "rendered": {
                      "text": "io.openshift.tags=gitlab-shell\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab Shell service container.\nio.openshift.non-scalable=false\nio.openshift-min-memory=6Mi\nio.openshift.min-cpu=0m\n",
                      "markdown": "`io.openshift.tags=gitlab-shell\nio.openshift.wants=gitlab-webservice\nio.k8s.description=GitLab Shell service container.\nio.openshift.non-scalable=false\nio.openshift-min-memory=6Mi\nio.openshift.min-cpu=0m\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 6,
                  "endLine": 41,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && install -m755 bin/gitlab-shell-authorized-keys-check ${PREFIX}/bin/gitlab-shell-authorized-keys-check \\\n    && install -m755 bin/gitlab-shell-authorized-principals-check ${PREFIX}/bin/gitlab-shell-authorized-principals-check \\\n    && install -m755 bin/gitlab-sshd ${PREFIX}/bin/gitlab-sshd \\\n    && cp LICENSE VERSION ${PREFIX}/\n",
                    "rendered": {
                      "text": "    && install -m755 bin/gitlab-shell-authorized-keys-check ${PREFIX}/bin/gitlab-shell-authorized-keys-check \\\n    && install -m755 bin/gitlab-shell-authorized-principals-check ${PREFIX}/bin/gitlab-shell-authorized-principals-check \\\n    && install -m755 bin/gitlab-sshd ${PREFIX}/bin/gitlab-sshd \\\n    && cp LICENSE VERSION ${PREFIX}/\n",
                      "markdown": "`    && install -m755 bin/gitlab-shell-authorized-keys-check ${PREFIX}/bin/gitlab-shell-authorized-keys-check \\\n    && install -m755 bin/gitlab-shell-authorized-principals-check ${PREFIX}/bin/gitlab-shell-authorized-principals-check \\\n    && install -m755 bin/gitlab-sshd ${PREFIX}/bin/gitlab-sshd \\\n    && cp LICENSE VERSION ${PREFIX}/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 32,
                  "endLine": 33,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    && cd ${PROJECT}-${VERSION} \\\n    && FIPS_MODE=${FIPS_MODE} make build \\\n    && rm -rf go/ go_build/ spec/ internal/testhelper/testdata/ \\\n    && mkdir /assets/licenses && cp LICENSE /assets/licenses/GitLab.txt \\\n    && export PREFIX=/assets/srv/gitlab-shell \\\n    && mkdir -p ${PREFIX}/bin \\\n    && install -m755 bin/gitlab-shell-check ${PREFIX}/bin/gitlab-shell-check \\\n",
                    "rendered": {
                      "text": "    && cd ${PROJECT}-${VERSION} \\\n    && FIPS_MODE=${FIPS_MODE} make build \\\n    && rm -rf go/ go_build/ spec/ internal/testhelper/testdata/ \\\n    && mkdir /assets/licenses && cp LICENSE /assets/licenses/GitLab.txt \\\n    && export PREFIX=/assets/srv/gitlab-shell \\\n    && mkdir -p ${PREFIX}/bin \\\n    && install -m755 bin/gitlab-shell-check ${PREFIX}/bin/gitlab-shell-check \\\n",
                      "markdown": "`    && cd ${PROJECT}-${VERSION} \\\n    && FIPS_MODE=${FIPS_MODE} make build \\\n    && rm -rf go/ go_build/ spec/ internal/testhelper/testdata/ \\\n    && mkdir /assets/licenses && cp LICENSE /assets/licenses/GitLab.txt \\\n    && export PREFIX=/assets/srv/gitlab-shell \\\n    && mkdir -p ${PREFIX}/bin \\\n    && install -m755 bin/gitlab-shell-check ${PREFIX}/bin/gitlab-shell-check \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 18,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nADD gitlab-ruby.tar.gz /\nADD gitlab-go.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 krb5-devel\n\n",
                    "rendered": {
                      "text": "\nADD gitlab-ruby.tar.gz /\nADD gitlab-go.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 krb5-devel\n\n",
                      "markdown": "`\nADD gitlab-ruby.tar.gz /\nADD gitlab-go.tar.gz /\n\nENV PRIVATE_TOKEN=${API_TOKEN}\n\nRUN microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 krb5-devel\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 13,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG API_TOKEN=\nARG FIPS_MODE=0\nARG DNF_OPTS\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-ruby.tar.gz /\nADD gitlab-go.tar.gz /\n",
                    "rendered": {
                      "text": "ARG API_TOKEN=\nARG FIPS_MODE=0\nARG DNF_OPTS\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-ruby.tar.gz /\nADD gitlab-go.tar.gz /\n",
                      "markdown": "`ARG API_TOKEN=\nARG FIPS_MODE=0\nARG DNF_OPTS\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-ruby.tar.gz /\nADD gitlab-go.tar.gz /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 64,
                  "endLine": 82,
                  "endColumn": 79,
                  "snippet": {
                    "text": "# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                    "rendered": {
                      "text": "# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                      "markdown": "`# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 33,
                  "endLine": 82,
                  "endColumn": 48,
                  "snippet": {
                    "text": "# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                    "rendered": {
                      "text": "# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                      "markdown": "`# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 16,
                  "endLine": 82,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                    "rendered": {
                      "text": "# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                      "markdown": "`# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 23,
                  "endLine": 68,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install runtime deps, remove files overwritten in runtime\n",
                    "rendered": {
                      "text": "\n# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install runtime deps, remove files overwritten in runtime\n",
                      "markdown": "`\n# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install runtime deps, remove files overwritten in runtime\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 53,
                  "endLine": 93,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nVOLUME /var/log/gitlab-shell\n\nHEALTHCHECK --interval=10s --timeout=3s --retries=3 \\\nCMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nVOLUME /var/log/gitlab-shell\n\nHEALTHCHECK --interval=10s --timeout=3s --retries=3 \\\nCMD /scripts/healthcheck\n",
                      "markdown": "`\nVOLUME /var/log/gitlab-shell\n\nHEALTHCHECK --interval=10s --timeout=3s --retries=3 \\\nCMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 88,
                  "endColumn": 4,
                  "snippet": {
                    "text": "USER $GITLAB_USER:$GITLAB_USER\n\nENV CONFIG_TEMPLATE_DIRECTORY=/srv/gitlab-shell\n\nCMD [\"/scripts/process-wrapper\"]\n\nVOLUME /var/log/gitlab-shell\n\n",
                    "rendered": {
                      "text": "USER $GITLAB_USER:$GITLAB_USER\n\nENV CONFIG_TEMPLATE_DIRECTORY=/srv/gitlab-shell\n\nCMD [\"/scripts/process-wrapper\"]\n\nVOLUME /var/log/gitlab-shell\n\n",
                      "markdown": "`USER $GITLAB_USER:$GITLAB_USER\n\nENV CONFIG_TEMPLATE_DIRECTORY=/srv/gitlab-shell\n\nCMD [\"/scripts/process-wrapper\"]\n\nVOLUME /var/log/gitlab-shell\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 11,
                  "endLine": 72,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install runtime deps, remove files overwritten in runtime\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-server \\\n    && rm -Rf /var/lib/apt/lists/* \\\n    && rm -Rf /var/cache/debconf/templates.dat* \\\n",
                    "rendered": {
                      "text": "    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install runtime deps, remove files overwritten in runtime\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-server \\\n    && rm -Rf /var/lib/apt/lists/* \\\n    && rm -Rf /var/cache/debconf/templates.dat* \\\n",
                      "markdown": "`    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install runtime deps, remove files overwritten in runtime\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-server \\\n    && rm -Rf /var/lib/apt/lists/* \\\n    && rm -Rf /var/cache/debconf/templates.dat* \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 11,
                  "endLine": 19,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ENV GOTOOLCHAIN=local\n\n# install build deps\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      gcc \\\n      git \\\n",
                    "rendered": {
                      "text": "ENV GOTOOLCHAIN=local\n\n# install build deps\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      gcc \\\n      git \\\n",
                      "markdown": "`ENV GOTOOLCHAIN=local\n\n# install build deps\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      gcc \\\n      git \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 86,
                  "endColumn": 4,
                  "snippet": {
                    "text": "RUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nENV CONFIG_TEMPLATE_DIRECTORY=/srv/gitlab-shell\n\nCMD [\"/scripts/process-wrapper\"]\n\n",
                    "rendered": {
                      "text": "RUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nENV CONFIG_TEMPLATE_DIRECTORY=/srv/gitlab-shell\n\nCMD [\"/scripts/process-wrapper\"]\n\n",
                      "markdown": "`RUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nENV CONFIG_TEMPLATE_DIRECTORY=/srv/gitlab-shell\n\nCMD [\"/scripts/process-wrapper\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 51,
                  "endLine": 82,
                  "endColumn": 58,
                  "snippet": {
                    "text": "# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                    "rendered": {
                      "text": "# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                      "markdown": "`# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 3,
                  "endLine": 82,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                    "rendered": {
                      "text": "# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n",
                      "markdown": "`# /scripts should be owned by root\nCOPY scripts/ /scripts\n# AuthorizedKeysCommand must be owned by root, and have all parent paths owned as root\nRUN mv /scripts/authorized_keys /authorized_keys && chmod 0755 /authorized_keys\n\nUSER $GITLAB_USER:$GITLAB_USER\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 6,
                  "endLine": 73,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n# install runtime deps, remove files overwritten in runtime\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-server \\\n    && rm -Rf /var/lib/apt/lists/* \\\n    && rm -Rf /var/cache/debconf/templates.dat* \\\n    && rm -Rf /etc/ssh/ssh_host_* /etc/ssh/sshd_config.*\n",
                    "rendered": {
                      "text": "\n# install runtime deps, remove files overwritten in runtime\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-server \\\n    && rm -Rf /var/lib/apt/lists/* \\\n    && rm -Rf /var/cache/debconf/templates.dat* \\\n    && rm -Rf /etc/ssh/ssh_host_* /etc/ssh/sshd_config.*\n",
                      "markdown": "`\n# install runtime deps, remove files overwritten in runtime\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-server \\\n    && rm -Rf /var/lib/apt/lists/* \\\n    && rm -Rf /var/cache/debconf/templates.dat* \\\n    && rm -Rf /etc/ssh/ssh_host_* /etc/ssh/sshd_config.*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 3,
                  "endLine": 72,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install runtime deps, remove files overwritten in runtime\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-server \\\n    && rm -Rf /var/lib/apt/lists/* \\\n    && rm -Rf /var/cache/debconf/templates.dat* \\\n",
                    "rendered": {
                      "text": "    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install runtime deps, remove files overwritten in runtime\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-server \\\n    && rm -Rf /var/lib/apt/lists/* \\\n    && rm -Rf /var/cache/debconf/templates.dat* \\\n",
                      "markdown": "`    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install runtime deps, remove files overwritten in runtime\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssh-server \\\n    && rm -Rf /var/lib/apt/lists/* \\\n    && rm -Rf /var/cache/debconf/templates.dat* \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 3,
                  "endLine": 69,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install runtime deps, remove files overwritten in runtime\nRUN apt-get update \\\n",
                    "rendered": {
                      "text": "# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install runtime deps, remove files overwritten in runtime\nRUN apt-get update \\\n",
                      "markdown": "`# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n    sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# install runtime deps, remove files overwritten in runtime\nRUN apt-get update \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 3,
                  "endLine": 58,
                  "endColumn": 10,
                  "snippet": {
                    "text": "COPY sshd_config /assets/etc/ssh/\n\n# Set final chmods\nRUN chmod -R g=u /assets\n\n## FINAL IMAGE ##\n\n",
                    "rendered": {
                      "text": "COPY sshd_config /assets/etc/ssh/\n\n# Set final chmods\nRUN chmod -R g=u /assets\n\n## FINAL IMAGE ##\n\n",
                      "markdown": "`COPY sshd_config /assets/etc/ssh/\n\n# Set final chmods\nRUN chmod -R g=u /assets\n\n## FINAL IMAGE ##\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 3,
                  "endLine": 46,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    install -m755 bin/gitlab-shell-authorized-keys-check ${PREFIX}/bin/gitlab-shell-authorized-keys-check && \\\n    install -m755 bin/gitlab-shell-authorized-principals-check ${PREFIX}/bin/gitlab-shell-authorized-principals-check && \\\n    install -m755 bin/gitlab-sshd ${PREFIX}/bin/gitlab-sshd && \\\n    cp LICENSE VERSION ${PREFIX}/\n\n# Setup working directories and logs\nRUN install -d /assets/srv/sshd && \\\n",
                    "rendered": {
                      "text": "    install -m755 bin/gitlab-shell-authorized-keys-check ${PREFIX}/bin/gitlab-shell-authorized-keys-check && \\\n    install -m755 bin/gitlab-shell-authorized-principals-check ${PREFIX}/bin/gitlab-shell-authorized-principals-check && \\\n    install -m755 bin/gitlab-sshd ${PREFIX}/bin/gitlab-sshd && \\\n    cp LICENSE VERSION ${PREFIX}/\n\n# Setup working directories and logs\nRUN install -d /assets/srv/sshd && \\\n",
                      "markdown": "`    install -m755 bin/gitlab-shell-authorized-keys-check ${PREFIX}/bin/gitlab-shell-authorized-keys-check && \\\n    install -m755 bin/gitlab-shell-authorized-principals-check ${PREFIX}/bin/gitlab-shell-authorized-principals-check && \\\n    install -m755 bin/gitlab-sshd ${PREFIX}/bin/gitlab-sshd && \\\n    cp LICENSE VERSION ${PREFIX}/\n\n# Setup working directories and logs\nRUN install -d /assets/srv/sshd && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cd /source && \\\n    echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-shell/repository/archive.tar.bz2?sha=${GITLAB_SHELL_VERSION}\" && \\\n    curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-shell.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-shell/repository/archive.tar.bz2?sha=${GITLAB_SHELL_VERSION}\" && \\\n    tar -xjf gitlab-shell.tar.bz2 --strip-components=1 && \\\n    rm gitlab-shell.tar.bz2 && \\\n    make build && \\\n    rm -rf go go_build internal/testhelper/testdata && \\\n",
                    "rendered": {
                      "text": "    cd /source && \\\n    echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-shell/repository/archive.tar.bz2?sha=${GITLAB_SHELL_VERSION}\" && \\\n    curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-shell.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-shell/repository/archive.tar.bz2?sha=${GITLAB_SHELL_VERSION}\" && \\\n    tar -xjf gitlab-shell.tar.bz2 --strip-components=1 && \\\n    rm gitlab-shell.tar.bz2 && \\\n    make build && \\\n    rm -rf go go_build internal/testhelper/testdata && \\\n",
                      "markdown": "`    cd /source && \\\n    echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-shell/repository/archive.tar.bz2?sha=${GITLAB_SHELL_VERSION}\" && \\\n    curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-shell.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-shell/repository/archive.tar.bz2?sha=${GITLAB_SHELL_VERSION}\" && \\\n    tar -xjf gitlab-shell.tar.bz2 --strip-components=1 && \\\n    rm gitlab-shell.tar.bz2 && \\\n    make build && \\\n    rm -rf go go_build internal/testhelper/testdata && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 3,
                  "endLine": 35,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    mkdir /source && \\\n    cd /source && \\\n    echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-shell/repository/archive.tar.bz2?sha=${GITLAB_SHELL_VERSION}\" && \\\n    curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-shell.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-shell/repository/archive.tar.bz2?sha=${GITLAB_SHELL_VERSION}\" && \\\n    tar -xjf gitlab-shell.tar.bz2 --strip-components=1 && \\\n    rm gitlab-shell.tar.bz2 && \\\n    make build && \\\n",
                    "rendered": {
                      "text": "    mkdir /source && \\\n    cd /source && \\\n    echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-shell/repository/archive.tar.bz2?sha=${GITLAB_SHELL_VERSION}\" && \\\n    curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-shell.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-shell/repository/archive.tar.bz2?sha=${GITLAB_SHELL_VERSION}\" && \\\n    tar -xjf gitlab-shell.tar.bz2 --strip-components=1 && \\\n    rm gitlab-shell.tar.bz2 && \\\n    make build && \\\n",
                      "markdown": "`    mkdir /source && \\\n    cd /source && \\\n    echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-shell/repository/archive.tar.bz2?sha=${GITLAB_SHELL_VERSION}\" && \\\n    curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitlab-shell.tar.bz2 \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitlab-shell/repository/archive.tar.bz2?sha=${GITLAB_SHELL_VERSION}\" && \\\n    tar -xjf gitlab-shell.tar.bz2 --strip-components=1 && \\\n    rm gitlab-shell.tar.bz2 && \\\n    make build && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 5,
                  "endLine": 22,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      gcc \\\n      git \\\n      make \\\n      xtail \\\n      libkrb5-dev \\\n",
                    "rendered": {
                      "text": "RUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      gcc \\\n      git \\\n      make \\\n      xtail \\\n      libkrb5-dev \\\n",
                      "markdown": "`RUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      gcc \\\n      git \\\n      make \\\n      xtail \\\n      libkrb5-dev \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 6,
                  "endLine": 20,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n# install build deps\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      gcc \\\n      git \\\n      make \\\n",
                    "rendered": {
                      "text": "\n# install build deps\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      gcc \\\n      git \\\n      make \\\n",
                      "markdown": "`\n# install build deps\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      gcc \\\n      git \\\n      make \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3,
                  "endLine": 19,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ENV GOTOOLCHAIN=local\n\n# install build deps\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      gcc \\\n      git \\\n",
                    "rendered": {
                      "text": "ENV GOTOOLCHAIN=local\n\n# install build deps\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      gcc \\\n      git \\\n",
                      "markdown": "`ENV GOTOOLCHAIN=local\n\n# install build deps\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      gcc \\\n      git \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-shell/Dockerfile"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 16,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GITLAB_NAMESPACE=\"gitlab-org\"\nARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\n\nENV GOTOOLCHAIN=local\n\n# install build deps\nRUN apt-get update \\\n",
                    "rendered": {
                      "text": "ARG GITLAB_NAMESPACE=\"gitlab-org\"\nARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\n\nENV GOTOOLCHAIN=local\n\n# install build deps\nRUN apt-get update \\\n",
                      "markdown": "`ARG GITLAB_NAMESPACE=\"gitlab-org\"\nARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\n\nENV GOTOOLCHAIN=local\n\n# install build deps\nRUN apt-get update \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 6,
                  "endLine": 41,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && install -D LICENSE /licenses/GitLab.txt \\\n    && if [ -n \"${GITALY_GIT_REPO_URL}\" ]; then export GIT_REPO_URL=\"${GITALY_GIT_REPO_URL}\" ; fi \\\n    && FIPS_MODE=${FIPS_MODE} make install WITH_BUNDLED_GIT=YesPlease \\\n    && cp -R --parents \\\n      /usr/local/lib/python3.9/site-packages \\\n      /usr/local/bin/gitaly* \\\n      /usr/local/bin/praefect \\\n",
                    "rendered": {
                      "text": "    && install -D LICENSE /licenses/GitLab.txt \\\n    && if [ -n \"${GITALY_GIT_REPO_URL}\" ]; then export GIT_REPO_URL=\"${GITALY_GIT_REPO_URL}\" ; fi \\\n    && FIPS_MODE=${FIPS_MODE} make install WITH_BUNDLED_GIT=YesPlease \\\n    && cp -R --parents \\\n      /usr/local/lib/python3.9/site-packages \\\n      /usr/local/bin/gitaly* \\\n      /usr/local/bin/praefect \\\n",
                      "markdown": "`    && install -D LICENSE /licenses/GitLab.txt \\\n    && if [ -n \"${GITALY_GIT_REPO_URL}\" ]; then export GIT_REPO_URL=\"${GITALY_GIT_REPO_URL}\" ; fi \\\n    && FIPS_MODE=${FIPS_MODE} make install WITH_BUNDLED_GIT=YesPlease \\\n    && cp -R --parents \\\n      /usr/local/lib/python3.9/site-packages \\\n      /usr/local/bin/gitaly* \\\n      /usr/local/bin/praefect \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6,
                  "endLine": 31,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && pip3 install \"git-filter-repo==${GIT_FILTER_REPO_VERSION}\" \\\n    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n    && /gitlab-fetch \\\n        \"${API_URL}\" \\\n        \"${NAMESPACE}\" \\\n",
                    "rendered": {
                      "text": "    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && pip3 install \"git-filter-repo==${GIT_FILTER_REPO_VERSION}\" \\\n    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n    && /gitlab-fetch \\\n        \"${API_URL}\" \\\n        \"${NAMESPACE}\" \\\n",
                      "markdown": "`    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && pip3 install \"git-filter-repo==${GIT_FILTER_REPO_VERSION}\" \\\n    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} + \\\n    && /gitlab-fetch \\\n        \"${API_URL}\" \\\n        \"${NAMESPACE}\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 30,
                  "endLine": 23,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ADD gitlab-python.tar.gz /\n\nENV LANG=C.UTF-8\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nCOPY shared/build-scripts/ /build-scripts\n\n",
                    "rendered": {
                      "text": "ADD gitlab-python.tar.gz /\n\nENV LANG=C.UTF-8\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nCOPY shared/build-scripts/ /build-scripts\n\n",
                      "markdown": "`ADD gitlab-python.tar.gz /\n\nENV LANG=C.UTF-8\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nCOPY shared/build-scripts/ /build-scripts\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 16,
                  "endLine": 22,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ADD gitlab-go.tar.gz /\nADD gitlab-python.tar.gz /\n\nENV LANG=C.UTF-8\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nCOPY shared/build-scripts/ /build-scripts\n",
                    "rendered": {
                      "text": "ADD gitlab-go.tar.gz /\nADD gitlab-python.tar.gz /\n\nENV LANG=C.UTF-8\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nCOPY shared/build-scripts/ /build-scripts\n",
                      "markdown": "`ADD gitlab-go.tar.gz /\nADD gitlab-python.tar.gz /\n\nENV LANG=C.UTF-8\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\nCOPY shared/build-scripts/ /build-scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 21,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nADD gitlab-go.tar.gz /\nADD gitlab-python.tar.gz /\n\nENV LANG=C.UTF-8\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\n",
                    "rendered": {
                      "text": "\nADD gitlab-go.tar.gz /\nADD gitlab-python.tar.gz /\n\nENV LANG=C.UTF-8\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\n",
                      "markdown": "`\nADD gitlab-go.tar.gz /\nADD gitlab-python.tar.gz /\n\nENV LANG=C.UTF-8\nENV PRIVATE_TOKEN=${API_TOKEN}\nENV LIBDIR ${LIBDIR:-\"/usr/lib64\"}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 16,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GIT_FILTER_REPO_VERSION=\"2.45.0\"\n\nARG BUNDLE_OPTIONS=\"--jobs 4\"\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\nADD gitlab-python.tar.gz /\n",
                    "rendered": {
                      "text": "ARG GIT_FILTER_REPO_VERSION=\"2.45.0\"\n\nARG BUNDLE_OPTIONS=\"--jobs 4\"\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\nADD gitlab-python.tar.gz /\n",
                      "markdown": "`ARG GIT_FILTER_REPO_VERSION=\"2.45.0\"\n\nARG BUNDLE_OPTIONS=\"--jobs 4\"\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\nADD gitlab-python.tar.gz /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/config.toml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 8,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# listen on a TCP socket. This is insecure (no authentication)\nlisten_addr = \"0.0.0.0:8075\"\n\n# Git executable settings\n[git]\nuse_bundled_binaries = true\n\n",
                    "rendered": {
                      "text": "# listen on a TCP socket. This is insecure (no authentication)\nlisten_addr = \"0.0.0.0:8075\"\n\n# Git executable settings\n[git]\nuse_bundled_binaries = true\n\n",
                      "markdown": "`# listen on a TCP socket. This is insecure (no authentication)\nlisten_addr = \"0.0.0.0:8075\"\n\n# Git executable settings\n[git]\nuse_bundled_binaries = true\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 23,
                  "endLine": 99,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n      sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# configure runtime environment, with permissions\n",
                    "rendered": {
                      "text": "\n# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n      sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# configure runtime environment, with permissions\n",
                      "markdown": "`\n# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n      sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# configure runtime environment, with permissions\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 54,
                  "endLine": 136,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nEXPOSE 8075\n\nHEALTHCHECK --interval=30s --timeout=10s --retries=5 \\\nCMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nEXPOSE 8075\n\nHEALTHCHECK --interval=30s --timeout=10s --retries=5 \\\nCMD /scripts/healthcheck\n",
                      "markdown": "`\nEXPOSE 8075\n\nHEALTHCHECK --interval=30s --timeout=10s --retries=5 \\\nCMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 128,
                  "endLine": 129,
                  "endColumn": 4,
                  "snippet": {
                    "text": "USER ${GITLAB_USER}:${GITLAB_USER}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitaly\n\nCMD [\"/scripts/process-wrapper\"]\n\nVOLUME /var/log/gitaly\n\n",
                    "rendered": {
                      "text": "USER ${GITLAB_USER}:${GITLAB_USER}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitaly\n\nCMD [\"/scripts/process-wrapper\"]\n\nVOLUME /var/log/gitaly\n\n",
                      "markdown": "`USER ${GITLAB_USER}:${GITLAB_USER}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitaly\n\nCMD [\"/scripts/process-wrapper\"]\n\nVOLUME /var/log/gitaly\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 11,
                  "endLine": 90,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      libpcre2-16-0 libpcre2-32-0 libpcre2-posix3 libcurl3-gnutls \\\n      libicu72 iproute2 openssh-client xtail \\\n",
                    "rendered": {
                      "text": "\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      libpcre2-16-0 libpcre2-32-0 libpcre2-posix3 libcurl3-gnutls \\\n      libicu72 iproute2 openssh-client xtail \\\n",
                      "markdown": "`\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      libpcre2-16-0 libpcre2-32-0 libpcre2-posix3 libcurl3-gnutls \\\n      libicu72 iproute2 openssh-client xtail \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 11,
                  "endLine": 49,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    libicu-dev \\\n    libpcre2-dev \\\n    libcurl4-gnutls-dev' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps $runDeps && \\\n    ln -sf /usr/local/go/bin/go /usr/local/go/bin/gofmt /usr/local/go/bin/godoc /usr/local/bin/ && \\\n    mkdir -p ${BUILD_DIR} && \\\n",
                    "rendered": {
                      "text": "    libicu-dev \\\n    libpcre2-dev \\\n    libcurl4-gnutls-dev' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps $runDeps && \\\n    ln -sf /usr/local/go/bin/go /usr/local/go/bin/gofmt /usr/local/go/bin/godoc /usr/local/bin/ && \\\n    mkdir -p ${BUILD_DIR} && \\\n",
                      "markdown": "`    libicu-dev \\\n    libpcre2-dev \\\n    libcurl4-gnutls-dev' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps $runDeps && \\\n    ln -sf /usr/local/go/bin/go /usr/local/go/bin/gofmt /usr/local/go/bin/godoc /usr/local/bin/ && \\\n    mkdir -p ${BUILD_DIR} && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 11,
                  "endLine": 28,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 iproute2 openssh-client xtail\n\nCOPY shared/build-scripts/ /build-scripts\n",
                    "rendered": {
                      "text": "\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 iproute2 openssh-client xtail\n\nCOPY shared/build-scripts/ /build-scripts\n",
                      "markdown": "`\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 iproute2 openssh-client xtail\n\nCOPY shared/build-scripts/ /build-scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 126,
                  "endLine": 127,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n# set runtime user\nUSER ${GITLAB_USER}:${GITLAB_USER}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitaly\n\nCMD [\"/scripts/process-wrapper\"]\n\n",
                    "rendered": {
                      "text": "\n# set runtime user\nUSER ${GITLAB_USER}:${GITLAB_USER}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitaly\n\nCMD [\"/scripts/process-wrapper\"]\n\n",
                      "markdown": "`\n# set runtime user\nUSER ${GITLAB_USER}:${GITLAB_USER}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitaly\n\nCMD [\"/scripts/process-wrapper\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 3,
                  "endLine": 122,
                  "endColumn": 10,
                  "snippet": {
                    "text": "COPY scripts/ /scripts/\n\n# ensure explicit permissions on scripts\nRUN chmod -R =rx /scripts/\n\n# set runtime user\nUSER ${GITLAB_USER}:${GITLAB_USER}\n",
                    "rendered": {
                      "text": "COPY scripts/ /scripts/\n\n# ensure explicit permissions on scripts\nRUN chmod -R =rx /scripts/\n\n# set runtime user\nUSER ${GITLAB_USER}:${GITLAB_USER}\n",
                      "markdown": "`COPY scripts/ /scripts/\n\n# ensure explicit permissions on scripts\nRUN chmod -R =rx /scripts/\n\n# set runtime user\nUSER ${GITLAB_USER}:${GITLAB_USER}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 5,
                  "endLine": 100,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n      sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# configure runtime environment, with permissions\nRUN install -d -o ${GITLAB_USER} -g ${GITLAB_USER} -m 755 /home/${GITLAB_USER}/repositories && \\\n",
                    "rendered": {
                      "text": "# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n      sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# configure runtime environment, with permissions\nRUN install -d -o ${GITLAB_USER} -g ${GITLAB_USER} -m 755 /home/${GITLAB_USER}/repositories && \\\n",
                      "markdown": "`# create gitlab user\n# openssh daemon does not allow locked user to login, change ! to *\nRUN adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER} && \\\n      sed -i \"s/${GITLAB_USER}:!/${GITLAB_USER}:*/\" /etc/shadow\n\n# configure runtime environment, with permissions\nRUN install -d -o ${GITLAB_USER} -g ${GITLAB_USER} -m 755 /home/${GITLAB_USER}/repositories && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 6,
                  "endLine": 91,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      libpcre2-16-0 libpcre2-32-0 libpcre2-posix3 libcurl3-gnutls \\\n      libicu72 iproute2 openssh-client xtail \\\n      bzip2 gzip \\\n",
                    "rendered": {
                      "text": "# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      libpcre2-16-0 libpcre2-32-0 libpcre2-posix3 libcurl3-gnutls \\\n      libicu72 iproute2 openssh-client xtail \\\n      bzip2 gzip \\\n",
                      "markdown": "`# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      libpcre2-16-0 libpcre2-32-0 libpcre2-posix3 libcurl3-gnutls \\\n      libicu72 iproute2 openssh-client xtail \\\n      bzip2 gzip \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 3,
                  "endLine": 90,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      libpcre2-16-0 libpcre2-32-0 libpcre2-posix3 libcurl3-gnutls \\\n      libicu72 iproute2 openssh-client xtail \\\n",
                    "rendered": {
                      "text": "\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      libpcre2-16-0 libpcre2-32-0 libpcre2-posix3 libcurl3-gnutls \\\n      libicu72 iproute2 openssh-client xtail \\\n",
                      "markdown": "`\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      libpcre2-16-0 libpcre2-32-0 libpcre2-posix3 libcurl3-gnutls \\\n      libicu72 iproute2 openssh-client xtail \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 58,
                  "endLine": 88,
                  "endColumn": 63,
                  "snippet": {
                    "text": "    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} +\n\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n",
                    "rendered": {
                      "text": "    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} +\n\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n",
                      "markdown": "`    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} +\n\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 6,
                  "endLine": 86,
                  "endColumn": 12,
                  "snippet": {
                    "text": "RUN ldconfig \\\n    && pip3 install git-filter-repo==${GIT_FILTER_REPO_VERSION} \\\n    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} +\n\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\n",
                    "rendered": {
                      "text": "RUN ldconfig \\\n    && pip3 install git-filter-repo==${GIT_FILTER_REPO_VERSION} \\\n    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} +\n\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\n",
                      "markdown": "`RUN ldconfig \\\n    && pip3 install git-filter-repo==${GIT_FILTER_REPO_VERSION} \\\n    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} +\n\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 3,
                  "endLine": 83,
                  "endColumn": 13,
                  "snippet": {
                    "text": "ENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\n\n# install git-filter-repo.\nRUN ldconfig \\\n    && pip3 install git-filter-repo==${GIT_FILTER_REPO_VERSION} \\\n    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} +\n",
                    "rendered": {
                      "text": "ENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\n\n# install git-filter-repo.\nRUN ldconfig \\\n    && pip3 install git-filter-repo==${GIT_FILTER_REPO_VERSION} \\\n    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} +\n",
                      "markdown": "`ENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\n\n# install git-filter-repo.\nRUN ldconfig \\\n    && pip3 install git-filter-repo==${GIT_FILTER_REPO_VERSION} \\\n    && pip3 cache purge \\\n    && find /usr/local/lib/python3.9 -name '__pycache__' -type d -print -exec rm -r {} +\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 57,
                  "endLine": 80,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG GIT_FILTER_REPO_VERSION=\"2.45.0\"\nCOPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nCOPY --from=python /usr/local/include /usr/local/include/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\n\n# install git-filter-repo.\nRUN ldconfig \\\n",
                    "rendered": {
                      "text": "ARG GIT_FILTER_REPO_VERSION=\"2.45.0\"\nCOPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nCOPY --from=python /usr/local/include /usr/local/include/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\n\n# install git-filter-repo.\nRUN ldconfig \\\n",
                      "markdown": "`ARG GIT_FILTER_REPO_VERSION=\"2.45.0\"\nCOPY --from=python /usr/local/bin /usr/local/bin/\nCOPY --from=python /usr/local/lib /usr/local/lib/\nCOPY --from=python /usr/local/include /usr/local/include/\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages\n\n# install git-filter-repo.\nRUN ldconfig \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 3,
                  "endLine": 64,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    CGO_ENABLED=0 go build -C \"${BUILD_DIR}/tools/gitaly-init-cgroups\" -trimpath -o /usr/local/bin/setup_cgroups . && \\\n    # Copy binaries to /target\n    mkdir /target && \\\n    cp -R --parents \\\n      /usr/local/bin/gitaly* \\\n      /usr/local/bin/praefect \\\n      /usr/local/bin/setup_cgroups \\\n",
                    "rendered": {
                      "text": "    CGO_ENABLED=0 go build -C \"${BUILD_DIR}/tools/gitaly-init-cgroups\" -trimpath -o /usr/local/bin/setup_cgroups . && \\\n    # Copy binaries to /target\n    mkdir /target && \\\n    cp -R --parents \\\n      /usr/local/bin/gitaly* \\\n      /usr/local/bin/praefect \\\n      /usr/local/bin/setup_cgroups \\\n",
                      "markdown": "`    CGO_ENABLED=0 go build -C \"${BUILD_DIR}/tools/gitaly-init-cgroups\" -trimpath -o /usr/local/bin/setup_cgroups . && \\\n    # Copy binaries to /target\n    mkdir /target && \\\n    cp -R --parents \\\n      /usr/local/bin/gitaly* \\\n      /usr/local/bin/praefect \\\n      /usr/local/bin/setup_cgroups \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 3,
                  "endLine": 56,
                  "endColumn": 8,
                  "snippet": {
                    "text": "s/${GITLAB_NAMESPACE}%2Fgitaly/repository/archive.tar.gz?sha=${GITALY_SERVER_VERSION}\" && \\\n    curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitaly.tar.gz \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitaly/repository/archive.tar.gz?sha=${GITALY_SERVER_VERSION}\" && \\\n    tar -xzf gitaly.tar.gz --strip-components=1 && \\\n    rm gitaly.tar.gz && \\\n    if [ -n \"${GITALY_GIT_REPO_URL}\" ]; then export GIT_REPO_URL=\"${GITALY_GIT_REPO_URL}\" ; fi && \\\n    make install WITH_BUNDLED_GIT=YesPlease && \\\n    # Build `gitaly-init-cgroups`\n    CGO_ENABLED=0 go build -C \"${BUILD_DIR}/to",
                    "rendered": {
                      "text": "s/${GITLAB_NAMESPACE}%2Fgitaly/repository/archive.tar.gz?sha=${GITALY_SERVER_VERSION}\" && \\\n    curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitaly.tar.gz \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitaly/repository/archive.tar.gz?sha=${GITALY_SERVER_VERSION}\" && \\\n    tar -xzf gitaly.tar.gz --strip-components=1 && \\\n    rm gitaly.tar.gz && \\\n    if [ -n \"${GITALY_GIT_REPO_URL}\" ]; then export GIT_REPO_URL=\"${GITALY_GIT_REPO_URL}\" ; fi && \\\n    make install WITH_BUNDLED_GIT=YesPlease && \\\n    # Build `gitaly-init-cgroups`\n    CGO_ENABLED=0 go build -C \"${BUILD_DIR}/to",
                      "markdown": "`s/${GITLAB_NAMESPACE}%2Fgitaly/repository/archive.tar.gz?sha=${GITALY_SERVER_VERSION}\" && \\\n    curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitaly.tar.gz \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitaly/repository/archive.tar.gz?sha=${GITALY_SERVER_VERSION}\" && \\\n    tar -xzf gitaly.tar.gz --strip-components=1 && \\\n    rm gitaly.tar.gz && \\\n    if [ -n \"${GITALY_GIT_REPO_URL}\" ]; then export GIT_REPO_URL=\"${GITALY_GIT_REPO_URL}\" ; fi && \\\n    make install WITH_BUNDLED_GIT=YesPlease && \\\n    # Build `gitaly-init-cgroups`\n    CGO_ENABLED=0 go build -C \"${BUILD_DIR}/to`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 3,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    mkdir -p ${BUILD_DIR} && \\\n    cd ${BUILD_DIR} && \\\n    echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitaly/repository/archive.tar.gz?sha=${GITALY_SERVER_VERSION}\" && \\\n    curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitaly.tar.gz \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitaly/repository/archive.tar.gz?sha=${GITALY_SERVER_VERSION}\" && \\\n    tar -xzf gitaly.tar.gz --strip-components=1 && \\\n    rm gitaly.tar.gz && \\\n    if [ -n \"${GITALY_GIT_REPO_URL}\" ]; then export GIT_REPO_URL=\"${GITALY_GIT_REPO_URL}\" ; fi && \\\n",
                    "rendered": {
                      "text": "    mkdir -p ${BUILD_DIR} && \\\n    cd ${BUILD_DIR} && \\\n    echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitaly/repository/archive.tar.gz?sha=${GITALY_SERVER_VERSION}\" && \\\n    curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitaly.tar.gz \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitaly/repository/archive.tar.gz?sha=${GITALY_SERVER_VERSION}\" && \\\n    tar -xzf gitaly.tar.gz --strip-components=1 && \\\n    rm gitaly.tar.gz && \\\n    if [ -n \"${GITALY_GIT_REPO_URL}\" ]; then export GIT_REPO_URL=\"${GITALY_GIT_REPO_URL}\" ; fi && \\\n",
                      "markdown": "`    mkdir -p ${BUILD_DIR} && \\\n    cd ${BUILD_DIR} && \\\n    echo \"Downloading source code from ${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitaly/repository/archive.tar.gz?sha=${GITALY_SERVER_VERSION}\" && \\\n    curl -f --retry 6 --header \"PRIVATE-TOKEN: ${FETCH_ARTIFACTS_PAT}\" -o gitaly.tar.gz \"${CI_API_V4_URL}/projects/${GITLAB_NAMESPACE}%2Fgitaly/repository/archive.tar.gz?sha=${GITALY_SERVER_VERSION}\" && \\\n    tar -xzf gitaly.tar.gz --strip-components=1 && \\\n    rm gitaly.tar.gz && \\\n    if [ -n \"${GITALY_GIT_REPO_URL}\" ]; then export GIT_REPO_URL=\"${GITALY_GIT_REPO_URL}\" ; fi && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 3,
                  "endLine": 50,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    libpcre2-dev \\\n    libcurl4-gnutls-dev' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps $runDeps && \\\n    ln -sf /usr/local/go/bin/go /usr/local/go/bin/gofmt /usr/local/go/bin/godoc /usr/local/bin/ && \\\n    mkdir -p ${BUILD_DIR} && \\\n    cd ${BUILD_DIR} && \\\n",
                    "rendered": {
                      "text": "    libpcre2-dev \\\n    libcurl4-gnutls-dev' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps $runDeps && \\\n    ln -sf /usr/local/go/bin/go /usr/local/go/bin/gofmt /usr/local/go/bin/godoc /usr/local/bin/ && \\\n    mkdir -p ${BUILD_DIR} && \\\n    cd ${BUILD_DIR} && \\\n",
                      "markdown": "`    libpcre2-dev \\\n    libcurl4-gnutls-dev' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps $runDeps && \\\n    ln -sf /usr/local/go/bin/go /usr/local/go/bin/gofmt /usr/local/go/bin/godoc /usr/local/bin/ && \\\n    mkdir -p ${BUILD_DIR} && \\\n    cd ${BUILD_DIR} && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 3,
                  "endLine": 49,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    libicu-dev \\\n    libpcre2-dev \\\n    libcurl4-gnutls-dev' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps $runDeps && \\\n    ln -sf /usr/local/go/bin/go /usr/local/go/bin/gofmt /usr/local/go/bin/godoc /usr/local/bin/ && \\\n    mkdir -p ${BUILD_DIR} && \\\n",
                    "rendered": {
                      "text": "    libicu-dev \\\n    libpcre2-dev \\\n    libcurl4-gnutls-dev' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps $runDeps && \\\n    ln -sf /usr/local/go/bin/go /usr/local/go/bin/gofmt /usr/local/go/bin/godoc /usr/local/bin/ && \\\n    mkdir -p ${BUILD_DIR} && \\\n",
                      "markdown": "`    libicu-dev \\\n    libpcre2-dev \\\n    libcurl4-gnutls-dev' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps $runDeps && \\\n    ln -sf /usr/local/go/bin/go /usr/local/go/bin/gofmt /usr/local/go/bin/godoc /usr/local/bin/ && \\\n    mkdir -p ${BUILD_DIR} && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 3,
                  "endLine": 41,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cmake \\\n    gcc \\\n    g++ \\\n    git \\\n    pkg-config \\\n    libssl-dev \\\n    zlib1g-dev' && \\\n",
                    "rendered": {
                      "text": "    cmake \\\n    gcc \\\n    g++ \\\n    git \\\n    pkg-config \\\n    libssl-dev \\\n    zlib1g-dev' && \\\n",
                      "markdown": "`    cmake \\\n    gcc \\\n    g++ \\\n    git \\\n    pkg-config \\\n    libssl-dev \\\n    zlib1g-dev' && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 46,
                  "endLine": 35,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\nARG CACHE_BUSTER=false\n\n# Install build dependencies required to build Git and libgit2.\nRUN buildDeps=' \\\n    make \\\n    cmake \\\n",
                    "rendered": {
                      "text": "\nARG CACHE_BUSTER=false\n\n# Install build dependencies required to build Git and libgit2.\nRUN buildDeps=' \\\n    make \\\n    cmake \\\n",
                      "markdown": "`\nARG CACHE_BUSTER=false\n\n# Install build dependencies required to build Git and libgit2.\nRUN buildDeps=' \\\n    make \\\n    cmake \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 6,
                  "endLine": 29,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 iproute2 openssh-client xtail\n\nCOPY shared/build-scripts/ /build-scripts\n\n",
                    "rendered": {
                      "text": "# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 iproute2 openssh-client xtail\n\nCOPY shared/build-scripts/ /build-scripts\n\n",
                      "markdown": "`# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 iproute2 openssh-client xtail\n\nCOPY shared/build-scripts/ /build-scripts\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 3,
                  "endLine": 28,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 iproute2 openssh-client xtail\n\nCOPY shared/build-scripts/ /build-scripts\n",
                    "rendered": {
                      "text": "\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 iproute2 openssh-client xtail\n\nCOPY shared/build-scripts/ /build-scripts\n",
                      "markdown": "`\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 iproute2 openssh-client xtail\n\nCOPY shared/build-scripts/ /build-scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 58,
                  "endLine": 26,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nENV GOTOOLCHAIN=local\n\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 iproute2 openssh-client xtail\n",
                    "rendered": {
                      "text": "\nENV GOTOOLCHAIN=local\n\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 iproute2 openssh-client xtail\n",
                      "markdown": "`\nENV GOTOOLCHAIN=local\n\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libicu72 iproute2 openssh-client xtail\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 24,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\nARG BUNDLE_OPTIONS=\"--jobs 4\"\n\nENV GOTOOLCHAIN=local\n\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\n",
                    "rendered": {
                      "text": "ARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\nARG BUNDLE_OPTIONS=\"--jobs 4\"\n\nENV GOTOOLCHAIN=local\n\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\n",
                      "markdown": "`ARG FETCH_ARTIFACTS_PAT\nARG CI_API_V4_URL\nARG BUNDLE_OPTIONS=\"--jobs 4\"\n\nENV GOTOOLCHAIN=local\n\n# install runtime deps. openssh-client is required so that SSH client binaries\n# are present for repository mirroring.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 52,
                  "endLine": 88,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nVOLUME /var/log/gitaly\n\nHEALTHCHECK --interval=30s --timeout=10s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nVOLUME /var/log/gitaly\n\nHEALTHCHECK --interval=30s --timeout=10s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`\nVOLUME /var/log/gitaly\n\nHEALTHCHECK --interval=30s --timeout=10s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 84,
                  "endColumn": 4,
                  "snippet": {
                    "text": "USER ${UID}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitaly\n\nCMD [\"/scripts/process-wrapper\"]\n\nVOLUME /var/log/gitaly\n\n",
                    "rendered": {
                      "text": "USER ${UID}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitaly\n\nCMD [\"/scripts/process-wrapper\"]\n\nVOLUME /var/log/gitaly\n\n",
                      "markdown": "`USER ${UID}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitaly\n\nCMD [\"/scripts/process-wrapper\"]\n\nVOLUME /var/log/gitaly\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 12,
                  "endLine": 21,
                  "endColumn": 20,
                  "snippet": {
                    "text": "COPY --from=target / ${DNF_INSTALL_ROOT}/\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts/\n\nRUN microdnf update -y \\\n  && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n  && adduser -u ${UID} -m ${GITLAB_USER} -R ${DNF_INSTALL_ROOT}/ \\\n  && mkdir -p \\\n",
                    "rendered": {
                      "text": "COPY --from=target / ${DNF_INSTALL_ROOT}/\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts/\n\nRUN microdnf update -y \\\n  && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n  && adduser -u ${UID} -m ${GITLAB_USER} -R ${DNF_INSTALL_ROOT}/ \\\n  && mkdir -p \\\n",
                      "markdown": "`COPY --from=target / ${DNF_INSTALL_ROOT}/\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts/\n\nRUN microdnf update -y \\\n  && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n  && adduser -u ${UID} -m ${GITLAB_USER} -R ${DNF_INSTALL_ROOT}/ \\\n  && mkdir -p \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 82,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitaly\n\nCMD [\"/scripts/process-wrapper\"]\n\n",
                    "rendered": {
                      "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitaly\n\nCMD [\"/scripts/process-wrapper\"]\n\n",
                      "markdown": "`    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc/gitaly\n\nCMD [\"/scripts/process-wrapper\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 67,
                  "endLine": 72,
                  "endColumn": 72,
                  "snippet": {
                    "text": "      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n\n",
                    "rendered": {
                      "text": "      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n\n",
                      "markdown": "`      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 38,
                  "endLine": 72,
                  "endColumn": 47,
                  "snippet": {
                    "text": "      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n\n",
                    "rendered": {
                      "text": "      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n\n",
                      "markdown": "`      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 30,
                  "endLine": 72,
                  "endColumn": 35,
                  "snippet": {
                    "text": "      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n\n",
                    "rendered": {
                      "text": "      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n\n",
                      "markdown": "`      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 63,
                  "endLine": 71,
                  "endColumn": 68,
                  "snippet": {
                    "text": "      vendor=\"GitLab\" \\\n      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n",
                    "rendered": {
                      "text": "      vendor=\"GitLab\" \\\n      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n",
                      "markdown": "`      vendor=\"GitLab\" \\\n      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 34,
                  "endLine": 71,
                  "endColumn": 43,
                  "snippet": {
                    "text": "      vendor=\"GitLab\" \\\n      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n",
                    "rendered": {
                      "text": "      vendor=\"GitLab\" \\\n      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n",
                      "markdown": "`      vendor=\"GitLab\" \\\n      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 26,
                  "endLine": 71,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      vendor=\"GitLab\" \\\n      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n",
                    "rendered": {
                      "text": "      vendor=\"GitLab\" \\\n      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n",
                      "markdown": "`      vendor=\"GitLab\" \\\n      version=${GITALY_SERVER_VERSION} \\\n      release=${GITALY_SERVER_VERSION} \\\n      summary=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\" \\\n      description=\"Gitaly is a Git RPC service for handling all the git calls made by GitLab.\"\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  ${DNF_INSTALL_ROOT}/home/${GITLAB_USER}/repositories \\\n  ${DNF_INSTALL_ROOT}/srv/gitlab-shell \\\n  ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n  && chmod -R g=u \\\n  ${DNF_INSTALL_ROOT}/scripts \\\n  ${DNF_INSTALL_ROOT}/etc/gitaly \\\n  ${DNF_INSTALL_ROOT}/var/log/gitaly \\\n",
                    "rendered": {
                      "text": "  ${DNF_INSTALL_ROOT}/home/${GITLAB_USER}/repositories \\\n  ${DNF_INSTALL_ROOT}/srv/gitlab-shell \\\n  ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n  && chmod -R g=u \\\n  ${DNF_INSTALL_ROOT}/scripts \\\n  ${DNF_INSTALL_ROOT}/etc/gitaly \\\n  ${DNF_INSTALL_ROOT}/var/log/gitaly \\\n",
                      "markdown": "`  ${DNF_INSTALL_ROOT}/home/${GITLAB_USER}/repositories \\\n  ${DNF_INSTALL_ROOT}/srv/gitlab-shell \\\n  ${DNF_INSTALL_ROOT}/home/${GITLAB_USER} \\\n  && chmod -R g=u \\\n  ${DNF_INSTALL_ROOT}/scripts \\\n  ${DNF_INSTALL_ROOT}/etc/gitaly \\\n  ${DNF_INSTALL_ROOT}/var/log/gitaly \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 4,
                  "endLine": 32,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  ${DNF_INSTALL_ROOT}/srv/gitlab-shell \\\n  && touch ${DNF_INSTALL_ROOT}/var/log/gitaly/gitaly.log \\\n  && touch ${DNF_INSTALL_ROOT}/var/log/gitaly/gitlab-shell.log \\\n  && chown -R ${UID}:0 \\\n  ${DNF_INSTALL_ROOT}/scripts \\\n  ${DNF_INSTALL_ROOT}/etc/gitaly \\\n  ${DNF_INSTALL_ROOT}/var/log/gitaly \\\n",
                    "rendered": {
                      "text": "  ${DNF_INSTALL_ROOT}/srv/gitlab-shell \\\n  && touch ${DNF_INSTALL_ROOT}/var/log/gitaly/gitaly.log \\\n  && touch ${DNF_INSTALL_ROOT}/var/log/gitaly/gitlab-shell.log \\\n  && chown -R ${UID}:0 \\\n  ${DNF_INSTALL_ROOT}/scripts \\\n  ${DNF_INSTALL_ROOT}/etc/gitaly \\\n  ${DNF_INSTALL_ROOT}/var/log/gitaly \\\n",
                      "markdown": "`  ${DNF_INSTALL_ROOT}/srv/gitlab-shell \\\n  && touch ${DNF_INSTALL_ROOT}/var/log/gitaly/gitaly.log \\\n  && touch ${DNF_INSTALL_ROOT}/var/log/gitaly/gitlab-shell.log \\\n  && chown -R ${UID}:0 \\\n  ${DNF_INSTALL_ROOT}/scripts \\\n  ${DNF_INSTALL_ROOT}/etc/gitaly \\\n  ${DNF_INSTALL_ROOT}/var/log/gitaly \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/scripts/bundle-certificates-ubi"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  echo \"Copied custom certificates to RHEL-compatible directory\"\nfi\n\n# Update the CA certificates store in /etc/pki/ca-trust/extracted/\nupdate-ca-trust extract --output /etc/pki/ca-trust/extracted/\necho \"Updated CA trust\"\n\n",
                    "rendered": {
                      "text": "  echo \"Copied custom certificates to RHEL-compatible directory\"\nfi\n\n# Update the CA certificates store in /etc/pki/ca-trust/extracted/\nupdate-ca-trust extract --output /etc/pki/ca-trust/extracted/\necho \"Updated CA trust\"\n\n",
                      "markdown": "`  echo \"Copied custom certificates to RHEL-compatible directory\"\nfi\n\n# Update the CA certificates store in /etc/pki/ca-trust/extracted/\nupdate-ca-trust extract --output /etc/pki/ca-trust/extracted/\necho \"Updated CA trust\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/scripts/bundle-certificates-ubi"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 93,
                  "endLine": 23,
                  "endColumn": 3,
                  "snippet": {
                    "text": "# Copy certificates into common path (/etc/ssl/certs)\ncp /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/ssl/certs/ca-bundle.crt\ncp /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt /etc/ssl/certs/ca-bundle.trust.crt\n# cp ca-bundle to ca-certificates - https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2592\ncp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt\necho \"Copied bundles into /etc/ssl/certs\"\n",
                    "rendered": {
                      "text": "# Copy certificates into common path (/etc/ssl/certs)\ncp /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/ssl/certs/ca-bundle.crt\ncp /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt /etc/ssl/certs/ca-bundle.trust.crt\n# cp ca-bundle to ca-certificates - https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2592\ncp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt\necho \"Copied bundles into /etc/ssl/certs\"\n",
                      "markdown": "`# Copy certificates into common path (/etc/ssl/certs)\ncp /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/ssl/certs/ca-bundle.crt\ncp /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt /etc/ssl/certs/ca-bundle.trust.crt\n# cp ca-bundle to ca-certificates - https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2592\ncp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt\necho \"Copied bundles into /etc/ssl/certs\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/scripts/bundle-certificates-ubi"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# Copy certificates into common path (/etc/ssl/certs)\ncp /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/ssl/certs/ca-bundle.crt\ncp /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt /etc/ssl/certs/ca-bundle.trust.crt\n# cp ca-bundle to ca-certificates - https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2592\ncp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt\necho \"Copied bundles into /etc/ssl/certs\"\n",
                    "rendered": {
                      "text": "# Copy certificates into common path (/etc/ssl/certs)\ncp /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/ssl/certs/ca-bundle.crt\ncp /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt /etc/ssl/certs/ca-bundle.trust.crt\n# cp ca-bundle to ca-certificates - https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2592\ncp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt\necho \"Copied bundles into /etc/ssl/certs\"\n",
                      "markdown": "`# Copy certificates into common path (/etc/ssl/certs)\ncp /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/ssl/certs/ca-bundle.crt\ncp /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt /etc/ssl/certs/ca-bundle.trust.crt\n# cp ca-bundle to ca-certificates - https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2592\ncp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt\necho \"Copied bundles into /etc/ssl/certs\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/scripts/bundle-certificates-ubi"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 81,
                  "endLine": 21,
                  "endColumn": 3,
                  "snippet": {
                    "text": "echo \"Updated CA trust\"\n\n# Copy certificates into common path (/etc/ssl/certs)\ncp /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/ssl/certs/ca-bundle.crt\ncp /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt /etc/ssl/certs/ca-bundle.trust.crt\n# cp ca-bundle to ca-certificates - https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2592\ncp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt\necho \"Copied bundles into /etc/ssl/certs\"\n",
                    "rendered": {
                      "text": "echo \"Updated CA trust\"\n\n# Copy certificates into common path (/etc/ssl/certs)\ncp /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/ssl/certs/ca-bundle.crt\ncp /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt /etc/ssl/certs/ca-bundle.trust.crt\n# cp ca-bundle to ca-certificates - https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2592\ncp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt\necho \"Copied bundles into /etc/ssl/certs\"\n",
                      "markdown": "`echo \"Updated CA trust\"\n\n# Copy certificates into common path (/etc/ssl/certs)\ncp /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/ssl/certs/ca-bundle.crt\ncp /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt /etc/ssl/certs/ca-bundle.trust.crt\n# cp ca-bundle to ca-certificates - https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2592\ncp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt\necho \"Copied bundles into /etc/ssl/certs\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/scripts/bundle-certificates-ubi"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 53,
                  "endLine": 20,
                  "endColumn": 3,
                  "snippet": {
                    "text": "update-ca-trust extract --output /etc/pki/ca-trust/extracted/\necho \"Updated CA trust\"\n\n# Copy certificates into common path (/etc/ssl/certs)\ncp /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/ssl/certs/ca-bundle.crt\ncp /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt /etc/ssl/certs/ca-bundle.trust.crt\n# cp ca-bundle to ca-certificates - https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2592\ncp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt\n",
                    "rendered": {
                      "text": "update-ca-trust extract --output /etc/pki/ca-trust/extracted/\necho \"Updated CA trust\"\n\n# Copy certificates into common path (/etc/ssl/certs)\ncp /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/ssl/certs/ca-bundle.crt\ncp /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt /etc/ssl/certs/ca-bundle.trust.crt\n# cp ca-bundle to ca-certificates - https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2592\ncp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt\n",
                      "markdown": "`update-ca-trust extract --output /etc/pki/ca-trust/extracted/\necho \"Updated CA trust\"\n\n# Copy certificates into common path (/etc/ssl/certs)\ncp /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem /etc/ssl/certs/ca-bundle.crt\ncp /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt /etc/ssl/certs/ca-bundle.trust.crt\n# cp ca-bundle to ca-certificates - https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2592\ncp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/scripts/bundle-certificates-ubi"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n# Copy any mounted custom-CAs to RHEL-compatible directory\nif [ $(ls -1 /usr/local/share/ca-certificates/ | wc -l) -gt 0 ]; then\n  cp /usr/local/share/ca-certificates/* /usr/share/pki/ca-trust-source/anchors/\n  echo \"Copied custom certificates to RHEL-compatible directory\"\nfi\n\n",
                    "rendered": {
                      "text": "\n# Copy any mounted custom-CAs to RHEL-compatible directory\nif [ $(ls -1 /usr/local/share/ca-certificates/ | wc -l) -gt 0 ]; then\n  cp /usr/local/share/ca-certificates/* /usr/share/pki/ca-trust-source/anchors/\n  echo \"Copied custom certificates to RHEL-compatible directory\"\nfi\n\n",
                      "markdown": "`\n# Copy any mounted custom-CAs to RHEL-compatible directory\nif [ $(ls -1 /usr/local/share/ca-certificates/ | wc -l) -gt 0 ]; then\n  cp /usr/local/share/ca-certificates/* /usr/share/pki/ca-trust-source/anchors/\n  echo \"Copied custom certificates to RHEL-compatible directory\"\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/scripts/bundle-certificates"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  rm -r /etc/ssl/certs/*\nfi\n\n# Update the CA certificates store in /etc/ssl/certs\n# - generated hashes\n# - symlinks to various external locations\n# - compiles ca-certificates.crt\n",
                    "rendered": {
                      "text": "  rm -r /etc/ssl/certs/*\nfi\n\n# Update the CA certificates store in /etc/ssl/certs\n# - generated hashes\n# - symlinks to various external locations\n# - compiles ca-certificates.crt\n",
                      "markdown": "`  rm -r /etc/ssl/certs/*\nfi\n\n# Update the CA certificates store in /etc/ssl/certs\n# - generated hashes\n# - symlinks to various external locations\n# - compiles ca-certificates.crt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/scripts/bundle-certificates"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 3,
                  "endLine": 22,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  # if outside of /etc/ssl/certs, cp to /etc/ssl/certs in place of symlink\n  if [ \"$originPath\" != \"/etc/ssl/certs\" ]; then\n    rm $f ;\n    cp $origin $f\n  fi\ndone\n",
                    "rendered": {
                      "text": "  # if outside of /etc/ssl/certs, cp to /etc/ssl/certs in place of symlink\n  if [ \"$originPath\" != \"/etc/ssl/certs\" ]; then\n    rm $f ;\n    cp $origin $f\n  fi\ndone\n",
                      "markdown": "`  # if outside of /etc/ssl/certs, cp to /etc/ssl/certs in place of symlink\n  if [ \"$originPath\" != \"/etc/ssl/certs\" ]; then\n    rm $f ;\n    cp $origin $f\n  fi\ndone\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/scripts/bundle-certificates"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 33,
                  "endLine": 19,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  # read the symlinks origin\n  origin=$(readlink -f $f) ;\n  originPath=${origin%/*} ;\n  # if outside of /etc/ssl/certs, cp to /etc/ssl/certs in place of symlink\n  if [ \"$originPath\" != \"/etc/ssl/certs\" ]; then\n    rm $f ;\n    cp $origin $f\n",
                    "rendered": {
                      "text": "  # read the symlinks origin\n  origin=$(readlink -f $f) ;\n  originPath=${origin%/*} ;\n  # if outside of /etc/ssl/certs, cp to /etc/ssl/certs in place of symlink\n  if [ \"$originPath\" != \"/etc/ssl/certs\" ]; then\n    rm $f ;\n    cp $origin $f\n",
                      "markdown": "`  # read the symlinks origin\n  origin=$(readlink -f $f) ;\n  originPath=${origin%/*} ;\n  # if outside of /etc/ssl/certs, cp to /etc/ssl/certs in place of symlink\n  if [ \"$originPath\" != \"/etc/ssl/certs\" ]; then\n    rm $f ;\n    cp $origin $f\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/Dockerfile"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 15,
                  "endColumn": 4,
                  "snippet": {
                    "text": "COPY scripts/bundle-certificates /scripts/\n\nVOLUME /etc/ssl/certs /usr/local/share/ca-certificates\n\nCMD [\"/scripts/bundle-certificates\"]\n",
                    "rendered": {
                      "text": "COPY scripts/bundle-certificates /scripts/\n\nVOLUME /etc/ssl/certs /usr/local/share/ca-certificates\n\nCMD [\"/scripts/bundle-certificates\"]\n",
                      "markdown": "`COPY scripts/bundle-certificates /scripts/\n\nVOLUME /etc/ssl/certs /usr/local/share/ca-certificates\n\nCMD [\"/scripts/bundle-certificates\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 34,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n# bundle-certificates script will copy custom CAs into RHEL-compatible directory\nVOLUME /etc/ssl/certs /usr/local/share/ca-certificates\n\nCMD [\"/scripts/bundle-certificates\"]\n\n# Default to non-root user\nUSER 65534:65534\n",
                    "rendered": {
                      "text": "\n# bundle-certificates script will copy custom CAs into RHEL-compatible directory\nVOLUME /etc/ssl/certs /usr/local/share/ca-certificates\n\nCMD [\"/scripts/bundle-certificates\"]\n\n# Default to non-root user\nUSER 65534:65534\n",
                      "markdown": "`\n# bundle-certificates script will copy custom CAs into RHEL-compatible directory\nVOLUME /etc/ssl/certs /usr/local/share/ca-certificates\n\nCMD [\"/scripts/bundle-certificates\"]\n\n# Default to non-root user\nUSER 65534:65534\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 21,
                  "endLine": 31,
                  "endColumn": 29,
                  "snippet": {
                    "text": "RUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\n# bundle-certificates script will copy custom CAs into RHEL-compatible directory\nVOLUME /etc/ssl/certs /usr/local/share/ca-certificates\n\nCMD [\"/scripts/bundle-certificates\"]\n",
                    "rendered": {
                      "text": "RUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\n# bundle-certificates script will copy custom CAs into RHEL-compatible directory\nVOLUME /etc/ssl/certs /usr/local/share/ca-certificates\n\nCMD [\"/scripts/bundle-certificates\"]\n",
                      "markdown": "`RUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\n# bundle-certificates script will copy custom CAs into RHEL-compatible directory\nVOLUME /etc/ssl/certs /usr/local/share/ca-certificates\n\nCMD [\"/scripts/bundle-certificates\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# Ensure that update-ca-trust has permission when non-root user\nRUN chmod -R 777 /etc/pki/ca-trust/extracted && \\\n    chmod -R 777 /etc/pki/tls/certs && \\\n    chmod -R 777 /usr/share/pki/ca-trust-source/anchors\n\n## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n",
                    "rendered": {
                      "text": "# Ensure that update-ca-trust has permission when non-root user\nRUN chmod -R 777 /etc/pki/ca-trust/extracted && \\\n    chmod -R 777 /etc/pki/tls/certs && \\\n    chmod -R 777 /usr/share/pki/ca-trust-source/anchors\n\n## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n",
                      "markdown": "`# Ensure that update-ca-trust has permission when non-root user\nRUN chmod -R 777 /etc/pki/ca-trust/extracted && \\\n    chmod -R 777 /etc/pki/tls/certs && \\\n    chmod -R 777 /usr/share/pki/ca-trust-source/anchors\n\n## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n# Ensure that update-ca-trust has permission when non-root user\nRUN chmod -R 777 /etc/pki/ca-trust/extracted && \\\n    chmod -R 777 /etc/pki/tls/certs && \\\n    chmod -R 777 /usr/share/pki/ca-trust-source/anchors\n\n## Hardening: CIS L1 SCAP\n",
                    "rendered": {
                      "text": "\n# Ensure that update-ca-trust has permission when non-root user\nRUN chmod -R 777 /etc/pki/ca-trust/extracted && \\\n    chmod -R 777 /etc/pki/tls/certs && \\\n    chmod -R 777 /usr/share/pki/ca-trust-source/anchors\n\n## Hardening: CIS L1 SCAP\n",
                      "markdown": "`\n# Ensure that update-ca-trust has permission when non-root user\nRUN chmod -R 777 /etc/pki/ca-trust/extracted && \\\n    chmod -R 777 /etc/pki/tls/certs && \\\n    chmod -R 777 /usr/share/pki/ca-trust-source/anchors\n\n## Hardening: CIS L1 SCAP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/certificates/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 3,
                  "endLine": 23,
                  "endColumn": 10,
                  "snippet": {
                    "text": "COPY LICENSE /licenses/GitLab.txt\n\n# Ensure that update-ca-trust has permission when non-root user\nRUN chmod -R 777 /etc/pki/ca-trust/extracted && \\\n    chmod -R 777 /etc/pki/tls/certs && \\\n    chmod -R 777 /usr/share/pki/ca-trust-source/anchors\n\n",
                    "rendered": {
                      "text": "COPY LICENSE /licenses/GitLab.txt\n\n# Ensure that update-ca-trust has permission when non-root user\nRUN chmod -R 777 /etc/pki/ca-trust/extracted && \\\n    chmod -R 777 /etc/pki/tls/certs && \\\n    chmod -R 777 /usr/share/pki/ca-trust-source/anchors\n\n",
                      "markdown": "`COPY LICENSE /licenses/GitLab.txt\n\n# Ensure that update-ca-trust has permission when non-root user\nRUN chmod -R 777 /etc/pki/ca-trust/extracted && \\\n    chmod -R 777 /etc/pki/tls/certs && \\\n    chmod -R 777 /usr/share/pki/ca-trust-source/anchors\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.fips"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 12,
                  "endLine": 10,
                  "endColumn": 20,
                  "snippet": {
                    "text": "ARG DNF_OPTS\n\nRUN INSTALL_PKGS=\"openssl-devel glibc-devel gcc git tar\" &&  \\\n    microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 $INSTALL_PKGS && \\\n    microdnf clean all -y\n\n",
                    "rendered": {
                      "text": "ARG DNF_OPTS\n\nRUN INSTALL_PKGS=\"openssl-devel glibc-devel gcc git tar\" &&  \\\n    microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 $INSTALL_PKGS && \\\n    microdnf clean all -y\n\n",
                      "markdown": "`ARG DNF_OPTS\n\nRUN INSTALL_PKGS=\"openssl-devel glibc-devel gcc git tar\" &&  \\\n    microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 $INSTALL_PKGS && \\\n    microdnf clean all -y\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.fips"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    GOROOT_FINAL=/usr/local/go CGO_ENABLED=1 ./make.bash && \\\n    popd && \\\n    mkdir -p /assets/usr/local && \\\n    mv go /assets/usr/local/\n\nRUN rm -rf \\\n        /assets/usr/local/go/pkg/*/cmd \\\n",
                    "rendered": {
                      "text": "    GOROOT_FINAL=/usr/local/go CGO_ENABLED=1 ./make.bash && \\\n    popd && \\\n    mkdir -p /assets/usr/local && \\\n    mv go /assets/usr/local/\n\nRUN rm -rf \\\n        /assets/usr/local/go/pkg/*/cmd \\\n",
                      "markdown": "`    GOROOT_FINAL=/usr/local/go CGO_ENABLED=1 ./make.bash && \\\n    popd && \\\n    mkdir -p /assets/usr/local && \\\n    mv go /assets/usr/local/\n\nRUN rm -rf \\\n        /assets/usr/local/go/pkg/*/cmd \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.fips"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 8,
                  "snippet": {
                    "text": "RUN cd /tmp/golang-fips && \\\n    chmod +x scripts/* && \\\n    git config --global user.email \"builder@example.com\" && \\\n    git config --global user.name \"Builder\" && \\\n    ./scripts/full-initialize-repo.sh && \\\n    pushd go/src && \\\n    GOROOT_FINAL=/usr/local/go CGO_ENABLED=1 ./make.bash && \\\n",
                    "rendered": {
                      "text": "RUN cd /tmp/golang-fips && \\\n    chmod +x scripts/* && \\\n    git config --global user.email \"builder@example.com\" && \\\n    git config --global user.name \"Builder\" && \\\n    ./scripts/full-initialize-repo.sh && \\\n    pushd go/src && \\\n    GOROOT_FINAL=/usr/local/go CGO_ENABLED=1 ./make.bash && \\\n",
                      "markdown": "`RUN cd /tmp/golang-fips && \\\n    chmod +x scripts/* && \\\n    git config --global user.email \"builder@example.com\" && \\\n    git config --global user.name \"Builder\" && \\\n    ./scripts/full-initialize-repo.sh && \\\n    pushd go/src && \\\n    GOROOT_FINAL=/usr/local/go CGO_ENABLED=1 ./make.bash && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.fips"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 3,
                  "endLine": 29,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nRUN cd /tmp/golang-fips && \\\n    chmod +x scripts/* && \\\n    git config --global user.email \"builder@example.com\" && \\\n    git config --global user.name \"Builder\" && \\\n    ./scripts/full-initialize-repo.sh && \\\n    pushd go/src && \\\n",
                    "rendered": {
                      "text": "\nRUN cd /tmp/golang-fips && \\\n    chmod +x scripts/* && \\\n    git config --global user.email \"builder@example.com\" && \\\n    git config --global user.name \"Builder\" && \\\n    ./scripts/full-initialize-repo.sh && \\\n    pushd go/src && \\\n",
                      "markdown": "`\nRUN cd /tmp/golang-fips && \\\n    chmod +x scripts/* && \\\n    git config --global user.email \"builder@example.com\" && \\\n    git config --global user.name \"Builder\" && \\\n    ./scripts/full-initialize-repo.sh && \\\n    pushd go/src && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.fips"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 3,
                  "endLine": 28,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    /tmp/golang-fips\n\nRUN cd /tmp/golang-fips && \\\n    chmod +x scripts/* && \\\n    git config --global user.email \"builder@example.com\" && \\\n    git config --global user.name \"Builder\" && \\\n    ./scripts/full-initialize-repo.sh && \\\n",
                    "rendered": {
                      "text": "    /tmp/golang-fips\n\nRUN cd /tmp/golang-fips && \\\n    chmod +x scripts/* && \\\n    git config --global user.email \"builder@example.com\" && \\\n    git config --global user.name \"Builder\" && \\\n    ./scripts/full-initialize-repo.sh && \\\n",
                      "markdown": "`    /tmp/golang-fips\n\nRUN cd /tmp/golang-fips && \\\n    chmod +x scripts/* && \\\n    git config --global user.email \"builder@example.com\" && \\\n    git config --global user.name \"Builder\" && \\\n    ./scripts/full-initialize-repo.sh && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.fips"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 20,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nENV PATH=\"$PATH:/tmp/golang/go/bin\"\n\nRUN git clone \\\n    https://github.com/golang-fips/go.git \\\n    --branch \"${GO_FIPS_TAG}\" \\\n    --single-branch \\\n",
                    "rendered": {
                      "text": "\nENV PATH=\"$PATH:/tmp/golang/go/bin\"\n\nRUN git clone \\\n    https://github.com/golang-fips/go.git \\\n    --branch \"${GO_FIPS_TAG}\" \\\n    --single-branch \\\n",
                      "markdown": "`\nENV PATH=\"$PATH:/tmp/golang/go/bin\"\n\nRUN git clone \\\n    https://github.com/golang-fips/go.git \\\n    --branch \"${GO_FIPS_TAG}\" \\\n    --single-branch \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.fips"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 18,
                  "endColumn": 4,
                  "snippet": {
                    "text": "RUN mkdir -p /tmp/golang && \\\n    curl -fsSL \"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz\" \\\n    | tar -xzC /tmp/golang\n\nENV PATH=\"$PATH:/tmp/golang/go/bin\"\n\nRUN git clone \\\n    https://github.com/golang-fips/go.git \\\n",
                    "rendered": {
                      "text": "RUN mkdir -p /tmp/golang && \\\n    curl -fsSL \"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz\" \\\n    | tar -xzC /tmp/golang\n\nENV PATH=\"$PATH:/tmp/golang/go/bin\"\n\nRUN git clone \\\n    https://github.com/golang-fips/go.git \\\n",
                      "markdown": "`RUN mkdir -p /tmp/golang && \\\n    curl -fsSL \"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz\" \\\n    | tar -xzC /tmp/golang\n\nENV PATH=\"$PATH:/tmp/golang/go/bin\"\n\nRUN git clone \\\n    https://github.com/golang-fips/go.git \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.fips"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 5,
                  "endLine": 16,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nRUN mkdir -p /tmp/golang && \\\n    curl -fsSL \"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz\" \\\n    | tar -xzC /tmp/golang\n\nENV PATH=\"$PATH:/tmp/golang/go/bin\"\n\n",
                    "rendered": {
                      "text": "\nRUN mkdir -p /tmp/golang && \\\n    curl -fsSL \"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz\" \\\n    | tar -xzC /tmp/golang\n\nENV PATH=\"$PATH:/tmp/golang/go/bin\"\n\n",
                      "markdown": "`\nRUN mkdir -p /tmp/golang && \\\n    curl -fsSL \"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz\" \\\n    | tar -xzC /tmp/golang\n\nENV PATH=\"$PATH:/tmp/golang/go/bin\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.fips"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 3,
                  "endLine": 15,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    microdnf clean all -y\n\nRUN mkdir -p /tmp/golang && \\\n    curl -fsSL \"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz\" \\\n    | tar -xzC /tmp/golang\n\nENV PATH=\"$PATH:/tmp/golang/go/bin\"\n",
                    "rendered": {
                      "text": "    microdnf clean all -y\n\nRUN mkdir -p /tmp/golang && \\\n    curl -fsSL \"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz\" \\\n    | tar -xzC /tmp/golang\n\nENV PATH=\"$PATH:/tmp/golang/go/bin\"\n",
                      "markdown": "`    microdnf clean all -y\n\nRUN mkdir -p /tmp/golang && \\\n    curl -fsSL \"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz\" \\\n    | tar -xzC /tmp/golang\n\nENV PATH=\"$PATH:/tmp/golang/go/bin\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-go/Dockerfile.build.fips"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 47,
                  "endLine": 9,
                  "endColumn": 52,
                  "snippet": {
                    "text": "ARG GO_FIPS_TAG=go1.22.7-1-openssl-fips\nARG DNF_OPTS\n\nRUN INSTALL_PKGS=\"openssl-devel glibc-devel gcc git tar\" &&  \\\n    microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 $INSTALL_PKGS && \\\n    microdnf clean all -y\n",
                    "rendered": {
                      "text": "ARG GO_FIPS_TAG=go1.22.7-1-openssl-fips\nARG DNF_OPTS\n\nRUN INSTALL_PKGS=\"openssl-devel glibc-devel gcc git tar\" &&  \\\n    microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 $INSTALL_PKGS && \\\n    microdnf clean all -y\n",
                      "markdown": "`ARG GO_FIPS_TAG=go1.22.7-1-openssl-fips\nARG DNF_OPTS\n\nRUN INSTALL_PKGS=\"openssl-devel glibc-devel gcc git tar\" &&  \\\n    microdnf update -y && \\\n    microdnf ${DNF_OPTS} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 $INSTALL_PKGS && \\\n    microdnf clean all -y\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitaly-init-cgroups/Dockerfile"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 50,
                  "endLine": 13,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# pull contents from builder\nCOPY --from=gitaly /usr/local/bin/setup_cgroups /\n\n# Set the command to run when the container starts\nCMD [\"/setup_cgroups\"]\n",
                    "rendered": {
                      "text": "# pull contents from builder\nCOPY --from=gitaly /usr/local/bin/setup_cgroups /\n\n# Set the command to run when the container starts\nCMD [\"/setup_cgroups\"]\n",
                      "markdown": "`# pull contents from builder\nCOPY --from=gitaly /usr/local/bin/setup_cgroups /\n\n# Set the command to run when the container starts\nCMD [\"/setup_cgroups\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/webservice-config/secrets.yml"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 2,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "---\nproduction:\n  secret_key_base: 963365e80c3b379754ab1277d54fbb5e68a4833131f03e4a097165568e900190d5e0f57d565f0b611be69f70c8cfbd06f47fbf7e9966793b6bc802c8d323efb6\n  otp_key_base: e62021080e20756e9a650079ac9794a88f0d312331512d639e468d8aaf8bd44b45322884197f3cd5bd5c699fe4949aee29bb8fa9d749260cac37f7294c04d1de\n  db_key_base: 76fd4c76ad88731035c849ba42fbe298742776b52a2c27c25181a08a8d4b1755ae19870fec0bca8b21060a2f1b960ff958ba861e25580a1474e1f3bb63152883\n  openid_connect_signing_key: |\n",
                    "rendered": {
                      "text": "---\nproduction:\n  secret_key_base: 963365e80c3b379754ab1277d54fbb5e68a4833131f03e4a097165568e900190d5e0f57d565f0b611be69f70c8cfbd06f47fbf7e9966793b6bc802c8d323efb6\n  otp_key_base: e62021080e20756e9a650079ac9794a88f0d312331512d639e468d8aaf8bd44b45322884197f3cd5bd5c699fe4949aee29bb8fa9d749260cac37f7294c04d1de\n  db_key_base: 76fd4c76ad88731035c849ba42fbe298742776b52a2c27c25181a08a8d4b1755ae19870fec0bca8b21060a2f1b960ff958ba861e25580a1474e1f3bb63152883\n  openid_connect_signing_key: |\n",
                      "markdown": "`---\nproduction:\n  secret_key_base: 963365e80c3b379754ab1277d54fbb5e68a4833131f03e4a097165568e900190d5e0f57d565f0b611be69f70c8cfbd06f47fbf7e9966793b6bc802c8d323efb6\n  otp_key_base: e62021080e20756e9a650079ac9794a88f0d312331512d639e468d8aaf8bd44b45322884197f3cd5bd5c699fe4949aee29bb8fa9d749260cac37f7294c04d1de\n  db_key_base: 76fd4c76ad88731035c849ba42fbe298742776b52a2c27c25181a08a8d4b1755ae19870fec0bca8b21060a2f1b960ff958ba861e25580a1474e1f3bb63152883\n  openid_connect_signing_key: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/webservice-config/database.yml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 4,
                  "endLine": 21,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    database: gitlabhq_production\n    pool: 10\n    username: gitlab\n    password: meercat\n    host: postgres\n    port: 5432\n    database_tasks: false\n",
                    "rendered": {
                      "text": "    database: gitlabhq_production\n    pool: 10\n    username: gitlab\n    password: meercat\n    host: postgres\n    port: 5432\n    database_tasks: false\n",
                      "markdown": "`    database: gitlabhq_production\n    pool: 10\n    username: gitlab\n    password: meercat\n    host: postgres\n    port: 5432\n    database_tasks: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/webservice-config/database.yml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    database: gitlabhq_production\n    pool: 10\n    username: gitlab\n    password: meercat\n    host: postgres\n    port: 5432\n    # load_balancing:\n",
                    "rendered": {
                      "text": "    database: gitlabhq_production\n    pool: 10\n    username: gitlab\n    password: meercat\n    host: postgres\n    port: 5432\n    # load_balancing:\n",
                      "markdown": "`    database: gitlabhq_production\n    pool: 10\n    username: gitlab\n    password: meercat\n    host: postgres\n    port: 5432\n    # load_balancing:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/dev/webservice-config/gitlab.yml.erb"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 29,
                  "endLine": 79,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    client_path: /home/git/gitaly/bin\n    token: gitalytokengitalytoken\n  repositories:\n    storages: # You must have at least a `default` storage path.\n      default:\n        path: /var/opt/gitlab/repo\n        gitaly_address: tcp://gitaly:8075 # TCP connections are supported too (e.g. tcp://host:port)\n",
                    "rendered": {
                      "text": "    client_path: /home/git/gitaly/bin\n    token: gitalytokengitalytoken\n  repositories:\n    storages: # You must have at least a `default` storage path.\n      default:\n        path: /var/opt/gitlab/repo\n        gitaly_address: tcp://gitaly:8075 # TCP connections are supported too (e.g. tcp://host:port)\n",
                      "markdown": "`    client_path: /home/git/gitaly/bin\n    token: gitalytokengitalytoken\n  repositories:\n    storages: # You must have at least a `default` storage path.\n      default:\n        path: /var/opt/gitlab/repo\n        gitaly_address: tcp://gitaly:8075 # TCP connections are supported too (e.g. tcp://host:port)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 6,
                  "endLine": 24,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && mkdir /assets/licenses \\\n    && cp LICENSE /assets/licenses/GitLab.txt \\\n    && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n    && cp -R bin/ /assets/usr/local\n",
                    "rendered": {
                      "text": "    && mkdir /assets/licenses \\\n    && cp LICENSE /assets/licenses/GitLab.txt \\\n    && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n    && cp -R bin/ /assets/usr/local\n",
                      "markdown": "`    && mkdir /assets/licenses \\\n    && cp LICENSE /assets/licenses/GitLab.txt \\\n    && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n    && cp -R bin/ /assets/usr/local\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6,
                  "endLine": 22,
                  "endColumn": 10,
                  "snippet": {
                    "text": "      --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n    && cd ${REGISTRY_SOURCE_PATH} \\\n    && mkdir /assets/licenses \\\n    && cp LICENSE /assets/licenses/GitLab.txt \\\n    && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n    && cp -R bin/ /assets/usr/local\n",
                    "rendered": {
                      "text": "      --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n    && cd ${REGISTRY_SOURCE_PATH} \\\n    && mkdir /assets/licenses \\\n    && cp LICENSE /assets/licenses/GitLab.txt \\\n    && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n    && cp -R bin/ /assets/usr/local\n",
                      "markdown": "`      --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n    && cd ${REGISTRY_SOURCE_PATH} \\\n    && mkdir /assets/licenses \\\n    && cp LICENSE /assets/licenses/GitLab.txt \\\n    && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n    && cp -R bin/ /assets/usr/local\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 6,
                  "endLine": 18,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nRUN mkdir -p /assets/usr/local \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n      --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n    && cd ${REGISTRY_SOURCE_PATH} \\\n    && mkdir /assets/licenses \\\n",
                    "rendered": {
                      "text": "\nRUN mkdir -p /assets/usr/local \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n      --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n    && cd ${REGISTRY_SOURCE_PATH} \\\n    && mkdir /assets/licenses \\\n",
                      "markdown": "`\nRUN mkdir -p /assets/usr/local \\\n    && ln -sf /usr/local/go/bin/* /usr/local/bin \\\n    && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n      --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n    && cd ${REGISTRY_SOURCE_PATH} \\\n    && mkdir /assets/licenses \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile.build.ubi"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 12,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG REGISTRY_PROJECT=container-registry\nARG GOPATH=/go\nARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n",
                    "rendered": {
                      "text": "ARG REGISTRY_PROJECT=container-registry\nARG GOPATH=/go\nARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n",
                      "markdown": "`ARG REGISTRY_PROJECT=container-registry\nARG GOPATH=/go\nARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\n\nENV GOTOOLCHAIN=local\n\nADD gitlab-go.tar.gz /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 24,
                  "endLine": 43,
                  "endColumn": 32,
                  "snippet": {
                    "text": "RUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\nCOPY --from=builder /usr/local/bin/registry /bin/registry\nCOPY scripts/ /scripts/\n",
                    "rendered": {
                      "text": "RUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\nCOPY --from=builder /usr/local/bin/registry /bin/registry\nCOPY scripts/ /scripts/\n",
                      "markdown": "`RUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\nCOPY --from=builder /usr/local/bin/registry /bin/registry\nCOPY scripts/ /scripts/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 52,
                  "endLine": 55,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 53,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11,
                  "endLine": 40,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ARG GITLAB_USER=git\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                    "rendered": {
                      "text": "ARG GITLAB_USER=git\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                      "markdown": "`ARG GITLAB_USER=git\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 12,
                  "endLine": 22,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n",
                    "rendered": {
                      "text": "\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n",
                      "markdown": "`\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 41,
                  "endLine": 51,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nUSER $GITLAB_USER:$GITLAB_USER\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\n\nCMD [\"/scripts/process-wrapper\"]\n\n",
                    "rendered": {
                      "text": "\nUSER $GITLAB_USER:$GITLAB_USER\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\n\nCMD [\"/scripts/process-wrapper\"]\n\n",
                      "markdown": "`\nUSER $GITLAB_USER:$GITLAB_USER\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\n\nCMD [\"/scripts/process-wrapper\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 50,
                  "endColumn": 4,
                  "snippet": {
                    "text": "COPY scripts/ /scripts/\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\n\nCMD [\"/scripts/process-wrapper\"]\n",
                    "rendered": {
                      "text": "COPY scripts/ /scripts/\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\n\nCMD [\"/scripts/process-wrapper\"]\n",
                      "markdown": "`COPY scripts/ /scripts/\n\nUSER $GITLAB_USER:$GITLAB_USER\n\nENV CONFIG_DIRECTORY=/etc/docker/registry\nENV CONFIG_FILENAME=config.yml\n\nCMD [\"/scripts/process-wrapper\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 63,
                  "endLine": 41,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n",
                    "rendered": {
                      "text": "\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n",
                      "markdown": "`\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 4,
                  "endLine": 41,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n",
                    "rendered": {
                      "text": "\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n",
                      "markdown": "`\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 3,
                  "endLine": 40,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ARG GITLAB_USER=git\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                    "rendered": {
                      "text": "ARG GITLAB_USER=git\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n",
                      "markdown": "`ARG GITLAB_USER=git\n\n# create gitlab user\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends ca-certificates curl \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && adduser --disabled-password --gecos 'GitLab' ${GITLAB_USER}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 4,
                  "endLine": 30,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n  && cp bin/registry /usr/local/bin/registry \\\n  && rm -rf ${GOPATH} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf /var/lib/apt/lists/*\n\n## FINAL IMAGE ##\n",
                    "rendered": {
                      "text": "  && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n  && cp bin/registry /usr/local/bin/registry \\\n  && rm -rf ${GOPATH} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf /var/lib/apt/lists/*\n\n## FINAL IMAGE ##\n",
                      "markdown": "`  && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n  && cp bin/registry /usr/local/bin/registry \\\n  && rm -rf ${GOPATH} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf /var/lib/apt/lists/*\n\n## FINAL IMAGE ##\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 4,
                  "endLine": 28,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n  && cd ${REGISTRY_SOURCE_PATH} \\\n  && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n  && cp bin/registry /usr/local/bin/registry \\\n  && rm -rf ${GOPATH} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf /var/lib/apt/lists/*\n",
                    "rendered": {
                      "text": "    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n  && cd ${REGISTRY_SOURCE_PATH} \\\n  && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n  && cp bin/registry /usr/local/bin/registry \\\n  && rm -rf ${GOPATH} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf /var/lib/apt/lists/*\n",
                      "markdown": "`    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n  && cd ${REGISTRY_SOURCE_PATH} \\\n  && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n  && cp bin/registry /usr/local/bin/registry \\\n  && rm -rf ${GOPATH} \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf /var/lib/apt/lists/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 4,
                  "endLine": 24,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n  && cd ${REGISTRY_SOURCE_PATH} \\\n  && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n",
                    "rendered": {
                      "text": "  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n  && cd ${REGISTRY_SOURCE_PATH} \\\n  && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n",
                      "markdown": "`  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n  && cd ${REGISTRY_SOURCE_PATH} \\\n  && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 4,
                  "endLine": 23,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n  && cd ${REGISTRY_SOURCE_PATH} \\\n",
                    "rendered": {
                      "text": "RUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n  && cd ${REGISTRY_SOURCE_PATH} \\\n",
                      "markdown": "`RUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n  && cd ${REGISTRY_SOURCE_PATH} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 4,
                  "endLine": 22,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n",
                    "rendered": {
                      "text": "\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n",
                      "markdown": "`\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n    --branch ${REGISTRY_VERSION} --single-branch ${REGISTRY_SOURCE_PATH} \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 6,
                  "snippet": {
                    "text": "ENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n",
                    "rendered": {
                      "text": "ENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n",
                      "markdown": "`ENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git make' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && git clone https://gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT}.git \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-container-registry/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 18,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\nARG GITLAB_BASE\nARG GITLAB_BASE_IMAGE\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git make' \\\n",
                    "rendered": {
                      "text": "ARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\nARG GITLAB_BASE\nARG GITLAB_BASE_IMAGE\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git make' \\\n",
                      "markdown": "`ARG REGISTRY_SOURCE_PATH=${GOPATH}/src/github.com/docker/distribution\nARG GITLAB_BASE\nARG GITLAB_BASE_IMAGE\n\nENV GOTOOLCHAIN=local\n\nRUN buildDeps=' \\\n  git make' \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/scripts/build"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 13,
                  "endLine": 6,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\npushd \"/build/GraphicsMagick-${GM_VERSION}\"\n\n# See options at http://www.graphicsmagick.org/INSTALL-unix.html#optional-packages-options\n./configure \\\n  --disable-openmp \\\n  --without-magick-plus-plus \\\n",
                    "rendered": {
                      "text": "\npushd \"/build/GraphicsMagick-${GM_VERSION}\"\n\n# See options at http://www.graphicsmagick.org/INSTALL-unix.html#optional-packages-options\n./configure \\\n  --disable-openmp \\\n  --without-magick-plus-plus \\\n",
                      "markdown": "`\npushd \"/build/GraphicsMagick-${GM_VERSION}\"\n\n# See options at http://www.graphicsmagick.org/INSTALL-unix.html#optional-packages-options\n./configure \\\n  --disable-openmp \\\n  --without-magick-plus-plus \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/scripts/download"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 29,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  gpg --recv-key $_SIGNATURE_KEY\n  gpg graphicsmagick.tarball.sig\nfi\n\ntar xf graphicsmagick.tarball\n\npopd # from /build",
                    "rendered": {
                      "text": "  gpg --recv-key $_SIGNATURE_KEY\n  gpg graphicsmagick.tarball.sig\nfi\n\ntar xf graphicsmagick.tarball\n\npopd # from /build",
                      "markdown": "`  gpg --recv-key $_SIGNATURE_KEY\n  gpg graphicsmagick.tarball.sig\nfi\n\ntar xf graphicsmagick.tarball\n\npopd # from /build`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/scripts/download"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 1,
                  "endLine": 24,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n# Download & verify signature\nif [ -z \"$_SIGNATURE_ENFORCE\" ] && [ -z \"$_SIGNATURE_KEY\" ] ; then\n  curl --retry 6 -fLsS -o graphicsmagick.tarball.sig $GM_SIGNATURE_URL\n  gpg --recv-key $_SIGNATURE_KEY\n  gpg graphicsmagick.tarball.sig\nfi\n",
                    "rendered": {
                      "text": "\n# Download & verify signature\nif [ -z \"$_SIGNATURE_ENFORCE\" ] && [ -z \"$_SIGNATURE_KEY\" ] ; then\n  curl --retry 6 -fLsS -o graphicsmagick.tarball.sig $GM_SIGNATURE_URL\n  gpg --recv-key $_SIGNATURE_KEY\n  gpg graphicsmagick.tarball.sig\nfi\n",
                      "markdown": "`\n# Download & verify signature\nif [ -z \"$_SIGNATURE_ENFORCE\" ] && [ -z \"$_SIGNATURE_KEY\" ] ; then\n  curl --retry 6 -fLsS -o graphicsmagick.tarball.sig $GM_SIGNATURE_URL\n  gpg --recv-key $_SIGNATURE_KEY\n  gpg graphicsmagick.tarball.sig\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/scripts/download"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 19,
                  "endLine": 14,
                  "endColumn": 5,
                  "snippet": {
                    "text": "set -exo pipefail\n\npushd /build\n# Downloads sources\ncurl --retry 6 -fLsS -o graphicsmagick.tarball $GM_SOURCE_URL\n\n# Verify checksum\nif [ \"$GM_CHECKSUM_SHA256\" ]; then\n",
                    "rendered": {
                      "text": "set -exo pipefail\n\npushd /build\n# Downloads sources\ncurl --retry 6 -fLsS -o graphicsmagick.tarball $GM_SOURCE_URL\n\n# Verify checksum\nif [ \"$GM_CHECKSUM_SHA256\" ]; then\n",
                      "markdown": "`set -exo pipefail\n\npushd /build\n# Downloads sources\ncurl --retry 6 -fLsS -o graphicsmagick.tarball $GM_SOURCE_URL\n\n# Verify checksum\nif [ \"$GM_CHECKSUM_SHA256\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/scripts/download"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/bin/bash\n# This script designed to download and verify the sources of GraphicsMagick\n# Items from environment:\n# - GM_SOURCE_URL - complete URL of the source tarball\n# - GM_SIGNATURE_URL - complete URL of the detatched signature\n",
                    "rendered": {
                      "text": "#!/bin/bash\n# This script designed to download and verify the sources of GraphicsMagick\n# Items from environment:\n# - GM_SOURCE_URL - complete URL of the source tarball\n# - GM_SIGNATURE_URL - complete URL of the detatched signature\n",
                      "markdown": "`#!/bin/bash\n# This script designed to download and verify the sources of GraphicsMagick\n# Items from environment:\n# - GM_SOURCE_URL - complete URL of the source tarball\n# - GM_SIGNATURE_URL - complete URL of the detatched signature\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/scripts/dependencies"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 7,
                  "endLine": 5,
                  "snippet": {
                    "text": "#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\nutilities=\"ca-certificates curl gpg xz-utils\"\ntools=\"build-essential\"\ndependencies=\"libpng-dev libpng16-16 libturbojpeg0-dev libturbojpeg0 zlib1g-dev zlib1g libtiff-dev libtiff6\"\n",
                    "rendered": {
                      "text": "#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\nutilities=\"ca-certificates curl gpg xz-utils\"\ntools=\"build-essential\"\ndependencies=\"libpng-dev libpng16-16 libturbojpeg0-dev libturbojpeg0 zlib1g-dev zlib1g libtiff-dev libtiff6\"\n",
                      "markdown": "`#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\nutilities=\"ca-certificates curl gpg xz-utils\"\ntools=\"build-essential\"\ndependencies=\"libpng-dev libpng16-16 libturbojpeg0-dev libturbojpeg0 zlib1g-dev zlib1g libtiff-dev libtiff6\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/scripts/dependencies"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 51,
                  "endLine": 11,
                  "endColumn": 8,
                  "snippet": {
                    "text": "tools=\"build-essential\"\ndependencies=\"libpng-dev libpng16-16 libturbojpeg0-dev libturbojpeg0 zlib1g-dev zlib1g libtiff-dev libtiff6\"\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends \\\n  ${utilities} ${tools} ${dependencies}\n",
                    "rendered": {
                      "text": "tools=\"build-essential\"\ndependencies=\"libpng-dev libpng16-16 libturbojpeg0-dev libturbojpeg0 zlib1g-dev zlib1g libtiff-dev libtiff6\"\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends \\\n  ${utilities} ${tools} ${dependencies}\n",
                      "markdown": "`tools=\"build-essential\"\ndependencies=\"libpng-dev libpng16-16 libturbojpeg0-dev libturbojpeg0 zlib1g-dev zlib1g libtiff-dev libtiff6\"\n\n# Install tools and libaries needed for compilation\napt-get install -q -y --no-install-recommends \\\n  ${utilities} ${tools} ${dependencies}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/scripts/dependencies"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 26,
                  "endLine": 6,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\napt-get update\n\nutilities=\"ca-certificates curl gpg xz-utils\"\ntools=\"build-essential\"\ndependencies=\"libpng-dev libpng16-16 libturbojpeg0-dev libturbojpeg0 zlib1g-dev zlib1g libtiff-dev libtiff6\"\n\n",
                    "rendered": {
                      "text": "\napt-get update\n\nutilities=\"ca-certificates curl gpg xz-utils\"\ntools=\"build-essential\"\ndependencies=\"libpng-dev libpng16-16 libturbojpeg0-dev libturbojpeg0 zlib1g-dev zlib1g libtiff-dev libtiff6\"\n\n",
                      "markdown": "`\napt-get update\n\nutilities=\"ca-certificates curl gpg xz-utils\"\ntools=\"build-essential\"\ndependencies=\"libpng-dev libpng16-16 libturbojpeg0-dev libturbojpeg0 zlib1g-dev zlib1g libtiff-dev libtiff6\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-graphicsmagick/scripts/dependencies"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\nutilities=\"ca-certificates curl gpg xz-utils\"\ntools=\"build-essential\"\n",
                    "rendered": {
                      "text": "#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\nutilities=\"ca-certificates curl gpg xz-utils\"\ntools=\"build-essential\"\n",
                      "markdown": "`#!/bin/bash\nDEBIAN_FRONTEND=noninteractive\n\napt-get update\n\nutilities=\"ca-certificates curl gpg xz-utils\"\ntools=\"build-essential\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_accounts_umask_etc_profile.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 6,
                  "snippet": {
                    "text": "var_accounts_user_umask='027'\n\ngrep -q umask /etc/profile && \\\n  sed -i \"s/umask.*/umask $var_accounts_user_umask/g\" /etc/profile\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/profile\nfi\n",
                    "rendered": {
                      "text": "var_accounts_user_umask='027'\n\ngrep -q umask /etc/profile && \\\n  sed -i \"s/umask.*/umask $var_accounts_user_umask/g\" /etc/profile\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/profile\nfi\n",
                      "markdown": "`var_accounts_user_umask='027'\n\ngrep -q umask /etc/profile && \\\n  sed -i \"s/umask.*/umask $var_accounts_user_umask/g\" /etc/profile\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/profile\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_accounts_umask_etc_profile.sh"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 8,
                  "endColumn": 5,
                  "snippet": {
                    "text": "(>&2 echo \"Remediating: 'xccdf_org.ssgproject.content_rule_accounts_umask_etc_profile'\")\n\nvar_accounts_user_umask='027'\n\ngrep -q umask /etc/profile && \\\n  sed -i \"s/umask.*/umask $var_accounts_user_umask/g\" /etc/profile\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/profile\n",
                    "rendered": {
                      "text": "(>&2 echo \"Remediating: 'xccdf_org.ssgproject.content_rule_accounts_umask_etc_profile'\")\n\nvar_accounts_user_umask='027'\n\ngrep -q umask /etc/profile && \\\n  sed -i \"s/umask.*/umask $var_accounts_user_umask/g\" /etc/profile\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/profile\n",
                      "markdown": "`(>&2 echo \"Remediating: 'xccdf_org.ssgproject.content_rule_accounts_umask_etc_profile'\")\n\nvar_accounts_user_umask='027'\n\ngrep -q umask /etc/profile && \\\n  sed -i \"s/umask.*/umask $var_accounts_user_umask/g\" /etc/profile\nif ! [ $? -eq 0 ]; then\n    echo \"umask $var_accounts_user_umask\" >> /etc/profile\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_coredump_disable_storage.sh"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 8,
                  "endLine": 16,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    touch \"/etc/systemd/coredump.conf\"\nfi\ncp \"/etc/systemd/coredump.conf\" \"/etc/systemd/coredump.conf.bak\"\n# Insert at the end of the file\nprintf '%s\\n' \"Storage=none\" >> \"/etc/systemd/coredump.conf\"\n# Clean up after ourselves.\nrm \"/etc/systemd/coredump.conf.bak\"\n",
                    "rendered": {
                      "text": "    touch \"/etc/systemd/coredump.conf\"\nfi\ncp \"/etc/systemd/coredump.conf\" \"/etc/systemd/coredump.conf.bak\"\n# Insert at the end of the file\nprintf '%s\\n' \"Storage=none\" >> \"/etc/systemd/coredump.conf\"\n# Clean up after ourselves.\nrm \"/etc/systemd/coredump.conf.bak\"\n",
                      "markdown": "`    touch \"/etc/systemd/coredump.conf\"\nfi\ncp \"/etc/systemd/coredump.conf\" \"/etc/systemd/coredump.conf.bak\"\n# Insert at the end of the file\nprintf '%s\\n' \"Storage=none\" >> \"/etc/systemd/coredump.conf\"\n# Clean up after ourselves.\nrm \"/etc/systemd/coredump.conf.bak\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_coredump_disable_storage.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 3,
                  "snippet": {
                    "text": "    LC_ALL=C sed -i \"/^\\s*Storage\\s*=\\s*/Id\" \"/etc/systemd/coredump.conf\"\nelse\n    touch \"/etc/systemd/coredump.conf\"\nfi\ncp \"/etc/systemd/coredump.conf\" \"/etc/systemd/coredump.conf.bak\"\n# Insert at the end of the file\nprintf '%s\\n' \"Storage=none\" >> \"/etc/systemd/coredump.conf\"\n# Clean up after ourselves.\n",
                    "rendered": {
                      "text": "    LC_ALL=C sed -i \"/^\\s*Storage\\s*=\\s*/Id\" \"/etc/systemd/coredump.conf\"\nelse\n    touch \"/etc/systemd/coredump.conf\"\nfi\ncp \"/etc/systemd/coredump.conf\" \"/etc/systemd/coredump.conf.bak\"\n# Insert at the end of the file\nprintf '%s\\n' \"Storage=none\" >> \"/etc/systemd/coredump.conf\"\n# Clean up after ourselves.\n",
                      "markdown": "`    LC_ALL=C sed -i \"/^\\s*Storage\\s*=\\s*/Id\" \"/etc/systemd/coredump.conf\"\nelse\n    touch \"/etc/systemd/coredump.conf\"\nfi\ncp \"/etc/systemd/coredump.conf\" \"/etc/systemd/coredump.conf.bak\"\n# Insert at the end of the file\nprintf '%s\\n' \"Storage=none\" >> \"/etc/systemd/coredump.conf\"\n# Clean up after ourselves.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_coredump_disable_storage.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 17,
                  "snippet": {
                    "text": "fi\n\nif [ -e \"/etc/systemd/coredump.conf\" ] ; then\n    LC_ALL=C sed -i \"/^\\s*Storage\\s*=\\s*/Id\" \"/etc/systemd/coredump.conf\"\nelse\n    touch \"/etc/systemd/coredump.conf\"\nfi\n",
                    "rendered": {
                      "text": "fi\n\nif [ -e \"/etc/systemd/coredump.conf\" ] ; then\n    LC_ALL=C sed -i \"/^\\s*Storage\\s*=\\s*/Id\" \"/etc/systemd/coredump.conf\"\nelse\n    touch \"/etc/systemd/coredump.conf\"\nfi\n",
                      "markdown": "`fi\n\nif [ -e \"/etc/systemd/coredump.conf\" ] ; then\n    LC_ALL=C sed -i \"/^\\s*Storage\\s*=\\s*/Id\" \"/etc/systemd/coredump.conf\"\nelse\n    touch \"/etc/systemd/coredump.conf\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/hardening/xccdf_org.ssgproject.content_rule_use_pam_wheel_for_su.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 3,
                  "endLine": 7,
                  "endColumn": 8,
                  "snippet": {
                    "text": "(>&2 echo \"Remediating: '\txccdf_org.ssgproject.content_rule_use_pam_wheel_for_su'\")\n\nif [ -e \"/etc/pam.d/su\" ]; then\n    sed '/^[[:space:]]*#[[:space:]]*auth[[:space:]]\\+required[[:space:]]\\+pam_wheel\\.so[[:space:]]\\+use_uid$/s/^[[:space:]]*#//' \\\n      -i /etc/pam.d/su\nfi\n",
                    "rendered": {
                      "text": "(>&2 echo \"Remediating: '\txccdf_org.ssgproject.content_rule_use_pam_wheel_for_su'\")\n\nif [ -e \"/etc/pam.d/su\" ]; then\n    sed '/^[[:space:]]*#[[:space:]]*auth[[:space:]]\\+required[[:space:]]\\+pam_wheel\\.so[[:space:]]\\+use_uid$/s/^[[:space:]]*#//' \\\n      -i /etc/pam.d/su\nfi\n",
                      "markdown": "`(>&2 echo \"Remediating: '\txccdf_org.ssgproject.content_rule_use_pam_wheel_for_su'\")\n\nif [ -e \"/etc/pam.d/su\" ]; then\n    sed '/^[[:space:]]*#[[:space:]]*auth[[:space:]]\\+required[[:space:]]\\+pam_wheel\\.so[[:space:]]\\+use_uid$/s/^[[:space:]]*#//' \\\n      -i /etc/pam.d/su\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/danger/go_upgrade/Dangerfile"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\ndiff = git.diff_for_file(\"ci_files/variables.yml\")\n\nif diff && diff.patch =~ /[+-]+.*GO_VERSION/\n    warn format(MESSAGE)\nend\n",
                    "rendered": {
                      "text": "\ndiff = git.diff_for_file(\"ci_files/variables.yml\")\n\nif diff && diff.patch =~ /[+-]+.*GO_VERSION/\n    warn format(MESSAGE)\nend\n",
                      "markdown": "`\ndiff = git.diff_for_file(\"ci_files/variables.yml\")\n\nif diff && diff.patch =~ /[+-]+.*GO_VERSION/\n    warn format(MESSAGE)\nend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/danger/go_upgrade/Dangerfile"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 8,
                  "endColumn": 5,
                  "snippet": {
                    "text": "Please make sure this merge request follows all standards established\nwithin the [Go upgrade guide](https://docs.gitlab.com/ee/development/go_guide/go_upgrade.html).\nMSG\n\ndiff = git.diff_for_file(\"ci_files/variables.yml\")\n\nif diff && diff.patch =~ /[+-]+.*GO_VERSION/\n    warn format(MESSAGE)\n",
                    "rendered": {
                      "text": "Please make sure this merge request follows all standards established\nwithin the [Go upgrade guide](https://docs.gitlab.com/ee/development/go_guide/go_upgrade.html).\nMSG\n\ndiff = git.diff_for_file(\"ci_files/variables.yml\")\n\nif diff && diff.patch =~ /[+-]+.*GO_VERSION/\n    warn format(MESSAGE)\n",
                      "markdown": "`Please make sure this merge request follows all standards established\nwithin the [Go upgrade guide](https://docs.gitlab.com/ee/development/go_guide/go_upgrade.html).\nMSG\n\ndiff = git.diff_for_file(\"ci_files/variables.yml\")\n\nif diff && diff.patch =~ /[+-]+.*GO_VERSION/\n    warn format(MESSAGE)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/scripts/set-config"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 3,
                  "endLine": 37,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  echo \"Copying other config files found in $TEMPLATE_DIRECTORY to $CONFIG_DIRECTORY\"\n  for configfile in ${TEMPLATE_DIRECTORY}/*.{yml,yaml,toml,rb,json}; do\n    echo \"Copying $(basename $configfile) into ${CONFIG_DIRECTORY}\"\n    cp \"$configfile\" \"$CONFIG_DIRECTORY/\"\n  done\nfi\n\n",
                    "rendered": {
                      "text": "  echo \"Copying other config files found in $TEMPLATE_DIRECTORY to $CONFIG_DIRECTORY\"\n  for configfile in ${TEMPLATE_DIRECTORY}/*.{yml,yaml,toml,rb,json}; do\n    echo \"Copying $(basename $configfile) into ${CONFIG_DIRECTORY}\"\n    cp \"$configfile\" \"$CONFIG_DIRECTORY/\"\n  done\nfi\n\n",
                      "markdown": "`  echo \"Copying other config files found in $TEMPLATE_DIRECTORY to $CONFIG_DIRECTORY\"\n  for configfile in ${TEMPLATE_DIRECTORY}/*.{yml,yaml,toml,rb,json}; do\n    echo \"Copying $(basename $configfile) into ${CONFIG_DIRECTORY}\"\n    cp \"$configfile\" \"$CONFIG_DIRECTORY/\"\n  done\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/scripts/exec-env"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 3,
                  "endLine": 5,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nENVIRONMENT_DIR=/etc/gitlab/environment\nif [ -d $ENVIRONMENT_DIR ]; then\n  # find all the files, export their content under their name.\n  for f in $(find -L $ENVIRONMENT_DIR -maxdepth 1 -type f) ; do\n    size=$(stat -c%s \"$f\")\n    if [ \"$size\" -gt 0 ]; then\n",
                    "rendered": {
                      "text": "\nENVIRONMENT_DIR=/etc/gitlab/environment\nif [ -d $ENVIRONMENT_DIR ]; then\n  # find all the files, export their content under their name.\n  for f in $(find -L $ENVIRONMENT_DIR -maxdepth 1 -type f) ; do\n    size=$(stat -c%s \"$f\")\n    if [ \"$size\" -gt 0 ]; then\n",
                      "markdown": "`\nENVIRONMENT_DIR=/etc/gitlab/environment\nif [ -d $ENVIRONMENT_DIR ]; then\n  # find all the files, export their content under their name.\n  for f in $(find -L $ENVIRONMENT_DIR -maxdepth 1 -type f) ; do\n    size=$(stat -c%s \"$f\")\n    if [ \"$size\" -gt 0 ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/security-harness"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 13,
                  "endLine": 96,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n    exit 1\n  else\n    # No hook update needed, just toggle\n    toggle\n  end\nend\n",
                    "rendered": {
                      "text": "\n    exit 1\n  else\n    # No hook update needed, just toggle\n    toggle\n  end\nend\n",
                      "markdown": "`\n    exit 1\n  else\n    # No hook update needed, just toggle\n    toggle\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/security-harness"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 40,
                  "endLine": 86,
                  "endColumn": 48,
                  "snippet": {
                    "text": "  dest_sum   = Digest::SHA256.file(HOOK_PATH).hexdigest\n\n  if previous_version?(dest_sum)\n    # Upgrading from a previous version, update in-place\n    write_hook\n    toggle\n  elsif source_sum != dest_sum\n",
                    "rendered": {
                      "text": "  dest_sum   = Digest::SHA256.file(HOOK_PATH).hexdigest\n\n  if previous_version?(dest_sum)\n    # Upgrading from a previous version, update in-place\n    write_hook\n    toggle\n  elsif source_sum != dest_sum\n",
                      "markdown": "`  dest_sum   = Digest::SHA256.file(HOOK_PATH).hexdigest\n\n  if previous_version?(dest_sum)\n    # Upgrading from a previous version, update in-place\n    write_hook\n    toggle\n  elsif source_sum != dest_sum\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/security-harness"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 35,
                  "endLine": 92,
                  "endColumn": 43,
                  "snippet": {
                    "text": "  elsif source_sum != dest_sum\n    # Pre-existing hook we didn't create; do nothing\n    puts \"#{SHELL_RED}#{HOOK_PATH} exists and is different from our hook!\"\n    puts \"Remove it and re-run this script to continue.#{SHELL_CLEAR}\"\n\n    exit 1\n  else\n",
                    "rendered": {
                      "text": "  elsif source_sum != dest_sum\n    # Pre-existing hook we didn't create; do nothing\n    puts \"#{SHELL_RED}#{HOOK_PATH} exists and is different from our hook!\"\n    puts \"Remove it and re-run this script to continue.#{SHELL_CLEAR}\"\n\n    exit 1\n  else\n",
                      "markdown": "`  elsif source_sum != dest_sum\n    # Pre-existing hook we didn't create; do nothing\n    puts \"#{SHELL_RED}#{HOOK_PATH} exists and is different from our hook!\"\n    puts \"Remove it and re-run this script to continue.#{SHELL_CLEAR}\"\n\n    exit 1\n  else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/security-harness"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 47,
                  "endLine": 71,
                  "endColumn": 55,
                  "snippet": {
                    "text": "# script that differs from the current version, as long as it's an old one and\n# not custom.\ndef previous_version?(dest_sum)\n  # SHA256 hashes of previous iterations of the script contained in `DATA`\n  %w[\n    010bf0363a911ebab2bd5728d80795ed02388da51815f0b2530d08ae8ac574f0\n  ].include?(dest_sum)\n",
                    "rendered": {
                      "text": "# script that differs from the current version, as long as it's an old one and\n# not custom.\ndef previous_version?(dest_sum)\n  # SHA256 hashes of previous iterations of the script contained in `DATA`\n  %w[\n    010bf0363a911ebab2bd5728d80795ed02388da51815f0b2530d08ae8ac574f0\n  ].include?(dest_sum)\n",
                      "markdown": "`# script that differs from the current version, as long as it's an old one and\n# not custom.\ndef previous_version?(dest_sum)\n  # SHA256 hashes of previous iterations of the script contained in `DATA`\n  %w[\n    010bf0363a911ebab2bd5728d80795ed02388da51815f0b2530d08ae8ac574f0\n  ].include?(dest_sum)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/security-harness"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 1,
                  "endLine": 68,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# If we were to change the script and then check for a pre-existing hook before\n# writing, the check would fail even if the user had an unmodified version of\n# the old hook. Checking previous version hashes allows us to safely overwrite a\n# script that differs from the current version, as long as it's an old one and\n# not custom.\ndef previous_version?(dest_sum)\n  # SHA256 hashes of previous iterations of the script contained in `DATA`\n",
                    "rendered": {
                      "text": "# If we were to change the script and then check for a pre-existing hook before\n# writing, the check would fail even if the user had an unmodified version of\n# the old hook. Checking previous version hashes allows us to safely overwrite a\n# script that differs from the current version, as long as it's an old one and\n# not custom.\ndef previous_version?(dest_sum)\n  # SHA256 hashes of previous iterations of the script contained in `DATA`\n",
                      "markdown": "`# If we were to change the script and then check for a pre-existing hook before\n# writing, the check would fail even if the user had an unmodified version of\n# the old hook. Checking previous version hashes allows us to safely overwrite a\n# script that differs from the current version, as long as it's an old one and\n# not custom.\ndef previous_version?(dest_sum)\n  # SHA256 hashes of previous iterations of the script contained in `DATA`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/security-harness"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 26,
                  "endLine": 65,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  end\nend\n\n# If we were to change the script and then check for a pre-existing hook before\n# writing, the check would fail even if the user had an unmodified version of\n# the old hook. Checking previous version hashes allows us to safely overwrite a\n# script that differs from the current version, as long as it's an old one and\n",
                    "rendered": {
                      "text": "  end\nend\n\n# If we were to change the script and then check for a pre-existing hook before\n# writing, the check would fail even if the user had an unmodified version of\n# the old hook. Checking previous version hashes allows us to safely overwrite a\n# script that differs from the current version, as long as it's an old one and\n",
                      "markdown": "`  end\nend\n\n# If we were to change the script and then check for a pre-existing hook before\n# writing, the check would fail even if the user had an unmodified version of\n# the old hook. Checking previous version hashes allows us to safely overwrite a\n# script that differs from the current version, as long as it's an old one and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/security-harness"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env ruby\n\n# frozen_string_literal: true\n\nrequire 'digest'\n",
                    "rendered": {
                      "text": "#!/usr/bin/env ruby\n\n# frozen_string_literal: true\n\nrequire 'digest'\n",
                      "markdown": "`#!/usr/bin/env ruby\n\n# frozen_string_literal: true\n\nrequire 'digest'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/ubi_dependencies.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 6,
                  "endLine": 12,
                  "snippet": {
                    "text": "if [ -f /usr/bin/microdnf ]; then\n  DNF=microdnf\nfi\n${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n",
                    "rendered": {
                      "text": "if [ -f /usr/bin/microdnf ]; then\n  DNF=microdnf\nfi\n${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n",
                      "markdown": "`if [ -f /usr/bin/microdnf ]; then\n  DNF=microdnf\nfi\n${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/ubi_dependencies.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 6,
                  "endColumn": 9,
                  "snippet": {
                    "text": "package_dependencies=()\nexternal_dependencies=()\n\n# Update DNF / RPM package data\nDNF=dnf\nif [ -f /usr/bin/microdnf ]; then\n  DNF=microdnf\n",
                    "rendered": {
                      "text": "package_dependencies=()\nexternal_dependencies=()\n\n# Update DNF / RPM package data\nDNF=dnf\nif [ -f /usr/bin/microdnf ]; then\n  DNF=microdnf\n",
                      "markdown": "`package_dependencies=()\nexternal_dependencies=()\n\n# Update DNF / RPM package data\nDNF=dnf\nif [ -f /usr/bin/microdnf ]; then\n  DNF=microdnf\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/ubi_dependencies.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 62,
                  "endLine": 41,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\necho\necho \"## EXTERNAL DEPENDENCIES\"\nfor f in \"${external_dependencies[@]}\"; do echo \"${f}\"; done | sort -u\n",
                    "rendered": {
                      "text": "\necho\necho \"## EXTERNAL DEPENDENCIES\"\nfor f in \"${external_dependencies[@]}\"; do echo \"${f}\"; done | sort -u\n",
                      "markdown": "`\necho\necho \"## EXTERNAL DEPENDENCIES\"\nfor f in \"${external_dependencies[@]}\"; do echo \"${f}\"; done | sort -u\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/ubi_dependencies.sh"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 61,
                  "endLine": 37,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\necho\necho \"## PACKAGES NEEDED\"\nfor f in \"${package_dependencies[@]}\"; do echo \"${f}\"; done | sort -u\n\necho\necho \"## EXTERNAL DEPENDENCIES\"\n",
                    "rendered": {
                      "text": "\necho\necho \"## PACKAGES NEEDED\"\nfor f in \"${package_dependencies[@]}\"; do echo \"${f}\"; done | sort -u\n\necho\necho \"## EXTERNAL DEPENDENCIES\"\n",
                      "markdown": "`\necho\necho \"## PACKAGES NEEDED\"\nfor f in \"${package_dependencies[@]}\"; do echo \"${f}\"; done | sort -u\n\necho\necho \"## EXTERNAL DEPENDENCIES\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/ubi_dependencies.sh"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\necho \"## Walking linked files\"\nfor filename in $external_files_needed ; do\n",
                    "rendered": {
                      "text": "# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\necho \"## Walking linked files\"\nfor filename in $external_files_needed ; do\n",
                      "markdown": "`# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\necho \"## Walking linked files\"\nfor filename in $external_files_needed ; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/ubi_dependencies.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 178,
                  "endLine": 14,
                  "endColumn": 184,
                  "snippet": {
                    "text": "${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\n",
                    "rendered": {
                      "text": "${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\n",
                      "markdown": "`${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/ubi_dependencies.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 171,
                  "endLine": 14,
                  "endColumn": 177,
                  "snippet": {
                    "text": "${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\n",
                    "rendered": {
                      "text": "${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\n",
                      "markdown": "`${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/ubi_dependencies.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 121,
                  "endLine": 14,
                  "endColumn": 126,
                  "snippet": {
                    "text": "${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\n",
                    "rendered": {
                      "text": "${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\n",
                      "markdown": "`${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/ubi_dependencies.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 109,
                  "endLine": 14,
                  "endColumn": 116,
                  "snippet": {
                    "text": "${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\n",
                    "rendered": {
                      "text": "${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\n",
                      "markdown": "`${DNF} update\n\n# List out all external dependencies to Rails gems (under vendor)\nexternal_files_needed=$(find /usr/lib64/ruby/gems /srv/ /usr/local/bin/ /usr/local/lib/ -type f -executable | xargs ldd | awk 'match($0, /=> (.*) \\(0x/, m){ print m[1]}' | sort | uniq -c)\n\n# Find all packages that provide these files\necho\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/ubi_dependencies.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 19,
                  "snippet": {
                    "text": "package_dependencies=()\nexternal_dependencies=()\n\n# Update DNF / RPM package data\nDNF=dnf\nif [ -f /usr/bin/microdnf ]; then\n  DNF=microdnf\n",
                    "rendered": {
                      "text": "package_dependencies=()\nexternal_dependencies=()\n\n# Update DNF / RPM package data\nDNF=dnf\nif [ -f /usr/bin/microdnf ]; then\n  DNF=microdnf\n",
                      "markdown": "`package_dependencies=()\nexternal_dependencies=()\n\n# Update DNF / RPM package data\nDNF=dnf\nif [ -f /usr/bin/microdnf ]; then\n  DNF=microdnf\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/support/ubi_dependencies.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 8,
                  "endLine": 6,
                  "endColumn": 13,
                  "snippet": {
                    "text": "package_dependencies=()\nexternal_dependencies=()\n\n# Update DNF / RPM package data\nDNF=dnf\nif [ -f /usr/bin/microdnf ]; then\n  DNF=microdnf\n",
                    "rendered": {
                      "text": "package_dependencies=()\nexternal_dependencies=()\n\n# Update DNF / RPM package data\nDNF=dnf\nif [ -f /usr/bin/microdnf ]; then\n  DNF=microdnf\n",
                      "markdown": "`package_dependencies=()\nexternal_dependencies=()\n\n# Update DNF / RPM package data\nDNF=dnf\nif [ -f /usr/bin/microdnf ]; then\n  DNF=microdnf\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-zoekt-indexer/scripts/process-wrapper"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 104,
                  "endLine": 6,
                  "endColumn": 112,
                  "snippet": {
                    "text": "if [[ -z \"${GITLAB_URL}\" ]]; then\n  exec /bin/gitlab-zoekt-indexer -index_dir /data/index -listen \":6065\"\nelse\n  exec /bin/gitlab-zoekt-indexer -index_dir /data/index -listen \":6065\" -self_url \"$SERVICE_URL/nodes/$(hostname -f)\" -gitlab_url \"$GITLAB_URL\" -secret_path /.gitlab_shell_secret\nfi\n",
                    "rendered": {
                      "text": "if [[ -z \"${GITLAB_URL}\" ]]; then\n  exec /bin/gitlab-zoekt-indexer -index_dir /data/index -listen \":6065\"\nelse\n  exec /bin/gitlab-zoekt-indexer -index_dir /data/index -listen \":6065\" -self_url \"$SERVICE_URL/nodes/$(hostname -f)\" -gitlab_url \"$GITLAB_URL\" -secret_path /.gitlab_shell_secret\nfi\n",
                      "markdown": "`if [[ -z \"${GITLAB_URL}\" ]]; then\n  exec /bin/gitlab-zoekt-indexer -index_dir /data/index -listen \":6065\"\nelse\n  exec /bin/gitlab-zoekt-indexer -index_dir /data/index -listen \":6065\" -self_url \"$SERVICE_URL/nodes/$(hostname -f)\" -gitlab_url \"$GITLAB_URL\" -secret_path /.gitlab_shell_secret\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/decision-making.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 23,
                  "endLine": 13,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\nReviewers can assign to any maintainer and the maintainer will engage the appropriate domain expert if it does not fall within their own.\n\nIn order to continue to expand their expertise maintainers are empowered to merge changes outside their domain but that they are **highly confident** in unless:\n\n- The change cannot be reverted later\n- The change has an established process that needs to be followed (JiHu review, security, legal/license changes)\n",
                    "rendered": {
                      "text": "\nReviewers can assign to any maintainer and the maintainer will engage the appropriate domain expert if it does not fall within their own.\n\nIn order to continue to expand their expertise maintainers are empowered to merge changes outside their domain but that they are **highly confident** in unless:\n\n- The change cannot be reverted later\n- The change has an established process that needs to be followed (JiHu review, security, legal/license changes)\n",
                      "markdown": "`\nReviewers can assign to any maintainer and the maintainer will engage the appropriate domain expert if it does not fall within their own.\n\nIn order to continue to expand their expertise maintainers are empowered to merge changes outside their domain but that they are **highly confident** in unless:\n\n- The change cannot be reverted later\n- The change has an established process that needs to be followed (JiHu review, security, legal/license changes)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/decision-making.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 23,
                  "endLine": 13,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\nReviewers can assign to any maintainer and the maintainer will engage the appropriate domain expert if it does not fall within their own.\n\nIn order to continue to expand their expertise maintainers are empowered to merge changes outside their domain but that they are **highly confident** in unless:\n\n- The change cannot be reverted later\n- The change has an established process that needs to be followed (JiHu review, security, legal/license changes)\n",
                    "rendered": {
                      "text": "\nReviewers can assign to any maintainer and the maintainer will engage the appropriate domain expert if it does not fall within their own.\n\nIn order to continue to expand their expertise maintainers are empowered to merge changes outside their domain but that they are **highly confident** in unless:\n\n- The change cannot be reverted later\n- The change has an established process that needs to be followed (JiHu review, security, legal/license changes)\n",
                      "markdown": "`\nReviewers can assign to any maintainer and the maintainer will engage the appropriate domain expert if it does not fall within their own.\n\nIn order to continue to expand their expertise maintainers are empowered to merge changes outside their domain but that they are **highly confident** in unless:\n\n- The change cannot be reverted later\n- The change has an established process that needs to be followed (JiHu review, security, legal/license changes)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 52,
                  "endLine": 271,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n   ```shell\n   docker run --rm -it registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 bash\n   podman login --username <gitlab email address> --password <GitLab personal access token> registry.gitlab.com\n   preflight check container \\\n       registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips \\\n       --submit \\\n",
                    "rendered": {
                      "text": "\n   ```shell\n   docker run --rm -it registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 bash\n   podman login --username <gitlab email address> --password <GitLab personal access token> registry.gitlab.com\n   preflight check container \\\n       registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips \\\n       --submit \\\n",
                      "markdown": "`\n   ```shell\n   docker run --rm -it registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 bash\n   podman login --username <gitlab email address> --password <GitLab personal access token> registry.gitlab.com\n   preflight check container \\\n       registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips \\\n       --submit \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 46,
                  "endLine": 208,
                  "endColumn": 54,
                  "snippet": {
                    "text": "This certification job executes `build-scripts/redhat_certification.rb` and\nrequires the variable `REDHAT_API_TOKEN` to be declared. This variable is set\nto the personal token generated on the [Connect portal](https://connect.redhat.com/key-manager).\nThe token used by GitLab CI is stored in the 1Password Build vault under the\n\"Red Hat Certification Token\" entry.\n\nThe script allows the variable `GITLAB_REGISTRY_BASE_URL` (base URL where the\n",
                    "rendered": {
                      "text": "This certification job executes `build-scripts/redhat_certification.rb` and\nrequires the variable `REDHAT_API_TOKEN` to be declared. This variable is set\nto the personal token generated on the [Connect portal](https://connect.redhat.com/key-manager).\nThe token used by GitLab CI is stored in the 1Password Build vault under the\n\"Red Hat Certification Token\" entry.\n\nThe script allows the variable `GITLAB_REGISTRY_BASE_URL` (base URL where the\n",
                      "markdown": "`This certification job executes `build-scripts/redhat_certification.rb` and\nrequires the variable `REDHAT_API_TOKEN` to be declared. This variable is set\nto the personal token generated on the [Connect portal](https://connect.redhat.com/key-manager).\nThe token used by GitLab CI is stored in the 1Password Build vault under the\n\"Red Hat Certification Token\" entry.\n\nThe script allows the variable `GITLAB_REGISTRY_BASE_URL` (base URL where the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 134,
                  "endLine": 486,
                  "endColumn": 138,
                  "snippet": {
                    "text": "\n## Build dependencies\n\nA layered build process reduces both build times and image sizes. This design creates complex relationships between the images created at build time.\n\n**Diagram Key**\n\n",
                    "rendered": {
                      "text": "\n## Build dependencies\n\nA layered build process reduces both build times and image sizes. This design creates complex relationships between the images created at build time.\n\n**Diagram Key**\n\n",
                      "markdown": "`\n## Build dependencies\n\nA layered build process reduces both build times and image sizes. This design creates complex relationships between the images created at build time.\n\n**Diagram Key**\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 343,
                  "endLine": 371,
                  "endColumn": 347,
                  "snippet": {
                    "text": "\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder image (note: `microdnf` does not have the capability to install rpms like full `dnf` does). Please note the rpm package may have other dependencies that must be installed prior or at the same time to running the `rpm` command.\n\nA couple `rpm` command options that should be kept in mind:\n\n",
                    "rendered": {
                      "text": "\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder image (note: `microdnf` does not have the capability to install rpms like full `dnf` does). Please note the rpm package may have other dependencies that must be installed prior or at the same time to running the `rpm` command.\n\nA couple `rpm` command options that should be kept in mind:\n\n",
                      "markdown": "`\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder image (note: `microdnf` does not have the capability to install rpms like full `dnf` does). Please note the rpm package may have other dependencies that must be installed prior or at the same time to running the `rpm` command.\n\nA couple `rpm` command options that should be kept in mind:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 248,
                  "endLine": 308,
                  "endColumn": 252,
                  "snippet": {
                    "text": "\n#### Hardening\n\nTHe UBI based images operate a series of recommended hardening scripts from [OpenSCAP](https://www.open-scap.org/security-policies/). These are operated within the final image layers, to ensure any package or configuration changes are accounted for at the time of execution.\n\n#### Other Optional Intermediary Stages\n\n",
                    "rendered": {
                      "text": "\n#### Hardening\n\nTHe UBI based images operate a series of recommended hardening scripts from [OpenSCAP](https://www.open-scap.org/security-policies/). These are operated within the final image layers, to ensure any package or configuration changes are accounted for at the time of execution.\n\n#### Other Optional Intermediary Stages\n\n",
                      "markdown": "`\n#### Hardening\n\nTHe UBI based images operate a series of recommended hardening scripts from [OpenSCAP](https://www.open-scap.org/security-policies/). These are operated within the final image layers, to ensure any package or configuration changes are accounted for at the time of execution.\n\n#### Other Optional Intermediary Stages\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 100,
                  "endLine": 304,
                  "endColumn": 104,
                  "snippet": {
                    "text": "\n#### Final Stage\n\nThe final stage will be based on `ubi-micro`. It will also have any additional code or binaries used at runtime. Tools that are only used for the container build itself should be kept out of the final stage.\n\n#### Hardening\n\n",
                    "rendered": {
                      "text": "\n#### Final Stage\n\nThe final stage will be based on `ubi-micro`. It will also have any additional code or binaries used at runtime. Tools that are only used for the container build itself should be kept out of the final stage.\n\n#### Hardening\n\n",
                      "markdown": "`\n#### Final Stage\n\nThe final stage will be based on `ubi-micro`. It will also have any additional code or binaries used at runtime. Tools that are only used for the container build itself should be kept out of the final stage.\n\n#### Hardening\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 82,
                  "endLine": 271,
                  "snippet": {
                    "text": "1. Run the following:\n\n   ```shell\n   docker run --rm -it registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 bash\n   podman login --username <gitlab email address> --password <GitLab personal access token> registry.gitlab.com\n   preflight check container \\\n       registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips \\\n       --submit \\\n",
                    "rendered": {
                      "text": "1. Run the following:\n\n   ```shell\n   docker run --rm -it registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 bash\n   podman login --username <gitlab email address> --password <GitLab personal access token> registry.gitlab.com\n   preflight check container \\\n       registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips \\\n       --submit \\\n",
                      "markdown": "`1. Run the following:\n\n   ```shell\n   docker run --rm -it registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 bash\n   podman login --username <gitlab email address> --password <GitLab personal access token> registry.gitlab.com\n   preflight check container \\\n       registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips \\\n       --submit \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 28,
                  "endLine": 73,
                  "endColumn": 32,
                  "snippet": {
                    "text": "impact any other component.  Reference the file\n[`ci_files/variables.yml`](../ci_files/variables.yml`) as reference as to what\nwill build if left undefined.  **All variables set inside of CI overwrite what\nis configured in this _repo_ at build time.**  The content of `*_VERSION` in the\n`gitlab-org/gitlab` repo does **NOT** influence what component versions will be\nbuilt.  If you need a target component to match a given GitLab version, the\nassociated variable for that component **MUST** also be set.\n",
                    "rendered": {
                      "text": "impact any other component.  Reference the file\n[`ci_files/variables.yml`](../ci_files/variables.yml`) as reference as to what\nwill build if left undefined.  **All variables set inside of CI overwrite what\nis configured in this _repo_ at build time.**  The content of `*_VERSION` in the\n`gitlab-org/gitlab` repo does **NOT** influence what component versions will be\nbuilt.  If you need a target component to match a given GitLab version, the\nassociated variable for that component **MUST** also be set.\n",
                      "markdown": "`impact any other component.  Reference the file\n[`ci_files/variables.yml`](../ci_files/variables.yml`) as reference as to what\nwill build if left undefined.  **All variables set inside of CI overwrite what\nis configured in this _repo_ at build time.**  The content of `*_VERSION` in the\n`gitlab-org/gitlab` repo does **NOT** influence what component versions will be\nbuilt.  If you need a target component to match a given GitLab version, the\nassociated variable for that component **MUST** also be set.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 54,
                  "endLine": 59,
                  "endColumn": 58,
                  "snippet": {
                    "text": "|`GITLAB_SHELL_VERSION`|The version of [GitLab Shell](https://gitlab.com/gitlab-org/gitlab-shell) to build. This needs to be a tag reference that matches what is in the *GITLAB_SHELL_VERSION* file in the version of GitLab being built.|`v8.4.4`|\n\nThe list above is not comprehensive. Refer to the correlated pipeline jobs for\nany additional variables that may need to be specified at build time. Keep in\nmind that dependencies of that component may also require their own additional\nvariables.\n\n",
                    "rendered": {
                      "text": "|`GITLAB_SHELL_VERSION`|The version of [GitLab Shell](https://gitlab.com/gitlab-org/gitlab-shell) to build. This needs to be a tag reference that matches what is in the *GITLAB_SHELL_VERSION* file in the version of GitLab being built.|`v8.4.4`|\n\nThe list above is not comprehensive. Refer to the correlated pipeline jobs for\nany additional variables that may need to be specified at build time. Keep in\nmind that dependencies of that component may also require their own additional\nvariables.\n\n",
                      "markdown": "`|`GITLAB_SHELL_VERSION`|The version of [GitLab Shell](https://gitlab.com/gitlab-org/gitlab-shell) to build. This needs to be a tag reference that matches what is in the *GITLAB_SHELL_VERSION* file in the version of GitLab being built.|`v8.4.4`|\n\nThe list above is not comprehensive. Refer to the correlated pipeline jobs for\nany additional variables that may need to be specified at build time. Keep in\nmind that dependencies of that component may also require their own additional\nvariables.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 74,
                  "endLine": 12,
                  "snippet": {
                    "text": "\nFor releasing new versions, the repo gets tagged by the corresponding GitLab\nversion by `release-tools` and the tag pipeline running on the dev.gitlab.org\nmirror of the project will build the images and push them to dev registry. At\nthe time of publishing, these images will be copied to the com registry and\nhence will be available to the public to use.\n\n## Image Size Reduction\n",
                    "rendered": {
                      "text": "\nFor releasing new versions, the repo gets tagged by the corresponding GitLab\nversion by `release-tools` and the tag pipeline running on the dev.gitlab.org\nmirror of the project will build the images and push them to dev registry. At\nthe time of publishing, these images will be copied to the com registry and\nhence will be available to the public to use.\n\n## Image Size Reduction\n",
                      "markdown": "`\nFor releasing new versions, the repo gets tagged by the corresponding GitLab\nversion by `release-tools` and the tag pipeline running on the dev.gitlab.org\nmirror of the project will build the images and push them to dev registry. At\nthe time of publishing, these images will be copied to the com registry and\nhence will be available to the public to use.\n\n## Image Size Reduction\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 475,
                  "startColumn": 49,
                  "endLine": 475,
                  "endColumn": 57,
                  "snippet": {
                    "text": "  * gitlab-webservice-ee (final)\n  * gitlab-workhorse-ee (final)\n\nFinal images are identified by a comment in their Docker file:\n\n```\n## FINAL IMAGE ##\n",
                    "rendered": {
                      "text": "  * gitlab-webservice-ee (final)\n  * gitlab-workhorse-ee (final)\n\nFinal images are identified by a comment in their Docker file:\n\n```\n## FINAL IMAGE ##\n",
                      "markdown": "`  * gitlab-webservice-ee (final)\n  * gitlab-workhorse-ee (final)\n\nFinal images are identified by a comment in their Docker file:\n\n```\n## FINAL IMAGE ##\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 419,
                  "startColumn": 93,
                  "endLine": 420,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Please note that you need to run `prepare.sh` before running this script.\n\n`cleanup.sh` removes all the cached binary dependencies and log files that were generated or\ndownloaded by `prepare.sh` and `build.sh`. Same as the other two scripts you you can run this\nscript from any location.\n\n\n## Build stages\n",
                    "rendered": {
                      "text": "Please note that you need to run `prepare.sh` before running this script.\n\n`cleanup.sh` removes all the cached binary dependencies and log files that were generated or\ndownloaded by `prepare.sh` and `build.sh`. Same as the other two scripts you you can run this\nscript from any location.\n\n\n## Build stages\n",
                      "markdown": "`Please note that you need to run `prepare.sh` before running this script.\n\n`cleanup.sh` removes all the cached binary dependencies and log files that were generated or\ndownloaded by `prepare.sh` and `build.sh`. Same as the other two scripts you you can run this\nscript from any location.\n\n\n## Build stages\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 415,
                  "startColumn": 4,
                  "endLine": 415,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n`build.sh` builds all UBI-based images in the order that is described above. It logs the Docker\nbuild output in `.out` files and keeps track of the failed images in `failed.log` . You can run\nthis script from any location however it always logs the outputs in `build-scripts/ubi-offline/build`.\nPlease note that you need to run `prepare.sh` before running this script.\n\n`cleanup.sh` removes all the cached binary dependencies and log files that were generated or\n",
                    "rendered": {
                      "text": "\n`build.sh` builds all UBI-based images in the order that is described above. It logs the Docker\nbuild output in `.out` files and keeps track of the failed images in `failed.log` . You can run\nthis script from any location however it always logs the outputs in `build-scripts/ubi-offline/build`.\nPlease note that you need to run `prepare.sh` before running this script.\n\n`cleanup.sh` removes all the cached binary dependencies and log files that were generated or\n",
                      "markdown": "`\n`build.sh` builds all UBI-based images in the order that is described above. It logs the Docker\nbuild output in `.out` files and keeps track of the failed images in `failed.log` . You can run\nthis script from any location however it always logs the outputs in `build-scripts/ubi-offline/build`.\nPlease note that you need to run `prepare.sh` before running this script.\n\n`cleanup.sh` removes all the cached binary dependencies and log files that were generated or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 413,
                  "startColumn": 88,
                  "endLine": 414,
                  "snippet": {
                    "text": "pass the release tag, e.g. `prepare.sh v12.5.0-ubi`. This script uses `curl`, `gpg`, and `tar`\ncommands.\n\n`build.sh` builds all UBI-based images in the order that is described above. It logs the Docker\nbuild output in `.out` files and keeps track of the failed images in `failed.log` . You can run\nthis script from any location however it always logs the outputs in `build-scripts/ubi-offline/build`.\nPlease note that you need to run `prepare.sh` before running this script.\n\n",
                    "rendered": {
                      "text": "pass the release tag, e.g. `prepare.sh v12.5.0-ubi`. This script uses `curl`, `gpg`, and `tar`\ncommands.\n\n`build.sh` builds all UBI-based images in the order that is described above. It logs the Docker\nbuild output in `.out` files and keeps track of the failed images in `failed.log` . You can run\nthis script from any location however it always logs the outputs in `build-scripts/ubi-offline/build`.\nPlease note that you need to run `prepare.sh` before running this script.\n\n",
                      "markdown": "`pass the release tag, e.g. `prepare.sh v12.5.0-ubi`. This script uses `curl`, `gpg`, and `tar`\ncommands.\n\n`build.sh` builds all UBI-based images in the order that is described above. It logs the Docker\nbuild output in `.out` files and keeps track of the failed images in `failed.log` . You can run\nthis script from any location however it always logs the outputs in `build-scripts/ubi-offline/build`.\nPlease note that you need to run `prepare.sh` before running this script.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 57,
                  "endLine": 410,
                  "endColumn": 65,
                  "snippet": {
                    "text": "`prepare.sh` downloads, verifies, and extracts the binary dependencies into the right places.\nIt ensures that all required dependencies for building UBI-based images are available in\nthe Docker build context. You can run this script from any location. To use it, you need to\npass the release tag, e.g. `prepare.sh v12.5.0-ubi`. This script uses `curl`, `gpg`, and `tar`\ncommands.\n\n`build.sh` builds all UBI-based images in the order that is described above. It logs the Docker\n",
                    "rendered": {
                      "text": "`prepare.sh` downloads, verifies, and extracts the binary dependencies into the right places.\nIt ensures that all required dependencies for building UBI-based images are available in\nthe Docker build context. You can run this script from any location. To use it, you need to\npass the release tag, e.g. `prepare.sh v12.5.0-ubi`. This script uses `curl`, `gpg`, and `tar`\ncommands.\n\n`build.sh` builds all UBI-based images in the order that is described above. It logs the Docker\n",
                      "markdown": "``prepare.sh` downloads, verifies, and extracts the binary dependencies into the right places.\nIt ensures that all required dependencies for building UBI-based images are available in\nthe Docker build context. You can run this script from any location. To use it, you need to\npass the release tag, e.g. `prepare.sh v12.5.0-ubi`. This script uses `curl`, `gpg`, and `tar`\ncommands.\n\n`build.sh` builds all UBI-based images in the order that is described above. It logs the Docker\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 409,
                  "startColumn": 42,
                  "endLine": 409,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n`prepare.sh` downloads, verifies, and extracts the binary dependencies into the right places.\nIt ensures that all required dependencies for building UBI-based images are available in\nthe Docker build context. You can run this script from any location. To use it, you need to\npass the release tag, e.g. `prepare.sh v12.5.0-ubi`. This script uses `curl`, `gpg`, and `tar`\ncommands.\n\n",
                    "rendered": {
                      "text": "\n`prepare.sh` downloads, verifies, and extracts the binary dependencies into the right places.\nIt ensures that all required dependencies for building UBI-based images are available in\nthe Docker build context. You can run this script from any location. To use it, you need to\npass the release tag, e.g. `prepare.sh v12.5.0-ubi`. This script uses `curl`, `gpg`, and `tar`\ncommands.\n\n",
                      "markdown": "`\n`prepare.sh` downloads, verifies, and extracts the binary dependencies into the right places.\nIt ensures that all required dependencies for building UBI-based images are available in\nthe Docker build context. You can run this script from any location. To use it, you need to\npass the release tag, e.g. `prepare.sh v12.5.0-ubi`. This script uses `curl`, `gpg`, and `tar`\ncommands.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 409,
                  "startColumn": 3,
                  "endLine": 409,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n`prepare.sh` downloads, verifies, and extracts the binary dependencies into the right places.\nIt ensures that all required dependencies for building UBI-based images are available in\nthe Docker build context. You can run this script from any location. To use it, you need to\npass the release tag, e.g. `prepare.sh v12.5.0-ubi`. This script uses `curl`, `gpg`, and `tar`\ncommands.\n\n",
                    "rendered": {
                      "text": "\n`prepare.sh` downloads, verifies, and extracts the binary dependencies into the right places.\nIt ensures that all required dependencies for building UBI-based images are available in\nthe Docker build context. You can run this script from any location. To use it, you need to\npass the release tag, e.g. `prepare.sh v12.5.0-ubi`. This script uses `curl`, `gpg`, and `tar`\ncommands.\n\n",
                      "markdown": "`\n`prepare.sh` downloads, verifies, and extracts the binary dependencies into the right places.\nIt ensures that all required dependencies for building UBI-based images are available in\nthe Docker build context. You can run this script from any location. To use it, you need to\npass the release tag, e.g. `prepare.sh v12.5.0-ubi`. This script uses `curl`, `gpg`, and `tar`\ncommands.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 92,
                  "endLine": 403,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nTo build the UBI-based images in an isolated/controlled environment you need to download,\nverify, and extract binary dependencies into Docker build contexts. Docker build instructions\nfor UBI-based images assume that these dependencies are placed in the right locations in the\nDocker build context. Failing to do so breaks the build process.\n\nThe helper scripts in `build-scripts/ubi-offline/` directory help you with offline build.\n\n",
                    "rendered": {
                      "text": "\nTo build the UBI-based images in an isolated/controlled environment you need to download,\nverify, and extract binary dependencies into Docker build contexts. Docker build instructions\nfor UBI-based images assume that these dependencies are placed in the right locations in the\nDocker build context. Failing to do so breaks the build process.\n\nThe helper scripts in `build-scripts/ubi-offline/` directory help you with offline build.\n\n",
                      "markdown": "`\nTo build the UBI-based images in an isolated/controlled environment you need to download,\nverify, and extract binary dependencies into Docker build contexts. Docker build instructions\nfor UBI-based images assume that these dependencies are placed in the right locations in the\nDocker build context. Failing to do so breaks the build process.\n\nThe helper scripts in `build-scripts/ubi-offline/` directory help you with offline build.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 67,
                  "endLine": 401,
                  "endColumn": 75,
                  "snippet": {
                    "text": "access the official UBI software repositories.\n\nTo build the UBI-based images in an isolated/controlled environment you need to download,\nverify, and extract binary dependencies into Docker build contexts. Docker build instructions\nfor UBI-based images assume that these dependencies are placed in the right locations in the\nDocker build context. Failing to do so breaks the build process.\n\n",
                    "rendered": {
                      "text": "access the official UBI software repositories.\n\nTo build the UBI-based images in an isolated/controlled environment you need to download,\nverify, and extract binary dependencies into Docker build contexts. Docker build instructions\nfor UBI-based images assume that these dependencies are placed in the right locations in the\nDocker build context. Failing to do so breaks the build process.\n\n",
                      "markdown": "`access the official UBI software repositories.\n\nTo build the UBI-based images in an isolated/controlled environment you need to download,\nverify, and extract binary dependencies into Docker build contexts. Docker build instructions\nfor UBI-based images assume that these dependencies are placed in the right locations in the\nDocker build context. Failing to do so breaks the build process.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 44,
                  "endLine": 401,
                  "endColumn": 52,
                  "snippet": {
                    "text": "access the official UBI software repositories.\n\nTo build the UBI-based images in an isolated/controlled environment you need to download,\nverify, and extract binary dependencies into Docker build contexts. Docker build instructions\nfor UBI-based images assume that these dependencies are placed in the right locations in the\nDocker build context. Failing to do so breaks the build process.\n\n",
                    "rendered": {
                      "text": "access the official UBI software repositories.\n\nTo build the UBI-based images in an isolated/controlled environment you need to download,\nverify, and extract binary dependencies into Docker build contexts. Docker build instructions\nfor UBI-based images assume that these dependencies are placed in the right locations in the\nDocker build context. Failing to do so breaks the build process.\n\n",
                      "markdown": "`access the official UBI software repositories.\n\nTo build the UBI-based images in an isolated/controlled environment you need to download,\nverify, and extract binary dependencies into Docker build contexts. Docker build instructions\nfor UBI-based images assume that these dependencies are placed in the right locations in the\nDocker build context. Failing to do so breaks the build process.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 97,
                  "endLine": 377,
                  "endColumn": 104,
                  "snippet": {
                    "text": "\n* use `--root=/install-root` (like you would use `microdnf --installroot=/install-root`)\n* rpm reference\n  * do `-i /some_dir/some_package.rpm` (rpm file must be present in the image, or available via a mount directive)\n  * or `-i https://example.com/some_package.1.2.3.rpm`\n  * not externally changing rpms like `-i https://example.com/latest/some_package.rpm`\n\n",
                    "rendered": {
                      "text": "\n* use `--root=/install-root` (like you would use `microdnf --installroot=/install-root`)\n* rpm reference\n  * do `-i /some_dir/some_package.rpm` (rpm file must be present in the image, or available via a mount directive)\n  * or `-i https://example.com/some_package.1.2.3.rpm`\n  * not externally changing rpms like `-i https://example.com/latest/some_package.rpm`\n\n",
                      "markdown": "`\n* use `--root=/install-root` (like you would use `microdnf --installroot=/install-root`)\n* rpm reference\n  * do `-i /some_dir/some_package.rpm` (rpm file must be present in the image, or available via a mount directive)\n  * or `-i https://example.com/some_package.1.2.3.rpm`\n  * not externally changing rpms like `-i https://example.com/latest/some_package.rpm`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 1,
                  "endLine": 376,
                  "endColumn": 6,
                  "snippet": {
                    "text": "A couple `rpm` command options that should be kept in mind:\n\n* use `--root=/install-root` (like you would use `microdnf --installroot=/install-root`)\n* rpm reference\n  * do `-i /some_dir/some_package.rpm` (rpm file must be present in the image, or available via a mount directive)\n  * or `-i https://example.com/some_package.1.2.3.rpm`\n  * not externally changing rpms like `-i https://example.com/latest/some_package.rpm`\n",
                    "rendered": {
                      "text": "A couple `rpm` command options that should be kept in mind:\n\n* use `--root=/install-root` (like you would use `microdnf --installroot=/install-root`)\n* rpm reference\n  * do `-i /some_dir/some_package.rpm` (rpm file must be present in the image, or available via a mount directive)\n  * or `-i https://example.com/some_package.1.2.3.rpm`\n  * not externally changing rpms like `-i https://example.com/latest/some_package.rpm`\n",
                      "markdown": "`A couple `rpm` command options that should be kept in mind:\n\n* use `--root=/install-root` (like you would use `microdnf --installroot=/install-root`)\n* rpm reference\n  * do `-i /some_dir/some_package.rpm` (rpm file must be present in the image, or available via a mount directive)\n  * or `-i https://example.com/some_package.1.2.3.rpm`\n  * not externally changing rpms like `-i https://example.com/latest/some_package.rpm`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 355,
                  "endLine": 371,
                  "endColumn": 361,
                  "snippet": {
                    "text": "\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder image (note: `microdnf` does not have the capability to install rpms like full `dnf` does). Please note the rpm package may have other dependencies that must be installed prior or at the same time to running the `rpm` command.\n\nA couple `rpm` command options that should be kept in mind:\n\n",
                    "rendered": {
                      "text": "\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder image (note: `microdnf` does not have the capability to install rpms like full `dnf` does). Please note the rpm package may have other dependencies that must be installed prior or at the same time to running the `rpm` command.\n\nA couple `rpm` command options that should be kept in mind:\n\n",
                      "markdown": "`\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder image (note: `microdnf` does not have the capability to install rpms like full `dnf` does). Please note the rpm package may have other dependencies that must be installed prior or at the same time to running the `rpm` command.\n\nA couple `rpm` command options that should be kept in mind:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 271,
                  "endLine": 371,
                  "endColumn": 276,
                  "snippet": {
                    "text": "\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder image (note: `microdnf` does not have the capability to install rpms like full `dnf` does). Please note the rpm package may have other dependencies that must be installed prior or at the same time to running the `rpm` command.\n\nA couple `rpm` command options that should be kept in mind:\n\n",
                    "rendered": {
                      "text": "\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder image (note: `microdnf` does not have the capability to install rpms like full `dnf` does). Please note the rpm package may have other dependencies that must be installed prior or at the same time to running the `rpm` command.\n\nA couple `rpm` command options that should be kept in mind:\n\n",
                      "markdown": "`\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder image (note: `microdnf` does not have the capability to install rpms like full `dnf` does). Please note the rpm package may have other dependencies that must be installed prior or at the same time to running the `rpm` command.\n\nA couple `rpm` command options that should be kept in mind:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 93,
                  "endLine": 371,
                  "endColumn": 98,
                  "snippet": {
                    "text": "\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder image (note: `microdnf` does not have the capability to install rpms like full `dnf` does). Please note the rpm package may have other dependencies that must be installed prior or at the same time to running the `rpm` command.\n\nA couple `rpm` command options that should be kept in mind:\n\n",
                    "rendered": {
                      "text": "\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder image (note: `microdnf` does not have the capability to install rpms like full `dnf` does). Please note the rpm package may have other dependencies that must be installed prior or at the same time to running the `rpm` command.\n\nA couple `rpm` command options that should be kept in mind:\n\n",
                      "markdown": "`\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder image (note: `microdnf` does not have the capability to install rpms like full `dnf` does). Please note the rpm package may have other dependencies that must be installed prior or at the same time to running the `rpm` command.\n\nA couple `rpm` command options that should be kept in mind:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 452,
                  "endLine": 367,
                  "endColumn": 457,
                  "snippet": {
                    "text": "inary based on the pattern established in [cloud-native/distroless/ubi#12](https://gitlab.com/gitlab-org/cloud-native/distroless/ubi/-/issues/12) or in the above example. If the desired packages are available via a yum repository and not in the default `ubi-minimal` package manager repositories, the yum repository configuration should be added to the builder stage so the packages can be installed via the package manger.\n\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder",
                    "rendered": {
                      "text": "inary based on the pattern established in [cloud-native/distroless/ubi#12](https://gitlab.com/gitlab-org/cloud-native/distroless/ubi/-/issues/12) or in the above example. If the desired packages are available via a yum repository and not in the default `ubi-minimal` package manager repositories, the yum repository configuration should be added to the builder stage so the packages can be installed via the package manger.\n\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder",
                      "markdown": "`inary based on the pattern established in [cloud-native/distroless/ubi#12](https://gitlab.com/gitlab-org/cloud-native/distroless/ubi/-/issues/12) or in the above example. If the desired packages are available via a yum repository and not in the default `ubi-minimal` package manager repositories, the yum repository configuration should be added to the builder stage so the packages can be installed via the package manger.\n\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not available via a yum repository. the `rpm` should be installed by `rpm` on the builder`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 366,
                  "endLine": 367,
                  "endColumn": 371,
                  "snippet": {
                    "text": "hould be based on `ubi-minimal` and the `microdnf` package manger should install the binary based on the pattern established in [cloud-native/distroless/ubi#12](https://gitlab.com/gitlab-org/cloud-native/distroless/ubi/-/issues/12) or in the above example. If the desired packages are available via a yum repository and not in the default `ubi-minimal` package manager repositories, the yum repository configuration should be added to the builder stage so the packages can be installed via the package manger.\n\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not",
                    "rendered": {
                      "text": "hould be based on `ubi-minimal` and the `microdnf` package manger should install the binary based on the pattern established in [cloud-native/distroless/ubi#12](https://gitlab.com/gitlab-org/cloud-native/distroless/ubi/-/issues/12) or in the above example. If the desired packages are available via a yum repository and not in the default `ubi-minimal` package manager repositories, the yum repository configuration should be added to the builder stage so the packages can be installed via the package manger.\n\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not",
                      "markdown": "`hould be based on `ubi-minimal` and the `microdnf` package manger should install the binary based on the pattern established in [cloud-native/distroless/ubi#12](https://gitlab.com/gitlab-org/cloud-native/distroless/ubi/-/issues/12) or in the above example. If the desired packages are available via a yum repository and not in the default `ubi-minimal` package manager repositories, the yum repository configuration should be added to the builder stage so the packages can be installed via the package manger.\n\n##### From rpms\n\nIf binaries are available as an `rpm` file and it is confirmed that it is not`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 48,
                  "endLine": 353,
                  "endColumn": 53,
                  "snippet": {
                    "text": "COPY --from=micro /  ${DNF_INSTALL_ROOT}\nRUN ls -l ${DNF_INSTALL_ROOT}/var/lib/dnf/ ; \\\n    microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      findutils less procps curl ca-certificates tar \\\n      && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes tzdata --setopt=install_weak_deps=0 -y \\\n      && microdnf clean all \\\n      && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                    "rendered": {
                      "text": "COPY --from=micro /  ${DNF_INSTALL_ROOT}\nRUN ls -l ${DNF_INSTALL_ROOT}/var/lib/dnf/ ; \\\n    microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      findutils less procps curl ca-certificates tar \\\n      && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes tzdata --setopt=install_weak_deps=0 -y \\\n      && microdnf clean all \\\n      && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                      "markdown": "`COPY --from=micro /  ${DNF_INSTALL_ROOT}\nRUN ls -l ${DNF_INSTALL_ROOT}/var/lib/dnf/ ; \\\n    microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      findutils less procps curl ca-certificates tar \\\n      && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes tzdata --setopt=install_weak_deps=0 -y \\\n      && microdnf clean all \\\n      && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 27,
                  "endLine": 353,
                  "endColumn": 33,
                  "snippet": {
                    "text": "COPY --from=micro /  ${DNF_INSTALL_ROOT}\nRUN ls -l ${DNF_INSTALL_ROOT}/var/lib/dnf/ ; \\\n    microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      findutils less procps curl ca-certificates tar \\\n      && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes tzdata --setopt=install_weak_deps=0 -y \\\n      && microdnf clean all \\\n      && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                    "rendered": {
                      "text": "COPY --from=micro /  ${DNF_INSTALL_ROOT}\nRUN ls -l ${DNF_INSTALL_ROOT}/var/lib/dnf/ ; \\\n    microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      findutils less procps curl ca-certificates tar \\\n      && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes tzdata --setopt=install_weak_deps=0 -y \\\n      && microdnf clean all \\\n      && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                      "markdown": "`COPY --from=micro /  ${DNF_INSTALL_ROOT}\nRUN ls -l ${DNF_INSTALL_ROOT}/var/lib/dnf/ ; \\\n    microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      findutils less procps curl ca-certificates tar \\\n      && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes tzdata --setopt=install_weak_deps=0 -y \\\n      && microdnf clean all \\\n      && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 34,
                  "endLine": 346,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nFROM ${UBI_IMAGE} as builder\n\nARG DNF_INSTALL_ROOT=/install-root\nENV DNF_OPTS_ROOT=\"--installroot=${DNF_INSTALL_ROOT}/ --setopt=reposdir=${DNF_INSTALL_ROOT}/etc/yum.repos.d/ --setopt=varsdir=/install-var/ --config=${DNF_INSTALL_ROOT}/etc/yum.repos.d/ubi.repo --setopt=cachedir=/install-cache/ --noplugins\"\n\nUSER 0\nRUN mkdir ${DNF_INSTALL_ROOT} /install-var\n",
                    "rendered": {
                      "text": "\nFROM ${UBI_IMAGE} as builder\n\nARG DNF_INSTALL_ROOT=/install-root\nENV DNF_OPTS_ROOT=\"--installroot=${DNF_INSTALL_ROOT}/ --setopt=reposdir=${DNF_INSTALL_ROOT}/etc/yum.repos.d/ --setopt=varsdir=/install-var/ --config=${DNF_INSTALL_ROOT}/etc/yum.repos.d/ubi.repo --setopt=cachedir=/install-cache/ --noplugins\"\n\nUSER 0\nRUN mkdir ${DNF_INSTALL_ROOT} /install-var\n",
                      "markdown": "`\nFROM ${UBI_IMAGE} as builder\n\nARG DNF_INSTALL_ROOT=/install-root\nENV DNF_OPTS_ROOT=\"--installroot=${DNF_INSTALL_ROOT}/ --setopt=reposdir=${DNF_INSTALL_ROOT}/etc/yum.repos.d/ --setopt=varsdir=/install-var/ --config=${DNF_INSTALL_ROOT}/etc/yum.repos.d/ubi.repo --setopt=cachedir=/install-cache/ --noplugins\"\n\nUSER 0\nRUN mkdir ${DNF_INSTALL_ROOT} /install-var\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 255,
                  "endLine": 308,
                  "endColumn": 261,
                  "snippet": {
                    "text": "\n#### Hardening\n\nTHe UBI based images operate a series of recommended hardening scripts from [OpenSCAP](https://www.open-scap.org/security-policies/). These are operated within the final image layers, to ensure any package or configuration changes are accounted for at the time of execution.\n\n#### Other Optional Intermediary Stages\n\n",
                    "rendered": {
                      "text": "\n#### Hardening\n\nTHe UBI based images operate a series of recommended hardening scripts from [OpenSCAP](https://www.open-scap.org/security-policies/). These are operated within the final image layers, to ensure any package or configuration changes are accounted for at the time of execution.\n\n#### Other Optional Intermediary Stages\n\n",
                      "markdown": "`\n#### Hardening\n\nTHe UBI based images operate a series of recommended hardening scripts from [OpenSCAP](https://www.open-scap.org/security-policies/). These are operated within the final image layers, to ensure any package or configuration changes are accounted for at the time of execution.\n\n#### Other Optional Intermediary Stages\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 82,
                  "endLine": 271,
                  "snippet": {
                    "text": "1. Run the following:\n\n   ```shell\n   docker run --rm -it registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 bash\n   podman login --username <gitlab email address> --password <GitLab personal access token> registry.gitlab.com\n   preflight check container \\\n       registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips \\\n       --submit \\\n",
                    "rendered": {
                      "text": "1. Run the following:\n\n   ```shell\n   docker run --rm -it registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 bash\n   podman login --username <gitlab email address> --password <GitLab personal access token> registry.gitlab.com\n   preflight check container \\\n       registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips \\\n       --submit \\\n",
                      "markdown": "`1. Run the following:\n\n   ```shell\n   docker run --rm -it registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 bash\n   podman login --username <gitlab email address> --password <GitLab personal access token> registry.gitlab.com\n   preflight check container \\\n       registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips \\\n       --submit \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 2,
                  "endLine": 270,
                  "endColumn": 10,
                  "snippet": {
                    "text": "1. Run the following:\n\n   ```shell\n   docker run --rm -it registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 bash\n   podman login --username <gitlab email address> --password <GitLab personal access token> registry.gitlab.com\n   preflight check container \\\n       registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips \\\n",
                    "rendered": {
                      "text": "1. Run the following:\n\n   ```shell\n   docker run --rm -it registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 bash\n   podman login --username <gitlab email address> --password <GitLab personal access token> registry.gitlab.com\n   preflight check container \\\n       registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips \\\n",
                      "markdown": "`1. Run the following:\n\n   ```shell\n   docker run --rm -it registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 bash\n   podman login --username <gitlab email address> --password <GitLab personal access token> registry.gitlab.com\n   preflight check container \\\n       registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 8,
                  "endLine": 257,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nThe following example tests the KAS image:\n\n```shell\ndocker run -it --rm registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 \\\n  preflight check container registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips\n```\n\n",
                    "rendered": {
                      "text": "\nThe following example tests the KAS image:\n\n```shell\ndocker run -it --rm registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 \\\n  preflight check container registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips\n```\n\n",
                      "markdown": "`\nThe following example tests the KAS image:\n\n```shell\ndocker run -it --rm registry.gitlab.com/gitlab-org/cloud-native/preflight:1.9.1 \\\n  preflight check container registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:master-fips\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 48,
                  "endLine": 222,
                  "endColumn": 53,
                  "snippet": {
                    "text": "In addition, it is possible to run the `build-scripts/redhat_certification.rb`\nscript to query the Red Hat API for the status of scan requests that have\nbeen submitted. Executing `build-scripts/redhat_certification.rb -s` will display\na list of images and their current status in the Red Hat certification\npipeline. One would need to define `REDHAT_API_TOKEN`in the local environment\nor use the `--token` command line switch to specify their personal token.\n\n",
                    "rendered": {
                      "text": "In addition, it is possible to run the `build-scripts/redhat_certification.rb`\nscript to query the Red Hat API for the status of scan requests that have\nbeen submitted. Executing `build-scripts/redhat_certification.rb -s` will display\na list of images and their current status in the Red Hat certification\npipeline. One would need to define `REDHAT_API_TOKEN`in the local environment\nor use the `--token` command line switch to specify their personal token.\n\n",
                      "markdown": "`In addition, it is possible to run the `build-scripts/redhat_certification.rb`\nscript to query the Red Hat API for the status of scan requests that have\nbeen submitted. Executing `build-scripts/redhat_certification.rb -s` will display\na list of images and their current status in the Red Hat certification\npipeline. One would need to define `REDHAT_API_TOKEN`in the local environment\nor use the `--token` command line switch to specify their personal token.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 19,
                  "endLine": 220,
                  "endColumn": 24,
                  "snippet": {
                    "text": "set `UBI_PIPELINE` to \"true\" to generate the UBI images.\n\nIn addition, it is possible to run the `build-scripts/redhat_certification.rb`\nscript to query the Red Hat API for the status of scan requests that have\nbeen submitted. Executing `build-scripts/redhat_certification.rb -s` will display\na list of images and their current status in the Red Hat certification\npipeline. One would need to define `REDHAT_API_TOKEN`in the local environment\n",
                    "rendered": {
                      "text": "set `UBI_PIPELINE` to \"true\" to generate the UBI images.\n\nIn addition, it is possible to run the `build-scripts/redhat_certification.rb`\nscript to query the Red Hat API for the status of scan requests that have\nbeen submitted. Executing `build-scripts/redhat_certification.rb -s` will display\na list of images and their current status in the Red Hat certification\npipeline. One would need to define `REDHAT_API_TOKEN`in the local environment\n",
                      "markdown": "`set `UBI_PIPELINE` to \"true\" to generate the UBI images.\n\nIn addition, it is possible to run the `build-scripts/redhat_certification.rb`\nscript to query the Red Hat API for the status of scan requests that have\nbeen submitted. Executing `build-scripts/redhat_certification.rb -s` will display\na list of images and their current status in the Red Hat certification\npipeline. One would need to define `REDHAT_API_TOKEN`in the local environment\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 78,
                  "endLine": 220,
                  "endColumn": 7,
                  "snippet": {
                    "text": "`REDHAT_CERTIFICATION` to \"true\" in a pipeline. Note: One may need to also\nset `UBI_PIPELINE` to \"true\" to generate the UBI images.\n\nIn addition, it is possible to run the `build-scripts/redhat_certification.rb`\nscript to query the Red Hat API for the status of scan requests that have\nbeen submitted. Executing `build-scripts/redhat_certification.rb -s` will display\na list of images and their current status in the Red Hat certification\npipeline. One would need to define `REDHAT_API_TOKEN`in the local environment\n",
                    "rendered": {
                      "text": "`REDHAT_CERTIFICATION` to \"true\" in a pipeline. Note: One may need to also\nset `UBI_PIPELINE` to \"true\" to generate the UBI images.\n\nIn addition, it is possible to run the `build-scripts/redhat_certification.rb`\nscript to query the Red Hat API for the status of scan requests that have\nbeen submitted. Executing `build-scripts/redhat_certification.rb -s` will display\na list of images and their current status in the Red Hat certification\npipeline. One would need to define `REDHAT_API_TOKEN`in the local environment\n",
                      "markdown": "``REDHAT_CERTIFICATION` to \"true\" in a pipeline. Note: One may need to also\nset `UBI_PIPELINE` to \"true\" to generate the UBI images.\n\nIn addition, it is possible to run the `build-scripts/redhat_certification.rb`\nscript to query the Red Hat API for the status of scan requests that have\nbeen submitted. Executing `build-scripts/redhat_certification.rb -s` will display\na list of images and their current status in the Red Hat certification\npipeline. One would need to define `REDHAT_API_TOKEN`in the local environment\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 3,
                  "endLine": 211,
                  "endColumn": 11,
                  "snippet": {
                    "text": "The token used by GitLab CI is stored in the 1Password Build vault under the\n\"Red Hat Certification Token\" entry.\n\nThe script allows the variable `GITLAB_REGISTRY_BASE_URL` (base URL where the\nCNG images reside) can be defined to override the default location of where\nthe CNG image can be pulled from when submitting the scan requests.\n\n",
                    "rendered": {
                      "text": "The token used by GitLab CI is stored in the 1Password Build vault under the\n\"Red Hat Certification Token\" entry.\n\nThe script allows the variable `GITLAB_REGISTRY_BASE_URL` (base URL where the\nCNG images reside) can be defined to override the default location of where\nthe CNG image can be pulled from when submitting the scan requests.\n\n",
                      "markdown": "`The token used by GitLab CI is stored in the 1Password Build vault under the\n\"Red Hat Certification Token\" entry.\n\nThe script allows the variable `GITLAB_REGISTRY_BASE_URL` (base URL where the\nCNG images reside) can be defined to override the default location of where\nthe CNG image can be pulled from when submitting the scan requests.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 39,
                  "endLine": 202,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\nIf one of these conditions is met, additional pipeline jobs and stages will\nappear and the UBI images will be built and pushed into the GitLab registry.\nThe final job will submit the images to Red Hat for certification for the\nOpenShift environments.\n\nThis certification job executes `build-scripts/redhat_certification.rb` and\n",
                    "rendered": {
                      "text": "\nIf one of these conditions is met, additional pipeline jobs and stages will\nappear and the UBI images will be built and pushed into the GitLab registry.\nThe final job will submit the images to Red Hat for certification for the\nOpenShift environments.\n\nThis certification job executes `build-scripts/redhat_certification.rb` and\n",
                      "markdown": "`\nIf one of these conditions is met, additional pipeline jobs and stages will\nappear and the UBI images will be built and pushed into the GitLab registry.\nThe final job will submit the images to Red Hat for certification for the\nOpenShift environments.\n\nThis certification job executes `build-scripts/redhat_certification.rb` and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 9,
                  "endLine": 157,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n```\n% docker run -it --rm registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb cat /srv/gitlab/REVISION\nUnable to find image 'registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb' locally\n309c11e03a2733c265cd047ed71a9dc6d5c056cb: Pulling from gitlab-org/build/cng-mirror/gitlab-webservice-ee\n<SNIP>\nDigest: sha256:769faa4f0c394016df0cc787a3d2e4708d011e9e55d97e9ae7c2349dbed9da35\n",
                    "rendered": {
                      "text": "\n```\n% docker run -it --rm registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb cat /srv/gitlab/REVISION\nUnable to find image 'registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb' locally\n309c11e03a2733c265cd047ed71a9dc6d5c056cb: Pulling from gitlab-org/build/cng-mirror/gitlab-webservice-ee\n<SNIP>\nDigest: sha256:769faa4f0c394016df0cc787a3d2e4708d011e9e55d97e9ae7c2349dbed9da35\n",
                      "markdown": "`\n```\n% docker run -it --rm registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb cat /srv/gitlab/REVISION\nUnable to find image 'registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb' locally\n309c11e03a2733c265cd047ed71a9dc6d5c056cb: Pulling from gitlab-org/build/cng-mirror/gitlab-webservice-ee\n<SNIP>\nDigest: sha256:769faa4f0c394016df0cc787a3d2e4708d011e9e55d97e9ae7c2349dbed9da35\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 131,
                  "endLine": 156,
                  "endColumn": 136,
                  "snippet": {
                    "text": "built matches our intention\n\n```\n% docker run -it --rm registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb cat /srv/gitlab/REVISION\nUnable to find image 'registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb' locally\n309c11e03a2733c265cd047ed71a9dc6d5c056cb: Pulling from gitlab-org/build/cng-mirror/gitlab-webservice-ee\n<SNIP>\n",
                    "rendered": {
                      "text": "built matches our intention\n\n```\n% docker run -it --rm registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb cat /srv/gitlab/REVISION\nUnable to find image 'registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb' locally\n309c11e03a2733c265cd047ed71a9dc6d5c056cb: Pulling from gitlab-org/build/cng-mirror/gitlab-webservice-ee\n<SNIP>\n",
                      "markdown": "`built matches our intention\n\n```\n% docker run -it --rm registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb cat /srv/gitlab/REVISION\nUnable to find image 'registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb' locally\n309c11e03a2733c265cd047ed71a9dc6d5c056cb: Pulling from gitlab-org/build/cng-mirror/gitlab-webservice-ee\n<SNIP>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 1,
                  "endLine": 156,
                  "endColumn": 9,
                  "snippet": {
                    "text": "built matches our intention\n\n```\n% docker run -it --rm registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb cat /srv/gitlab/REVISION\nUnable to find image 'registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb' locally\n309c11e03a2733c265cd047ed71a9dc6d5c056cb: Pulling from gitlab-org/build/cng-mirror/gitlab-webservice-ee\n<SNIP>\n",
                    "rendered": {
                      "text": "built matches our intention\n\n```\n% docker run -it --rm registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb cat /srv/gitlab/REVISION\nUnable to find image 'registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb' locally\n309c11e03a2733c265cd047ed71a9dc6d5c056cb: Pulling from gitlab-org/build/cng-mirror/gitlab-webservice-ee\n<SNIP>\n",
                      "markdown": "`built matches our intention\n\n```\n% docker run -it --rm registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb cat /srv/gitlab/REVISION\nUnable to find image 'registry.gitlab.com/gitlab-org/build/cng-mirror/gitlab-webservice-ee:309c11e03a2733c265cd047ed71a9dc6d5c056cb' locally\n309c11e03a2733c265cd047ed71a9dc6d5c056cb: Pulling from gitlab-org/build/cng-mirror/gitlab-webservice-ee\n<SNIP>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 38,
                  "endLine": 51,
                  "endColumn": 46,
                  "snippet": {
                    "text": "_ASSETS_TAG`|This is used for fetching the js/css assets, and must be the slug version of the *GITLAB_VERSION*.|`v11-8-0-ee`, `11-8-stable-ee`|\n|`GITLAB_TAG`|Only provided when the GitLab version is a tagged version. When set this is the tag name.|`v11.8.0-ee`|\n|`GITLAB_REF_SLUG`|This is used as the docker label when the new images are built. For tags, this is the tag name. For branches, this is typically the slug version of the branch.|`v11.8.0-ee`, `my-test`|\n|`GITALY_SERVER_VERSION`|The version of [gitaly](https://gitlab.com/gitlab-org/gitaly) to build. This needs to be a tag reference that matches",
                    "rendered": {
                      "text": "_ASSETS_TAG`|This is used for fetching the js/css assets, and must be the slug version of the *GITLAB_VERSION*.|`v11-8-0-ee`, `11-8-stable-ee`|\n|`GITLAB_TAG`|Only provided when the GitLab version is a tagged version. When set this is the tag name.|`v11.8.0-ee`|\n|`GITLAB_REF_SLUG`|This is used as the docker label when the new images are built. For tags, this is the tag name. For branches, this is typically the slug version of the branch.|`v11.8.0-ee`, `my-test`|\n|`GITALY_SERVER_VERSION`|The version of [gitaly](https://gitlab.com/gitlab-org/gitaly) to build. This needs to be a tag reference that matches",
                      "markdown": "`_ASSETS_TAG`|This is used for fetching the js/css assets, and must be the slug version of the *GITLAB_VERSION*.|`v11-8-0-ee`, `11-8-stable-ee`|\n|`GITLAB_TAG`|Only provided when the GitLab version is a tagged version. When set this is the tag name.|`v11.8.0-ee`|\n|`GITLAB_REF_SLUG`|This is used as the docker label when the new images are built. For tags, this is the tag name. For branches, this is typically the slug version of the branch.|`v11.8.0-ee`, `my-test`|\n|`GITALY_SERVER_VERSION`|The version of [gitaly](https://gitlab.com/gitlab-org/gitaly) to build. This needs to be a tag reference that matches`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 904,
                  "endLine": 17,
                  "endColumn": 912,
                  "snippet": {
                    "text": "2 storage is described in <https://github.com/moby/moby/issues/47399#issuecomment-1952134944> where overlay2 creates new index nodes (inodes) when copying between multiple stages, despite the files not changing. To use the containerd-snapshotter storage driver alternative (an experimental feature of Docker Engine as of this writing), a `.containerd-storage` job (see [cloud-native/distroless/ubi#22](https://gitlab.com/gitlab-org/cloud-native/distroless/ubi/-/merge_requests/22/diffs)) which configures DIND is defined and extended upon from `.gitlab/ci/common.gitlab-ci.yml` for all image builds.\n\n```\n.co",
                    "rendered": {
                      "text": "2 storage is described in <https://github.com/moby/moby/issues/47399#issuecomment-1952134944> where overlay2 creates new index nodes (inodes) when copying between multiple stages, despite the files not changing. To use the containerd-snapshotter storage driver alternative (an experimental feature of Docker Engine as of this writing), a `.containerd-storage` job (see [cloud-native/distroless/ubi#22](https://gitlab.com/gitlab-org/cloud-native/distroless/ubi/-/merge_requests/22/diffs)) which configures DIND is defined and extended upon from `.gitlab/ci/common.gitlab-ci.yml` for all image builds.\n\n```\n.co",
                      "markdown": "`2 storage is described in <https://github.com/moby/moby/issues/47399#issuecomment-1952134944> where overlay2 creates new index nodes (inodes) when copying between multiple stages, despite the files not changing. To use the containerd-snapshotter storage driver alternative (an experimental feature of Docker Engine as of this writing), a `.containerd-storage` job (see [cloud-native/distroless/ubi#22](https://gitlab.com/gitlab-org/cloud-native/distroless/ubi/-/merge_requests/22/diffs)) which configures DIND is defined and extended upon from `.gitlab/ci/common.gitlab-ci.yml` for all image builds.\n\n```\n.co`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/docs/build.md"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 3,
                  "endLine": 12,
                  "endColumn": 9,
                  "snippet": {
                    "text": "For releasing new versions, the repo gets tagged by the corresponding GitLab\nversion by `release-tools` and the tag pipeline running on the dev.gitlab.org\nmirror of the project will build the images and push them to dev registry. At\nthe time of publishing, these images will be copied to the com registry and\nhence will be available to the public to use.\n\n## Image Size Reduction\n",
                    "rendered": {
                      "text": "For releasing new versions, the repo gets tagged by the corresponding GitLab\nversion by `release-tools` and the tag pipeline running on the dev.gitlab.org\nmirror of the project will build the images and push them to dev registry. At\nthe time of publishing, these images will be copied to the com registry and\nhence will be available to the public to use.\n\n## Image Size Reduction\n",
                      "markdown": "`For releasing new versions, the repo gets tagged by the corresponding GitLab\nversion by `release-tools` and the tag pipeline running on the dev.gitlab.org\nmirror of the project will build the images and push them to dev registry. At\nthe time of publishing, these images will be copied to the com registry and\nhence will be available to the public to use.\n\n## Image Size Reduction\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 34,
                  "endLine": 63,
                  "endColumn": 4,
                  "snippet": {
                    "text": "RUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n",
                    "rendered": {
                      "text": "RUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n",
                      "markdown": "`RUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 62,
                  "endColumn": 4,
                  "snippet": {
                    "text": "## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n",
                    "rendered": {
                      "text": "## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n",
                      "markdown": "`## Hardening: CIS L1 SCAP\nRUN --mount=type=bind,rw,from=hardening,source=/,target=/hardening \\\n    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nENV CONFIG_TEMPLATE_DIRECTORY=/etc\nENV GITLAB_USER=${GITLAB_USER}\n\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 3,
                  "endLine": 54,
                  "endColumn": 10,
                  "snippet": {
                    "text": "## Corrects CIS Server Level 1 benchmark finding, CCE-80783-4\n## Details: http://static.open-scap.org/ssg-guides/ssg-rhel8-guide-standard.html#xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits\n## RHEL Bug: https://bugzilla.redhat.com/show_bug.cgi?id=2138434\nRUN chmod +t /tmp /var/tmp\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n\n",
                    "rendered": {
                      "text": "## Corrects CIS Server Level 1 benchmark finding, CCE-80783-4\n## Details: http://static.open-scap.org/ssg-guides/ssg-rhel8-guide-standard.html#xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits\n## RHEL Bug: https://bugzilla.redhat.com/show_bug.cgi?id=2138434\nRUN chmod +t /tmp /var/tmp\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n\n",
                      "markdown": "`## Corrects CIS Server Level 1 benchmark finding, CCE-80783-4\n## Details: http://static.open-scap.org/ssg-guides/ssg-rhel8-guide-standard.html#xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits\n## RHEL Bug: https://bugzilla.redhat.com/show_bug.cgi?id=2138434\nRUN chmod +t /tmp /var/tmp\n\nCOPY --from=build  ${DNF_INSTALL_ROOT}/ /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 46,
                  "endLine": 31,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    && chmod +x ${DNF_INSTALL_ROOT}/usr/bin/tini\n\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts\nRUN chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts  && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts\n\nADD gitlab-gomplate.tar.gz ${DNF_INSTALL_ROOT}/\n\n",
                    "rendered": {
                      "text": "    && chmod +x ${DNF_INSTALL_ROOT}/usr/bin/tini\n\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts\nRUN chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts  && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts\n\nADD gitlab-gomplate.tar.gz ${DNF_INSTALL_ROOT}/\n\n",
                      "markdown": "`    && chmod +x ${DNF_INSTALL_ROOT}/usr/bin/tini\n\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts\nRUN chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts  && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts\n\nADD gitlab-gomplate.tar.gz ${DNF_INSTALL_ROOT}/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 6,
                  "endLine": 28,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      curl-minimal ca-certificates tar \\\n    && microdnf clean all \\\n    && curl -L -o ${DNF_INSTALL_ROOT}/usr/bin/tini https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-${TARGETARCH} \\\n    && chmod +x ${DNF_INSTALL_ROOT}/usr/bin/tini\n\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts\nRUN chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts  && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts\n",
                    "rendered": {
                      "text": "      curl-minimal ca-certificates tar \\\n    && microdnf clean all \\\n    && curl -L -o ${DNF_INSTALL_ROOT}/usr/bin/tini https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-${TARGETARCH} \\\n    && chmod +x ${DNF_INSTALL_ROOT}/usr/bin/tini\n\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts\nRUN chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts  && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts\n",
                      "markdown": "`      curl-minimal ca-certificates tar \\\n    && microdnf clean all \\\n    && curl -L -o ${DNF_INSTALL_ROOT}/usr/bin/tini https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-${TARGETARCH} \\\n    && chmod +x ${DNF_INSTALL_ROOT}/usr/bin/tini\n\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts\nRUN chgrp -R 0 ${DNF_INSTALL_ROOT}/scripts  && chmod -R g=u ${DNF_INSTALL_ROOT}/scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 6,
                  "endLine": 27,
                  "endColumn": 12,
                  "snippet": {
                    "text": "RUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      curl-minimal ca-certificates tar \\\n    && microdnf clean all \\\n    && curl -L -o ${DNF_INSTALL_ROOT}/usr/bin/tini https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-${TARGETARCH} \\\n    && chmod +x ${DNF_INSTALL_ROOT}/usr/bin/tini\n\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts\n",
                    "rendered": {
                      "text": "RUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      curl-minimal ca-certificates tar \\\n    && microdnf clean all \\\n    && curl -L -o ${DNF_INSTALL_ROOT}/usr/bin/tini https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-${TARGETARCH} \\\n    && chmod +x ${DNF_INSTALL_ROOT}/usr/bin/tini\n\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts\n",
                      "markdown": "`RUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      curl-minimal ca-certificates tar \\\n    && microdnf clean all \\\n    && curl -L -o ${DNF_INSTALL_ROOT}/usr/bin/tini https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-${TARGETARCH} \\\n    && chmod +x ${DNF_INSTALL_ROOT}/usr/bin/tini\n\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 34,
                  "endLine": 25,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      curl-minimal ca-certificates tar \\\n    && microdnf clean all \\\n    && curl -L -o ${DNF_INSTALL_ROOT}/usr/bin/tini https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-${TARGETARCH} \\\n    && chmod +x ${DNF_INSTALL_ROOT}/usr/bin/tini\n",
                    "rendered": {
                      "text": "    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      curl-minimal ca-certificates tar \\\n    && microdnf clean all \\\n    && curl -L -o ${DNF_INSTALL_ROOT}/usr/bin/tini https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-${TARGETARCH} \\\n    && chmod +x ${DNF_INSTALL_ROOT}/usr/bin/tini\n",
                      "markdown": "`    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\nRUN microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      curl-minimal ca-certificates tar \\\n    && microdnf clean all \\\n    && curl -L -o ${DNF_INSTALL_ROOT}/usr/bin/tini https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-${TARGETARCH} \\\n    && chmod +x ${DNF_INSTALL_ROOT}/usr/bin/tini\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 48,
                  "endLine": 19,
                  "endColumn": 53,
                  "snippet": {
                    "text": "COPY --from=target   / ${DNF_INSTALL_ROOT}/\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      findutils less procps curl ca-certificates tar tzdata  \\\n    && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} reinstall --nodocs --best --assumeyes tzdata --setopt=install_weak_deps=0 -y \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                    "rendered": {
                      "text": "COPY --from=target   / ${DNF_INSTALL_ROOT}/\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      findutils less procps curl ca-certificates tar tzdata  \\\n    && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} reinstall --nodocs --best --assumeyes tzdata --setopt=install_weak_deps=0 -y \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                      "markdown": "`COPY --from=target   / ${DNF_INSTALL_ROOT}/\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      findutils less procps curl ca-certificates tar tzdata  \\\n    && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} reinstall --nodocs --best --assumeyes tzdata --setopt=install_weak_deps=0 -y \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-base/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 27,
                  "endLine": 19,
                  "endColumn": 33,
                  "snippet": {
                    "text": "COPY --from=target   / ${DNF_INSTALL_ROOT}/\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      findutils less procps curl ca-certificates tar tzdata  \\\n    && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} reinstall --nodocs --best --assumeyes tzdata --setopt=install_weak_deps=0 -y \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                    "rendered": {
                      "text": "COPY --from=target   / ${DNF_INSTALL_ROOT}/\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      findutils less procps curl ca-certificates tar tzdata  \\\n    && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} reinstall --nodocs --best --assumeyes tzdata --setopt=install_weak_deps=0 -y \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                      "markdown": "`COPY --from=target   / ${DNF_INSTALL_ROOT}/\n\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 \\\n      findutils less procps curl ca-certificates tar tzdata  \\\n    && microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} reinstall --nodocs --best --assumeyes tzdata --setopt=install_weak_deps=0 -y \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 52,
                  "endLine": 67,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 65,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                    "rendered": {
                      "text": "    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n",
                      "markdown": "`    set -ex; for f in /hardening/*.sh; do sh \"$f\"; done\n\nUSER ${UID}\n\nCMD [\"/scripts/process-wrapper\"]\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 12,
                  "endLine": 24,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\n\nRUN microdnf update -y \\\n    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/\n\n",
                    "rendered": {
                      "text": "\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\n\nRUN microdnf update -y \\\n    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/\n\n",
                      "markdown": "`\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\n\nRUN microdnf update -y \\\n    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n    && adduser -m ${GITLAB_USER} -u ${UID} -R ${DNF_INSTALL_ROOT}/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 41,
                  "endLine": 55,
                  "endColumn": 4,
                  "snippet": {
                    "text": "      description=\"Prometheus Web exporter for GitLab.\"\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\n",
                    "rendered": {
                      "text": "      description=\"Prometheus Web exporter for GitLab.\"\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\n",
                      "markdown": "`      description=\"Prometheus Web exporter for GitLab.\"\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 64,
                  "endLine": 54,
                  "endColumn": 4,
                  "snippet": {
                    "text": "      summary=\"Prometheus Web exporter for GitLab.\" \\\n      description=\"Prometheus Web exporter for GitLab.\"\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n",
                    "rendered": {
                      "text": "      summary=\"Prometheus Web exporter for GitLab.\" \\\n      description=\"Prometheus Web exporter for GitLab.\"\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n",
                      "markdown": "`      summary=\"Prometheus Web exporter for GitLab.\" \\\n      description=\"Prometheus Web exporter for GitLab.\"\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\nCOPY --from=build ${DNF_INSTALL_ROOT}/ /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 53,
                  "endColumn": 4,
                  "snippet": {
                    "text": "      release=${GITLAB_EXPORTER_VERSION} \\\n      summary=\"Prometheus Web exporter for GitLab.\" \\\n      description=\"Prometheus Web exporter for GitLab.\"\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\n",
                    "rendered": {
                      "text": "      release=${GITLAB_EXPORTER_VERSION} \\\n      summary=\"Prometheus Web exporter for GitLab.\" \\\n      description=\"Prometheus Web exporter for GitLab.\"\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\n",
                      "markdown": "`      release=${GITLAB_EXPORTER_VERSION} \\\n      summary=\"Prometheus Web exporter for GitLab.\" \\\n      description=\"Prometheus Web exporter for GitLab.\"\n\nENV CONFIG_TEMPLATE_DIRECTORY=/var/opt/gitlab-exporter/templates\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\nENV CONFIG_FILENAME=gitlab-exporter.yml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 6,
                  "endLine": 32,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    && mkdir -p ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}/  \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n",
                    "rendered": {
                      "text": "    && mkdir -p ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}/  \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n",
                      "markdown": "`    && mkdir -p ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}/  \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6,
                  "endLine": 31,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 uuid  \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}/  \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                    "rendered": {
                      "text": "RUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 uuid  \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}/  \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n",
                      "markdown": "`RUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 uuid  \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}/  \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n    && rm -f ${DNF_INSTALL_ROOT}/var/lib/dnf/history*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 6,
                  "endLine": 30,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 uuid  \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}/  \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n",
                    "rendered": {
                      "text": "\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 uuid  \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}/  \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n",
                      "markdown": "`\nRUN microdnf ${DNF_OPTS} ${DNF_OPTS_ROOT} install --best --assumeyes --nodocs --setopt=install_weak_deps=0 uuid  \\\n    && mkdir -p ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} \\\n    && chown -R ${UID}:0 ${DNF_INSTALL_ROOT}/var/log/gitlab ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && chmod -R g=u ${DNF_INSTALL_ROOT}${CONFIG_DIRECTORY} ${DNF_INSTALL_ROOT}/scripts \\\n    && ldconfig -r ${DNF_INSTALL_ROOT}/  \\\n    && microdnf ${DNF_OPTS_ROOT} clean all \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/gitlab-exporter/Dockerfile.ubi"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 22,
                  "endColumn": 4,
                  "snippet": {
                    "text": "COPY --from=target / ${DNF_INSTALL_ROOT}/\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts/\nADD gitlab-exporter.tar.gz ${DNF_INSTALL_ROOT}/\n\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\n\nRUN microdnf update -y \\\n    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n",
                    "rendered": {
                      "text": "COPY --from=target / ${DNF_INSTALL_ROOT}/\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts/\nADD gitlab-exporter.tar.gz ${DNF_INSTALL_ROOT}/\n\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\n\nRUN microdnf update -y \\\n    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n",
                      "markdown": "`COPY --from=target / ${DNF_INSTALL_ROOT}/\nCOPY scripts/ ${DNF_INSTALL_ROOT}/scripts/\nADD gitlab-exporter.tar.gz ${DNF_INSTALL_ROOT}/\n\nENV CONFIG_DIRECTORY=/etc/gitlab-exporter\n\nRUN microdnf update -y \\\n    && microdnf ${DNF_OPTS} install --nodocs --best --assumeyes --setopt=install_weak_deps=0 shadow-utils \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitlab-cng-17.4.zip/deps.yml"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 7,
                  "endLine": 4,
                  "snippet": {
                    "text": "version: 3\ndependencies:\n- type: git\n  manifest_updates:\n    filters:\n    - name: .* # everything gets it's own MR\n      enabled: true\n",
                    "rendered": {
                      "text": "version: 3\ndependencies:\n- type: git\n  manifest_updates:\n    filters:\n    - name: .* # everything gets it's own MR\n      enabled: true\n",
                      "markdown": "`version: 3\ndependencies:\n- type: git\n  manifest_updates:\n    filters:\n    - name: .* # everything gets it's own MR\n      enabled: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}