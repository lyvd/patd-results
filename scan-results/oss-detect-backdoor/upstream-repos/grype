{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/v3/store/store.go"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 7,
                  "endLine": 296,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v3.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v3.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n\t}\n\n",
                      "markdown": "`\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v3.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/v3/store/store.go"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 21,
                  "endLine": 294,
                  "snippet": {
                    "text": "\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v3.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n",
                    "rendered": {
                      "text": "\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v3.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n",
                      "markdown": "`\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v3.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/v3/store/store.go"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 7,
                  "endLine": 292,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v3.Diff{}\n",
                    "rendered": {
                      "text": "\n\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v3.Diff{}\n",
                      "markdown": "`\n\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v3.Diff{}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 52,
                  "endLine": 44,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_KEY\")\n\n\tif hasNonEmptyCredentials(username, password, token, tlsCert, tlsKey) {\n\t\t// note: we prepend the credentials such that the environment variables take precedence over on-disk configuration.\n\t\tcfg.Auth = append([]RegistryCredentials{\n\t\t\t{\n\t\t\t\tAuthority: authority,\n",
                    "rendered": {
                      "text": "\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_KEY\")\n\n\tif hasNonEmptyCredentials(username, password, token, tlsCert, tlsKey) {\n\t\t// note: we prepend the credentials such that the environment variables take precedence over on-disk configuration.\n\t\tcfg.Auth = append([]RegistryCredentials{\n\t\t\t{\n\t\t\t\tAuthority: authority,\n",
                      "markdown": "`\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_KEY\")\n\n\tif hasNonEmptyCredentials(username, password, token, tlsCert, tlsKey) {\n\t\t// note: we prepend the credentials such that the environment variables take precedence over on-disk configuration.\n\t\tcfg.Auth = append([]RegistryCredentials{\n\t\t\t{\n\t\t\t\tAuthority: authority,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 17,
                  "endLine": 86,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tauth[i] = image.RegistryCredentials{\n\t\t\tAuthority:  a.Authority,\n\t\t\tUsername:   a.Username.String(),\n\t\t\tPassword:   a.Password.String(),\n\t\t\tToken:      a.Token.String(),\n\t\t\tClientCert: a.TLSCert,\n\t\t\tClientKey:  a.TLSKey,\n",
                    "rendered": {
                      "text": "\t\tauth[i] = image.RegistryCredentials{\n\t\t\tAuthority:  a.Authority,\n\t\t\tUsername:   a.Username.String(),\n\t\t\tPassword:   a.Password.String(),\n\t\t\tToken:      a.Token.String(),\n\t\t\tClientCert: a.TLSCert,\n\t\t\tClientKey:  a.TLSKey,\n",
                      "markdown": "`\t\tauth[i] = image.RegistryCredentials{\n\t\t\tAuthority:  a.Authority,\n\t\t\tUsername:   a.Username.String(),\n\t\t\tPassword:   a.Password.String(),\n\t\t\tToken:      a.Token.String(),\n\t\t\tClientCert: a.TLSCert,\n\t\t\tClientKey:  a.TLSKey,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 3,
                  "endLine": 86,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\tauth[i] = image.RegistryCredentials{\n\t\t\tAuthority:  a.Authority,\n\t\t\tUsername:   a.Username.String(),\n\t\t\tPassword:   a.Password.String(),\n\t\t\tToken:      a.Token.String(),\n\t\t\tClientCert: a.TLSCert,\n\t\t\tClientKey:  a.TLSKey,\n",
                    "rendered": {
                      "text": "\t\tauth[i] = image.RegistryCredentials{\n\t\t\tAuthority:  a.Authority,\n\t\t\tUsername:   a.Username.String(),\n\t\t\tPassword:   a.Password.String(),\n\t\t\tToken:      a.Token.String(),\n\t\t\tClientCert: a.TLSCert,\n\t\t\tClientKey:  a.TLSKey,\n",
                      "markdown": "`\t\tauth[i] = image.RegistryCredentials{\n\t\t\tAuthority:  a.Authority,\n\t\t\tUsername:   a.Username.String(),\n\t\t\tPassword:   a.Password.String(),\n\t\t\tToken:      a.Token.String(),\n\t\t\tClientCert: a.TLSCert,\n\t\t\tClientKey:  a.TLSKey,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 34,
                  "endLine": 74,
                  "endColumn": 42,
                  "snippet": {
                    "text": "}\n\nfunc hasNonEmptyCredentials(username, password, token, tlsCert, tlsKey string) bool {\n\thasUserPass := username != \"\" && password != \"\"\n\thasToken := token != \"\"\n\thasTLSMaterial := tlsCert != \"\" && tlsKey != \"\"\n\treturn hasUserPass || hasToken || hasTLSMaterial\n",
                    "rendered": {
                      "text": "}\n\nfunc hasNonEmptyCredentials(username, password, token, tlsCert, tlsKey string) bool {\n\thasUserPass := username != \"\" && password != \"\"\n\thasToken := token != \"\"\n\thasTLSMaterial := tlsCert != \"\" && tlsKey != \"\"\n\treturn hasUserPass || hasToken || hasTLSMaterial\n",
                      "markdown": "`}\n\nfunc hasNonEmptyCredentials(username, password, token, tlsCert, tlsKey string) bool {\n\thasUserPass := username != \"\" && password != \"\"\n\thasToken := token != \"\"\n\thasTLSMaterial := tlsCert != \"\" && tlsKey != \"\"\n\treturn hasUserPass || hasToken || hasTLSMaterial\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 38,
                  "endLine": 73,
                  "endColumn": 46,
                  "snippet": {
                    "text": "`)\n}\n\nfunc hasNonEmptyCredentials(username, password, token, tlsCert, tlsKey string) bool {\n\thasUserPass := username != \"\" && password != \"\"\n\thasToken := token != \"\"\n\thasTLSMaterial := tlsCert != \"\" && tlsKey != \"\"\n",
                    "rendered": {
                      "text": "`)\n}\n\nfunc hasNonEmptyCredentials(username, password, token, tlsCert, tlsKey string) bool {\n\thasUserPass := username != \"\" && password != \"\"\n\thasToken := token != \"\"\n\thasTLSMaterial := tlsCert != \"\" && tlsKey != \"\"\n",
                      "markdown": "``)\n}\n\nfunc hasNonEmptyCredentials(username, password, token, tlsCert, tlsKey string) bool {\n\thasUserPass := username != \"\" && password != \"\"\n\thasToken := token != \"\"\n\thasTLSMaterial := tlsCert != \"\" && tlsKey != \"\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 115,
                  "endLine": 67,
                  "endColumn": 125,
                  "snippet": {
                    "text": "SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_CERT)\n\ttls-key: filepath to the client key used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_KEY)\n`)\n}\n\nfunc hasNonEmptyCredentials(username, password, toke",
                    "rendered": {
                      "text": "SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_CERT)\n\ttls-key: filepath to the client key used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_KEY)\n`)\n}\n\nfunc hasNonEmptyCredentials(username, password, toke",
                      "markdown": "`SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_CERT)\n\ttls-key: filepath to the client key used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_KEY)\n`)\n}\n\nfunc hasNonEmptyCredentials(username, password, toke`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 86,
                  "endLine": 67,
                  "endColumn": 94,
                  "snippet": {
                    "text": "localhost:5000\", etc.) (env: SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_CERT)\n\ttls-key: filepath to the client key used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_KEY)\n`)\n}\n\nfunc hasNonEmptyCrede",
                    "rendered": {
                      "text": "localhost:5000\", etc.) (env: SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_CERT)\n\ttls-key: filepath to the client key used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_KEY)\n`)\n}\n\nfunc hasNonEmptyCrede",
                      "markdown": "`localhost:5000\", etc.) (env: SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_CERT)\n\ttls-key: filepath to the client key used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_KEY)\n`)\n}\n\nfunc hasNonEmptyCrede`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 61,
                  "endLine": 66,
                  "endColumn": 69,
                  "snippet": {
                    "text": " authority:\n-\tauthority: the registry authority URL the URL to the registry (e.g. \"docker.io\", \"localhost:5000\", etc.) (env: SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_CERT)\n\ttls-key: filepath to the client key used for ",
                    "rendered": {
                      "text": " authority:\n-\tauthority: the registry authority URL the URL to the registry (e.g. \"docker.io\", \"localhost:5000\", etc.) (env: SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_CERT)\n\ttls-key: filepath to the client key used for ",
                      "markdown": "` authority:\n-\tauthority: the registry authority URL the URL to the registry (e.g. \"docker.io\", \"localhost:5000\", etc.) (env: SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_CERT)\n\ttls-key: filepath to the client key used for `"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 27,
                  "endLine": 66,
                  "endColumn": 35,
                  "snippet": {
                    "text": "ibes authentication for a specific authority:\n-\tauthority: the registry authority URL the URL to the registry (e.g. \"docker.io\", \"localhost:5000\", etc.) (env: SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_CERT)\n\ttls-key: fi",
                    "rendered": {
                      "text": "ibes authentication for a specific authority:\n-\tauthority: the registry authority URL the URL to the registry (e.g. \"docker.io\", \"localhost:5000\", etc.) (env: SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_CERT)\n\ttls-key: fi",
                      "markdown": "`ibes authentication for a specific authority:\n-\tauthority: the registry authority URL the URL to the registry (e.g. \"docker.io\", \"localhost:5000\", etc.) (env: SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_CERT)\n\ttls-key: fi`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 1,
                  "endLine": 66,
                  "endColumn": 9,
                  "snippet": {
                    "text": "gistries. Each entry describes authentication for a specific authority:\n-\tauthority: the registry authority URL the URL to the registry (e.g. \"docker.io\", \"localhost:5000\", etc.) (env: SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_A",
                    "rendered": {
                      "text": "gistries. Each entry describes authentication for a specific authority:\n-\tauthority: the registry authority URL the URL to the registry (e.g. \"docker.io\", \"localhost:5000\", etc.) (env: SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_A",
                      "markdown": "`gistries. Each entry describes authentication for a specific authority:\n-\tauthority: the registry authority URL the URL to the registry (e.g. \"docker.io\", \"localhost:5000\", etc.) (env: SYFT_REGISTRY_AUTH_AUTHORITY)\n\tusername: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)\n\tpassword: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)\n\ttoken: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)\n\ttls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_A`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 22,
                  "endLine": 49,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t{\n\t\t\t\tAuthority: authority,\n\t\t\t\tUsername:  secret(username),\n\t\t\t\tPassword:  secret(password),\n\t\t\t\tToken:     secret(token),\n\t\t\t\tTLSCert:   tlsCert,\n\t\t\t\tTLSKey:    tlsKey,\n",
                    "rendered": {
                      "text": "\t\t\t{\n\t\t\t\tAuthority: authority,\n\t\t\t\tUsername:  secret(username),\n\t\t\t\tPassword:  secret(password),\n\t\t\t\tToken:     secret(token),\n\t\t\t\tTLSCert:   tlsCert,\n\t\t\t\tTLSKey:    tlsKey,\n",
                      "markdown": "`\t\t\t{\n\t\t\t\tAuthority: authority,\n\t\t\t\tUsername:  secret(username),\n\t\t\t\tPassword:  secret(password),\n\t\t\t\tToken:     secret(token),\n\t\t\t\tTLSCert:   tlsCert,\n\t\t\t\tTLSKey:    tlsKey,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t{\n\t\t\t\tAuthority: authority,\n\t\t\t\tUsername:  secret(username),\n\t\t\t\tPassword:  secret(password),\n\t\t\t\tToken:     secret(token),\n\t\t\t\tTLSCert:   tlsCert,\n\t\t\t\tTLSKey:    tlsKey,\n",
                    "rendered": {
                      "text": "\t\t\t{\n\t\t\t\tAuthority: authority,\n\t\t\t\tUsername:  secret(username),\n\t\t\t\tPassword:  secret(password),\n\t\t\t\tToken:     secret(token),\n\t\t\t\tTLSCert:   tlsCert,\n\t\t\t\tTLSKey:    tlsKey,\n",
                      "markdown": "`\t\t\t{\n\t\t\t\tAuthority: authority,\n\t\t\t\tUsername:  secret(username),\n\t\t\t\tPassword:  secret(password),\n\t\t\t\tToken:     secret(token),\n\t\t\t\tTLSCert:   tlsCert,\n\t\t\t\tTLSKey:    tlsKey,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 37,
                  "endLine": 43,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_CERT\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_KEY\")\n\n\tif hasNonEmptyCredentials(username, password, token, tlsCert, tlsKey) {\n\t\t// note: we prepend the credentials such that the environment variables take precedence over on-disk configuration.\n\t\tcfg.Auth = append([]RegistryCredentials{\n\t\t\t{\n",
                    "rendered": {
                      "text": "\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_CERT\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_KEY\")\n\n\tif hasNonEmptyCredentials(username, password, token, tlsCert, tlsKey) {\n\t\t// note: we prepend the credentials such that the environment variables take precedence over on-disk configuration.\n\t\tcfg.Auth = append([]RegistryCredentials{\n\t\t\t{\n",
                      "markdown": "`\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_CERT\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_KEY\")\n\n\tif hasNonEmptyCredentials(username, password, token, tlsCert, tlsKey) {\n\t\t// note: we prepend the credentials such that the environment variables take precedence over on-disk configuration.\n\t\tcfg.Auth = append([]RegistryCredentials{\n\t\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 28,
                  "endLine": 39,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_AUTHORITY\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_USERNAME\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_PASSWORD\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TOKEN\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_CERT\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_KEY\")\n\n",
                    "rendered": {
                      "text": "\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_AUTHORITY\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_USERNAME\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_PASSWORD\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TOKEN\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_CERT\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_KEY\")\n\n",
                      "markdown": "`\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_AUTHORITY\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_USERNAME\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_PASSWORD\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TOKEN\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_CERT\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_KEY\")\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 33,
                  "endLine": 38,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\tauthority, username, password, token, tlsCert, tlsKey :=\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_AUTHORITY\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_USERNAME\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_PASSWORD\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TOKEN\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_CERT\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_KEY\")\n",
                    "rendered": {
                      "text": "\tauthority, username, password, token, tlsCert, tlsKey :=\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_AUTHORITY\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_USERNAME\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_PASSWORD\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TOKEN\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_CERT\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_KEY\")\n",
                      "markdown": "`\tauthority, username, password, token, tlsCert, tlsKey :=\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_AUTHORITY\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_USERNAME\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_PASSWORD\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TOKEN\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_CERT\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_TLS_KEY\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 22,
                  "endLine": 35,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nfunc (cfg *registry) PostLoad() error {\n\t// there may be additional credentials provided by env var that should be appended to the set of credentials\n\tauthority, username, password, token, tlsCert, tlsKey :=\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_AUTHORITY\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_USERNAME\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_PASSWORD\"),\n",
                    "rendered": {
                      "text": "\nfunc (cfg *registry) PostLoad() error {\n\t// there may be additional credentials provided by env var that should be appended to the set of credentials\n\tauthority, username, password, token, tlsCert, tlsKey :=\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_AUTHORITY\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_USERNAME\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_PASSWORD\"),\n",
                      "markdown": "`\nfunc (cfg *registry) PostLoad() error {\n\t// there may be additional credentials provided by env var that should be appended to the set of credentials\n\tauthority, username, password, token, tlsCert, tlsKey :=\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_AUTHORITY\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_USERNAME\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_PASSWORD\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 64,
                  "endLine": 14,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n\n\tTLSCert string `yaml:\"tls-cert,omitempty\" json:\"tls-cert,omitempty\" mapstructure:\"tls-cert\"`\n",
                    "rendered": {
                      "text": "\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n\n\tTLSCert string `yaml:\"tls-cert,omitempty\" json:\"tls-cert,omitempty\" mapstructure:\"tls-cert\"`\n",
                      "markdown": "`\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n\n\tTLSCert string `yaml:\"tls-cert,omitempty\" json:\"tls-cert,omitempty\" mapstructure:\"tls-cert\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 40,
                  "endLine": 14,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n\n\tTLSCert string `yaml:\"tls-cert,omitempty\" json:\"tls-cert,omitempty\" mapstructure:\"tls-cert\"`\n",
                    "rendered": {
                      "text": "\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n\n\tTLSCert string `yaml:\"tls-cert,omitempty\" json:\"tls-cert,omitempty\" mapstructure:\"tls-cert\"`\n",
                      "markdown": "`\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n\n\tTLSCert string `yaml:\"tls-cert,omitempty\" json:\"tls-cert,omitempty\" mapstructure:\"tls-cert\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 24,
                  "endLine": 14,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n\n\tTLSCert string `yaml:\"tls-cert,omitempty\" json:\"tls-cert,omitempty\" mapstructure:\"tls-cert\"`\n",
                    "rendered": {
                      "text": "\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n\n\tTLSCert string `yaml:\"tls-cert,omitempty\" json:\"tls-cert,omitempty\" mapstructure:\"tls-cert\"`\n",
                      "markdown": "`\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n\n\tTLSCert string `yaml:\"tls-cert,omitempty\" json:\"tls-cert,omitempty\" mapstructure:\"tls-cert\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 1,
                  "endLine": 14,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n\n\tTLSCert string `yaml:\"tls-cert,omitempty\" json:\"tls-cert,omitempty\" mapstructure:\"tls-cert\"`\n",
                    "rendered": {
                      "text": "\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n\n\tTLSCert string `yaml:\"tls-cert,omitempty\" json:\"tls-cert,omitempty\" mapstructure:\"tls-cert\"`\n",
                      "markdown": "`\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n\n\tTLSCert string `yaml:\"tls-cert,omitempty\" json:\"tls-cert,omitempty\" mapstructure:\"tls-cert\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 41,
                  "endLine": 12,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\ntype RegistryCredentials struct {\n\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n",
                    "rendered": {
                      "text": "\ntype RegistryCredentials struct {\n\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n",
                      "markdown": "`\ntype RegistryCredentials struct {\n\tAuthority string `yaml:\"authority\" json:\"authority\" mapstructure:\"authority\"`\n\t// IMPORTANT: do not show the username, password, or token in any output (sensitive information)\n\tUsername secret `yaml:\"username\" json:\"username\" mapstructure:\"username\"`\n\tPassword secret `yaml:\"password\" json:\"password\" mapstructure:\"password\"`\n\tToken    secret `yaml:\"token\" json:\"token\" mapstructure:\"token\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 51,
                  "endLine": 34,
                  "endColumn": 56,
                  "snippet": {
                    "text": "} = (*registry)(nil)\n\nfunc (cfg *registry) PostLoad() error {\n\t// there may be additional credentials provided by env var that should be appended to the set of credentials\n\tauthority, username, password, token, tlsCert, tlsKey :=\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_AUTHORITY\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_USERNAME\"),\n",
                    "rendered": {
                      "text": "} = (*registry)(nil)\n\nfunc (cfg *registry) PostLoad() error {\n\t// there may be additional credentials provided by env var that should be appended to the set of credentials\n\tauthority, username, password, token, tlsCert, tlsKey :=\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_AUTHORITY\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_USERNAME\"),\n",
                      "markdown": "`} = (*registry)(nil)\n\nfunc (cfg *registry) PostLoad() error {\n\t// there may be additional credentials provided by env var that should be appended to the set of credentials\n\tauthority, username, password, token, tlsCert, tlsKey :=\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_AUTHORITY\"),\n\t\tos.Getenv(\"GRYPE_REGISTRY_AUTH_USERNAME\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/match.go"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 9,
                  "endColumn": 8,
                  "snippet": {
                    "text": " via the application config.\ntype matchConfig struct {\n\tJava       matcherConfig `yaml:\"java\" json:\"java\" mapstructure:\"java\"`                   // settings for the java matcher\n\tJVM        matcherConfig `yaml:\"jvm\" json:\"jvm\" mapstructure:\"jvm\"`                      // settings for the jvm matcher\n\tDotnet     matcherConfig `yaml:\"dotnet\" json:\"dotnet\" mapstructure:\"dotnet\"`             // settings for the dotnet matcher\n\tGolang     golangConfig  `yaml:\"golang\" json:\"golang\" mapstructure:\"golang\"`             // settings for the golang matcher\n\tJavascript matcherConfig `yaml:\"javascript\" json:\"javascr",
                    "rendered": {
                      "text": " via the application config.\ntype matchConfig struct {\n\tJava       matcherConfig `yaml:\"java\" json:\"java\" mapstructure:\"java\"`                   // settings for the java matcher\n\tJVM        matcherConfig `yaml:\"jvm\" json:\"jvm\" mapstructure:\"jvm\"`                      // settings for the jvm matcher\n\tDotnet     matcherConfig `yaml:\"dotnet\" json:\"dotnet\" mapstructure:\"dotnet\"`             // settings for the dotnet matcher\n\tGolang     golangConfig  `yaml:\"golang\" json:\"golang\" mapstructure:\"golang\"`             // settings for the golang matcher\n\tJavascript matcherConfig `yaml:\"javascript\" json:\"javascr",
                      "markdown": "` via the application config.\ntype matchConfig struct {\n\tJava       matcherConfig `yaml:\"java\" json:\"java\" mapstructure:\"java\"`                   // settings for the java matcher\n\tJVM        matcherConfig `yaml:\"jvm\" json:\"jvm\" mapstructure:\"jvm\"`                      // settings for the jvm matcher\n\tDotnet     matcherConfig `yaml:\"dotnet\" json:\"dotnet\" mapstructure:\"dotnet\"`             // settings for the dotnet matcher\n\tGolang     golangConfig  `yaml:\"golang\" json:\"golang\" mapstructure:\"golang\"`             // settings for the golang matcher\n\tJavascript matcherConfig `yaml:\"javascript\" json:\"javascr`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/match.go"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 44,
                  "endLine": 59,
                  "endColumn": 50,
                  "snippet": {
                    "text": "}\n\nfunc (cfg *matchConfig) DescribeFields(descriptions clio.FieldDescriptionSet) {\n\tusingCpeDescription := `use CPE matching to find vulnerabilities`\n\tdescriptions.Add(&cfg.Java.UseCPEs, usingCpeDescription)\n\tdescriptions.Add(&cfg.Dotnet.UseCPEs, usingCpeDescription)\n\tdescriptions.Add(&cfg.Golang.UseCPEs, usingCpeDescription)\n",
                    "rendered": {
                      "text": "}\n\nfunc (cfg *matchConfig) DescribeFields(descriptions clio.FieldDescriptionSet) {\n\tusingCpeDescription := `use CPE matching to find vulnerabilities`\n\tdescriptions.Add(&cfg.Java.UseCPEs, usingCpeDescription)\n\tdescriptions.Add(&cfg.Dotnet.UseCPEs, usingCpeDescription)\n\tdescriptions.Add(&cfg.Golang.UseCPEs, usingCpeDescription)\n",
                      "markdown": "`}\n\nfunc (cfg *matchConfig) DescribeFields(descriptions clio.FieldDescriptionSet) {\n\tusingCpeDescription := `use CPE matching to find vulnerabilities`\n\tdescriptions.Add(&cfg.Java.UseCPEs, usingCpeDescription)\n\tdescriptions.Add(&cfg.Dotnet.UseCPEs, usingCpeDescription)\n\tdescriptions.Add(&cfg.Golang.UseCPEs, usingCpeDescription)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/match.go"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "endColumn": 6,
                  "snippet": {
                    "text": "           // settings for the golang matcher\n\tJavascript matcherConfig `yaml:\"javascript\" json:\"javascript\" mapstructure:\"javascript\"` // settings for the javascript matcher\n\tPython     matcherConfig `yaml:\"python\" json:\"python\" mapstructure:\"python\"`             // settings for the python matcher\n\tRuby       matcherConfig `yaml:\"ruby\" json:\"ruby\" mapstructure:\"ruby\"`                   // settings for the ruby matcher\n\tRust       matcherConfig `yaml:\"rust\" json:\"rust\" mapstructure:\"rust\"`                   // settings for the rust matcher\n\tStock      matcherConfig `yaml:\"stock\" json:\"stock\" mapstru",
                    "rendered": {
                      "text": "           // settings for the golang matcher\n\tJavascript matcherConfig `yaml:\"javascript\" json:\"javascript\" mapstructure:\"javascript\"` // settings for the javascript matcher\n\tPython     matcherConfig `yaml:\"python\" json:\"python\" mapstructure:\"python\"`             // settings for the python matcher\n\tRuby       matcherConfig `yaml:\"ruby\" json:\"ruby\" mapstructure:\"ruby\"`                   // settings for the ruby matcher\n\tRust       matcherConfig `yaml:\"rust\" json:\"rust\" mapstructure:\"rust\"`                   // settings for the rust matcher\n\tStock      matcherConfig `yaml:\"stock\" json:\"stock\" mapstru",
                      "markdown": "`           // settings for the golang matcher\n\tJavascript matcherConfig `yaml:\"javascript\" json:\"javascript\" mapstructure:\"javascript\"` // settings for the javascript matcher\n\tPython     matcherConfig `yaml:\"python\" json:\"python\" mapstructure:\"python\"`             // settings for the python matcher\n\tRuby       matcherConfig `yaml:\"ruby\" json:\"ruby\" mapstructure:\"ruby\"`                   // settings for the ruby matcher\n\tRust       matcherConfig `yaml:\"rust\" json:\"rust\" mapstructure:\"rust\"`                   // settings for the rust matcher\n\tStock      matcherConfig `yaml:\"stock\" json:\"stock\" mapstru`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/db_check.go"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 46,
                  "endLine": 59,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n\tfmt.Printf(\"Updated DB version %d was built on %s\\n\", updateDBEntry.Version, updateDBEntry.Built.String())\n\tfmt.Printf(\"Updated DB URL: %s\\n\", updateDBEntry.URL.String())\n\tfmt.Println(\"You can run 'grype db update' to update to the latest db\")\n\n\tos.Exit(exitCodeOnDBUpgradeAvailable) //nolint:gocritic\n\n",
                    "rendered": {
                      "text": "\n\tfmt.Printf(\"Updated DB version %d was built on %s\\n\", updateDBEntry.Version, updateDBEntry.Built.String())\n\tfmt.Printf(\"Updated DB URL: %s\\n\", updateDBEntry.URL.String())\n\tfmt.Println(\"You can run 'grype db update' to update to the latest db\")\n\n\tos.Exit(exitCodeOnDBUpgradeAvailable) //nolint:gocritic\n\n",
                      "markdown": "`\n\tfmt.Printf(\"Updated DB version %d was built on %s\\n\", updateDBEntry.Version, updateDBEntry.Built.String())\n\tfmt.Printf(\"Updated DB URL: %s\\n\", updateDBEntry.URL.String())\n\tfmt.Println(\"You can run 'grype db update' to update to the latest db\")\n\n\tos.Exit(exitCodeOnDBUpgradeAvailable) //nolint:gocritic\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/db_check.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 27,
                  "endLine": 48,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t}\n\n\tif !updateAvailable {\n\t\treturn stderrPrintLnf(\"No update available\")\n\t}\n\n\tfmt.Println(\"Update available!\")\n",
                    "rendered": {
                      "text": "\t}\n\n\tif !updateAvailable {\n\t\treturn stderrPrintLnf(\"No update available\")\n\t}\n\n\tfmt.Println(\"Update available!\")\n",
                      "markdown": "`\t}\n\n\tif !updateAvailable {\n\t\treturn stderrPrintLnf(\"No update available\")\n\t}\n\n\tfmt.Println(\"Update available!\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/db_check.go"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 45,
                  "endLine": 23,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n\treturn app.SetupCommand(&cobra.Command{\n\t\tUse:   \"check\",\n\t\tShort: \"check to see if there is a database update available\",\n\t\tPreRunE: func(cmd *cobra.Command, args []string) error {\n\t\t\t// DB commands should not opt into the low-pass check filter\n\t\t\topts.DB.MaxUpdateCheckFrequency = 0\n",
                    "rendered": {
                      "text": "\n\treturn app.SetupCommand(&cobra.Command{\n\t\tUse:   \"check\",\n\t\tShort: \"check to see if there is a database update available\",\n\t\tPreRunE: func(cmd *cobra.Command, args []string) error {\n\t\t\t// DB commands should not opt into the low-pass check filter\n\t\t\topts.DB.MaxUpdateCheckFrequency = 0\n",
                      "markdown": "`\n\treturn app.SetupCommand(&cobra.Command{\n\t\tUse:   \"check\",\n\t\tShort: \"check to see if there is a database update available\",\n\t\tPreRunE: func(cmd *cobra.Command, args []string) error {\n\t\t\t// DB commands should not opt into the low-pass check filter\n\t\t\topts.DB.MaxUpdateCheckFrequency = 0\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/database.go"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 13,
                  "endLine": 80,
                  "endColumn": 19,
                  "snippet": {
                    "text": "tions.Add(&cfg.ValidateAge, `ensure db build is no older than the max-allowed-built-age`)\n\tdescriptions.Add(&cfg.ValidateByHashOnStart, `validate the database matches the known hash each execution`)\n\tdescriptions.Add(&cfg.MaxAllowedBuiltAge, `Max allowed age for vulnerability database,\nage being the time since it was built\nDefault max age is 120h (or five days)`)\n\tdescriptions.Add(&cfg.RequireUpdateCheck, `fail the scan if unable to check for database updates`)\n\tdescriptions.Add(&cfg.UpdateAvailableTimeout, `Timeout for downloading GRYPE_DB_UPDATE_URL to see if the database needs to be downloaded\nTh",
                    "rendered": {
                      "text": "tions.Add(&cfg.ValidateAge, `ensure db build is no older than the max-allowed-built-age`)\n\tdescriptions.Add(&cfg.ValidateByHashOnStart, `validate the database matches the known hash each execution`)\n\tdescriptions.Add(&cfg.MaxAllowedBuiltAge, `Max allowed age for vulnerability database,\nage being the time since it was built\nDefault max age is 120h (or five days)`)\n\tdescriptions.Add(&cfg.RequireUpdateCheck, `fail the scan if unable to check for database updates`)\n\tdescriptions.Add(&cfg.UpdateAvailableTimeout, `Timeout for downloading GRYPE_DB_UPDATE_URL to see if the database needs to be downloaded\nTh",
                      "markdown": "`tions.Add(&cfg.ValidateAge, `ensure db build is no older than the max-allowed-built-age`)\n\tdescriptions.Add(&cfg.ValidateByHashOnStart, `validate the database matches the known hash each execution`)\n\tdescriptions.Add(&cfg.MaxAllowedBuiltAge, `Max allowed age for vulnerability database,\nage being the time since it was built\nDefault max age is 120h (or five days)`)\n\tdescriptions.Add(&cfg.RequireUpdateCheck, `fail the scan if unable to check for database updates`)\n\tdescriptions.Add(&cfg.UpdateAvailableTimeout, `Timeout for downloading GRYPE_DB_UPDATE_URL to see if the database needs to be downloaded\nTh`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry_test.go"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 77,
                  "endLine": 67,
                  "endColumn": 85,
                  "snippet": {
                    "text": "\n\tfor _, test := range tests {\n\t\tt.Run(fmt.Sprintf(\"%+v\", test), func(t *testing.T) {\n\t\t\tassert.Equal(t, test.expected, hasNonEmptyCredentials(test.username, test.password, test.token, test.cert, test.key))\n\t\t})\n\t}\n}\n",
                    "rendered": {
                      "text": "\n\tfor _, test := range tests {\n\t\tt.Run(fmt.Sprintf(\"%+v\", test), func(t *testing.T) {\n\t\t\tassert.Equal(t, test.expected, hasNonEmptyCredentials(test.username, test.password, test.token, test.cert, test.key))\n\t\t})\n\t}\n}\n",
                      "markdown": "`\n\tfor _, test := range tests {\n\t\tt.Run(fmt.Sprintf(\"%+v\", test), func(t *testing.T) {\n\t\t\tassert.Equal(t, test.expected, hasNonEmptyCredentials(test.username, test.password, test.token, test.cert, test.key))\n\t\t})\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/options/registry_test.go"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 12,
                  "endLine": 14,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nfunc TestHasNonEmptyCredentials(t *testing.T) {\n\ttests := []struct {\n\t\tusername, password, token, cert, key string\n\t\texpected                             bool\n\t}{\n\n",
                    "rendered": {
                      "text": "\nfunc TestHasNonEmptyCredentials(t *testing.T) {\n\ttests := []struct {\n\t\tusername, password, token, cert, key string\n\t\texpected                             bool\n\t}{\n\n",
                      "markdown": "`\nfunc TestHasNonEmptyCredentials(t *testing.T) {\n\ttests := []struct {\n\t\tusername, password, token, cert, key string\n\t\texpected                             bool\n\t}{\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/distro/type.go"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tCentOS       Type = \"centos\"\n\tFedora       Type = \"fedora\"\n\tAlpine       Type = \"alpine\"\n\tBusybox      Type = \"busybox\"\n\tAmazonLinux  Type = \"amazonlinux\"\n\tOracleLinux  Type = \"oraclelinux\"\n\tArchLinux    Type = \"archlinux\"\n",
                    "rendered": {
                      "text": "\tCentOS       Type = \"centos\"\n\tFedora       Type = \"fedora\"\n\tAlpine       Type = \"alpine\"\n\tBusybox      Type = \"busybox\"\n\tAmazonLinux  Type = \"amazonlinux\"\n\tOracleLinux  Type = \"oraclelinux\"\n\tArchLinux    Type = \"archlinux\"\n",
                      "markdown": "`\tCentOS       Type = \"centos\"\n\tFedora       Type = \"fedora\"\n\tAlpine       Type = \"alpine\"\n\tBusybox      Type = \"busybox\"\n\tAmazonLinux  Type = \"amazonlinux\"\n\tOracleLinux  Type = \"oraclelinux\"\n\tArchLinux    Type = \"archlinux\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/match/explicit_ignores_test.go"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 9,
                  "endLine": 111,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\tt.Run(test.name, func(t *testing.T) {\n\t\t\tmatches := NewMatches()\n\n\t\t\tfor _, cp := range test.matches {\n\t\t\t\tmatches.Add(Match{\n\n\t\t\t\t\tPackage: pkg.Package{\n",
                    "rendered": {
                      "text": "\t\tt.Run(test.name, func(t *testing.T) {\n\t\t\tmatches := NewMatches()\n\n\t\t\tfor _, cp := range test.matches {\n\t\t\t\tmatches.Add(Match{\n\n\t\t\t\t\tPackage: pkg.Package{\n",
                      "markdown": "`\t\tt.Run(test.name, func(t *testing.T) {\n\t\t\tmatches := NewMatches()\n\n\t\t\tfor _, cp := range test.matches {\n\t\t\t\tmatches.Add(Match{\n\n\t\t\t\t\tPackage: pkg.Package{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/match/matches.go"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "endColumn": 6,
                  "snippet": {
                    "text": "}\n\nfunc (r *Matches) Diff(other Matches) *Matches {\n\tdiff := newMatches()\n\tfor fingerprint := range r.byFingerprint {\n\t\tif _, exists := other.byFingerprint[fingerprint]; !exists {\n\t\t\tdiff.Add(r.byFingerprint[fingerprint])\n",
                    "rendered": {
                      "text": "}\n\nfunc (r *Matches) Diff(other Matches) *Matches {\n\tdiff := newMatches()\n\tfor fingerprint := range r.byFingerprint {\n\t\tif _, exists := other.byFingerprint[fingerprint]; !exists {\n\t\t\tdiff.Add(r.byFingerprint[fingerprint])\n",
                      "markdown": "`}\n\nfunc (r *Matches) Diff(other Matches) *Matches {\n\tdiff := newMatches()\n\tfor fingerprint := range r.byFingerprint {\n\t\tif _, exists := other.byFingerprint[fingerprint]; !exists {\n\t\t\tdiff.Add(r.byFingerprint[fingerprint])\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/db_search.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 28,
                  "endLine": 58,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\tdefer dbCloser.Close()\n\t}\n\n\tvulnerabilities, err := str.Get(vulnerabilityID, \"\")\n\tif err != nil {\n\t\treturn err\n\t}\n",
                    "rendered": {
                      "text": "\t\tdefer dbCloser.Close()\n\t}\n\n\tvulnerabilities, err := str.Get(vulnerabilityID, \"\")\n\tif err != nil {\n\t\treturn err\n\t}\n",
                      "markdown": "`\t\tdefer dbCloser.Close()\n\t}\n\n\tvulnerabilities, err := str.Get(vulnerabilityID, \"\")\n\tif err != nil {\n\t\treturn err\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/db_search.go"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 38,
                  "endLine": 110,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\tenc.SetEscapeHTML(false)\n\t\tenc.SetIndent(\"\", \" \")\n\t\tif err := enc.Encode(vulnerabilities); err != nil {\n\t\t\treturn fmt.Errorf(\"failed to encode diff information: %+v\", err)\n\t\t}\n\tdefault:\n\t\treturn fmt.Errorf(\"unsupported output format: %s\", outputFormat)\n",
                    "rendered": {
                      "text": "\t\tenc.SetEscapeHTML(false)\n\t\tenc.SetIndent(\"\", \" \")\n\t\tif err := enc.Encode(vulnerabilities); err != nil {\n\t\t\treturn fmt.Errorf(\"failed to encode diff information: %+v\", err)\n\t\t}\n\tdefault:\n\t\treturn fmt.Errorf(\"unsupported output format: %s\", outputFormat)\n",
                      "markdown": "`\t\tenc.SetEscapeHTML(false)\n\t\tenc.SetIndent(\"\", \" \")\n\t\tif err := enc.Encode(vulnerabilities); err != nil {\n\t\t\treturn fmt.Errorf(\"failed to encode diff information: %+v\", err)\n\t\t}\n\tdefault:\n\t\treturn fmt.Errorf(\"unsupported output format: %s\", outputFormat)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/db_update.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 25,
                  "endLine": 48,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\tresult = \"Vulnerability database updated to latest version!\\n\"\n\t}\n\n\tlog.Debugf(\"completed db update check with result: %s\", result)\n\n\tbus.Report(result)\n\n",
                    "rendered": {
                      "text": "\t\tresult = \"Vulnerability database updated to latest version!\\n\"\n\t}\n\n\tlog.Debugf(\"completed db update check with result: %s\", result)\n\n\tbus.Report(result)\n\n",
                      "markdown": "`\t\tresult = \"Vulnerability database updated to latest version!\\n\"\n\t}\n\n\tlog.Debugf(\"completed db update check with result: %s\", result)\n\n\tbus.Report(result)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/db_update.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 37,
                  "endLine": 43,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\treturn fmt.Errorf(\"unable to update vulnerability database: %+v\", err)\n\t}\n\n\tresult := \"No vulnerability database update available\\n\"\n\tif updated {\n\t\tresult = \"Vulnerability database updated to latest version!\\n\"\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn fmt.Errorf(\"unable to update vulnerability database: %+v\", err)\n\t}\n\n\tresult := \"No vulnerability database update available\\n\"\n\tif updated {\n\t\tresult = \"Vulnerability database updated to latest version!\\n\"\n\t}\n",
                      "markdown": "`\t\treturn fmt.Errorf(\"unable to update vulnerability database: %+v\", err)\n\t}\n\n\tresult := \"No vulnerability database update available\\n\"\n\tif updated {\n\t\tresult = \"Vulnerability database updated to latest version!\\n\"\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/db_update.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t}\n\tupdated, err := dbCurator.Update()\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to update vulnerability database: %+v\", err)\n\t}\n\n\tresult := \"No vulnerability database update available\\n\"\n",
                    "rendered": {
                      "text": "\t}\n\tupdated, err := dbCurator.Update()\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to update vulnerability database: %+v\", err)\n\t}\n\n\tresult := \"No vulnerability database update available\\n\"\n",
                      "markdown": "`\t}\n\tupdated, err := dbCurator.Update()\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to update vulnerability database: %+v\", err)\n\t}\n\n\tresult := \"No vulnerability database update available\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/listing_test.go"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 16,
                  "endLine": 19,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t// setup mock\n\thandler := http.NewServeMux()\n\thandler.HandleFunc(listingFile, func(w http.ResponseWriter, r *http.Request) {\n\t\tgot = r.Header.Get(\"User-Agent\")\n\t\tw.WriteHeader(http.StatusOK)\n\t\t_, _ = w.Write([]byte(\"1.0.0\"))\n\t})\n",
                    "rendered": {
                      "text": "\t// setup mock\n\thandler := http.NewServeMux()\n\thandler.HandleFunc(listingFile, func(w http.ResponseWriter, r *http.Request) {\n\t\tgot = r.Header.Get(\"User-Agent\")\n\t\tw.WriteHeader(http.StatusOK)\n\t\t_, _ = w.Write([]byte(\"1.0.0\"))\n\t})\n",
                      "markdown": "`\t// setup mock\n\thandler := http.NewServeMux()\n\thandler.HandleFunc(listingFile, func(w http.ResponseWriter, r *http.Request) {\n\t\tgot = r.Header.Get(\"User-Agent\")\n\t\tw.WriteHeader(http.StatusOK)\n\t\t_, _ = w.Write([]byte(\"1.0.0\"))\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/db_diff.go"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 89,
                  "endLine": 120,
                  "endColumn": 95,
                  "snippet": {
                    "text": "\tsupportedSchema := dbCurator.SupportedSchema()\n\tavailable, exists := listing.Available[supportedSchema]\n\tif len(available) < 2 || !exists {\n\t\treturn \"\", \"\", stderrPrintLnf(\"Not enough databases available for the current schema to diff (%d)\", supportedSchema)\n\t}\n\n\ttargetURL = available[0].URL.String()\n",
                    "rendered": {
                      "text": "\tsupportedSchema := dbCurator.SupportedSchema()\n\tavailable, exists := listing.Available[supportedSchema]\n\tif len(available) < 2 || !exists {\n\t\treturn \"\", \"\", stderrPrintLnf(\"Not enough databases available for the current schema to diff (%d)\", supportedSchema)\n\t}\n\n\ttargetURL = available[0].URL.String()\n",
                      "markdown": "`\tsupportedSchema := dbCurator.SupportedSchema()\n\tavailable, exists := listing.Available[supportedSchema]\n\tif len(available) < 2 || !exists {\n\t\treturn \"\", \"\", stderrPrintLnf(\"Not enough databases available for the current schema to diff (%d)\", supportedSchema)\n\t}\n\n\ttargetURL = available[0].URL.String()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/db_diff.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 76,
                  "endLine": 27,
                  "endColumn": 82,
                  "snippet": {
                    "text": "\nfunc (d *dbDiffOptions) AddFlags(flags clio.FlagSet) {\n\tflags.StringVarP(&d.Output, \"output\", \"o\", \"format to display results (available=[table, json])\")\n\tflags.BoolVarP(&d.Delete, \"delete\", \"d\", \"delete downloaded databases after diff occurs\")\n}\n\nfunc DBDiff(app clio.Application) *cobra.Command {\n",
                    "rendered": {
                      "text": "\nfunc (d *dbDiffOptions) AddFlags(flags clio.FlagSet) {\n\tflags.StringVarP(&d.Output, \"output\", \"o\", \"format to display results (available=[table, json])\")\n\tflags.BoolVarP(&d.Delete, \"delete\", \"d\", \"delete downloaded databases after diff occurs\")\n}\n\nfunc DBDiff(app clio.Application) *cobra.Command {\n",
                      "markdown": "`\nfunc (d *dbDiffOptions) AddFlags(flags clio.FlagSet) {\n\tflags.StringVarP(&d.Output, \"output\", \"o\", \"format to display results (available=[table, json])\")\n\tflags.BoolVarP(&d.Delete, \"delete\", \"d\", \"delete downloaded databases after diff occurs\")\n}\n\nfunc DBDiff(app clio.Application) *cobra.Command {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/update_test.go"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 16,
                  "endLine": 219,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t// setup mock\n\thandler := http.NewServeMux()\n\thandler.HandleFunc(latestAppVersionURL.path, func(w http.ResponseWriter, r *http.Request) {\n\t\tgot = r.Header.Get(\"User-Agent\")\n\t\tw.WriteHeader(http.StatusOK)\n\t\t_, _ = w.Write([]byte(\"1.0.0\"))\n\t})\n",
                    "rendered": {
                      "text": "\t// setup mock\n\thandler := http.NewServeMux()\n\thandler.HandleFunc(latestAppVersionURL.path, func(w http.ResponseWriter, r *http.Request) {\n\t\tgot = r.Header.Get(\"User-Agent\")\n\t\tw.WriteHeader(http.StatusOK)\n\t\t_, _ = w.Write([]byte(\"1.0.0\"))\n\t})\n",
                      "markdown": "`\t// setup mock\n\thandler := http.NewServeMux()\n\thandler.HandleFunc(latestAppVersionURL.path, func(w http.ResponseWriter, r *http.Request) {\n\t\tgot = r.Header.Get(\"User-Agent\")\n\t\tw.WriteHeader(http.StatusOK)\n\t\t_, _ = w.Write([]byte(\"1.0.0\"))\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/completion.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 20,
                  "endLine": 31,
                  "endColumn": 26,
                  "snippet": {
                    "text": "Linux:\n  $ grype completion bash > /etc/bash_completion.d/grype\nMacOS:\n  $ grype completion bash > /usr/local/etc/bash_completion.d/grype\n\nZsh:\n\n",
                    "rendered": {
                      "text": "Linux:\n  $ grype completion bash > /etc/bash_completion.d/grype\nMacOS:\n  $ grype completion bash > /usr/local/etc/bash_completion.d/grype\n\nZsh:\n\n",
                      "markdown": "`Linux:\n  $ grype completion bash > /etc/bash_completion.d/grype\nMacOS:\n  $ grype completion bash > /usr/local/etc/bash_completion.d/grype\n\nZsh:\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/completion.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 20,
                  "endLine": 29,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# To load completions for each session, execute once:\nLinux:\n  $ grype completion bash > /etc/bash_completion.d/grype\nMacOS:\n  $ grype completion bash > /usr/local/etc/bash_completion.d/grype\n\n",
                    "rendered": {
                      "text": "\n# To load completions for each session, execute once:\nLinux:\n  $ grype completion bash > /etc/bash_completion.d/grype\nMacOS:\n  $ grype completion bash > /usr/local/etc/bash_completion.d/grype\n\n",
                      "markdown": "`\n# To load completions for each session, execute once:\nLinux:\n  $ grype completion bash > /etc/bash_completion.d/grype\nMacOS:\n  $ grype completion bash > /usr/local/etc/bash_completion.d/grype\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/completion.go"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 21,
                  "endLine": 106,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\treturn []string{\"completion failed\"}, cobra.ShellCompDirectiveError\n\t}\n\tif len(dockerImageRepoTags) == 0 {\n\t\treturn []string{\"no docker images found\"}, cobra.ShellCompDirectiveError\n\t}\n\t// ShellCompDirectiveDefault indicates that the shell will perform its default behavior after completions have\n\t// been provided (without implying other possible directives)\n",
                    "rendered": {
                      "text": "\t\treturn []string{\"completion failed\"}, cobra.ShellCompDirectiveError\n\t}\n\tif len(dockerImageRepoTags) == 0 {\n\t\treturn []string{\"no docker images found\"}, cobra.ShellCompDirectiveError\n\t}\n\t// ShellCompDirectiveDefault indicates that the shell will perform its default behavior after completions have\n\t// been provided (without implying other possible directives)\n",
                      "markdown": "`\t\treturn []string{\"completion failed\"}, cobra.ShellCompDirectiveError\n\t}\n\tif len(dockerImageRepoTags) == 0 {\n\t\treturn []string{\"no docker images found\"}, cobra.ShellCompDirectiveError\n\t}\n\t// ShellCompDirectiveDefault indicates that the shell will perform its default behavior after completions have\n\t// been provided (without implying other possible directives)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/completion.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 18,
                  "endLine": 41,
                  "endColumn": 23,
                  "snippet": {
                    "text": "$ echo \"autoload -U compinit; compinit\" >> ~/.zshrc\n\n# To load completions for each session, execute once:\n$ grype completion zsh > \"${fpath[1]}/_grype\"\n\n# You will need to start a new shell for this setup to take effect.\n\n",
                    "rendered": {
                      "text": "$ echo \"autoload -U compinit; compinit\" >> ~/.zshrc\n\n# To load completions for each session, execute once:\n$ grype completion zsh > \"${fpath[1]}/_grype\"\n\n# You will need to start a new shell for this setup to take effect.\n\n",
                      "markdown": "`$ echo \"autoload -U compinit; compinit\" >> ~/.zshrc\n\n# To load completions for each session, execute once:\n$ grype completion zsh > \"${fpath[1]}/_grype\"\n\n# You will need to start a new shell for this setup to take effect.\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/completion.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 20,
                  "endLine": 31,
                  "endColumn": 26,
                  "snippet": {
                    "text": "Linux:\n  $ grype completion bash > /etc/bash_completion.d/grype\nMacOS:\n  $ grype completion bash > /usr/local/etc/bash_completion.d/grype\n\nZsh:\n\n",
                    "rendered": {
                      "text": "Linux:\n  $ grype completion bash > /etc/bash_completion.d/grype\nMacOS:\n  $ grype completion bash > /usr/local/etc/bash_completion.d/grype\n\nZsh:\n\n",
                      "markdown": "`Linux:\n  $ grype completion bash > /etc/bash_completion.d/grype\nMacOS:\n  $ grype completion bash > /usr/local/etc/bash_completion.d/grype\n\nZsh:\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/completion.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 20,
                  "endLine": 29,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# To load completions for each session, execute once:\nLinux:\n  $ grype completion bash > /etc/bash_completion.d/grype\nMacOS:\n  $ grype completion bash > /usr/local/etc/bash_completion.d/grype\n\n",
                    "rendered": {
                      "text": "\n# To load completions for each session, execute once:\nLinux:\n  $ grype completion bash > /etc/bash_completion.d/grype\nMacOS:\n  $ grype completion bash > /usr/local/etc/bash_completion.d/grype\n\n",
                      "markdown": "`\n# To load completions for each session, execute once:\nLinux:\n  $ grype completion bash > /etc/bash_completion.d/grype\nMacOS:\n  $ grype completion bash > /usr/local/etc/bash_completion.d/grype\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/completion.go"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 62,
                  "endLine": 20,
                  "endColumn": 70,
                  "snippet": {
                    "text": "func Completion(app clio.Application) *cobra.Command {\n\treturn &cobra.Command{\n\t\tUse:   \"completion [bash|zsh|fish]\",\n\t\tShort: \"Generate a shell completion for Grype (listing local docker images)\",\n\t\tLong: `To load completions (docker image list):\n\nBash:\n",
                    "rendered": {
                      "text": "func Completion(app clio.Application) *cobra.Command {\n\treturn &cobra.Command{\n\t\tUse:   \"completion [bash|zsh|fish]\",\n\t\tShort: \"Generate a shell completion for Grype (listing local docker images)\",\n\t\tLong: `To load completions (docker image list):\n\nBash:\n",
                      "markdown": "`func Completion(app clio.Application) *cobra.Command {\n\treturn &cobra.Command{\n\t\tUse:   \"completion [bash|zsh|fish]\",\n\t\tShort: \"Generate a shell completion for Grype (listing local docker images)\",\n\t\tLong: `To load completions (docker image list):\n\nBash:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/root.go"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 74,
                  "endLine": 59,
                  "endColumn": 82,
                  "snippet": {
                    "text": "a Docker tar, OCI tar, OCI directory, SIF container, or generic filesystem directory\n\nYou can also explicitly specify the scheme to use:\n    {{.appName}} podman:yourrepo/yourimage:tag          explicitly use the Podman daemon\n    {{.appName}} docker:yourrepo/yourimage:tag          explicitly use the Docker daemon\n    {{.appName}} docker-archive:path/to/yourimage.tar   use a tarball from disk for archives created from \"docker save\"\n    {{.appName}} oci-archive:path/to/yourimage.tar      use a tarball from disk for OCI archives (from Podman or otherwise)\n    {{.appName}} oci-dir:path/to/yourimage       ",
                    "rendered": {
                      "text": "a Docker tar, OCI tar, OCI directory, SIF container, or generic filesystem directory\n\nYou can also explicitly specify the scheme to use:\n    {{.appName}} podman:yourrepo/yourimage:tag          explicitly use the Podman daemon\n    {{.appName}} docker:yourrepo/yourimage:tag          explicitly use the Docker daemon\n    {{.appName}} docker-archive:path/to/yourimage.tar   use a tarball from disk for archives created from \"docker save\"\n    {{.appName}} oci-archive:path/to/yourimage.tar      use a tarball from disk for OCI archives (from Podman or otherwise)\n    {{.appName}} oci-dir:path/to/yourimage       ",
                      "markdown": "`a Docker tar, OCI tar, OCI directory, SIF container, or generic filesystem directory\n\nYou can also explicitly specify the scheme to use:\n    {{.appName}} podman:yourrepo/yourimage:tag          explicitly use the Podman daemon\n    {{.appName}} docker:yourrepo/yourimage:tag          explicitly use the Docker daemon\n    {{.appName}} docker-archive:path/to/yourimage.tar   use a tarball from disk for archives created from \"docker save\"\n    {{.appName}} oci-archive:path/to/yourimage.tar      use a tarball from disk for OCI archives (from Podman or otherwise)\n    {{.appName}} oci-dir:path/to/yourimage       `"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/root.go"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 53,
                  "endLine": 55,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\nSupports the following image sources:\n    {{.appName}} yourrepo/yourimage:tag             defaults to using images from a Docker daemon\n    {{.appName}} path/to/yourproject                a Docker tar, OCI tar, OCI directory, SIF container, or generic filesystem directory\n\nYou can also explicitly specify the scheme to use:\n    {{.appName}} podman:yourrepo/yourimage:tag          explicitly use the Podman daemon\n",
                    "rendered": {
                      "text": "\nSupports the following image sources:\n    {{.appName}} yourrepo/yourimage:tag             defaults to using images from a Docker daemon\n    {{.appName}} path/to/yourproject                a Docker tar, OCI tar, OCI directory, SIF container, or generic filesystem directory\n\nYou can also explicitly specify the scheme to use:\n    {{.appName}} podman:yourrepo/yourimage:tag          explicitly use the Podman daemon\n",
                      "markdown": "`\nSupports the following image sources:\n    {{.appName}} yourrepo/yourimage:tag             defaults to using images from a Docker daemon\n    {{.appName}} path/to/yourproject                a Docker tar, OCI tar, OCI directory, SIF container, or generic filesystem directory\n\nYou can also explicitly specify the scheme to use:\n    {{.appName}} podman:yourrepo/yourimage:tag          explicitly use the Podman daemon\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/root.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 83,
                  "endLine": 54,
                  "endColumn": 91,
                  "snippet": {
                    "text": "\t\tLong: stringutil.Tprintf(`A vulnerability scanner for container images, filesystems, and SBOMs.\n\nSupports the following image sources:\n    {{.appName}} yourrepo/yourimage:tag             defaults to using images from a Docker daemon\n    {{.appName}} path/to/yourproject                a Docker tar, OCI tar, OCI directory, SIF container, or generic filesystem directory\n\nYou can also explicitly specify the scheme to use:\n",
                    "rendered": {
                      "text": "\t\tLong: stringutil.Tprintf(`A vulnerability scanner for container images, filesystems, and SBOMs.\n\nSupports the following image sources:\n    {{.appName}} yourrepo/yourimage:tag             defaults to using images from a Docker daemon\n    {{.appName}} path/to/yourproject                a Docker tar, OCI tar, OCI directory, SIF container, or generic filesystem directory\n\nYou can also explicitly specify the scheme to use:\n",
                      "markdown": "`\t\tLong: stringutil.Tprintf(`A vulnerability scanner for container images, filesystems, and SBOMs.\n\nSupports the following image sources:\n    {{.appName}} yourrepo/yourimage:tag             defaults to using images from a Docker daemon\n    {{.appName}} path/to/yourproject                a Docker tar, OCI tar, OCI directory, SIF container, or generic filesystem directory\n\nYou can also explicitly specify the scheme to use:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/commands/root.go"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 23,
                  "endLine": 280,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t})\n\t} else {\n\t\tlog.Debugf(\"no new %s update available\", id.Name)\n\t}\n}\n\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t})\n\t} else {\n\t\tlog.Debugf(\"no new %s update available\", id.Name)\n\t}\n}\n\n",
                      "markdown": "`\t\t\t},\n\t\t})\n\t} else {\n\t\tlog.Debugf(\"no new %s update available\", id.Name)\n\t}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/cli.go"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 21,
                  "endLine": 104,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t}\n\t}\n\n\tlog.Debug(\"unable to find 'github.com/anchore/syft' from the buildinfo section of the binary\")\n\treturn \"\", \"\"\n}\n\n",
                    "rendered": {
                      "text": "\t\t}\n\t}\n\n\tlog.Debug(\"unable to find 'github.com/anchore/syft' from the buildinfo section of the binary\")\n\treturn \"\", \"\"\n}\n\n",
                      "markdown": "`\t\t}\n\t}\n\n\tlog.Debug(\"unable to find 'github.com/anchore/syft' from the buildinfo section of the binary\")\n\treturn \"\", \"\"\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/cli.go"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 22,
                  "endLine": 94,
                  "endColumn": 28,
                  "snippet": {
                    "text": "func syftVersion() (string, any) {\n\tbuildInfo, ok := debug.ReadBuildInfo()\n\tif !ok {\n\t\tlog.Debug(\"unable to find the buildinfo section of the binary (syft version is unknown)\")\n\t\treturn \"\", \"\"\n\t}\n\n",
                    "rendered": {
                      "text": "func syftVersion() (string, any) {\n\tbuildInfo, ok := debug.ReadBuildInfo()\n\tif !ok {\n\t\tlog.Debug(\"unable to find the buildinfo section of the binary (syft version is unknown)\")\n\t\treturn \"\", \"\"\n\t}\n\n",
                      "markdown": "`func syftVersion() (string, any) {\n\tbuildInfo, ok := debug.ReadBuildInfo()\n\tif !ok {\n\t\tlog.Debug(\"unable to find the buildinfo section of the binary (syft version is unknown)\")\n\t\treturn \"\", \"\"\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/cli.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7,
                  "endLine": 30,
                  "snippet": {
                    "text": "\nfunc Command(id clio.Identification) *cobra.Command {\n\t_, cmd := create(id)\n\treturn cmd\n}\n\nfunc create(id clio.Identification) (clio.Application, *cobra.Command) {\n\tclioCfg := clio.NewSetupConfig(id).\n",
                    "rendered": {
                      "text": "\nfunc Command(id clio.Identification) *cobra.Command {\n\t_, cmd := create(id)\n\treturn cmd\n}\n\nfunc create(id clio.Identification) (clio.Application, *cobra.Command) {\n\tclioCfg := clio.NewSetupConfig(id).\n",
                      "markdown": "`\nfunc Command(id clio.Identification) *cobra.Command {\n\t_, cmd := create(id)\n\treturn cmd\n}\n\nfunc create(id clio.Identification) (clio.Application, *cobra.Command) {\n\tclioCfg := clio.NewSetupConfig(id).\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/cli.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 3,
                  "endLine": 28,
                  "endColumn": 8,
                  "snippet": {
                    "text": "}\n\nfunc Command(id clio.Identification) *cobra.Command {\n\t_, cmd := create(id)\n\treturn cmd\n}\n\n",
                    "rendered": {
                      "text": "}\n\nfunc Command(id clio.Identification) *cobra.Command {\n\t_, cmd := create(id)\n\treturn cmd\n}\n\n",
                      "markdown": "`}\n\nfunc Command(id clio.Identification) *cobra.Command {\n\t_, cmd := create(id)\n\treturn cmd\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/internal/ui/ui.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 25,
                  "endLine": 49,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nfunc (m *UI) Setup(subscription partybus.Unsubscribable) error {\n\t// we still want to collect log messages, however, we also the logger shouldn't write to the screen directly\n\tif logWrapper, ok := log.Get().(logger.Controller); ok {\n\t\tlogWrapper.SetOutput(m.frame.(*frame.Frame).Footer())\n\t}\n\n",
                    "rendered": {
                      "text": "\nfunc (m *UI) Setup(subscription partybus.Unsubscribable) error {\n\t// we still want to collect log messages, however, we also the logger shouldn't write to the screen directly\n\tif logWrapper, ok := log.Get().(logger.Controller); ok {\n\t\tlogWrapper.SetOutput(m.frame.(*frame.Frame).Footer())\n\t}\n\n",
                      "markdown": "`\nfunc (m *UI) Setup(subscription partybus.Unsubscribable) error {\n\t// we still want to collect log messages, however, we also the logger shouldn't write to the screen directly\n\tif logWrapper, ok := log.Get().(logger.Controller); ok {\n\t\tlogWrapper.SetOutput(m.frame.(*frame.Frame).Footer())\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/internal/ui/ui.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 93,
                  "endLine": 48,
                  "endColumn": 101,
                  "snippet": {
                    "text": "}\n\nfunc (m *UI) Setup(subscription partybus.Unsubscribable) error {\n\t// we still want to collect log messages, however, we also the logger shouldn't write to the screen directly\n\tif logWrapper, ok := log.Get().(logger.Controller); ok {\n\t\tlogWrapper.SetOutput(m.frame.(*frame.Frame).Footer())\n\t}\n",
                    "rendered": {
                      "text": "}\n\nfunc (m *UI) Setup(subscription partybus.Unsubscribable) error {\n\t// we still want to collect log messages, however, we also the logger shouldn't write to the screen directly\n\tif logWrapper, ok := log.Get().(logger.Controller); ok {\n\t\tlogWrapper.SetOutput(m.frame.(*frame.Frame).Footer())\n\t}\n",
                      "markdown": "`}\n\nfunc (m *UI) Setup(subscription partybus.Unsubscribable) error {\n\t// we still want to collect log messages, however, we also the logger shouldn't write to the screen directly\n\tif logWrapper, ok := log.Get().(logger.Controller); ok {\n\t\tlogWrapper.SetOutput(m.frame.(*frame.Frame).Footer())\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/internal/ui/ui.go"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 12,
                  "endLine": 168,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t// intentionally fallthrough to update the frame model\n\t}\n\n\tframeModel, cmd := m.frame.Update(msg)\n\tm.frame = frameModel\n\tcmds = append(cmds, cmd)\n\n",
                    "rendered": {
                      "text": "\t\t// intentionally fallthrough to update the frame model\n\t}\n\n\tframeModel, cmd := m.frame.Update(msg)\n\tm.frame = frameModel\n\tcmds = append(cmds, cmd)\n\n",
                      "markdown": "`\t\t// intentionally fallthrough to update the frame model\n\t}\n\n\tframeModel, cmd := m.frame.Update(msg)\n\tm.frame = frameModel\n\tcmds = append(cmds, cmd)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/internal/ui/ui.go"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 4,
                  "endLine": 155,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tmodels, cmd := m.handler.Handle(msg)\n\t\tif cmd != nil {\n\t\t\tcmds = append(cmds, cmd)\n\t\t}\n\t\tfor _, newModel := range models {\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tmodels, cmd := m.handler.Handle(msg)\n\t\tif cmd != nil {\n\t\t\tcmds = append(cmds, cmd)\n\t\t}\n\t\tfor _, newModel := range models {\n",
                      "markdown": "`\t\t}\n\n\t\tmodels, cmd := m.handler.Handle(msg)\n\t\tif cmd != nil {\n\t\t\tcmds = append(cmds, cmd)\n\t\t}\n\t\tfor _, newModel := range models {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/internal/ui/ui.go"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 9,
                  "endLine": 154,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\t\treturn m, nil\n\t\t}\n\n\t\tmodels, cmd := m.handler.Handle(msg)\n\t\tif cmd != nil {\n\t\t\tcmds = append(cmds, cmd)\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\treturn m, nil\n\t\t}\n\n\t\tmodels, cmd := m.handler.Handle(msg)\n\t\tif cmd != nil {\n\t\t\tcmds = append(cmds, cmd)\n\t\t}\n",
                      "markdown": "`\t\t\treturn m, nil\n\t\t}\n\n\t\tmodels, cmd := m.handler.Handle(msg)\n\t\tif cmd != nil {\n\t\t\tcmds = append(cmds, cmd)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/internal/ui/post_ui_event_writer.go"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 57,
                  "endLine": 135,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n\t\tif _, err := fmt.Fprintln(writer, style.Render(notice)); err != nil {\n\t\t\t// don't let this be fatal\n\t\t\tlog.WithFields(\"error\", err).Warn(\"failed to write app update notification\")\n\t\t}\n\t}\n\treturn nil\n",
                    "rendered": {
                      "text": "\n\t\tif _, err := fmt.Fprintln(writer, style.Render(notice)); err != nil {\n\t\t\t// don't let this be fatal\n\t\t\tlog.WithFields(\"error\", err).Warn(\"failed to write app update notification\")\n\t\t}\n\t}\n\treturn nil\n",
                      "markdown": "`\n\t\tif _, err := fmt.Fprintln(writer, style.Render(notice)); err != nil {\n\t\t\t// don't let this be fatal\n\t\t\tlog.WithFields(\"error\", err).Warn(\"failed to write app update notification\")\n\t\t}\n\t}\n\treturn nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/internal/ui/post_ui_event_writer.go"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 57,
                  "endLine": 123,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\tfor _, e := range events {\n\t\tversion, err := parsers.ParseCLIAppUpdateAvailable(e)\n\t\tif err != nil {\n\t\t\tlog.WithFields(\"error\", err).Warn(\"failed to parse app update notification\")\n\t\t\tcontinue\n\t\t}\n\n",
                    "rendered": {
                      "text": "\tfor _, e := range events {\n\t\tversion, err := parsers.ParseCLIAppUpdateAvailable(e)\n\t\tif err != nil {\n\t\t\tlog.WithFields(\"error\", err).Warn(\"failed to parse app update notification\")\n\t\t\tcontinue\n\t\t}\n\n",
                      "markdown": "`\tfor _, e := range events {\n\t\tversion, err := parsers.ParseCLIAppUpdateAvailable(e)\n\t\tif err != nil {\n\t\t\tlog.WithFields(\"error\", err).Warn(\"failed to parse app update notification\")\n\t\t\tcontinue\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/v5/store/store.go"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 7,
                  "endLine": 378,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v5.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v5.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n\t}\n\n",
                      "markdown": "`\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v5.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/v5/store/store.go"
                },
                "region": {
                  "startLine": 375,
                  "startColumn": 21,
                  "endLine": 376,
                  "snippet": {
                    "text": "\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v5.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n",
                    "rendered": {
                      "text": "\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v5.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n",
                      "markdown": "`\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v5.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/v5/store/store.go"
                },
                "region": {
                  "startLine": 374,
                  "startColumn": 7,
                  "endLine": 374,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v5.Diff{}\n",
                    "rendered": {
                      "text": "\n\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v5.Diff{}\n",
                      "markdown": "`\n\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v5.Diff{}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/sarif/presenter_test.go"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 2,
                  "endLine": 114,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\terr := pres.Present(&buffer)\n\t\t\trequire.NoError(t, err)\n\n\t\t\tcmd := exec.Command(\"docker\", \"run\", \"--rm\", \"-i\", validatorImage)\n\n\t\t\tout := bytes.Buffer{}\n\t\t\tcmd.Stdout = &out\n",
                    "rendered": {
                      "text": "\t\t\terr := pres.Present(&buffer)\n\t\t\trequire.NoError(t, err)\n\n\t\t\tcmd := exec.Command(\"docker\", \"run\", \"--rm\", \"-i\", validatorImage)\n\n\t\t\tout := bytes.Buffer{}\n\t\t\tcmd.Stdout = &out\n",
                      "markdown": "`\t\t\terr := pres.Present(&buffer)\n\t\t\trequire.NoError(t, err)\n\n\t\t\tcmd := exec.Command(\"docker\", \"run\", \"--rm\", \"-i\", validatorImage)\n\n\t\t\tout := bytes.Buffer{}\n\t\t\tcmd.Stdout = &out\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/cyclonedx/presenter_test.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "endLine": 16,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\"github.com/anchore/grype/grype/presenter/models\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for cyclonedx presenters\")\n\nfunc TestCycloneDxPresenterImage(t *testing.T) {\n\tvar buffer bytes.Buffer\n",
                    "rendered": {
                      "text": "\t\"github.com/anchore/grype/grype/presenter/models\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for cyclonedx presenters\")\n\nfunc TestCycloneDxPresenterImage(t *testing.T) {\n\tvar buffer bytes.Buffer\n",
                      "markdown": "`\t\"github.com/anchore/grype/grype/presenter/models\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for cyclonedx presenters\")\n\nfunc TestCycloneDxPresenterImage(t *testing.T) {\n\tvar buffer bytes.Buffer\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/models/ignore_test.go"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 50,
                  "endLine": 106,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\tfor _, testCase := range cases {\n\t\tt.Run(testCase.name, func(t *testing.T) {\n\t\t\tactual := newIgnoreRule(testCase.input)\n\t\t\tif diff := cmp.Diff(testCase.expected, actual); diff != \"\" {\n\t\t\t\tt.Errorf(\"(-expected +actual):\\n%s\", diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\tfor _, testCase := range cases {\n\t\tt.Run(testCase.name, func(t *testing.T) {\n\t\t\tactual := newIgnoreRule(testCase.input)\n\t\t\tif diff := cmp.Diff(testCase.expected, actual); diff != \"\" {\n\t\t\t\tt.Errorf(\"(-expected +actual):\\n%s\", diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\tfor _, testCase := range cases {\n\t\tt.Run(testCase.name, func(t *testing.T) {\n\t\t\tactual := newIgnoreRule(testCase.input)\n\t\t\tif diff := cmp.Diff(testCase.expected, actual); diff != \"\" {\n\t\t\t\tt.Errorf(\"(-expected +actual):\\n%s\", diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/models/ignore_test.go"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 5,
                  "endLine": 106,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tfor _, testCase := range cases {\n\t\tt.Run(testCase.name, func(t *testing.T) {\n\t\t\tactual := newIgnoreRule(testCase.input)\n\t\t\tif diff := cmp.Diff(testCase.expected, actual); diff != \"\" {\n\t\t\t\tt.Errorf(\"(-expected +actual):\\n%s\", diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\tfor _, testCase := range cases {\n\t\tt.Run(testCase.name, func(t *testing.T) {\n\t\t\tactual := newIgnoreRule(testCase.input)\n\t\t\tif diff := cmp.Diff(testCase.expected, actual); diff != \"\" {\n\t\t\t\tt.Errorf(\"(-expected +actual):\\n%s\", diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\tfor _, testCase := range cases {\n\t\tt.Run(testCase.name, func(t *testing.T) {\n\t\t\tactual := newIgnoreRule(testCase.input)\n\t\t\tif diff := cmp.Diff(testCase.expected, actual); diff != \"\" {\n\t\t\t\tt.Errorf(\"(-expected +actual):\\n%s\", diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release-version-file.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 13,
                  "endLine": 28,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    steps:\n      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 #v4.2.1\n\n      - name: Update version file\n        run: make ci-release-version-file\n        env:\n          RELEASE_VERSION: ${{ github.event.inputs.version }}\n",
                    "rendered": {
                      "text": "    steps:\n      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 #v4.2.1\n\n      - name: Update version file\n        run: make ci-release-version-file\n        env:\n          RELEASE_VERSION: ${{ github.event.inputs.version }}\n",
                      "markdown": "`    steps:\n      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 #v4.2.1\n\n      - name: Update version file\n        run: make ci-release-version-file\n        env:\n          RELEASE_VERSION: ${{ github.event.inputs.version }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release-version-file.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 39,
                  "endLine": 18,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    inputs:\n      version:\n        type: string\n        description: release version to update the version file with (prefixed with v)\n        required: true\n\njobs:\n",
                    "rendered": {
                      "text": "    inputs:\n      version:\n        type: string\n        description: release version to update the version file with (prefixed with v)\n        required: true\n\njobs:\n",
                      "markdown": "`    inputs:\n      version:\n        type: string\n        description: release version to update the version file with (prefixed with v)\n        required: true\n\njobs:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release-version-file.yaml"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 39,
                  "endLine": 11,
                  "endColumn": 47,
                  "snippet": {
                    "text": "  workflow_dispatch:\n    inputs:\n      version:\n        description: release version to update the version file with (prefixed with v)\n        required: true\n\n  workflow_call:\n",
                    "rendered": {
                      "text": "  workflow_dispatch:\n    inputs:\n      version:\n        description: release version to update the version file with (prefixed with v)\n        required: true\n\n  workflow_call:\n",
                      "markdown": "`  workflow_dispatch:\n    inputs:\n      version:\n        description: release version to update the version file with (prefixed with v)\n        required: true\n\n  workflow_call:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 232,
                  "endLine": 153,
                  "endColumn": 240,
                  "snippet": {
                    "text": "\n### What to expect next\n\nPlease be patient with the project. We try to review PRs in a timely manner, but this is highly dependent on all the other tasks we have going on. It's OK to ask for a status update every week or two, it's not OK to ask for a status update every day.\n\nIt's very likely the reviewer will have questions and suggestions for changes to your PR. If your changes don't match the current style and flow of the other code, expect a request to change what you've done.\n\n",
                    "rendered": {
                      "text": "\n### What to expect next\n\nPlease be patient with the project. We try to review PRs in a timely manner, but this is highly dependent on all the other tasks we have going on. It's OK to ask for a status update every week or two, it's not OK to ask for a status update every day.\n\nIt's very likely the reviewer will have questions and suggestions for changes to your PR. If your changes don't match the current style and flow of the other code, expect a request to change what you've done.\n\n",
                      "markdown": "`\n### What to expect next\n\nPlease be patient with the project. We try to review PRs in a timely manner, but this is highly dependent on all the other tasks we have going on. It's OK to ask for a status update every week or two, it's not OK to ask for a status update every day.\n\nIt's very likely the reviewer will have questions and suggestions for changes to your PR. If your changes don't match the current style and flow of the other code, expect a request to change what you've done.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 174,
                  "endLine": 153,
                  "endColumn": 182,
                  "snippet": {
                    "text": "\n### What to expect next\n\nPlease be patient with the project. We try to review PRs in a timely manner, but this is highly dependent on all the other tasks we have going on. It's OK to ask for a status update every week or two, it's not OK to ask for a status update every day.\n\nIt's very likely the reviewer will have questions and suggestions for changes to your PR. If your changes don't match the current style and flow of the other code, expect a request to change what you've done.\n\n",
                    "rendered": {
                      "text": "\n### What to expect next\n\nPlease be patient with the project. We try to review PRs in a timely manner, but this is highly dependent on all the other tasks we have going on. It's OK to ask for a status update every week or two, it's not OK to ask for a status update every day.\n\nIt's very likely the reviewer will have questions and suggestions for changes to your PR. If your changes don't match the current style and flow of the other code, expect a request to change what you've done.\n\n",
                      "markdown": "`\n### What to expect next\n\nPlease be patient with the project. We try to review PRs in a timely manner, but this is highly dependent on all the other tasks we have going on. It's OK to ask for a status update every week or two, it's not OK to ask for a status update every day.\n\nIt's very likely the reviewer will have questions and suggestions for changes to your PR. If your changes don't match the current style and flow of the other code, expect a request to change what you've done.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 294,
                  "endLine": 143,
                  "endColumn": 298,
                  "snippet": {
                    "text": "\n## Pull Request\n\nIf you made it this far and all the tests are passing, it's time to submit a Pull Request (PR) for Grype. Submitting a PR is always a scary moment as what happens next can be an unknown. The Grype project strives to be easy to work with, we appreciate all contributions. Nobody is going to yell at you or try to make you feel bad. We love contributions and know how scary that first PR can be.\n\n### PR Title and Description\n\n",
                    "rendered": {
                      "text": "\n## Pull Request\n\nIf you made it this far and all the tests are passing, it's time to submit a Pull Request (PR) for Grype. Submitting a PR is always a scary moment as what happens next can be an unknown. The Grype project strives to be easy to work with, we appreciate all contributions. Nobody is going to yell at you or try to make you feel bad. We love contributions and know how scary that first PR can be.\n\n### PR Title and Description\n\n",
                      "markdown": "`\n## Pull Request\n\nIf you made it this far and all the tests are passing, it's time to submit a Pull Request (PR) for Grype. Submitting a PR is always a scary moment as what happens next can be an unknown. The Grype project strives to be easy to work with, we appreciate all contributions. Nobody is going to yell at you or try to make you feel bad. We love contributions and know how scary that first PR can be.\n\n### PR Title and Description\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 50,
                  "endLine": 111,
                  "endColumn": 54,
                  "snippet": {
                    "text": "$ git commit -s -m \"this is a commit message\"\n```\n\nTo double-check if the commit was signed-off, look at the log output:\n\n```text\n$ git log -1\n",
                    "rendered": {
                      "text": "$ git commit -s -m \"this is a commit message\"\n```\n\nTo double-check if the commit was signed-off, look at the log output:\n\n```text\n$ git log -1\n",
                      "markdown": "`$ git commit -s -m \"this is a commit message\"\n```\n\nTo double-check if the commit was signed-off, look at the log output:\n\n```text\n$ git log -1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 31,
                  "endLine": 58,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n## Sign off your work\n\nThe `sign-off` is an added line at the end of the explanation for the commit, certifying that you wrote it or otherwise have the right to submit it as an open-source patch. By submitting a contribution, you agree to be bound by the terms of the DCO Version 1.1 and Apache License Version 2.0.\n\nSigning off a commit certifies the below Developer's Certificate of Origin (DCO):\n\n",
                    "rendered": {
                      "text": "\n## Sign off your work\n\nThe `sign-off` is an added line at the end of the explanation for the commit, certifying that you wrote it or otherwise have the right to submit it as an open-source patch. By submitting a contribution, you agree to be bound by the terms of the DCO Version 1.1 and Apache License Version 2.0.\n\nSigning off a commit certifies the below Developer's Certificate of Origin (DCO):\n\n",
                      "markdown": "`\n## Sign off your work\n\nThe `sign-off` is an added line at the end of the explanation for the commit, certifying that you wrote it or otherwise have the right to submit it as an open-source patch. By submitting a contribution, you agree to be bound by the terms of the DCO Version 1.1 and Apache License Version 2.0.\n\nSigning off a commit certifies the below Developer's Certificate of Origin (DCO):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 318,
                  "endLine": 48,
                  "endColumn": 322,
                  "snippet": {
                    "text": "\n### Granular commits\n\nPlease try to make every commit as simple as possible, but no simpler. The idea is that each commit should be a logical unit of code. Try not to commit too many tiny changes, for example every line changed in a file as a separate commit. And also try not to make a commit enormous, for example committing all your work at the end of the day.\n\nRather than try to follow a strict guide on what is or is not best, we try to be flexible and simple in this space. Do what makes the most sense for the changes you are trying to include.\n\n",
                    "rendered": {
                      "text": "\n### Granular commits\n\nPlease try to make every commit as simple as possible, but no simpler. The idea is that each commit should be a logical unit of code. Try not to commit too many tiny changes, for example every line changed in a file as a separate commit. And also try not to make a commit enormous, for example committing all your work at the end of the day.\n\nRather than try to follow a strict guide on what is or is not best, we try to be flexible and simple in this space. Do what makes the most sense for the changes you are trying to include.\n\n",
                      "markdown": "`\n### Granular commits\n\nPlease try to make every commit as simple as possible, but no simpler. The idea is that each commit should be a logical unit of code. Try not to commit too many tiny changes, for example every line changed in a file as a separate commit. And also try not to make a commit enormous, for example committing all your work at the end of the day.\n\nRather than try to follow a strict guide on what is or is not best, we try to be flexible and simple in this space. Do what makes the most sense for the changes you are trying to include.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 131,
                  "endLine": 40,
                  "endColumn": 135,
                  "snippet": {
                    "text": "\n## Adding a feature or fix\n\nIf you look at the Grype [Issue](https://github.com/anchore/grype/issues) there are plenty of bugs and feature requests. Maybe look at the [good first issue](https://github.com/anchore/grype/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) list if you're not sure where to start.\n\n## Commit guidelines\n\n",
                    "rendered": {
                      "text": "\n## Adding a feature or fix\n\nIf you look at the Grype [Issue](https://github.com/anchore/grype/issues) there are plenty of bugs and feature requests. Maybe look at the [good first issue](https://github.com/anchore/grype/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) list if you're not sure where to start.\n\n## Commit guidelines\n\n",
                      "markdown": "`\n## Adding a feature or fix\n\nIf you look at the Grype [Issue](https://github.com/anchore/grype/issues) there are plenty of bugs and feature requests. Maybe look at the [good first issue](https://github.com/anchore/grype/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) list if you're not sure where to start.\n\n## Commit guidelines\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11,
                  "endLine": 40,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n## Adding a feature or fix\n\nIf you look at the Grype [Issue](https://github.com/anchore/grype/issues) there are plenty of bugs and feature requests. Maybe look at the [good first issue](https://github.com/anchore/grype/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) list if you're not sure where to start.\n\n## Commit guidelines\n\n",
                    "rendered": {
                      "text": "\n## Adding a feature or fix\n\nIf you look at the Grype [Issue](https://github.com/anchore/grype/issues) there are plenty of bugs and feature requests. Maybe look at the [good first issue](https://github.com/anchore/grype/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) list if you're not sure where to start.\n\n## Commit guidelines\n\n",
                      "markdown": "`\n## Adding a feature or fix\n\nIf you look at the Grype [Issue](https://github.com/anchore/grype/issues) there are plenty of bugs and feature requests. Maybe look at the [good first issue](https://github.com/anchore/grype/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) list if you're not sure where to start.\n\n## Commit guidelines\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 54,
                  "endLine": 36,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n## Fork the repo\n\nYou should fork the Grype repo using the \"Fork\" button at the top right of the Grype GitHub [site](https://github.com/anchore/grype/). You will be doing your development in your fork, then submit a pull request to Grype. There are many resources how to use GitHub effectively, we will not cover those here.\n\n## Adding a feature or fix\n\n",
                    "rendered": {
                      "text": "\n## Fork the repo\n\nYou should fork the Grype repo using the \"Fork\" button at the top right of the Grype GitHub [site](https://github.com/anchore/grype/). You will be doing your development in your fork, then submit a pull request to Grype. There are many resources how to use GitHub effectively, we will not cover those here.\n\n## Adding a feature or fix\n\n",
                      "markdown": "`\n## Fork the repo\n\nYou should fork the Grype repo using the \"Fork\" button at the top right of the Grype GitHub [site](https://github.com/anchore/grype/). You will be doing your development in your fork, then submit a pull request to Grype. There are many resources how to use GitHub effectively, we will not cover those here.\n\n## Adding a feature or fix\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 163,
                  "endLine": 155,
                  "endColumn": 171,
                  "snippet": {
                    "text": "\nPlease be patient with the project. We try to review PRs in a timely manner, but this is highly dependent on all the other tasks we have going on. It's OK to ask for a status update every week or two, it's not OK to ask for a status update every day.\n\nIt's very likely the reviewer will have questions and suggestions for changes to your PR. If your changes don't match the current style and flow of the other code, expect a request to change what you've done.\n\n## Document your changes\n\n",
                    "rendered": {
                      "text": "\nPlease be patient with the project. We try to review PRs in a timely manner, but this is highly dependent on all the other tasks we have going on. It's OK to ask for a status update every week or two, it's not OK to ask for a status update every day.\n\nIt's very likely the reviewer will have questions and suggestions for changes to your PR. If your changes don't match the current style and flow of the other code, expect a request to change what you've done.\n\n## Document your changes\n\n",
                      "markdown": "`\nPlease be patient with the project. We try to review PRs in a timely manner, but this is highly dependent on all the other tasks we have going on. It's OK to ask for a status update every week or two, it's not OK to ask for a status update every day.\n\nIt's very likely the reviewer will have questions and suggestions for changes to your PR. If your changes don't match the current style and flow of the other code, expect a request to change what you've done.\n\n## Document your changes\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 11,
                  "endLine": 151,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nA PR that is very large or poorly described has a higher likelihood of being pushed to the end of the list. Reviewers like PRs they can understand and quickly review.\n\n### What to expect next\n\nPlease be patient with the project. We try to review PRs in a timely manner, but this is highly dependent on all the other tasks we have going on. It's OK to ask for a status update every week or two, it's not OK to ask for a status update every day.\n\n",
                    "rendered": {
                      "text": "\nA PR that is very large or poorly described has a higher likelihood of being pushed to the end of the list. Reviewers like PRs they can understand and quickly review.\n\n### What to expect next\n\nPlease be patient with the project. We try to review PRs in a timely manner, but this is highly dependent on all the other tasks we have going on. It's OK to ask for a status update every week or two, it's not OK to ask for a status update every day.\n\n",
                      "markdown": "`\nA PR that is very large or poorly described has a higher likelihood of being pushed to the end of the list. Reviewers like PRs they can understand and quickly review.\n\n### What to expect next\n\nPlease be patient with the project. We try to review PRs in a timely manner, but this is highly dependent on all the other tasks we have going on. It's OK to ask for a status update every week or two, it's not OK to ask for a status update every day.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 59,
                  "endLine": 143,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n## Pull Request\n\nIf you made it this far and all the tests are passing, it's time to submit a Pull Request (PR) for Grype. Submitting a PR is always a scary moment as what happens next can be an unknown. The Grype project strives to be easy to work with, we appreciate all contributions. Nobody is going to yell at you or try to make you feel bad. We love contributions and know how scary that first PR can be.\n\n### PR Title and Description\n\n",
                    "rendered": {
                      "text": "\n## Pull Request\n\nIf you made it this far and all the tests are passing, it's time to submit a Pull Request (PR) for Grype. Submitting a PR is always a scary moment as what happens next can be an unknown. The Grype project strives to be easy to work with, we appreciate all contributions. Nobody is going to yell at you or try to make you feel bad. We love contributions and know how scary that first PR can be.\n\n### PR Title and Description\n\n",
                      "markdown": "`\n## Pull Request\n\nIf you made it this far and all the tests are passing, it's time to submit a Pull Request (PR) for Grype. Submitting a PR is always a scary moment as what happens next can be an unknown. The Grype project strives to be easy to work with, we appreciate all contributions. Nobody is going to yell at you or try to make you feel bad. We love contributions and know how scary that first PR can be.\n\n### PR Title and Description\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 1,
                  "endLine": 114,
                  "endColumn": 6,
                  "snippet": {
                    "text": "To double-check if the commit was signed-off, look at the log output:\n\n```text\n$ git log -1\ncommit 37ceh170e4hb283bb73d958f2036ee5k07e7fde7 (HEAD -> issue-35, origin/main, main)\nAuthor: John Doe <john.doe@example.com>\nDate:   Mon Aug 1 11:27:13 2020 -0400\n",
                    "rendered": {
                      "text": "To double-check if the commit was signed-off, look at the log output:\n\n```text\n$ git log -1\ncommit 37ceh170e4hb283bb73d958f2036ee5k07e7fde7 (HEAD -> issue-35, origin/main, main)\nAuthor: John Doe <john.doe@example.com>\nDate:   Mon Aug 1 11:27:13 2020 -0400\n",
                      "markdown": "`To double-check if the commit was signed-off, look at the log output:\n\n```text\n$ git log -1\ncommit 37ceh170e4hb283bb73d958f2036ee5k07e7fde7 (HEAD -> issue-35, origin/main, main)\nAuthor: John Doe <john.doe@example.com>\nDate:   Mon Aug 1 11:27:13 2020 -0400\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 1,
                  "endLine": 108,
                  "endColumn": 6,
                  "snippet": {
                    "text": "Creating a signed-off commit is then possible with `-s` or `--signoff`:\n\n```text\n$ git commit -s -m \"this is a commit message\"\n```\n\nTo double-check if the commit was signed-off, look at the log output:\n",
                    "rendered": {
                      "text": "Creating a signed-off commit is then possible with `-s` or `--signoff`:\n\n```text\n$ git commit -s -m \"this is a commit message\"\n```\n\nTo double-check if the commit was signed-off, look at the log output:\n",
                      "markdown": "`Creating a signed-off commit is then possible with `-s` or `--signoff`:\n\n```text\n$ git commit -s -m \"this is a commit message\"\n```\n\nTo double-check if the commit was signed-off, look at the log output:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 1,
                  "endLine": 102,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n```text\n$ git config --global user.name \"John Doe\"\n$ git config --global user.email \"john.doe@example.com\"\n```\n\nCreating a signed-off commit is then possible with `-s` or `--signoff`:\n",
                    "rendered": {
                      "text": "\n```text\n$ git config --global user.name \"John Doe\"\n$ git config --global user.email \"john.doe@example.com\"\n```\n\nCreating a signed-off commit is then possible with `-s` or `--signoff`:\n",
                      "markdown": "`\n```text\n$ git config --global user.name \"John Doe\"\n$ git config --global user.email \"john.doe@example.com\"\n```\n\nCreating a signed-off commit is then possible with `-s` or `--signoff`:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 1,
                  "endLine": 101,
                  "endColumn": 6,
                  "snippet": {
                    "text": "Alternatively, configure your Git client with your name and email to use the `-s` flag when creating a commit:\n\n```text\n$ git config --global user.name \"John Doe\"\n$ git config --global user.email \"john.doe@example.com\"\n```\n\n",
                    "rendered": {
                      "text": "Alternatively, configure your Git client with your name and email to use the `-s` flag when creating a commit:\n\n```text\n$ git config --global user.name \"John Doe\"\n$ git config --global user.email \"john.doe@example.com\"\n```\n\n",
                      "markdown": "`Alternatively, configure your Git client with your name and email to use the `-s` flag when creating a commit:\n\n```text\n$ git config --global user.name \"John Doe\"\n$ git config --global user.email \"john.doe@example.com\"\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 29,
                  "endLine": 98,
                  "endColumn": 34,
                  "snippet": {
                    "text": "Signed-off-by: John Doe <john.doe@example.com>\n```\n\nAlternatively, configure your Git client with your name and email to use the `-s` flag when creating a commit:\n\n```text\n$ git config --global user.name \"John Doe\"\n",
                    "rendered": {
                      "text": "Signed-off-by: John Doe <john.doe@example.com>\n```\n\nAlternatively, configure your Git client with your name and email to use the `-s` flag when creating a commit:\n\n```text\n$ git config --global user.name \"John Doe\"\n",
                      "markdown": "`Signed-off-by: John Doe <john.doe@example.com>\n```\n\nAlternatively, configure your Git client with your name and email to use the `-s` flag when creating a commit:\n\n```text\n$ git config --global user.name \"John Doe\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 61,
                  "endLine": 36,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n## Fork the repo\n\nYou should fork the Grype repo using the \"Fork\" button at the top right of the Grype GitHub [site](https://github.com/anchore/grype/). You will be doing your development in your fork, then submit a pull request to Grype. There are many resources how to use GitHub effectively, we will not cover those here.\n\n## Adding a feature or fix\n\n",
                    "rendered": {
                      "text": "\n## Fork the repo\n\nYou should fork the Grype repo using the \"Fork\" button at the top right of the Grype GitHub [site](https://github.com/anchore/grype/). You will be doing your development in your fork, then submit a pull request to Grype. There are many resources how to use GitHub effectively, we will not cover those here.\n\n## Adding a feature or fix\n\n",
                      "markdown": "`\n## Fork the repo\n\nYou should fork the Grype repo using the \"Fork\" button at the top right of the Grype GitHub [site](https://github.com/anchore/grype/). You will be doing your development in your fork, then submit a pull request to Grype. There are many resources how to use GitHub effectively, we will not cover those here.\n\n## Adding a feature or fix\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n```text\n$ git config --global user.name \"John Doe\"\n$ git config --global user.email \"john.doe@example.com\"\n```\n\nThis username and email address will matter later in this guide.\n",
                    "rendered": {
                      "text": "\n```text\n$ git config --global user.name \"John Doe\"\n$ git config --global user.email \"john.doe@example.com\"\n```\n\nThis username and email address will matter later in this guide.\n",
                      "markdown": "`\n```text\n$ git config --global user.name \"John Doe\"\n$ git config --global user.email \"john.doe@example.com\"\n```\n\nThis username and email address will matter later in this guide.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 6,
                  "snippet": {
                    "text": "You will need to configure your git client with your name and email address. This is easily done from the command line.\n\n```text\n$ git config --global user.name \"John Doe\"\n$ git config --global user.email \"john.doe@example.com\"\n```\n\n",
                    "rendered": {
                      "text": "You will need to configure your git client with your name and email address. This is easily done from the command line.\n\n```text\n$ git config --global user.name \"John Doe\"\n$ git config --global user.email \"john.doe@example.com\"\n```\n\n",
                      "markdown": "`You will need to configure your git client with your name and email address. This is easily done from the command line.\n\n```text\n$ git config --global user.name \"John Doe\"\n$ git config --global user.email \"john.doe@example.com\"\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 31,
                  "endLine": 25,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n## Configuring Git\n\nYou will need to configure your git client with your name and email address. This is easily done from the command line.\n\n```text\n$ git config --global user.name \"John Doe\"\n",
                    "rendered": {
                      "text": "\n## Configuring Git\n\nYou will need to configure your git client with your name and email address. This is easily done from the command line.\n\n```text\n$ git config --global user.name \"John Doe\"\n",
                      "markdown": "`\n## Configuring Git\n\nYou will need to configure your git client with your name and email address. This is easily done from the command line.\n\n```text\n$ git config --global user.name \"John Doe\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 14,
                  "endLine": 24,
                  "snippet": {
                    "text": "sudo apt-get install build-essential git libxml2-utils\n```\n\n## Configuring Git\n\nYou will need to configure your git client with your name and email address. This is easily done from the command line.\n\n```text\n",
                    "rendered": {
                      "text": "sudo apt-get install build-essential git libxml2-utils\n```\n\n## Configuring Git\n\nYou will need to configure your git client with your name and email address. This is easily done from the command line.\n\n```text\n",
                      "markdown": "`sudo apt-get install build-essential git libxml2-utils\n```\n\n## Configuring Git\n\nYou will need to configure your git client with your name and email address. This is easily done from the command line.\n\n```text\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 36,
                  "endLine": 20,
                  "endColumn": 41,
                  "snippet": {
                    "text": "You also need to install some Debian packages\n\n```sh\nsudo apt-get install build-essential git libxml2-utils\n```\n\n## Configuring Git\n",
                    "rendered": {
                      "text": "You also need to install some Debian packages\n\n```sh\nsudo apt-get install build-essential git libxml2-utils\n```\n\n## Configuring Git\n",
                      "markdown": "`You also need to install some Debian packages\n\n```sh\nsudo apt-get install build-essential git libxml2-utils\n```\n\n## Configuring Git\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 4,
                  "endLine": 20,
                  "endColumn": 13,
                  "snippet": {
                    "text": "You also need to install some Debian packages\n\n```sh\nsudo apt-get install build-essential git libxml2-utils\n```\n\n## Configuring Git\n",
                    "rendered": {
                      "text": "You also need to install some Debian packages\n\n```sh\nsudo apt-get install build-essential git libxml2-utils\n```\n\n## Configuring Git\n",
                      "markdown": "`You also need to install some Debian packages\n\n```sh\nsudo apt-get install build-essential git libxml2-utils\n```\n\n## Configuring Git\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 162,
                  "endLine": 15,
                  "endColumn": 170,
                  "snippet": {
                    "text": "\nRefer to the go.mod file in the root of this repo for the recommended version of Go to install.\n\nYou will also need Docker. There's no reason the system packages shouldn't work, but we used the official Docker package. You can find instructions for installing Docker in Debian [here](https://docs.docker.com/engine/install/debian/).\n\nYou also need to install some Debian packages\n\n",
                    "rendered": {
                      "text": "\nRefer to the go.mod file in the root of this repo for the recommended version of Go to install.\n\nYou will also need Docker. There's no reason the system packages shouldn't work, but we used the official Docker package. You can find instructions for installing Docker in Debian [here](https://docs.docker.com/engine/install/debian/).\n\nYou also need to install some Debian packages\n\n",
                      "markdown": "`\nRefer to the go.mod file in the root of this repo for the recommended version of Go to install.\n\nYou will also need Docker. There's no reason the system packages shouldn't work, but we used the official Docker package. You can find instructions for installing Docker in Debian [here](https://docs.docker.com/engine/install/debian/).\n\nYou also need to install some Debian packages\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 129,
                  "endLine": 15,
                  "endColumn": 135,
                  "snippet": {
                    "text": "\nRefer to the go.mod file in the root of this repo for the recommended version of Go to install.\n\nYou will also need Docker. There's no reason the system packages shouldn't work, but we used the official Docker package. You can find instructions for installing Docker in Debian [here](https://docs.docker.com/engine/install/debian/).\n\nYou also need to install some Debian packages\n\n",
                    "rendered": {
                      "text": "\nRefer to the go.mod file in the root of this repo for the recommended version of Go to install.\n\nYou will also need Docker. There's no reason the system packages shouldn't work, but we used the official Docker package. You can find instructions for installing Docker in Debian [here](https://docs.docker.com/engine/install/debian/).\n\nYou also need to install some Debian packages\n\n",
                      "markdown": "`\nRefer to the go.mod file in the root of this repo for the recommended version of Go to install.\n\nYou will also need Docker. There's no reason the system packages shouldn't work, but we used the official Docker package. You can find instructions for installing Docker in Debian [here](https://docs.docker.com/engine/install/debian/).\n\nYou also need to install some Debian packages\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 105,
                  "endLine": 15,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\nRefer to the go.mod file in the root of this repo for the recommended version of Go to install.\n\nYou will also need Docker. There's no reason the system packages shouldn't work, but we used the official Docker package. You can find instructions for installing Docker in Debian [here](https://docs.docker.com/engine/install/debian/).\n\nYou also need to install some Debian packages\n\n",
                    "rendered": {
                      "text": "\nRefer to the go.mod file in the root of this repo for the recommended version of Go to install.\n\nYou will also need Docker. There's no reason the system packages shouldn't work, but we used the official Docker package. You can find instructions for installing Docker in Debian [here](https://docs.docker.com/engine/install/debian/).\n\nYou also need to install some Debian packages\n\n",
                      "markdown": "`\nRefer to the go.mod file in the root of this repo for the recommended version of Go to install.\n\nYou will also need Docker. There's no reason the system packages shouldn't work, but we used the official Docker package. You can find instructions for installing Docker in Debian [here](https://docs.docker.com/engine/install/debian/).\n\nYou also need to install some Debian packages\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/ui/util_test.go"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endLine": 37,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\tm, next = m.Update(msg)\n\t\t\tnextCmds = append(nextCmds, next)\n\t\t}\n\t\tcmd = tea.Batch(nextCmds...)\n\t}\n\treturn m.View()\n}\n",
                    "rendered": {
                      "text": "\t\t\tm, next = m.Update(msg)\n\t\t\tnextCmds = append(nextCmds, next)\n\t\t}\n\t\tcmd = tea.Batch(nextCmds...)\n\t}\n\treturn m.View()\n}\n",
                      "markdown": "`\t\t\tm, next = m.Update(msg)\n\t\t\tnextCmds = append(nextCmds, next)\n\t\t}\n\t\tcmd = tea.Batch(nextCmds...)\n\t}\n\treturn m.View()\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/ui/util_test.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 12,
                  "endLine": 28,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t}\n\t}\n\n\tfor i := 0; cmd != nil && i < iterations; i++ {\n\t\tmsgs := flatten(cmd())\n\t\tvar nextCmds []tea.Cmd\n\t\tvar next tea.Cmd\n",
                    "rendered": {
                      "text": "\t\t}\n\t}\n\n\tfor i := 0; cmd != nil && i < iterations; i++ {\n\t\tmsgs := flatten(cmd())\n\t\tvar nextCmds []tea.Cmd\n\t\tvar next tea.Cmd\n",
                      "markdown": "`\t\t}\n\t}\n\n\tfor i := 0; cmd != nil && i < iterations; i++ {\n\t\tmsgs := flatten(cmd())\n\t\tvar nextCmds []tea.Cmd\n\t\tvar next tea.Cmd\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/ui/util_test.go"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 4,
                  "endLine": 18,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\titerations = 1\n\t}\n\tm.Init()\n\tvar cmd tea.Cmd = func() tea.Msg {\n\t\treturn message\n\t}\n\n",
                    "rendered": {
                      "text": "\t\titerations = 1\n\t}\n\tm.Init()\n\tvar cmd tea.Cmd = func() tea.Msg {\n\t\treturn message\n\t}\n\n",
                      "markdown": "`\t\titerations = 1\n\t}\n\tm.Init()\n\tvar cmd tea.Cmd = func() tea.Msg {\n\t\treturn message\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/ui/handle_database_diff_started_test.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 12,
                  "endLine": 48,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"DB diff complete\",\n\t\t\teventFn: func(t *testing.T) partybus.Event {\n\t\t\t\tprog := &progress.Manual{}\n\t\t\t\tprog.SetTotal(100)\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"DB diff complete\",\n\t\t\teventFn: func(t *testing.T) partybus.Event {\n\t\t\t\tprog := &progress.Manual{}\n\t\t\t\tprog.SetTotal(100)\n",
                      "markdown": "`\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"DB diff complete\",\n\t\t\teventFn: func(t *testing.T) partybus.Event {\n\t\t\t\tprog := &progress.Manual{}\n\t\t\t\tprog.SetTotal(100)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/ui/handle_database_diff_started_test.go"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 12,
                  "endLine": 26,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\titerations int\n\t}{\n\t\t{\n\t\t\tname: \"DB diff started\",\n\t\t\teventFn: func(t *testing.T) partybus.Event {\n\t\t\t\tprog := &progress.Manual{}\n\t\t\t\tprog.SetTotal(100)\n",
                    "rendered": {
                      "text": "\t\titerations int\n\t}{\n\t\t{\n\t\t\tname: \"DB diff started\",\n\t\t\teventFn: func(t *testing.T) partybus.Event {\n\t\t\t\tprog := &progress.Manual{}\n\t\t\t\tprog.SetTotal(100)\n",
                      "markdown": "`\t\titerations int\n\t}{\n\t\t{\n\t\t\tname: \"DB diff started\",\n\t\t\teventFn: func(t *testing.T) partybus.Event {\n\t\t\t\tprog := &progress.Manual{}\n\t\t\t\tprog.SetTotal(100)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/cmd/grype/cli/ui/handle_vulnerability_scanning_started.go"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n// vulnerabilityProgressTreeTickMsg indicates that the timer has ticked and we should render a frame.\ntype vulnerabilityProgressTreeTickMsg struct {\n\tTime     time.Time\n\tSequence int\n\tID       uint32\n}\n",
                    "rendered": {
                      "text": "\n// vulnerabilityProgressTreeTickMsg indicates that the timer has ticked and we should render a frame.\ntype vulnerabilityProgressTreeTickMsg struct {\n\tTime     time.Time\n\tSequence int\n\tID       uint32\n}\n",
                      "markdown": "`\n// vulnerabilityProgressTreeTickMsg indicates that the timer has ticked and we should render a frame.\ntype vulnerabilityProgressTreeTickMsg struct {\n\tTime     time.Time\n\tSequence int\n\tID       uint32\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/v5/diff.go"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 4,
                  "endLine": 11,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tDiffRemoved DiffReason = \"removed\"\n)\n\ntype Diff struct {\n\tReason    DiffReason `json:\"reason\"`\n\tID        string     `json:\"id\"`\n\tNamespace string     `json:\"namespace\"`\n",
                    "rendered": {
                      "text": "\tDiffRemoved DiffReason = \"removed\"\n)\n\ntype Diff struct {\n\tReason    DiffReason `json:\"reason\"`\n\tID        string     `json:\"id\"`\n\tNamespace string     `json:\"namespace\"`\n",
                      "markdown": "`\tDiffRemoved DiffReason = \"removed\"\n)\n\ntype Diff struct {\n\tReason    DiffReason `json:\"reason\"`\n\tID        string     `json:\"id\"`\n\tNamespace string     `json:\"namespace\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/internal/gormadapter/logger.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 44,
                  "endLine": 31,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tlog.Warnf(\"gorm: \"+fmt, v...)\n}\n\nfunc (l logAdapter) Error(_ context.Context, fmt string, v ...interface{}) {\n\tlog.Errorf(\"gorm: \"+fmt, v...)\n}\n\n",
                    "rendered": {
                      "text": "\tlog.Warnf(\"gorm: \"+fmt, v...)\n}\n\nfunc (l logAdapter) Error(_ context.Context, fmt string, v ...interface{}) {\n\tlog.Errorf(\"gorm: \"+fmt, v...)\n}\n\n",
                      "markdown": "`\tlog.Warnf(\"gorm: \"+fmt, v...)\n}\n\nfunc (l logAdapter) Error(_ context.Context, fmt string, v ...interface{}) {\n\tlog.Errorf(\"gorm: \"+fmt, v...)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/internal/gormadapter/logger.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 43,
                  "endLine": 27,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t// unimplemented\n}\n\nfunc (l logAdapter) Warn(_ context.Context, fmt string, v ...interface{}) {\n\tlog.Warnf(\"gorm: \"+fmt, v...)\n}\n\n",
                    "rendered": {
                      "text": "\t// unimplemented\n}\n\nfunc (l logAdapter) Warn(_ context.Context, fmt string, v ...interface{}) {\n\tlog.Warnf(\"gorm: \"+fmt, v...)\n}\n\n",
                      "markdown": "`\t// unimplemented\n}\n\nfunc (l logAdapter) Warn(_ context.Context, fmt string, v ...interface{}) {\n\tlog.Warnf(\"gorm: \"+fmt, v...)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/jvm_version.go"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 16,
                  "endLine": 91,
                  "snippet": {
                    "text": "\tbuild := trim0sFromLeft(matches[\"build\"])\n\n\tif (patchVersion == \"\" || patchVersion == \"0\") && update != \"\" {\n\t\tpatchVersion = update\n\t}\n\n\treturn buildSemVer(majorVersion, minorVersion, patchVersion, preRelease, build)\n}\n",
                    "rendered": {
                      "text": "\tbuild := trim0sFromLeft(matches[\"build\"])\n\n\tif (patchVersion == \"\" || patchVersion == \"0\") && update != \"\" {\n\t\tpatchVersion = update\n\t}\n\n\treturn buildSemVer(majorVersion, minorVersion, patchVersion, preRelease, build)\n}\n",
                      "markdown": "`\tbuild := trim0sFromLeft(matches[\"build\"])\n\n\tif (patchVersion == \"\" || patchVersion == \"0\") && update != \"\" {\n\t\tpatchVersion = update\n\t}\n\n\treturn buildSemVer(majorVersion, minorVersion, patchVersion, preRelease, build)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/jvm_version.go"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 50,
                  "endLine": 89,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\tpreRelease := trim0sFromLeft(matches[\"prerelease\"])\n\tbuild := trim0sFromLeft(matches[\"build\"])\n\n\tif (patchVersion == \"\" || patchVersion == \"0\") && update != \"\" {\n\t\tpatchVersion = update\n\t}\n\n",
                    "rendered": {
                      "text": "\tpreRelease := trim0sFromLeft(matches[\"prerelease\"])\n\tbuild := trim0sFromLeft(matches[\"build\"])\n\n\tif (patchVersion == \"\" || patchVersion == \"0\") && update != \"\" {\n\t\tpatchVersion = update\n\t}\n\n",
                      "markdown": "`\tpreRelease := trim0sFromLeft(matches[\"prerelease\"])\n\tbuild := trim0sFromLeft(matches[\"build\"])\n\n\tif (patchVersion == \"\" || patchVersion == \"0\") && update != \"\" {\n\t\tpatchVersion = update\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/jvm_version.go"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tmajorVersion := trim0sFromLeft(matches[\"major\"])\n\tminorVersion := trim0sFromLeft(matches[\"minor\"])\n\tpatchVersion := trim0sFromLeft(matches[\"patch\"])\n\tupdate := trim0sFromLeft(matches[\"update\"])\n\tpreRelease := trim0sFromLeft(matches[\"prerelease\"])\n\tbuild := trim0sFromLeft(matches[\"build\"])\n\n",
                    "rendered": {
                      "text": "\tmajorVersion := trim0sFromLeft(matches[\"major\"])\n\tminorVersion := trim0sFromLeft(matches[\"minor\"])\n\tpatchVersion := trim0sFromLeft(matches[\"patch\"])\n\tupdate := trim0sFromLeft(matches[\"update\"])\n\tpreRelease := trim0sFromLeft(matches[\"prerelease\"])\n\tbuild := trim0sFromLeft(matches[\"build\"])\n\n",
                      "markdown": "`\tmajorVersion := trim0sFromLeft(matches[\"major\"])\n\tminorVersion := trim0sFromLeft(matches[\"minor\"])\n\tpatchVersion := trim0sFromLeft(matches[\"patch\"])\n\tupdate := trim0sFromLeft(matches[\"update\"])\n\tpreRelease := trim0sFromLeft(matches[\"prerelease\"])\n\tbuild := trim0sFromLeft(matches[\"build\"])\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/constraint.go"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 34,
                  "endLine": 37,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tcase UnknownFormat:\n\t\treturn newFuzzyConstraint(constStr, \"unknown\")\n\t}\n\treturn nil, fmt.Errorf(\"could not find constraint for given format: %s\", format)\n}\n\n// MustGetConstraint is meant for testing only, do not use within the library\n",
                    "rendered": {
                      "text": "\tcase UnknownFormat:\n\t\treturn newFuzzyConstraint(constStr, \"unknown\")\n\t}\n\treturn nil, fmt.Errorf(\"could not find constraint for given format: %s\", format)\n}\n\n// MustGetConstraint is meant for testing only, do not use within the library\n",
                      "markdown": "`\tcase UnknownFormat:\n\t\treturn newFuzzyConstraint(constStr, \"unknown\")\n\t}\n\treturn nil, fmt.Errorf(\"could not find constraint for given format: %s\", format)\n}\n\n// MustGetConstraint is meant for testing only, do not use within the library\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/gemfile_version.go"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "endColumn": 6,
                  "snippet": {
                    "text": "// When there is no arch we split the version string with: {java, delvik, mswin}\nfunc extractSemVer(raw string) string {\n\tplatforms := []string{\"x86\", \"universal\", \"arm\", \"java\", \"dalvik\", \"x64\", \"powerpc\", \"sparc\", \"mswin\"}\n\tdash := \"-\"\n\tfor _, p := range platforms {\n\t\tvals := strings.SplitN(raw, dash+p, 2)\n\t\tif len(vals) == 2 {\n",
                    "rendered": {
                      "text": "// When there is no arch we split the version string with: {java, delvik, mswin}\nfunc extractSemVer(raw string) string {\n\tplatforms := []string{\"x86\", \"universal\", \"arm\", \"java\", \"dalvik\", \"x64\", \"powerpc\", \"sparc\", \"mswin\"}\n\tdash := \"-\"\n\tfor _, p := range platforms {\n\t\tvals := strings.SplitN(raw, dash+p, 2)\n\t\tif len(vals) == 2 {\n",
                      "markdown": "`// When there is no arch we split the version string with: {java, delvik, mswin}\nfunc extractSemVer(raw string) string {\n\tplatforms := []string{\"x86\", \"universal\", \"arm\", \"java\", \"dalvik\", \"x64\", \"powerpc\", \"sparc\", \"mswin\"}\n\tdash := \"-\"\n\tfor _, p := range platforms {\n\t\tvals := strings.SplitN(raw, dash+p, 2)\n\t\tif len(vals) == 2 {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/rpm_version.go"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 42,
                  "endLine": 68,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\nfunc (v *rpmVersion) Compare(other *Version) (int, error) {\n\tif other.Format != RpmFormat {\n\t\treturn -1, fmt.Errorf(\"unable to compare rpm to given format: %s\", other.Format)\n\t}\n\tif other.rich.rpmVer == nil {\n\t\treturn -1, fmt.Errorf(\"given empty rpmVersion object\")\n",
                    "rendered": {
                      "text": "\nfunc (v *rpmVersion) Compare(other *Version) (int, error) {\n\tif other.Format != RpmFormat {\n\t\treturn -1, fmt.Errorf(\"unable to compare rpm to given format: %s\", other.Format)\n\t}\n\tif other.rich.rpmVer == nil {\n\t\treturn -1, fmt.Errorf(\"given empty rpmVersion object\")\n",
                      "markdown": "`\nfunc (v *rpmVersion) Compare(other *Version) (int, error) {\n\tif other.Format != RpmFormat {\n\t\treturn -1, fmt.Errorf(\"unable to compare rpm to given format: %s\", other.Format)\n\t}\n\tif other.rich.rpmVer == nil {\n\t\treturn -1, fmt.Errorf(\"given empty rpmVersion object\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/rpm_constraint.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 35,
                  "endLine": 58,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t}\n\n\tif version.rich.rpmVer == nil {\n\t\treturn false, fmt.Errorf(\"no rich rpm version given: %+v\", version)\n\t}\n\n\treturn c.expression.satisfied(version)\n",
                    "rendered": {
                      "text": "\t}\n\n\tif version.rich.rpmVer == nil {\n\t\treturn false, fmt.Errorf(\"no rich rpm version given: %+v\", version)\n\t}\n\n\treturn c.expression.satisfied(version)\n",
                      "markdown": "`\t}\n\n\tif version.rich.rpmVer == nil {\n\t\treturn false, fmt.Errorf(\"no rich rpm version given: %+v\", version)\n\t}\n\n\treturn c.expression.satisfied(version)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/rpm_constraint.go"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 53,
                  "endLine": 20,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n\tconstraints, err := newConstraintExpression(raw, newRpmComparator)\n\tif err != nil {\n\t\treturn rpmConstraint{}, fmt.Errorf(\"unable to parse rpm constraint phrase: %w\", err)\n\t}\n\n\treturn rpmConstraint{\n",
                    "rendered": {
                      "text": "\n\tconstraints, err := newConstraintExpression(raw, newRpmComparator)\n\tif err != nil {\n\t\treturn rpmConstraint{}, fmt.Errorf(\"unable to parse rpm constraint phrase: %w\", err)\n\t}\n\n\treturn rpmConstraint{\n",
                      "markdown": "`\n\tconstraints, err := newConstraintExpression(raw, newRpmComparator)\n\tif err != nil {\n\t\treturn rpmConstraint{}, fmt.Errorf(\"unable to parse rpm constraint phrase: %w\", err)\n\t}\n\n\treturn rpmConstraint{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/presenter_test.go"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 3,
                  "endLine": 22,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\"github.com/anchore/syft/syft/source\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for json presenters\")\nvar timestampRegexp = regexp.MustCompile(`\"timestamp\":\\s*\"[^\"]+\"`)\n\nfunc TestJsonImgsPresenter(t *testing.T) {\n",
                    "rendered": {
                      "text": "\t\"github.com/anchore/syft/syft/source\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for json presenters\")\nvar timestampRegexp = regexp.MustCompile(`\"timestamp\":\\s*\"[^\"]+\"`)\n\nfunc TestJsonImgsPresenter(t *testing.T) {\n",
                      "markdown": "`\t\"github.com/anchore/syft/syft/source\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for json presenters\")\nvar timestampRegexp = regexp.MustCompile(`\"timestamp\":\\s*\"[^\"]+\"`)\n\nfunc TestJsonImgsPresenter(t *testing.T) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/sarif/test-fixtures/image-simple/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 53,
                  "endLine": 5,
                  "endColumn": 61,
                  "snippet": {
                    "text": "FROM scratch\nADD file-1.txt /somefile-1.txt\nADD file-2.txt /somefile-2.txt\n# note: adding a directory will behave differently on docker engine v18 vs v19\nADD target /\n",
                    "rendered": {
                      "text": "FROM scratch\nADD file-1.txt /somefile-1.txt\nADD file-2.txt /somefile-2.txt\n# note: adding a directory will behave differently on docker engine v18 vs v19\nADD target /\n",
                      "markdown": "`FROM scratch\nADD file-1.txt /somefile-1.txt\nADD file-2.txt /somefile-2.txt\n# note: adding a directory will behave differently on docker engine v18 vs v19\nADD target /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/sarif/test-fixtures/snapshot/TestSarifPresenter_image.golden"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 43,
                  "endLine": 55,
                  "endColumn": 48,
                  "snippet": {
                    "text": "        {\n          \"ruleId\": \"CVE-1999-0001-package-1\",\n          \"message\": {\n            \"text\": \"A low vulnerability in rpm package: package-1, version 1.1.1 was found in image user-input at: somefile-1.txt\"\n          },\n          \"locations\": [\n            {\n",
                    "rendered": {
                      "text": "        {\n          \"ruleId\": \"CVE-1999-0001-package-1\",\n          \"message\": {\n            \"text\": \"A low vulnerability in rpm package: package-1, version 1.1.1 was found in image user-input at: somefile-1.txt\"\n          },\n          \"locations\": [\n            {\n",
                      "markdown": "`        {\n          \"ruleId\": \"CVE-1999-0001-package-1\",\n          \"message\": {\n            \"text\": \"A low vulnerability in rpm package: package-1, version 1.1.1 was found in image user-input at: somefile-1.txt\"\n          },\n          \"locations\": [\n            {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/sarif/test-fixtures/snapshot/TestSarifPresenter_image.golden"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 253,
                  "endLine": 24,
                  "endColumn": 258,
                  "snippet": {
                    "text": "ata Namespace: source-1\\nLink: CVE-1999-0001\",\n                \"markdown\": \"**Vulnerability CVE-1999-0001**\\n| Severity | Package | Version | Fix Version | Type | Location | Data Namespace | Link |\\n| --- | --- | --- | --- | --- | --- | --- | --- |\\n| low  | package-1  | 1.1.1  | the-next-version  | rpm  | somefile-1.txt  | source-1  | CVE-1999-0001  |\\n\"\n              },\n              \"properties\": {\n                \"security-severity\": \"4.0\"\n              }\n            },\n            {\n              \"id\": \"CVE-1999-0002-package-2\",\n              \"name\": \"DpkgMatcherExactIndirectMatch\",\n          ",
                    "rendered": {
                      "text": "ata Namespace: source-1\\nLink: CVE-1999-0001\",\n                \"markdown\": \"**Vulnerability CVE-1999-0001**\\n| Severity | Package | Version | Fix Version | Type | Location | Data Namespace | Link |\\n| --- | --- | --- | --- | --- | --- | --- | --- |\\n| low  | package-1  | 1.1.1  | the-next-version  | rpm  | somefile-1.txt  | source-1  | CVE-1999-0001  |\\n\"\n              },\n              \"properties\": {\n                \"security-severity\": \"4.0\"\n              }\n            },\n            {\n              \"id\": \"CVE-1999-0002-package-2\",\n              \"name\": \"DpkgMatcherExactIndirectMatch\",\n          ",
                      "markdown": "`ata Namespace: source-1\\nLink: CVE-1999-0001\",\n                \"markdown\": \"**Vulnerability CVE-1999-0001**\\n| Severity | Package | Version | Fix Version | Type | Location | Data Namespace | Link |\\n| --- | --- | --- | --- | --- | --- | --- | --- |\\n| low  | package-1  | 1.1.1  | the-next-version  | rpm  | somefile-1.txt  | source-1  | CVE-1999-0001  |\\n\"\n              },\n              \"properties\": {\n                \"security-severity\": \"4.0\"\n              }\n            },\n            {\n              \"id\": \"CVE-1999-0002-package-2\",\n              \"name\": \"DpkgMatcherExactIndirectMatch\",\n          `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/sarif/test-fixtures/snapshot/TestSarifPresenter_directory.golden"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 43,
                  "endLine": 55,
                  "endColumn": 48,
                  "snippet": {
                    "text": "        {\n          \"ruleId\": \"CVE-1999-0001-package-1\",\n          \"message\": {\n            \"text\": \"A low vulnerability in rpm package: package-1, version 1.1.1 was found at: /some/path/somefile-1.txt\"\n          },\n          \"locations\": [\n            {\n",
                    "rendered": {
                      "text": "        {\n          \"ruleId\": \"CVE-1999-0001-package-1\",\n          \"message\": {\n            \"text\": \"A low vulnerability in rpm package: package-1, version 1.1.1 was found at: /some/path/somefile-1.txt\"\n          },\n          \"locations\": [\n            {\n",
                      "markdown": "`        {\n          \"ruleId\": \"CVE-1999-0001-package-1\",\n          \"message\": {\n            \"text\": \"A low vulnerability in rpm package: package-1, version 1.1.1 was found at: /some/path/somefile-1.txt\"\n          },\n          \"locations\": [\n            {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/sarif/test-fixtures/snapshot/TestSarifPresenter_directory.golden"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 253,
                  "endLine": 24,
                  "endColumn": 258,
                  "snippet": {
                    "text": "ata Namespace: source-1\\nLink: CVE-1999-0001\",\n                \"markdown\": \"**Vulnerability CVE-1999-0001**\\n| Severity | Package | Version | Fix Version | Type | Location | Data Namespace | Link |\\n| --- | --- | --- | --- | --- | --- | --- | --- |\\n| low  | package-1  | 1.1.1  | the-next-version  | rpm  | /some/path/somefile-1.txt  | source-1  | CVE-1999-0001  |\\n\"\n              },\n              \"properties\": {\n                \"security-severity\": \"4.0\"\n              }\n            },\n            {\n              \"id\": \"CVE-1999-0002-package-2\",\n              \"name\": \"DpkgMatcherExactIndirectMatch\",",
                    "rendered": {
                      "text": "ata Namespace: source-1\\nLink: CVE-1999-0001\",\n                \"markdown\": \"**Vulnerability CVE-1999-0001**\\n| Severity | Package | Version | Fix Version | Type | Location | Data Namespace | Link |\\n| --- | --- | --- | --- | --- | --- | --- | --- |\\n| low  | package-1  | 1.1.1  | the-next-version  | rpm  | /some/path/somefile-1.txt  | source-1  | CVE-1999-0001  |\\n\"\n              },\n              \"properties\": {\n                \"security-severity\": \"4.0\"\n              }\n            },\n            {\n              \"id\": \"CVE-1999-0002-package-2\",\n              \"name\": \"DpkgMatcherExactIndirectMatch\",",
                      "markdown": "`ata Namespace: source-1\\nLink: CVE-1999-0001\",\n                \"markdown\": \"**Vulnerability CVE-1999-0001**\\n| Severity | Package | Version | Fix Version | Type | Location | Data Namespace | Link |\\n| --- | --- | --- | --- | --- | --- | --- | --- |\\n| low  | package-1  | 1.1.1  | the-next-version  | rpm  | /some/path/somefile-1.txt  | source-1  | CVE-1999-0001  |\\n\"\n              },\n              \"properties\": {\n                \"security-severity\": \"4.0\"\n              }\n            },\n            {\n              \"id\": \"CVE-1999-0002-package-2\",\n              \"name\": \"DpkgMatcherExactIndirectMatch\",`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/DEVELOPING.md"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 26,
                  "endLine": 60,
                  "endColumn": 35,
                  "snippet": {
                    "text": "$ sqlite3 /Users/alfredo/Library/Caches/grype/db/vulnerability.db\n```\n\nTo make the reporting from Sqlite3 easier to read, enable the following:\n\n```\nsqlite> .mode column\n",
                    "rendered": {
                      "text": "$ sqlite3 /Users/alfredo/Library/Caches/grype/db/vulnerability.db\n```\n\nTo make the reporting from Sqlite3 easier to read, enable the following:\n\n```\nsqlite> .mode column\n",
                      "markdown": "`$ sqlite3 /Users/alfredo/Library/Caches/grype/db/vulnerability.db\n```\n\nTo make the reporting from Sqlite3 easier to read, enable the following:\n\n```\nsqlite> .mode column\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/DEVELOPING.md"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 1,
                  "endLine": 57,
                  "endColumn": 10,
                  "snippet": {
                    "text": "Next, open the `vulnerability.db` with `sqlite3`:\n\n```\n$ sqlite3 /Users/alfredo/Library/Caches/grype/db/vulnerability.db\n```\n\nTo make the reporting from Sqlite3 easier to read, enable the following:\n",
                    "rendered": {
                      "text": "Next, open the `vulnerability.db` with `sqlite3`:\n\n```\n$ sqlite3 /Users/alfredo/Library/Caches/grype/db/vulnerability.db\n```\n\nTo make the reporting from Sqlite3 easier to read, enable the following:\n",
                      "markdown": "`Next, open the `vulnerability.db` with `sqlite3`:\n\n```\n$ sqlite3 /Users/alfredo/Library/Caches/grype/db/vulnerability.db\n```\n\nTo make the reporting from Sqlite3 easier to read, enable the following:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/DEVELOPING.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 80,
                  "endLine": 26,
                  "endColumn": 85,
                  "snippet": {
                    "text": "images, parsing container images, indexing directories, cataloging packages, etc). Releases of Grype should\nalways use released versions of Syft (commits that are tagged and show up in the GitHub releases page). However,\ncontinually integrating unreleased Syft changes into Grype incrementally is encouraged\n(e.g. `go get github.com/anchore/syft@main`) as long as by the time a release is cut the Syft version is updated\nto a released version (e.g. `go get github.com/anchore/syft@v<semantic-version>`).\n\n## Inspecting the database\n",
                    "rendered": {
                      "text": "images, parsing container images, indexing directories, cataloging packages, etc). Releases of Grype should\nalways use released versions of Syft (commits that are tagged and show up in the GitHub releases page). However,\ncontinually integrating unreleased Syft changes into Grype incrementally is encouraged\n(e.g. `go get github.com/anchore/syft@main`) as long as by the time a release is cut the Syft version is updated\nto a released version (e.g. `go get github.com/anchore/syft@v<semantic-version>`).\n\n## Inspecting the database\n",
                      "markdown": "`images, parsing container images, indexing directories, cataloging packages, etc). Releases of Grype should\nalways use released versions of Syft (commits that are tagged and show up in the GitHub releases page). However,\ncontinually integrating unreleased Syft changes into Grype incrementally is encouraged\n(e.g. `go get github.com/anchore/syft@main`) as long as by the time a release is cut the Syft version is updated\nto a released version (e.g. `go get github.com/anchore/syft@v<semantic-version>`).\n\n## Inspecting the database\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/DEVELOPING.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 62,
                  "endLine": 26,
                  "endColumn": 68,
                  "snippet": {
                    "text": "images, parsing container images, indexing directories, cataloging packages, etc). Releases of Grype should\nalways use released versions of Syft (commits that are tagged and show up in the GitHub releases page). However,\ncontinually integrating unreleased Syft changes into Grype incrementally is encouraged\n(e.g. `go get github.com/anchore/syft@main`) as long as by the time a release is cut the Syft version is updated\nto a released version (e.g. `go get github.com/anchore/syft@v<semantic-version>`).\n\n## Inspecting the database\n",
                    "rendered": {
                      "text": "images, parsing container images, indexing directories, cataloging packages, etc). Releases of Grype should\nalways use released versions of Syft (commits that are tagged and show up in the GitHub releases page). However,\ncontinually integrating unreleased Syft changes into Grype incrementally is encouraged\n(e.g. `go get github.com/anchore/syft@main`) as long as by the time a release is cut the Syft version is updated\nto a released version (e.g. `go get github.com/anchore/syft@v<semantic-version>`).\n\n## Inspecting the database\n",
                      "markdown": "`images, parsing container images, indexing directories, cataloging packages, etc). Releases of Grype should\nalways use released versions of Syft (commits that are tagged and show up in the GitHub releases page). However,\ncontinually integrating unreleased Syft changes into Grype incrementally is encouraged\n(e.g. `go get github.com/anchore/syft@main`) as long as by the time a release is cut the Syft version is updated\nto a released version (e.g. `go get github.com/anchore/syft@v<semantic-version>`).\n\n## Inspecting the database\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1174,
                  "startColumn": 2771,
                  "endLine": 1174,
                  "endColumn": 2813,
                  "snippet": {
                    "text": "supporting documentation in human-readable or machine-readable format\\n* __adversary-model__ = The defined assumptions, goals, and capabilities of an adversary.\\n* __risk-assessment__ = Identifies and analyzes the potential of future events that may negatively impact individuals, assets, and/or the environment. Risk assessments may also include judgments on the tolerability of each risk.\\n* __vulnerability-assertion__ = A Vulnerability Disclosure Report (VDR) which asserts the known and previously unknown vulnerabilities that affect a component, service, or product including the analysis and findings describing the impact (or lack of ",
                    "rendered": {
                      "text": "supporting documentation in human-readable or machine-readable format\\n* __adversary-model__ = The defined assumptions, goals, and capabilities of an adversary.\\n* __risk-assessment__ = Identifies and analyzes the potential of future events that may negatively impact individuals, assets, and/or the environment. Risk assessments may also include judgments on the tolerability of each risk.\\n* __vulnerability-assertion__ = A Vulnerability Disclosure Report (VDR) which asserts the known and previously unknown vulnerabilities that affect a component, service, or product including the analysis and findings describing the impact (or lack of ",
                      "markdown": "`supporting documentation in human-readable or machine-readable format\\n* __adversary-model__ = The defined assumptions, goals, and capabilities of an adversary.\\n* __risk-assessment__ = Identifies and analyzes the potential of future events that may negatively impact individuals, assets, and/or the environment. Risk assessments may also include judgments on the tolerability of each risk.\\n* __vulnerability-assertion__ = A Vulnerability Disclosure Report (VDR) which asserts the known and previously unknown vulnerabilities that affect a component, service, or product including the analysis and findings describing the impact (or lack of `"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 1423,
                  "endLine": 416,
                  "endColumn": 1486,
                  "snippet": {
                    "text": "ific to any particular technology, which isolates software inside the container from software outside of a container through virtualization technology. Refer to [https://en.wikipedia.org/wiki/OS-level_virtualization](https://en.wikipedia.org/wiki/OS-level_virtualization)\\n* __platform__ = A runtime environment which interprets or executes software. This may include runtimes such as those that execute bytecode or low-code/no-code application platforms.\\n* __operating-system__ = A software operating system without regard to deployment model (i.e. installed on physical hardware, virtual machine, image, etc) Refer to [https://en.wikipedia.org/wiki/Operating_s",
                    "rendered": {
                      "text": "ific to any particular technology, which isolates software inside the container from software outside of a container through virtualization technology. Refer to [https://en.wikipedia.org/wiki/OS-level_virtualization](https://en.wikipedia.org/wiki/OS-level_virtualization)\\n* __platform__ = A runtime environment which interprets or executes software. This may include runtimes such as those that execute bytecode or low-code/no-code application platforms.\\n* __operating-system__ = A software operating system without regard to deployment model (i.e. installed on physical hardware, virtual machine, image, etc) Refer to [https://en.wikipedia.org/wiki/Operating_s",
                      "markdown": "`ific to any particular technology, which isolates software inside the container from software outside of a container through virtualization technology. Refer to [https://en.wikipedia.org/wiki/OS-level_virtualization](https://en.wikipedia.org/wiki/OS-level_virtualization)\\n* __platform__ = A runtime environment which interprets or executes software. This may include runtimes such as those that execute bytecode or low-code/no-code application platforms.\\n* __operating-system__ = A software operating system without regard to deployment model (i.e. installed on physical hardware, virtual machine, image, etc) Refer to [https://en.wikipedia.org/wiki/Operating_s`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 1545,
                  "endLine": 189,
                  "endColumn": 1599,
                  "snippet": {
                    "text": "ional. This may include staging or production environments and will generally encompass multiple SBOMs describing the applications and operating system, along with HBOMs describing the hardware that makes up the system. Operations Bill of Materials (OBOM) can provide full-stack inventory of runtime environments, configurations, and additional dependencies.\\n* __discovery__ = BOM consisting of information observed through network discovery providing point-in-time enumeration of embedded, on-premise, and cloud-native services such as server applications, connected devices, microservices, and serverless functions.\\n* __decommission__ = BOM containin",
                    "rendered": {
                      "text": "ional. This may include staging or production environments and will generally encompass multiple SBOMs describing the applications and operating system, along with HBOMs describing the hardware that makes up the system. Operations Bill of Materials (OBOM) can provide full-stack inventory of runtime environments, configurations, and additional dependencies.\\n* __discovery__ = BOM consisting of information observed through network discovery providing point-in-time enumeration of embedded, on-premise, and cloud-native services such as server applications, connected devices, microservices, and serverless functions.\\n* __decommission__ = BOM containin",
                      "markdown": "`ional. This may include staging or production environments and will generally encompass multiple SBOMs describing the applications and operating system, along with HBOMs describing the hardware that makes up the system. Operations Bill of Materials (OBOM) can provide full-stack inventory of runtime environments, configurations, and additional dependencies.\\n* __discovery__ = BOM consisting of information observed through network discovery providing point-in-time enumeration of embedded, on-premise, and cloud-native services such as server applications, connected devices, microservices, and serverless functions.\\n* __decommission__ = BOM containin`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 1291,
                  "endLine": 189,
                  "endColumn": 1326,
                  "snippet": {
                    "text": " exist as the result of a CI/CD process, may have been installed or deployed to a system or device, and may need to be retrieved or extracted from the system or device.\\n* __operations__ = BOM produced that represents inventory that is running and operational. This may include staging or production environments and will generally encompass multiple SBOMs describing the applications and operating system, along with HBOMs describing the hardware that makes up the system. Operations Bill of Materials (OBOM) can provide full-stack inventory of runtime environments, configurations, and additional dependencies.\\n* __discovery__ = BOM",
                    "rendered": {
                      "text": " exist as the result of a CI/CD process, may have been installed or deployed to a system or device, and may need to be retrieved or extracted from the system or device.\\n* __operations__ = BOM produced that represents inventory that is running and operational. This may include staging or production environments and will generally encompass multiple SBOMs describing the applications and operating system, along with HBOMs describing the hardware that makes up the system. Operations Bill of Materials (OBOM) can provide full-stack inventory of runtime environments, configurations, and additional dependencies.\\n* __discovery__ = BOM",
                      "markdown": "` exist as the result of a CI/CD process, may have been installed or deployed to a system or device, and may need to be retrieved or extracted from the system or device.\\n* __operations__ = BOM produced that represents inventory that is running and operational. This may include staging or production environments and will generally encompass multiple SBOMs describing the applications and operating system, along with HBOMs describing the hardware that makes up the system. Operations Bill of Materials (OBOM) can provide full-stack inventory of runtime environments, configurations, and additional dependencies.\\n* __discovery__ = BOM`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2774,
                  "startColumn": 58,
                  "endLine": 2774,
                  "endColumn": 64,
                  "snippet": {
                    "text": "        },\n        \"image\": {\n          \"title\": \"Graphic Image\",\n          \"description\": \"The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\",\n          \"$ref\": \"#/definitions/attachment\"\n        }\n      }\n",
                    "rendered": {
                      "text": "        },\n        \"image\": {\n          \"title\": \"Graphic Image\",\n          \"description\": \"The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\",\n          \"$ref\": \"#/definitions/attachment\"\n        }\n      }\n",
                      "markdown": "`        },\n        \"image\": {\n          \"title\": \"Graphic Image\",\n          \"description\": \"The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\",\n          \"$ref\": \"#/definitions/attachment\"\n        }\n      }\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 679,
                  "startColumn": 13,
                  "endLine": 679,
                  "endColumn": 19,
                  "snippet": {
                    "text": "          \"title\": \"Encoding\",\n          \"description\": \"Specifies the optional encoding the text is represented in.\",\n          \"enum\": [\n            \"base64\"\n          ]\n        },\n        \"content\": {\n",
                    "rendered": {
                      "text": "          \"title\": \"Encoding\",\n          \"description\": \"Specifies the optional encoding the text is represented in.\",\n          \"enum\": [\n            \"base64\"\n          ]\n        },\n        \"content\": {\n",
                      "markdown": "`          \"title\": \"Encoding\",\n          \"description\": \"Specifies the optional encoding the text is represented in.\",\n          \"enum\": [\n            \"base64\"\n          ]\n        },\n        \"content\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3447,
                  "startColumn": 74,
                  "endLine": 3447,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        },\n        \"outputs\": {\n          \"title\": \"Outputs\",\n          \"description\": \"Represents resources and data output from a task at runtime by executor or task commands\",\n          \"examples\": [\"a log file or metrics data produced by the task\"],\n          \"type\": \"array\",\n          \"items\": {\n",
                    "rendered": {
                      "text": "        },\n        \"outputs\": {\n          \"title\": \"Outputs\",\n          \"description\": \"Represents resources and data output from a task at runtime by executor or task commands\",\n          \"examples\": [\"a log file or metrics data produced by the task\"],\n          \"type\": \"array\",\n          \"items\": {\n",
                      "markdown": "`        },\n        \"outputs\": {\n          \"title\": \"Outputs\",\n          \"description\": \"Represents resources and data output from a task at runtime by executor or task commands\",\n          \"examples\": [\"a log file or metrics data produced by the task\"],\n          \"type\": \"array\",\n          \"items\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3437,
                  "startColumn": 75,
                  "endLine": 3437,
                  "endColumn": 79,
                  "snippet": {
                    "text": "        },\n        \"inputs\": {\n          \"title\": \"Inputs\",\n          \"description\": \"Represents resources and data brought into a task at runtime by executor or task commands\",\n          \"examples\": [\"a `configuration` file which was declared as a local `component` or `externalReference`\"],\n          \"type\": \"array\",\n          \"items\": {\n",
                    "rendered": {
                      "text": "        },\n        \"inputs\": {\n          \"title\": \"Inputs\",\n          \"description\": \"Represents resources and data brought into a task at runtime by executor or task commands\",\n          \"examples\": [\"a `configuration` file which was declared as a local `component` or `externalReference`\"],\n          \"type\": \"array\",\n          \"items\": {\n",
                      "markdown": "`        },\n        \"inputs\": {\n          \"title\": \"Inputs\",\n          \"description\": \"Represents resources and data brought into a task at runtime by executor or task commands\",\n          \"examples\": [\"a `configuration` file which was declared as a local `component` or `externalReference`\"],\n          \"type\": \"array\",\n          \"items\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3285,
                  "startColumn": 120,
                  "endLine": 3285,
                  "endColumn": 124,
                  "snippet": {
                    "text": "        \"managedDataType\": {\n          \"title\": \"Managed data type\",\n          \"description\": \"The name of a domain-specific data type the workspace represents.\",\n          \"$comment\": \"This property is for CI/CD frameworks that are able to provide access to structured, managed data at a more granular level than a filesystem.\",\n          \"examples\": [\"ConfigMap\",\"Secret\"],\n          \"type\": \"string\"\n        },\n",
                    "rendered": {
                      "text": "        \"managedDataType\": {\n          \"title\": \"Managed data type\",\n          \"description\": \"The name of a domain-specific data type the workspace represents.\",\n          \"$comment\": \"This property is for CI/CD frameworks that are able to provide access to structured, managed data at a more granular level than a filesystem.\",\n          \"examples\": [\"ConfigMap\",\"Secret\"],\n          \"type\": \"string\"\n        },\n",
                      "markdown": "`        \"managedDataType\": {\n          \"title\": \"Managed data type\",\n          \"description\": \"The name of a domain-specific data type the workspace represents.\",\n          \"$comment\": \"This property is for CI/CD frameworks that are able to provide access to structured, managed data at a more granular level than a filesystem.\",\n          \"examples\": [\"ConfigMap\",\"Secret\"],\n          \"type\": \"string\"\n        },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3267,
                  "startColumn": 57,
                  "endLine": 3267,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        },\n        \"accessMode\": {\n          \"title\": \"Access mode\",\n          \"description\": \"Describes the read-write access control for the workspace relative to the owning resource instance.\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"read-only\",\n",
                    "rendered": {
                      "text": "        },\n        \"accessMode\": {\n          \"title\": \"Access mode\",\n          \"description\": \"Describes the read-write access control for the workspace relative to the owning resource instance.\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"read-only\",\n",
                      "markdown": "`        },\n        \"accessMode\": {\n          \"title\": \"Access mode\",\n          \"description\": \"Describes the read-write access control for the workspace relative to the owning resource instance.\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"read-only\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3122,
                  "startColumn": 74,
                  "endLine": 3122,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        },\n        \"outputs\": {\n          \"title\": \"Outputs\",\n          \"description\": \"Represents resources and data output from a task at runtime by executor or task commands\",\n          \"examples\": [\"a log file or metrics data produced by the task\"],\n          \"type\": \"array\",\n          \"items\": {\n",
                    "rendered": {
                      "text": "        },\n        \"outputs\": {\n          \"title\": \"Outputs\",\n          \"description\": \"Represents resources and data output from a task at runtime by executor or task commands\",\n          \"examples\": [\"a log file or metrics data produced by the task\"],\n          \"type\": \"array\",\n          \"items\": {\n",
                      "markdown": "`        },\n        \"outputs\": {\n          \"title\": \"Outputs\",\n          \"description\": \"Represents resources and data output from a task at runtime by executor or task commands\",\n          \"examples\": [\"a log file or metrics data produced by the task\"],\n          \"type\": \"array\",\n          \"items\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3112,
                  "startColumn": 75,
                  "endLine": 3112,
                  "endColumn": 79,
                  "snippet": {
                    "text": "        },\n        \"inputs\": {\n          \"title\": \"Inputs\",\n          \"description\": \"Represents resources and data brought into a task at runtime by executor or task commands\",\n          \"examples\": [\"a `configuration` file which was declared as a local `component` or `externalReference`\"],\n          \"type\": \"array\",\n          \"items\": {\n",
                    "rendered": {
                      "text": "        },\n        \"inputs\": {\n          \"title\": \"Inputs\",\n          \"description\": \"Represents resources and data brought into a task at runtime by executor or task commands\",\n          \"examples\": [\"a `configuration` file which was declared as a local `component` or `externalReference`\"],\n          \"type\": \"array\",\n          \"items\": {\n",
                      "markdown": "`        },\n        \"inputs\": {\n          \"title\": \"Inputs\",\n          \"description\": \"Represents resources and data brought into a task at runtime by executor or task commands\",\n          \"examples\": [\"a `configuration` file which was declared as a local `component` or `externalReference`\"],\n          \"type\": \"array\",\n          \"items\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2998,
                  "startColumn": 74,
                  "endLine": 2998,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        },\n        \"outputs\": {\n          \"title\": \"Outputs\",\n          \"description\": \"Represents resources and data output from a task at runtime by executor or task commands\",\n          \"examples\": [\"a log file or metrics data produced by the task\"],\n          \"type\": \"array\",\n          \"items\": {\n",
                    "rendered": {
                      "text": "        },\n        \"outputs\": {\n          \"title\": \"Outputs\",\n          \"description\": \"Represents resources and data output from a task at runtime by executor or task commands\",\n          \"examples\": [\"a log file or metrics data produced by the task\"],\n          \"type\": \"array\",\n          \"items\": {\n",
                      "markdown": "`        },\n        \"outputs\": {\n          \"title\": \"Outputs\",\n          \"description\": \"Represents resources and data output from a task at runtime by executor or task commands\",\n          \"examples\": [\"a log file or metrics data produced by the task\"],\n          \"type\": \"array\",\n          \"items\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2988,
                  "startColumn": 75,
                  "endLine": 2988,
                  "endColumn": 79,
                  "snippet": {
                    "text": "        },\n        \"inputs\": {\n          \"title\": \"Inputs\",\n          \"description\": \"Represents resources and data brought into a task at runtime by executor or task commands\",\n          \"examples\": [\"a `configuration` file which was declared as a local `component` or `externalReference`\"],\n          \"type\": \"array\",\n          \"items\": {\n",
                    "rendered": {
                      "text": "        },\n        \"inputs\": {\n          \"title\": \"Inputs\",\n          \"description\": \"Represents resources and data brought into a task at runtime by executor or task commands\",\n          \"examples\": [\"a `configuration` file which was declared as a local `component` or `externalReference`\"],\n          \"type\": \"array\",\n          \"items\": {\n",
                      "markdown": "`        },\n        \"inputs\": {\n          \"title\": \"Inputs\",\n          \"description\": \"Represents resources and data brought into a task at runtime by executor or task commands\",\n          \"examples\": [\"a `configuration` file which was declared as a local `component` or `externalReference`\"],\n          \"type\": \"array\",\n          \"items\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2834,
                  "startColumn": 51,
                  "endLine": 2834,
                  "endColumn": 55,
                  "snippet": {
                    "text": "      \"properties\": {\n        \"groupAtRisk\": {\n          \"type\": \"string\",\n          \"description\": \"The groups or individuals at risk of being systematically disadvantaged by the model.\"\n        },\n        \"benefits\": {\n          \"type\": \"string\",\n",
                    "rendered": {
                      "text": "      \"properties\": {\n        \"groupAtRisk\": {\n          \"type\": \"string\",\n          \"description\": \"The groups or individuals at risk of being systematically disadvantaged by the model.\"\n        },\n        \"benefits\": {\n          \"type\": \"string\",\n",
                      "markdown": "`      \"properties\": {\n        \"groupAtRisk\": {\n          \"type\": \"string\",\n          \"description\": \"The groups or individuals at risk of being systematically disadvantaged by the model.\"\n        },\n        \"benefits\": {\n          \"type\": \"string\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2829,
                  "startColumn": 92,
                  "endLine": 2829,
                  "endColumn": 96,
                  "snippet": {
                    "text": "    \"fairnessAssessment\": {\n      \"type\": \"object\",\n      \"title\": \"Fairness Assessment\",\n      \"description\": \"Information about the benefits and harms of the model to an identified at risk group.\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"groupAtRisk\": {\n",
                    "rendered": {
                      "text": "    \"fairnessAssessment\": {\n      \"type\": \"object\",\n      \"title\": \"Fairness Assessment\",\n      \"description\": \"Information about the benefits and harms of the model to an identified at risk group.\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"groupAtRisk\": {\n",
                      "markdown": "`    \"fairnessAssessment\": {\n      \"type\": \"object\",\n      \"title\": \"Fairness Assessment\",\n      \"description\": \"Information about the benefits and harms of the model to an identified at risk group.\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"groupAtRisk\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2597,
                  "startColumn": 62,
                  "endLine": 2597,
                  "endColumn": 66,
                  "snippet": {
                    "text": "            \"fairnessAssessments\": {\n              \"type\": \"array\",\n              \"title\": \"Fairness Assessments\",\n              \"description\": \"How does the model affect groups at risk of being systematically disadvantaged? What are the harms and benefits to the various affected groups?\",\n              \"items\": {\n                \"$ref\": \"#/definitions/fairnessAssessment\"\n              }\n",
                    "rendered": {
                      "text": "            \"fairnessAssessments\": {\n              \"type\": \"array\",\n              \"title\": \"Fairness Assessments\",\n              \"description\": \"How does the model affect groups at risk of being systematically disadvantaged? What are the harms and benefits to the various affected groups?\",\n              \"items\": {\n                \"$ref\": \"#/definitions/fairnessAssessment\"\n              }\n",
                      "markdown": "`            \"fairnessAssessments\": {\n              \"type\": \"array\",\n              \"title\": \"Fairness Assessments\",\n              \"description\": \"How does the model affect groups at risk of being systematically disadvantaged? What are the harms and benefits to the various affected groups?\",\n              \"items\": {\n                \"$ref\": \"#/definitions/fairnessAssessment\"\n              }\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2330,
                  "startColumn": 107,
                  "endLine": 2330,
                  "endColumn": 111,
                  "snippet": {
                    "text": "      \"maxLength\": 1024\n    },\n    \"range\": {\n      \"description\": \"A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 1024\n",
                    "rendered": {
                      "text": "      \"maxLength\": 1024\n    },\n    \"range\": {\n      \"description\": \"A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 1024\n",
                      "markdown": "`      \"maxLength\": 1024\n    },\n    \"range\": {\n      \"description\": \"A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 1024\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2288,
                  "startColumn": 123,
                  "endLine": 2288,
                  "endColumn": 127,
                  "snippet": {
                    "text": "                      \"$ref\": \"#/definitions/version\"\n                    },\n                    \"range\": {\n                      \"description\": \"A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst\",\n                      \"$ref\": \"#/definitions/range\"\n                    },\n                    \"status\": {\n",
                    "rendered": {
                      "text": "                      \"$ref\": \"#/definitions/version\"\n                    },\n                    \"range\": {\n                      \"description\": \"A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst\",\n                      \"$ref\": \"#/definitions/range\"\n                    },\n                    \"status\": {\n",
                      "markdown": "`                      \"$ref\": \"#/definitions/version\"\n                    },\n                    \"range\": {\n                      \"description\": \"A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst\",\n                      \"$ref\": \"#/definitions/range\"\n                    },\n                    \"status\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1920,
                  "startColumn": 746,
                  "endLine": 1920,
                  "endColumn": 750,
                  "snippet": {
                    "text": "ironment__ = exploitability requires a certain environment which is not present. \\n* __protected\\\\_by\\\\_compiler__ = exploitability requires a compiler flag to be set/unset. \\n* __protected\\\\_at\\\\_runtime__ = exploits are prevented at runtime. \\n* __protected\\\\_at\\\\_perimeter__ = attacks are blocked at physical, logical, or network perimeter. \\n* __protected\\\\_by\\\\_mitigating\\\\_control__ = preventative measures have been implemented that reduce the likelihood and/or impact of the vulnerability.\",\n      \"enum\": [\n        \"code_not_present\",\n        \"code_not_reachable\",\n        \"requires_configurat",
                    "rendered": {
                      "text": "ironment__ = exploitability requires a certain environment which is not present. \\n* __protected\\\\_by\\\\_compiler__ = exploitability requires a compiler flag to be set/unset. \\n* __protected\\\\_at\\\\_runtime__ = exploits are prevented at runtime. \\n* __protected\\\\_at\\\\_perimeter__ = attacks are blocked at physical, logical, or network perimeter. \\n* __protected\\\\_by\\\\_mitigating\\\\_control__ = preventative measures have been implemented that reduce the likelihood and/or impact of the vulnerability.\",\n      \"enum\": [\n        \"code_not_present\",\n        \"code_not_reachable\",\n        \"requires_configurat",
                      "markdown": "`ironment__ = exploitability requires a certain environment which is not present. \\n* __protected\\\\_by\\\\_compiler__ = exploitability requires a compiler flag to be set/unset. \\n* __protected\\\\_at\\\\_runtime__ = exploits are prevented at runtime. \\n* __protected\\\\_at\\\\_perimeter__ = attacks are blocked at physical, logical, or network perimeter. \\n* __protected\\\\_by\\\\_mitigating\\\\_control__ = preventative measures have been implemented that reduce the likelihood and/or impact of the vulnerability.\",\n      \"enum\": [\n        \"code_not_present\",\n        \"code_not_reachable\",\n        \"requires_configurat`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1920,
                  "startColumn": 677,
                  "endLine": 1920,
                  "endColumn": 681,
                  "snippet": {
                    "text": "ility requires a dependency that is not present. \\n* __requires\\\\_environment__ = exploitability requires a certain environment which is not present. \\n* __protected\\\\_by\\\\_compiler__ = exploitability requires a compiler flag to be set/unset. \\n* __protected\\\\_at\\\\_runtime__ = exploits are prevented at runtime. \\n* __protected\\\\_at\\\\_perimeter__ = attacks are blocked at physical, logical, or network perimeter. \\n* __protected\\\\_by\\\\_mitigating\\\\_control__ = preventative measures have been implemented that reduce the likelihood and/or impact of the vulnerability.\",\n      \"enum\": [\n        \"code_not",
                    "rendered": {
                      "text": "ility requires a dependency that is not present. \\n* __requires\\\\_environment__ = exploitability requires a certain environment which is not present. \\n* __protected\\\\_by\\\\_compiler__ = exploitability requires a compiler flag to be set/unset. \\n* __protected\\\\_at\\\\_runtime__ = exploits are prevented at runtime. \\n* __protected\\\\_at\\\\_perimeter__ = attacks are blocked at physical, logical, or network perimeter. \\n* __protected\\\\_by\\\\_mitigating\\\\_control__ = preventative measures have been implemented that reduce the likelihood and/or impact of the vulnerability.\",\n      \"enum\": [\n        \"code_not",
                      "markdown": "`ility requires a dependency that is not present. \\n* __requires\\\\_environment__ = exploitability requires a certain environment which is not present. \\n* __protected\\\\_by\\\\_compiler__ = exploitability requires a compiler flag to be set/unset. \\n* __protected\\\\_at\\\\_runtime__ = exploits are prevented at runtime. \\n* __protected\\\\_at\\\\_perimeter__ = attacks are blocked at physical, logical, or network perimeter. \\n* __protected\\\\_by\\\\_mitigating\\\\_control__ = preventative measures have been implemented that reduce the likelihood and/or impact of the vulnerability.\",\n      \"enum\": [\n        \"code_not`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1920,
                  "startColumn": 225,
                  "endLine": 1920,
                  "endColumn": 229,
                  "snippet": {
                    "text": " {\n      \"type\": \"string\",\n      \"title\": \"Impact Analysis Justification\",\n      \"description\": \"The rationale of why the impact analysis state was asserted. \\n\\n* __code\\\\_not\\\\_present__ = the code has been removed or tree-shaked. \\n* __code\\\\_not\\\\_reachable__ = the vulnerable code is not invoked at runtime. \\n* __requires\\\\_configuration__ = exploitability requires a configurable option to be set/unset. \\n* __requires\\\\_dependency__ = exploitability requires a dependency that is not present. \\n* __requires\\\\_environment__ = exploitability requires a certain environment which is not present. \\n",
                    "rendered": {
                      "text": " {\n      \"type\": \"string\",\n      \"title\": \"Impact Analysis Justification\",\n      \"description\": \"The rationale of why the impact analysis state was asserted. \\n\\n* __code\\\\_not\\\\_present__ = the code has been removed or tree-shaked. \\n* __code\\\\_not\\\\_reachable__ = the vulnerable code is not invoked at runtime. \\n* __requires\\\\_configuration__ = exploitability requires a configurable option to be set/unset. \\n* __requires\\\\_dependency__ = exploitability requires a dependency that is not present. \\n* __requires\\\\_environment__ = exploitability requires a certain environment which is not present. \\n",
                      "markdown": "` {\n      \"type\": \"string\",\n      \"title\": \"Impact Analysis Justification\",\n      \"description\": \"The rationale of why the impact analysis state was asserted. \\n\\n* __code\\\\_not\\\\_present__ = the code has been removed or tree-shaked. \\n* __code\\\\_not\\\\_reachable__ = the vulnerable code is not invoked at runtime. \\n* __requires\\\\_configuration__ = exploitability requires a configurable option to be set/unset. \\n* __requires\\\\_dependency__ = exploitability requires a dependency that is not present. \\n* __requires\\\\_environment__ = exploitability requires a certain environment which is not present. \\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1174,
                  "startColumn": 90,
                  "endLine": 1174,
                  "endColumn": 99,
                  "snippet": {
                    "text": "pe\": \"string\",\n          \"title\": \"Comment\",\n          \"description\": \"An optional comment describing the external reference\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"title\": \"Type\",\n          \"description\": \"Specifies the type of external reference.\\n\\n* __vcs__ = Version Control System\\n* __issue-tracker__ = Issue or defect tracking system, or an Application Lifecycle Management (ALM) system\\n* __website__ = Website\\n* __advisories__ = Security advisories\\n* __bom__ = Bill of Materials (SBOM, OBOM, HBOM, SaaSBOM, etc)\\n* __mailing-list__ = Mailing list or discussion group\\n",
                    "rendered": {
                      "text": "pe\": \"string\",\n          \"title\": \"Comment\",\n          \"description\": \"An optional comment describing the external reference\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"title\": \"Type\",\n          \"description\": \"Specifies the type of external reference.\\n\\n* __vcs__ = Version Control System\\n* __issue-tracker__ = Issue or defect tracking system, or an Application Lifecycle Management (ALM) system\\n* __website__ = Website\\n* __advisories__ = Security advisories\\n* __bom__ = Bill of Materials (SBOM, OBOM, HBOM, SaaSBOM, etc)\\n* __mailing-list__ = Mailing list or discussion group\\n",
                      "markdown": "`pe\": \"string\",\n          \"title\": \"Comment\",\n          \"description\": \"An optional comment describing the external reference\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"title\": \"Type\",\n          \"description\": \"Specifies the type of external reference.\\n\\n* __vcs__ = Version Control System\\n* __issue-tracker__ = Issue or defect tracking system, or an Application Lifecycle Management (ALM) system\\n* __website__ = Website\\n* __advisories__ = Security advisories\\n* __bom__ = Bill of Materials (SBOM, OBOM, HBOM, SaaSBOM, etc)\\n* __mailing-list__ = Mailing list or discussion group\\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 979,
                  "startColumn": 103,
                  "endLine": 979,
                  "endColumn": 112,
                  "snippet": {
                    "text": "        \"url\": {\n          \"type\": \"string\",\n          \"title\": \"URL\",\n          \"description\": \"The URL to the commit. This URL will typically point to a commit in a version control system.\",\n          \"format\": \"iri-reference\"\n        },\n        \"author\": {\n",
                    "rendered": {
                      "text": "        \"url\": {\n          \"type\": \"string\",\n          \"title\": \"URL\",\n          \"description\": \"The URL to the commit. This URL will typically point to a commit in a version control system.\",\n          \"format\": \"iri-reference\"\n        },\n        \"author\": {\n",
                      "markdown": "`        \"url\": {\n          \"type\": \"string\",\n          \"title\": \"URL\",\n          \"description\": \"The URL to the commit. This URL will typically point to a commit in a version control system.\",\n          \"format\": \"iri-reference\"\n        },\n        \"author\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 974,
                  "startColumn": 80,
                  "endLine": 974,
                  "endColumn": 89,
                  "snippet": {
                    "text": "        \"uid\": {\n          \"type\": \"string\",\n          \"title\": \"UID\",\n          \"description\": \"A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes.\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n",
                    "rendered": {
                      "text": "        \"uid\": {\n          \"type\": \"string\",\n          \"title\": \"UID\",\n          \"description\": \"A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes.\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n",
                      "markdown": "`        \"uid\": {\n          \"type\": \"string\",\n          \"title\": \"UID\",\n          \"description\": \"A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes.\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 2567,
                  "endLine": 416,
                  "endColumn": 2576,
                  "snippet": {
                    "text": "/blob/main/cdx/device.md).\\n* __device-driver__ = A special type of software that operates or controls a particular type of device. Refer to [https://en.wikipedia.org/wiki/Device_driver](https://en.wikipedia.org/wiki/Device_driver)\\n* __firmware__ = A special type of software that provides low-level control over a devices hardware. Refer to [https://en.wikipedia.org/wiki/Firmware](https://en.wikipedia.org/wiki/Firmware)\\n* __file__ = A computer file. Refer to [https://en.wikipedia.org/wiki/Computer_file](https://en.wikipedia.org/wiki/Computer_file) for information about files.\\n* __machine-learning-mod",
                    "rendered": {
                      "text": "/blob/main/cdx/device.md).\\n* __device-driver__ = A special type of software that operates or controls a particular type of device. Refer to [https://en.wikipedia.org/wiki/Device_driver](https://en.wikipedia.org/wiki/Device_driver)\\n* __firmware__ = A special type of software that provides low-level control over a devices hardware. Refer to [https://en.wikipedia.org/wiki/Firmware](https://en.wikipedia.org/wiki/Firmware)\\n* __file__ = A computer file. Refer to [https://en.wikipedia.org/wiki/Computer_file](https://en.wikipedia.org/wiki/Computer_file) for information about files.\\n* __machine-learning-mod",
                      "markdown": "`/blob/main/cdx/device.md).\\n* __device-driver__ = A special type of software that operates or controls a particular type of device. Refer to [https://en.wikipedia.org/wiki/Device_driver](https://en.wikipedia.org/wiki/Device_driver)\\n* __firmware__ = A special type of software that provides low-level control over a devices hardware. Refer to [https://en.wikipedia.org/wiki/Firmware](https://en.wikipedia.org/wiki/Firmware)\\n* __file__ = A computer file. Refer to [https://en.wikipedia.org/wiki/Computer_file](https://en.wikipedia.org/wiki/Computer_file) for information about files.\\n* __machine-learning-mod`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 35,
                  "endLine": 353,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        \"contact\": {\n          \"type\": \"array\",\n          \"title\": \"Contact\",\n          \"description\": \"A contact at the organization. Multiple contacts are allowed.\",\n          \"items\": {\"$ref\": \"#/definitions/organizationalContact\"}\n        }\n      }\n",
                    "rendered": {
                      "text": "        \"contact\": {\n          \"type\": \"array\",\n          \"title\": \"Contact\",\n          \"description\": \"A contact at the organization. Multiple contacts are allowed.\",\n          \"items\": {\"$ref\": \"#/definitions/organizationalContact\"}\n        }\n      }\n",
                      "markdown": "`        \"contact\": {\n          \"type\": \"array\",\n          \"title\": \"Contact\",\n          \"description\": \"A contact at the organization. Multiple contacts are allowed.\",\n          \"items\": {\"$ref\": \"#/definitions/organizationalContact\"}\n        }\n      }\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 723,
                  "endLine": 189,
                  "endColumn": 727,
                  "snippet": {
                    "text": "es and development artifacts and manifests. The inventory may need to be resolved and retrieved prior to use.\\n* __build__ = BOM consisting of information obtained during a build process where component inventory is available for use. The precise versions of resolved components are usually available at this time as well as the provenance of where the components were retrieved from.\\n* __post-build__ = BOM consisting of information obtained after a build process has completed and the resulting components(s) are available for further analysis. Built components may exist as the result of a CI/CD proc",
                    "rendered": {
                      "text": "es and development artifacts and manifests. The inventory may need to be resolved and retrieved prior to use.\\n* __build__ = BOM consisting of information obtained during a build process where component inventory is available for use. The precise versions of resolved components are usually available at this time as well as the provenance of where the components were retrieved from.\\n* __post-build__ = BOM consisting of information obtained after a build process has completed and the resulting components(s) are available for further analysis. Built components may exist as the result of a CI/CD proc",
                      "markdown": "`es and development artifacts and manifests. The inventory may need to be resolved and retrieved prior to use.\\n* __build__ = BOM consisting of information obtained during a build process where component inventory is available for use. The precise versions of resolved components are usually available at this time as well as the provenance of where the components were retrieved from.\\n* __post-build__ = BOM consisting of information obtained after a build process has completed and the resulting components(s) are available for further analysis. Built components may exist as the result of a CI/CD proc`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 92,
                  "endLine": 31,
                  "endColumn": 96,
                  "snippet": {
                    "text": "    \"specVersion\": {\n      \"type\": \"string\",\n      \"title\": \"CycloneDX Specification Version\",\n      \"description\": \"The version of the CycloneDX specification a BOM conforms to (starting at version 1.2).\",\n      \"examples\": [\"1.5\"]\n    },\n    \"serialNumber\": {\n",
                    "rendered": {
                      "text": "    \"specVersion\": {\n      \"type\": \"string\",\n      \"title\": \"CycloneDX Specification Version\",\n      \"description\": \"The version of the CycloneDX specification a BOM conforms to (starting at version 1.2).\",\n      \"examples\": [\"1.5\"]\n    },\n    \"serialNumber\": {\n",
                      "markdown": "`    \"specVersion\": {\n      \"type\": \"string\",\n      \"title\": \"CycloneDX Specification Version\",\n      \"description\": \"The version of the CycloneDX specification a BOM conforms to (starting at version 1.2).\",\n      \"examples\": [\"1.5\"]\n    },\n    \"serialNumber\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3645,
                  "startColumn": 120,
                  "endLine": 3645,
                  "endColumn": 129,
                  "snippet": {
                    "text": "        },\n        \"target\": {\n          \"title\": \"Target\",\n          \"description\": \"Component or service that received the output from the task (e.g., reference to an artifactory service with data flow value of `outbound`)\",\n          \"examples\": [\"a log file described as an `externalReference` within its target domain.\"],\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n",
                    "rendered": {
                      "text": "        },\n        \"target\": {\n          \"title\": \"Target\",\n          \"description\": \"Component or service that received the output from the task (e.g., reference to an artifactory service with data flow value of `outbound`)\",\n          \"examples\": [\"a log file described as an `externalReference` within its target domain.\"],\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n",
                      "markdown": "`        },\n        \"target\": {\n          \"title\": \"Target\",\n          \"description\": \"Component or service that received the output from the task (e.g., reference to an artifactory service with data flow value of `outbound`)\",\n          \"examples\": [\"a log file described as an `externalReference` within its target domain.\"],\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3645,
                  "startColumn": 38,
                  "endLine": 3645,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        },\n        \"target\": {\n          \"title\": \"Target\",\n          \"description\": \"Component or service that received the output from the task (e.g., reference to an artifactory service with data flow value of `outbound`)\",\n          \"examples\": [\"a log file described as an `externalReference` within its target domain.\"],\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n",
                    "rendered": {
                      "text": "        },\n        \"target\": {\n          \"title\": \"Target\",\n          \"description\": \"Component or service that received the output from the task (e.g., reference to an artifactory service with data flow value of `outbound`)\",\n          \"examples\": [\"a log file described as an `externalReference` within its target domain.\"],\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n",
                      "markdown": "`        },\n        \"target\": {\n          \"title\": \"Target\",\n          \"description\": \"Component or service that received the output from the task (e.g., reference to an artifactory service with data flow value of `outbound`)\",\n          \"examples\": [\"a log file described as an `externalReference` within its target domain.\"],\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3640,
                  "startColumn": 38,
                  "endLine": 3640,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        },\n        \"source\": {\n          \"title\": \"Source\",\n          \"description\": \"Component or service that generated or provided the output from the task (e.g., a build tool)\",\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n        \"target\": {\n",
                    "rendered": {
                      "text": "        },\n        \"source\": {\n          \"title\": \"Source\",\n          \"description\": \"Component or service that generated or provided the output from the task (e.g., a build tool)\",\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n        \"target\": {\n",
                      "markdown": "`        },\n        \"source\": {\n          \"title\": \"Source\",\n          \"description\": \"Component or service that generated or provided the output from the task (e.g., a build tool)\",\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n        \"target\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3561,
                  "startColumn": 36,
                  "endLine": 3561,
                  "endColumn": 45,
                  "snippet": {
                    "text": "          \"description\": \"A reference to an independent resource provided as an input to a task by the workflow runtime.\",\n          \"examples\": [\n            \"reference to a configuration file in a repository (i.e., a bom-ref)\",\n            \"reference to a scanning service used in a task (i.e., a bom-ref)\"\n          ],\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n",
                    "rendered": {
                      "text": "          \"description\": \"A reference to an independent resource provided as an input to a task by the workflow runtime.\",\n          \"examples\": [\n            \"reference to a configuration file in a repository (i.e., a bom-ref)\",\n            \"reference to a scanning service used in a task (i.e., a bom-ref)\"\n          ],\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n",
                      "markdown": "`          \"description\": \"A reference to an independent resource provided as an input to a task by the workflow runtime.\",\n          \"examples\": [\n            \"reference to a configuration file in a repository (i.e., a bom-ref)\",\n            \"reference to a scanning service used in a task (i.e., a bom-ref)\"\n          ],\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3549,
                  "startColumn": 57,
                  "endLine": 3549,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        },\n        \"target\": {\n          \"title\": \"Target\",\n          \"description\": \"A reference to the component or service that received or stored the input if not the task itself (e.g., a local, named storage workspace)\",\n          \"examples\": [\n            \"workspace\",\n            \"directory\"\n",
                    "rendered": {
                      "text": "        },\n        \"target\": {\n          \"title\": \"Target\",\n          \"description\": \"A reference to the component or service that received or stored the input if not the task itself (e.g., a local, named storage workspace)\",\n          \"examples\": [\n            \"workspace\",\n            \"directory\"\n",
                      "markdown": "`        },\n        \"target\": {\n          \"title\": \"Target\",\n          \"description\": \"A reference to the component or service that received or stored the input if not the task itself (e.g., a local, named storage workspace)\",\n          \"examples\": [\n            \"workspace\",\n            \"directory\"\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3540,
                  "startColumn": 124,
                  "endLine": 3540,
                  "endColumn": 133,
                  "snippet": {
                    "text": "      \"properties\": {\n        \"source\": {\n          \"title\": \"Source\",\n          \"description\": \"A references to the component or service that provided the input to the task (e.g., reference to a service with data flow value of `inbound`)\",\n          \"examples\": [\n            \"source code repository\",\n            \"database\"\n",
                    "rendered": {
                      "text": "      \"properties\": {\n        \"source\": {\n          \"title\": \"Source\",\n          \"description\": \"A references to the component or service that provided the input to the task (e.g., reference to a service with data flow value of `inbound`)\",\n          \"examples\": [\n            \"source code repository\",\n            \"database\"\n",
                      "markdown": "`      \"properties\": {\n        \"source\": {\n          \"title\": \"Source\",\n          \"description\": \"A references to the component or service that provided the input to the task (e.g., reference to a service with data flow value of `inbound`)\",\n          \"examples\": [\n            \"source code repository\",\n            \"database\"\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3540,
                  "startColumn": 58,
                  "endLine": 3540,
                  "endColumn": 67,
                  "snippet": {
                    "text": "      \"properties\": {\n        \"source\": {\n          \"title\": \"Source\",\n          \"description\": \"A references to the component or service that provided the input to the task (e.g., reference to a service with data flow value of `inbound`)\",\n          \"examples\": [\n            \"source code repository\",\n            \"database\"\n",
                    "rendered": {
                      "text": "      \"properties\": {\n        \"source\": {\n          \"title\": \"Source\",\n          \"description\": \"A references to the component or service that provided the input to the task (e.g., reference to a service with data flow value of `inbound`)\",\n          \"examples\": [\n            \"source code repository\",\n            \"database\"\n",
                      "markdown": "`      \"properties\": {\n        \"source\": {\n          \"title\": \"Source\",\n          \"description\": \"A references to the component or service that provided the input to the task (e.g., reference to a service with data flow value of `inbound`)\",\n          \"examples\": [\n            \"source code repository\",\n            \"database\"\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3498,
                  "startColumn": 53,
                  "endLine": 3498,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        },\n        \"target\": {\n          \"title\": \"Target\",\n          \"description\": \"References the component or service that was the target of the event\",\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n        \"properties\": {\n",
                    "rendered": {
                      "text": "        },\n        \"target\": {\n          \"title\": \"Target\",\n          \"description\": \"References the component or service that was the target of the event\",\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n        \"properties\": {\n",
                      "markdown": "`        },\n        \"target\": {\n          \"title\": \"Target\",\n          \"description\": \"References the component or service that was the target of the event\",\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n        \"properties\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3493,
                  "startColumn": 53,
                  "endLine": 3493,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        },\n        \"source\": {\n          \"title\": \"Source\",\n          \"description\": \"References the component or service that was the source of the event\",\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n        \"target\": {\n",
                    "rendered": {
                      "text": "        },\n        \"source\": {\n          \"title\": \"Source\",\n          \"description\": \"References the component or service that was the source of the event\",\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n        \"target\": {\n",
                      "markdown": "`        },\n        \"source\": {\n          \"title\": \"Source\",\n          \"description\": \"References the component or service that was the source of the event\",\n          \"$ref\": \"#/definitions/resourceReferenceChoice\"\n        },\n        \"target\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3482,
                  "startColumn": 38,
                  "endLine": 3482,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        },\n        \"timeReceived\": {\n          \"title\": \"Time Received\",\n          \"description\": \"The date and time (timestamp) when the event was received.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n",
                    "rendered": {
                      "text": "        },\n        \"timeReceived\": {\n          \"title\": \"Time Received\",\n          \"description\": \"The date and time (timestamp) when the event was received.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n",
                      "markdown": "`        },\n        \"timeReceived\": {\n          \"title\": \"Time Received\",\n          \"description\": \"The date and time (timestamp) when the event was received.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3431,
                  "startColumn": 38,
                  "endLine": 3431,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        },\n        \"timeActivated\": {\n          \"title\": \"Time activated\",\n          \"description\": \"The date and time (timestamp) when the trigger was activated.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n",
                    "rendered": {
                      "text": "        },\n        \"timeActivated\": {\n          \"title\": \"Time activated\",\n          \"description\": \"The date and time (timestamp) when the trigger was activated.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n",
                      "markdown": "`        },\n        \"timeActivated\": {\n          \"title\": \"Time activated\",\n          \"description\": \"The date and time (timestamp) when the trigger was activated.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3399,
                  "startColumn": 52,
                  "endLine": 3399,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        },\n        \"resourceReferences\": {\n          \"title\": \"Resource references\",\n          \"description\": \"References to component or service resources that are used to realize the resource instance.\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n",
                    "rendered": {
                      "text": "        },\n        \"resourceReferences\": {\n          \"title\": \"Resource references\",\n          \"description\": \"References to component or service resources that are used to realize the resource instance.\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n",
                      "markdown": "`        },\n        \"resourceReferences\": {\n          \"title\": \"Resource references\",\n          \"description\": \"References to component or service resources that are used to realize the resource instance.\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3258,
                  "startColumn": 52,
                  "endLine": 3258,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        },\n        \"resourceReferences\": {\n          \"title\": \"Resource references\",\n          \"description\": \"References to component or service resources that are used to realize the resource instance.\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n",
                    "rendered": {
                      "text": "        },\n        \"resourceReferences\": {\n          \"title\": \"Resource references\",\n          \"description\": \"References to component or service resources that are used to realize the resource instance.\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n",
                      "markdown": "`        },\n        \"resourceReferences\": {\n          \"title\": \"Resource references\",\n          \"description\": \"References to component or service resources that are used to realize the resource instance.\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3154,
                  "startColumn": 65,
                  "endLine": 3154,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        \"runtimeTopology\": {\n          \"title\": \"Runtime topology\",\n          \"description\": \"A graph of the component runtime topology for task's instance.\",\n          \"$comment\": \"A description of the runtime component and service topology.  This can describe a partial or complete topology used to host and execute the task (e.g., hardware, operating systems, configurations, etc.),\",\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/dependency\"\n",
                    "rendered": {
                      "text": "        \"runtimeTopology\": {\n          \"title\": \"Runtime topology\",\n          \"description\": \"A graph of the component runtime topology for task's instance.\",\n          \"$comment\": \"A description of the runtime component and service topology.  This can describe a partial or complete topology used to host and execute the task (e.g., hardware, operating systems, configurations, etc.),\",\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/dependency\"\n",
                      "markdown": "`        \"runtimeTopology\": {\n          \"title\": \"Runtime topology\",\n          \"description\": \"A graph of the component runtime topology for task's instance.\",\n          \"$comment\": \"A description of the runtime component and service topology.  This can describe a partial or complete topology used to host and execute the task (e.g., hardware, operating systems, configurations, etc.),\",\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/dependency\"\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3138,
                  "startColumn": 38,
                  "endLine": 3138,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        },\n        \"timeEnd\": {\n          \"title\": \"Time end\",\n          \"description\": \"The date and time (timestamp) when the task ended.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n",
                    "rendered": {
                      "text": "        },\n        \"timeEnd\": {\n          \"title\": \"Time end\",\n          \"description\": \"The date and time (timestamp) when the task ended.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n",
                      "markdown": "`        },\n        \"timeEnd\": {\n          \"title\": \"Time end\",\n          \"description\": \"The date and time (timestamp) when the task ended.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3132,
                  "startColumn": 38,
                  "endLine": 3132,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        },\n        \"timeStart\": {\n          \"title\": \"Time start\",\n          \"description\": \"The date and time (timestamp) when the task started.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n",
                    "rendered": {
                      "text": "        },\n        \"timeStart\": {\n          \"title\": \"Time start\",\n          \"description\": \"The date and time (timestamp) when the task started.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n",
                      "markdown": "`        },\n        \"timeStart\": {\n          \"title\": \"Time start\",\n          \"description\": \"The date and time (timestamp) when the task started.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3080,
                  "startColumn": 52,
                  "endLine": 3080,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        },\n        \"resourceReferences\": {\n          \"title\": \"Resource references\",\n          \"description\": \"References to component or service resources that are used to realize the resource instance.\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n",
                    "rendered": {
                      "text": "        },\n        \"resourceReferences\": {\n          \"title\": \"Resource references\",\n          \"description\": \"References to component or service resources that are used to realize the resource instance.\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n",
                      "markdown": "`        },\n        \"resourceReferences\": {\n          \"title\": \"Resource references\",\n          \"description\": \"References to component or service resources that are used to realize the resource instance.\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3030,
                  "startColumn": 65,
                  "endLine": 3030,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        \"runtimeTopology\": {\n          \"title\": \"Runtime topology\",\n          \"description\": \"A graph of the component runtime topology for workflow's instance.\",\n          \"$comment\": \"A description of the runtime component and service topology.  This can describe a partial or complete topology used to host and execute the task (e.g., hardware, operating systems, configurations, etc.),\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n",
                    "rendered": {
                      "text": "        \"runtimeTopology\": {\n          \"title\": \"Runtime topology\",\n          \"description\": \"A graph of the component runtime topology for workflow's instance.\",\n          \"$comment\": \"A description of the runtime component and service topology.  This can describe a partial or complete topology used to host and execute the task (e.g., hardware, operating systems, configurations, etc.),\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n",
                      "markdown": "`        \"runtimeTopology\": {\n          \"title\": \"Runtime topology\",\n          \"description\": \"A graph of the component runtime topology for workflow's instance.\",\n          \"$comment\": \"A description of the runtime component and service topology.  This can describe a partial or complete topology used to host and execute the task (e.g., hardware, operating systems, configurations, etc.),\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3014,
                  "startColumn": 38,
                  "endLine": 3014,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        },\n        \"timeEnd\": {\n          \"title\": \"Time end\",\n          \"description\": \"The date and time (timestamp) when the task ended.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n",
                    "rendered": {
                      "text": "        },\n        \"timeEnd\": {\n          \"title\": \"Time end\",\n          \"description\": \"The date and time (timestamp) when the task ended.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n",
                      "markdown": "`        },\n        \"timeEnd\": {\n          \"title\": \"Time end\",\n          \"description\": \"The date and time (timestamp) when the task ended.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 3008,
                  "startColumn": 38,
                  "endLine": 3008,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        },\n        \"timeStart\": {\n          \"title\": \"Time start\",\n          \"description\": \"The date and time (timestamp) when the task started.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n",
                    "rendered": {
                      "text": "        },\n        \"timeStart\": {\n          \"title\": \"Time start\",\n          \"description\": \"The date and time (timestamp) when the task started.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n",
                      "markdown": "`        },\n        \"timeStart\": {\n          \"title\": \"Time start\",\n          \"description\": \"The date and time (timestamp) when the task started.\",\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2937,
                  "startColumn": 52,
                  "endLine": 2937,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        },\n        \"resourceReferences\": {\n          \"title\": \"Resource references\",\n          \"description\": \"References to component or service resources that are used to realize the resource instance.\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n",
                    "rendered": {
                      "text": "        },\n        \"resourceReferences\": {\n          \"title\": \"Resource references\",\n          \"description\": \"References to component or service resources that are used to realize the resource instance.\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n",
                      "markdown": "`        },\n        \"resourceReferences\": {\n          \"title\": \"Resource references\",\n          \"description\": \"References to component or service resources that are used to realize the resource instance.\",\n          \"type\": \"array\",\n          \"uniqueItems\": true,\n          \"items\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2857,
                  "startColumn": 132,
                  "endLine": 2857,
                  "endColumn": 141,
                  "snippet": {
                    "text": "    },\n    \"formula\": {\n      \"title\": \"Formula\",\n      \"description\": \"Describes workflows and resources that captures rules and other aspects of how the associated BOM component or service was formed.\",\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n",
                    "rendered": {
                      "text": "    },\n    \"formula\": {\n      \"title\": \"Formula\",\n      \"description\": \"Describes workflows and resources that captures rules and other aspects of how the associated BOM component or service was formed.\",\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n",
                      "markdown": "`    },\n    \"formula\": {\n      \"title\": \"Formula\",\n      \"description\": \"Describes workflows and resources that captures rules and other aspects of how the associated BOM component or service was formed.\",\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2774,
                  "startColumn": 57,
                  "endLine": 2774,
                  "endColumn": 65,
                  "snippet": {
                    "text": "        },\n        \"image\": {\n          \"title\": \"Graphic Image\",\n          \"description\": \"The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\",\n          \"$ref\": \"#/definitions/attachment\"\n        }\n      }\n",
                    "rendered": {
                      "text": "        },\n        \"image\": {\n          \"title\": \"Graphic Image\",\n          \"description\": \"The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\",\n          \"$ref\": \"#/definitions/attachment\"\n        }\n      }\n",
                      "markdown": "`        },\n        \"image\": {\n          \"title\": \"Graphic Image\",\n          \"description\": \"The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\",\n          \"$ref\": \"#/definitions/attachment\"\n        }\n      }\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2420,
                  "startColumn": 38,
                  "endLine": 2420,
                  "endColumn": 44,
                  "snippet": {
                    "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Timestamp\",\n          \"description\": \"The date and time (timestamp) when the annotation was created.\"\n        },\n        \"text\": {\n          \"type\": \"string\",\n",
                    "rendered": {
                      "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Timestamp\",\n          \"description\": \"The date and time (timestamp) when the annotation was created.\"\n        },\n        \"text\": {\n          \"type\": \"string\",\n",
                      "markdown": "`          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Timestamp\",\n          \"description\": \"The date and time (timestamp) when the annotation was created.\"\n        },\n        \"text\": {\n          \"type\": \"string\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2411,
                  "startColumn": 33,
                  "endLine": 2411,
                  "endColumn": 42,
                  "snippet": {
                    "text": "              \"$ref\": \"#/definitions/component\"\n            },\n            \"service\": {\n              \"description\": \"The service that created the annotation\",\n              \"$ref\": \"#/definitions/service\"\n            }\n          }\n",
                    "rendered": {
                      "text": "              \"$ref\": \"#/definitions/component\"\n            },\n            \"service\": {\n              \"description\": \"The service that created the annotation\",\n              \"$ref\": \"#/definitions/service\"\n            }\n          }\n",
                      "markdown": "`              \"$ref\": \"#/definitions/component\"\n            },\n            \"service\": {\n              \"description\": \"The service that created the annotation\",\n              \"$ref\": \"#/definitions/service\"\n            }\n          }\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2373,
                  "startColumn": 65,
                  "endLine": 2373,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        \"annotator\": {\n          \"type\": \"object\",\n          \"title\": \"Annotator\",\n          \"description\": \"The organization, person, component, or service which created the textual content of the annotation.\",\n          \"oneOf\": [\n            {\n              \"required\": [\n",
                    "rendered": {
                      "text": "        \"annotator\": {\n          \"type\": \"object\",\n          \"title\": \"Annotator\",\n          \"description\": \"The organization, person, component, or service which created the textual content of the annotation.\",\n          \"oneOf\": [\n            {\n              \"required\": [\n",
                      "markdown": "`        \"annotator\": {\n          \"type\": \"object\",\n          \"title\": \"Annotator\",\n          \"description\": \"The organization, person, component, or service which created the textual content of the annotation.\",\n          \"oneOf\": [\n            {\n              \"required\": [\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2265,
                  "startColumn": 57,
                  "endLine": 2265,
                  "endColumn": 66,
                  "snippet": {
                    "text": "                  }\n                ],\n                \"title\": \"Reference\",\n                \"description\": \"References a component or service by the objects bom-ref\"\n              },\n              \"versions\": {\n                \"type\": \"array\",\n",
                    "rendered": {
                      "text": "                  }\n                ],\n                \"title\": \"Reference\",\n                \"description\": \"References a component or service by the objects bom-ref\"\n              },\n              \"versions\": {\n                \"type\": \"array\",\n",
                      "markdown": "`                  }\n                ],\n                \"title\": \"Reference\",\n                \"description\": \"References a component or service by the objects bom-ref\"\n              },\n              \"versions\": {\n                \"type\": \"array\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2239,
                  "startColumn": 42,
                  "endLine": 2239,
                  "endColumn": 48,
                  "snippet": {
                    "text": "              \"type\": \"string\",\n              \"format\": \"date-time\",\n              \"title\": \"Last Updated\",\n              \"description\": \"The date and time (timestamp) when the analysis was last updated.\"\n            }\n          }\n        },\n",
                    "rendered": {
                      "text": "              \"type\": \"string\",\n              \"format\": \"date-time\",\n              \"title\": \"Last Updated\",\n              \"description\": \"The date and time (timestamp) when the analysis was last updated.\"\n            }\n          }\n        },\n",
                      "markdown": "`              \"type\": \"string\",\n              \"format\": \"date-time\",\n              \"title\": \"Last Updated\",\n              \"description\": \"The date and time (timestamp) when the analysis was last updated.\"\n            }\n          }\n        },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2233,
                  "startColumn": 42,
                  "endLine": 2233,
                  "endColumn": 48,
                  "snippet": {
                    "text": "              \"type\": \"string\",\n              \"format\": \"date-time\",\n              \"title\": \"First Issued\",\n              \"description\": \"The date and time (timestamp) when the analysis was first issued.\"\n            },\n            \"lastUpdated\": {\n              \"type\": \"string\",\n",
                    "rendered": {
                      "text": "              \"type\": \"string\",\n              \"format\": \"date-time\",\n              \"title\": \"First Issued\",\n              \"description\": \"The date and time (timestamp) when the analysis was first issued.\"\n            },\n            \"lastUpdated\": {\n              \"type\": \"string\",\n",
                      "markdown": "`              \"type\": \"string\",\n              \"format\": \"date-time\",\n              \"title\": \"First Issued\",\n              \"description\": \"The date and time (timestamp) when the analysis was first issued.\"\n            },\n            \"lastUpdated\": {\n              \"type\": \"string\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2227,
                  "startColumn": 212,
                  "endLine": 2227,
                  "endColumn": 221,
                  "snippet": {
                    "text": "            \"detail\": {\n              \"type\": \"string\",\n              \"title\": \"Detail\",\n              \"description\": \"Detailed description of the impact including methods used during assessment. If a vulnerability is not exploitable, this field should include specific details on why the component or service is not impacted by this vulnerability.\"\n            },\n            \"firstIssued\": {\n              \"type\": \"string\",\n",
                    "rendered": {
                      "text": "            \"detail\": {\n              \"type\": \"string\",\n              \"title\": \"Detail\",\n              \"description\": \"Detailed description of the impact including methods used during assessment. If a vulnerability is not exploitable, this field should include specific details on why the component or service is not impacted by this vulnerability.\"\n            },\n            \"firstIssued\": {\n              \"type\": \"string\",\n",
                      "markdown": "`            \"detail\": {\n              \"type\": \"string\",\n              \"title\": \"Detail\",\n              \"description\": \"Detailed description of the impact including methods used during assessment. If a vulnerability is not exploitable, this field should include specific details on why the component or service is not impacted by this vulnerability.\"\n            },\n            \"firstIssued\": {\n              \"type\": \"string\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2139,
                  "startColumn": 38,
                  "endLine": 2139,
                  "endColumn": 44,
                  "snippet": {
                    "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Rejected\",\n          \"description\": \"The date and time (timestamp) when the vulnerability record was rejected (if applicable).\"\n        },\n        \"credits\": {\n          \"type\": \"object\",\n",
                    "rendered": {
                      "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Rejected\",\n          \"description\": \"The date and time (timestamp) when the vulnerability record was rejected (if applicable).\"\n        },\n        \"credits\": {\n          \"type\": \"object\",\n",
                      "markdown": "`          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Rejected\",\n          \"description\": \"The date and time (timestamp) when the vulnerability record was rejected (if applicable).\"\n        },\n        \"credits\": {\n          \"type\": \"object\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2133,
                  "startColumn": 38,
                  "endLine": 2133,
                  "endColumn": 44,
                  "snippet": {
                    "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Updated\",\n          \"description\": \"The date and time (timestamp) when the vulnerability record was last updated.\"\n        },\n        \"rejected\": {\n          \"type\": \"string\",\n",
                    "rendered": {
                      "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Updated\",\n          \"description\": \"The date and time (timestamp) when the vulnerability record was last updated.\"\n        },\n        \"rejected\": {\n          \"type\": \"string\",\n",
                      "markdown": "`          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Updated\",\n          \"description\": \"The date and time (timestamp) when the vulnerability record was last updated.\"\n        },\n        \"rejected\": {\n          \"type\": \"string\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2127,
                  "startColumn": 38,
                  "endLine": 2127,
                  "endColumn": 44,
                  "snippet": {
                    "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Published\",\n          \"description\": \"The date and time (timestamp) when the vulnerability record was first published.\"\n        },\n        \"updated\": {\n          \"type\": \"string\",\n",
                    "rendered": {
                      "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Published\",\n          \"description\": \"The date and time (timestamp) when the vulnerability record was first published.\"\n        },\n        \"updated\": {\n          \"type\": \"string\",\n",
                      "markdown": "`          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Published\",\n          \"description\": \"The date and time (timestamp) when the vulnerability record was first published.\"\n        },\n        \"updated\": {\n          \"type\": \"string\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 2121,
                  "startColumn": 38,
                  "endLine": 2121,
                  "endColumn": 44,
                  "snippet": {
                    "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Created\",\n          \"description\": \"The date and time (timestamp) when the vulnerability record was created in the vulnerability database.\"\n        },\n        \"published\": {\n          \"type\": \"string\",\n",
                    "rendered": {
                      "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Created\",\n          \"description\": \"The date and time (timestamp) when the vulnerability record was created in the vulnerability database.\"\n        },\n        \"published\": {\n          \"type\": \"string\",\n",
                      "markdown": "`          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Created\",\n          \"description\": \"The date and time (timestamp) when the vulnerability record was created in the vulnerability database.\"\n        },\n        \"published\": {\n          \"type\": \"string\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1998,
                  "startColumn": 58,
                  "endLine": 1998,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    \"vulnerability\": {\n      \"type\": \"object\",\n      \"title\": \"Vulnerability\",\n      \"description\": \"Defines a weakness in a component or service that could be exploited or triggered by a threat source.\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"bom-ref\": {\n",
                    "rendered": {
                      "text": "    \"vulnerability\": {\n      \"type\": \"object\",\n      \"title\": \"Vulnerability\",\n      \"description\": \"Defines a weakness in a component or service that could be exploited or triggered by a threat source.\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"bom-ref\": {\n",
                      "markdown": "`    \"vulnerability\": {\n      \"type\": \"object\",\n      \"title\": \"Vulnerability\",\n      \"description\": \"Defines a weakness in a component or service that could be exploited or triggered by a threat source.\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"bom-ref\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1907,
                  "startColumn": 705,
                  "endLine": 1907,
                  "endColumn": 714,
                  "snippet": {
                    "text": "_ = the vulnerability may be directly or indirectly exploitable. \\n* __in\\\\_triage__ = the vulnerability is being investigated. \\n* __false\\\\_positive__ = the vulnerability is not specific to the component or service and was falsely identified or associated. \\n* __not\\\\_affected__ = the component or service is not affected by the vulnerability. Justification should be specified for all not_affected cases.\",\n      \"enum\": [\n        \"resolved\",\n        \"resolved_with_pedigree\",\n        \"exploitable\",\n        \"in_triage\",\n        \"false_positive\",\n        \"not_affected\"\n      ]\n    },\n    \"impactAnalysisJ",
                    "rendered": {
                      "text": "_ = the vulnerability may be directly or indirectly exploitable. \\n* __in\\\\_triage__ = the vulnerability is being investigated. \\n* __false\\\\_positive__ = the vulnerability is not specific to the component or service and was falsely identified or associated. \\n* __not\\\\_affected__ = the component or service is not affected by the vulnerability. Justification should be specified for all not_affected cases.\",\n      \"enum\": [\n        \"resolved\",\n        \"resolved_with_pedigree\",\n        \"exploitable\",\n        \"in_triage\",\n        \"false_positive\",\n        \"not_affected\"\n      ]\n    },\n    \"impactAnalysisJ",
                      "markdown": "`_ = the vulnerability may be directly or indirectly exploitable. \\n* __in\\\\_triage__ = the vulnerability is being investigated. \\n* __false\\\\_positive__ = the vulnerability is not specific to the component or service and was falsely identified or associated. \\n* __not\\\\_affected__ = the component or service is not affected by the vulnerability. Justification should be specified for all not_affected cases.\",\n      \"enum\": [\n        \"resolved\",\n        \"resolved_with_pedigree\",\n        \"exploitable\",\n        \"in_triage\",\n        \"false_positive\",\n        \"not_affected\"\n      ]\n    },\n    \"impactAnalysisJ`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1907,
                  "startColumn": 613,
                  "endLine": 1907,
                  "endColumn": 622,
                  "snippet": {
                    "text": " components pedigree containing verifiable commit history and/or diff(s). \\n* __exploitable__ = the vulnerability may be directly or indirectly exploitable. \\n* __in\\\\_triage__ = the vulnerability is being investigated. \\n* __false\\\\_positive__ = the vulnerability is not specific to the component or service and was falsely identified or associated. \\n* __not\\\\_affected__ = the component or service is not affected by the vulnerability. Justification should be specified for all not_affected cases.\",\n      \"enum\": [\n        \"resolved\",\n        \"resolved_with_pedigree\",\n        \"exploitable\",\n        \"in_t",
                    "rendered": {
                      "text": " components pedigree containing verifiable commit history and/or diff(s). \\n* __exploitable__ = the vulnerability may be directly or indirectly exploitable. \\n* __in\\\\_triage__ = the vulnerability is being investigated. \\n* __false\\\\_positive__ = the vulnerability is not specific to the component or service and was falsely identified or associated. \\n* __not\\\\_affected__ = the component or service is not affected by the vulnerability. Justification should be specified for all not_affected cases.\",\n      \"enum\": [\n        \"resolved\",\n        \"resolved_with_pedigree\",\n        \"exploitable\",\n        \"in_t",
                      "markdown": "` components pedigree containing verifiable commit history and/or diff(s). \\n* __exploitable__ = the vulnerability may be directly or indirectly exploitable. \\n* __in\\\\_triage__ = the vulnerability is being investigated. \\n* __false\\\\_positive__ = the vulnerability is not specific to the component or service and was falsely identified or associated. \\n* __not\\\\_affected__ = the component or service is not affected by the vulnerability. Justification should be specified for all not_affected cases.\",\n      \"enum\": [\n        \"resolved\",\n        \"resolved_with_pedigree\",\n        \"exploitable\",\n        \"in_t`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1812,
                  "startColumn": 38,
                  "endLine": 1812,
                  "endColumn": 44,
                  "snippet": {
                    "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Timestamp\",\n          \"description\": \"The date and time (timestamp) when the release note was created.\"\n        },\n        \"aliases\": {\n          \"type\": \"array\",\n",
                    "rendered": {
                      "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Timestamp\",\n          \"description\": \"The date and time (timestamp) when the release note was created.\"\n        },\n        \"aliases\": {\n          \"type\": \"array\",\n",
                      "markdown": "`          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Timestamp\",\n          \"description\": \"The date and time (timestamp) when the release note was created.\"\n        },\n        \"aliases\": {\n          \"type\": \"array\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1337,
                  "startColumn": 185,
                  "endLine": 1337,
                  "endColumn": 194,
                  "snippet": {
                    "text": "          \"items\": {\"$ref\": \"#/definitions/service\"},\n          \"uniqueItems\": true,\n          \"title\": \"Services\",\n          \"description\": \"A list of services included or deployed behind the parent service. This is not a dependency tree. It provides a way to specify a hierarchical representation of service assemblies.\"\n        },\n        \"releaseNotes\": {\n          \"$ref\": \"#/definitions/releaseNotes\",\n",
                    "rendered": {
                      "text": "          \"items\": {\"$ref\": \"#/definitions/service\"},\n          \"uniqueItems\": true,\n          \"title\": \"Services\",\n          \"description\": \"A list of services included or deployed behind the parent service. This is not a dependency tree. It provides a way to specify a hierarchical representation of service assemblies.\"\n        },\n        \"releaseNotes\": {\n          \"$ref\": \"#/definitions/releaseNotes\",\n",
                      "markdown": "`          \"items\": {\"$ref\": \"#/definitions/service\"},\n          \"uniqueItems\": true,\n          \"title\": \"Services\",\n          \"description\": \"A list of services included or deployed behind the parent service. This is not a dependency tree. It provides a way to specify a hierarchical representation of service assemblies.\"\n        },\n        \"releaseNotes\": {\n          \"$ref\": \"#/definitions/releaseNotes\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1314,
                  "startColumn": 56,
                  "endLine": 1314,
                  "endColumn": 65,
                  "snippet": {
                    "text": "        \"trustZone\": {\n          \"type\": \"string\",\n          \"title\": \"Trust Zone\",\n          \"description\": \"The name of the trust zone the service resides in.\"\n        },\n        \"data\": {\n          \"type\": \"array\",\n",
                    "rendered": {
                      "text": "        \"trustZone\": {\n          \"type\": \"string\",\n          \"title\": \"Trust Zone\",\n          \"description\": \"The name of the trust zone the service resides in.\"\n        },\n        \"data\": {\n          \"type\": \"array\",\n",
                      "markdown": "`        \"trustZone\": {\n          \"type\": \"string\",\n          \"title\": \"Trust Zone\",\n          \"description\": \"The name of the trust zone the service resides in.\"\n        },\n        \"data\": {\n          \"type\": \"array\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1309,
                  "startColumn": 66,
                  "endLine": 1309,
                  "endColumn": 75,
                  "snippet": {
                    "text": "        \"x-trust-boundary\": {\n          \"type\": \"boolean\",\n          \"title\": \"Crosses Trust Boundary\",\n          \"description\": \"A boolean value indicating if use of the service crosses a trust zone or boundary. A value of true indicates that by using the service, a trust boundary is crossed. A value of false indicates that by using the service, a trust boundary is not crossed.\"\n        },\n        \"trustZone\": {\n          \"type\": \"string\",\n",
                    "rendered": {
                      "text": "        \"x-trust-boundary\": {\n          \"type\": \"boolean\",\n          \"title\": \"Crosses Trust Boundary\",\n          \"description\": \"A boolean value indicating if use of the service crosses a trust zone or boundary. A value of true indicates that by using the service, a trust boundary is crossed. A value of false indicates that by using the service, a trust boundary is not crossed.\"\n        },\n        \"trustZone\": {\n          \"type\": \"string\",\n",
                      "markdown": "`        \"x-trust-boundary\": {\n          \"type\": \"boolean\",\n          \"title\": \"Crosses Trust Boundary\",\n          \"description\": \"A boolean value indicating if use of the service crosses a trust zone or boundary. A value of true indicates that by using the service, a trust boundary is crossed. A value of false indicates that by using the service, a trust boundary is not crossed.\"\n        },\n        \"trustZone\": {\n          \"type\": \"string\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1304,
                  "startColumn": 199,
                  "endLine": 1304,
                  "endColumn": 208,
                  "snippet": {
                    "text": "        \"authenticated\": {\n          \"type\": \"boolean\",\n          \"title\": \"Authentication Required\",\n          \"description\": \"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication.\"\n        },\n        \"x-trust-boundary\": {\n          \"type\": \"boolean\",\n",
                    "rendered": {
                      "text": "        \"authenticated\": {\n          \"type\": \"boolean\",\n          \"title\": \"Authentication Required\",\n          \"description\": \"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication.\"\n        },\n        \"x-trust-boundary\": {\n          \"type\": \"boolean\",\n",
                      "markdown": "`        \"authenticated\": {\n          \"type\": \"boolean\",\n          \"title\": \"Authentication Required\",\n          \"description\": \"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication.\"\n        },\n        \"x-trust-boundary\": {\n          \"type\": \"boolean\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1304,
                  "startColumn": 122,
                  "endLine": 1304,
                  "endColumn": 131,
                  "snippet": {
                    "text": "        \"authenticated\": {\n          \"type\": \"boolean\",\n          \"title\": \"Authentication Required\",\n          \"description\": \"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication.\"\n        },\n        \"x-trust-boundary\": {\n          \"type\": \"boolean\",\n",
                    "rendered": {
                      "text": "        \"authenticated\": {\n          \"type\": \"boolean\",\n          \"title\": \"Authentication Required\",\n          \"description\": \"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication.\"\n        },\n        \"x-trust-boundary\": {\n          \"type\": \"boolean\",\n",
                      "markdown": "`        \"authenticated\": {\n          \"type\": \"boolean\",\n          \"title\": \"Authentication Required\",\n          \"description\": \"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication.\"\n        },\n        \"x-trust-boundary\": {\n          \"type\": \"boolean\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1304,
                  "startColumn": 59,
                  "endLine": 1304,
                  "endColumn": 68,
                  "snippet": {
                    "text": "        \"authenticated\": {\n          \"type\": \"boolean\",\n          \"title\": \"Authentication Required\",\n          \"description\": \"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication.\"\n        },\n        \"x-trust-boundary\": {\n          \"type\": \"boolean\",\n",
                    "rendered": {
                      "text": "        \"authenticated\": {\n          \"type\": \"boolean\",\n          \"title\": \"Authentication Required\",\n          \"description\": \"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication.\"\n        },\n        \"x-trust-boundary\": {\n          \"type\": \"boolean\",\n",
                      "markdown": "`        \"authenticated\": {\n          \"type\": \"boolean\",\n          \"title\": \"Authentication Required\",\n          \"description\": \"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication.\"\n        },\n        \"x-trust-boundary\": {\n          \"type\": \"boolean\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1283,
                  "startColumn": 29,
                  "endLine": 1283,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        \"version\": {\n          \"type\": \"string\",\n          \"title\": \"Service Version\",\n          \"description\": \"The service version.\",\n          \"examples\": [\"1.0.0\"]\n        },\n        \"description\": {\n",
                    "rendered": {
                      "text": "        \"version\": {\n          \"type\": \"string\",\n          \"title\": \"Service Version\",\n          \"description\": \"The service version.\",\n          \"examples\": [\"1.0.0\"]\n        },\n        \"description\": {\n",
                      "markdown": "`        \"version\": {\n          \"type\": \"string\",\n          \"title\": \"Service Version\",\n          \"description\": \"The service version.\",\n          \"examples\": [\"1.0.0\"]\n        },\n        \"description\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1271,
                  "startColumn": 158,
                  "endLine": 1271,
                  "endColumn": 167,
                  "snippet": {
                    "text": "        \"group\": {\n          \"type\": \"string\",\n          \"title\": \"Service Group\",\n          \"description\": \"The grouping name, namespace, or identifier. This will often be a shortened, single name of the company or project that produced the service or domain name. Whitespace and special characters should be avoided.\",\n          \"examples\": [\"com.acme\"]\n        },\n        \"name\": {\n",
                    "rendered": {
                      "text": "        \"group\": {\n          \"type\": \"string\",\n          \"title\": \"Service Group\",\n          \"description\": \"The grouping name, namespace, or identifier. This will often be a shortened, single name of the company or project that produced the service or domain name. Whitespace and special characters should be avoided.\",\n          \"examples\": [\"com.acme\"]\n        },\n        \"name\": {\n",
                      "markdown": "`        \"group\": {\n          \"type\": \"string\",\n          \"title\": \"Service Group\",\n          \"description\": \"The grouping name, namespace, or identifier. This will often be a shortened, single name of the company or project that produced the service or domain name. Whitespace and special characters should be avoided.\",\n          \"examples\": [\"com.acme\"]\n        },\n        \"name\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1261,
                  "startColumn": 83,
                  "endLine": 1261,
                  "endColumn": 92,
                  "snippet": {
                    "text": "        \"bom-ref\": {\n          \"$ref\": \"#/definitions/refType\",\n          \"title\": \"BOM Reference\",\n          \"description\": \"An optional identifier which can be used to reference the service elsewhere in the BOM. Every bom-ref MUST be unique within the BOM.\"\n        },\n        \"provider\": {\n          \"title\": \"Provider\",\n",
                    "rendered": {
                      "text": "        \"bom-ref\": {\n          \"$ref\": \"#/definitions/refType\",\n          \"title\": \"BOM Reference\",\n          \"description\": \"An optional identifier which can be used to reference the service elsewhere in the BOM. Every bom-ref MUST be unique within the BOM.\"\n        },\n        \"provider\": {\n          \"title\": \"Provider\",\n",
                      "markdown": "`        \"bom-ref\": {\n          \"$ref\": \"#/definitions/refType\",\n          \"title\": \"BOM Reference\",\n          \"description\": \"An optional identifier which can be used to reference the service elsewhere in the BOM. Every bom-ref MUST be unique within the BOM.\"\n        },\n        \"provider\": {\n          \"title\": \"Provider\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1237,
                  "startColumn": 51,
                  "endLine": 1237,
                  "endColumn": 60,
                  "snippet": {
                    "text": "        \"ref\": {\n          \"$ref\": \"#/definitions/refLinkType\",\n          \"title\": \"Reference\",\n          \"description\": \"References a component or service by its bom-ref attribute\"\n        },\n        \"dependsOn\": {\n          \"type\": \"array\",\n",
                    "rendered": {
                      "text": "        \"ref\": {\n          \"$ref\": \"#/definitions/refLinkType\",\n          \"title\": \"Reference\",\n          \"description\": \"References a component or service by its bom-ref attribute\"\n        },\n        \"dependsOn\": {\n          \"type\": \"array\",\n",
                      "markdown": "`        \"ref\": {\n          \"$ref\": \"#/definitions/refLinkType\",\n          \"title\": \"Reference\",\n          \"description\": \"References a component or service by its bom-ref attribute\"\n        },\n        \"dependsOn\": {\n          \"type\": \"array\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 1174,
                  "startColumn": 2194,
                  "endLine": 1174,
                  "endColumn": 2203,
                  "snippet": {
                    "text": "a computer system or application, such as problems, errors, or information on current operations\\n* __configuration__ = Parameters or settings that may be used by other components or services\\n* __evidence__ = Information used to substantiate a claim\\n* __formulation__ = Describes how a component or service was manufactured or deployed\\n* __attestation__ = Human or machine-readable statements containing facts, evidence, or testimony\\n* __threat-model__ = An enumeration of identified weaknesses, threats, and countermeasures, dataflow diagram (DFD), attack tree, and other supporting documentation in huma",
                    "rendered": {
                      "text": "a computer system or application, such as problems, errors, or information on current operations\\n* __configuration__ = Parameters or settings that may be used by other components or services\\n* __evidence__ = Information used to substantiate a claim\\n* __formulation__ = Describes how a component or service was manufactured or deployed\\n* __attestation__ = Human or machine-readable statements containing facts, evidence, or testimony\\n* __threat-model__ = An enumeration of identified weaknesses, threats, and countermeasures, dataflow diagram (DFD), attack tree, and other supporting documentation in huma",
                      "markdown": "`a computer system or application, such as problems, errors, or information on current operations\\n* __configuration__ = Parameters or settings that may be used by other components or services\\n* __evidence__ = Information used to substantiate a claim\\n* __formulation__ = Describes how a component or service was manufactured or deployed\\n* __attestation__ = Human or machine-readable statements containing facts, evidence, or testimony\\n* __threat-model__ = An enumeration of identified weaknesses, threats, and countermeasures, dataflow diagram (DFD), attack tree, and other supporting documentation in huma`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 974,
                  "startColumn": 152,
                  "endLine": 974,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        \"uid\": {\n          \"type\": \"string\",\n          \"title\": \"UID\",\n          \"description\": \"A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes.\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n",
                    "rendered": {
                      "text": "        \"uid\": {\n          \"type\": \"string\",\n          \"title\": \"UID\",\n          \"description\": \"A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes.\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n",
                      "markdown": "`        \"uid\": {\n          \"type\": \"string\",\n          \"title\": \"UID\",\n          \"description\": \"A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes.\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 872,
                  "startColumn": 1791,
                  "endLine": 872,
                  "endColumn": 1800,
                  "snippet": {
                    "text": "licensee can use a copy of the software indefinitely.\\n* __processor-points__ = A license where each installation consumes points per processor.\\n* __subscription__ = A license where the licensee pays a fee to use the software or service.\\n* __user__ = A license that grants access to the software or service by a specified number of users.\\n* __other__ = Another license type.\\n\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"academic\",\n                  \"appliance\",\n                  \"client-access\",\n                  \"concurrent-user\",\n         ",
                    "rendered": {
                      "text": "licensee can use a copy of the software indefinitely.\\n* __processor-points__ = A license where each installation consumes points per processor.\\n* __subscription__ = A license where the licensee pays a fee to use the software or service.\\n* __user__ = A license that grants access to the software or service by a specified number of users.\\n* __other__ = Another license type.\\n\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"academic\",\n                  \"appliance\",\n                  \"client-access\",\n                  \"concurrent-user\",\n         ",
                      "markdown": "`licensee can use a copy of the software indefinitely.\\n* __processor-points__ = A license where each installation consumes points per processor.\\n* __subscription__ = A license where the licensee pays a fee to use the software or service.\\n* __user__ = A license that grants access to the software or service by a specified number of users.\\n* __other__ = Another license type.\\n\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"academic\",\n                  \"appliance\",\n                  \"client-access\",\n                  \"concurrent-user\",\n         `"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 528,
                  "startColumn": 428,
                  "endLine": 528,
                  "endColumn": 434,
                  "snippet": {
                    "text": "escribe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from which Component B is derived from.\",\n              \"items\": {\"$ref\": \"#/definitions/component\"}\n            },\n            \"descendants\": {\n              \"type\": \"array\",\n              \"title\": \"Descendants\",\n              ",
                    "rendered": {
                      "text": "escribe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from which Component B is derived from.\",\n              \"items\": {\"$ref\": \"#/definitions/component\"}\n            },\n            \"descendants\": {\n              \"type\": \"array\",\n              \"title\": \"Descendants\",\n              ",
                      "markdown": "`escribe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from which Component B is derived from.\",\n              \"items\": {\"$ref\": \"#/definitions/component\"}\n            },\n            \"descendants\": {\n              \"type\": \"array\",\n              \"title\": \"Descendants\",\n              `"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 528,
                  "startColumn": 209,
                  "endLine": 528,
                  "endColumn": 215,
                  "snippet": {
                    "text": "         \"ancestors\": {\n              \"type\": \"array\",\n              \"title\": \"Ancestors\",\n              \"description\": \"Describes zero or more components in which a component is derived from. This is commonly used to describe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from whic",
                    "rendered": {
                      "text": "         \"ancestors\": {\n              \"type\": \"array\",\n              \"title\": \"Ancestors\",\n              \"description\": \"Describes zero or more components in which a component is derived from. This is commonly used to describe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from whic",
                      "markdown": "`         \"ancestors\": {\n              \"type\": \"array\",\n              \"title\": \"Ancestors\",\n              \"description\": \"Describes zero or more components in which a component is derived from. This is commonly used to describe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from whic`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 149,
                  "endLine": 289,
                  "endColumn": 158,
                  "snippet": {
                    "text": "    \"tool\": {\n      \"type\": \"object\",\n      \"title\": \"Tool\",\n      \"description\": \"[Deprecated] - DO NOT USE. This will be removed in a future version. This will be removed in a future version. Use component or service instead. Information about the automated or manual tool used\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"vendor\": {\n",
                    "rendered": {
                      "text": "    \"tool\": {\n      \"type\": \"object\",\n      \"title\": \"Tool\",\n      \"description\": \"[Deprecated] - DO NOT USE. This will be removed in a future version. This will be removed in a future version. Use component or service instead. Information about the automated or manual tool used\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"vendor\": {\n",
                      "markdown": "`    \"tool\": {\n      \"type\": \"object\",\n      \"title\": \"Tool\",\n      \"description\": \"[Deprecated] - DO NOT USE. This will be removed in a future version. This will be removed in a future version. Use component or service instead. Information about the automated or manual tool used\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"vendor\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 731,
                  "endLine": 189,
                  "endColumn": 737,
                  "snippet": {
                    "text": "evelopment artifacts and manifests. The inventory may need to be resolved and retrieved prior to use.\\n* __build__ = BOM consisting of information obtained during a build process where component inventory is available for use. The precise versions of resolved components are usually available at this time as well as the provenance of where the components were retrieved from.\\n* __post-build__ = BOM consisting of information obtained after a build process has completed and the resulting components(s) are available for further analysis. Built components may exist as the result of a CI/CD process, may h",
                    "rendered": {
                      "text": "evelopment artifacts and manifests. The inventory may need to be resolved and retrieved prior to use.\\n* __build__ = BOM consisting of information obtained during a build process where component inventory is available for use. The precise versions of resolved components are usually available at this time as well as the provenance of where the components were retrieved from.\\n* __post-build__ = BOM consisting of information obtained after a build process has completed and the resulting components(s) are available for further analysis. Built components may exist as the result of a CI/CD process, may h",
                      "markdown": "`evelopment artifacts and manifests. The inventory may need to be resolved and retrieved prior to use.\\n* __build__ = BOM consisting of information obtained during a build process where component inventory is available for use. The precise versions of resolved components are usually available at this time as well as the provenance of where the components were retrieved from.\\n* __post-build__ = BOM consisting of information obtained after a build process has completed and the resulting components(s) are available for further analysis. Built components may exist as the result of a CI/CD process, may h`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 38,
                  "endLine": 171,
                  "endColumn": 44,
                  "snippet": {
                    "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Timestamp\",\n          \"description\": \"The date and time (timestamp) when the BOM was created.\"\n        },\n        \"lifecycles\": {\n          \"type\": \"array\",\n",
                    "rendered": {
                      "text": "          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Timestamp\",\n          \"description\": \"The date and time (timestamp) when the BOM was created.\"\n        },\n        \"lifecycles\": {\n          \"type\": \"array\",\n",
                      "markdown": "`          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"title\": \"Timestamp\",\n          \"description\": \"The date and time (timestamp) when the BOM was created.\"\n        },\n        \"lifecycles\": {\n          \"type\": \"array\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.json"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 50,
                  "endLine": 107,
                  "endColumn": 59,
                  "snippet": {
                    "text": "      \"items\": {\"$ref\": \"#/definitions/formula\"},\n      \"uniqueItems\": true,\n      \"title\": \"Formulation\",\n      \"description\": \"Describes how a component or service was manufactured or deployed. This is achieved through the use of formulas, workflows, tasks, and steps, which declare the precise steps to reproduce along with the observed formulas describing the steps which transpired in the manufacturing process.\"\n    },\n    \"properties\": {\n      \"type\": \"array\",\n",
                    "rendered": {
                      "text": "      \"items\": {\"$ref\": \"#/definitions/formula\"},\n      \"uniqueItems\": true,\n      \"title\": \"Formulation\",\n      \"description\": \"Describes how a component or service was manufactured or deployed. This is achieved through the use of formulas, workflows, tasks, and steps, which declare the precise steps to reproduce along with the observed formulas describing the steps which transpired in the manufacturing process.\"\n    },\n    \"properties\": {\n      \"type\": \"array\",\n",
                      "markdown": "`      \"items\": {\"$ref\": \"#/definitions/formula\"},\n      \"uniqueItems\": true,\n      \"title\": \"Formulation\",\n      \"description\": \"Describes how a component or service was manufactured or deployed. This is achieved through the use of formulas, workflows, tasks, and steps, which declare the precise steps to reproduce along with the observed formulas describing the steps which transpired in the manufacturing process.\"\n    },\n    \"properties\": {\n      \"type\": \"array\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/go-mod-tidy-check.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -eu\n\nORIGINAL_STATE_DIR=$(mktemp -d \"TEMP-original-state-XXXXXXXXX\")\nTIDY_STATE_DIR=$(mktemp -d \"TEMP-tidy-state-XXXXXXXXX\")\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -eu\n\nORIGINAL_STATE_DIR=$(mktemp -d \"TEMP-original-state-XXXXXXXXX\")\nTIDY_STATE_DIR=$(mktemp -d \"TEMP-tidy-state-XXXXXXXXX\")\n",
                      "markdown": "`#!/usr/bin/env bash\nset -eu\n\nORIGINAL_STATE_DIR=$(mktemp -d \"TEMP-original-state-XXXXXXXXX\")\nTIDY_STATE_DIR=$(mktemp -d \"TEMP-tidy-state-XXXXXXXXX\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/go-mod-tidy-check.sh"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 31,
                  "endLine": 18,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\nset +e\n\n# detect difference between the git HEAD state and the go mod tidy state\nDIFF_MOD=$(diff -u \"${ORIGINAL_STATE_DIR}/go.mod\" \"${TIDY_STATE_DIR}/go.mod\")\nDIFF_SUM=$(diff -u \"${ORIGINAL_STATE_DIR}/go.sum\" \"${TIDY_STATE_DIR}/go.sum\")\n\n",
                    "rendered": {
                      "text": "\nset +e\n\n# detect difference between the git HEAD state and the go mod tidy state\nDIFF_MOD=$(diff -u \"${ORIGINAL_STATE_DIR}/go.mod\" \"${TIDY_STATE_DIR}/go.mod\")\nDIFF_SUM=$(diff -u \"${ORIGINAL_STATE_DIR}/go.sum\" \"${TIDY_STATE_DIR}/go.sum\")\n\n",
                      "markdown": "`\nset +e\n\n# detect difference between the git HEAD state and the go mod tidy state\nDIFF_MOD=$(diff -u \"${ORIGINAL_STATE_DIR}/go.mod\" \"${TIDY_STATE_DIR}/go.mod\")\nDIFF_SUM=$(diff -u \"${ORIGINAL_STATE_DIR}/go.sum\" \"${TIDY_STATE_DIR}/go.sum\")\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/go-mod-tidy-check.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 11,
                  "endLine": 14,
                  "endColumn": 3,
                  "snippet": {
                    "text": "cp go.mod go.sum \"${ORIGINAL_STATE_DIR}\"\n\n# capturing state of go.mod and go.sum after running go mod tidy...\ngo mod tidy\ncp go.mod go.sum \"${TIDY_STATE_DIR}\"\n\nset +e\n\n",
                    "rendered": {
                      "text": "cp go.mod go.sum \"${ORIGINAL_STATE_DIR}\"\n\n# capturing state of go.mod and go.sum after running go mod tidy...\ngo mod tidy\ncp go.mod go.sum \"${TIDY_STATE_DIR}\"\n\nset +e\n\n",
                      "markdown": "`cp go.mod go.sum \"${ORIGINAL_STATE_DIR}\"\n\n# capturing state of go.mod and go.sum after running go mod tidy...\ngo mod tidy\ncp go.mod go.sum \"${TIDY_STATE_DIR}\"\n\nset +e\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/go-mod-tidy-check.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\ntrap \"cp -p ${ORIGINAL_STATE_DIR}/* ./ && git update-index -q --refresh && rm -fR ${ORIGINAL_STATE_DIR} ${TIDY_STATE_DIR}\" EXIT\n\n# capturing original state of files...\ncp go.mod go.sum \"${ORIGINAL_STATE_DIR}\"\n\n# capturing state of go.mod and go.sum after running go mod tidy...\ngo mod tidy\n",
                    "rendered": {
                      "text": "\ntrap \"cp -p ${ORIGINAL_STATE_DIR}/* ./ && git update-index -q --refresh && rm -fR ${ORIGINAL_STATE_DIR} ${TIDY_STATE_DIR}\" EXIT\n\n# capturing original state of files...\ncp go.mod go.sum \"${ORIGINAL_STATE_DIR}\"\n\n# capturing state of go.mod and go.sum after running go mod tidy...\ngo mod tidy\n",
                      "markdown": "`\ntrap \"cp -p ${ORIGINAL_STATE_DIR}/* ./ && git update-index -q --refresh && rm -fR ${ORIGINAL_STATE_DIR} ${TIDY_STATE_DIR}\" EXIT\n\n# capturing original state of files...\ncp go.mod go.sum \"${ORIGINAL_STATE_DIR}\"\n\n# capturing state of go.mod and go.sum after running go mod tidy...\ngo mod tidy\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/go-mod-tidy-check.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 41,
                  "endLine": 7,
                  "endColumn": 46,
                  "snippet": {
                    "text": "ORIGINAL_STATE_DIR=$(mktemp -d \"TEMP-original-state-XXXXXXXXX\")\nTIDY_STATE_DIR=$(mktemp -d \"TEMP-tidy-state-XXXXXXXXX\")\n\ntrap \"cp -p ${ORIGINAL_STATE_DIR}/* ./ && git update-index -q --refresh && rm -fR ${ORIGINAL_STATE_DIR} ${TIDY_STATE_DIR}\" EXIT\n\n# capturing original state of files...\ncp go.mod go.sum \"${ORIGINAL_STATE_DIR}\"\n",
                    "rendered": {
                      "text": "ORIGINAL_STATE_DIR=$(mktemp -d \"TEMP-original-state-XXXXXXXXX\")\nTIDY_STATE_DIR=$(mktemp -d \"TEMP-tidy-state-XXXXXXXXX\")\n\ntrap \"cp -p ${ORIGINAL_STATE_DIR}/* ./ && git update-index -q --refresh && rm -fR ${ORIGINAL_STATE_DIR} ${TIDY_STATE_DIR}\" EXIT\n\n# capturing original state of files...\ncp go.mod go.sum \"${ORIGINAL_STATE_DIR}\"\n",
                      "markdown": "`ORIGINAL_STATE_DIR=$(mktemp -d \"TEMP-original-state-XXXXXXXXX\")\nTIDY_STATE_DIR=$(mktemp -d \"TEMP-tidy-state-XXXXXXXXX\")\n\ntrap \"cp -p ${ORIGINAL_STATE_DIR}/* ./ && git update-index -q --refresh && rm -fR ${ORIGINAL_STATE_DIR} ${TIDY_STATE_DIR}\" EXIT\n\n# capturing original state of files...\ncp go.mod go.sum \"${ORIGINAL_STATE_DIR}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/go-mod-tidy-check.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -eu\n\nORIGINAL_STATE_DIR=$(mktemp -d \"TEMP-original-state-XXXXXXXXX\")\nTIDY_STATE_DIR=$(mktemp -d \"TEMP-tidy-state-XXXXXXXXX\")\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -eu\n\nORIGINAL_STATE_DIR=$(mktemp -d \"TEMP-original-state-XXXXXXXXX\")\nTIDY_STATE_DIR=$(mktemp -d \"TEMP-tidy-state-XXXXXXXXX\")\n",
                      "markdown": "`#!/usr/bin/env bash\nset -eu\n\nORIGINAL_STATE_DIR=$(mktemp -d \"TEMP-original-state-XXXXXXXXX\")\nTIDY_STATE_DIR=$(mktemp -d \"TEMP-tidy-state-XXXXXXXXX\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/internal/format/writer.go"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 22,
                  "endLine": 108,
                  "endColumn": 30,
                  "snippet": {
                    "text": "func newWriterDescription(f Format, p string, cfg PresentationConfig) scanResultWriterDescription {\n\texpandedPath, err := homedir.Expand(p)\n\tif err != nil {\n\t\tlog.Warnf(\"could not expand given writer output path=%q: %w\", p, err)\n\t\t// ignore errors\n\t\texpandedPath = p\n\t}\n",
                    "rendered": {
                      "text": "func newWriterDescription(f Format, p string, cfg PresentationConfig) scanResultWriterDescription {\n\texpandedPath, err := homedir.Expand(p)\n\tif err != nil {\n\t\tlog.Warnf(\"could not expand given writer output path=%q: %w\", p, err)\n\t\t// ignore errors\n\t\texpandedPath = p\n\t}\n",
                      "markdown": "`func newWriterDescription(f Format, p string, cfg PresentationConfig) scanResultWriterDescription {\n\texpandedPath, err := homedir.Expand(p)\n\tif err != nil {\n\t\tlog.Warnf(\"could not expand given writer output path=%q: %w\", p, err)\n\t\t// ignore errors\n\t\texpandedPath = p\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/internal/format/writer.go"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 22,
                  "endLine": 108,
                  "endColumn": 30,
                  "snippet": {
                    "text": "func newWriterDescription(f Format, p string, cfg PresentationConfig) scanResultWriterDescription {\n\texpandedPath, err := homedir.Expand(p)\n\tif err != nil {\n\t\tlog.Warnf(\"could not expand given writer output path=%q: %w\", p, err)\n\t\t// ignore errors\n\t\texpandedPath = p\n\t}\n",
                    "rendered": {
                      "text": "func newWriterDescription(f Format, p string, cfg PresentationConfig) scanResultWriterDescription {\n\texpandedPath, err := homedir.Expand(p)\n\tif err != nil {\n\t\tlog.Warnf(\"could not expand given writer output path=%q: %w\", p, err)\n\t\t// ignore errors\n\t\texpandedPath = p\n\t}\n",
                      "markdown": "`func newWriterDescription(f Format, p string, cfg PresentationConfig) scanResultWriterDescription {\n\texpandedPath, err := homedir.Expand(p)\n\tif err != nil {\n\t\tlog.Warnf(\"could not expand given writer output path=%q: %w\", p, err)\n\t\t// ignore errors\n\t\texpandedPath = p\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/internal/format/writer_test.go"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 34,
                  "endLine": 199,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t{\n\t\t\tname:     \"expand home dir\",\n\t\t\tpath:     \"~/place.txt\",\n\t\t\texpected: filepath.Join(homedir.Get(), \"place.txt\"),\n\t\t},\n\t\t{\n\t\t\tname:     \"passthrough other paths\",\n",
                    "rendered": {
                      "text": "\t\t{\n\t\t\tname:     \"expand home dir\",\n\t\t\tpath:     \"~/place.txt\",\n\t\t\texpected: filepath.Join(homedir.Get(), \"place.txt\"),\n\t\t},\n\t\t{\n\t\t\tname:     \"passthrough other paths\",\n",
                      "markdown": "`\t\t{\n\t\t\tname:     \"expand home dir\",\n\t\t\tpath:     \"~/place.txt\",\n\t\t\texpected: filepath.Join(homedir.Get(), \"place.txt\"),\n\t\t},\n\t\t{\n\t\t\tname:     \"passthrough other paths\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/internal/stringutil/color.go"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 8,
                  "snippet": {
                    "text": "\nconst (\n\tDefaultColor Color = iota + 30\n\tRed\n\tGreen\n\tYellow\n\tBlue\n\tMagenta\n",
                    "rendered": {
                      "text": "\nconst (\n\tDefaultColor Color = iota + 30\n\tRed\n\tGreen\n\tYellow\n\tBlue\n\tMagenta\n",
                      "markdown": "`\nconst (\n\tDefaultColor Color = iota + 30\n\tRed\n\tGreen\n\tYellow\n\tBlue\n\tMagenta\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.golangci.yaml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 6,
                  "endLine": 82,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#    - structcheck  # The owner seems to have abandoned the linter. Replaced by \"unused\".\n#    - testpackage\n#    - varcheck     # The owner seems to have abandoned the linter. Replaced by \"unused\".\n#    - wsl          # this doens't have an auto-fixer yet and is pretty noisy (https://github.com/bombsimon/wsl/issues/90)\n",
                    "rendered": {
                      "text": "#    - structcheck  # The owner seems to have abandoned the linter. Replaced by \"unused\".\n#    - testpackage\n#    - varcheck     # The owner seems to have abandoned the linter. Replaced by \"unused\".\n#    - wsl          # this doens't have an auto-fixer yet and is pretty noisy (https://github.com/bombsimon/wsl/issues/90)\n",
                      "markdown": "`#    - structcheck  # The owner seems to have abandoned the linter. Replaced by \"unused\".\n#    - testpackage\n#    - varcheck     # The owner seems to have abandoned the linter. Replaced by \"unused\".\n#    - wsl          # this doens't have an auto-fixer yet and is pretty noisy (https://github.com/bombsimon/wsl/issues/90)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/SECURITY.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 58,
                  "endLine": 23,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n<!-- Use this section to tell people how to report a vulnerability.\n\nTell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc. -->\n\n",
                    "rendered": {
                      "text": "\n<!-- Use this section to tell people how to report a vulnerability.\n\nTell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc. -->\n\n",
                      "markdown": "`\n<!-- Use this section to tell people how to report a vulnerability.\n\nTell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc. -->\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/SECURITY.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 31,
                  "endLine": 24,
                  "endColumn": 39,
                  "snippet": {
                    "text": "<!-- Use this section to tell people how to report a vulnerability.\n\nTell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc. -->\n\nTo report a security issue, please email\n",
                    "rendered": {
                      "text": "<!-- Use this section to tell people how to report a vulnerability.\n\nTell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc. -->\n\nTo report a security issue, please email\n",
                      "markdown": "`<!-- Use this section to tell people how to report a vulnerability.\n\nTell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc. -->\n\nTo report a security issue, please email\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/SECURITY.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 41,
                  "endLine": 23,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n<!-- Use this section to tell people how to report a vulnerability.\n\nTell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc. -->\n\n",
                    "rendered": {
                      "text": "\n<!-- Use this section to tell people how to report a vulnerability.\n\nTell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc. -->\n\n",
                      "markdown": "`\n<!-- Use this section to tell people how to report a vulnerability.\n\nTell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc. -->\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/differ/differ_test.go"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\"github.com/anchore/grype/grype/vulnerability\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for diff presenter\")\n\nfunc TestNewDiffer(t *testing.T) {\n\t//GIVEN\n",
                    "rendered": {
                      "text": "\t\"github.com/anchore/grype/grype/vulnerability\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for diff presenter\")\n\nfunc TestNewDiffer(t *testing.T) {\n\t//GIVEN\n",
                      "markdown": "`\t\"github.com/anchore/grype/grype/vulnerability\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for diff presenter\")\n\nfunc TestNewDiffer(t *testing.T) {\n\t//GIVEN\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/differ/differ_test.go"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 70,
                  "endLine": 18,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\t\"github.com/anchore/grype/grype/vulnerability\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for diff presenter\")\n\nfunc TestNewDiffer(t *testing.T) {\n\t//GIVEN\n",
                    "rendered": {
                      "text": "\t\"github.com/anchore/grype/grype/vulnerability\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for diff presenter\")\n\nfunc TestNewDiffer(t *testing.T) {\n\t//GIVEN\n",
                      "markdown": "`\t\"github.com/anchore/grype/grype/vulnerability\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for diff presenter\")\n\nfunc TestNewDiffer(t *testing.T) {\n\t//GIVEN\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/differ/differ.go"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 38,
                  "endLine": 188,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\tenc.SetEscapeHTML(false)\n\t\tenc.SetIndent(\"\", \" \")\n\t\tif err := enc.Encode(*diff); err != nil {\n\t\t\treturn fmt.Errorf(\"failed to encode diff information: %+v\", err)\n\t\t}\n\tdefault:\n\t\treturn fmt.Errorf(\"unsupported output format: %s\", outputFormat)\n",
                    "rendered": {
                      "text": "\t\tenc.SetEscapeHTML(false)\n\t\tenc.SetIndent(\"\", \" \")\n\t\tif err := enc.Encode(*diff); err != nil {\n\t\t\treturn fmt.Errorf(\"failed to encode diff information: %+v\", err)\n\t\t}\n\tdefault:\n\t\treturn fmt.Errorf(\"unsupported output format: %s\", outputFormat)\n",
                      "markdown": "`\t\tenc.SetEscapeHTML(false)\n\t\tenc.SetIndent(\"\", \" \")\n\t\tif err := enc.Encode(*diff); err != nil {\n\t\t\treturn fmt.Errorf(\"failed to encode diff information: %+v\", err)\n\t\t}\n\tdefault:\n\t\treturn fmt.Errorf(\"unsupported output format: %s\", outputFormat)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/differ/differ.go"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 3,
                  "endLine": 153,
                  "endColumn": 9,
                  "snippet": {
                    "text": "}\n\nfunc (d *Differ) Present(outputFormat string, diff *[]v5.Diff, output io.Writer) error {\n\tif diff == nil {\n\t\treturn nil\n\t}\n\n",
                    "rendered": {
                      "text": "}\n\nfunc (d *Differ) Present(outputFormat string, diff *[]v5.Diff, output io.Writer) error {\n\tif diff == nil {\n\t\treturn nil\n\t}\n\n",
                      "markdown": "`}\n\nfunc (d *Differ) Present(outputFormat string, diff *[]v5.Diff, output io.Writer) error {\n\tif diff == nil {\n\t\treturn nil\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/differ/differ.go"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 45,
                  "endLine": 152,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\treturn nil\n}\n\nfunc (d *Differ) Present(outputFormat string, diff *[]v5.Diff, output io.Writer) error {\n\tif diff == nil {\n\t\treturn nil\n\t}\n",
                    "rendered": {
                      "text": "\treturn nil\n}\n\nfunc (d *Differ) Present(outputFormat string, diff *[]v5.Diff, output io.Writer) error {\n\tif diff == nil {\n\t\treturn nil\n\t}\n",
                      "markdown": "`\treturn nil\n}\n\nfunc (d *Differ) Present(outputFormat string, diff *[]v5.Diff, output io.Writer) error {\n\tif diff == nil {\n\t\treturn nil\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/differ/differ.go"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 31,
                  "endLine": 89,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif listing == nil {\n\t\t\treturn fmt.Errorf(\"unable to find listing for url: %s\", filenameOrURL)\n\t\t}\n\n\t\tif err := download(curator, listing); err != nil {\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif listing == nil {\n\t\t\treturn fmt.Errorf(\"unable to find listing for url: %s\", filenameOrURL)\n\t\t}\n\n\t\tif err := download(curator, listing); err != nil {\n",
                      "markdown": "`\t\t}\n\n\t\tif listing == nil {\n\t\t\treturn fmt.Errorf(\"unable to find listing for url: %s\", filenameOrURL)\n\t\t}\n\n\t\tif err := download(curator, listing); err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/jvm_version_test.go"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 39,
                  "endLine": 115,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\t\texpected: \"8.0.0-rc1\",\n\t\t},\n\t\t{\n\t\t\tname:     \"invalid update format, no update keyword\",\n\t\t\tinput:    \"8.0-foo302\",\n\t\t\texpected: \"8.0-foo302\",\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\texpected: \"8.0.0-rc1\",\n\t\t},\n\t\t{\n\t\t\tname:     \"invalid update format, no update keyword\",\n\t\t\tinput:    \"8.0-foo302\",\n\t\t\texpected: \"8.0-foo302\",\n\t\t},\n",
                      "markdown": "`\t\t\texpected: \"8.0.0-rc1\",\n\t\t},\n\t\t{\n\t\t\tname:     \"invalid update format, no update keyword\",\n\t\t\tinput:    \"8.0-foo302\",\n\t\t\texpected: \"8.0-foo302\",\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/jvm_version_test.go"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 21,
                  "endLine": 115,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\texpected: \"8.0.0-rc1\",\n\t\t},\n\t\t{\n\t\t\tname:     \"invalid update format, no update keyword\",\n\t\t\tinput:    \"8.0-foo302\",\n\t\t\texpected: \"8.0-foo302\",\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\texpected: \"8.0.0-rc1\",\n\t\t},\n\t\t{\n\t\t\tname:     \"invalid update format, no update keyword\",\n\t\t\tinput:    \"8.0-foo302\",\n\t\t\texpected: \"8.0-foo302\",\n\t\t},\n",
                      "markdown": "`\t\t\texpected: \"8.0.0-rc1\",\n\t\t},\n\t\t{\n\t\t\tname:     \"invalid update format, no update keyword\",\n\t\t\tinput:    \"8.0-foo302\",\n\t\t\texpected: \"8.0-foo302\",\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/fuzzy_constraint.go"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 6,
                  "endLine": 139,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\tswitch {\n\t\tcase diff > 0: // ns1 has longer numeric part\n\t\t\tns2 = leftPad(ns2, diff)\n\t\tcase diff < 0: // ns2 has longer numeric part\n\t\t\tns1 = leftPad(ns1, -diff)\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\tswitch {\n\t\tcase diff > 0: // ns1 has longer numeric part\n\t\t\tns2 = leftPad(ns2, diff)\n\t\tcase diff < 0: // ns2 has longer numeric part\n\t\t\tns1 = leftPad(ns1, -diff)\n\t\t}\n\n",
                      "markdown": "`\t\tswitch {\n\t\tcase diff > 0: // ns1 has longer numeric part\n\t\t\tns2 = leftPad(ns2, diff)\n\t\tcase diff < 0: // ns2 has longer numeric part\n\t\t\tns1 = leftPad(ns1, -diff)\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/fuzzy_constraint.go"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 6,
                  "endLine": 137,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\tns2 := s2[:cmpTo2]\n\t\tdiff := num1 - num2\n\t\tswitch {\n\t\tcase diff > 0: // ns1 has longer numeric part\n\t\t\tns2 = leftPad(ns2, diff)\n\t\tcase diff < 0: // ns2 has longer numeric part\n\t\t\tns1 = leftPad(ns1, -diff)\n",
                    "rendered": {
                      "text": "\t\tns2 := s2[:cmpTo2]\n\t\tdiff := num1 - num2\n\t\tswitch {\n\t\tcase diff > 0: // ns1 has longer numeric part\n\t\t\tns2 = leftPad(ns2, diff)\n\t\tcase diff < 0: // ns2 has longer numeric part\n\t\t\tns1 = leftPad(ns1, -diff)\n",
                      "markdown": "`\t\tns2 := s2[:cmpTo2]\n\t\tdiff := num1 - num2\n\t\tswitch {\n\t\tcase diff > 0: // ns1 has longer numeric part\n\t\t\tns2 = leftPad(ns2, diff)\n\t\tcase diff < 0: // ns2 has longer numeric part\n\t\t\tns1 = leftPad(ns1, -diff)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/fuzzy_constraint.go"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 1,
                  "endLine": 135,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n\t\tns1 := s1[:cmpTo1]\n\t\tns2 := s2[:cmpTo2]\n\t\tdiff := num1 - num2\n\t\tswitch {\n\t\tcase diff > 0: // ns1 has longer numeric part\n\t\t\tns2 = leftPad(ns2, diff)\n",
                    "rendered": {
                      "text": "\n\t\tns1 := s1[:cmpTo1]\n\t\tns2 := s2[:cmpTo2]\n\t\tdiff := num1 - num2\n\t\tswitch {\n\t\tcase diff > 0: // ns1 has longer numeric part\n\t\t\tns2 = leftPad(ns2, diff)\n",
                      "markdown": "`\n\t\tns1 := s1[:cmpTo1]\n\t\tns2 := s2[:cmpTo2]\n\t\tdiff := num1 - num2\n\t\tswitch {\n\t\tcase diff > 0: // ns1 has longer numeric part\n\t\t\tns2 = leftPad(ns2, diff)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/version/fuzzy_constraint_test.go"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 31,
                  "endLine": 394,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\tvalid   bool\n\t}{\n\t\t{name: \"rc candidates are valid semver\", version: \"1.2.3-rc1\", valid: true},\n\t\t{name: \"rc candidates with no dash are valid semver\", version: \"1.2.3rc1\", valid: true},\n\t}\n\n\tfor _, test := range tests {\n",
                    "rendered": {
                      "text": "\t\tvalid   bool\n\t}{\n\t\t{name: \"rc candidates are valid semver\", version: \"1.2.3-rc1\", valid: true},\n\t\t{name: \"rc candidates with no dash are valid semver\", version: \"1.2.3rc1\", valid: true},\n\t}\n\n\tfor _, test := range tests {\n",
                      "markdown": "`\t\tvalid   bool\n\t}{\n\t\t{name: \"rc candidates are valid semver\", version: \"1.2.3-rc1\", valid: true},\n\t\t{name: \"rc candidates with no dash are valid semver\", version: \"1.2.3rc1\", valid: true},\n\t}\n\n\tfor _, test := range tests {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-busybox-1.36"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 7,
                  "endLine": 2,
                  "endColumn": 15,
                  "snippet": {
                    "text": "FROM alpine as certs\nRUN apk update && apk add ca-certificates\n\n# note: using qemu with a multi-arch image results in redirects not working with wget\n# so let docker pull the image that matches the hosts architecture first and then pull the correct asset\n",
                    "rendered": {
                      "text": "FROM alpine as certs\nRUN apk update && apk add ca-certificates\n\n# note: using qemu with a multi-arch image results in redirects not working with wget\n# so let docker pull the image that matches the hosts architecture first and then pull the correct asset\n",
                      "markdown": "`FROM alpine as certs\nRUN apk update && apk add ca-certificates\n\n# note: using qemu with a multi-arch image results in redirects not working with wget\n# so let docker pull the image that matches the hosts architecture first and then pull the correct asset\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-busybox-1.36"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3,
                  "endLine": 19,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    echo \"Downloading cosign for $COSIGN_ARCH\" && \\\n    wget https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-${COSIGN_ARCH} && \\\n    mv cosign-linux-${COSIGN_ARCH} /bin/cosign && \\\n    chmod +x /bin/cosign\n\nCOPY --from=certs /etc/ssl/certs /etc/ssl/certs\n",
                    "rendered": {
                      "text": "    echo \"Downloading cosign for $COSIGN_ARCH\" && \\\n    wget https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-${COSIGN_ARCH} && \\\n    mv cosign-linux-${COSIGN_ARCH} /bin/cosign && \\\n    chmod +x /bin/cosign\n\nCOPY --from=certs /etc/ssl/certs /etc/ssl/certs\n",
                      "markdown": "`    echo \"Downloading cosign for $COSIGN_ARCH\" && \\\n    wget https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-${COSIGN_ARCH} && \\\n    mv cosign-linux-${COSIGN_ARCH} /bin/cosign && \\\n    chmod +x /bin/cosign\n\nCOPY --from=certs /etc/ssl/certs /etc/ssl/certs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-busybox-1.36"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    fi && \\\n    echo \"Downloading cosign for $COSIGN_ARCH\" && \\\n    wget https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-${COSIGN_ARCH} && \\\n    mv cosign-linux-${COSIGN_ARCH} /bin/cosign && \\\n    chmod +x /bin/cosign\n\nCOPY --from=certs /etc/ssl/certs /etc/ssl/certs\n",
                    "rendered": {
                      "text": "    fi && \\\n    echo \"Downloading cosign for $COSIGN_ARCH\" && \\\n    wget https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-${COSIGN_ARCH} && \\\n    mv cosign-linux-${COSIGN_ARCH} /bin/cosign && \\\n    chmod +x /bin/cosign\n\nCOPY --from=certs /etc/ssl/certs /etc/ssl/certs\n",
                      "markdown": "`    fi && \\\n    echo \"Downloading cosign for $COSIGN_ARCH\" && \\\n    wget https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-${COSIGN_ARCH} && \\\n    mv cosign-linux-${COSIGN_ARCH} /bin/cosign && \\\n    chmod +x /bin/cosign\n\nCOPY --from=certs /etc/ssl/certs /etc/ssl/certs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-busybox-1.36"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 17,
                  "endColumn": 9,
                  "snippet": {
                    "text": "        echo \"Unsupported architecture: $ARCH\" && exit 1; \\\n    fi && \\\n    echo \"Downloading cosign for $COSIGN_ARCH\" && \\\n    wget https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-${COSIGN_ARCH} && \\\n    mv cosign-linux-${COSIGN_ARCH} /bin/cosign && \\\n    chmod +x /bin/cosign\n\n",
                    "rendered": {
                      "text": "        echo \"Unsupported architecture: $ARCH\" && exit 1; \\\n    fi && \\\n    echo \"Downloading cosign for $COSIGN_ARCH\" && \\\n    wget https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-${COSIGN_ARCH} && \\\n    mv cosign-linux-${COSIGN_ARCH} /bin/cosign && \\\n    chmod +x /bin/cosign\n\n",
                      "markdown": "`        echo \"Unsupported architecture: $ARCH\" && exit 1; \\\n    fi && \\\n    echo \"Downloading cosign for $COSIGN_ARCH\" && \\\n    wget https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-${COSIGN_ARCH} && \\\n    mv cosign-linux-${COSIGN_ARCH} /bin/cosign && \\\n    chmod +x /bin/cosign\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-busybox-1.36"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 8,
                  "endLine": 5,
                  "endColumn": 16,
                  "snippet": {
                    "text": "RUN apk update && apk add ca-certificates\n\n# note: using qemu with a multi-arch image results in redirects not working with wget\n# so let docker pull the image that matches the hosts architecture first and then pull the correct asset\nFROM busybox:1.36.1-musl\n\nRUN ARCH=$(uname -m) && \\\n",
                    "rendered": {
                      "text": "RUN apk update && apk add ca-certificates\n\n# note: using qemu with a multi-arch image results in redirects not working with wget\n# so let docker pull the image that matches the hosts architecture first and then pull the correct asset\nFROM busybox:1.36.1-musl\n\nRUN ARCH=$(uname -m) && \\\n",
                      "markdown": "`RUN apk update && apk add ca-certificates\n\n# note: using qemu with a multi-arch image results in redirects not working with wget\n# so let docker pull the image that matches the hosts architecture first and then pull the correct asset\nFROM busybox:1.36.1-musl\n\nRUN ARCH=$(uname -m) && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-busybox-1.36"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 80,
                  "endLine": 5,
                  "snippet": {
                    "text": "FROM alpine as certs\nRUN apk update && apk add ca-certificates\n\n# note: using qemu with a multi-arch image results in redirects not working with wget\n# so let docker pull the image that matches the hosts architecture first and then pull the correct asset\nFROM busybox:1.36.1-musl\n\nRUN ARCH=$(uname -m) && \\\n",
                    "rendered": {
                      "text": "FROM alpine as certs\nRUN apk update && apk add ca-certificates\n\n# note: using qemu with a multi-arch image results in redirects not working with wget\n# so let docker pull the image that matches the hosts architecture first and then pull the correct asset\nFROM busybox:1.36.1-musl\n\nRUN ARCH=$(uname -m) && \\\n",
                      "markdown": "`FROM alpine as certs\nRUN apk update && apk add ca-certificates\n\n# note: using qemu with a multi-arch image results in redirects not working with wget\n# so let docker pull the image that matches the hosts architecture first and then pull the correct asset\nFROM busybox:1.36.1-musl\n\nRUN ARCH=$(uname -m) && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-alpine-3.6"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 7,
                  "endLine": 2,
                  "endColumn": 15,
                  "snippet": {
                    "text": "FROM alpine:3.6\nRUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n",
                    "rendered": {
                      "text": "FROM alpine:3.6\nRUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n",
                      "markdown": "`FROM alpine:3.6\nRUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-alpine-3.6"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 3,
                  "endLine": 5,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n",
                    "rendered": {
                      "text": "RUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n",
                      "markdown": "`RUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-alpine-3.6"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 7,
                  "snippet": {
                    "text": "FROM alpine:3.6\nRUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n",
                    "rendered": {
                      "text": "FROM alpine:3.6\nRUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n",
                      "markdown": "`FROM alpine:3.6\nRUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-alpine-3.6"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 3,
                  "endLine": 3,
                  "endColumn": 9,
                  "snippet": {
                    "text": "FROM alpine:3.6\nRUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n",
                    "rendered": {
                      "text": "FROM alpine:3.6\nRUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n",
                      "markdown": "`FROM alpine:3.6\nRUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-alpine-3.6"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 33,
                  "endLine": 2,
                  "endColumn": 39,
                  "snippet": {
                    "text": "FROM alpine:3.6\nRUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n",
                    "rendered": {
                      "text": "FROM alpine:3.6\nRUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n",
                      "markdown": "`FROM alpine:3.6\nRUN apk update && apk add python3 wget curl unzip make ca-certificates\nRUN curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64\" && \\\n    mv cosign-linux-amd64 /usr/local/bin/cosign && \\\n    chmod +x /usr/local/bin/cosign\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-ubuntu-20.04"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 7,
                  "endLine": 2,
                  "endColumn": 15,
                  "snippet": {
                    "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                    "rendered": {
                      "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                      "markdown": "`FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-ubuntu-20.04"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 3,
                  "endLine": 5,
                  "endColumn": 9,
                  "snippet": {
                    "text": "RUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                    "rendered": {
                      "text": "RUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                      "markdown": "`RUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-ubuntu-20.04"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 9,
                  "snippet": {
                    "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                    "rendered": {
                      "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                      "markdown": "`FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-ubuntu-20.04"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 104,
                  "endLine": 3,
                  "endColumn": 109,
                  "snippet": {
                    "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                    "rendered": {
                      "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                      "markdown": "`FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-ubuntu-20.04"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 88,
                  "endLine": 3,
                  "endColumn": 94,
                  "snippet": {
                    "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                    "rendered": {
                      "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                      "markdown": "`FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-ubuntu-20.04"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 45,
                  "endLine": 2,
                  "endColumn": 51,
                  "snippet": {
                    "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                    "rendered": {
                      "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                      "markdown": "`FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-ubuntu-20.04"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 20,
                  "endLine": 2,
                  "endColumn": 25,
                  "snippet": {
                    "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                    "rendered": {
                      "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                      "markdown": "`FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/environments/Dockerfile-ubuntu-20.04"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 3,
                  "endLine": 2,
                  "endColumn": 8,
                  "snippet": {
                    "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                    "rendered": {
                      "text": "FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb",
                      "markdown": "`FROM --platform=linux/amd64 ubuntu:20.04@sha256:33a5cc25d22c45900796a1aca487ad7a7cb09f09ea00b779e3b2026b4fc2faba\nRUN apt update -y && apt install make python3 curl unzip -y\nRUN LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d \"v\\\", \") && \\\n    curl -O -L \"https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb\" && \\\n    dpkg -i cosign_${LATEST_VERSION}_amd64.deb`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/github_test.sh"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 14,
                  "endLine": 63,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  assertFilesEqual \\\n    \"$(snapshot_checksums_path)\" \\\n    \"${actual_filepath}\" \\\n    \"unable to find release tag\"\n\n  rm -rf -- \"$tmpdir\"\n}\n",
                    "rendered": {
                      "text": "  assertFilesEqual \\\n    \"$(snapshot_checksums_path)\" \\\n    \"${actual_filepath}\" \\\n    \"unable to find release tag\"\n\n  rm -rf -- \"$tmpdir\"\n}\n",
                      "markdown": "`  assertFilesEqual \\\n    \"$(snapshot_checksums_path)\" \\\n    \"${actual_filepath}\" \\\n    \"unable to find release tag\"\n\n  rm -rf -- \"$tmpdir\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/github_test.sh"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 14,
                  "endLine": 43,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  assertFilesEqual \\\n    \"./test-fixtures/grype_0.32.0_checksums.txt\" \\\n    \"${actual_filepath}\" \\\n    \"unable to find release tag\"\n\n  rm -rf -- \"$tmpdir\"\n}\n",
                    "rendered": {
                      "text": "  assertFilesEqual \\\n    \"./test-fixtures/grype_0.32.0_checksums.txt\" \\\n    \"${actual_filepath}\" \\\n    \"unable to find release tag\"\n\n  rm -rf -- \"$tmpdir\"\n}\n",
                      "markdown": "`  assertFilesEqual \\\n    \"./test-fixtures/grype_0.32.0_checksums.txt\" \\\n    \"${actual_filepath}\" \\\n    \"unable to find release tag\"\n\n  rm -rf -- \"$tmpdir\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/github_test.sh"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 47,
                  "endLine": 24,
                  "endColumn": 53,
                  "snippet": {
                    "text": "  content=$(cat ${fixture})\n\n  actual=$(github_release_tag \"${content}\")\n  assertEquals \"v0.32.0\" \"${actual}\" \"unable to find release tag\"\n}\n\nrun_test_case test_github_release_tag\n",
                    "rendered": {
                      "text": "  content=$(cat ${fixture})\n\n  actual=$(github_release_tag \"${content}\")\n  assertEquals \"v0.32.0\" \"${actual}\" \"unable to find release tag\"\n}\n\nrun_test_case test_github_release_tag\n",
                      "markdown": "`  content=$(cat ${fixture})\n\n  actual=$(github_release_tag \"${content}\")\n  assertEquals \"v0.32.0\" \"${actual}\" \"unable to find release tag\"\n}\n\nrun_test_case test_github_release_tag\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/github_test.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 48,
                  "endLine": 12,
                  "endColumn": 54,
                  "snippet": {
                    "text": "  assertEquals \"v0.32.0\" \"${actual}\" \"unable to find tag_name\"\n\n  actual=$(extract_json_value \"${content}\" \"id\")\n  assertEquals \"57501596\" \"${actual}\" \"unable to find tag_name\"\n}\n\nrun_test_case test_extract_json_value\n",
                    "rendered": {
                      "text": "  assertEquals \"v0.32.0\" \"${actual}\" \"unable to find tag_name\"\n\n  actual=$(extract_json_value \"${content}\" \"id\")\n  assertEquals \"57501596\" \"${actual}\" \"unable to find tag_name\"\n}\n\nrun_test_case test_extract_json_value\n",
                      "markdown": "`  assertEquals \"v0.32.0\" \"${actual}\" \"unable to find tag_name\"\n\n  actual=$(extract_json_value \"${content}\" \"id\")\n  assertEquals \"57501596\" \"${actual}\" \"unable to find tag_name\"\n}\n\nrun_test_case test_extract_json_value\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/github_test.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 47,
                  "endLine": 9,
                  "endColumn": 53,
                  "snippet": {
                    "text": "  content=$(cat ${fixture})\n\n  actual=$(extract_json_value \"${content}\" \"tag_name\")\n  assertEquals \"v0.32.0\" \"${actual}\" \"unable to find tag_name\"\n\n  actual=$(extract_json_value \"${content}\" \"id\")\n  assertEquals \"57501596\" \"${actual}\" \"unable to find tag_name\"\n",
                    "rendered": {
                      "text": "  content=$(cat ${fixture})\n\n  actual=$(extract_json_value \"${content}\" \"tag_name\")\n  assertEquals \"v0.32.0\" \"${actual}\" \"unable to find tag_name\"\n\n  actual=$(extract_json_value \"${content}\" \"id\")\n  assertEquals \"57501596\" \"${actual}\" \"unable to find tag_name\"\n",
                      "markdown": "`  content=$(cat ${fixture})\n\n  actual=$(extract_json_value \"${content}\" \"tag_name\")\n  assertEquals \"v0.32.0\" \"${actual}\" \"unable to find tag_name\"\n\n  actual=$(extract_json_value \"${content}\" \"id\")\n  assertEquals \"57501596\" \"${actual}\" \"unable to find tag_name\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/0_checksums_test.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 15,
                  "endLine": 50,
                  "endColumn": 81,
                  "snippet": {
                    "text": "\n  # positive case\n  actual=$(hash_sha256 \"${target}\")\n  assertEquals \"8d57abb57a0dae3ff23c8f0df1f51951b7772822e0d560e860d6f68c24ef6d3d\" \"${actual}\" \"mismatched checksum\"\n}\n\nrun_test_case test_hash_sha256\n",
                    "rendered": {
                      "text": "\n  # positive case\n  actual=$(hash_sha256 \"${target}\")\n  assertEquals \"8d57abb57a0dae3ff23c8f0df1f51951b7772822e0d560e860d6f68c24ef6d3d\" \"${actual}\" \"mismatched checksum\"\n}\n\nrun_test_case test_hash_sha256\n",
                      "markdown": "`\n  # positive case\n  actual=$(hash_sha256 \"${target}\")\n  assertEquals \"8d57abb57a0dae3ff23c8f0df1f51951b7772822e0d560e860d6f68c24ef6d3d\" \"${actual}\" \"mismatched checksum\"\n}\n\nrun_test_case test_hash_sha256\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/0_checksums_test.sh"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 63,
                  "endLine": 72,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n  # negative case\n\n  # we are expecting error messages, which is confusing to look at in passing tests... disable logging for now\n  log_set_priority -1\n\n  checksums=./test-fixtures/assets/invalid/checksums.txt\n",
                    "rendered": {
                      "text": "\n  # negative case\n\n  # we are expecting error messages, which is confusing to look at in passing tests... disable logging for now\n  log_set_priority -1\n\n  checksums=./test-fixtures/assets/invalid/checksums.txt\n",
                      "markdown": "`\n  # negative case\n\n  # we are expecting error messages, which is confusing to look at in passing tests... disable logging for now\n  log_set_priority -1\n\n  checksums=./test-fixtures/assets/invalid/checksums.txt\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/0_checksums_test.sh"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 65,
                  "endLine": 37,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n  # negative case\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"linux\" \"amd64\" \"zip\")\n  assertEquals \"\" \"${actual}\" \"found a snapshot asset but did not expect to (format)\"\n}\n\nrun_test_case test_search_for_asset_snapshot\n",
                    "rendered": {
                      "text": "\n  # negative case\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"linux\" \"amd64\" \"zip\")\n  assertEquals \"\" \"${actual}\" \"found a snapshot asset but did not expect to (format)\"\n}\n\nrun_test_case test_search_for_asset_snapshot\n",
                      "markdown": "`\n  # negative case\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"linux\" \"amd64\" \"zip\")\n  assertEquals \"\" \"${actual}\" \"found a snapshot asset but did not expect to (format)\"\n}\n\nrun_test_case test_search_for_asset_snapshot\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/0_checksums_test.sh"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 85,
                  "endLine": 33,
                  "endColumn": 91,
                  "snippet": {
                    "text": "\n  # positive case\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"linux\" \"amd64\" \"rpm\")\n  assertEquals \"grype_0.32.0-SNAPSHOT-d461f63_linux_amd64.rpm\" \"${actual}\" \"unable to find snapshot asset\"\n\n  # negative case\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"linux\" \"amd64\" \"zip\")\n",
                    "rendered": {
                      "text": "\n  # positive case\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"linux\" \"amd64\" \"rpm\")\n  assertEquals \"grype_0.32.0-SNAPSHOT-d461f63_linux_amd64.rpm\" \"${actual}\" \"unable to find snapshot asset\"\n\n  # negative case\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"linux\" \"amd64\" \"zip\")\n",
                      "markdown": "`\n  # positive case\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"linux\" \"amd64\" \"rpm\")\n  assertEquals \"grype_0.32.0-SNAPSHOT-d461f63_linux_amd64.rpm\" \"${actual}\" \"unable to find snapshot asset\"\n\n  # negative case\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"linux\" \"amd64\" \"zip\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/0_checksums_test.sh"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 64,
                  "endLine": 18,
                  "endColumn": 72,
                  "snippet": {
                    "text": "  assertEquals \"\" \"${actual}\" \"found a release asset but did not expect to (os)\"\n\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"darwin\" \"amd64\" \"rpm\")\n  assertEquals \"\" \"${actual}\" \"found a release asset but did not expect to (format)\"\n\n}\n\n",
                    "rendered": {
                      "text": "  assertEquals \"\" \"${actual}\" \"found a release asset but did not expect to (os)\"\n\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"darwin\" \"amd64\" \"rpm\")\n  assertEquals \"\" \"${actual}\" \"found a release asset but did not expect to (format)\"\n\n}\n\n",
                      "markdown": "`  assertEquals \"\" \"${actual}\" \"found a release asset but did not expect to (os)\"\n\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"darwin\" \"amd64\" \"rpm\")\n  assertEquals \"\" \"${actual}\" \"found a release asset but did not expect to (format)\"\n\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/0_checksums_test.sh"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 64,
                  "endLine": 15,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\n  # negative cases\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"Linux\" \"amd64\" \"tar.gz\")\n  assertEquals \"\" \"${actual}\" \"found a release asset but did not expect to (os)\"\n\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"darwin\" \"amd64\" \"rpm\")\n  assertEquals \"\" \"${actual}\" \"found a release asset but did not expect to (format)\"\n",
                    "rendered": {
                      "text": "\n  # negative cases\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"Linux\" \"amd64\" \"tar.gz\")\n  assertEquals \"\" \"${actual}\" \"found a release asset but did not expect to (os)\"\n\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"darwin\" \"amd64\" \"rpm\")\n  assertEquals \"\" \"${actual}\" \"found a release asset but did not expect to (format)\"\n",
                      "markdown": "`\n  # negative cases\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"Linux\" \"amd64\" \"tar.gz\")\n  assertEquals \"\" \"${actual}\" \"found a release asset but did not expect to (os)\"\n\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"darwin\" \"amd64\" \"rpm\")\n  assertEquals \"\" \"${actual}\" \"found a release asset but did not expect to (format)\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/0_checksums_test.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 71,
                  "endLine": 11,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\n  # positive case\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"linux\" \"amd64\" \"tar.gz\")\n  assertEquals \"grype_0.32.0_linux_amd64.tar.gz\" \"${actual}\" \"unable to find release asset\"\n\n  # negative cases\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"Linux\" \"amd64\" \"tar.gz\")\n",
                    "rendered": {
                      "text": "\n  # positive case\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"linux\" \"amd64\" \"tar.gz\")\n  assertEquals \"grype_0.32.0_linux_amd64.tar.gz\" \"${actual}\" \"unable to find release asset\"\n\n  # negative cases\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"Linux\" \"amd64\" \"tar.gz\")\n",
                      "markdown": "`\n  # positive case\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"linux\" \"amd64\" \"tar.gz\")\n  assertEquals \"grype_0.32.0_linux_amd64.tar.gz\" \"${actual}\" \"unable to find release asset\"\n\n  # negative cases\n  actual=$(search_for_asset \"${fixture}\" \"grype\" \"Linux\" \"amd64\" \"tar.gz\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/test_harness.sh"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 68,
                  "endLine": 182,
                  "endColumn": 74,
                  "snippet": {
                    "text": "  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_linux_amd64.tar.gz\n  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_darwin_amd64.tar.gz\n\n  echo \"$(find ../../snapshot -maxdepth 1  -type f | grep 'grype_' | grep 'tar\\|zip' | wc -l | tr -d '[:space:]')\"\n}\n\n\n",
                    "rendered": {
                      "text": "  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_linux_amd64.tar.gz\n  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_darwin_amd64.tar.gz\n\n  echo \"$(find ../../snapshot -maxdepth 1  -type f | grep 'grype_' | grep 'tar\\|zip' | wc -l | tr -d '[:space:]')\"\n}\n\n\n",
                      "markdown": "`  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_linux_amd64.tar.gz\n  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_darwin_amd64.tar.gz\n\n  echo \"$(find ../../snapshot -maxdepth 1  -type f | grep 'grype_' | grep 'tar\\|zip' | wc -l | tr -d '[:space:]')\"\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/test_harness.sh"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 52,
                  "endLine": 182,
                  "endColumn": 58,
                  "snippet": {
                    "text": "  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_linux_amd64.tar.gz\n  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_darwin_amd64.tar.gz\n\n  echo \"$(find ../../snapshot -maxdepth 1  -type f | grep 'grype_' | grep 'tar\\|zip' | wc -l | tr -d '[:space:]')\"\n}\n\n\n",
                    "rendered": {
                      "text": "  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_linux_amd64.tar.gz\n  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_darwin_amd64.tar.gz\n\n  echo \"$(find ../../snapshot -maxdepth 1  -type f | grep 'grype_' | grep 'tar\\|zip' | wc -l | tr -d '[:space:]')\"\n}\n\n\n",
                      "markdown": "`  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_linux_amd64.tar.gz\n  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_darwin_amd64.tar.gz\n\n  echo \"$(find ../../snapshot -maxdepth 1  -type f | grep 'grype_' | grep 'tar\\|zip' | wc -l | tr -d '[:space:]')\"\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/test_harness.sh"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 67,
                  "endLine": 167,
                  "endColumn": 73,
                  "snippet": {
                    "text": "  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_linux_amd64.tar.gz\n  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_darwin_amd64.tar.gz\n\n  echo \"$(find ../../snapshot -maxdepth 1 -type f | grep 'grype_' | grep -v checksums | wc -l | tr -d '[:space:]')\"\n}\n\n\n",
                    "rendered": {
                      "text": "  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_linux_amd64.tar.gz\n  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_darwin_amd64.tar.gz\n\n  echo \"$(find ../../snapshot -maxdepth 1 -type f | grep 'grype_' | grep -v checksums | wc -l | tr -d '[:space:]')\"\n}\n\n\n",
                      "markdown": "`  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_linux_amd64.tar.gz\n  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_darwin_amd64.tar.gz\n\n  echo \"$(find ../../snapshot -maxdepth 1 -type f | grep 'grype_' | grep -v checksums | wc -l | tr -d '[:space:]')\"\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/test_harness.sh"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 51,
                  "endLine": 167,
                  "endColumn": 57,
                  "snippet": {
                    "text": "  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_linux_amd64.tar.gz\n  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_darwin_amd64.tar.gz\n\n  echo \"$(find ../../snapshot -maxdepth 1 -type f | grep 'grype_' | grep -v checksums | wc -l | tr -d '[:space:]')\"\n}\n\n\n",
                    "rendered": {
                      "text": "  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_linux_amd64.tar.gz\n  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_darwin_amd64.tar.gz\n\n  echo \"$(find ../../snapshot -maxdepth 1 -type f | grep 'grype_' | grep -v checksums | wc -l | tr -d '[:space:]')\"\n}\n\n\n",
                      "markdown": "`  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_linux_amd64.tar.gz\n  #  ../../snapshot/grype_0.32.0-SNAPSHOT-e5e847a_darwin_amd64.tar.gz\n\n  echo \"$(find ../../snapshot -maxdepth 1 -type f | grep 'grype_' | grep -v checksums | wc -l | tr -d '[:space:]')\"\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/test_harness.sh"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 47,
                  "endLine": 135,
                  "endColumn": 53,
                  "snippet": {
                    "text": "}\n\nsnapshot_version() {\n  partial=$(ls ../../snapshot/*_checksums.txt | grep -o \"_.*_checksums.txt\")\n  partial=\"${partial%_checksums.txt}\"\n  echo \"${partial#_}\"\n}\n",
                    "rendered": {
                      "text": "}\n\nsnapshot_version() {\n  partial=$(ls ../../snapshot/*_checksums.txt | grep -o \"_.*_checksums.txt\")\n  partial=\"${partial%_checksums.txt}\"\n  echo \"${partial#_}\"\n}\n",
                      "markdown": "`}\n\nsnapshot_version() {\n  partial=$(ls ../../snapshot/*_checksums.txt | grep -o \"_.*_checksums.txt\")\n  partial=\"${partial%_checksums.txt}\"\n  echo \"${partial#_}\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/test_harness.sh"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 36,
                  "endLine": 106,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n  echoerr \"serving up $(snapshot_dir) on port $serve_port\"\n\n  echoerr \"$(ls -1 $(snapshot_dir) | sed 's/^/  ▕―― /')\"\n\n  check_snapshots_server_ready\n\n",
                    "rendered": {
                      "text": "\n  echoerr \"serving up $(snapshot_dir) on port $serve_port\"\n\n  echoerr \"$(ls -1 $(snapshot_dir) | sed 's/^/  ▕―― /')\"\n\n  check_snapshots_server_ready\n\n",
                      "markdown": "`\n  echoerr \"serving up $(snapshot_dir) on port $serve_port\"\n\n  echoerr \"$(ls -1 $(snapshot_dir) | sed 's/^/  ▕―― /')\"\n\n  check_snapshots_server_ready\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/test_harness.sh"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 1,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  got=$2\n  msg=$3\n\n  diff \"$1\" \"$2\"\n  if [ $? -ne 0 ]; then\n    echo \"assertFilesEqual failed: $msg\"\n    exit 2\n",
                    "rendered": {
                      "text": "  got=$2\n  msg=$3\n\n  diff \"$1\" \"$2\"\n  if [ $? -ne 0 ]; then\n    echo \"assertFilesEqual failed: $msg\"\n    exit 2\n",
                      "markdown": "`  got=$2\n  msg=$3\n\n  diff \"$1\" \"$2\"\n  if [ $? -ne 0 ]; then\n    echo \"assertFilesEqual failed: $msg\"\n    exit 2\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/test_harness.sh"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# disable using the install.sh entrypoint such that we can unit test\n# script functions without invoking main()\nTEST_INSTALL_SH=true\n\n. ../../install.sh\n",
                    "rendered": {
                      "text": "# disable using the install.sh entrypoint such that we can unit test\n# script functions without invoking main()\nTEST_INSTALL_SH=true\n\n. ../../install.sh\n",
                      "markdown": "`# disable using the install.sh entrypoint such that we can unit test\n# script functions without invoking main()\nTEST_INSTALL_SH=true\n\n. ../../install.sh\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/4_prep_signature_verification_test.sh"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 63,
                  "endLine": 54,
                  "endColumn": 67,
                  "snippet": {
                    "text": "test_prep_signature_verification() {\n  # prep_sign_verification [version]\n\n  # we are expecting error messages, which is confusing to look at in passing tests... disable logging for now\n  log_set_priority -1\n\n  # backup original values...\n",
                    "rendered": {
                      "text": "test_prep_signature_verification() {\n  # prep_sign_verification [version]\n\n  # we are expecting error messages, which is confusing to look at in passing tests... disable logging for now\n  log_set_priority -1\n\n  # backup original values...\n",
                      "markdown": "`test_prep_signature_verification() {\n  # prep_sign_verification [version]\n\n  # we are expecting error messages, which is confusing to look at in passing tests... disable logging for now\n  log_set_priority -1\n\n  # backup original values...\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 61,
                  "endLine": 116,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n## BUSYBOX #######################################################\n\n# note: unit tests cannot be run with sh (busybox dosn't have bash by default)\n\n# note: busybox by default will not have cacerts, so you will get TLS warnings (we want to test under these conditions)\n\n",
                    "rendered": {
                      "text": "\n## BUSYBOX #######################################################\n\n# note: unit tests cannot be run with sh (busybox dosn't have bash by default)\n\n# note: busybox by default will not have cacerts, so you will get TLS warnings (we want to test under these conditions)\n\n",
                      "markdown": "`\n## BUSYBOX #######################################################\n\n# note: unit tests cannot be run with sh (busybox dosn't have bash by default)\n\n# note: busybox by default will not have cacerts, so you will get TLS warnings (we want to test under these conditions)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 60,
                  "endLine": 101,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n## ALPINE #######################################################\n\n# note: unit tests cannot be run with sh (alpine dosn't have bash by default)\n\n.PHONY: acceptance-alpine-3.6\nacceptance-alpine-3.6: alpine-3.6\n",
                    "rendered": {
                      "text": "\n## ALPINE #######################################################\n\n# note: unit tests cannot be run with sh (alpine dosn't have bash by default)\n\n.PHONY: acceptance-alpine-3.6\nacceptance-alpine-3.6: alpine-3.6\n",
                      "markdown": "`\n## ALPINE #######################################################\n\n# note: unit tests cannot be run with sh (alpine dosn't have bash by default)\n\n.PHONY: acceptance-alpine-3.6\nacceptance-alpine-3.6: alpine-3.6\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 76,
                  "endLine": 53,
                  "endColumn": 82,
                  "snippet": {
                    "text": ".PHONY: unit-run\nunit-run:\n\t$(call title,unit tests)\n\t@for f in $(shell ls *_test.sh); do echo \"Running unit test suite '$${f}'\"; bash $${f} || exit 1; done\n\n.PHONY: acceptance-local\nacceptance-local: acceptance-current-release-local acceptance-previous-release-local\n",
                    "rendered": {
                      "text": ".PHONY: unit-run\nunit-run:\n\t$(call title,unit tests)\n\t@for f in $(shell ls *_test.sh); do echo \"Running unit test suite '$${f}'\"; bash $${f} || exit 1; done\n\n.PHONY: acceptance-local\nacceptance-local: acceptance-current-release-local acceptance-previous-release-local\n",
                      "markdown": "`.PHONY: unit-run\nunit-run:\n\t$(call title,unit tests)\n\t@for f in $(shell ls *_test.sh); do echo \"Running unit test suite '$${f}'\"; bash $${f} || exit 1; done\n\n.PHONY: acceptance-local\nacceptance-local: acceptance-current-release-local acceptance-previous-release-local\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 76,
                  "endLine": 48,
                  "endColumn": 82,
                  "snippet": {
                    "text": ".PHONY: unit-local\nunit-local:\n\t$(call title,unit tests)\n\t@for f in $(shell ls *_test.sh); do echo \"Running unit test suite '$${f}'\"; bash -c \"COSIGN_BINARY=$(COSIGN_BINARY) ./$${f}\" || exit 1; done\n\n.PHONY: unit-run\nunit-run:\n",
                    "rendered": {
                      "text": ".PHONY: unit-local\nunit-local:\n\t$(call title,unit tests)\n\t@for f in $(shell ls *_test.sh); do echo \"Running unit test suite '$${f}'\"; bash -c \"COSIGN_BINARY=$(COSIGN_BINARY) ./$${f}\" || exit 1; done\n\n.PHONY: unit-run\nunit-run:\n",
                      "markdown": "`.PHONY: unit-local\nunit-local:\n\t$(call title,unit tests)\n\t@for f in $(shell ls *_test.sh); do echo \"Running unit test suite '$${f}'\"; bash -c \"COSIGN_BINARY=$(COSIGN_BINARY) ./$${f}\" || exit 1; done\n\n.PHONY: unit-run\nunit-run:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 24,
                  "endLine": 21,
                  "endColumn": 28,
                  "snippet": {
                    "text": "ACCEPTANCE_CMD=sh -c '../../install.sh -v -b /usr/local/bin && grype version && rm /usr/local/bin/grype && ../../install.sh -b /usr/local/bin && grype version'\n# we also want to test against a previous release to ensure that install.sh defers execution to a former install.sh\n# this version should be at least as recent as when grype was publishing for darwin arm64 as that is what the github runner uses for osx validation\nPREVIOUS_RELEASE=v0.60.0\nACCEPTANCE_PREVIOUS_RELEASE_CMD=sh -c \"../../install.sh -b /usr/local/bin $(PREVIOUS_RELEASE) && grype version\"\n\n# CI cache busting values; change these if",
                    "rendered": {
                      "text": "ACCEPTANCE_CMD=sh -c '../../install.sh -v -b /usr/local/bin && grype version && rm /usr/local/bin/grype && ../../install.sh -b /usr/local/bin && grype version'\n# we also want to test against a previous release to ensure that install.sh defers execution to a former install.sh\n# this version should be at least as recent as when grype was publishing for darwin arm64 as that is what the github runner uses for osx validation\nPREVIOUS_RELEASE=v0.60.0\nACCEPTANCE_PREVIOUS_RELEASE_CMD=sh -c \"../../install.sh -b /usr/local/bin $(PREVIOUS_RELEASE) && grype version\"\n\n# CI cache busting values; change these if",
                      "markdown": "`ACCEPTANCE_CMD=sh -c '../../install.sh -v -b /usr/local/bin && grype version && rm /usr/local/bin/grype && ../../install.sh -b /usr/local/bin && grype version'\n# we also want to test against a previous release to ensure that install.sh defers execution to a former install.sh\n# this version should be at least as recent as when grype was publishing for darwin arm64 as that is what the github runner uses for osx validation\nPREVIOUS_RELEASE=v0.60.0\nACCEPTANCE_PREVIOUS_RELEASE_CMD=sh -c \"../../install.sh -b /usr/local/bin $(PREVIOUS_RELEASE) && grype version\"\n\n# CI cache busting values; change these if`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 104,
                  "endLine": 137,
                  "endColumn": 109,
                  "snippet": {
                    "text": ".PHONY: cache.fingerprint\ncache.fingerprint:\n\t$(call title,Install test fixture fingerprint)\n\t@find ./environments/* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INSTALL_TEST_CACHE_BUSTER)\" >> cache.fingerprint\n",
                    "rendered": {
                      "text": ".PHONY: cache.fingerprint\ncache.fingerprint:\n\t$(call title,Install test fixture fingerprint)\n\t@find ./environments/* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INSTALL_TEST_CACHE_BUSTER)\" >> cache.fingerprint\n",
                      "markdown": "`.PHONY: cache.fingerprint\ncache.fingerprint:\n\t$(call title,Install test fixture fingerprint)\n\t@find ./environments/* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INSTALL_TEST_CACHE_BUSTER)\" >> cache.fingerprint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 77,
                  "endLine": 137,
                  "endColumn": 82,
                  "snippet": {
                    "text": ".PHONY: cache.fingerprint\ncache.fingerprint:\n\t$(call title,Install test fixture fingerprint)\n\t@find ./environments/* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INSTALL_TEST_CACHE_BUSTER)\" >> cache.fingerprint\n",
                    "rendered": {
                      "text": ".PHONY: cache.fingerprint\ncache.fingerprint:\n\t$(call title,Install test fixture fingerprint)\n\t@find ./environments/* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INSTALL_TEST_CACHE_BUSTER)\" >> cache.fingerprint\n",
                      "markdown": "`.PHONY: cache.fingerprint\ncache.fingerprint:\n\t$(call title,Install test fixture fingerprint)\n\t@find ./environments/* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INSTALL_TEST_CACHE_BUSTER)\" >> cache.fingerprint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 70,
                  "endLine": 137,
                  "endColumn": 76,
                  "snippet": {
                    "text": ".PHONY: cache.fingerprint\ncache.fingerprint:\n\t$(call title,Install test fixture fingerprint)\n\t@find ./environments/* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INSTALL_TEST_CACHE_BUSTER)\" >> cache.fingerprint\n",
                    "rendered": {
                      "text": ".PHONY: cache.fingerprint\ncache.fingerprint:\n\t$(call title,Install test fixture fingerprint)\n\t@find ./environments/* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INSTALL_TEST_CACHE_BUSTER)\" >> cache.fingerprint\n",
                      "markdown": "`.PHONY: cache.fingerprint\ncache.fingerprint:\n\t$(call title,Install test fixture fingerprint)\n\t@find ./environments/* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INSTALL_TEST_CACHE_BUSTER)\" >> cache.fingerprint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 51,
                  "endLine": 137,
                  "endColumn": 56,
                  "snippet": {
                    "text": ".PHONY: cache.fingerprint\ncache.fingerprint:\n\t$(call title,Install test fixture fingerprint)\n\t@find ./environments/* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INSTALL_TEST_CACHE_BUSTER)\" >> cache.fingerprint\n",
                    "rendered": {
                      "text": ".PHONY: cache.fingerprint\ncache.fingerprint:\n\t$(call title,Install test fixture fingerprint)\n\t@find ./environments/* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INSTALL_TEST_CACHE_BUSTER)\" >> cache.fingerprint\n",
                      "markdown": "`.PHONY: cache.fingerprint\ncache.fingerprint:\n\t$(call title,Install test fixture fingerprint)\n\t@find ./environments/* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INSTALL_TEST_CACHE_BUSTER)\" >> cache.fingerprint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 130,
                  "endLine": 130,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".PHONY: busybox-1.36\nbusybox-1.36:\n\t$(call title,busybox-1.36 - build environment)\n\tdocker build -t $(BUSYBOX_IMAGE) -f $(ENVS)/Dockerfile-busybox-1.36 .\n\n## For CI ########################################################\n\n",
                    "rendered": {
                      "text": ".PHONY: busybox-1.36\nbusybox-1.36:\n\t$(call title,busybox-1.36 - build environment)\n\tdocker build -t $(BUSYBOX_IMAGE) -f $(ENVS)/Dockerfile-busybox-1.36 .\n\n## For CI ########################################################\n\n",
                      "markdown": "`.PHONY: busybox-1.36\nbusybox-1.36:\n\t$(call title,busybox-1.36 - build environment)\n\tdocker build -t $(BUSYBOX_IMAGE) -f $(ENVS)/Dockerfile-busybox-1.36 .\n\n## For CI ########################################################\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 7,
                  "endLine": 118,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n# note: unit tests cannot be run with sh (busybox dosn't have bash by default)\n\n# note: busybox by default will not have cacerts, so you will get TLS warnings (we want to test under these conditions)\n\n.PHONY: acceptance-busybox-1.36\nacceptance-busybox-1.36: busybox-1.36\n",
                    "rendered": {
                      "text": "\n# note: unit tests cannot be run with sh (busybox dosn't have bash by default)\n\n# note: busybox by default will not have cacerts, so you will get TLS warnings (we want to test under these conditions)\n\n.PHONY: acceptance-busybox-1.36\nacceptance-busybox-1.36: busybox-1.36\n",
                      "markdown": "`\n# note: unit tests cannot be run with sh (busybox dosn't have bash by default)\n\n# note: busybox by default will not have cacerts, so you will get TLS warnings (we want to test under these conditions)\n\n.PHONY: acceptance-busybox-1.36\nacceptance-busybox-1.36: busybox-1.36\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 61,
                  "endLine": 116,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n## BUSYBOX #######################################################\n\n# note: unit tests cannot be run with sh (busybox dosn't have bash by default)\n\n# note: busybox by default will not have cacerts, so you will get TLS warnings (we want to test under these conditions)\n\n",
                    "rendered": {
                      "text": "\n## BUSYBOX #######################################################\n\n# note: unit tests cannot be run with sh (busybox dosn't have bash by default)\n\n# note: busybox by default will not have cacerts, so you will get TLS warnings (we want to test under these conditions)\n\n",
                      "markdown": "`\n## BUSYBOX #######################################################\n\n# note: unit tests cannot be run with sh (busybox dosn't have bash by default)\n\n# note: busybox by default will not have cacerts, so you will get TLS warnings (we want to test under these conditions)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 2,
                  "endLine": 114,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t$(call title,alpine:3.6 - build environment)\n\tdocker build -t $(ALPINE_IMAGE) -f $(ENVS)/Dockerfile-alpine-3.6 .\n\n## BUSYBOX #######################################################\n\n# note: unit tests cannot be run with sh (busybox dosn't have bash by default)\n\n",
                    "rendered": {
                      "text": "\t$(call title,alpine:3.6 - build environment)\n\tdocker build -t $(ALPINE_IMAGE) -f $(ENVS)/Dockerfile-alpine-3.6 .\n\n## BUSYBOX #######################################################\n\n# note: unit tests cannot be run with sh (busybox dosn't have bash by default)\n\n",
                      "markdown": "`\t$(call title,alpine:3.6 - build environment)\n\tdocker build -t $(ALPINE_IMAGE) -f $(ENVS)/Dockerfile-alpine-3.6 .\n\n## BUSYBOX #######################################################\n\n# note: unit tests cannot be run with sh (busybox dosn't have bash by default)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 112,
                  "endLine": 112,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".PHONY: alpine-3.6\nalpine-3.6:\n\t$(call title,alpine:3.6 - build environment)\n\tdocker build -t $(ALPINE_IMAGE) -f $(ENVS)/Dockerfile-alpine-3.6 .\n\n## BUSYBOX #######################################################\n\n",
                    "rendered": {
                      "text": ".PHONY: alpine-3.6\nalpine-3.6:\n\t$(call title,alpine:3.6 - build environment)\n\tdocker build -t $(ALPINE_IMAGE) -f $(ENVS)/Dockerfile-alpine-3.6 .\n\n## BUSYBOX #######################################################\n\n",
                      "markdown": "`.PHONY: alpine-3.6\nalpine-3.6:\n\t$(call title,alpine:3.6 - build environment)\n\tdocker build -t $(ALPINE_IMAGE) -f $(ENVS)/Dockerfile-alpine-3.6 .\n\n## BUSYBOX #######################################################\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 60,
                  "endLine": 101,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n## ALPINE #######################################################\n\n# note: unit tests cannot be run with sh (alpine dosn't have bash by default)\n\n.PHONY: acceptance-alpine-3.6\nacceptance-alpine-3.6: alpine-3.6\n",
                    "rendered": {
                      "text": "\n## ALPINE #######################################################\n\n# note: unit tests cannot be run with sh (alpine dosn't have bash by default)\n\n.PHONY: acceptance-alpine-3.6\nacceptance-alpine-3.6: alpine-3.6\n",
                      "markdown": "`\n## ALPINE #######################################################\n\n# note: unit tests cannot be run with sh (alpine dosn't have bash by default)\n\n.PHONY: acceptance-alpine-3.6\nacceptance-alpine-3.6: alpine-3.6\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".PHONY: ubuntu-20.04\nubuntu-20.04:\n\t$(call title,ubuntu:20.04 - build environment)\n\tdocker build -t $(UBUNTU_IMAGE) -f $(ENVS)/Dockerfile-ubuntu-20.04 .\n\n## ALPINE #######################################################\n\n",
                    "rendered": {
                      "text": ".PHONY: ubuntu-20.04\nubuntu-20.04:\n\t$(call title,ubuntu:20.04 - build environment)\n\tdocker build -t $(UBUNTU_IMAGE) -f $(ENVS)/Dockerfile-ubuntu-20.04 .\n\n## ALPINE #######################################################\n\n",
                      "markdown": "`.PHONY: ubuntu-20.04\nubuntu-20.04:\n\t$(call title,ubuntu:20.04 - build environment)\n\tdocker build -t $(UBUNTU_IMAGE) -f $(ENVS)/Dockerfile-ubuntu-20.04 .\n\n## ALPINE #######################################################\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 78,
                  "endColumn": 8,
                  "snippet": {
                    "text": "load:\n\tdocker image load -i cache/ubuntu-env.tar\n\tdocker image load -i cache/alpine-env.tar\n\tdocker image load -i cache/busybox-env.tar\n\n## UBUNTU #######################################################\n\n",
                    "rendered": {
                      "text": "load:\n\tdocker image load -i cache/ubuntu-env.tar\n\tdocker image load -i cache/alpine-env.tar\n\tdocker image load -i cache/busybox-env.tar\n\n## UBUNTU #######################################################\n\n",
                      "markdown": "`load:\n\tdocker image load -i cache/ubuntu-env.tar\n\tdocker image load -i cache/alpine-env.tar\n\tdocker image load -i cache/busybox-env.tar\n\n## UBUNTU #######################################################\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 77,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".PHONY: load\nload:\n\tdocker image load -i cache/ubuntu-env.tar\n\tdocker image load -i cache/alpine-env.tar\n\tdocker image load -i cache/busybox-env.tar\n\n## UBUNTU #######################################################\n",
                    "rendered": {
                      "text": ".PHONY: load\nload:\n\tdocker image load -i cache/ubuntu-env.tar\n\tdocker image load -i cache/alpine-env.tar\n\tdocker image load -i cache/busybox-env.tar\n\n## UBUNTU #######################################################\n",
                      "markdown": "`.PHONY: load\nload:\n\tdocker image load -i cache/ubuntu-env.tar\n\tdocker image load -i cache/alpine-env.tar\n\tdocker image load -i cache/busybox-env.tar\n\n## UBUNTU #######################################################\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n.PHONY: load\nload:\n\tdocker image load -i cache/ubuntu-env.tar\n\tdocker image load -i cache/alpine-env.tar\n\tdocker image load -i cache/busybox-env.tar\n\n",
                    "rendered": {
                      "text": "\n.PHONY: load\nload:\n\tdocker image load -i cache/ubuntu-env.tar\n\tdocker image load -i cache/alpine-env.tar\n\tdocker image load -i cache/busybox-env.tar\n\n",
                      "markdown": "`\n.PHONY: load\nload:\n\tdocker image load -i cache/ubuntu-env.tar\n\tdocker image load -i cache/alpine-env.tar\n\tdocker image load -i cache/busybox-env.tar\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t@mkdir cache || true\n\tdocker image save -o cache/ubuntu-env.tar $(UBUNTU_IMAGE)\n\tdocker image save -o cache/alpine-env.tar $(ALPINE_IMAGE)\n\tdocker image save -o cache/busybox-env.tar $(BUSYBOX_IMAGE)\n\n.PHONY: load\nload:\n",
                    "rendered": {
                      "text": "\t@mkdir cache || true\n\tdocker image save -o cache/ubuntu-env.tar $(UBUNTU_IMAGE)\n\tdocker image save -o cache/alpine-env.tar $(ALPINE_IMAGE)\n\tdocker image save -o cache/busybox-env.tar $(BUSYBOX_IMAGE)\n\n.PHONY: load\nload:\n",
                      "markdown": "`\t@mkdir cache || true\n\tdocker image save -o cache/ubuntu-env.tar $(UBUNTU_IMAGE)\n\tdocker image save -o cache/alpine-env.tar $(ALPINE_IMAGE)\n\tdocker image save -o cache/busybox-env.tar $(BUSYBOX_IMAGE)\n\n.PHONY: load\nload:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 71,
                  "endColumn": 8,
                  "snippet": {
                    "text": "save: ubuntu-20.04 alpine-3.6 busybox-1.36\n\t@mkdir cache || true\n\tdocker image save -o cache/ubuntu-env.tar $(UBUNTU_IMAGE)\n\tdocker image save -o cache/alpine-env.tar $(ALPINE_IMAGE)\n\tdocker image save -o cache/busybox-env.tar $(BUSYBOX_IMAGE)\n\n.PHONY: load\n",
                    "rendered": {
                      "text": "save: ubuntu-20.04 alpine-3.6 busybox-1.36\n\t@mkdir cache || true\n\tdocker image save -o cache/ubuntu-env.tar $(UBUNTU_IMAGE)\n\tdocker image save -o cache/alpine-env.tar $(ALPINE_IMAGE)\n\tdocker image save -o cache/busybox-env.tar $(BUSYBOX_IMAGE)\n\n.PHONY: load\n",
                      "markdown": "`save: ubuntu-20.04 alpine-3.6 busybox-1.36\n\t@mkdir cache || true\n\tdocker image save -o cache/ubuntu-env.tar $(UBUNTU_IMAGE)\n\tdocker image save -o cache/alpine-env.tar $(ALPINE_IMAGE)\n\tdocker image save -o cache/busybox-env.tar $(BUSYBOX_IMAGE)\n\n.PHONY: load\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".PHONY: save\nsave: ubuntu-20.04 alpine-3.6 busybox-1.36\n\t@mkdir cache || true\n\tdocker image save -o cache/ubuntu-env.tar $(UBUNTU_IMAGE)\n\tdocker image save -o cache/alpine-env.tar $(ALPINE_IMAGE)\n\tdocker image save -o cache/busybox-env.tar $(BUSYBOX_IMAGE)\n\n",
                    "rendered": {
                      "text": ".PHONY: save\nsave: ubuntu-20.04 alpine-3.6 busybox-1.36\n\t@mkdir cache || true\n\tdocker image save -o cache/ubuntu-env.tar $(UBUNTU_IMAGE)\n\tdocker image save -o cache/alpine-env.tar $(ALPINE_IMAGE)\n\tdocker image save -o cache/busybox-env.tar $(BUSYBOX_IMAGE)\n\n",
                      "markdown": "`.PHONY: save\nsave: ubuntu-20.04 alpine-3.6 busybox-1.36\n\t@mkdir cache || true\n\tdocker image save -o cache/ubuntu-env.tar $(UBUNTU_IMAGE)\n\tdocker image save -o cache/alpine-env.tar $(ALPINE_IMAGE)\n\tdocker image save -o cache/busybox-env.tar $(BUSYBOX_IMAGE)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 16,
                  "endLine": 65,
                  "endColumn": 22,
                  "snippet": {
                    "text": ".PHONY: acceptance-previous-release-local\nacceptance-previous-release-local:\n\t$(ACCEPTANCE_PREVIOUS_RELEASE_CMD)\n\tgrype version | grep $(shell echo $(PREVIOUS_RELEASE)| tr -d \"v\")\n\n.PHONY: save\nsave: ubuntu-20.04 alpine-3.6 busybox-1.36\n",
                    "rendered": {
                      "text": ".PHONY: acceptance-previous-release-local\nacceptance-previous-release-local:\n\t$(ACCEPTANCE_PREVIOUS_RELEASE_CMD)\n\tgrype version | grep $(shell echo $(PREVIOUS_RELEASE)| tr -d \"v\")\n\n.PHONY: save\nsave: ubuntu-20.04 alpine-3.6 busybox-1.36\n",
                      "markdown": "`.PHONY: acceptance-previous-release-local\nacceptance-previous-release-local:\n\t$(ACCEPTANCE_PREVIOUS_RELEASE_CMD)\n\tgrype version | grep $(shell echo $(PREVIOUS_RELEASE)| tr -d \"v\")\n\n.PHONY: save\nsave: ubuntu-20.04 alpine-3.6 busybox-1.36\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 76,
                  "endLine": 53,
                  "endColumn": 82,
                  "snippet": {
                    "text": ".PHONY: unit-run\nunit-run:\n\t$(call title,unit tests)\n\t@for f in $(shell ls *_test.sh); do echo \"Running unit test suite '$${f}'\"; bash $${f} || exit 1; done\n\n.PHONY: acceptance-local\nacceptance-local: acceptance-current-release-local acceptance-previous-release-local\n",
                    "rendered": {
                      "text": ".PHONY: unit-run\nunit-run:\n\t$(call title,unit tests)\n\t@for f in $(shell ls *_test.sh); do echo \"Running unit test suite '$${f}'\"; bash $${f} || exit 1; done\n\n.PHONY: acceptance-local\nacceptance-local: acceptance-current-release-local acceptance-previous-release-local\n",
                      "markdown": "`.PHONY: unit-run\nunit-run:\n\t$(call title,unit tests)\n\t@for f in $(shell ls *_test.sh); do echo \"Running unit test suite '$${f}'\"; bash $${f} || exit 1; done\n\n.PHONY: acceptance-local\nacceptance-local: acceptance-current-release-local acceptance-previous-release-local\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/install/Makefile"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 76,
                  "endLine": 48,
                  "endColumn": 82,
                  "snippet": {
                    "text": ".PHONY: unit-local\nunit-local:\n\t$(call title,unit tests)\n\t@for f in $(shell ls *_test.sh); do echo \"Running unit test suite '$${f}'\"; bash -c \"COSIGN_BINARY=$(COSIGN_BINARY) ./$${f}\" || exit 1; done\n\n.PHONY: unit-run\nunit-run:\n",
                    "rendered": {
                      "text": ".PHONY: unit-local\nunit-local:\n\t$(call title,unit tests)\n\t@for f in $(shell ls *_test.sh); do echo \"Running unit test suite '$${f}'\"; bash -c \"COSIGN_BINARY=$(COSIGN_BINARY) ./$${f}\" || exit 1; done\n\n.PHONY: unit-run\nunit-run:\n",
                      "markdown": "`.PHONY: unit-local\nunit-local:\n\t$(call title,unit tests)\n\t@for f in $(shell ls *_test.sh); do echo \"Running unit test suite '$${f}'\"; bash -c \"COSIGN_BINARY=$(COSIGN_BINARY) ./$${f}\" || exit 1; done\n\n.PHONY: unit-run\nunit-run:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 49,
                  "endLine": 13,
                  "endColumn": 55,
                  "snippet": {
                    "text": "trap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n",
                    "rendered": {
                      "text": "trap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n",
                      "markdown": "`trap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture centos:latest sh -c 'tail -f /dev/null'\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture centos:latest sh -c 'tail -f /dev/null'\n\n",
                      "markdown": "`#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture centos:latest sh -c 'tail -f /dev/null'\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 23,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n\ndocker cp generate-rpmdb-fixture:/scratch/Packages .\n",
                    "rendered": {
                      "text": "  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n\ndocker cp generate-rpmdb-fixture:/scratch/Packages .\n",
                      "markdown": "`  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n\ndocker cp generate-rpmdb-fixture:/scratch/Packages .\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n\ndocker cp generate-rpmdb-fixture:/scratch/Packages .\n",
                    "rendered": {
                      "text": "  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n\ndocker cp generate-rpmdb-fixture:/scratch/Packages .\n",
                      "markdown": "`  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n\ndocker cp generate-rpmdb-fixture:/scratch/Packages .\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n",
                    "rendered": {
                      "text": "  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n",
                      "markdown": "`  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\n",
                    "rendered": {
                      "text": "  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\n",
                      "markdown": "`  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 6,
                  "snippet": {
                    "text": "docker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n",
                    "rendered": {
                      "text": "docker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n",
                      "markdown": "`docker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 49,
                  "endLine": 13,
                  "endColumn": 55,
                  "snippet": {
                    "text": "trap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n",
                    "rendered": {
                      "text": "trap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n",
                      "markdown": "`trap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 35,
                  "endLine": 13,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\ntrap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n",
                    "rendered": {
                      "text": "}\ntrap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n",
                      "markdown": "`}\ntrap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 12,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n",
                    "rendered": {
                      "text": "  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n",
                      "markdown": "`  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n\n",
                    "rendered": {
                      "text": "\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n\n",
                      "markdown": "`\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 9,
                  "snippet": {
                    "text": "docker create --name generate-rpmdb-fixture centos:latest sh -c 'tail -f /dev/null'\n\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n",
                    "rendered": {
                      "text": "docker create --name generate-rpmdb-fixture centos:latest sh -c 'tail -f /dev/null'\n\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n",
                      "markdown": "`docker create --name generate-rpmdb-fixture centos:latest sh -c 'tail -f /dev/null'\n\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 4,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture centos:latest sh -c 'tail -f /dev/null'\n\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture centos:latest sh -c 'tail -f /dev/null'\n\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n",
                      "markdown": "`#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture centos:latest sh -c 'tail -f /dev/null'\n\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-centos-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture centos:latest sh -c 'tail -f /dev/null'\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture centos:latest sh -c 'tail -f /dev/null'\n\n",
                      "markdown": "`#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture centos:latest sh -c 'tail -f /dev/null'\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-debian-match-coverage/ruby/specifications/bundler.gemspec"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 21,
                  "endLine": 3,
                  "endColumn": 27,
                  "snippet": {
                    "text": "# frozen_string_literal: true\n# -*- encoding: utf-8 -*-\n# stub: bundler 2.1.4 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"bundler\".freeze\n",
                    "rendered": {
                      "text": "# frozen_string_literal: true\n# -*- encoding: utf-8 -*-\n# stub: bundler 2.1.4 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"bundler\".freeze\n",
                      "markdown": "`# frozen_string_literal: true\n# -*- encoding: utf-8 -*-\n# stub: bundler 2.1.4 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"bundler\".freeze\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-debian-match-coverage/ruby/Gemfile.lock"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 9,
                  "snippet": {
                    "text": "      activerecord (= 4.1.1)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  rails (= 4.1.1)",
                    "rendered": {
                      "text": "      activerecord (= 4.1.1)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  rails (= 4.1.1)",
                      "markdown": "`      activerecord (= 4.1.1)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  rails (= 4.1.1)`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-debian-match-coverage/var/lib/dpkg/status"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 12,
                  "snippet": {
                    "text": " as a low-level access to all features of the libapt-pkg library.\n .\n These include:\n  * apt-get for retrieval of packages and information about them\n    from authenticated sources and for installation, upgrade and\n    removal of packages together with their dependencies\n  * apt-cache for querying available information about installed\n",
                    "rendered": {
                      "text": " as a low-level access to all features of the libapt-pkg library.\n .\n These include:\n  * apt-get for retrieval of packages and information about them\n    from authenticated sources and for installation, upgrade and\n    removal of packages together with their dependencies\n  * apt-cache for querying available information about installed\n",
                      "markdown": "` as a low-level access to all features of the libapt-pkg library.\n .\n These include:\n  * apt-get for retrieval of packages and information about them\n    from authenticated sources and for installation, upgrade and\n    removal of packages together with their dependencies\n  * apt-cache for querying available information about installed\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-debian-match-coverage/var/lib/dpkg/status"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 11,
                  "endLine": 6,
                  "endColumn": 16,
                  "snippet": {
                    "text": "Priority: required\nSection: admin\nInstalled-Size: 4064\nMaintainer: APT Development Team <deity@lists.debian.org>\nArchitecture: amd64\nVersion: 1.8.2\nSource: apt-dev\n",
                    "rendered": {
                      "text": "Priority: required\nSection: admin\nInstalled-Size: 4064\nMaintainer: APT Development Team <deity@lists.debian.org>\nArchitecture: amd64\nVersion: 1.8.2\nSource: apt-dev\n",
                      "markdown": "`Priority: required\nSection: admin\nInstalled-Size: 4064\nMaintainer: APT Development Team <deity@lists.debian.org>\nArchitecture: amd64\nVersion: 1.8.2\nSource: apt-dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-debian-match-coverage/var/lib/dpkg/status"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 8,
                  "endLine": 2,
                  "snippet": {
                    "text": "Package: apt\nStatus: install ok installed\nPriority: required\nSection: admin\nInstalled-Size: 4064\n",
                    "rendered": {
                      "text": "Package: apt\nStatus: install ok installed\nPriority: required\nSection: admin\nInstalled-Size: 4064\n",
                      "markdown": "`Package: apt\nStatus: install ok installed\nPriority: required\nSection: admin\nInstalled-Size: 4064\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-debian-match-coverage/java/example-java-app-maven-0.1.0.jar/META-INF/maven/joda-time/joda-time/pom.xml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 23,
                  "endLine": 13,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  <packaging>jar</packaging>\r\n  <name>Joda-Time</name>\r\n  <version>2.9.2</version>\r\n  <description>Date and time library to replace JDK date handling</description>\r\n  <url>http://www.joda.org/joda-time/</url>\r\n\r\n  <!-- ==================================================================== -->\r\n",
                    "rendered": {
                      "text": "  <packaging>jar</packaging>\r\n  <name>Joda-Time</name>\r\n  <version>2.9.2</version>\r\n  <description>Date and time library to replace JDK date handling</description>\r\n  <url>http://www.joda.org/joda-time/</url>\r\n\r\n  <!-- ==================================================================== -->\r\n",
                      "markdown": "`  <packaging>jar</packaging>\r\n  <name>Joda-Time</name>\r\n  <version>2.9.2</version>\r\n  <description>Date and time library to replace JDK date handling</description>\r\n  <url>http://www.joda.org/joda-time/</url>\r\n\r\n  <!-- ==================================================================== -->\r\n`"
                    }
                  },
                  "sourceLanguage": "pom.xml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 49,
                  "endLine": 13,
                  "endColumn": 55,
                  "snippet": {
                    "text": "trap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n",
                    "rendered": {
                      "text": "trap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n",
                      "markdown": "`trap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture sles12sp5:latest sh -c 'tail -f /dev/null'\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture sles12sp5:latest sh -c 'tail -f /dev/null'\n\n",
                      "markdown": "`#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture sles12sp5:latest sh -c 'tail -f /dev/null'\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 23,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n\ndocker cp generate-rpmdb-fixture:/scratch/Packages .\n",
                    "rendered": {
                      "text": "  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n\ndocker cp generate-rpmdb-fixture:/scratch/Packages .\n",
                      "markdown": "`  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n\ndocker cp generate-rpmdb-fixture:/scratch/Packages .\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n\ndocker cp generate-rpmdb-fixture:/scratch/Packages .\n",
                    "rendered": {
                      "text": "  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n\ndocker cp generate-rpmdb-fixture:/scratch/Packages .\n",
                      "markdown": "`  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n\ndocker cp generate-rpmdb-fixture:/scratch/Packages .\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n",
                    "rendered": {
                      "text": "  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n",
                      "markdown": "`  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\n",
                    "rendered": {
                      "text": "  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\n",
                      "markdown": "`  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -qa\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 6,
                  "snippet": {
                    "text": "docker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n",
                    "rendered": {
                      "text": "docker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n",
                      "markdown": "`docker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n  curl -sSLO https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.rpm\n  rpm --dbpath /scratch -ivh dive_0.9.2_linux_amd64.rpm\n  rm dive_0.9.2_linux_amd64.rpm\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 49,
                  "endLine": 13,
                  "endColumn": 55,
                  "snippet": {
                    "text": "trap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n",
                    "rendered": {
                      "text": "trap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n",
                      "markdown": "`trap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 35,
                  "endLine": 13,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\ntrap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n",
                    "rendered": {
                      "text": "}\ntrap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n",
                      "markdown": "`}\ntrap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n  rpm --initdb --dbpath /scratch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 12,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n",
                    "rendered": {
                      "text": "  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n",
                      "markdown": "`  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n\ndocker start generate-rpmdb-fixture\ndocker exec -i --tty=false generate-rpmdb-fixture bash <<-EOF\n  mkdir -p /scratch\n  cd /scratch\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n\n",
                    "rendered": {
                      "text": "\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n\n",
                      "markdown": "`\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 9,
                  "snippet": {
                    "text": "docker create --name generate-rpmdb-fixture sles12sp5:latest sh -c 'tail -f /dev/null'\n\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n",
                    "rendered": {
                      "text": "docker create --name generate-rpmdb-fixture sles12sp5:latest sh -c 'tail -f /dev/null'\n\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n",
                      "markdown": "`docker create --name generate-rpmdb-fixture sles12sp5:latest sh -c 'tail -f /dev/null'\n\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n  docker rm generate-rpmdb-fixture\n}\ntrap cleanup EXIT\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 4,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture sles12sp5:latest sh -c 'tail -f /dev/null'\n\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture sles12sp5:latest sh -c 'tail -f /dev/null'\n\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n",
                      "markdown": "`#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture sles12sp5:latest sh -c 'tail -f /dev/null'\n\nfunction cleanup {\n  docker kill generate-rpmdb-fixture\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-sles-match-coverage/var/lib/rpm/generate-fixture.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture sles12sp5:latest sh -c 'tail -f /dev/null'\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture sles12sp5:latest sh -c 'tail -f /dev/null'\n\n",
                      "markdown": "`#!/usr/bin/env bash\nset -eux\n\ndocker create --name generate-rpmdb-fixture sles12sp5:latest sh -c 'tail -f /dev/null'\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-portage-match-coverage/var/db/repos/gentoo/skel.ebuild"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 13,
                  "endLine": 23,
                  "endColumn": 17,
                  "snippet": {
                    "text": "#inherit autotools\n#\n# Eclasses tend to list descriptions of how to use their functions properly.\n# Take a look at the eclass/ directory for more examples.\n\n# Short one-line description of this package.\nDESCRIPTION=\"This is a sample skeleton ebuild file\"",
                    "rendered": {
                      "text": "#inherit autotools\n#\n# Eclasses tend to list descriptions of how to use their functions properly.\n# Take a look at the eclass/ directory for more examples.\n\n# Short one-line description of this package.\nDESCRIPTION=\"This is a sample skeleton ebuild file\"",
                      "markdown": "`#inherit autotools\n#\n# Eclasses tend to list descriptions of how to use their functions properly.\n# Take a look at the eclass/ directory for more examples.\n\n# Short one-line description of this package.\nDESCRIPTION=\"This is a sample skeleton ebuild file\"`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/registry_auth_test.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 20,
                  "endLine": 43,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\targs: []string{\"-vv\", \"registry:localhost:5000/something:latest\"},\n\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_AUTHORITY\": \"localhost:5000\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_TOKEN\":     \"my-token\",\n\t\t\t},\n\t\t\tassertions: []traitAssertion{\n\t\t\t\tassertInOutput(\"from registry\"),\n",
                    "rendered": {
                      "text": "\t\t\targs: []string{\"-vv\", \"registry:localhost:5000/something:latest\"},\n\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_AUTHORITY\": \"localhost:5000\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_TOKEN\":     \"my-token\",\n\t\t\t},\n\t\t\tassertions: []traitAssertion{\n\t\t\t\tassertInOutput(\"from registry\"),\n",
                      "markdown": "`\t\t\targs: []string{\"-vv\", \"registry:localhost:5000/something:latest\"},\n\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_AUTHORITY\": \"localhost:5000\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_TOKEN\":     \"my-token\",\n\t\t\t},\n\t\t\tassertions: []traitAssertion{\n\t\t\t\tassertInOutput(\"from registry\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/registry_auth_test.go"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 38,
                  "endLine": 30,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_AUTHORITY\": \"localhost:5000\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_USERNAME\":  \"username\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_PASSWORD\":  \"password\",\n\t\t\t},\n\t\t\tassertions: []traitAssertion{\n\t\t\t\tassertInOutput(\"from registry\"),\n",
                    "rendered": {
                      "text": "\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_AUTHORITY\": \"localhost:5000\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_USERNAME\":  \"username\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_PASSWORD\":  \"password\",\n\t\t\t},\n\t\t\tassertions: []traitAssertion{\n\t\t\t\tassertInOutput(\"from registry\"),\n",
                      "markdown": "`\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_AUTHORITY\": \"localhost:5000\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_USERNAME\":  \"username\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_PASSWORD\":  \"password\",\n\t\t\t},\n\t\t\tassertions: []traitAssertion{\n\t\t\t\tassertInOutput(\"from registry\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/registry_auth_test.go"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 25,
                  "endLine": 30,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_AUTHORITY\": \"localhost:5000\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_USERNAME\":  \"username\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_PASSWORD\":  \"password\",\n\t\t\t},\n\t\t\tassertions: []traitAssertion{\n\t\t\t\tassertInOutput(\"from registry\"),\n",
                    "rendered": {
                      "text": "\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_AUTHORITY\": \"localhost:5000\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_USERNAME\":  \"username\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_PASSWORD\":  \"password\",\n\t\t\t},\n\t\t\tassertions: []traitAssertion{\n\t\t\t\tassertInOutput(\"from registry\"),\n",
                      "markdown": "`\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_AUTHORITY\": \"localhost:5000\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_USERNAME\":  \"username\",\n\t\t\t\t\"GRYPE_REGISTRY_AUTH_PASSWORD\":  \"password\",\n\t\t\t},\n\t\t\tassertions: []traitAssertion{\n\t\t\t\tassertInOutput(\"from registry\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/registry_auth_test.go"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 1,
                  "endLine": 12,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ttests := []struct {\n\t\tname       string\n\t\targs       []string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n",
                    "rendered": {
                      "text": "\ttests := []struct {\n\t\tname       string\n\t\targs       []string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n",
                      "markdown": "`\ttests := []struct {\n\t\tname       string\n\t\targs       []string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/version_cmd_test.go"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 6,
                  "snippet": {
                    "text": "func TestVersionCmdPrintsToStdout(t *testing.T) {\n\ttests := []struct {\n\t\tname       string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n",
                    "rendered": {
                      "text": "func TestVersionCmdPrintsToStdout(t *testing.T) {\n\ttests := []struct {\n\t\tname       string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n",
                      "markdown": "`func TestVersionCmdPrintsToStdout(t *testing.T) {\n\ttests := []struct {\n\t\tname       string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/subprocess_test.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 2,
                  "endLine": 47,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n\tfor _, test := range tests {\n\t\ttestFn := func(t *testing.T) {\n\t\t\tcmd := getDockerRunCommand(t, test.args...)\n\t\t\tstdout, stderr := runCommand(cmd, test.env)\n\t\t\tfor _, traitAssertionFn := range test.assertions {\n\t\t\t\ttraitAssertionFn(t, stdout, stderr, cmd.ProcessState.ExitCode())\n",
                    "rendered": {
                      "text": "\n\tfor _, test := range tests {\n\t\ttestFn := func(t *testing.T) {\n\t\t\tcmd := getDockerRunCommand(t, test.args...)\n\t\t\tstdout, stderr := runCommand(cmd, test.env)\n\t\t\tfor _, traitAssertionFn := range test.assertions {\n\t\t\t\ttraitAssertionFn(t, stdout, stderr, cmd.ProcessState.ExitCode())\n",
                      "markdown": "`\n\tfor _, test := range tests {\n\t\ttestFn := func(t *testing.T) {\n\t\t\tcmd := getDockerRunCommand(t, test.args...)\n\t\t\tstdout, stderr := runCommand(cmd, test.env)\n\t\t\tfor _, traitAssertionFn := range test.assertions {\n\t\t\t\ttraitAssertionFn(t, stdout, stderr, cmd.ProcessState.ExitCode())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/subprocess_test.go"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 31,
                  "endLine": 23,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t}{\n\t\t{\n\t\t\t// regression\n\t\t\tname: \"ensure can be used by node subprocess (without hanging)\",\n\t\t\targs: []string{\"-v\", fmt.Sprintf(\"%s:%s:ro\", binDir, \"/app/bin\"), imagetest.LoadFixtureImageIntoDocker(t, \"image-node-subprocess\"), \"node\", \"/app.js\"},\n\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_CHECK_FOR_APP_UPDATE\": \"false\",\n",
                    "rendered": {
                      "text": "\t}{\n\t\t{\n\t\t\t// regression\n\t\t\tname: \"ensure can be used by node subprocess (without hanging)\",\n\t\t\targs: []string{\"-v\", fmt.Sprintf(\"%s:%s:ro\", binDir, \"/app/bin\"), imagetest.LoadFixtureImageIntoDocker(t, \"image-node-subprocess\"), \"node\", \"/app.js\"},\n\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_CHECK_FOR_APP_UPDATE\": \"false\",\n",
                      "markdown": "`\t}{\n\t\t{\n\t\t\t// regression\n\t\t\tname: \"ensure can be used by node subprocess (without hanging)\",\n\t\t\targs: []string{\"-v\", fmt.Sprintf(\"%s:%s:ro\", binDir, \"/app/bin\"), imagetest.LoadFixtureImageIntoDocker(t, \"image-node-subprocess\"), \"node\", \"/app.js\"},\n\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_CHECK_FOR_APP_UPDATE\": \"false\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/subprocess_test.go"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ttests := []struct {\n\t\tname       string\n\t\targs       []string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n",
                    "rendered": {
                      "text": "\ttests := []struct {\n\t\tname       string\n\t\targs       []string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n",
                      "markdown": "`\ttests := []struct {\n\t\tname       string\n\t\targs       []string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-bootstrap-tools.yml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 45,
                  "endLine": 51,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f #v7.0.5\n        with:\n",
                    "rendered": {
                      "text": "        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f #v7.0.5\n        with:\n",
                      "markdown": "`        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f #v7.0.5\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-bootstrap-tools.yml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 10,
                  "endLine": 51,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f #v7.0.5\n        with:\n",
                    "rendered": {
                      "text": "        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f #v7.0.5\n        with:\n",
                      "markdown": "`        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f #v7.0.5\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-bootstrap-tools.yml"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 53,
                  "endLine": 65,
                  "endColumn": 61,
                  "snippet": {
                    "text": "            ```\n            ${{ steps.latest-versions.outputs.status }}\n            ```\n            This is an auto-generated pull request to update all of the tools to the latest versions.\n          token: ${{ steps.generate-token.outputs.token }}\n",
                    "rendered": {
                      "text": "            ```\n            ${{ steps.latest-versions.outputs.status }}\n            ```\n            This is an auto-generated pull request to update all of the tools to the latest versions.\n          token: ${{ steps.generate-token.outputs.token }}\n",
                      "markdown": "`            ```\n            ${{ steps.latest-versions.outputs.status }}\n            ```\n            This is an auto-generated pull request to update all of the tools to the latest versions.\n          token: ${{ steps.generate-token.outputs.token }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-bootstrap-tools.yml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 30,
                  "endLine": 60,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          branch: auto/latest-tools\n          labels: dependencies\n          commit-message: 'chore(deps): update tools to latest versions'\n          title: 'chore(deps): update tools to latest versions'\n          body: |\n            ```\n            ${{ steps.latest-versions.outputs.status }}\n",
                    "rendered": {
                      "text": "          branch: auto/latest-tools\n          labels: dependencies\n          commit-message: 'chore(deps): update tools to latest versions'\n          title: 'chore(deps): update tools to latest versions'\n          body: |\n            ```\n            ${{ steps.latest-versions.outputs.status }}\n",
                      "markdown": "`          branch: auto/latest-tools\n          labels: dependencies\n          commit-message: 'chore(deps): update tools to latest versions'\n          title: 'chore(deps): update tools to latest versions'\n          body: |\n            ```\n            ${{ steps.latest-versions.outputs.status }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-bootstrap-tools.yml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 39,
                  "endLine": 59,
                  "endColumn": 47,
                  "snippet": {
                    "text": "          delete-branch: true\n          branch: auto/latest-tools\n          labels: dependencies\n          commit-message: 'chore(deps): update tools to latest versions'\n          title: 'chore(deps): update tools to latest versions'\n          body: |\n            ```\n",
                    "rendered": {
                      "text": "          delete-branch: true\n          branch: auto/latest-tools\n          labels: dependencies\n          commit-message: 'chore(deps): update tools to latest versions'\n          title: 'chore(deps): update tools to latest versions'\n          body: |\n            ```\n",
                      "markdown": "`          delete-branch: true\n          branch: auto/latest-tools\n          labels: dependencies\n          commit-message: 'chore(deps): update tools to latest versions'\n          title: 'chore(deps): update tools to latest versions'\n          body: |\n            ```\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 21,
                  "endLine": 152,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        env:\n          # for mac signing and notarization...\n          QUILL_SIGN_P12: ${{ secrets.ANCHORE_APPLE_DEVELOPER_ID_CERT_CHAIN }}\n          QUILL_SIGN_PASSWORD: ${{ secrets.ANCHORE_APPLE_DEVELOPER_ID_CERT_PASS }}\n          QUILL_NOTARY_ISSUER: ${{ secrets.APPLE_NOTARY_ISSUER }}\n          QUILL_NOTARY_KEY_ID: ${{ secrets.APPLE_NOTARY_KEY_ID }}\n          QUILL_NOTARY_KEY: ${{ secrets.APPLE_NOTARY_KEY }}\n",
                    "rendered": {
                      "text": "        env:\n          # for mac signing and notarization...\n          QUILL_SIGN_P12: ${{ secrets.ANCHORE_APPLE_DEVELOPER_ID_CERT_CHAIN }}\n          QUILL_SIGN_PASSWORD: ${{ secrets.ANCHORE_APPLE_DEVELOPER_ID_CERT_PASS }}\n          QUILL_NOTARY_ISSUER: ${{ secrets.APPLE_NOTARY_ISSUER }}\n          QUILL_NOTARY_KEY_ID: ${{ secrets.APPLE_NOTARY_KEY_ID }}\n          QUILL_NOTARY_KEY: ${{ secrets.APPLE_NOTARY_KEY }}\n",
                      "markdown": "`        env:\n          # for mac signing and notarization...\n          QUILL_SIGN_P12: ${{ secrets.ANCHORE_APPLE_DEVELOPER_ID_CERT_CHAIN }}\n          QUILL_SIGN_PASSWORD: ${{ secrets.ANCHORE_APPLE_DEVELOPER_ID_CERT_PASS }}\n          QUILL_NOTARY_ISSUER: ${{ secrets.APPLE_NOTARY_ISSUER }}\n          QUILL_NOTARY_KEY_ID: ${{ secrets.APPLE_NOTARY_KEY_ID }}\n          QUILL_NOTARY_KEY: ${{ secrets.APPLE_NOTARY_KEY }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 10,
                  "endLine": 136,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        with:\n          registry: ghcr.io\n          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Tag release\n        run: |\n",
                    "rendered": {
                      "text": "        with:\n          registry: ghcr.io\n          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Tag release\n        run: |\n",
                      "markdown": "`        with:\n          registry: ghcr.io\n          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Tag release\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 10,
                  "endLine": 129,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567  #v3.3.0\n        with:\n          username: ${{ secrets.ANCHOREOSSWRITE_DH_USERNAME }}\n          password: ${{ secrets.ANCHOREOSSWRITE_DH_PAT }}\n\n      - name: Login to GitHub Container Registry\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567  #v3.3.0\n",
                    "rendered": {
                      "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567  #v3.3.0\n        with:\n          username: ${{ secrets.ANCHOREOSSWRITE_DH_USERNAME }}\n          password: ${{ secrets.ANCHOREOSSWRITE_DH_PAT }}\n\n      - name: Login to GitHub Container Registry\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567  #v3.3.0\n",
                      "markdown": "`        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567  #v3.3.0\n        with:\n          username: ${{ secrets.ANCHOREOSSWRITE_DH_USERNAME }}\n          password: ${{ secrets.ANCHOREOSSWRITE_DH_PAT }}\n\n      - name: Login to GitHub Container Registry\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567  #v3.3.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 9,
                  "endLine": 24,
                  "endColumn": 13,
                  "snippet": {
                    "text": "blob-verify` for checksum signature verification:\n        #   --certificate-identity-regexp \"https://github.com/anchore/.github/workflows/release.yaml@refs/heads/main\"\n        # if we are not on the main branch, the signature will not be verifiable since the suffix requires the main branch\n        # at the time of when the OIDC token was issued on the Github Actions runner.\n        run: echo \"This can only be run on the main branch otherwise releases produced will not be verifiable with cosign\" && exit 1\n\n      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 #v4.2.1\n\n      - name",
                    "rendered": {
                      "text": "blob-verify` for checksum signature verification:\n        #   --certificate-identity-regexp \"https://github.com/anchore/.github/workflows/release.yaml@refs/heads/main\"\n        # if we are not on the main branch, the signature will not be verifiable since the suffix requires the main branch\n        # at the time of when the OIDC token was issued on the Github Actions runner.\n        run: echo \"This can only be run on the main branch otherwise releases produced will not be verifiable with cosign\" && exit 1\n\n      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 #v4.2.1\n\n      - name",
                      "markdown": "`blob-verify` for checksum signature verification:\n        #   --certificate-identity-regexp \"https://github.com/anchore/.github/workflows/release.yaml@refs/heads/main\"\n        # if we are not on the main branch, the signature will not be verifiable since the suffix requires the main branch\n        # at the time of when the OIDC token was issued on the Github Actions runner.\n        run: echo \"This can only be run on the main branch otherwise releases produced will not be verifiable with cosign\" && exit 1\n\n      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 #v4.2.1\n\n      - name`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 9,
                  "endLine": 143,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          git config user.name \"anchoreci\"\n          git config user.email \"anchoreci@users.noreply.github.com\"\n          git tag -a ${{ github.event.inputs.version }} -m \"Release ${{ github.event.inputs.version }}\"\n          git push origin --tags\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n",
                    "rendered": {
                      "text": "          git config user.name \"anchoreci\"\n          git config user.email \"anchoreci@users.noreply.github.com\"\n          git tag -a ${{ github.event.inputs.version }} -m \"Release ${{ github.event.inputs.version }}\"\n          git push origin --tags\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n",
                      "markdown": "`          git config user.name \"anchoreci\"\n          git config user.email \"anchoreci@users.noreply.github.com\"\n          git tag -a ${{ github.event.inputs.version }} -m \"Release ${{ github.event.inputs.version }}\"\n          git push origin --tags\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 9,
                  "endLine": 142,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        run: |\n          git config user.name \"anchoreci\"\n          git config user.email \"anchoreci@users.noreply.github.com\"\n          git tag -a ${{ github.event.inputs.version }} -m \"Release ${{ github.event.inputs.version }}\"\n          git push origin --tags\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n",
                    "rendered": {
                      "text": "        run: |\n          git config user.name \"anchoreci\"\n          git config user.email \"anchoreci@users.noreply.github.com\"\n          git tag -a ${{ github.event.inputs.version }} -m \"Release ${{ github.event.inputs.version }}\"\n          git push origin --tags\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n",
                      "markdown": "`        run: |\n          git config user.name \"anchoreci\"\n          git config user.email \"anchoreci@users.noreply.github.com\"\n          git tag -a ${{ github.event.inputs.version }} -m \"Release ${{ github.event.inputs.version }}\"\n          git push origin --tags\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 9,
                  "endLine": 141,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: Tag release\n        run: |\n          git config user.name \"anchoreci\"\n          git config user.email \"anchoreci@users.noreply.github.com\"\n          git tag -a ${{ github.event.inputs.version }} -m \"Release ${{ github.event.inputs.version }}\"\n          git push origin --tags\n        env:\n",
                    "rendered": {
                      "text": "      - name: Tag release\n        run: |\n          git config user.name \"anchoreci\"\n          git config user.email \"anchoreci@users.noreply.github.com\"\n          git tag -a ${{ github.event.inputs.version }} -m \"Release ${{ github.event.inputs.version }}\"\n          git push origin --tags\n        env:\n",
                      "markdown": "`      - name: Tag release\n        run: |\n          git config user.name \"anchoreci\"\n          git config user.email \"anchoreci@users.noreply.github.com\"\n          git tag -a ${{ github.event.inputs.version }} -m \"Release ${{ github.event.inputs.version }}\"\n          git push origin --tags\n        env:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 9,
                  "endLine": 140,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n      - name: Tag release\n        run: |\n          git config user.name \"anchoreci\"\n          git config user.email \"anchoreci@users.noreply.github.com\"\n          git tag -a ${{ github.event.inputs.version }} -m \"Release ${{ github.event.inputs.version }}\"\n          git push origin --tags\n",
                    "rendered": {
                      "text": "\n      - name: Tag release\n        run: |\n          git config user.name \"anchoreci\"\n          git config user.email \"anchoreci@users.noreply.github.com\"\n          git tag -a ${{ github.event.inputs.version }} -m \"Release ${{ github.event.inputs.version }}\"\n          git push origin --tags\n",
                      "markdown": "`\n      - name: Tag release\n        run: |\n          git config user.name \"anchoreci\"\n          git config user.email \"anchoreci@users.noreply.github.com\"\n          git tag -a ${{ github.event.inputs.version }} -m \"Release ${{ github.event.inputs.version }}\"\n          git push origin --tags\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 22,
                  "endLine": 125,
                  "endColumn": 30,
                  "snippet": {
                    "text": "          # use the same cache we used for building snapshots\n          build-cache-key-prefix: \"snapshot\"\n\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567  #v3.3.0\n        with:\n          username: ${{ secrets.ANCHOREOSSWRITE_DH_USERNAME }}\n",
                    "rendered": {
                      "text": "          # use the same cache we used for building snapshots\n          build-cache-key-prefix: \"snapshot\"\n\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567  #v3.3.0\n        with:\n          username: ${{ secrets.ANCHOREOSSWRITE_DH_USERNAME }}\n",
                      "markdown": "`          # use the same cache we used for building snapshots\n          build-cache-key-prefix: \"snapshot\"\n\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567  #v3.3.0\n        with:\n          username: ${{ secrets.ANCHOREOSSWRITE_DH_USERNAME }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 9,
                  "endLine": 36,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        # note: this will fail if the tag already exists\n        run: |\n          [[ \"${{ github.event.inputs.version }}\" == v* ]] || (echo \"version '${{ github.event.inputs.version }}' does not have a 'v' prefix\" && exit 1)\n          git tag ${{ github.event.inputs.version }}\n\n      - name: Check static analysis results\n        uses: fountainhead/action-wait-for-check@5a908a24814494009c4bb27c242ea38c93c593be # v1.2.0\n",
                    "rendered": {
                      "text": "        # note: this will fail if the tag already exists\n        run: |\n          [[ \"${{ github.event.inputs.version }}\" == v* ]] || (echo \"version '${{ github.event.inputs.version }}' does not have a 'v' prefix\" && exit 1)\n          git tag ${{ github.event.inputs.version }}\n\n      - name: Check static analysis results\n        uses: fountainhead/action-wait-for-check@5a908a24814494009c4bb27c242ea38c93c593be # v1.2.0\n",
                      "markdown": "`        # note: this will fail if the tag already exists\n        run: |\n          [[ \"${{ github.event.inputs.version }}\" == v* ]] || (echo \"version '${{ github.event.inputs.version }}' does not have a 'v' prefix\" && exit 1)\n          git tag ${{ github.event.inputs.version }}\n\n      - name: Check static analysis results\n        uses: fountainhead/action-wait-for-check@5a908a24814494009c4bb27c242ea38c93c593be # v1.2.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 16,
                  "endLine": 24,
                  "endColumn": 22,
                  "snippet": {
                    "text": "rify` for checksum signature verification:\n        #   --certificate-identity-regexp \"https://github.com/anchore/.github/workflows/release.yaml@refs/heads/main\"\n        # if we are not on the main branch, the signature will not be verifiable since the suffix requires the main branch\n        # at the time of when the OIDC token was issued on the Github Actions runner.\n        run: echo \"This can only be run on the main branch otherwise releases produced will not be verifiable with cosign\" && exit 1\n\n      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 #v4.2.1\n\n      - name: Check i",
                    "rendered": {
                      "text": "rify` for checksum signature verification:\n        #   --certificate-identity-regexp \"https://github.com/anchore/.github/workflows/release.yaml@refs/heads/main\"\n        # if we are not on the main branch, the signature will not be verifiable since the suffix requires the main branch\n        # at the time of when the OIDC token was issued on the Github Actions runner.\n        run: echo \"This can only be run on the main branch otherwise releases produced will not be verifiable with cosign\" && exit 1\n\n      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 #v4.2.1\n\n      - name: Check i",
                      "markdown": "`rify` for checksum signature verification:\n        #   --certificate-identity-regexp \"https://github.com/anchore/.github/workflows/release.yaml@refs/heads/main\"\n        # if we are not on the main branch, the signature will not be verifiable since the suffix requires the main branch\n        # at the time of when the OIDC token was issued on the Github Actions runner.\n        run: echo \"This can only be run on the main branch otherwise releases produced will not be verifiable with cosign\" && exit 1\n\n      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 #v4.2.1\n\n      - name: Check i`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/internal/log/log.go"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 13,
                  "endLine": 21,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t// for this reason we additionally ensure there is a redaction logger configured for any logger passed. The\n\t// source of truth for redaction values is still in the internal redact package. If the passed logger is already\n\t// redacted, then this is a no-op.\n\tstore := red.Get()\n\tif store != nil {\n\t\tl = redact.New(l, store)\n\t}\n",
                    "rendered": {
                      "text": "\t// for this reason we additionally ensure there is a redaction logger configured for any logger passed. The\n\t// source of truth for redaction values is still in the internal redact package. If the passed logger is already\n\t// redacted, then this is a no-op.\n\tstore := red.Get()\n\tif store != nil {\n\t\tl = redact.New(l, store)\n\t}\n",
                      "markdown": "`\t// for this reason we additionally ensure there is a redaction logger configured for any logger passed. The\n\t// source of truth for redaction values is still in the internal redact package. If the passed logger is already\n\t// redacted, then this is a no-op.\n\tstore := red.Get()\n\tif store != nil {\n\t\tl = redact.New(l, store)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/internal/log/log.go"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\"github.com/anchore/go-logger\"\n\t\"github.com/anchore/go-logger/adapter/discard\"\n\t\"github.com/anchore/go-logger/adapter/redact\"\n\tred \"github.com/anchore/grype/internal/redact\"\n)\n\n// log is the singleton used to facilitate logging internally within\n",
                    "rendered": {
                      "text": "\t\"github.com/anchore/go-logger\"\n\t\"github.com/anchore/go-logger/adapter/discard\"\n\t\"github.com/anchore/go-logger/adapter/redact\"\n\tred \"github.com/anchore/grype/internal/redact\"\n)\n\n// log is the singleton used to facilitate logging internally within\n",
                      "markdown": "`\t\"github.com/anchore/go-logger\"\n\t\"github.com/anchore/go-logger/adapter/discard\"\n\t\"github.com/anchore/go-logger/adapter/redact\"\n\tred \"github.com/anchore/grype/internal/redact\"\n)\n\n// log is the singleton used to facilitate logging internally within\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CODE_OF_CONDUCT.md"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 68,
                  "endLine": 128,
                  "snippet": {
                    "text": "[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n",
                    "rendered": {
                      "text": "[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n",
                      "markdown": "`[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CODE_OF_CONDUCT.md"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 71,
                  "endLine": 127,
                  "snippet": {
                    "text": "\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n",
                    "rendered": {
                      "text": "\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n",
                      "markdown": "`\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CODE_OF_CONDUCT.md"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 22,
                  "endLine": 119,
                  "snippet": {
                    "text": "## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n",
                    "rendered": {
                      "text": "## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n",
                      "markdown": "`## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CODE_OF_CONDUCT.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 61,
                  "endLine": 63,
                  "snippet": {
                    "text": "## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[opensource@anchore.com](mailto:opensource@anchore.com).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\n",
                    "rendered": {
                      "text": "## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[opensource@anchore.com](mailto:opensource@anchore.com).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\n",
                      "markdown": "`## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[opensource@anchore.com](mailto:opensource@anchore.com).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CODE_OF_CONDUCT.md"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 14,
                  "endLine": 57,
                  "endColumn": 18,
                  "snippet": {
                    "text": "an individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\n",
                    "rendered": {
                      "text": "an individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\n",
                      "markdown": "`an individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CODE_OF_CONDUCT.md"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 41,
                  "endLine": 112,
                  "endColumn": 47,
                  "snippet": {
                    "text": "standards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n",
                    "rendered": {
                      "text": "standards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n",
                      "markdown": "`standards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/CODE_OF_CONDUCT.md"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 41,
                  "endLine": 100,
                  "endColumn": 47,
                  "snippet": {
                    "text": "**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\n",
                    "rendered": {
                      "text": "**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\n",
                      "markdown": "`**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/v4/store/store.go"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 7,
                  "endLine": 354,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v4.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v4.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n\t}\n\n",
                      "markdown": "`\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v4.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/v4/store/store.go"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 21,
                  "endLine": 352,
                  "snippet": {
                    "text": "\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v4.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n",
                    "rendered": {
                      "text": "\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v4.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n",
                      "markdown": "`\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v4.Diff{}\n\tfor _, diff := range *allDiffsMap {\n\t\tallDiffs = append(allDiffs, *diff)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/v4/store/store.go"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 7,
                  "endLine": 350,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v4.Diff{}\n",
                    "rendered": {
                      "text": "\n\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v4.Diff{}\n",
                      "markdown": "`\n\tstager.Current = \"comparing metadata\"\n\tmetaDiffsMap := diffVulnerabilityMetadata(baseMetadata, targetMetadata, baseVulnPkgMap, targetVulnPkgMap, diffItems)\n\tfor k, diff := range *metaDiffsMap {\n\t\t(*allDiffsMap)[k] = diff\n\t}\n\tallDiffs := []v4.Diff{}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/models/document.go"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 43,
                  "endLine": 61,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tfor _, m := range ignoredMatches {\n\t\tp := pkg.ByID(m.Package.ID, packages)\n\t\tif p == nil {\n\t\t\treturn Document{}, fmt.Errorf(\"unable to find package in collection: %+v\", p)\n\t\t}\n\n\t\tmatchModel, err := newMatch(m.Match, *p, metadataProvider)\n",
                    "rendered": {
                      "text": "\tfor _, m := range ignoredMatches {\n\t\tp := pkg.ByID(m.Package.ID, packages)\n\t\tif p == nil {\n\t\t\treturn Document{}, fmt.Errorf(\"unable to find package in collection: %+v\", p)\n\t\t}\n\n\t\tmatchModel, err := newMatch(m.Match, *p, metadataProvider)\n",
                      "markdown": "`\tfor _, m := range ignoredMatches {\n\t\tp := pkg.ByID(m.Package.ID, packages)\n\t\tif p == nil {\n\t\t\treturn Document{}, fmt.Errorf(\"unable to find package in collection: %+v\", p)\n\t\t}\n\n\t\tmatchModel, err := newMatch(m.Match, *p, metadataProvider)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/models/document.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 43,
                  "endLine": 35,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tfor _, m := range matches.Sorted() {\n\t\tp := pkg.ByID(m.Package.ID, packages)\n\t\tif p == nil {\n\t\t\treturn Document{}, fmt.Errorf(\"unable to find package in collection: %+v\", p)\n\t\t}\n\n\t\tmatchModel, err := newMatch(m, *p, metadataProvider)\n",
                    "rendered": {
                      "text": "\tfor _, m := range matches.Sorted() {\n\t\tp := pkg.ByID(m.Package.ID, packages)\n\t\tif p == nil {\n\t\t\treturn Document{}, fmt.Errorf(\"unable to find package in collection: %+v\", p)\n\t\t}\n\n\t\tmatchModel, err := newMatch(m, *p, metadataProvider)\n",
                      "markdown": "`\tfor _, m := range matches.Sorted() {\n\t\tp := pkg.ByID(m.Package.ID, packages)\n\t\tif p == nil {\n\t\t\treturn Document{}, fmt.Errorf(\"unable to find package in collection: %+v\", p)\n\t\t}\n\n\t\tmatchModel, err := newMatch(m, *p, metadataProvider)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/internal/packagemetadata/names_test.go"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 27,
                  "endLine": 26,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tif !assert.ElementsMatch(t, expected, actual) {\n\t\tt.Errorf(\"metadata types not fully represented: \\n%s\", cmp.Diff(expected, actual))\n\t\tt.Log(\"did you add a new pkg.*Metadata type without updating the JSON schema?\")\n\t\tt.Log(\"if so, you need to update the schema version and regenerate the JSON schema (make generate-json-schema)\")\n\t}\n\n\tfor _, ty := range AllTypes() {\n",
                    "rendered": {
                      "text": "\tif !assert.ElementsMatch(t, expected, actual) {\n\t\tt.Errorf(\"metadata types not fully represented: \\n%s\", cmp.Diff(expected, actual))\n\t\tt.Log(\"did you add a new pkg.*Metadata type without updating the JSON schema?\")\n\t\tt.Log(\"if so, you need to update the schema version and regenerate the JSON schema (make generate-json-schema)\")\n\t}\n\n\tfor _, ty := range AllTypes() {\n",
                      "markdown": "`\tif !assert.ElementsMatch(t, expected, actual) {\n\t\tt.Errorf(\"metadata types not fully represented: \\n%s\", cmp.Diff(expected, actual))\n\t\tt.Log(\"did you add a new pkg.*Metadata type without updating the JSON schema?\")\n\t\tt.Log(\"if so, you need to update the schema version and regenerate the JSON schema (make generate-json-schema)\")\n\t}\n\n\tfor _, ty := range AllTypes() {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/deprecated.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 47,
                  "endLine": 47,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\tDistro: d,\n\t})\n\tif err != nil || actualResults == nil {\n\t\tlog.WithFields(\"error\", err).Error(\"unable to find vulnerabilities\")\n\t\treturn match.NewMatches()\n\t}\n\treturn *actualResults\n",
                    "rendered": {
                      "text": "\t\tDistro: d,\n\t})\n\tif err != nil || actualResults == nil {\n\t\tlog.WithFields(\"error\", err).Error(\"unable to find vulnerabilities\")\n\t\treturn match.NewMatches()\n\t}\n\treturn *actualResults\n",
                      "markdown": "`\t\tDistro: d,\n\t})\n\tif err != nil || actualResults == nil {\n\t\tlog.WithFields(\"error\", err).Error(\"unable to find vulnerabilities\")\n\t\treturn match.NewMatches()\n\t}\n\treturn *actualResults\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/vulnerability_matcher_test.go"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 8,
                  "endLine": 317,
                  "snippet": {
                    "text": "\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\t\treturn cp\n\t}\n\n\tactiverecordPkg := pkg.Package{\n\t\tID:      pkg.ID(uuid.NewString()),\n",
                    "rendered": {
                      "text": "\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\t\treturn cp\n\t}\n\n\tactiverecordPkg := pkg.Package{\n\t\tID:      pkg.ID(uuid.NewString()),\n",
                      "markdown": "`\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\t\treturn cp\n\t}\n\n\tactiverecordPkg := pkg.Package{\n\t\tID:      pkg.ID(uuid.NewString()),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/vulnerability_matcher.go"
                },
                "region": {
                  "startLine": 408,
                  "startColumn": 7,
                  "endLine": 409,
                  "snippet": {
                    "text": "\t\t}\n\t}\n\n\treturn diff\n}\n\nfunc newMatcherIndex(matchers []matcher.Matcher) (map[syftPkg.Type][]matcher.Matcher, matcher.Matcher) {\n\tmatcherIndex := make(map[syftPkg.Type][]matcher.Matcher)\n",
                    "rendered": {
                      "text": "\t\t}\n\t}\n\n\treturn diff\n}\n\nfunc newMatcherIndex(matchers []matcher.Matcher) (map[syftPkg.Type][]matcher.Matcher, matcher.Matcher) {\n\tmatcherIndex := make(map[syftPkg.Type][]matcher.Matcher)\n",
                      "markdown": "`\t\t}\n\t}\n\n\treturn diff\n}\n\nfunc newMatcherIndex(matchers []matcher.Matcher) (map[syftPkg.Type][]matcher.Matcher, matcher.Matcher) {\n\tmatcherIndex := make(map[syftPkg.Type][]matcher.Matcher)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/vulnerability_matcher.go"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 2,
                  "endLine": 404,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tvar diff []match.IgnoredMatch\n\tfor _, b := range subject {\n\t\tif _, ok := otherMap[b.Match.Fingerprint()]; !ok {\n\t\t\tdiff = append(diff, b)\n\t\t}\n\t}\n\n",
                    "rendered": {
                      "text": "\tvar diff []match.IgnoredMatch\n\tfor _, b := range subject {\n\t\tif _, ok := otherMap[b.Match.Fingerprint()]; !ok {\n\t\t\tdiff = append(diff, b)\n\t\t}\n\t}\n\n",
                      "markdown": "`\tvar diff []match.IgnoredMatch\n\tfor _, b := range subject {\n\t\tif _, ok := otherMap[b.Match.Fingerprint()]; !ok {\n\t\t\tdiff = append(diff, b)\n\t\t}\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/vulnerability_matcher.go"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 4,
                  "endLine": 401,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\totherMap[a.Match.Fingerprint()] = struct{}{}\n\t}\n\n\tvar diff []match.IgnoredMatch\n\tfor _, b := range subject {\n\t\tif _, ok := otherMap[b.Match.Fingerprint()]; !ok {\n\t\t\tdiff = append(diff, b)\n",
                    "rendered": {
                      "text": "\t\totherMap[a.Match.Fingerprint()] = struct{}{}\n\t}\n\n\tvar diff []match.IgnoredMatch\n\tfor _, b := range subject {\n\t\tif _, ok := otherMap[b.Match.Fingerprint()]; !ok {\n\t\t\tdiff = append(diff, b)\n",
                      "markdown": "`\t\totherMap[a.Match.Fingerprint()] = struct{}{}\n\t}\n\n\tvar diff []match.IgnoredMatch\n\tfor _, b := range subject {\n\t\tif _, ok := otherMap[b.Match.Fingerprint()]; !ok {\n\t\t\tdiff = append(diff, b)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/vulnerability_matcher.go"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 20,
                  "endLine": 348,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\tlog.WithFields(\n\t\t\t\"vuln\", match.Vulnerability.ID,\n\t\t\t\"package\", displayPackage(match.Package),\n\t\t).Trace(\"unable to find CVE record for vulnerability, skipping normalization\")\n\t\treturn match\n\tcase 1:\n\t\tbreak\n",
                    "rendered": {
                      "text": "\t\tlog.WithFields(\n\t\t\t\"vuln\", match.Vulnerability.ID,\n\t\t\t\"package\", displayPackage(match.Package),\n\t\t).Trace(\"unable to find CVE record for vulnerability, skipping normalization\")\n\t\treturn match\n\tcase 1:\n\t\tbreak\n",
                      "markdown": "`\t\tlog.WithFields(\n\t\t\t\"vuln\", match.Vulnerability.ID,\n\t\t\t\"package\", displayPackage(match.Package),\n\t\t).Trace(\"unable to find CVE record for vulnerability, skipping normalization\")\n\t\treturn match\n\tcase 1:\n\t\tbreak\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/vulnerability_matcher.go"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 40,
                  "endLine": 304,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\tlog.Trace(\"finding matches against available VEX documents\")\n\tmatchesAfterVex, ignoredMatchesAfterVex, err := m.VexProcessor.ApplyVEX(&context, remainingMatches, ignoredMatches)\n\tif err != nil {\n\t\treturn nil, nil, fmt.Errorf(\"unable to find matches against VEX documents: %w\", err)\n\t}\n\n\tdiffMatches := matchesAfterVex.Diff(*remainingMatches)\n",
                    "rendered": {
                      "text": "\tlog.Trace(\"finding matches against available VEX documents\")\n\tmatchesAfterVex, ignoredMatchesAfterVex, err := m.VexProcessor.ApplyVEX(&context, remainingMatches, ignoredMatches)\n\tif err != nil {\n\t\treturn nil, nil, fmt.Errorf(\"unable to find matches against VEX documents: %w\", err)\n\t}\n\n\tdiffMatches := matchesAfterVex.Diff(*remainingMatches)\n",
                      "markdown": "`\tlog.Trace(\"finding matches against available VEX documents\")\n\tmatchesAfterVex, ignoredMatchesAfterVex, err := m.VexProcessor.ApplyVEX(&context, remainingMatches, ignoredMatches)\n\tif err != nil {\n\t\treturn nil, nil, fmt.Errorf(\"unable to find matches against VEX documents: %w\", err)\n\t}\n\n\tdiffMatches := matchesAfterVex.Diff(*remainingMatches)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/vulnerability_matcher.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 40,
                  "endLine": 105,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\tlog.Trace(\"finding matches against DB\")\n\tmatches, err := m.searchDBForMatches(context.Distro, pkgs, progressMonitor)\n\tif err != nil {\n\t\treturn nil, nil, fmt.Errorf(\"unable to find matches in DB: %w\", err)\n\t}\n\n\tmatches, ignoredMatches = m.applyIgnoreRules(matches)\n",
                    "rendered": {
                      "text": "\tlog.Trace(\"finding matches against DB\")\n\tmatches, err := m.searchDBForMatches(context.Distro, pkgs, progressMonitor)\n\tif err != nil {\n\t\treturn nil, nil, fmt.Errorf(\"unable to find matches in DB: %w\", err)\n\t}\n\n\tmatches, ignoredMatches = m.applyIgnoreRules(matches)\n",
                      "markdown": "`\tlog.Trace(\"finding matches against DB\")\n\tmatches, err := m.searchDBForMatches(context.Distro, pkgs, progressMonitor)\n\tif err != nil {\n\t\treturn nil, nil, fmt.Errorf(\"unable to find matches in DB: %w\", err)\n\t}\n\n\tmatches, ignoredMatches = m.applyIgnoreRules(matches)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/vulnerability_matcher.go"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 29,
                  "endLine": 83,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n\tremainingMatches, ignoredMatches, err = m.findVEXMatches(context, remainingMatches, ignoredMatches, progressMonitor)\n\tif err != nil {\n\t\terr = fmt.Errorf(\"unable to find matches against VEX sources: %w\", err)\n\t\treturn remainingMatches, ignoredMatches, err\n\t}\n\n",
                    "rendered": {
                      "text": "\n\tremainingMatches, ignoredMatches, err = m.findVEXMatches(context, remainingMatches, ignoredMatches, progressMonitor)\n\tif err != nil {\n\t\terr = fmt.Errorf(\"unable to find matches against VEX sources: %w\", err)\n\t\treturn remainingMatches, ignoredMatches, err\n\t}\n\n",
                      "markdown": "`\n\tremainingMatches, ignoredMatches, err = m.findVEXMatches(context, remainingMatches, ignoredMatches, progressMonitor)\n\tif err != nil {\n\t\terr = fmt.Errorf(\"unable to find matches against VEX sources: %w\", err)\n\t\treturn remainingMatches, ignoredMatches, err\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/load_vulnerability_db.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "endLine": 16,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\treturn nil, nil, nil, err\n\t}\n\n\tif update {\n\t\tlog.Debug(\"looking for vulnerability database updates\")\n\t\t_, err := dbCurator.Update()\n\t\tif err != nil {\n",
                    "rendered": {
                      "text": "\t\treturn nil, nil, nil, err\n\t}\n\n\tif update {\n\t\tlog.Debug(\"looking for vulnerability database updates\")\n\t\t_, err := dbCurator.Update()\n\t\tif err != nil {\n",
                      "markdown": "`\t\treturn nil, nil, nil, err\n\t}\n\n\tif update {\n\t\tlog.Debug(\"looking for vulnerability database updates\")\n\t\t_, err := dbCurator.Update()\n\t\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/load_vulnerability_db.go"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 49,
                  "endLine": 10,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\t\"github.com/anchore/grype/internal/log\"\n)\n\nfunc LoadVulnerabilityDB(cfg distribution.Config, update bool) (*store.Store, *distribution.Status, *db.Closer, error) {\n\tdbCurator, err := distribution.NewCurator(cfg)\n\tif err != nil {\n\t\treturn nil, nil, nil, err\n",
                    "rendered": {
                      "text": "\t\"github.com/anchore/grype/internal/log\"\n)\n\nfunc LoadVulnerabilityDB(cfg distribution.Config, update bool) (*store.Store, *distribution.Status, *db.Closer, error) {\n\tdbCurator, err := distribution.NewCurator(cfg)\n\tif err != nil {\n\t\treturn nil, nil, nil, err\n",
                      "markdown": "`\t\"github.com/anchore/grype/internal/log\"\n)\n\nfunc LoadVulnerabilityDB(cfg distribution.Config, update bool) (*store.Store, *distribution.Status, *db.Closer, error) {\n\tdbCurator, err := distribution.NewCurator(cfg)\n\tif err != nil {\n\t\treturn nil, nil, nil, err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/templates/html.tmpl"
                },
                "region": {
                  "startLine": 514,
                  "startColumn": 33,
                  "endLine": 514,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\r\n            // Update the content of the div with formatted date and time\r\n            document.getElementById(\"dateElement\").textContent =\r\n                formattedDate + \" at \" + formattedTime;\r\n        }\r\n        function initializeDataTable() {\r\n            var table = $('#vulnerabilityTable').DataTable({\r\n",
                    "rendered": {
                      "text": "\r\n            // Update the content of the div with formatted date and time\r\n            document.getElementById(\"dateElement\").textContent =\r\n                formattedDate + \" at \" + formattedTime;\r\n        }\r\n        function initializeDataTable() {\r\n            var table = $('#vulnerabilityTable').DataTable({\r\n",
                      "markdown": "`\r\n            // Update the content of the div with formatted date and time\r\n            document.getElementById(\"dateElement\").textContent =\r\n                formattedDate + \" at \" + formattedTime;\r\n        }\r\n        function initializeDataTable() {\r\n            var table = $('#vulnerabilityTable').DataTable({\r\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/templates/html.tmpl"
                },
                "region": {
                  "startLine": 512,
                  "startColumn": 14,
                  "endLine": 512,
                  "endColumn": 22,
                  "snippet": {
                    "text": "                hour12: true, // Use AM/PM\r\n            });\r\n\r\n            // Update the content of the div with formatted date and time\r\n            document.getElementById(\"dateElement\").textContent =\r\n                formattedDate + \" at \" + formattedTime;\r\n        }\r\n",
                    "rendered": {
                      "text": "                hour12: true, // Use AM/PM\r\n            });\r\n\r\n            // Update the content of the div with formatted date and time\r\n            document.getElementById(\"dateElement\").textContent =\r\n                formattedDate + \" at \" + formattedTime;\r\n        }\r\n",
                      "markdown": "`                hour12: true, // Use AM/PM\r\n            });\r\n\r\n            // Update the content of the div with formatted date and time\r\n            document.getElementById(\"dateElement\").textContent =\r\n                formattedDate + \" at \" + formattedTime;\r\n        }\r\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/templates/html.tmpl"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 14,
                  "endLine": 174,
                  "endColumn": 23,
                  "snippet": {
                    "text": "            /* Adds depth on hover */\r\n        }\r\n    </style>\r\n    <!-- Table Control & Datatables Wrapper -->\r\n    <style>\r\n        .dataTables_wrapper {\r\n            display: flex;\r\n",
                    "rendered": {
                      "text": "            /* Adds depth on hover */\r\n        }\r\n    </style>\r\n    <!-- Table Control & Datatables Wrapper -->\r\n    <style>\r\n        .dataTables_wrapper {\r\n            display: flex;\r\n",
                      "markdown": "`            /* Adds depth on hover */\r\n        }\r\n    </style>\r\n    <!-- Table Control & Datatables Wrapper -->\r\n    <style>\r\n        .dataTables_wrapper {\r\n            display: flex;\r\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/templates/html.tmpl"
                },
                "region": {
                  "startLine": 512,
                  "startColumn": 68,
                  "endLine": 512,
                  "endColumn": 74,
                  "snippet": {
                    "text": "                hour12: true, // Use AM/PM\r\n            });\r\n\r\n            // Update the content of the div with formatted date and time\r\n            document.getElementById(\"dateElement\").textContent =\r\n                formattedDate + \" at \" + formattedTime;\r\n        }\r\n",
                    "rendered": {
                      "text": "                hour12: true, // Use AM/PM\r\n            });\r\n\r\n            // Update the content of the div with formatted date and time\r\n            document.getElementById(\"dateElement\").textContent =\r\n                formattedDate + \" at \" + formattedTime;\r\n        }\r\n",
                      "markdown": "`                hour12: true, // Use AM/PM\r\n            });\r\n\r\n            // Update the content of the div with formatted date and time\r\n            document.getElementById(\"dateElement\").textContent =\r\n                formattedDate + \" at \" + formattedTime;\r\n        }\r\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/templates/html.tmpl"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 17,
                  "endLine": 299,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        }\r\n\r\n        /* Dont use a list format for the fixed-in column */\r\n        .fixed-in ul {\r\n            list-style-type: none;\r\n            /* Removes bullet points */\r\n            padding: 0;\r\n",
                    "rendered": {
                      "text": "        }\r\n\r\n        /* Dont use a list format for the fixed-in column */\r\n        .fixed-in ul {\r\n            list-style-type: none;\r\n            /* Removes bullet points */\r\n            padding: 0;\r\n",
                      "markdown": "`        }\r\n\r\n        /* Dont use a list format for the fixed-in column */\r\n        .fixed-in ul {\r\n            list-style-type: none;\r\n            /* Removes bullet points */\r\n            padding: 0;\r\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/templates/html.tmpl"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 14,
                  "endLine": 235,
                  "endColumn": 22,
                  "snippet": {
                    "text": "            background-color: #0056b3;\r\n        }\r\n\r\n        @media screen and (max-width: 768px) {\r\n\r\n            .dataTables_wrapper .dt-buttons,\r\n            .dataTables_wrapper .dataTables_filter {\r\n",
                    "rendered": {
                      "text": "            background-color: #0056b3;\r\n        }\r\n\r\n        @media screen and (max-width: 768px) {\r\n\r\n            .dataTables_wrapper .dt-buttons,\r\n            .dataTables_wrapper .dataTables_filter {\r\n",
                      "markdown": "`            background-color: #0056b3;\r\n        }\r\n\r\n        @media screen and (max-width: 768px) {\r\n\r\n            .dataTables_wrapper .dt-buttons,\r\n            .dataTables_wrapper .dataTables_filter {\r\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/templates/README.md"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 33,
                  "endLine": 5,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\nThis folder contains a set of \"helper\" go templates you can use for your own reports.\n\nPlease feel free to extend and/or update the templates for your needs, be sure to contribute back into this folder any new templates!\n\nCurrent templates:\n\n",
                    "rendered": {
                      "text": "\nThis folder contains a set of \"helper\" go templates you can use for your own reports.\n\nPlease feel free to extend and/or update the templates for your needs, be sure to contribute back into this folder any new templates!\n\nCurrent templates:\n\n",
                      "markdown": "`\nThis folder contains a set of \"helper\" go templates you can use for your own reports.\n\nPlease feel free to extend and/or update the templates for your needs, be sure to contribute back into this folder any new templates!\n\nCurrent templates:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/templates/README.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 10,
                  "endLine": 30,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n## HTML\n\nProduces a nice html template with a dynamic table using datatables.js.\n\nYou can also modify the templating filter to limit the output to a subset.\n\n",
                    "rendered": {
                      "text": "\n## HTML\n\nProduces a nice html template with a dynamic table using datatables.js.\n\nYou can also modify the templating filter to limit the output to a subset.\n\n",
                      "markdown": "`\n## HTML\n\nProduces a nice html template with a dynamic table using datatables.js.\n\nYou can also modify the templating filter to limit the output to a subset.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 94,
                  "endLine": 6,
                  "endColumn": 99,
                  "snippet": {
                    "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n",
                    "rendered": {
                      "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n",
                      "markdown": "`\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 67,
                  "endLine": 6,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n",
                    "rendered": {
                      "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n",
                      "markdown": "`\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 60,
                  "endLine": 6,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n",
                    "rendered": {
                      "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n",
                      "markdown": "`\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 41,
                  "endLine": 6,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n",
                    "rendered": {
                      "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n",
                      "markdown": "`\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n",
                    "rendered": {
                      "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n",
                      "markdown": "`\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | tee /dev/stderr | md5sum | tee cache.fingerprint && echo \"$(INTEGRATION_CACHE_BUSTER)\" >> cache.fingerprint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/match_by_image_test.go"
                },
                "region": {
                  "startLine": 947,
                  "startColumn": 48,
                  "endLine": 947,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t}),\n\t}\n\n\tif diff := cmp.Diff(expected, actual, opts...); diff != \"\" {\n\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n",
                    "rendered": {
                      "text": "\t\t}),\n\t}\n\n\tif diff := cmp.Diff(expected, actual, opts...); diff != \"\" {\n\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n",
                      "markdown": "`\t\t}),\n\t}\n\n\tif diff := cmp.Diff(expected, actual, opts...); diff != \"\" {\n\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/match_by_image_test.go"
                },
                "region": {
                  "startLine": 947,
                  "startColumn": 3,
                  "endLine": 947,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t}),\n\t}\n\n\tif diff := cmp.Diff(expected, actual, opts...); diff != \"\" {\n\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n",
                    "rendered": {
                      "text": "\t\t}),\n\t}\n\n\tif diff := cmp.Diff(expected, actual, opts...); diff != \"\" {\n\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n",
                      "markdown": "`\t\t}),\n\t}\n\n\tif diff := cmp.Diff(expected, actual, opts...); diff != \"\" {\n\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/image-java-subprocess/Dockerfile"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 15,
                  "endLine": 3,
                  "endColumn": 4,
                  "snippet": {
                    "text": "FROM openjdk:15-slim-buster@sha256:1e069bf1c5c23adde58b29b82281b862e473d698ce7cc4e164194a0a2a1c044a\nCOPY app.java /\nENV PATH=\"/app/bin:${PATH}\"\nWORKDIR /\n",
                    "rendered": {
                      "text": "FROM openjdk:15-slim-buster@sha256:1e069bf1c5c23adde58b29b82281b862e473d698ce7cc4e164194a0a2a1c044a\nCOPY app.java /\nENV PATH=\"/app/bin:${PATH}\"\nWORKDIR /\n",
                      "markdown": "`FROM openjdk:15-slim-buster@sha256:1e069bf1c5c23adde58b29b82281b862e473d698ce7cc4e164194a0a2a1c044a\nCOPY app.java /\nENV PATH=\"/app/bin:${PATH}\"\nWORKDIR /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 76,
                  "endLine": 6,
                  "endColumn": 81,
                  "snippet": {
                    "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum | tee cache.fingerprint && echo \"$(CLI_CACHE_BUSTER)\" >> cache.fingerprint\n",
                    "rendered": {
                      "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum | tee cache.fingerprint && echo \"$(CLI_CACHE_BUSTER)\" >> cache.fingerprint\n",
                      "markdown": "`\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum | tee cache.fingerprint && echo \"$(CLI_CACHE_BUSTER)\" >> cache.fingerprint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 60,
                  "endLine": 6,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum | tee cache.fingerprint && echo \"$(CLI_CACHE_BUSTER)\" >> cache.fingerprint\n",
                    "rendered": {
                      "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum | tee cache.fingerprint && echo \"$(CLI_CACHE_BUSTER)\" >> cache.fingerprint\n",
                      "markdown": "`\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum | tee cache.fingerprint && echo \"$(CLI_CACHE_BUSTER)\" >> cache.fingerprint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 41,
                  "endLine": 6,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum | tee cache.fingerprint && echo \"$(CLI_CACHE_BUSTER)\" >> cache.fingerprint\n",
                    "rendered": {
                      "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum | tee cache.fingerprint && echo \"$(CLI_CACHE_BUSTER)\" >> cache.fingerprint\n",
                      "markdown": "`\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum | tee cache.fingerprint && echo \"$(CLI_CACHE_BUSTER)\" >> cache.fingerprint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum | tee cache.fingerprint && echo \"$(CLI_CACHE_BUSTER)\" >> cache.fingerprint\n",
                    "rendered": {
                      "text": "\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum | tee cache.fingerprint && echo \"$(CLI_CACHE_BUSTER)\" >> cache.fingerprint\n",
                      "markdown": "`\n.PHONY: cache.fingerprint\ncache.fingerprint:\n\tfind image-* -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum | tee cache.fingerprint && echo \"$(CLI_CACHE_BUSTER)\" >> cache.fingerprint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-ubuntu-20.04--pruned.json"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 41,
                  "endLine": 107,
                  "endColumn": 49,
                  "snippet": {
                    "text": "            \"md5\": \"460b6a1df2db2b5e80f05a44ec21c62f\"\n          },\n          {\n            \"path\": \"/usr/share/man/man1/hostname.1.gz\",\n            \"md5\": \"62e6be6a928b4b9f2a985778fee171fd\"\n          }\n        ]\n",
                    "rendered": {
                      "text": "            \"md5\": \"460b6a1df2db2b5e80f05a44ec21c62f\"\n          },\n          {\n            \"path\": \"/usr/share/man/man1/hostname.1.gz\",\n            \"md5\": \"62e6be6a928b4b9f2a985778fee171fd\"\n          }\n        ]\n",
                      "markdown": "`            \"md5\": \"460b6a1df2db2b5e80f05a44ec21c62f\"\n          },\n          {\n            \"path\": \"/usr/share/man/man1/hostname.1.gz\",\n            \"md5\": \"62e6be6a928b4b9f2a985778fee171fd\"\n          }\n        ]\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-ubuntu-20.04--pruned.json"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 36,
                  "endLine": 103,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            \"md5\": \"087a3eabd7427692c216a5d7a4341127\"\n          },\n          {\n            \"path\": \"/usr/share/doc/hostname/copyright\",\n            \"md5\": \"460b6a1df2db2b5e80f05a44ec21c62f\"\n          },\n          {\n",
                    "rendered": {
                      "text": "            \"md5\": \"087a3eabd7427692c216a5d7a4341127\"\n          },\n          {\n            \"path\": \"/usr/share/doc/hostname/copyright\",\n            \"md5\": \"460b6a1df2db2b5e80f05a44ec21c62f\"\n          },\n          {\n",
                      "markdown": "`            \"md5\": \"087a3eabd7427692c216a5d7a4341127\"\n          },\n          {\n            \"path\": \"/usr/share/doc/hostname/copyright\",\n            \"md5\": \"460b6a1df2db2b5e80f05a44ec21c62f\"\n          },\n          {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-ubuntu-20.04--pruned.json"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 36,
                  "endLine": 99,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            \"md5\": \"1ce73d718e3dccc1aaa7bce6ae2ef0a7\"\n          },\n          {\n            \"path\": \"/usr/share/doc/hostname/changelog.gz\",\n            \"md5\": \"087a3eabd7427692c216a5d7a4341127\"\n          },\n          {\n",
                    "rendered": {
                      "text": "            \"md5\": \"1ce73d718e3dccc1aaa7bce6ae2ef0a7\"\n          },\n          {\n            \"path\": \"/usr/share/doc/hostname/changelog.gz\",\n            \"md5\": \"087a3eabd7427692c216a5d7a4341127\"\n          },\n          {\n",
                      "markdown": "`            \"md5\": \"1ce73d718e3dccc1aaa7bce6ae2ef0a7\"\n          },\n          {\n            \"path\": \"/usr/share/doc/hostname/changelog.gz\",\n            \"md5\": \"087a3eabd7427692c216a5d7a4341127\"\n          },\n          {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-ubuntu-20.04--pruned.json"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 26,
                  "endLine": 95,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        \"installedSize\": 54,\n        \"files\": [\n          {\n            \"path\": \"/bin/hostname\",\n            \"md5\": \"1ce73d718e3dccc1aaa7bce6ae2ef0a7\"\n          },\n          {\n",
                    "rendered": {
                      "text": "        \"installedSize\": 54,\n        \"files\": [\n          {\n            \"path\": \"/bin/hostname\",\n            \"md5\": \"1ce73d718e3dccc1aaa7bce6ae2ef0a7\"\n          },\n          {\n",
                      "markdown": "`        \"installedSize\": 54,\n        \"files\": [\n          {\n            \"path\": \"/bin/hostname\",\n            \"md5\": \"1ce73d718e3dccc1aaa7bce6ae2ef0a7\"\n          },\n          {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-ubuntu-20.04--pruned.json"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 20,
                  "endLine": 86,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n      \"metadata\": {\n        \"package\": \"hostname\",\n        \"source\": \"\",\n        \"version\": \"3.23\",\n        \"sourceVersion\": \"\",\n",
                    "rendered": {
                      "text": "      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n      \"metadata\": {\n        \"package\": \"hostname\",\n        \"source\": \"\",\n        \"version\": \"3.23\",\n        \"sourceVersion\": \"\",\n",
                      "markdown": "`      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n      \"metadata\": {\n        \"package\": \"hostname\",\n        \"source\": \"\",\n        \"version\": \"3.23\",\n        \"sourceVersion\": \"\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-ubuntu-20.04--pruned.json"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 30,
                  "endLine": 83,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n      \"metadata\": {\n        \"package\": \"hostname\",\n",
                    "rendered": {
                      "text": "        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n      \"metadata\": {\n        \"package\": \"hostname\",\n",
                      "markdown": "`        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n      \"metadata\": {\n        \"package\": \"hostname\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-ubuntu-20.04--pruned.json"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 21,
                  "endLine": 81,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n",
                    "rendered": {
                      "text": "      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n",
                      "markdown": "`      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-ubuntu-20.04--pruned.json"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 28,
                  "endLine": 80,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      \"licenses\": [],\n      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n",
                    "rendered": {
                      "text": "      \"licenses\": [],\n      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n",
                      "markdown": "`      \"licenses\": [],\n      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-ubuntu-20.04--pruned.json"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 19,
                  "endLine": 80,
                  "endColumn": 27,
                  "snippet": {
                    "text": "      \"licenses\": [],\n      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n",
                    "rendered": {
                      "text": "      \"licenses\": [],\n      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n",
                      "markdown": "`      \"licenses\": [],\n      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-ubuntu-20.04--pruned.json"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 34,
                  "endLine": 73,
                  "endColumn": 42,
                  "snippet": {
                    "text": "          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n          \"path\": \"/usr/share/doc/hostname/copyright\",\n          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        }\n      ],\n",
                    "rendered": {
                      "text": "          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n          \"path\": \"/usr/share/doc/hostname/copyright\",\n          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        }\n      ],\n",
                      "markdown": "`          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n          \"path\": \"/usr/share/doc/hostname/copyright\",\n          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        }\n      ],\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-ubuntu-20.04--pruned.json"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 38,
                  "endLine": 69,
                  "endColumn": 46,
                  "snippet": {
                    "text": "          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n          \"path\": \"/var/lib/dpkg/info/hostname.md5sums\",\n          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n",
                    "rendered": {
                      "text": "          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n          \"path\": \"/var/lib/dpkg/info/hostname.md5sums\",\n          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n",
                      "markdown": "`          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n          \"path\": \"/var/lib/dpkg/info/hostname.md5sums\",\n          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-ubuntu-20.04--pruned.json"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 15,
                  "endLine": 59,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      }\n    },\n    {\n      \"name\": \"hostname\",\n      \"version\": \"3.23\",\n      \"type\": \"deb\",\n      \"foundBy\": \"dpkgdb-cataloger\",\n",
                    "rendered": {
                      "text": "      }\n    },\n    {\n      \"name\": \"hostname\",\n      \"version\": \"3.23\",\n      \"type\": \"deb\",\n      \"foundBy\": \"dpkgdb-cataloger\",\n",
                      "markdown": "`      }\n    },\n    {\n      \"name\": \"hostname\",\n      \"version\": \"3.23\",\n      \"type\": \"deb\",\n      \"foundBy\": \"dpkgdb-cataloger\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-quality-gate-db.yml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 45,
                  "endLine": 26,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f #v7.0.5\n        with:\n",
                    "rendered": {
                      "text": "        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f #v7.0.5\n        with:\n",
                      "markdown": "`        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f #v7.0.5\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-quality-gate-db.yml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 10,
                  "endLine": 26,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f #v7.0.5\n        with:\n",
                    "rendered": {
                      "text": "        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f #v7.0.5\n        with:\n",
                      "markdown": "`        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f #v7.0.5\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-quality-gate-db.yml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 53,
                  "endLine": 37,
                  "endColumn": 61,
                  "snippet": {
                    "text": "          commit-message: 'test: update quality gate db to latest version'\n          title: 'test: update quality gate db to latest version'\n          body: |\n            This is an auto-generated pull request to update the quality gate db to latest version\n          token: ${{ steps.generate-token.outputs.token }}\n",
                    "rendered": {
                      "text": "          commit-message: 'test: update quality gate db to latest version'\n          title: 'test: update quality gate db to latest version'\n          body: |\n            This is an auto-generated pull request to update the quality gate db to latest version\n          token: ${{ steps.generate-token.outputs.token }}\n",
                      "markdown": "`          commit-message: 'test: update quality gate db to latest version'\n          title: 'test: update quality gate db to latest version'\n          body: |\n            This is an auto-generated pull request to update the quality gate db to latest version\n          token: ${{ steps.generate-token.outputs.token }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-quality-gate-db.yml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 23,
                  "endLine": 35,
                  "endColumn": 31,
                  "snippet": {
                    "text": "          branch: auto/update-quality-test-db\n          labels: test, changelog-ignore\n          commit-message: 'test: update quality gate db to latest version'\n          title: 'test: update quality gate db to latest version'\n          body: |\n            This is an auto-generated pull request to update the quality gate db to latest version\n          token: ${{ steps.generate-token.outputs.token }}\n",
                    "rendered": {
                      "text": "          branch: auto/update-quality-test-db\n          labels: test, changelog-ignore\n          commit-message: 'test: update quality gate db to latest version'\n          title: 'test: update quality gate db to latest version'\n          body: |\n            This is an auto-generated pull request to update the quality gate db to latest version\n          token: ${{ steps.generate-token.outputs.token }}\n",
                      "markdown": "`          branch: auto/update-quality-test-db\n          labels: test, changelog-ignore\n          commit-message: 'test: update quality gate db to latest version'\n          title: 'test: update quality gate db to latest version'\n          body: |\n            This is an auto-generated pull request to update the quality gate db to latest version\n          token: ${{ steps.generate-token.outputs.token }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-quality-gate-db.yml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 32,
                  "endLine": 34,
                  "endColumn": 40,
                  "snippet": {
                    "text": "          delete-branch: true\n          branch: auto/update-quality-test-db\n          labels: test, changelog-ignore\n          commit-message: 'test: update quality gate db to latest version'\n          title: 'test: update quality gate db to latest version'\n          body: |\n            This is an auto-generated pull request to update the quality gate db to latest version\n",
                    "rendered": {
                      "text": "          delete-branch: true\n          branch: auto/update-quality-test-db\n          labels: test, changelog-ignore\n          commit-message: 'test: update quality gate db to latest version'\n          title: 'test: update quality gate db to latest version'\n          body: |\n            This is an auto-generated pull request to update the quality gate db to latest version\n",
                      "markdown": "`          delete-branch: true\n          branch: auto/update-quality-test-db\n          labels: test, changelog-ignore\n          commit-message: 'test: update quality gate db to latest version'\n          title: 'test: update quality gate db to latest version'\n          body: |\n            This is an auto-generated pull request to update the quality gate db to latest version\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/validations.yaml"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 59,
                  "endLine": 203,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n\n  Cli-Linux:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"CLI tests (Linux)\"\n    needs: [Build-Snapshot-Artifacts]\n    runs-on: ubuntu-20.04\n",
                    "rendered": {
                      "text": "\n\n  Cli-Linux:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"CLI tests (Linux)\"\n    needs: [Build-Snapshot-Artifacts]\n    runs-on: ubuntu-20.04\n",
                      "markdown": "`\n\n  Cli-Linux:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"CLI tests (Linux)\"\n    needs: [Build-Snapshot-Artifacts]\n    runs-on: ubuntu-20.04\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/validations.yaml"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 59,
                  "endLine": 175,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        run: make install-test-cache-save\n\n  Acceptance-Mac:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Acceptance tests (Mac)\"\n    needs: [Build-Snapshot-Artifacts]\n    runs-on: macos-latest\n",
                    "rendered": {
                      "text": "        run: make install-test-cache-save\n\n  Acceptance-Mac:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Acceptance tests (Mac)\"\n    needs: [Build-Snapshot-Artifacts]\n    runs-on: macos-latest\n",
                      "markdown": "`        run: make install-test-cache-save\n\n  Acceptance-Mac:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Acceptance tests (Mac)\"\n    needs: [Build-Snapshot-Artifacts]\n    runs-on: macos-latest\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/validations.yaml"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 59,
                  "endLine": 143,
                  "endColumn": 67,
                  "snippet": {
                    "text": "          key: snapshot-build-${{ github.run_id }}\n\n  Acceptance-Linux:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Acceptance tests (Linux)\"\n    needs: [Build-Snapshot-Artifacts]\n    runs-on: ubuntu-20.04\n",
                    "rendered": {
                      "text": "          key: snapshot-build-${{ github.run_id }}\n\n  Acceptance-Linux:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Acceptance tests (Linux)\"\n    needs: [Build-Snapshot-Artifacts]\n    runs-on: ubuntu-20.04\n",
                      "markdown": "`          key: snapshot-build-${{ github.run_id }}\n\n  Acceptance-Linux:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Acceptance tests (Linux)\"\n    needs: [Build-Snapshot-Artifacts]\n    runs-on: ubuntu-20.04\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/validations.yaml"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 59,
                  "endLine": 96,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n\n  Integration-Test:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Integration tests\"\n    runs-on: ubuntu-20.04\n    steps:\n",
                    "rendered": {
                      "text": "\n\n  Integration-Test:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Integration tests\"\n    runs-on: ubuntu-20.04\n    steps:\n",
                      "markdown": "`\n\n  Integration-Test:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Integration tests\"\n    runs-on: ubuntu-20.04\n    steps:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/validations.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 59,
                  "endLine": 41,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        run: make unit\n\n  Quality-Test:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Quality tests\"\n    runs-on: ubuntu-22.04-4core-16gb\n    steps:\n",
                    "rendered": {
                      "text": "        run: make unit\n\n  Quality-Test:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Quality tests\"\n    runs-on: ubuntu-22.04-4core-16gb\n    steps:\n",
                      "markdown": "`        run: make unit\n\n  Quality-Test:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Quality tests\"\n    runs-on: ubuntu-22.04-4core-16gb\n    steps:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/validations.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 59,
                  "endLine": 28,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        run: make static-analysis\n\n  Unit-Test:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Unit tests\"\n    runs-on: ubuntu-20.04\n    steps:\n",
                    "rendered": {
                      "text": "        run: make static-analysis\n\n  Unit-Test:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Unit tests\"\n    runs-on: ubuntu-20.04\n    steps:\n",
                      "markdown": "`        run: make static-analysis\n\n  Unit-Test:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Unit tests\"\n    runs-on: ubuntu-20.04\n    steps:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/validations.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 59,
                  "endLine": 15,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\njobs:\n  Static-Analysis:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Static analysis\"\n    runs-on: ubuntu-20.04\n    steps:\n",
                    "rendered": {
                      "text": "\njobs:\n  Static-Analysis:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Static analysis\"\n    runs-on: ubuntu-20.04\n    steps:\n",
                      "markdown": "`\njobs:\n  Static-Analysis:\n    # Note: changing this job name requires making the same update in the .github/workflows/release.yaml pipeline\n    name: \"Static analysis\"\n    runs-on: ubuntu-20.04\n    steps:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/validations.yaml"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 21,
                  "endLine": 191,
                  "endColumn": 29,
                  "snippet": {
                    "text": "          path: snapshot\n          key: snapshot-build-${{ github.run_id }}\n\n      - name: Restore docker image cache for compare testing\n        id: mac-compare-testing-cache\n        uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 #v4.1.1\n        with:\n",
                    "rendered": {
                      "text": "          path: snapshot\n          key: snapshot-build-${{ github.run_id }}\n\n      - name: Restore docker image cache for compare testing\n        id: mac-compare-testing-cache\n        uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 #v4.1.1\n        with:\n",
                      "markdown": "`          path: snapshot\n          key: snapshot-build-${{ github.run_id }}\n\n      - name: Restore docker image cache for compare testing\n        id: mac-compare-testing-cache\n        uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 #v4.1.1\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/validations.yaml"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 32,
                  "endLine": 83,
                  "endColumn": 37,
                  "snippet": {
                    "text": "          \\`\\`\\`bash\n          # copy the archive to the tests/quality directory\n          cd test/quality\n          unzip $ARCHIVE_NAME && tar -xzf $ARCHIVE_BASENAME.tar.gz\n          \\`\\`\\`\n\n          Now you can debug the with yardstick:\n",
                    "rendered": {
                      "text": "          \\`\\`\\`bash\n          # copy the archive to the tests/quality directory\n          cd test/quality\n          unzip $ARCHIVE_NAME && tar -xzf $ARCHIVE_BASENAME.tar.gz\n          \\`\\`\\`\n\n          Now you can debug the with yardstick:\n",
                      "markdown": "`          \\`\\`\\`bash\n          # copy the archive to the tests/quality directory\n          cd test/quality\n          unzip $ARCHIVE_NAME && tar -xzf $ARCHIVE_BASENAME.tar.gz\n          \\`\\`\\`\n\n          Now you can debug the with yardstick:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/validations.yaml"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 9,
                  "endLine": 74,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          ARCHIVE_BASENAME=qg-capture-state\n          ARCHIVE_NAME=$ARCHIVE_BASENAME.zip\n\n          cat << EOF >> $GITHUB_STEP_SUMMARY\n          ## Troubleshooting failed run\n\n          Download the artifact from this workflow run: \\`$ARCHIVE_NAME\\`\n",
                    "rendered": {
                      "text": "          ARCHIVE_BASENAME=qg-capture-state\n          ARCHIVE_NAME=$ARCHIVE_BASENAME.zip\n\n          cat << EOF >> $GITHUB_STEP_SUMMARY\n          ## Troubleshooting failed run\n\n          Download the artifact from this workflow run: \\`$ARCHIVE_NAME\\`\n",
                      "markdown": "`          ARCHIVE_BASENAME=qg-capture-state\n          ARCHIVE_NAME=$ARCHIVE_BASENAME.zip\n\n          cat << EOF >> $GITHUB_STEP_SUMMARY\n          ## Troubleshooting failed run\n\n          Download the artifact from this workflow run: \\`$ARCHIVE_NAME\\`\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/validations.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 12,
                  "endLine": 59,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n      - name: Archive the provider state\n        if: ${{ failure() }}\n        run: tar -czvf qg-capture-state.tar.gz -C test/quality --exclude tools --exclude labels .yardstick.yaml .yardstick\n\n      - name: Upload the provider state archive\n        if: ${{ failure() }}\n",
                    "rendered": {
                      "text": "\n      - name: Archive the provider state\n        if: ${{ failure() }}\n        run: tar -czvf qg-capture-state.tar.gz -C test/quality --exclude tools --exclude labels .yardstick.yaml .yardstick\n\n      - name: Upload the provider state archive\n        if: ${{ failure() }}\n",
                      "markdown": "`\n      - name: Archive the provider state\n        if: ${{ failure() }}\n        run: tar -czvf qg-capture-state.tar.gz -C test/quality --exclude tools --exclude labels .yardstick.yaml .yardstick\n\n      - name: Upload the provider state archive\n        if: ${{ failure() }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 49,
                  "endLine": 18,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\nThis release process itself should be as automated as possible, and has only a few steps:\n\n1. **Trigger a new release with `make release`**. At this point you'll see a preview\n   changelog in the terminal. If you're happy with the changelog, press `y` to continue, otherwise\n   you can abort and adjust the labels on the PRs and issues to be included in the release and\n   re-run the release trigger command.\n",
                    "rendered": {
                      "text": "\nThis release process itself should be as automated as possible, and has only a few steps:\n\n1. **Trigger a new release with `make release`**. At this point you'll see a preview\n   changelog in the terminal. If you're happy with the changelog, press `y` to continue, otherwise\n   you can abort and adjust the labels on the PRs and issues to be included in the release and\n   re-run the release trigger command.\n",
                      "markdown": "`\nThis release process itself should be as automated as possible, and has only a few steps:\n\n1. **Trigger a new release with `make release`**. At this point you'll see a preview\n   changelog in the terminal. If you're happy with the changelog, press `y` to continue, otherwise\n   you can abort and adjust the labels on the PRs and issues to be included in the release and\n   re-run the release trigger command.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 45,
                  "endLine": 36,
                  "endColumn": 50,
                  "snippet": {
                    "text": "- Revert the brew formula in [`anchore/homebrew-grype`](https://github.com/anchore/homebrew-grype) to point to the previous release\n- Add a new `retract` entry in the go.mod for the versioned release\n\n**Note**: do not delete release tags from the git repository since there may already be references to the release\nin the go proxy, which will cause confusion when trying to reuse the tag later (the H1 hash will not match and there\nwill be a warning when users try to pull the new release).\n\n",
                    "rendered": {
                      "text": "- Revert the brew formula in [`anchore/homebrew-grype`](https://github.com/anchore/homebrew-grype) to point to the previous release\n- Add a new `retract` entry in the go.mod for the versioned release\n\n**Note**: do not delete release tags from the git repository since there may already be references to the release\nin the go proxy, which will cause confusion when trying to reuse the tag later (the H1 hash will not match and there\nwill be a warning when users try to pull the new release).\n\n",
                      "markdown": "`- Revert the brew formula in [`anchore/homebrew-grype`](https://github.com/anchore/homebrew-grype) to point to the previous release\n- Add a new `retract` entry in the go.mod for the versioned release\n\n**Note**: do not delete release tags from the git repository since there may already be references to the release\nin the go proxy, which will cause confusion when trying to reuse the tag later (the H1 hash will not match and there\nwill be a warning when users try to pull the new release).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 11,
                  "endLine": 32,
                  "endColumn": 19,
                  "snippet": {
                    "text": "If a release is found to be problematic, it can be retracted with the following steps:\n\n- Deleting the GitHub Release\n- Untag the docker images in the `ghcr.io` and `docker.io` registries\n- Revert the brew formula in [`anchore/homebrew-grype`](https://github.com/anchore/homebrew-grype) to point to the previous release\n- Add a new `retract` entry in the go.mod for the versioned release\n\n",
                    "rendered": {
                      "text": "If a release is found to be problematic, it can be retracted with the following steps:\n\n- Deleting the GitHub Release\n- Untag the docker images in the `ghcr.io` and `docker.io` registries\n- Revert the brew formula in [`anchore/homebrew-grype`](https://github.com/anchore/homebrew-grype) to point to the previous release\n- Add a new `retract` entry in the go.mod for the versioned release\n\n",
                      "markdown": "`If a release is found to be problematic, it can be retracted with the following steps:\n\n- Deleting the GitHub Release\n- Untag the docker images in the `ghcr.io` and `docker.io` registries\n- Revert the brew formula in [`anchore/homebrew-grype`](https://github.com/anchore/homebrew-grype) to point to the previous release\n- Add a new `retract` entry in the go.mod for the versioned release\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 6,
                  "endColumn": 9,
                  "snippet": {
                    "text": "A release of grype comprises:\n- a new semver git tag from the current tip of the main branch\n- a new [github release](https://github.com/anchore/grype/releases) with a changelog and archived binary assets\n- docker images published to `ghcr.io` and `dockerhub`, including multi architecture images + manifest\n- [`anchore/homebrew-grype`](https://github.com/anchore/homebrew-grype) tap updated to point to assets in the latest github release\n\nIdeally releasing should be done often with small increments when possible. Unless a\n",
                    "rendered": {
                      "text": "A release of grype comprises:\n- a new semver git tag from the current tip of the main branch\n- a new [github release](https://github.com/anchore/grype/releases) with a changelog and archived binary assets\n- docker images published to `ghcr.io` and `dockerhub`, including multi architecture images + manifest\n- [`anchore/homebrew-grype`](https://github.com/anchore/homebrew-grype) tap updated to point to assets in the latest github release\n\nIdeally releasing should be done often with small increments when possible. Unless a\n",
                      "markdown": "`A release of grype comprises:\n- a new semver git tag from the current tip of the main branch\n- a new [github release](https://github.com/anchore/grype/releases) with a changelog and archived binary assets\n- docker images published to `ghcr.io` and `dockerhub`, including multi architecture images + manifest\n- [`anchore/homebrew-grype`](https://github.com/anchore/homebrew-grype) tap updated to point to assets in the latest github release\n\nIdeally releasing should be done often with small increments when possible. Unless a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 14,
                  "endLine": 4,
                  "endColumn": 19,
                  "snippet": {
                    "text": "# Release\n\nA release of grype comprises:\n- a new semver git tag from the current tip of the main branch\n- a new [github release](https://github.com/anchore/grype/releases) with a changelog and archived binary assets\n- docker images published to `ghcr.io` and `dockerhub`, including multi architecture images + manifest\n- [`anchore/homebrew-grype`](https://github.com/anchore/homebrew-grype) tap updated to point to assets in the latest github release\n",
                    "rendered": {
                      "text": "# Release\n\nA release of grype comprises:\n- a new semver git tag from the current tip of the main branch\n- a new [github release](https://github.com/anchore/grype/releases) with a changelog and archived binary assets\n- docker images published to `ghcr.io` and `dockerhub`, including multi architecture images + manifest\n- [`anchore/homebrew-grype`](https://github.com/anchore/homebrew-grype) tap updated to point to assets in the latest github release\n",
                      "markdown": "`# Release\n\nA release of grype comprises:\n- a new semver git tag from the current tip of the main branch\n- a new [github release](https://github.com/anchore/grype/releases) with a changelog and archived binary assets\n- docker images published to `ghcr.io` and `dockerhub`, including multi architecture images + manifest\n- [`anchore/homebrew-grype`](https://github.com/anchore/homebrew-grype) tap updated to point to assets in the latest github release\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 735,
                  "startColumn": 48,
                  "endLine": 735,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    return 0\n  fi\n\n  # is there any cryptographic material produced at release that we can use for signature verification?\n  if ! compare_semver \"$version\" \"$VERIFY_SIGN_SUPPORTED_VERSION\"; then\n    log_err \"${PROJECT_NAME} release '$version' does not support signature verification\"\n    log_err \"you can still install ${PROJECT_NAME} by removing the -v flag or using a release that supports signature verification (>= '$VERIFY_SIGN_SUPPORTED_VERSION')\"\n",
                    "rendered": {
                      "text": "    return 0\n  fi\n\n  # is there any cryptographic material produced at release that we can use for signature verification?\n  if ! compare_semver \"$version\" \"$VERIFY_SIGN_SUPPORTED_VERSION\"; then\n    log_err \"${PROJECT_NAME} release '$version' does not support signature verification\"\n    log_err \"you can still install ${PROJECT_NAME} by removing the -v flag or using a release that supports signature verification (>= '$VERIFY_SIGN_SUPPORTED_VERSION')\"\n",
                      "markdown": "`    return 0\n  fi\n\n  # is there any cryptographic material produced at release that we can use for signature verification?\n  if ! compare_semver \"$version\" \"$VERIFY_SIGN_SUPPORTED_VERSION\"; then\n    log_err \"${PROJECT_NAME} release '$version' does not support signature verification\"\n    log_err \"you can still install ${PROJECT_NAME} by removing the -v flag or using a release that supports signature verification (>= '$VERIFY_SIGN_SUPPORTED_VERSION')\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 119,
                  "endLine": 159,
                  "endColumn": 123,
                  "snippet": {
                    "text": "    s390x) return 0 ;;\n    amd64p32) return 0 ;;\n  esac\n  log_err \"uname_arch_check '$(uname -m)' got converted to '$arch' which is not a GOARCH value.  Please file bug report at https://github.com/client9/shlib\"\n  return 1\n)\n\n",
                    "rendered": {
                      "text": "    s390x) return 0 ;;\n    amd64p32) return 0 ;;\n  esac\n  log_err \"uname_arch_check '$(uname -m)' got converted to '$arch' which is not a GOARCH value.  Please file bug report at https://github.com/client9/shlib\"\n  return 1\n)\n\n",
                      "markdown": "`    s390x) return 0 ;;\n    amd64p32) return 0 ;;\n  esac\n  log_err \"uname_arch_check '$(uname -m)' got converted to '$arch' which is not a GOARCH value.  Please file bug report at https://github.com/client9/shlib\"\n  return 1\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 105,
                  "endLine": 137,
                  "endColumn": 109,
                  "snippet": {
                    "text": "    solaris) return 0 ;;\n    windows) return 0 ;;\n  esac\n  log_err \"uname_os_check '$(uname -s)' got converted to '$os' which is not a GOOS value. Please file bug at https://github.com/client9/shlib\"\n  return 1\n)\n\n",
                    "rendered": {
                      "text": "    solaris) return 0 ;;\n    windows) return 0 ;;\n  esac\n  log_err \"uname_os_check '$(uname -s)' got converted to '$os' which is not a GOOS value. Please file bug at https://github.com/client9/shlib\"\n  return 1\n)\n\n",
                      "markdown": "`    solaris) return 0 ;;\n    windows) return 0 ;;\n  esac\n  log_err \"uname_os_check '$(uname -s)' got converted to '$os' which is not a GOOS value. Please file bug at https://github.com/client9/shlib\"\n  return 1\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 838,
                  "startColumn": 32,
                  "endLine": 838,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n      export DOWNLOAD_TAG_INSTALL_SCRIPT=false\n      log_info \"fetching release script for tag='${tag}'\"\n      http_copy \"${INSTALL_SH_BASE_URL}/${tag}/install.sh\" \"\" | sh -s -- ${PROGRAM_ARGS}\n      exit $?\n  fi\n",
                    "rendered": {
                      "text": "  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n      export DOWNLOAD_TAG_INSTALL_SCRIPT=false\n      log_info \"fetching release script for tag='${tag}'\"\n      http_copy \"${INSTALL_SH_BASE_URL}/${tag}/install.sh\" \"\" | sh -s -- ${PROGRAM_ARGS}\n      exit $?\n  fi\n",
                      "markdown": "`  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n      export DOWNLOAD_TAG_INSTALL_SCRIPT=false\n      log_info \"fetching release script for tag='${tag}'\"\n      http_copy \"${INSTALL_SH_BASE_URL}/${tag}/install.sh\" \"\" | sh -s -- ${PROGRAM_ARGS}\n      exit $?\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 835,
                  "startColumn": 92,
                  "endLine": 835,
                  "endColumn": 100,
                  "snippet": {
                    "text": "\n  # we always use the install.sh script that is associated with the tagged release. Why? the latest install.sh is not\n  # guaranteed to be able to install every version of the application. We use the DOWNLOAD_TAG_INSTALL_SCRIPT env var\n  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n      export DOWNLOAD_TAG_INSTALL_SCRIPT=false\n      log_info \"fetching release script for tag='${tag}'\"\n",
                    "rendered": {
                      "text": "\n  # we always use the install.sh script that is associated with the tagged release. Why? the latest install.sh is not\n  # guaranteed to be able to install every version of the application. We use the DOWNLOAD_TAG_INSTALL_SCRIPT env var\n  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n      export DOWNLOAD_TAG_INSTALL_SCRIPT=false\n      log_info \"fetching release script for tag='${tag}'\"\n",
                      "markdown": "`\n  # we always use the install.sh script that is associated with the tagged release. Why? the latest install.sh is not\n  # guaranteed to be able to install every version of the application. We use the DOWNLOAD_TAG_INSTALL_SCRIPT env var\n  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n      export DOWNLOAD_TAG_INSTALL_SCRIPT=false\n      log_info \"fetching release script for tag='${tag}'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 835,
                  "startColumn": 66,
                  "endLine": 835,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\n  # we always use the install.sh script that is associated with the tagged release. Why? the latest install.sh is not\n  # guaranteed to be able to install every version of the application. We use the DOWNLOAD_TAG_INSTALL_SCRIPT env var\n  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n      export DOWNLOAD_TAG_INSTALL_SCRIPT=false\n      log_info \"fetching release script for tag='${tag}'\"\n",
                    "rendered": {
                      "text": "\n  # we always use the install.sh script that is associated with the tagged release. Why? the latest install.sh is not\n  # guaranteed to be able to install every version of the application. We use the DOWNLOAD_TAG_INSTALL_SCRIPT env var\n  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n      export DOWNLOAD_TAG_INSTALL_SCRIPT=false\n      log_info \"fetching release script for tag='${tag}'\"\n",
                      "markdown": "`\n  # we always use the install.sh script that is associated with the tagged release. Why? the latest install.sh is not\n  # guaranteed to be able to install every version of the application. We use the DOWNLOAD_TAG_INSTALL_SCRIPT env var\n  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n      export DOWNLOAD_TAG_INSTALL_SCRIPT=false\n      log_info \"fetching release script for tag='${tag}'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 834,
                  "startColumn": 109,
                  "endLine": 834,
                  "endColumn": 114,
                  "snippet": {
                    "text": "  fi\n\n  # we always use the install.sh script that is associated with the tagged release. Why? the latest install.sh is not\n  # guaranteed to be able to install every version of the application. We use the DOWNLOAD_TAG_INSTALL_SCRIPT env var\n  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n      export DOWNLOAD_TAG_INSTALL_SCRIPT=false\n",
                    "rendered": {
                      "text": "  fi\n\n  # we always use the install.sh script that is associated with the tagged release. Why? the latest install.sh is not\n  # guaranteed to be able to install every version of the application. We use the DOWNLOAD_TAG_INSTALL_SCRIPT env var\n  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n      export DOWNLOAD_TAG_INSTALL_SCRIPT=false\n",
                      "markdown": "`  fi\n\n  # we always use the install.sh script that is associated with the tagged release. Why? the latest install.sh is not\n  # guaranteed to be able to install every version of the application. We use the DOWNLOAD_TAG_INSTALL_SCRIPT env var\n  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n      export DOWNLOAD_TAG_INSTALL_SCRIPT=false\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 833,
                  "startColumn": 32,
                  "endLine": 833,
                  "endColumn": 40,
                  "snippet": {
                    "text": "      return 1\n  fi\n\n  # we always use the install.sh script that is associated with the tagged release. Why? the latest install.sh is not\n  # guaranteed to be able to install every version of the application. We use the DOWNLOAD_TAG_INSTALL_SCRIPT env var\n  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n",
                    "rendered": {
                      "text": "      return 1\n  fi\n\n  # we always use the install.sh script that is associated with the tagged release. Why? the latest install.sh is not\n  # guaranteed to be able to install every version of the application. We use the DOWNLOAD_TAG_INSTALL_SCRIPT env var\n  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n",
                      "markdown": "`      return 1\n  fi\n\n  # we always use the install.sh script that is associated with the tagged release. Why? the latest install.sh is not\n  # guaranteed to be able to install every version of the application. We use the DOWNLOAD_TAG_INSTALL_SCRIPT env var\n  # to indicate if we should continue processing with the existing script or to download the script from the given tag.\n  if [ \"${DOWNLOAD_TAG_INSTALL_SCRIPT}\" = \"true\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 815,
                  "startColumn": 24,
                  "endLine": 815,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  set -u\n\n  if ! tag=$(get_release_tag \"${OWNER}\" \"${REPO}\" \"${tag}\"); then\n      log_err \"unable to find tag='${tag}'\"\n      log_err \"do not specify a version or select a valid version from https://github.com/${OWNER}/${REPO}/releases\"\n      return 1\n  fi\n",
                    "rendered": {
                      "text": "  set -u\n\n  if ! tag=$(get_release_tag \"${OWNER}\" \"${REPO}\" \"${tag}\"); then\n      log_err \"unable to find tag='${tag}'\"\n      log_err \"do not specify a version or select a valid version from https://github.com/${OWNER}/${REPO}/releases\"\n      return 1\n  fi\n",
                      "markdown": "`  set -u\n\n  if ! tag=$(get_release_tag \"${OWNER}\" \"${REPO}\" \"${tag}\"); then\n      log_err \"unable to find tag='${tag}'\"\n      log_err \"do not specify a version or select a valid version from https://github.com/${OWNER}/${REPO}/releases\"\n      return 1\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 786,
                  "startColumn": 7,
                  "endLine": 786,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        ;;\n      v) VERIFY_SIGN=true;;\n      h | \\?)\n        cat <<EOF\nDownload and install a released binary for ${OWNER}/${REPO} from the github releases page\n\nUsage: $0 [-v] [-b DIR] [-d] [TAG]\n",
                    "rendered": {
                      "text": "        ;;\n      v) VERIFY_SIGN=true;;\n      h | \\?)\n        cat <<EOF\nDownload and install a released binary for ${OWNER}/${REPO} from the github releases page\n\nUsage: $0 [-v] [-b DIR] [-d] [TAG]\n",
                      "markdown": "`        ;;\n      v) VERIFY_SIGN=true;;\n      h | \\?)\n        cat <<EOF\nDownload and install a released binary for ${OWNER}/${REPO} from the github releases page\n\nUsage: $0 [-v] [-b DIR] [-d] [TAG]\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 753,
                  "startColumn": 39,
                  "endLine": 753,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install script does not support -v flag (>= '$VERIFY_SIGN_FLAG_VERSION'), using current script for installation\"\n  else\n    log_trace \"provided version install script supports -v flag (>= '$VERIFY_SIGN_FLAG_VERSION')\"\n  fi\n\n  # check to see if the cosign binary is installed\n",
                    "rendered": {
                      "text": "    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install script does not support -v flag (>= '$VERIFY_SIGN_FLAG_VERSION'), using current script for installation\"\n  else\n    log_trace \"provided version install script supports -v flag (>= '$VERIFY_SIGN_FLAG_VERSION')\"\n  fi\n\n  # check to see if the cosign binary is installed\n",
                      "markdown": "`    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install script does not support -v flag (>= '$VERIFY_SIGN_FLAG_VERSION'), using current script for installation\"\n  else\n    log_trace \"provided version install script supports -v flag (>= '$VERIFY_SIGN_FLAG_VERSION')\"\n  fi\n\n  # check to see if the cosign binary is installed\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 751,
                  "startColumn": 119,
                  "endLine": 751,
                  "endColumn": 127,
                  "snippet": {
                    "text": "    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n    # attempt to install the application with this version of the script (keeping signature verification).\n    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install script does not support -v flag (>= '$VERIFY_SIGN_FLAG_VERSION'), using current script for installation\"\n  else\n    log_trace \"provided version install script supports -v flag (>= '$VERIFY_SIGN_FLAG_VERSION')\"\n  fi\n",
                    "rendered": {
                      "text": "    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n    # attempt to install the application with this version of the script (keeping signature verification).\n    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install script does not support -v flag (>= '$VERIFY_SIGN_FLAG_VERSION'), using current script for installation\"\n  else\n    log_trace \"provided version install script supports -v flag (>= '$VERIFY_SIGN_FLAG_VERSION')\"\n  fi\n",
                      "markdown": "`    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n    # attempt to install the application with this version of the script (keeping signature verification).\n    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install script does not support -v flag (>= '$VERIFY_SIGN_FLAG_VERSION'), using current script for installation\"\n  else\n    log_trace \"provided version install script supports -v flag (>= '$VERIFY_SIGN_FLAG_VERSION')\"\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 751,
                  "startColumn": 39,
                  "endLine": 751,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n    # attempt to install the application with this version of the script (keeping signature verification).\n    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install script does not support -v flag (>= '$VERIFY_SIGN_FLAG_VERSION'), using current script for installation\"\n  else\n    log_trace \"provided version install script supports -v flag (>= '$VERIFY_SIGN_FLAG_VERSION')\"\n  fi\n",
                    "rendered": {
                      "text": "    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n    # attempt to install the application with this version of the script (keeping signature verification).\n    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install script does not support -v flag (>= '$VERIFY_SIGN_FLAG_VERSION'), using current script for installation\"\n  else\n    log_trace \"provided version install script supports -v flag (>= '$VERIFY_SIGN_FLAG_VERSION')\"\n  fi\n",
                      "markdown": "`    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n    # attempt to install the application with this version of the script (keeping signature verification).\n    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install script does not support -v flag (>= '$VERIFY_SIGN_FLAG_VERSION'), using current script for installation\"\n  else\n    log_trace \"provided version install script supports -v flag (>= '$VERIFY_SIGN_FLAG_VERSION')\"\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 749,
                  "startColumn": 65,
                  "endLine": 749,
                  "endColumn": 73,
                  "snippet": {
                    "text": "  if ! compare_semver \"$version\" \"$VERIFY_SIGN_FLAG_VERSION\"; then\n    # the -v argument did not always exist, so we cannot be guaranteed that invoking an earlier version of this script\n    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n    # attempt to install the application with this version of the script (keeping signature verification).\n    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install script does not support -v flag (>= '$VERIFY_SIGN_FLAG_VERSION'), using current script for installation\"\n  else\n",
                    "rendered": {
                      "text": "  if ! compare_semver \"$version\" \"$VERIFY_SIGN_FLAG_VERSION\"; then\n    # the -v argument did not always exist, so we cannot be guaranteed that invoking an earlier version of this script\n    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n    # attempt to install the application with this version of the script (keeping signature verification).\n    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install script does not support -v flag (>= '$VERIFY_SIGN_FLAG_VERSION'), using current script for installation\"\n  else\n",
                      "markdown": "`  if ! compare_semver \"$version\" \"$VERIFY_SIGN_FLAG_VERSION\"; then\n    # the -v argument did not always exist, so we cannot be guaranteed that invoking an earlier version of this script\n    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n    # attempt to install the application with this version of the script (keeping signature verification).\n    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install script does not support -v flag (>= '$VERIFY_SIGN_FLAG_VERSION'), using current script for installation\"\n  else\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 747,
                  "startColumn": 111,
                  "endLine": 748,
                  "snippet": {
                    "text": "ERIFY_SIGN_SUPPORTED_VERSION')\"\n  fi\n\n  # will invoking an earlier version of this script work (considering the -v flag)?\n  if ! compare_semver \"$version\" \"$VERIFY_SIGN_FLAG_VERSION\"; then\n    # the -v argument did not always exist, so we cannot be guaranteed that invoking an earlier version of this script\n    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n    # attempt to install the application with this version of the script (keeping signature verification).\n    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install sc",
                    "rendered": {
                      "text": "ERIFY_SIGN_SUPPORTED_VERSION')\"\n  fi\n\n  # will invoking an earlier version of this script work (considering the -v flag)?\n  if ! compare_semver \"$version\" \"$VERIFY_SIGN_FLAG_VERSION\"; then\n    # the -v argument did not always exist, so we cannot be guaranteed that invoking an earlier version of this script\n    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n    # attempt to install the application with this version of the script (keeping signature verification).\n    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install sc",
                      "markdown": "`ERIFY_SIGN_SUPPORTED_VERSION')\"\n  fi\n\n  # will invoking an earlier version of this script work (considering the -v flag)?\n  if ! compare_semver \"$version\" \"$VERIFY_SIGN_FLAG_VERSION\"; then\n    # the -v argument did not always exist, so we cannot be guaranteed that invoking an earlier version of this script\n    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n    # attempt to install the application with this version of the script (keeping signature verification).\n    DOWNLOAD_TAG_INSTALL_SCRIPT=false\n    log_debug \"provided version install sc`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 745,
                  "startColumn": 44,
                  "endLine": 745,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    log_trace \"${PROJECT_NAME} release '$version' supports signature verification (>= '$VERIFY_SIGN_SUPPORTED_VERSION')\"\n  fi\n\n  # will invoking an earlier version of this script work (considering the -v flag)?\n  if ! compare_semver \"$version\" \"$VERIFY_SIGN_FLAG_VERSION\"; then\n    # the -v argument did not always exist, so we cannot be guaranteed that invoking an earlier version of this script\n    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n",
                    "rendered": {
                      "text": "    log_trace \"${PROJECT_NAME} release '$version' supports signature verification (>= '$VERIFY_SIGN_SUPPORTED_VERSION')\"\n  fi\n\n  # will invoking an earlier version of this script work (considering the -v flag)?\n  if ! compare_semver \"$version\" \"$VERIFY_SIGN_FLAG_VERSION\"; then\n    # the -v argument did not always exist, so we cannot be guaranteed that invoking an earlier version of this script\n    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n",
                      "markdown": "`    log_trace \"${PROJECT_NAME} release '$version' supports signature verification (>= '$VERIFY_SIGN_SUPPORTED_VERSION')\"\n  fi\n\n  # will invoking an earlier version of this script work (considering the -v flag)?\n  if ! compare_semver \"$version\" \"$VERIFY_SIGN_FLAG_VERSION\"; then\n    # the -v argument did not always exist, so we cannot be guaranteed that invoking an earlier version of this script\n    # will work (error with \"illegal option -v\"). However, the user requested signature verification, so we will\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 636,
                  "startColumn": 33,
                  "endLine": 636,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n  asset_filename=$(search_for_asset \"${checksums_filepath}\" \"${name}\" \"${os}\" \"${arch}\" \"${format}\")\n\n  # don't continue if we couldn't find a matching asset from the checksums file\n  if [ -z \"${asset_filename}\" ]; then\n      return 1\n  fi\n",
                    "rendered": {
                      "text": "\n  asset_filename=$(search_for_asset \"${checksums_filepath}\" \"${name}\" \"${os}\" \"${arch}\" \"${format}\")\n\n  # don't continue if we couldn't find a matching asset from the checksums file\n  if [ -z \"${asset_filename}\" ]; then\n      return 1\n  fi\n",
                      "markdown": "`\n  asset_filename=$(search_for_asset \"${checksums_filepath}\" \"${name}\" \"${os}\" \"${arch}\" \"${format}\")\n\n  # don't continue if we couldn't find a matching asset from the checksums file\n  if [ -z \"${asset_filename}\" ]; then\n      return 1\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 578,
                  "startColumn": 24,
                  "endLine": 578,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n  # don't continue if we couldn't download an asset\n  if [ -z \"${asset_filepath}\" ]; then\n      log_err \"could not find release asset for os='${os}' arch='${arch}' format='${format}' \"\n      return 1\n  fi\n\n",
                    "rendered": {
                      "text": "\n  # don't continue if we couldn't download an asset\n  if [ -z \"${asset_filepath}\" ]; then\n      log_err \"could not find release asset for os='${os}' arch='${arch}' format='${format}' \"\n      return 1\n  fi\n\n",
                      "markdown": "`\n  # don't continue if we couldn't download an asset\n  if [ -z \"${asset_filepath}\" ]; then\n      log_err \"could not find release asset for os='${os}' arch='${arch}' format='${format}' \"\n      return 1\n  fi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 30,
                  "endLine": 337,
                  "endColumn": 36,
                  "snippet": {
                    "text": "extract_json_value() (\n  json=\"$1\"\n  key=\"$2\"\n  key_value=$(echo \"${json}\" | grep  -o \"\\\"$key\\\":[^,]*[,}]\" | tr -d '\",}')\n\n  extract_value \"$key_value\"\n)\n",
                    "rendered": {
                      "text": "extract_json_value() (\n  json=\"$1\"\n  key=\"$2\"\n  key_value=$(echo \"${json}\" | grep  -o \"\\\"$key\\\":[^,]*[,}]\" | tr -d '\",}')\n\n  extract_value \"$key_value\"\n)\n",
                      "markdown": "`extract_json_value() (\n  json=\"$1\"\n  key=\"$2\"\n  key_value=$(echo \"${json}\" | grep  -o \"\\\"$key\\\":[^,]*[,}]\" | tr -d '\",}')\n\n  extract_value \"$key_value\"\n)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 41,
                  "endLine": 274,
                  "endColumn": 47,
                  "snippet": {
                    "text": "  target_basename=${target##*/}\n  want=$(grep \"${target_basename}\" \"${checksums}\" 2>/dev/null | tr '\\t' ' ' | cut -d ' ' -f 1)\n  if [ -z \"$want\" ]; then\n    log_err \"hash_sha256_verify unable to find checksum for '${target}' in '${checksums}'\"\n    return 1\n  fi\n  got=$(hash_sha256 \"$target\")\n",
                    "rendered": {
                      "text": "  target_basename=${target##*/}\n  want=$(grep \"${target_basename}\" \"${checksums}\" 2>/dev/null | tr '\\t' ' ' | cut -d ' ' -f 1)\n  if [ -z \"$want\" ]; then\n    log_err \"hash_sha256_verify unable to find checksum for '${target}' in '${checksums}'\"\n    return 1\n  fi\n  got=$(hash_sha256 \"$target\")\n",
                      "markdown": "`  target_basename=${target##*/}\n  want=$(grep \"${target_basename}\" \"${checksums}\" 2>/dev/null | tr '\\t' ' ' | cut -d ' ' -f 1)\n  if [ -z \"$want\" ]; then\n    log_err \"hash_sha256_verify unable to find checksum for '${target}' in '${checksums}'\"\n    return 1\n  fi\n  got=$(hash_sha256 \"$target\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 77,
                  "endLine": 272,
                  "endColumn": 82,
                  "snippet": {
                    "text": "    return 1\n  fi\n  target_basename=${target##*/}\n  want=$(grep \"${target_basename}\" \"${checksums}\" 2>/dev/null | tr '\\t' ' ' | cut -d ' ' -f 1)\n  if [ -z \"$want\" ]; then\n    log_err \"hash_sha256_verify unable to find checksum for '${target}' in '${checksums}'\"\n    return 1\n",
                    "rendered": {
                      "text": "    return 1\n  fi\n  target_basename=${target##*/}\n  want=$(grep \"${target_basename}\" \"${checksums}\" 2>/dev/null | tr '\\t' ' ' | cut -d ' ' -f 1)\n  if [ -z \"$want\" ]; then\n    log_err \"hash_sha256_verify unable to find checksum for '${target}' in '${checksums}'\"\n    return 1\n",
                      "markdown": "`    return 1\n  fi\n  target_basename=${target##*/}\n  want=$(grep \"${target_basename}\" \"${checksums}\" 2>/dev/null | tr '\\t' ' ' | cut -d ' ' -f 1)\n  if [ -z \"$want\" ]; then\n    log_err \"hash_sha256_verify unable to find checksum for '${target}' in '${checksums}'\"\n    return 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 34,
                  "endLine": 259,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f a\n  else\n    log_err \"hash_sha256 unable to find command to compute sha-256 hash\"\n    return 1\n  fi\n)\n",
                    "rendered": {
                      "text": "    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f a\n  else\n    log_err \"hash_sha256 unable to find command to compute sha-256 hash\"\n    return 1\n  fi\n)\n",
                      "markdown": "`    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f a\n  else\n    log_err \"hash_sha256 unable to find command to compute sha-256 hash\"\n    return 1\n  fi\n)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 18,
                  "endLine": 257,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command openssl; then\n    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f a\n  else\n    log_err \"hash_sha256 unable to find command to compute sha-256 hash\"\n    return 1\n",
                    "rendered": {
                      "text": "    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command openssl; then\n    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f a\n  else\n    log_err \"hash_sha256 unable to find command to compute sha-256 hash\"\n    return 1\n",
                      "markdown": "`    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command openssl; then\n    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f a\n  else\n    log_err \"hash_sha256 unable to find command to compute sha-256 hash\"\n    return 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 23,
                  "endLine": 256,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    hash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command openssl; then\n    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f a\n  else\n    log_err \"hash_sha256 unable to find command to compute sha-256 hash\"\n",
                    "rendered": {
                      "text": "    hash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command openssl; then\n    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f a\n  else\n    log_err \"hash_sha256 unable to find command to compute sha-256 hash\"\n",
                      "markdown": "`    hash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command openssl; then\n    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f a\n  else\n    log_err \"hash_sha256 unable to find command to compute sha-256 hash\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 18,
                  "endLine": 254,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command shasum; then\n    hash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command openssl; then\n    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f a\n",
                    "rendered": {
                      "text": "    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command shasum; then\n    hash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command openssl; then\n    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f a\n",
                      "markdown": "`    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command shasum; then\n    hash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command openssl; then\n    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f a\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 18,
                  "endLine": 251,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command sha256sum; then\n    hash=$(sha256sum \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command shasum; then\n    hash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n",
                    "rendered": {
                      "text": "    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command sha256sum; then\n    hash=$(sha256sum \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command shasum; then\n    hash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n",
                      "markdown": "`    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command sha256sum; then\n    hash=$(sha256sum \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command shasum; then\n    hash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 18,
                  "endLine": 248,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  TARGET=${1:-/dev/stdin}\n  if is_command gsha256sum; then\n    hash=$(gsha256sum \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command sha256sum; then\n    hash=$(sha256sum \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n",
                    "rendered": {
                      "text": "  TARGET=${1:-/dev/stdin}\n  if is_command gsha256sum; then\n    hash=$(gsha256sum \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command sha256sum; then\n    hash=$(sha256sum \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n",
                      "markdown": "`  TARGET=${1:-/dev/stdin}\n  if is_command gsha256sum; then\n    hash=$(gsha256sum \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command sha256sum; then\n    hash=$(sha256sum \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 34,
                  "endLine": 232,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    http_download_wget \"$@\"\n    return\n  fi\n  log_err \"http_download unable to find wget or curl\"\n  return 1\n)\n\n",
                    "rendered": {
                      "text": "    http_download_wget \"$@\"\n    return\n  fi\n  log_err \"http_download unable to find wget or curl\"\n  return 1\n)\n\n",
                      "markdown": "`    http_download_wget \"$@\"\n    return\n  fi\n  log_err \"http_download unable to find wget or curl\"\n  return 1\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 3,
                  "endLine": 219,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  if [ -z \"$header\" ]; then\n    wget -q -O \"$local_file\" \"$source_url\"\n  else\n    wget -q --header \"$header\" -O \"$local_file\" \"$source_url\"\n  fi\n)\n\n",
                    "rendered": {
                      "text": "  if [ -z \"$header\" ]; then\n    wget -q -O \"$local_file\" \"$source_url\"\n  else\n    wget -q --header \"$header\" -O \"$local_file\" \"$source_url\"\n  fi\n)\n\n",
                      "markdown": "`  if [ -z \"$header\" ]; then\n    wget -q -O \"$local_file\" \"$source_url\"\n  else\n    wget -q --header \"$header\" -O \"$local_file\" \"$source_url\"\n  fi\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 3,
                  "endLine": 217,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  log_trace \"http_download_wget(local_file=$local_file, source_url=$source_url, header=$header)\"\n\n  if [ -z \"$header\" ]; then\n    wget -q -O \"$local_file\" \"$source_url\"\n  else\n    wget -q --header \"$header\" -O \"$local_file\" \"$source_url\"\n  fi\n",
                    "rendered": {
                      "text": "  log_trace \"http_download_wget(local_file=$local_file, source_url=$source_url, header=$header)\"\n\n  if [ -z \"$header\" ]; then\n    wget -q -O \"$local_file\" \"$source_url\"\n  else\n    wget -q --header \"$header\" -O \"$local_file\" \"$source_url\"\n  fi\n",
                      "markdown": "`  log_trace \"http_download_wget(local_file=$local_file, source_url=$source_url, header=$header)\"\n\n  if [ -z \"$header\" ]; then\n    wget -q -O \"$local_file\" \"$source_url\"\n  else\n    wget -q --header \"$header\" -O \"$local_file\" \"$source_url\"\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 1,
                  "endLine": 185,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n  mount_point=\"/Volumes/tmp-dmg\"\n  hdiutil attach -quiet -nobrowse -mountpoint \"${mount_point}\" \"${dmg_file}\"\n  cp -fR \"${mount_point}/.\" ./\n  hdiutil detach -quiet -force \"${mount_point}\"\n)\n\n",
                    "rendered": {
                      "text": "\n  mount_point=\"/Volumes/tmp-dmg\"\n  hdiutil attach -quiet -nobrowse -mountpoint \"${mount_point}\" \"${dmg_file}\"\n  cp -fR \"${mount_point}/.\" ./\n  hdiutil detach -quiet -force \"${mount_point}\"\n)\n\n",
                      "markdown": "`\n  mount_point=\"/Volumes/tmp-dmg\"\n  hdiutil attach -quiet -nobrowse -mountpoint \"${mount_point}\" \"${dmg_file}\"\n  cp -fR \"${mount_point}/.\" ./\n  hdiutil detach -quiet -force \"${mount_point}\"\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 10,
                  "endLine": 170,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n  case \"${archive}\" in\n    *.tar.gz | *.tgz) tar --no-same-owner -xzf \"${archive}\" ;;\n    *.tar) tar --no-same-owner -xf \"${archive}\" ;;\n    *.zip) unzip -q \"${archive}\" ;;\n    *.dmg) extract_from_dmg \"${archive}\" ;;\n    *)\n",
                    "rendered": {
                      "text": "\n  case \"${archive}\" in\n    *.tar.gz | *.tgz) tar --no-same-owner -xzf \"${archive}\" ;;\n    *.tar) tar --no-same-owner -xf \"${archive}\" ;;\n    *.zip) unzip -q \"${archive}\" ;;\n    *.dmg) extract_from_dmg \"${archive}\" ;;\n    *)\n",
                      "markdown": "`\n  case \"${archive}\" in\n    *.tar.gz | *.tgz) tar --no-same-owner -xzf \"${archive}\" ;;\n    *.tar) tar --no-same-owner -xf \"${archive}\" ;;\n    *.zip) unzip -q \"${archive}\" ;;\n    *.dmg) extract_from_dmg \"${archive}\" ;;\n    *)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 21,
                  "endLine": 169,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  log_trace \"unpack(archive=${archive})\"\n\n  case \"${archive}\" in\n    *.tar.gz | *.tgz) tar --no-same-owner -xzf \"${archive}\" ;;\n    *.tar) tar --no-same-owner -xf \"${archive}\" ;;\n    *.zip) unzip -q \"${archive}\" ;;\n    *.dmg) extract_from_dmg \"${archive}\" ;;\n",
                    "rendered": {
                      "text": "  log_trace \"unpack(archive=${archive})\"\n\n  case \"${archive}\" in\n    *.tar.gz | *.tgz) tar --no-same-owner -xzf \"${archive}\" ;;\n    *.tar) tar --no-same-owner -xf \"${archive}\" ;;\n    *.zip) unzip -q \"${archive}\" ;;\n    *.dmg) extract_from_dmg \"${archive}\" ;;\n",
                      "markdown": "`  log_trace \"unpack(archive=${archive})\"\n\n  case \"${archive}\" in\n    *.tar.gz | *.tgz) tar --no-same-owner -xzf \"${archive}\" ;;\n    *.tar) tar --no-same-owner -xf \"${archive}\" ;;\n    *.zip) unzip -q \"${archive}\" ;;\n    *.dmg) extract_from_dmg \"${archive}\" ;;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/install.sh"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 90,
                  "endLine": 20,
                  "snippet": {
                    "text": "VERIFY_SIGN=false\n# this is the earliest tag in the repo where cosign sign-blob was introduced in the release process (see the goreleaser config)\nVERIFY_SIGN_SUPPORTED_VERSION=v0.72.0\n# this is the earliest tag in the repo where the -v flag was introduced to this install.sh script\nVERIFY_SIGN_FLAG_VERSION=v0.79.0\n\n# do not change the name of this parameter (this must always be backwards compatible)\nDOWNLOAD_TAG_INSTALL_SCRIPT=${DOWNLOAD_TAG_INSTALL_SCRIPT:-true}\n",
                    "rendered": {
                      "text": "VERIFY_SIGN=false\n# this is the earliest tag in the repo where cosign sign-blob was introduced in the release process (see the goreleaser config)\nVERIFY_SIGN_SUPPORTED_VERSION=v0.72.0\n# this is the earliest tag in the repo where the -v flag was introduced to this install.sh script\nVERIFY_SIGN_FLAG_VERSION=v0.79.0\n\n# do not change the name of this parameter (this must always be backwards compatible)\nDOWNLOAD_TAG_INSTALL_SCRIPT=${DOWNLOAD_TAG_INSTALL_SCRIPT:-true}\n",
                      "markdown": "`VERIFY_SIGN=false\n# this is the earliest tag in the repo where cosign sign-blob was introduced in the release process (see the goreleaser config)\nVERIFY_SIGN_SUPPORTED_VERSION=v0.72.0\n# this is the earliest tag in the repo where the -v flag was introduced to this install.sh script\nVERIFY_SIGN_FLAG_VERSION=v0.79.0\n\n# do not change the name of this parameter (this must always be backwards compatible)\nDOWNLOAD_TAG_INSTALL_SCRIPT=${DOWNLOAD_TAG_INSTALL_SCRIPT:-true}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/v3/diff.go"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 4,
                  "endLine": 11,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tDiffRemoved DiffReason = \"removed\"\n)\n\ntype Diff struct {\n\tReason    DiffReason `json:\"reason\"`\n\tID        string     `json:\"id\"`\n\tNamespace string     `json:\"namespace\"`\n",
                    "rendered": {
                      "text": "\tDiffRemoved DiffReason = \"removed\"\n)\n\ntype Diff struct {\n\tReason    DiffReason `json:\"reason\"`\n\tID        string     `json:\"id\"`\n\tNamespace string     `json:\"namespace\"`\n",
                      "markdown": "`\tDiffRemoved DiffReason = \"removed\"\n)\n\ntype Diff struct {\n\tReason    DiffReason `json:\"reason\"`\n\tID        string     `json:\"id\"`\n\tNamespace string     `json:\"namespace\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/test-fixtures/tls/generate-x509-cert-pair.sh"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 44,
                  "endLine": 15,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    -reqexts SAN \\\n    -extensions SAN \\\n    -config <(cat /etc/ssl/openssl.cnf <(printf \"[SAN]\\nsubjectAltName=DNS:$(hostname).local\")) \\\n    -subj \"/C=US/ST=Test/L=Test/O=Test/CN=$(hostname).local\"\n\n",
                    "rendered": {
                      "text": "    -reqexts SAN \\\n    -extensions SAN \\\n    -config <(cat /etc/ssl/openssl.cnf <(printf \"[SAN]\\nsubjectAltName=DNS:$(hostname).local\")) \\\n    -subj \"/C=US/ST=Test/L=Test/O=Test/CN=$(hostname).local\"\n\n",
                      "markdown": "`    -reqexts SAN \\\n    -extensions SAN \\\n    -config <(cat /etc/ssl/openssl.cnf <(printf \"[SAN]\\nsubjectAltName=DNS:$(hostname).local\")) \\\n    -subj \"/C=US/ST=Test/L=Test/O=Test/CN=$(hostname).local\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/test-fixtures/tls/generate-x509-cert-pair.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 77,
                  "endLine": 14,
                  "endColumn": 85,
                  "snippet": {
                    "text": "    -days 3650 \\\n    -reqexts SAN \\\n    -extensions SAN \\\n    -config <(cat /etc/ssl/openssl.cnf <(printf \"[SAN]\\nsubjectAltName=DNS:$(hostname).local\")) \\\n    -subj \"/C=US/ST=Test/L=Test/O=Test/CN=$(hostname).local\"\n\n",
                    "rendered": {
                      "text": "    -days 3650 \\\n    -reqexts SAN \\\n    -extensions SAN \\\n    -config <(cat /etc/ssl/openssl.cnf <(printf \"[SAN]\\nsubjectAltName=DNS:$(hostname).local\")) \\\n    -subj \"/C=US/ST=Test/L=Test/O=Test/CN=$(hostname).local\"\n\n",
                      "markdown": "`    -days 3650 \\\n    -reqexts SAN \\\n    -extensions SAN \\\n    -config <(cat /etc/ssl/openssl.cnf <(printf \"[SAN]\\nsubjectAltName=DNS:$(hostname).local\")) \\\n    -subj \"/C=US/ST=Test/L=Test/O=Test/CN=$(hostname).local\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/test-fixtures/tls/generate-x509-cert-pair.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -eux\n\n# create private key\nopenssl genrsa -out server.key 2048\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -eux\n\n# create private key\nopenssl genrsa -out server.key 2048\n",
                      "markdown": "`#!/usr/bin/env bash\nset -eux\n\n# create private key\nopenssl genrsa -out server.key 2048\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/test-fixtures/tls/generate-x509-cert-pair.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 65,
                  "endLine": 8,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# create private key\nopenssl genrsa -out server.key 2048\n\n# generate self-signed public key (cert) based on the private key\nopenssl req -new -x509 -sha256 \\\n    -key server.key \\\n    -out server.crt \\\n    -days 3650 \\\n",
                    "rendered": {
                      "text": "# create private key\nopenssl genrsa -out server.key 2048\n\n# generate self-signed public key (cert) based on the private key\nopenssl req -new -x509 -sha256 \\\n    -key server.key \\\n    -out server.crt \\\n    -days 3650 \\\n",
                      "markdown": "`# create private key\nopenssl genrsa -out server.key 2048\n\n# generate self-signed public key (cert) based on the private key\nopenssl req -new -x509 -sha256 \\\n    -key server.key \\\n    -out server.crt \\\n    -days 3650 \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/test-fixtures/tls/generate-x509-cert-pair.sh"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 20,
                  "endLine": 5,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -eux\n\n# create private key\nopenssl genrsa -out server.key 2048\n\n# generate self-signed public key (cert) based on the private key\nopenssl req -new -x509 -sha256 \\\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -eux\n\n# create private key\nopenssl genrsa -out server.key 2048\n\n# generate self-signed public key (cert) based on the private key\nopenssl req -new -x509 -sha256 \\\n",
                      "markdown": "`#!/usr/bin/env bash\nset -eux\n\n# create private key\nopenssl genrsa -out server.key 2048\n\n# generate self-signed public key (cert) based on the private key\nopenssl req -new -x509 -sha256 \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/test-fixtures/tls/generate-x509-cert-pair.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -eux\n\n# create private key\nopenssl genrsa -out server.key 2048\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -eux\n\n# create private key\nopenssl genrsa -out server.key 2048\n",
                      "markdown": "`#!/usr/bin/env bash\nset -eux\n\n# create private key\nopenssl genrsa -out server.key 2048\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/test-fixtures/tls/listing.py"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 42,
                  "endLine": 20,
                  "endColumn": 50,
                  "snippet": {
                    "text": "                    {\n                        \"built\": entry[\"built\"],\n                        \"version\": entry[\"version\"],\n                        \"url\": f\"https://{hostname}.local/db.tar.gz\",\n                        \"checksum\": entry[\"checksum\"]\n                    }\n                ]\n",
                    "rendered": {
                      "text": "                    {\n                        \"built\": entry[\"built\"],\n                        \"version\": entry[\"version\"],\n                        \"url\": f\"https://{hostname}.local/db.tar.gz\",\n                        \"checksum\": entry[\"checksum\"]\n                    }\n                ]\n",
                      "markdown": "`                    {\n                        \"built\": entry[\"built\"],\n                        \"version\": entry[\"version\"],\n                        \"url\": f\"https://{hostname}.local/db.tar.gz\",\n                        \"checksum\": entry[\"checksum\"]\n                    }\n                ]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/test-fixtures/tls/listing.py"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 21,
                  "endLine": 10,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\nentry = data[\"available\"][\"3\"][-1]\n\nhostname = os.popen('hostname').read().strip()\n\nwith open('www/listing.json', 'w') as fh:\n    json.dump(\n",
                    "rendered": {
                      "text": "\nentry = data[\"available\"][\"3\"][-1]\n\nhostname = os.popen('hostname').read().strip()\n\nwith open('www/listing.json', 'w') as fh:\n    json.dump(\n",
                      "markdown": "`\nentry = data[\"available\"][\"3\"][-1]\n\nhostname = os.popen('hostname').read().strip()\n\nwith open('www/listing.json', 'w') as fh:\n    json.dump(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/test-fixtures/tls/listing.py"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nentry = data[\"available\"][\"3\"][-1]\n\nhostname = os.popen('hostname').read().strip()\n\nwith open('www/listing.json', 'w') as fh:\n    json.dump(\n",
                    "rendered": {
                      "text": "\nentry = data[\"available\"][\"3\"][-1]\n\nhostname = os.popen('hostname').read().strip()\n\nwith open('www/listing.json', 'w') as fh:\n    json.dump(\n",
                      "markdown": "`\nentry = data[\"available\"][\"3\"][-1]\n\nhostname = os.popen('hostname').read().strip()\n\nwith open('www/listing.json', 'w') as fh:\n    json.dump(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/test-fixtures/tls/Makefile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 37,
                  "endLine": 18,
                  "endColumn": 45,
                  "snippet": {
                    "text": "grype-test-pass: clean-dbdir dbdir\n\tGRYPE_DB_CA_CERT=$(shell pwd)/server.crt \\\n\tGRYPE_DB_CACHE_DIR=$(shell pwd)/dbdir \\\n\tGRYPE_DB_UPDATE_URL=https://$(shell hostname).local/listing.json \\\n\t\tgo run ../../../../cmd/grype -vv alpine:latest\n\ndbdir:\n",
                    "rendered": {
                      "text": "grype-test-pass: clean-dbdir dbdir\n\tGRYPE_DB_CA_CERT=$(shell pwd)/server.crt \\\n\tGRYPE_DB_CACHE_DIR=$(shell pwd)/dbdir \\\n\tGRYPE_DB_UPDATE_URL=https://$(shell hostname).local/listing.json \\\n\t\tgo run ../../../../cmd/grype -vv alpine:latest\n\ndbdir:\n",
                      "markdown": "`grype-test-pass: clean-dbdir dbdir\n\tGRYPE_DB_CA_CERT=$(shell pwd)/server.crt \\\n\tGRYPE_DB_CACHE_DIR=$(shell pwd)/dbdir \\\n\tGRYPE_DB_UPDATE_URL=https://$(shell hostname).local/listing.json \\\n\t\tgo run ../../../../cmd/grype -vv alpine:latest\n\ndbdir:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/test-fixtures/tls/Makefile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 37,
                  "endLine": 11,
                  "endColumn": 45,
                  "snippet": {
                    "text": ".PHONY: grype-test-fail\ngrype-test-fail: clean-dbdir dbdir\n\tGRYPE_DB_CACHE_DIR=$(shell pwd)/dbdir \\\n\tGRYPE_DB_UPDATE_URL=https://$(shell hostname).local/listing.json \\\n\t\tgo run ../../../../cmd/grype -vv alpine:latest\n\n.PHONY: grype-test-pass\n",
                    "rendered": {
                      "text": ".PHONY: grype-test-fail\ngrype-test-fail: clean-dbdir dbdir\n\tGRYPE_DB_CACHE_DIR=$(shell pwd)/dbdir \\\n\tGRYPE_DB_UPDATE_URL=https://$(shell hostname).local/listing.json \\\n\t\tgo run ../../../../cmd/grype -vv alpine:latest\n\n.PHONY: grype-test-pass\n",
                      "markdown": "`.PHONY: grype-test-fail\ngrype-test-fail: clean-dbdir dbdir\n\tGRYPE_DB_CACHE_DIR=$(shell pwd)/dbdir \\\n\tGRYPE_DB_UPDATE_URL=https://$(shell hostname).local/listing.json \\\n\t\tgo run ../../../../cmd/grype -vv alpine:latest\n\n.PHONY: grype-test-pass\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/test-fixtures/tls/Makefile"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nwww/listing.json www/db.tar.gz: www listing.json\n\t$(eval location=$(shell python3 listing.py))\n\tcurl -L -o www/db.tar.gz $(location)\n\n.PHONY: clean\nclean: clean-dbdir\n",
                    "rendered": {
                      "text": "\nwww/listing.json www/db.tar.gz: www listing.json\n\t$(eval location=$(shell python3 listing.py))\n\tcurl -L -o www/db.tar.gz $(location)\n\n.PHONY: clean\nclean: clean-dbdir\n",
                      "markdown": "`\nwww/listing.json www/db.tar.gz: www listing.json\n\t$(eval location=$(shell python3 listing.py))\n\tcurl -L -o www/db.tar.gz $(location)\n\n.PHONY: clean\nclean: clean-dbdir\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/test-fixtures/tls/Makefile"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tmkdir -p www\n\nlisting.json:\n\tcurl -L -O https://toolbox-data.anchore.io/grype/databases/listing.json\n\nwww/listing.json www/db.tar.gz: www listing.json\n\t$(eval location=$(shell python3 listing.py))\n",
                    "rendered": {
                      "text": "\tmkdir -p www\n\nlisting.json:\n\tcurl -L -O https://toolbox-data.anchore.io/grype/databases/listing.json\n\nwww/listing.json www/db.tar.gz: www listing.json\n\t$(eval location=$(shell python3 listing.py))\n",
                      "markdown": "`\tmkdir -p www\n\nlisting.json:\n\tcurl -L -O https://toolbox-data.anchore.io/grype/databases/listing.json\n\nwww/listing.json www/db.tar.gz: www listing.json\n\t$(eval location=$(shell python3 listing.py))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/metadata.go"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 60,
                  "endLine": 106,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\t}\n\n\tif entry.Built.After(m.Built) {\n\t\tlog.Debugf(\"existing database (%s) is older than candidate update (%s), using update...\", m.Built.String(), entry.Built.String())\n\t\t// the listing is newer than the existing db, use it!\n\t\treturn true\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tif entry.Built.After(m.Built) {\n\t\tlog.Debugf(\"existing database (%s) is older than candidate update (%s), using update...\", m.Built.String(), entry.Built.String())\n\t\t// the listing is newer than the existing db, use it!\n\t\treturn true\n\t}\n",
                      "markdown": "`\t}\n\n\tif entry.Built.After(m.Built) {\n\t\tlog.Debugf(\"existing database (%s) is older than candidate update (%s), using update...\", m.Built.String(), entry.Built.String())\n\t\t// the listing is newer than the existing db, use it!\n\t\treturn true\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/metadata.go"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 20,
                  "endLine": 94,
                  "endColumn": 26,
                  "snippet": {
                    "text": "// in the current Metadata object.\nfunc (m *Metadata) IsSupersededBy(entry *ListingEntry) bool {\n\tif m == nil {\n\t\tlog.Debugf(\"cannot find existing metadata, using update...\")\n\t\t// any valid update beats no database, use it!\n\t\treturn true\n\t}\n",
                    "rendered": {
                      "text": "// in the current Metadata object.\nfunc (m *Metadata) IsSupersededBy(entry *ListingEntry) bool {\n\tif m == nil {\n\t\tlog.Debugf(\"cannot find existing metadata, using update...\")\n\t\t// any valid update beats no database, use it!\n\t\treturn true\n\t}\n",
                      "markdown": "`// in the current Metadata object.\nfunc (m *Metadata) IsSupersededBy(entry *ListingEntry) bool {\n\tif m == nil {\n\t\tlog.Debugf(\"cannot find existing metadata, using update...\")\n\t\t// any valid update beats no database, use it!\n\t\treturn true\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/metadata.go"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 53,
                  "endLine": 37,
                  "endColumn": 59,
                  "snippet": {
                    "text": "func (m MetadataJSON) ToMetadata() (Metadata, error) {\n\tbuild, err := time.Parse(time.RFC3339, m.Built)\n\tif err != nil {\n\t\treturn Metadata{}, fmt.Errorf(\"cannot convert built time (%s): %+v\", m.Built, err)\n\t}\n\n\tmetadata := Metadata{\n",
                    "rendered": {
                      "text": "func (m MetadataJSON) ToMetadata() (Metadata, error) {\n\tbuild, err := time.Parse(time.RFC3339, m.Built)\n\tif err != nil {\n\t\treturn Metadata{}, fmt.Errorf(\"cannot convert built time (%s): %+v\", m.Built, err)\n\t}\n\n\tmetadata := Metadata{\n",
                      "markdown": "`func (m MetadataJSON) ToMetadata() (Metadata, error) {\n\tbuild, err := time.Parse(time.RFC3339, m.Built)\n\tif err != nil {\n\t\treturn Metadata{}, fmt.Errorf(\"cannot convert built time (%s): %+v\", m.Built, err)\n\t}\n\n\tmetadata := Metadata{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/listing_entry.go"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 57,
                  "endLine": 57,
                  "endColumn": 63,
                  "snippet": {
                    "text": "func (l ListingEntryJSON) ToListingEntry() (ListingEntry, error) {\n\tbuild, err := time.Parse(time.RFC3339, l.Built)\n\tif err != nil {\n\t\treturn ListingEntry{}, fmt.Errorf(\"cannot convert built time (%s): %+v\", l.Built, err)\n\t}\n\n\tu, err := url.Parse(l.URL)\n",
                    "rendered": {
                      "text": "func (l ListingEntryJSON) ToListingEntry() (ListingEntry, error) {\n\tbuild, err := time.Parse(time.RFC3339, l.Built)\n\tif err != nil {\n\t\treturn ListingEntry{}, fmt.Errorf(\"cannot convert built time (%s): %+v\", l.Built, err)\n\t}\n\n\tu, err := url.Parse(l.URL)\n",
                      "markdown": "`func (l ListingEntryJSON) ToListingEntry() (ListingEntry, error) {\n\tbuild, err := time.Parse(time.RFC3339, l.Built)\n\tif err != nil {\n\t\treturn ListingEntry{}, fmt.Errorf(\"cannot convert built time (%s): %+v\", l.Built, err)\n\t}\n\n\tu, err := url.Parse(l.URL)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/listing_entry.go"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 46,
                  "endLine": 38,
                  "endColumn": 52,
                  "snippet": {
                    "text": "func NewListingEntryFromArchive(fs afero.Fs, metadata Metadata, dbArchivePath string, baseURL *url.URL) (ListingEntry, error) {\n\tchecksum, err := file.HashFile(fs, dbArchivePath, sha256.New())\n\tif err != nil {\n\t\treturn ListingEntry{}, fmt.Errorf(\"unable to find db archive checksum: %w\", err)\n\t}\n\n\tdbArchiveName := filepath.Base(dbArchivePath)\n",
                    "rendered": {
                      "text": "func NewListingEntryFromArchive(fs afero.Fs, metadata Metadata, dbArchivePath string, baseURL *url.URL) (ListingEntry, error) {\n\tchecksum, err := file.HashFile(fs, dbArchivePath, sha256.New())\n\tif err != nil {\n\t\treturn ListingEntry{}, fmt.Errorf(\"unable to find db archive checksum: %w\", err)\n\t}\n\n\tdbArchiveName := filepath.Base(dbArchivePath)\n",
                      "markdown": "`func NewListingEntryFromArchive(fs afero.Fs, metadata Metadata, dbArchivePath string, baseURL *url.URL) (ListingEntry, error) {\n\tchecksum, err := file.HashFile(fs, dbArchivePath, sha256.New())\n\tif err != nil {\n\t\treturn ListingEntry{}, fmt.Errorf(\"unable to find db archive checksum: %w\", err)\n\t}\n\n\tdbArchiveName := filepath.Base(dbArchivePath)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 24,
                  "endLine": 313,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\tlog.Debugf(\"database update available: %s\", updateEntry)\n\t\treturn true, current, updateEntry, nil\n\t}\n\tlog.Debugf(\"no database update available\")\n\n\treturn false, nil, nil, nil\n}\n",
                    "rendered": {
                      "text": "\t\tlog.Debugf(\"database update available: %s\", updateEntry)\n\t\treturn true, current, updateEntry, nil\n\t}\n\tlog.Debugf(\"no database update available\")\n\n\treturn false, nil, nil, nil\n}\n",
                      "markdown": "`\t\tlog.Debugf(\"database update available: %s\", updateEntry)\n\t\treturn true, current, updateEntry, nil\n\t}\n\tlog.Debugf(\"no database update available\")\n\n\treturn false, nil, nil, nil\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 22,
                  "endLine": 310,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t}\n\n\tif current.IsSupersededBy(updateEntry) {\n\t\tlog.Debugf(\"database update available: %s\", updateEntry)\n\t\treturn true, current, updateEntry, nil\n\t}\n\tlog.Debugf(\"no database update available\")\n",
                    "rendered": {
                      "text": "\t}\n\n\tif current.IsSupersededBy(updateEntry) {\n\t\tlog.Debugf(\"database update available: %s\", updateEntry)\n\t\treturn true, current, updateEntry, nil\n\t}\n\tlog.Debugf(\"no database update available\")\n",
                      "markdown": "`\t}\n\n\tif current.IsSupersededBy(updateEntry) {\n\t\tlog.Debugf(\"database update available: %s\", updateEntry)\n\t\treturn true, current, updateEntry, nil\n\t}\n\tlog.Debugf(\"no database update available\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 27,
                  "endLine": 301,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tif updateEntry == nil {\n\t\treturn false, nil, nil, fmt.Errorf(\"no db candidates with correct version available (maybe there is an application update available?)\")\n\t}\n\tlog.Debugf(\"found database update candidate: %s\", updateEntry)\n\n\t// compare created data to current db date\n\tcurrent, err := NewMetadataFromDir(c.fs, c.dbDir)\n",
                    "rendered": {
                      "text": "\tif updateEntry == nil {\n\t\treturn false, nil, nil, fmt.Errorf(\"no db candidates with correct version available (maybe there is an application update available?)\")\n\t}\n\tlog.Debugf(\"found database update candidate: %s\", updateEntry)\n\n\t// compare created data to current db date\n\tcurrent, err := NewMetadataFromDir(c.fs, c.dbDir)\n",
                      "markdown": "`\tif updateEntry == nil {\n\t\treturn false, nil, nil, fmt.Errorf(\"no db candidates with correct version available (maybe there is an application update available?)\")\n\t}\n\tlog.Debugf(\"found database update candidate: %s\", updateEntry)\n\n\t// compare created data to current db date\n\tcurrent, err := NewMetadataFromDir(c.fs, c.dbDir)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 116,
                  "endLine": 299,
                  "endColumn": 124,
                  "snippet": {
                    "text": "\n\tupdateEntry := listing.BestUpdate(c.targetSchema)\n\tif updateEntry == nil {\n\t\treturn false, nil, nil, fmt.Errorf(\"no db candidates with correct version available (maybe there is an application update available?)\")\n\t}\n\tlog.Debugf(\"found database update candidate: %s\", updateEntry)\n\n",
                    "rendered": {
                      "text": "\n\tupdateEntry := listing.BestUpdate(c.targetSchema)\n\tif updateEntry == nil {\n\t\treturn false, nil, nil, fmt.Errorf(\"no db candidates with correct version available (maybe there is an application update available?)\")\n\t}\n\tlog.Debugf(\"found database update candidate: %s\", updateEntry)\n\n",
                      "markdown": "`\n\tupdateEntry := listing.BestUpdate(c.targetSchema)\n\tif updateEntry == nil {\n\t\treturn false, nil, nil, fmt.Errorf(\"no db candidates with correct version available (maybe there is an application update available?)\")\n\t}\n\tlog.Debugf(\"found database update candidate: %s\", updateEntry)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 58,
                  "endLine": 278,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\tfilePath := path.Join(c.dbDir, lastUpdateCheckFileName)\n\tfh, err := c.fs.OpenFile(filePath, os.O_CREATE|os.O_TRUNC|os.O_WRONLY, 0644)\n\tif err != nil {\n\t\tlog.WithFields(\"error\", err).Trace(\"unable to write last update check timestamp\")\n\t\treturn\n\t}\n\n",
                    "rendered": {
                      "text": "\tfilePath := path.Join(c.dbDir, lastUpdateCheckFileName)\n\tfh, err := c.fs.OpenFile(filePath, os.O_CREATE|os.O_TRUNC|os.O_WRONLY, 0644)\n\tif err != nil {\n\t\tlog.WithFields(\"error\", err).Trace(\"unable to write last update check timestamp\")\n\t\treturn\n\t}\n\n",
                      "markdown": "`\tfilePath := path.Join(c.dbDir, lastUpdateCheckFileName)\n\tfh, err := c.fs.OpenFile(filePath, os.O_CREATE|os.O_TRUNC|os.O_WRONLY, 0644)\n\tif err != nil {\n\t\tlog.WithFields(\"error\", err).Trace(\"unable to write last update check timestamp\")\n\t\treturn\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 31,
                  "endLine": 264,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t}\n\n\tif lastCheck.IsZero() {\n\t\treturn nil, fmt.Errorf(\"empty update check timestamp\")\n\t}\n\n\telapsed := time.Since(lastCheck)\n",
                    "rendered": {
                      "text": "\t}\n\n\tif lastCheck.IsZero() {\n\t\treturn nil, fmt.Errorf(\"empty update check timestamp\")\n\t}\n\n\telapsed := time.Since(lastCheck)\n",
                      "markdown": "`\t}\n\n\tif lastCheck.IsZero() {\n\t\treturn nil, fmt.Errorf(\"empty update check timestamp\")\n\t}\n\n\telapsed := time.Since(lastCheck)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 46,
                  "endLine": 260,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n\tlastCheck, err := time.Parse(time.RFC3339, lastCheckStr)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"unable to parse last update check timestamp: %w\", err)\n\t}\n\n\tif lastCheck.IsZero() {\n",
                    "rendered": {
                      "text": "\n\tlastCheck, err := time.Parse(time.RFC3339, lastCheckStr)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"unable to parse last update check timestamp: %w\", err)\n\t}\n\n\tif lastCheck.IsZero() {\n",
                      "markdown": "`\n\tlastCheck, err := time.Parse(time.RFC3339, lastCheckStr)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"unable to parse last update check timestamp: %w\", err)\n\t}\n\n\tif lastCheck.IsZero() {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 45,
                  "endLine": 255,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\tvar lastCheckStr string\n\t_, err = fmt.Fscanf(fh, \"%s\", &lastCheckStr)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"unable to read last update check timestamp: %w\", err)\n\t}\n\n\tlastCheck, err := time.Parse(time.RFC3339, lastCheckStr)\n",
                    "rendered": {
                      "text": "\tvar lastCheckStr string\n\t_, err = fmt.Fscanf(fh, \"%s\", &lastCheckStr)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"unable to read last update check timestamp: %w\", err)\n\t}\n\n\tlastCheck, err := time.Parse(time.RFC3339, lastCheckStr)\n",
                      "markdown": "`\tvar lastCheckStr string\n\t_, err = fmt.Fscanf(fh, \"%s\", &lastCheckStr)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"unable to read last update check timestamp: %w\", err)\n\t}\n\n\tlastCheck, err := time.Parse(time.RFC3339, lastCheckStr)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 45,
                  "endLine": 246,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n\tfh, err := c.fs.OpenFile(filePath, os.O_RDONLY, 0)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"unable to read last update check timestamp: %w\", err)\n\t}\n\n\tdefer fh.Close()\n",
                    "rendered": {
                      "text": "\n\tfh, err := c.fs.OpenFile(filePath, os.O_RDONLY, 0)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"unable to read last update check timestamp: %w\", err)\n\t}\n\n\tdefer fh.Close()\n",
                      "markdown": "`\n\tfh, err := c.fs.OpenFile(filePath, os.O_RDONLY, 0)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"unable to read last update check timestamp: %w\", err)\n\t}\n\n\tdefer fh.Close()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 60,
                  "endLine": 223,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\telapsed, err := c.durationSinceUpdateCheck()\n\tif err != nil {\n\t\t// we had an IO error (or similar) trying to read or parse the file, we should not block the update check.\n\t\tlog.WithFields(\"error\", err).Trace(\"unable to determine if update check is allowed\")\n\t\treturn true\n\t}\n\tif elapsed == nil {\n",
                    "rendered": {
                      "text": "\telapsed, err := c.durationSinceUpdateCheck()\n\tif err != nil {\n\t\t// we had an IO error (or similar) trying to read or parse the file, we should not block the update check.\n\t\tlog.WithFields(\"error\", err).Trace(\"unable to determine if update check is allowed\")\n\t\treturn true\n\t}\n\tif elapsed == nil {\n",
                      "markdown": "`\telapsed, err := c.durationSinceUpdateCheck()\n\tif err != nil {\n\t\t// we had an IO error (or similar) trying to read or parse the file, we should not block the update check.\n\t\tlog.WithFields(\"error\", err).Trace(\"unable to determine if update check is allowed\")\n\t\treturn true\n\t}\n\tif elapsed == nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 37,
                  "endLine": 216,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\nfunc (c Curator) isUpdateCheckAllowed() bool {\n\tif c.updateCheckMaxFrequency == 0 {\n\t\tlog.Trace(\"no max-frequency set for update check\")\n\t\treturn true\n\t}\n\n",
                    "rendered": {
                      "text": "\nfunc (c Curator) isUpdateCheckAllowed() bool {\n\tif c.updateCheckMaxFrequency == 0 {\n\t\tlog.Trace(\"no max-frequency set for update check\")\n\t\treturn true\n\t}\n\n",
                      "markdown": "`\nfunc (c Curator) isUpdateCheckAllowed() bool {\n\tif c.updateCheckMaxFrequency == 0 {\n\t\tlog.Trace(\"no max-frequency set for update check\")\n\t\treturn true\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 14,
                  "endLine": 210,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tc.setLastSuccessfulUpdateCheck()\n\t}\n\n\tstage.Set(\"no update available\")\n\treturn false, nil\n}\n\n",
                    "rendered": {
                      "text": "\t\tc.setLastSuccessfulUpdateCheck()\n\t}\n\n\tstage.Set(\"no update available\")\n\treturn false, nil\n}\n\n",
                      "markdown": "`\t\tc.setLastSuccessfulUpdateCheck()\n\t}\n\n\tstage.Set(\"no update available\")\n\treturn false, nil\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 38,
                  "endLine": 180,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\tlog.Infof(\"downloading new vulnerability DB\")\n\t\terr := c.UpdateTo(updateEntry, downloadProgress, importProgress, stage)\n\t\tif err != nil {\n\t\t\treturn false, fmt.Errorf(\"unable to update vulnerability database: %w\", err)\n\t\t}\n\n\t\t// only set the last successful update check if the update was successful\n",
                    "rendered": {
                      "text": "\t\tlog.Infof(\"downloading new vulnerability DB\")\n\t\terr := c.UpdateTo(updateEntry, downloadProgress, importProgress, stage)\n\t\tif err != nil {\n\t\t\treturn false, fmt.Errorf(\"unable to update vulnerability database: %w\", err)\n\t\t}\n\n\t\t// only set the last successful update check if the update was successful\n",
                      "markdown": "`\t\tlog.Infof(\"downloading new vulnerability DB\")\n\t\terr := c.UpdateTo(updateEntry, downloadProgress, importProgress, stage)\n\t\tif err != nil {\n\t\t\treturn false, fmt.Errorf(\"unable to update vulnerability database: %w\", err)\n\t\t}\n\n\t\t// only set the last successful update check if the update was successful\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 37,
                  "endLine": 173,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\t\treturn false, fmt.Errorf(\"check for vulnerability database update failed: %w\", checkErr)\n\t\t}\n\t\tlog.Warnf(\"unable to check for vulnerability database update\")\n\t\tlog.Debugf(\"check for vulnerability update failed: %+v\", checkErr)\n\t}\n\n\tif updateAvailable {\n",
                    "rendered": {
                      "text": "\t\t\treturn false, fmt.Errorf(\"check for vulnerability database update failed: %w\", checkErr)\n\t\t}\n\t\tlog.Warnf(\"unable to check for vulnerability database update\")\n\t\tlog.Debugf(\"check for vulnerability update failed: %+v\", checkErr)\n\t}\n\n\tif updateAvailable {\n",
                      "markdown": "`\t\t\treturn false, fmt.Errorf(\"check for vulnerability database update failed: %w\", checkErr)\n\t\t}\n\t\tlog.Warnf(\"unable to check for vulnerability database update\")\n\t\tlog.Debugf(\"check for vulnerability update failed: %+v\", checkErr)\n\t}\n\n\tif updateAvailable {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 61,
                  "endLine": 170,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\tupdateAvailable, metadata, updateEntry, checkErr := c.IsUpdateAvailable()\n\tif checkErr != nil {\n\t\tif c.requireUpdateCheck {\n\t\t\treturn false, fmt.Errorf(\"check for vulnerability database update failed: %w\", checkErr)\n\t\t}\n\t\tlog.Warnf(\"unable to check for vulnerability database update\")\n\t\tlog.Debugf(\"check for vulnerability update failed: %+v\", checkErr)\n",
                    "rendered": {
                      "text": "\tupdateAvailable, metadata, updateEntry, checkErr := c.IsUpdateAvailable()\n\tif checkErr != nil {\n\t\tif c.requireUpdateCheck {\n\t\t\treturn false, fmt.Errorf(\"check for vulnerability database update failed: %w\", checkErr)\n\t\t}\n\t\tlog.Warnf(\"unable to check for vulnerability database update\")\n\t\tlog.Debugf(\"check for vulnerability update failed: %+v\", checkErr)\n",
                      "markdown": "`\tupdateAvailable, metadata, updateEntry, checkErr := c.IsUpdateAvailable()\n\tif checkErr != nil {\n\t\tif c.requireUpdateCheck {\n\t\t\treturn false, fmt.Errorf(\"check for vulnerability database update failed: %w\", checkErr)\n\t\t}\n\t\tlog.Warnf(\"unable to check for vulnerability database update\")\n\t\tlog.Debugf(\"check for vulnerability update failed: %+v\", checkErr)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 47,
                  "endLine": 120,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t}\n\tif metadata == nil {\n\t\treturn Status{\n\t\t\tErr: fmt.Errorf(\"database metadata not found at %q\", c.dbDir),\n\t\t}\n\t}\n\n",
                    "rendered": {
                      "text": "\t}\n\tif metadata == nil {\n\t\treturn Status{\n\t\t\tErr: fmt.Errorf(\"database metadata not found at %q\", c.dbDir),\n\t\t}\n\t}\n\n",
                      "markdown": "`\t}\n\tif metadata == nil {\n\t\treturn Status{\n\t\t\tErr: fmt.Errorf(\"database metadata not found at %q\", c.dbDir),\n\t\t}\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator.go"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 72,
                  "endLine": 104,
                  "endColumn": 80,
                  "snippet": {
                    "text": "\t// ensure the DB is ok\n\t_, err := c.validateIntegrity(c.dbDir)\n\tif err != nil {\n\t\treturn nil, nil, fmt.Errorf(\"vulnerability database is invalid (run db update to correct): %+v\", err)\n\t}\n\n\ts, err := store.New(c.dbPath, false)\n",
                    "rendered": {
                      "text": "\t// ensure the DB is ok\n\t_, err := c.validateIntegrity(c.dbDir)\n\tif err != nil {\n\t\treturn nil, nil, fmt.Errorf(\"vulnerability database is invalid (run db update to correct): %+v\", err)\n\t}\n\n\ts, err := store.New(c.dbPath, false)\n",
                      "markdown": "`\t// ensure the DB is ok\n\t_, err := c.validateIntegrity(c.dbDir)\n\tif err != nil {\n\t\treturn nil, nil, fmt.Errorf(\"vulnerability database is invalid (run db update to correct): %+v\", err)\n\t}\n\n\ts, err := store.New(c.dbPath, false)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/metadata_test.go"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 1,
                  "endLine": 63,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\ttests := []struct {\n\t\tname                string\n\t\tcurrent             *Metadata\n\t\tupdate              *ListingEntry\n\t\texpectedToSupercede bool\n\t}{\n\t\t{\n",
                    "rendered": {
                      "text": "\ttests := []struct {\n\t\tname                string\n\t\tcurrent             *Metadata\n\t\tupdate              *ListingEntry\n\t\texpectedToSupercede bool\n\t}{\n\t\t{\n",
                      "markdown": "`\ttests := []struct {\n\t\tname                string\n\t\tcurrent             *Metadata\n\t\tupdate              *ListingEntry\n\t\texpectedToSupercede bool\n\t}{\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/metadata_test.go"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 10,
                  "endLine": 51,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\t\t}\n\n\t\t\tif metadata != nil && test.expected != nil {\n\t\t\t\tfor _, diff := range deep.Equal(*metadata, *test.expected) {\n\t\t\t\t\tt.Errorf(\"metadata difference: %s\", diff)\n\t\t\t\t}\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t}\n\n\t\t\tif metadata != nil && test.expected != nil {\n\t\t\t\tfor _, diff := range deep.Equal(*metadata, *test.expected) {\n\t\t\t\t\tt.Errorf(\"metadata difference: %s\", diff)\n\t\t\t\t}\n\t\t\t}\n",
                      "markdown": "`\t\t\t}\n\n\t\t\tif metadata != nil && test.expected != nil {\n\t\t\t\tfor _, diff := range deep.Equal(*metadata, *test.expected) {\n\t\t\t\t\tt.Errorf(\"metadata difference: %s\", diff)\n\t\t\t\t}\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/listing_test.go"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 9,
                  "endLine": 148,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\t\tt.Fatalf(\"mismatched best candidate expectations\")\n\t\t\t}\n\n\t\t\tfor _, diff := range deep.Equal(actual, test.expected) {\n\t\t\t\tt.Errorf(\"listing entry difference: %s\", diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Fatalf(\"mismatched best candidate expectations\")\n\t\t\t}\n\n\t\t\tfor _, diff := range deep.Equal(actual, test.expected) {\n\t\t\t\tt.Errorf(\"listing entry difference: %s\", diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\t\t\t\tt.Fatalf(\"mismatched best candidate expectations\")\n\t\t\t}\n\n\t\t\tfor _, diff := range deep.Equal(actual, test.expected) {\n\t\t\t\tt.Errorf(\"listing entry difference: %s\", diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/listing_test.go"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 9,
                  "endLine": 101,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\t\tt.Fatalf(\"expected errer but got none\")\n\t\t\t}\n\n\t\t\tfor _, diff := range deep.Equal(listing, test.expected) {\n\t\t\t\tt.Errorf(\"listing difference: %s\", diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Fatalf(\"expected errer but got none\")\n\t\t\t}\n\n\t\t\tfor _, diff := range deep.Equal(listing, test.expected) {\n\t\t\t\tt.Errorf(\"listing difference: %s\", diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\t\t\t\tt.Fatalf(\"expected errer but got none\")\n\t\t\t}\n\n\t\t\tfor _, diff := range deep.Equal(listing, test.expected) {\n\t\t\t\tt.Errorf(\"listing difference: %s\", diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator_test.go"
                },
                "region": {
                  "startLine": 720,
                  "startColumn": 37,
                  "endLine": 720,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\trequire.WithinDuration(t, time.Now().UTC(), lastCheckTime, time.Second)\n\t})\n\n\tt.Run(\"error writing last successful update check\", func(t *testing.T) {\n\t\tinvalidFs := afero.NewReadOnlyFs(fs) // make it read-only, which should simular a write error\n\t\tcurator.fs = invalidFs\n\n",
                    "rendered": {
                      "text": "\t\trequire.WithinDuration(t, time.Now().UTC(), lastCheckTime, time.Second)\n\t})\n\n\tt.Run(\"error writing last successful update check\", func(t *testing.T) {\n\t\tinvalidFs := afero.NewReadOnlyFs(fs) // make it read-only, which should simular a write error\n\t\tcurator.fs = invalidFs\n\n",
                      "markdown": "`\t\trequire.WithinDuration(t, time.Now().UTC(), lastCheckTime, time.Second)\n\t})\n\n\tt.Run(\"error writing last successful update check\", func(t *testing.T) {\n\t\tinvalidFs := afero.NewReadOnlyFs(fs) // make it read-only, which should simular a write error\n\t\tcurator.fs = invalidFs\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator_test.go"
                },
                "region": {
                  "startLine": 709,
                  "startColumn": 27,
                  "endLine": 709,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\tdbDir: tempDir,\n\t}\n\n\tt.Run(\"set last successful update check\", func(t *testing.T) {\n\t\tcurator.setLastSuccessfulUpdateCheck()\n\n\t\tdata, err := afero.ReadFile(fs, path.Join(tempDir, lastUpdateCheckFileName))\n",
                    "rendered": {
                      "text": "\t\tdbDir: tempDir,\n\t}\n\n\tt.Run(\"set last successful update check\", func(t *testing.T) {\n\t\tcurator.setLastSuccessfulUpdateCheck()\n\n\t\tdata, err := afero.ReadFile(fs, path.Join(tempDir, lastUpdateCheckFileName))\n",
                      "markdown": "`\t\tdbDir: tempDir,\n\t}\n\n\tt.Run(\"set last successful update check\", func(t *testing.T) {\n\t\tcurator.setLastSuccessfulUpdateCheck()\n\n\t\tdata, err := afero.ReadFile(fs, path.Join(tempDir, lastUpdateCheckFileName))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator_test.go"
                },
                "region": {
                  "startLine": 696,
                  "startColumn": 56,
                  "endLine": 696,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\n\t\t_, err = curator.durationSinceUpdateCheck()\n\t\trequire.Error(t, err)\n\t\trequire.Contains(t, err.Error(), \"unable to parse last update check timestamp\")\n\t})\n}\n\n",
                    "rendered": {
                      "text": "\n\t\t_, err = curator.durationSinceUpdateCheck()\n\t\trequire.Error(t, err)\n\t\trequire.Contains(t, err.Error(), \"unable to parse last update check timestamp\")\n\t})\n}\n\n",
                      "markdown": "`\n\t\t_, err = curator.durationSinceUpdateCheck()\n\t\trequire.Error(t, err)\n\t\trequire.Contains(t, err.Error(), \"unable to parse last update check timestamp\")\n\t})\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator_test.go"
                },
                "region": {
                  "startLine": 143,
                  "endLine": 143,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\tt.Errorf(\"unable to get cwd: %+v\", err)\n\t}\n\n\tcmd := exec.Command(\"make\", \"server.crt\")\n\tcmd.Dir = filepath.Join(cwd, \"test-fixtures/tls\")\n\n\tstderr, err := cmd.StderrPipe()\n",
                    "rendered": {
                      "text": "\t\tt.Errorf(\"unable to get cwd: %+v\", err)\n\t}\n\n\tcmd := exec.Command(\"make\", \"server.crt\")\n\tcmd.Dir = filepath.Join(cwd, \"test-fixtures/tls\")\n\n\tstderr, err := cmd.StderrPipe()\n",
                      "markdown": "`\t\tt.Errorf(\"unable to get cwd: %+v\", err)\n\t}\n\n\tcmd := exec.Command(\"make\", \"server.crt\")\n\tcmd.Dir = filepath.Join(cwd, \"test-fixtures/tls\")\n\n\tstderr, err := cmd.StderrPipe()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator_test.go"
                },
                "region": {
                  "startLine": 602,
                  "startColumn": 31,
                  "endLine": 602,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n\t\terr = curator.UpdateTo(&entry, downloadProgress, importProgress, stage)\n\t\tif err == nil {\n\t\t\terrs <- errors.New(\"expected timeout error but got nil\")\n\t\t\treturn\n\t\t}\n\t\tif !strings.Contains(err.Error(), \"Timeout exceeded\") {\n",
                    "rendered": {
                      "text": "\n\t\terr = curator.UpdateTo(&entry, downloadProgress, importProgress, stage)\n\t\tif err == nil {\n\t\t\terrs <- errors.New(\"expected timeout error but got nil\")\n\t\t\treturn\n\t\t}\n\t\tif !strings.Contains(err.Error(), \"Timeout exceeded\") {\n",
                      "markdown": "`\n\t\terr = curator.UpdateTo(&entry, downloadProgress, importProgress, stage)\n\t\tif err == nil {\n\t\t\terrs <- errors.New(\"expected timeout error but got nil\")\n\t\t\treturn\n\t\t}\n\t\tif !strings.Contains(err.Error(), \"Timeout exceeded\") {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator_test.go"
                },
                "region": {
                  "startLine": 592,
                  "startColumn": 31,
                  "endLine": 592,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\trunTheTest := func(success chan struct{}, errs chan error) {\n\t\t_, _, _, err = curator.IsUpdateAvailable()\n\t\tif err == nil {\n\t\t\terrs <- errors.New(\"expected timeout error but got nil\")\n\t\t\treturn\n\t\t}\n\t\tif !strings.Contains(err.Error(), \"Timeout exceeded\") {\n",
                    "rendered": {
                      "text": "\trunTheTest := func(success chan struct{}, errs chan error) {\n\t\t_, _, _, err = curator.IsUpdateAvailable()\n\t\tif err == nil {\n\t\t\terrs <- errors.New(\"expected timeout error but got nil\")\n\t\t\treturn\n\t\t}\n\t\tif !strings.Contains(err.Error(), \"Timeout exceeded\") {\n",
                      "markdown": "`\trunTheTest := func(success chan struct{}, errs chan error) {\n\t\t_, _, _, err = curator.IsUpdateAvailable()\n\t\tif err == nil {\n\t\t\terrs <- errors.New(\"expected timeout error but got nil\")\n\t\t\treturn\n\t\t}\n\t\tif !strings.Contains(err.Error(), \"Timeout exceeded\") {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/legacy/distribution/curator_test.go"
                },
                "region": {
                  "startLine": 553,
                  "endLine": 553,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tfailAfter := 10 * time.Second\n\tsuccess := make(chan struct{})\n\terrs := make(chan error)\n\ttimeout := time.After(failAfter)\n\n\thangForeverHandler := func(w http.ResponseWriter, r *http.Request) {\n\t\tselect {} // hang forever\n",
                    "rendered": {
                      "text": "\tfailAfter := 10 * time.Second\n\tsuccess := make(chan struct{})\n\terrs := make(chan error)\n\ttimeout := time.After(failAfter)\n\n\thangForeverHandler := func(w http.ResponseWriter, r *http.Request) {\n\t\tselect {} // hang forever\n",
                      "markdown": "`\tfailAfter := 10 * time.Second\n\tsuccess := make(chan struct{})\n\terrs := make(chan error)\n\ttimeout := time.After(failAfter)\n\n\thangForeverHandler := func(w http.ResponseWriter, r *http.Request) {\n\t\tselect {} // hang forever\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/ruby/matcher.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package ruby\n\nimport (\n\t\"github.com/anchore/grype/grype/distro\"\n\t\"github.com/anchore/grype/grype/match\"\n",
                    "rendered": {
                      "text": "package ruby\n\nimport (\n\t\"github.com/anchore/grype/grype/distro\"\n\t\"github.com/anchore/grype/grype/match\"\n",
                      "markdown": "`package ruby\n\nimport (\n\t\"github.com/anchore/grype/grype/distro\"\n\t\"github.com/anchore/grype/grype/match\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/java/matcher_test.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 16,
                  "endLine": 27,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\t\t\tArchiveDigests: []pkg.Digest{\n\t\t\t\t{\n\t\t\t\t\tAlgorithm: \"sha1\",\n\t\t\t\t\tValue:     \"236e3bfdbdc6c86629237a74f0f11414adb4e211\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tArchiveDigests: []pkg.Digest{\n\t\t\t\t{\n\t\t\t\t\tAlgorithm: \"sha1\",\n\t\t\t\t\tValue:     \"236e3bfdbdc6c86629237a74f0f11414adb4e211\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n",
                      "markdown": "`\t\t\tArchiveDigests: []pkg.Digest{\n\t\t\t\t{\n\t\t\t\t\tAlgorithm: \"sha1\",\n\t\t\t\t\tValue:     \"236e3bfdbdc6c86629237a74f0f11414adb4e211\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/dpkg/matcher_test.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package dpkg\n\nimport (\n\t\"testing\"\n\n",
                    "rendered": {
                      "text": "package dpkg\n\nimport (\n\t\"testing\"\n\n",
                      "markdown": "`package dpkg\n\nimport (\n\t\"testing\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/dpkg/matcher.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 61,
                  "endLine": 49,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := search.ByPackageDistro(store, d, indirectPackage, m.Type())\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for dpkg upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n",
                    "rendered": {
                      "text": "\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := search.ByPackageDistro(store, d, indirectPackage, m.Type())\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for dpkg upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n",
                      "markdown": "`\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := search.ByPackageDistro(store, d, indirectPackage, m.Type())\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for dpkg upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/dpkg/matcher.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 36,
                  "endLine": 49,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := search.ByPackageDistro(store, d, indirectPackage, m.Type())\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for dpkg upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n",
                    "rendered": {
                      "text": "\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := search.ByPackageDistro(store, d, indirectPackage, m.Type())\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for dpkg upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n",
                      "markdown": "`\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := search.ByPackageDistro(store, d, indirectPackage, m.Type())\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for dpkg upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/dpkg/matcher.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package dpkg\n\nimport (\n\t\"fmt\"\n\n",
                    "rendered": {
                      "text": "package dpkg\n\nimport (\n\t\"fmt\"\n\n",
                      "markdown": "`package dpkg\n\nimport (\n\t\"fmt\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/dpkg/matcher_mocks_test.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package dpkg\n\nimport (\n\t\"strings\"\n\n",
                    "rendered": {
                      "text": "package dpkg\n\nimport (\n\t\"strings\"\n\n",
                      "markdown": "`package dpkg\n\nimport (\n\t\"strings\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/apk/matcher_test.go"
                },
                "region": {
                  "startLine": 1037,
                  "startColumn": 48,
                  "endLine": 1037,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\tcmpopts.IgnoreFields(pkg.Package{}, \"Locations\"),\n\t}\n\n\tif diff := cmp.Diff(expected, actual, opts...); diff != \"\" {\n\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n",
                    "rendered": {
                      "text": "\t\tcmpopts.IgnoreFields(pkg.Package{}, \"Locations\"),\n\t}\n\n\tif diff := cmp.Diff(expected, actual, opts...); diff != \"\" {\n\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n",
                      "markdown": "`\t\tcmpopts.IgnoreFields(pkg.Package{}, \"Locations\"),\n\t}\n\n\tif diff := cmp.Diff(expected, actual, opts...); diff != \"\" {\n\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/apk/matcher_test.go"
                },
                "region": {
                  "startLine": 1037,
                  "startColumn": 3,
                  "endLine": 1037,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\tcmpopts.IgnoreFields(pkg.Package{}, \"Locations\"),\n\t}\n\n\tif diff := cmp.Diff(expected, actual, opts...); diff != \"\" {\n\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n",
                    "rendered": {
                      "text": "\t\tcmpopts.IgnoreFields(pkg.Package{}, \"Locations\"),\n\t}\n\n\tif diff := cmp.Diff(expected, actual, opts...); diff != \"\" {\n\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n",
                      "markdown": "`\t\tcmpopts.IgnoreFields(pkg.Package{}, \"Locations\"),\n\t}\n\n\tif diff := cmp.Diff(expected, actual, opts...); diff != \"\" {\n\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/apk/matcher.go"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 36,
                  "endLine": 191,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := m.findMatchesForPackage(store, d, indirectPackage)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for apk upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n",
                    "rendered": {
                      "text": "\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := m.findMatchesForPackage(store, d, indirectPackage)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for apk upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n",
                      "markdown": "`\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := m.findMatchesForPackage(store, d, indirectPackage)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for apk upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/rpm/matcher_test.go"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 22,
                  "endLine": 334,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t\tstore, d, matcher := test.setup()\n\t\t\tactual, err := matcher.Match(store, d, test.p)\n\t\t\tif err != nil {\n\t\t\t\tt.Fatal(\"could not find match: \", err)\n\t\t\t}\n\n\t\t\tassert.Len(t, actual, len(test.expectedMatches), \"unexpected matches count\")\n",
                    "rendered": {
                      "text": "\t\t\tstore, d, matcher := test.setup()\n\t\t\tactual, err := matcher.Match(store, d, test.p)\n\t\t\tif err != nil {\n\t\t\t\tt.Fatal(\"could not find match: \", err)\n\t\t\t}\n\n\t\t\tassert.Len(t, actual, len(test.expectedMatches), \"unexpected matches count\")\n",
                      "markdown": "`\t\t\tstore, d, matcher := test.setup()\n\t\t\tactual, err := matcher.Match(store, d, test.p)\n\t\t\tif err != nil {\n\t\t\t\tt.Fatal(\"could not find match: \", err)\n\t\t\t}\n\n\t\t\tassert.Len(t, actual, len(test.expectedMatches), \"unexpected matches count\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/rpm/matcher_test.go"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 60,
                  "endLine": 61,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"Rpm Match matches by direct and ignores the source rpm when the package names are the same\",\n\t\t\tp: pkg.Package{\n\t\t\t\tID:      pkg.ID(uuid.NewString()),\n\t\t\t\tName:    \"neutron\",\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"Rpm Match matches by direct and ignores the source rpm when the package names are the same\",\n\t\t\tp: pkg.Package{\n\t\t\t\tID:      pkg.ID(uuid.NewString()),\n\t\t\t\tName:    \"neutron\",\n",
                      "markdown": "`\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"Rpm Match matches by direct and ignores the source rpm when the package names are the same\",\n\t\t\tp: pkg.Package{\n\t\t\t\tID:      pkg.ID(uuid.NewString()),\n\t\t\t\tName:    \"neutron\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/rpm/matcher_test.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package rpm\n\nimport (\n\t\"testing\"\n\n",
                    "rendered": {
                      "text": "package rpm\n\nimport (\n\t\"testing\"\n\n",
                      "markdown": "`package rpm\n\nimport (\n\t\"testing\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/rpm/matcher.go"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 59,
                  "endLine": 133,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n\tmatches, err := search.ByPackageDistro(store, d, p, m.Type())\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities by dpkg source indirection: %w\", err)\n\t}\n\n\t// we want to make certain that we are tracking the match based on the package from the SBOM (not the modified package).\n",
                    "rendered": {
                      "text": "\n\tmatches, err := search.ByPackageDistro(store, d, p, m.Type())\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities by dpkg source indirection: %w\", err)\n\t}\n\n\t// we want to make certain that we are tracking the match based on the package from the SBOM (not the modified package).\n",
                      "markdown": "`\n\tmatches, err := search.ByPackageDistro(store, d, p, m.Type())\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities by dpkg source indirection: %w\", err)\n\t}\n\n\t// we want to make certain that we are tracking the match based on the package from the SBOM (not the modified package).\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/rpm/matcher.go"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 35,
                  "endLine": 133,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n\tmatches, err := search.ByPackageDistro(store, d, p, m.Type())\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities by dpkg source indirection: %w\", err)\n\t}\n\n\t// we want to make certain that we are tracking the match based on the package from the SBOM (not the modified package).\n",
                    "rendered": {
                      "text": "\n\tmatches, err := search.ByPackageDistro(store, d, p, m.Type())\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities by dpkg source indirection: %w\", err)\n\t}\n\n\t// we want to make certain that we are tracking the match based on the package from the SBOM (not the modified package).\n",
                      "markdown": "`\n\tmatches, err := search.ByPackageDistro(store, d, p, m.Type())\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities by dpkg source indirection: %w\", err)\n\t}\n\n\t// we want to make certain that we are tracking the match based on the package from the SBOM (not the modified package).\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/rpm/matcher.go"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 61,
                  "endLine": 113,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := search.ByPackageDistro(store, d, indirectPackage, m.Type())\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for rpm upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n",
                    "rendered": {
                      "text": "\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := search.ByPackageDistro(store, d, indirectPackage, m.Type())\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for rpm upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n",
                      "markdown": "`\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := search.ByPackageDistro(store, d, indirectPackage, m.Type())\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for rpm upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/rpm/matcher.go"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 36,
                  "endLine": 113,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := search.ByPackageDistro(store, d, indirectPackage, m.Type())\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for rpm upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n",
                    "rendered": {
                      "text": "\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := search.ByPackageDistro(store, d, indirectPackage, m.Type())\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for rpm upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n",
                      "markdown": "`\tfor _, indirectPackage := range pkg.UpstreamPackages(p) {\n\t\tindirectMatches, err := search.ByPackageDistro(store, d, indirectPackage, m.Type())\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities for rpm upstream source package: %w\", err)\n\t\t}\n\t\tmatches = append(matches, indirectMatches...)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/rpm/matcher.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package rpm\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n",
                    "rendered": {
                      "text": "package rpm\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n",
                      "markdown": "`package rpm\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/rpm/matcher_mocks_test.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package rpm\n\nimport (\n\t\"strings\"\n\n",
                    "rendered": {
                      "text": "package rpm\n\nimport (\n\t\"strings\"\n\n",
                      "markdown": "`package rpm\n\nimport (\n\t\"strings\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/portage/matcher.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 35,
                  "endLine": 28,
                  "endColumn": 41,
                  "snippet": {
                    "text": "func (m *Matcher) Match(store vulnerability.Provider, d *distro.Distro, p pkg.Package) ([]match.Match, error) {\n\tmatches, err := search.ByPackageDistro(store, d, p, m.Type())\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities: %w\", err)\n\t}\n\n\treturn matches, nil\n",
                    "rendered": {
                      "text": "func (m *Matcher) Match(store vulnerability.Provider, d *distro.Distro, p pkg.Package) ([]match.Match, error) {\n\tmatches, err := search.ByPackageDistro(store, d, p, m.Type())\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities: %w\", err)\n\t}\n\n\treturn matches, nil\n",
                      "markdown": "`func (m *Matcher) Match(store vulnerability.Provider, d *distro.Distro, p pkg.Package) ([]match.Match, error) {\n\tmatches, err := search.ByPackageDistro(store, d, p, m.Type())\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to find vulnerabilities: %w\", err)\n\t}\n\n\treturn matches, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/dotnet/matcher.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package dotnet\n\nimport (\n\t\"github.com/anchore/grype/grype/distro\"\n\t\"github.com/anchore/grype/grype/match\"\n",
                    "rendered": {
                      "text": "package dotnet\n\nimport (\n\t\"github.com/anchore/grype/grype/distro\"\n\t\"github.com/anchore/grype/grype/match\"\n",
                      "markdown": "`package dotnet\n\nimport (\n\t\"github.com/anchore/grype/grype/distro\"\n\t\"github.com/anchore/grype/grype/match\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/matchers.go"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tJava       java.MatcherConfig\n\tRuby       ruby.MatcherConfig\n\tPython     python.MatcherConfig\n\tDotnet     dotnet.MatcherConfig\n\tJavascript javascript.MatcherConfig\n\tGolang     golang.MatcherConfig\n\tRust       rust.MatcherConfig\n",
                    "rendered": {
                      "text": "\tJava       java.MatcherConfig\n\tRuby       ruby.MatcherConfig\n\tPython     python.MatcherConfig\n\tDotnet     dotnet.MatcherConfig\n\tJavascript javascript.MatcherConfig\n\tGolang     golang.MatcherConfig\n\tRust       rust.MatcherConfig\n",
                      "markdown": "`\tJava       java.MatcherConfig\n\tRuby       ruby.MatcherConfig\n\tPython     python.MatcherConfig\n\tDotnet     dotnet.MatcherConfig\n\tJavascript javascript.MatcherConfig\n\tGolang     golang.MatcherConfig\n\tRust       rust.MatcherConfig\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/matcher/matchers.go"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "endColumn": 6,
                  "snippet": {
                    "text": "// Config contains values used by individual matcher structs for advanced configuration\ntype Config struct {\n\tJava       java.MatcherConfig\n\tRuby       ruby.MatcherConfig\n\tPython     python.MatcherConfig\n\tDotnet     dotnet.MatcherConfig\n\tJavascript javascript.MatcherConfig\n",
                    "rendered": {
                      "text": "// Config contains values used by individual matcher structs for advanced configuration\ntype Config struct {\n\tJava       java.MatcherConfig\n\tRuby       ruby.MatcherConfig\n\tPython     python.MatcherConfig\n\tDotnet     dotnet.MatcherConfig\n\tJavascript javascript.MatcherConfig\n",
                      "markdown": "`// Config contains values used by individual matcher structs for advanced configuration\ntype Config struct {\n\tJava       java.MatcherConfig\n\tRuby       ruby.MatcherConfig\n\tPython     python.MatcherConfig\n\tDotnet     dotnet.MatcherConfig\n\tJavascript javascript.MatcherConfig\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-debian-match-coverage/java/example-java-app-maven-0.1.0.jar/org/joda/time/format/messages_da.properties"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 19,
                  "endLine": 15,
                  "endColumn": 25,
                  "snippet": {
                    "text": "PeriodFormat.weeks=\\ uger\r\nPeriodFormat.day=\\ dag\r\nPeriodFormat.days=\\ dage\r\nPeriodFormat.hour=\\ time\r\nPeriodFormat.hours=\\ timer\r\nPeriodFormat.minute=\\ minut\r\nPeriodFormat.minutes=\\ minutter\r\n",
                    "rendered": {
                      "text": "PeriodFormat.weeks=\\ uger\r\nPeriodFormat.day=\\ dag\r\nPeriodFormat.days=\\ dage\r\nPeriodFormat.hour=\\ time\r\nPeriodFormat.hours=\\ timer\r\nPeriodFormat.minute=\\ minut\r\nPeriodFormat.minutes=\\ minutter\r\n",
                      "markdown": "`PeriodFormat.weeks=\\ uger\r\nPeriodFormat.day=\\ dag\r\nPeriodFormat.days=\\ dage\r\nPeriodFormat.hour=\\ time\r\nPeriodFormat.hours=\\ timer\r\nPeriodFormat.minute=\\ minut\r\nPeriodFormat.minutes=\\ minutter\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 13,
                  "endLine": 232,
                  "endColumn": 21,
                  "snippet": {
                    "text": "`vulnerability-match-labels` repo. After the PR is approved and merged to `vulnerability-match-labels` repo's `main`\nbranch, update the submodule locally using:\n```shell\ngit submodule update --remote\n```\n\nNext, _commit the submodule change_ as part of any other changes \n",
                    "rendered": {
                      "text": "`vulnerability-match-labels` repo. After the PR is approved and merged to `vulnerability-match-labels` repo's `main`\nbranch, update the submodule locally using:\n```shell\ngit submodule update --remote\n```\n\nNext, _commit the submodule change_ as part of any other changes \n",
                      "markdown": "``vulnerability-match-labels` repo. After the PR is approved and merged to `vulnerability-match-labels` repo's `main`\nbranch, update the submodule locally using:\n```shell\ngit submodule update --remote\n```\n\nNext, _commit the submodule change_ as part of any other changes \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 7,
                  "endLine": 230,
                  "endColumn": 15,
                  "snippet": {
                    "text": "Commit the changes to this branch, push, create a pull request like normal. NOTE: you may need to add a fork\n(`git remote add ...`) and push to the fork if you don't have push permissions against the main\n`vulnerability-match-labels` repo. After the PR is approved and merged to `vulnerability-match-labels` repo's `main`\nbranch, update the submodule locally using:\n```shell\ngit submodule update --remote\n```\n",
                    "rendered": {
                      "text": "Commit the changes to this branch, push, create a pull request like normal. NOTE: you may need to add a fork\n(`git remote add ...`) and push to the fork if you don't have push permissions against the main\n`vulnerability-match-labels` repo. After the PR is approved and merged to `vulnerability-match-labels` repo's `main`\nbranch, update the submodule locally using:\n```shell\ngit submodule update --remote\n```\n",
                      "markdown": "`Commit the changes to this branch, push, create a pull request like normal. NOTE: you may need to add a fork\n(`git remote add ...`) and push to the fork if you don't have push permissions against the main\n`vulnerability-match-labels` repo. After the PR is approved and merged to `vulnerability-match-labels` repo's `main`\nbranch, update the submodule locally using:\n```shell\ngit submodule update --remote\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 2,
                  "endLine": 219,
                  "endColumn": 10,
                  "snippet": {
                    "text": "After iterating on all the changes we need using `yardstick label explore`, we're now ready to commit changes. Since\nwe're using `git submodules`, we need to do two steps:\n1. get the changes merged to the `vulnerability-match-labels` repository `main` branch\n2. update the submodule in this repository\n\nTo create a pull request for the `vulnerability-match-labels`, make sure you are in the `vulnerability-match-labels`\nsubdirectory and create a branch -- something like:\n",
                    "rendered": {
                      "text": "After iterating on all the changes we need using `yardstick label explore`, we're now ready to commit changes. Since\nwe're using `git submodules`, we need to do two steps:\n1. get the changes merged to the `vulnerability-match-labels` repository `main` branch\n2. update the submodule in this repository\n\nTo create a pull request for the `vulnerability-match-labels`, make sure you are in the `vulnerability-match-labels`\nsubdirectory and create a branch -- something like:\n",
                      "markdown": "`After iterating on all the changes we need using `yardstick label explore`, we're now ready to commit changes. Since\nwe're using `git submodules`, we need to do two steps:\n1. get the changes merged to the `vulnerability-match-labels` repository `main` branch\n2. update the submodule in this repository\n\nTo create a pull request for the `vulnerability-match-labels`, make sure you are in the `vulnerability-match-labels`\nsubdirectory and create a branch -- something like:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 208,
                  "endLine": 209,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\nAt this point we can use the TUI to explore and modify the match data, by deleting things or labeling as\ntrue positives, false positives, etc.. **After making changes make sure to save the results** (`Ctrl-S`)!\n\nAt this point you can run the quality gate using updated label data. The quality gate can run against \njust one image, for example the image we first found in the failure, so run the quality gate and see\nhow changes to the label data have affected the result:\n```shell\n",
                    "rendered": {
                      "text": "\nAt this point we can use the TUI to explore and modify the match data, by deleting things or labeling as\ntrue positives, false positives, etc.. **After making changes make sure to save the results** (`Ctrl-S`)!\n\nAt this point you can run the quality gate using updated label data. The quality gate can run against \njust one image, for example the image we first found in the failure, so run the quality gate and see\nhow changes to the label data have affected the result:\n```shell\n",
                      "markdown": "`\nAt this point we can use the TUI to explore and modify the match data, by deleting things or labeling as\ntrue positives, false positives, etc.. **After making changes make sure to save the results** (`Ctrl-S`)!\n\nAt this point you can run the quality gate using updated label data. The quality gate can run against \njust one image, for example the image we first found in the failure, so run the quality gate and see\nhow changes to the label data have affected the result:\n```shell\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 205,
                  "endLine": 206,
                  "endColumn": 3,
                  "snippet": {
                    "text": "```shell\nyardstick label explore 5bf0611b-183f-4525-a1ab-f268f62f48b6\n```\n\nAt this point we can use the TUI to explore and modify the match data, by deleting things or labeling as\ntrue positives, false positives, etc.. **After making changes make sure to save the results** (`Ctrl-S`)!\n\nAt this point you can run the quality gate using updated label data. The quality gate can run against \n",
                    "rendered": {
                      "text": "```shell\nyardstick label explore 5bf0611b-183f-4525-a1ab-f268f62f48b6\n```\n\nAt this point we can use the TUI to explore and modify the match data, by deleting things or labeling as\ntrue positives, false positives, etc.. **After making changes make sure to save the results** (`Ctrl-S`)!\n\nAt this point you can run the quality gate using updated label data. The quality gate can run against \n",
                      "markdown": "````shell\nyardstick label explore 5bf0611b-183f-4525-a1ab-f268f62f48b6\n```\n\nAt this point we can use the TUI to explore and modify the match data, by deleting things or labeling as\ntrue positives, false positives, etc.. **After making changes make sure to save the results** (`Ctrl-S`)!\n\nAt this point you can run the quality gate using updated label data. The quality gate can run against \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 36,
                  "endLine": 152,
                  "endColumn": 44,
                  "snippet": {
                    "text": "initialized, the match data from `vulnerabilty-match-labels` will be available locally.\n\n**TIP**: when dealing with submodules, it may be convenient to set the git config option `submodule.recurse` to `true`\nso `git checkout` will automatically update submodules to the correct commit:\n```shell\ngit config submodule.recurse true\n```\n",
                    "rendered": {
                      "text": "initialized, the match data from `vulnerabilty-match-labels` will be available locally.\n\n**TIP**: when dealing with submodules, it may be convenient to set the git config option `submodule.recurse` to `true`\nso `git checkout` will automatically update submodules to the correct commit:\n```shell\ngit config submodule.recurse true\n```\n",
                      "markdown": "`initialized, the match data from `vulnerabilty-match-labels` will be available locally.\n\n**TIP**: when dealing with submodules, it may be convenient to set the git config option `submodule.recurse` to `true`\nso `git checkout` will automatically update submodules to the correct commit:\n```shell\ngit config submodule.recurse true\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 67,
                  "endLine": 148,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\nOne way of working is to simply run `yardstick` and `gate.py` in the `test/quality` directory.\nYou will need to make sure the `vulnerabilty-match-labels` submodule has been initialized. This happens automatically\nfor some `make` commands, but you can ensure this by `git submodule update --init`. After the submodule has been\ninitialized, the match data from `vulnerabilty-match-labels` will be available locally.\n\n**TIP**: when dealing with submodules, it may be convenient to set the git config option `submodule.recurse` to `true`\n",
                    "rendered": {
                      "text": "\nOne way of working is to simply run `yardstick` and `gate.py` in the `test/quality` directory.\nYou will need to make sure the `vulnerabilty-match-labels` submodule has been initialized. This happens automatically\nfor some `make` commands, but you can ensure this by `git submodule update --init`. After the submodule has been\ninitialized, the match data from `vulnerabilty-match-labels` will be available locally.\n\n**TIP**: when dealing with submodules, it may be convenient to set the git config option `submodule.recurse` to `true`\n",
                      "markdown": "`\nOne way of working is to simply run `yardstick` and `gate.py` in the `test/quality` directory.\nYou will need to make sure the `vulnerabilty-match-labels` submodule has been initialized. This happens automatically\nfor some `make` commands, but you can ensure this by `git submodule update --init`. After the submodule has been\ninitialized, the match data from `vulnerabilty-match-labels` will be available locally.\n\n**TIP**: when dealing with submodules, it may be convenient to set the git config option `submodule.recurse` to `true`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 24,
                  "endLine": 117,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  during analysis).\n\n- For the captured SBOMs, container images referenced must be with a digest, not\n  just a tag. In case we update a tool version (say syft) we want to make\n  certain that we are scanning the exact same artifact later when we re-run the\n  analysis.\n\n",
                    "rendered": {
                      "text": "  during analysis).\n\n- For the captured SBOMs, container images referenced must be with a digest, not\n  just a tag. In case we update a tool version (say syft) we want to make\n  certain that we are scanning the exact same artifact later when we re-run the\n  analysis.\n\n",
                      "markdown": "`  during analysis).\n\n- For the captured SBOMs, container images referenced must be with a digest, not\n  just a tag. In case we update a tool version (say syft) we want to make\n  certain that we are scanning the exact same artifact later when we re-run the\n  analysis.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 41,
                  "endLine": 72,
                  "endColumn": 45,
                  "snippet": {
                    "text": "   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n   the vulnerability databases from the run of `b` simply had more up to date\n   information, and if `grype@a` were run at the same time (on tuesday) this\n   reason can be almost entirely eliminated.\n\n2. **Comparing vulnerability results across images with different digests is invalid**.\n",
                    "rendered": {
                      "text": "   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n   the vulnerability databases from the run of `b` simply had more up to date\n   information, and if `grype@a` were run at the same time (on tuesday) this\n   reason can be almost entirely eliminated.\n\n2. **Comparing vulnerability results across images with different digests is invalid**.\n",
                      "markdown": "`   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n   the vulnerability databases from the run of `b` simply had more up to date\n   information, and if `grype@a` were run at the same time (on tuesday) this\n   reason can be almost entirely eliminated.\n\n2. **Comparing vulnerability results across images with different digests is invalid**.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 37,
                  "endLine": 68,
                  "endColumn": 41,
                  "snippet": {
                    "text": "1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n   the vulnerability databases from the run of `b` simply had more up to date\n",
                    "rendered": {
                      "text": "1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n   the vulnerability databases from the run of `b` simply had more up to date\n",
                      "markdown": "`1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n   the vulnerability databases from the run of `b` simply had more up to date\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 2,
                  "endLine": 68,
                  "endColumn": 6,
                  "snippet": {
                    "text": "1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n   the vulnerability databases from the run of `b` simply had more up to date\n",
                    "rendered": {
                      "text": "1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n   the vulnerability databases from the run of `b` simply had more up to date\n",
                      "markdown": "`1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n   the vulnerability databases from the run of `b` simply had more up to date\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 10,
                  "endLine": 67,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n",
                    "rendered": {
                      "text": "\n1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n",
                      "markdown": "`\n1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 42,
                  "endLine": 65,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n## Assumptions\n\n1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n",
                    "rendered": {
                      "text": "\n## Assumptions\n\n1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n",
                      "markdown": "`\n## Assumptions\n\n1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 59,
                  "endLine": 275,
                  "endColumn": 65,
                  "snippet": {
                    "text": "pyenv shell 3.10.7\n```\n\n(or maybe just: `pyenv shell $(pyenv versions | grep 3.10 | tail -1)`)\n\nVerify this has worked properly by running:\n```shell\n",
                    "rendered": {
                      "text": "pyenv shell 3.10.7\n```\n\n(or maybe just: `pyenv shell $(pyenv versions | grep 3.10 | tail -1)`)\n\nVerify this has worked properly by running:\n```shell\n",
                      "markdown": "`pyenv shell 3.10.7\n```\n\n(or maybe just: `pyenv shell $(pyenv versions | grep 3.10 | tail -1)`)\n\nVerify this has worked properly by running:\n```shell\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 47,
                  "endLine": 275,
                  "endColumn": 53,
                  "snippet": {
                    "text": "pyenv shell 3.10.7\n```\n\n(or maybe just: `pyenv shell $(pyenv versions | grep 3.10 | tail -1)`)\n\nVerify this has worked properly by running:\n```shell\n",
                    "rendered": {
                      "text": "pyenv shell 3.10.7\n```\n\n(or maybe just: `pyenv shell $(pyenv versions | grep 3.10 | tail -1)`)\n\nVerify this has worked properly by running:\n```shell\n",
                      "markdown": "`pyenv shell 3.10.7\n```\n\n(or maybe just: `pyenv shell $(pyenv versions | grep 3.10 | tail -1)`)\n\nVerify this has worked properly by running:\n```shell\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 8,
                  "endLine": 232,
                  "endColumn": 4,
                  "snippet": {
                    "text": "(`git remote add ...`) and push to the fork if you don't have push permissions against the main\n`vulnerability-match-labels` repo. After the PR is approved and merged to `vulnerability-match-labels` repo's `main`\nbranch, update the submodule locally using:\n```shell\ngit submodule update --remote\n```\n\nNext, _commit the submodule change_ as part of any other changes \n",
                    "rendered": {
                      "text": "(`git remote add ...`) and push to the fork if you don't have push permissions against the main\n`vulnerability-match-labels` repo. After the PR is approved and merged to `vulnerability-match-labels` repo's `main`\nbranch, update the submodule locally using:\n```shell\ngit submodule update --remote\n```\n\nNext, _commit the submodule change_ as part of any other changes \n",
                      "markdown": "`(`git remote add ...`) and push to the fork if you don't have push permissions against the main\n`vulnerability-match-labels` repo. After the PR is approved and merged to `vulnerability-match-labels` repo's `main`\nbranch, update the submodule locally using:\n```shell\ngit submodule update --remote\n```\n\nNext, _commit the submodule change_ as part of any other changes \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 8,
                  "endLine": 224,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nTo create a pull request for the `vulnerability-match-labels`, make sure you are in the `vulnerability-match-labels`\nsubdirectory and create a branch -- something like:\n```shell\ngit checkout --no-track -b my-branch-name\n```\n\nCommit the changes to this branch, push, create a pull request like normal. NOTE: you may need to add a fork\n",
                    "rendered": {
                      "text": "\nTo create a pull request for the `vulnerability-match-labels`, make sure you are in the `vulnerability-match-labels`\nsubdirectory and create a branch -- something like:\n```shell\ngit checkout --no-track -b my-branch-name\n```\n\nCommit the changes to this branch, push, create a pull request like normal. NOTE: you may need to add a fork\n",
                      "markdown": "`\nTo create a pull request for the `vulnerability-match-labels`, make sure you are in the `vulnerability-match-labels`\nsubdirectory and create a branch -- something like:\n```shell\ngit checkout --no-track -b my-branch-name\n```\n\nCommit the changes to this branch, push, create a pull request like normal. NOTE: you may need to add a fork\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 60,
                  "endLine": 193,
                  "endColumn": 66,
                  "snippet": {
                    "text": "importantly: the image we need to focus on (`docker.io/anchore/test_images@sha256:808f6cf3cf4473eb39ff9bb47ead639d2ed71255b75b9b140162b58c6102bcc9`).\n\nUsing the SHA above, we can run `yardstick` to see which results are available:\n```shell\n$ yardstick result list --result-set pr_vs_latest_via_sbom | grep 808f6cf3cf4473eb39ff9bb47ead639d2ed71255b75b9b140162b58c6102bcc9\n\n5bf0611b-183f-4525-a1ab-f268f62f48b6  docker.io/anchore/test_images:appstreams-centos-stream-8-1a287dd@sha256:808f6cf3cf4473eb39ff9bb47ead639d2ed71255b75b9b140162b58c6102bcc9          grype@v0.53.1              2022-12-09 20:49:56+00:",
                    "rendered": {
                      "text": "importantly: the image we need to focus on (`docker.io/anchore/test_images@sha256:808f6cf3cf4473eb39ff9bb47ead639d2ed71255b75b9b140162b58c6102bcc9`).\n\nUsing the SHA above, we can run `yardstick` to see which results are available:\n```shell\n$ yardstick result list --result-set pr_vs_latest_via_sbom | grep 808f6cf3cf4473eb39ff9bb47ead639d2ed71255b75b9b140162b58c6102bcc9\n\n5bf0611b-183f-4525-a1ab-f268f62f48b6  docker.io/anchore/test_images:appstreams-centos-stream-8-1a287dd@sha256:808f6cf3cf4473eb39ff9bb47ead639d2ed71255b75b9b140162b58c6102bcc9          grype@v0.53.1              2022-12-09 20:49:56+00:",
                      "markdown": "`importantly: the image we need to focus on (`docker.io/anchore/test_images@sha256:808f6cf3cf4473eb39ff9bb47ead639d2ed71255b75b9b140162b58c6102bcc9`).\n\nUsing the SHA above, we can run `yardstick` to see which results are available:\n```shell\n$ yardstick result list --result-set pr_vs_latest_via_sbom | grep 808f6cf3cf4473eb39ff9bb47ead639d2ed71255b75b9b140162b58c6102bcc9\n\n5bf0611b-183f-4525-a1ab-f268f62f48b6  docker.io/anchore/test_images:appstreams-centos-stream-8-1a287dd@sha256:808f6cf3cf4473eb39ff9bb47ead639d2ed71255b75b9b140162b58c6102bcc9          grype@v0.53.1              2022-12-09 20:49:56+00:`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 8,
                  "endLine": 154,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n**TIP**: when dealing with submodules, it may be convenient to set the git config option `submodule.recurse` to `true`\nso `git checkout` will automatically update submodules to the correct commit:\n```shell\ngit config submodule.recurse true\n```\n\nTo do this we need some results to begin with. As noted above, start with (this does ensure the submodule is initialized):\n",
                    "rendered": {
                      "text": "\n**TIP**: when dealing with submodules, it may be convenient to set the git config option `submodule.recurse` to `true`\nso `git checkout` will automatically update submodules to the correct commit:\n```shell\ngit config submodule.recurse true\n```\n\nTo do this we need some results to begin with. As noted above, start with (this does ensure the submodule is initialized):\n",
                      "markdown": "`\n**TIP**: when dealing with submodules, it may be convenient to set the git config option `submodule.recurse` to `true`\nso `git checkout` will automatically update submodules to the correct commit:\n```shell\ngit config submodule.recurse true\n```\n\nTo do this we need some results to begin with. As noted above, start with (this does ensure the submodule is initialized):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 70,
                  "endLine": 151,
                  "endColumn": 75,
                  "snippet": {
                    "text": "for some `make` commands, but you can ensure this by `git submodule update --init`. After the submodule has been\ninitialized, the match data from `vulnerabilty-match-labels` will be available locally.\n\n**TIP**: when dealing with submodules, it may be convenient to set the git config option `submodule.recurse` to `true`\nso `git checkout` will automatically update submodules to the correct commit:\n```shell\ngit config submodule.recurse true\n",
                    "rendered": {
                      "text": "for some `make` commands, but you can ensure this by `git submodule update --init`. After the submodule has been\ninitialized, the match data from `vulnerabilty-match-labels` will be available locally.\n\n**TIP**: when dealing with submodules, it may be convenient to set the git config option `submodule.recurse` to `true`\nso `git checkout` will automatically update submodules to the correct commit:\n```shell\ngit config submodule.recurse true\n",
                      "markdown": "`for some `make` commands, but you can ensure this by `git submodule update --init`. After the submodule has been\ninitialized, the match data from `vulnerabilty-match-labels` will be available locally.\n\n**TIP**: when dealing with submodules, it may be convenient to set the git config option `submodule.recurse` to `true`\nso `git checkout` will automatically update submodules to the correct commit:\n```shell\ngit config submodule.recurse true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 49,
                  "endLine": 135,
                  "endColumn": 55,
                  "snippet": {
                    "text": "  the images may be. There is also no value in updating the image; these images\n  are not being executed and their only purpose is to survey the matching\n  performance of grype. In the philosophy of \"maximizing fixed points\" it\n  doesn't make sense to change these assets. Over time it may be that we remove\n  assets that are no longer useful for comparison, but this should rarely be\n  done.\n\n",
                    "rendered": {
                      "text": "  the images may be. There is also no value in updating the image; these images\n  are not being executed and their only purpose is to survey the matching\n  performance of grype. In the philosophy of \"maximizing fixed points\" it\n  doesn't make sense to change these assets. Over time it may be that we remove\n  assets that are no longer useful for comparison, but this should rarely be\n  done.\n\n",
                      "markdown": "`  the images may be. There is also no value in updating the image; these images\n  are not being executed and their only purpose is to survey the matching\n  performance of grype. In the philosophy of \"maximizing fixed points\" it\n  doesn't make sense to change these assets. Over time it may be that we remove\n  assets that are no longer useful for comparison, but this should rarely be\n  done.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 52,
                  "endLine": 125,
                  "endColumn": 58,
                  "snippet": {
                    "text": "  This allows us to account for capability differences between tool runs.\n\n\nTo reduce maintenance effort of this comparison over time there are a few things \nto keep in mind:\n\n- Once an image is labeled (at a specific digest) the image digest should be\n",
                    "rendered": {
                      "text": "  This allows us to account for capability differences between tool runs.\n\n\nTo reduce maintenance effort of this comparison over time there are a few things \nto keep in mind:\n\n- Once an image is labeled (at a specific digest) the image digest should be\n",
                      "markdown": "`  This allows us to account for capability differences between tool runs.\n\n\nTo reduce maintenance effort of this comparison over time there are a few things \nto keep in mind:\n\n- Once an image is labeled (at a specific digest) the image digest should be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 74,
                  "endLine": 113,
                  "snippet": {
                    "text": "  helps a lot in terms of keeping vulnerability results relatively stable.\n\n- SBOMs are used as input into grype instead of the raw container images. This\n  allows the artifacts under test to remain truly fixed and saves a lot of time\n  when capturing grype results (as the container image is no longer needed\n  during analysis).\n\n- For the captured SBOMs, container images referenced must be with a digest, not\n",
                    "rendered": {
                      "text": "  helps a lot in terms of keeping vulnerability results relatively stable.\n\n- SBOMs are used as input into grype instead of the raw container images. This\n  allows the artifacts under test to remain truly fixed and saves a lot of time\n  when capturing grype results (as the container image is no longer needed\n  during analysis).\n\n- For the captured SBOMs, container images referenced must be with a digest, not\n",
                      "markdown": "`  helps a lot in terms of keeping vulnerability results relatively stable.\n\n- SBOMs are used as input into grype instead of the raw container images. This\n  allows the artifacts under test to remain truly fixed and saves a lot of time\n  when capturing grype results (as the container image is no longer needed\n  during analysis).\n\n- For the captured SBOMs, container images referenced must be with a digest, not\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 32,
                  "endLine": 104,
                  "endColumn": 38,
                  "snippet": {
                    "text": "the output over time.\n\n\nTo reduce the eroding value over time we've decided to change as many moving\ntargets into fixed targets as possible:\n\n- Vulnerability results beyond a particular year are ignored (the current config\n",
                    "rendered": {
                      "text": "the output over time.\n\n\nTo reduce the eroding value over time we've decided to change as many moving\ntargets into fixed targets as possible:\n\n- Vulnerability results beyond a particular year are ignored (the current config\n",
                      "markdown": "`the output over time.\n\n\nTo reduce the eroding value over time we've decided to change as many moving\ntargets into fixed targets as possible:\n\n- Vulnerability results beyond a particular year are ignored (the current config\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 4,
                  "endLine": 98,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\nWe may implement more catalogers in syft that raise up more packages discovered\nover time (for the same artifact scanned). Also the world is continually finding\nand reporting new vulnerabilities. The more moving parts there are in this form\nof testing the harder it is to come to a conclusion about the actual quality of\nthe output over time.\n",
                    "rendered": {
                      "text": "\n\nWe may implement more catalogers in syft that raise up more packages discovered\nover time (for the same artifact scanned). Also the world is continually finding\nand reporting new vulnerabilities. The more moving parts there are in this form\nof testing the harder it is to come to a conclusion about the actual quality of\nthe output over time.\n",
                      "markdown": "`\n\nWe may implement more catalogers in syft that raise up more packages discovered\nover time (for the same artifact scanned). Also the world is continually finding\nand reporting new vulnerabilities. The more moving parts there are in this form\nof testing the harder it is to come to a conclusion about the actual quality of\nthe output over time.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 53,
                  "endLine": 72,
                  "endColumn": 59,
                  "snippet": {
                    "text": "   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n   the vulnerability databases from the run of `b` simply had more up to date\n   information, and if `grype@a` were run at the same time (on tuesday) this\n   reason can be almost entirely eliminated.\n\n2. **Comparing vulnerability results across images with different digests is invalid**.\n",
                    "rendered": {
                      "text": "   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n   the vulnerability databases from the run of `b` simply had more up to date\n   information, and if `grype@a` were run at the same time (on tuesday) this\n   reason can be almost entirely eliminated.\n\n2. **Comparing vulnerability results across images with different digests is invalid**.\n",
                      "markdown": "`   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n   the vulnerability databases from the run of `b` simply had more up to date\n   information, and if `grype@a` were run at the same time (on tuesday) this\n   reason can be almost entirely eliminated.\n\n2. **Comparing vulnerability results across images with different digests is invalid**.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 17,
                  "endLine": 67,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n",
                    "rendered": {
                      "text": "\n1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n",
                      "markdown": "`\n1. **Comparing vulnerability results taken at different times is invalid**.\n   We leverage the yardstick result-set feature to capture all vulnerability\n   results at one time for a specific image and tool set. Why? If we use grype\n   at version `a` on monday and grype at version `b` on tuesday and attempt to\n   compare the results, if differences are found it will not be immediately\n   clear why the results are different. That is, it is entirely possible that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/README.md"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 20,
                  "snippet": {
                    "text": "This form of testing compares the results from various releases of grype using a\nstatic set of reference container images. The kinds of comparisons made are:\n\n1) \"relative\": find the vulnerability matching differences between both tools\n   for a given image. This helps identify when a change has occurred in matching\n   behavior and where the changes are.\n\n",
                    "rendered": {
                      "text": "This form of testing compares the results from various releases of grype using a\nstatic set of reference container images. The kinds of comparisons made are:\n\n1) \"relative\": find the vulnerability matching differences between both tools\n   for a given image. This helps identify when a change has occurred in matching\n   behavior and where the changes are.\n\n",
                      "markdown": "`This form of testing compares the results from various releases of grype using a\nstatic set of reference container images. The kinds of comparisons made are:\n\n1) \"relative\": find the vulnerability matching differences between both tools\n   for a given image. This helps identify when a change has occurred in matching\n   behavior and where the changes are.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 14,
                  "endLine": 63,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tmkdir -p $(YARDSTICK_RESULT_DIR)\n\n$(VULNERABILITY_LABELS)/Makefile:\n\tgit submodule update vulnerability-match-labels\n\n.PHONY: clear-results\nclear-results: venv ## Clear all existing yardstick results\n",
                    "rendered": {
                      "text": "\tmkdir -p $(YARDSTICK_RESULT_DIR)\n\n$(VULNERABILITY_LABELS)/Makefile:\n\tgit submodule update vulnerability-match-labels\n\n.PHONY: clear-results\nclear-results: venv ## Clear all existing yardstick results\n",
                      "markdown": "`\tmkdir -p $(YARDSTICK_RESULT_DIR)\n\n$(VULNERABILITY_LABELS)/Makefile:\n\tgit submodule update vulnerability-match-labels\n\n.PHONY: clear-results\nclear-results: venv ## Clear all existing yardstick results\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 50,
                  "endColumn": 6,
                  "snippet": {
                    "text": ".PHONY: download-sboms\ndownload-sboms: $(VULNERABILITY_LABELS)/Makefile\n\tcd vulnerability-match-labels && make venv\n\tbash -c \"export ORAS_CACHE=$(shell pwd)/.oras-cache && make venv && . vulnerability-match-labels/venv/bin/activate && ./vulnerability-match-labels/sboms.py download -r $(RESULT_SET) && ./vulnerability-match-labels/sboms.py download -r $(RESULT_SET)_2022\"\n\nvenv: venv/touchfile\n\n",
                    "rendered": {
                      "text": ".PHONY: download-sboms\ndownload-sboms: $(VULNERABILITY_LABELS)/Makefile\n\tcd vulnerability-match-labels && make venv\n\tbash -c \"export ORAS_CACHE=$(shell pwd)/.oras-cache && make venv && . vulnerability-match-labels/venv/bin/activate && ./vulnerability-match-labels/sboms.py download -r $(RESULT_SET) && ./vulnerability-match-labels/sboms.py download -r $(RESULT_SET)_2022\"\n\nvenv: venv/touchfile\n\n",
                      "markdown": "`.PHONY: download-sboms\ndownload-sboms: $(VULNERABILITY_LABELS)/Makefile\n\tcd vulnerability-match-labels && make venv\n\tbash -c \"export ORAS_CACHE=$(shell pwd)/.oras-cache && make venv && . vulnerability-match-labels/venv/bin/activate && ./vulnerability-match-labels/sboms.py download -r $(RESULT_SET) && ./vulnerability-match-labels/sboms.py download -r $(RESULT_SET)_2022\"\n\nvenv: venv/touchfile\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n.PHONY: sboms\nsboms: $(YARDSTICK_RESULT_DIR) venv clear-results ## Collect and store all syft results (deletes all existing results)\n\tbash -c \"make download-sboms || ($(YARDSTICK) -v result capture -r $(RESULT_SET) --only-producers && $(YARDSTICK) -v result capture -r $(RESULT_SET)_2022 --only-producers)\"\n\n.PHONY: download-sboms\ndownload-sboms: $(VULNERABILITY_LABELS)/Makefile\n",
                    "rendered": {
                      "text": "\n.PHONY: sboms\nsboms: $(YARDSTICK_RESULT_DIR) venv clear-results ## Collect and store all syft results (deletes all existing results)\n\tbash -c \"make download-sboms || ($(YARDSTICK) -v result capture -r $(RESULT_SET) --only-producers && $(YARDSTICK) -v result capture -r $(RESULT_SET)_2022 --only-producers)\"\n\n.PHONY: download-sboms\ndownload-sboms: $(VULNERABILITY_LABELS)/Makefile\n",
                      "markdown": "`\n.PHONY: sboms\nsboms: $(YARDSTICK_RESULT_DIR) venv clear-results ## Collect and store all syft results (deletes all existing results)\n\tbash -c \"make download-sboms || ($(YARDSTICK) -v result capture -r $(RESULT_SET) --only-producers && $(YARDSTICK) -v result capture -r $(RESULT_SET)_2022 --only-producers)\"\n\n.PHONY: download-sboms\ndownload-sboms: $(VULNERABILITY_LABELS)/Makefile\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 9,
                  "snippet": {
                    "text": "VULNERABILITY_LABELS = ./vulnerability-labels\nRESULT_SET = pr_vs_latest_via_sbom\n\n# update periodically with values from \"grype db list\"\nTEST_DB_URL_FILE = ./test-db-url\nTEST_DB_URL = $(shell cat $(TEST_DB_URL_FILE))\nTEST_DB = db.tar.gz\n",
                    "rendered": {
                      "text": "VULNERABILITY_LABELS = ./vulnerability-labels\nRESULT_SET = pr_vs_latest_via_sbom\n\n# update periodically with values from \"grype db list\"\nTEST_DB_URL_FILE = ./test-db-url\nTEST_DB_URL = $(shell cat $(TEST_DB_URL_FILE))\nTEST_DB = db.tar.gz\n",
                      "markdown": "`VULNERABILITY_LABELS = ./vulnerability-labels\nRESULT_SET = pr_vs_latest_via_sbom\n\n# update periodically with values from \"grype db list\"\nTEST_DB_URL_FILE = ./test-db-url\nTEST_DB_URL = $(shell cat $(TEST_DB_URL_FILE))\nTEST_DB = db.tar.gz\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 61,
                  "endLine": 75,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\tfind -iname \"*.pyc\" -delete\n\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"$(BOLD)$(CYAN)%-25s$(RESET)%s\\n\", $$1, $$2}'\n\n",
                    "rendered": {
                      "text": "\tfind -iname \"*.pyc\" -delete\n\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"$(BOLD)$(CYAN)%-25s$(RESET)%s\\n\", $$1, $$2}'\n\n",
                      "markdown": "`\tfind -iname \"*.pyc\" -delete\n\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"$(BOLD)$(CYAN)%-25s$(RESET)%s\\n\", $$1, $$2}'\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 54,
                  "endLine": 75,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\tfind -iname \"*.pyc\" -delete\n\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"$(BOLD)$(CYAN)%-25s$(RESET)%s\\n\", $$1, $$2}'\n\n",
                    "rendered": {
                      "text": "\tfind -iname \"*.pyc\" -delete\n\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"$(BOLD)$(CYAN)%-25s$(RESET)%s\\n\", $$1, $$2}'\n\n",
                      "markdown": "`\tfind -iname \"*.pyc\" -delete\n\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"$(BOLD)$(CYAN)%-25s$(RESET)%s\\n\", $$1, $$2}'\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "endColumn": 6,
                  "snippet": {
                    "text": ".PHONY: clean\nclean: clear-results ## Clear all existing yardstick results and delete python environment\n\trm -rf venv\n\tfind -iname \"*.pyc\" -delete\n\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"$(BOLD)$(CYAN)%-25s$(RESET)%s\\n\", $$1, $$2}'\n",
                    "rendered": {
                      "text": ".PHONY: clean\nclean: clear-results ## Clear all existing yardstick results and delete python environment\n\trm -rf venv\n\tfind -iname \"*.pyc\" -delete\n\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"$(BOLD)$(CYAN)%-25s$(RESET)%s\\n\", $$1, $$2}'\n",
                      "markdown": "`.PHONY: clean\nclean: clear-results ## Clear all existing yardstick results and delete python environment\n\trm -rf venv\n\tfind -iname \"*.pyc\" -delete\n\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"$(BOLD)$(CYAN)%-25s$(RESET)%s\\n\", $$1, $$2}'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tmkdir -p $(YARDSTICK_RESULT_DIR)\n\n$(VULNERABILITY_LABELS)/Makefile:\n\tgit submodule update vulnerability-match-labels\n\n.PHONY: clear-results\nclear-results: venv ## Clear all existing yardstick results\n",
                    "rendered": {
                      "text": "\tmkdir -p $(YARDSTICK_RESULT_DIR)\n\n$(VULNERABILITY_LABELS)/Makefile:\n\tgit submodule update vulnerability-match-labels\n\n.PHONY: clear-results\nclear-results: venv ## Clear all existing yardstick results\n",
                      "markdown": "`\tmkdir -p $(YARDSTICK_RESULT_DIR)\n\n$(VULNERABILITY_LABELS)/Makefile:\n\tgit submodule update vulnerability-match-labels\n\n.PHONY: clear-results\nclear-results: venv ## Clear all existing yardstick results\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 17,
                  "endLine": 56,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\nvenv/touchfile: requirements.txt\n\ttest -d venv || python3 -m venv venv\n\t$(ACTIVATE_VENV) pip install -Ur requirements.txt\n\ttouch venv/touchfile\n\n$(YARDSTICK_RESULT_DIR):\n",
                    "rendered": {
                      "text": "\nvenv/touchfile: requirements.txt\n\ttest -d venv || python3 -m venv venv\n\t$(ACTIVATE_VENV) pip install -Ur requirements.txt\n\ttouch venv/touchfile\n\n$(YARDSTICK_RESULT_DIR):\n",
                      "markdown": "`\nvenv/touchfile: requirements.txt\n\ttest -d venv || python3 -m venv venv\n\t$(ACTIVATE_VENV) pip install -Ur requirements.txt\n\ttouch venv/touchfile\n\n$(YARDSTICK_RESULT_DIR):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 50,
                  "endColumn": 6,
                  "snippet": {
                    "text": ".PHONY: download-sboms\ndownload-sboms: $(VULNERABILITY_LABELS)/Makefile\n\tcd vulnerability-match-labels && make venv\n\tbash -c \"export ORAS_CACHE=$(shell pwd)/.oras-cache && make venv && . vulnerability-match-labels/venv/bin/activate && ./vulnerability-match-labels/sboms.py download -r $(RESULT_SET) && ./vulnerability-match-labels/sboms.py download -r $(RESULT_SET)_2022\"\n\nvenv: venv/touchfile\n\n",
                    "rendered": {
                      "text": ".PHONY: download-sboms\ndownload-sboms: $(VULNERABILITY_LABELS)/Makefile\n\tcd vulnerability-match-labels && make venv\n\tbash -c \"export ORAS_CACHE=$(shell pwd)/.oras-cache && make venv && . vulnerability-match-labels/venv/bin/activate && ./vulnerability-match-labels/sboms.py download -r $(RESULT_SET) && ./vulnerability-match-labels/sboms.py download -r $(RESULT_SET)_2022\"\n\nvenv: venv/touchfile\n\n",
                      "markdown": "`.PHONY: download-sboms\ndownload-sboms: $(VULNERABILITY_LABELS)/Makefile\n\tcd vulnerability-match-labels && make venv\n\tbash -c \"export ORAS_CACHE=$(shell pwd)/.oras-cache && make venv && . vulnerability-match-labels/venv/bin/activate && ./vulnerability-match-labels/sboms.py download -r $(RESULT_SET) && ./vulnerability-match-labels/sboms.py download -r $(RESULT_SET)_2022\"\n\nvenv: venv/touchfile\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n.PHONY: sboms\nsboms: $(YARDSTICK_RESULT_DIR) venv clear-results ## Collect and store all syft results (deletes all existing results)\n\tbash -c \"make download-sboms || ($(YARDSTICK) -v result capture -r $(RESULT_SET) --only-producers && $(YARDSTICK) -v result capture -r $(RESULT_SET)_2022 --only-producers)\"\n\n.PHONY: download-sboms\ndownload-sboms: $(VULNERABILITY_LABELS)/Makefile\n",
                    "rendered": {
                      "text": "\n.PHONY: sboms\nsboms: $(YARDSTICK_RESULT_DIR) venv clear-results ## Collect and store all syft results (deletes all existing results)\n\tbash -c \"make download-sboms || ($(YARDSTICK) -v result capture -r $(RESULT_SET) --only-producers && $(YARDSTICK) -v result capture -r $(RESULT_SET)_2022 --only-producers)\"\n\n.PHONY: download-sboms\ndownload-sboms: $(VULNERABILITY_LABELS)/Makefile\n",
                      "markdown": "`\n.PHONY: sboms\nsboms: $(YARDSTICK_RESULT_DIR) venv clear-results ## Collect and store all syft results (deletes all existing results)\n\tbash -c \"make download-sboms || ($(YARDSTICK) -v result capture -r $(RESULT_SET) --only-producers && $(YARDSTICK) -v result capture -r $(RESULT_SET)_2022 --only-producers)\"\n\n.PHONY: download-sboms\ndownload-sboms: $(VULNERABILITY_LABELS)/Makefile\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 38,
                  "endLine": 20,
                  "endColumn": 4,
                  "snippet": {
                    "text": "BOLD := $(shell tput -T linux bold)\nPURPLE := $(shell tput -T linux setaf 5)\nGREEN := $(shell tput -T linux setaf 2)\nCYAN := $(shell tput -T linux setaf 6)\nRED := $(shell tput -T linux setaf 1)\nRESET := $(shell tput -T linux sgr0)\nTITLE := $(BOLD)$(PURPLE)\nSUCCESS := $(BOLD)$(GREEN)\n",
                    "rendered": {
                      "text": "BOLD := $(shell tput -T linux bold)\nPURPLE := $(shell tput -T linux setaf 5)\nGREEN := $(shell tput -T linux setaf 2)\nCYAN := $(shell tput -T linux setaf 6)\nRED := $(shell tput -T linux setaf 1)\nRESET := $(shell tput -T linux sgr0)\nTITLE := $(BOLD)$(PURPLE)\nSUCCESS := $(BOLD)$(GREEN)\n",
                      "markdown": "`BOLD := $(shell tput -T linux bold)\nPURPLE := $(shell tput -T linux setaf 5)\nGREEN := $(shell tput -T linux setaf 2)\nCYAN := $(shell tput -T linux setaf 6)\nRED := $(shell tput -T linux setaf 1)\nRESET := $(shell tput -T linux sgr0)\nTITLE := $(BOLD)$(PURPLE)\nSUCCESS := $(BOLD)$(GREEN)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 21,
                  "endLine": 12,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# update periodically with values from \"grype db list\"\nTEST_DB_URL_FILE = ./test-db-url\nTEST_DB_URL = $(shell cat $(TEST_DB_URL_FILE))\nTEST_DB = db.tar.gz\n\n# formatting variables\n",
                    "rendered": {
                      "text": "\n# update periodically with values from \"grype db list\"\nTEST_DB_URL_FILE = ./test-db-url\nTEST_DB_URL = $(shell cat $(TEST_DB_URL_FILE))\nTEST_DB = db.tar.gz\n\n# formatting variables\n",
                      "markdown": "`\n# update periodically with values from \"grype db list\"\nTEST_DB_URL_FILE = ./test-db-url\nTEST_DB_URL = $(shell cat $(TEST_DB_URL_FILE))\nTEST_DB = db.tar.gz\n\n# formatting variables\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/quality/Makefile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 53,
                  "endLine": 1,
                  "endColumn": 58,
                  "snippet": {
                    "text": "SBOM_STORE_TAG = md5-$(shell md5sum .yardstick.yaml | cut -d' ' -f1)\nSBOM_STORE_IMAGE = ghcr.io/anchore/grype/quality-test-sbom-store:$(SBOM_STORE_TAG)\nACTIVATE_VENV = . venv/bin/activate &&\nYARDSTICK = $(ACTIVATE_VENV) yardstick -v\n",
                    "rendered": {
                      "text": "SBOM_STORE_TAG = md5-$(shell md5sum .yardstick.yaml | cut -d' ' -f1)\nSBOM_STORE_IMAGE = ghcr.io/anchore/grype/quality-test-sbom-store:$(SBOM_STORE_TAG)\nACTIVATE_VENV = . venv/bin/activate &&\nYARDSTICK = $(ACTIVATE_VENV) yardstick -v\n",
                      "markdown": "`SBOM_STORE_TAG = md5-$(shell md5sum .yardstick.yaml | cut -d' ' -f1)\nSBOM_STORE_IMAGE = ghcr.io/anchore/grype/quality-test-sbom-store:$(SBOM_STORE_TAG)\nACTIVATE_VENV = . venv/bin/activate &&\nYARDSTICK = $(ACTIVATE_VENV) yardstick -v\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/image-node-subprocess/Dockerfile"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 13,
                  "endLine": 3,
                  "endColumn": 4,
                  "snippet": {
                    "text": "FROM node:16-stretch@sha256:5810de52349af302a2c5dddf0a3f31174ef65d0eed8985959a5e83bb1084b79b\nCOPY app.js /\nENV PATH=\"/app/bin:${PATH}\"\nWORKDIR /\n",
                    "rendered": {
                      "text": "FROM node:16-stretch@sha256:5810de52349af302a2c5dddf0a3f31174ef65d0eed8985959a5e83bb1084b79b\nCOPY app.js /\nENV PATH=\"/app/bin:${PATH}\"\nWORKDIR /\n",
                      "markdown": "`FROM node:16-stretch@sha256:5810de52349af302a2c5dddf0a3f31174ef65d0eed8985959a5e83bb1084b79b\nCOPY app.js /\nENV PATH=\"/app/bin:${PATH}\"\nWORKDIR /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/db_validations_test.go"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 19,
                  "endLine": 53,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"ensure db update frequency config is wired and responsive\",\n\t\t\targs: []string{\"-vvv\", t.TempDir()},\n\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_DB_MAX_UPDATE_CHECK_FREQUENCY\": \"10h\",\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"ensure db update frequency config is wired and responsive\",\n\t\t\targs: []string{\"-vvv\", t.TempDir()},\n\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_DB_MAX_UPDATE_CHECK_FREQUENCY\": \"10h\",\n",
                      "markdown": "`\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"ensure db update frequency config is wired and responsive\",\n\t\t\targs: []string{\"-vvv\", t.TempDir()},\n\t\t\tenv: map[string]string{\n\t\t\t\t\"GRYPE_DB_MAX_UPDATE_CHECK_FREQUENCY\": \"10h\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/db_validations_test.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 44,
                  "endLine": 47,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\t\t\t\"GRYPE_DB_MAX_UPDATE_CHECK_FREQUENCY\": \"10h\",\n\t\t\t},\n\t\t\tassertions: []traitAssertion{\n\t\t\t\tassertInOutput(\"no max-frequency set for update check\"),\n\t\t\t\tassertInOutput(\"checking for available database updates\"),\n\t\t\t\tassertFailingReturnCode,\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\"GRYPE_DB_MAX_UPDATE_CHECK_FREQUENCY\": \"10h\",\n\t\t\t},\n\t\t\tassertions: []traitAssertion{\n\t\t\t\tassertInOutput(\"no max-frequency set for update check\"),\n\t\t\t\tassertInOutput(\"checking for available database updates\"),\n\t\t\t\tassertFailingReturnCode,\n\t\t\t},\n",
                      "markdown": "`\t\t\t\t\"GRYPE_DB_MAX_UPDATE_CHECK_FREQUENCY\": \"10h\",\n\t\t\t},\n\t\t\tassertions: []traitAssertion{\n\t\t\t\tassertInOutput(\"no max-frequency set for update check\"),\n\t\t\t\tassertInOutput(\"checking for available database updates\"),\n\t\t\t\tassertFailingReturnCode,\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/db_validations_test.go"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 1,
                  "endLine": 12,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ttests := []struct {\n\t\tname       string\n\t\targs       []string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n",
                    "rendered": {
                      "text": "\ttests := []struct {\n\t\tname       string\n\t\targs       []string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n",
                      "markdown": "`\ttests := []struct {\n\t\tname       string\n\t\targs       []string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/cmd_test.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ttests := []struct {\n\t\tname       string\n\t\targs       []string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n",
                    "rendered": {
                      "text": "\ttests := []struct {\n\t\tname       string\n\t\targs       []string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n",
                      "markdown": "`\ttests := []struct {\n\t\tname       string\n\t\targs       []string\n\t\tenv        map[string]string\n\t\tassertions []traitAssertion\n\t}{\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/utils_test.go"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 48,
                  "endLine": 147,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\tcommand.Stdin = bytes.NewReader(b)\n}\n\nfunc assertCommandExecutionSuccess(t testing.TB, cmd *exec.Cmd) {\n\t_, err := cmd.CombinedOutput()\n\tif err != nil {\n\t\tif exitErr, ok := err.(*exec.ExitError); ok {\n",
                    "rendered": {
                      "text": "\tcommand.Stdin = bytes.NewReader(b)\n}\n\nfunc assertCommandExecutionSuccess(t testing.TB, cmd *exec.Cmd) {\n\t_, err := cmd.CombinedOutput()\n\tif err != nil {\n\t\tif exitErr, ok := err.(*exec.ExitError); ok {\n",
                      "markdown": "`\tcommand.Stdin = bytes.NewReader(b)\n}\n\nfunc assertCommandExecutionSuccess(t testing.TB, cmd *exec.Cmd) {\n\t_, err := cmd.CombinedOutput()\n\tif err != nil {\n\t\tif exitErr, ok := err.(*exec.ExitError); ok {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/utils_test.go"
                },
                "region": {
                  "startLine": 90,
                  "endLine": 90,
                  "endColumn": 5,
                  "snippet": {
                    "text": "func runGrype(tb testing.TB, env map[string]string, args ...string) (*exec.Cmd, string, string) {\n\ttb.Helper()\n\n\tcmd := getGrypeCommand(tb, args...)\n\tif env == nil {\n\t\tenv = make(map[string]string)\n\t}\n",
                    "rendered": {
                      "text": "func runGrype(tb testing.TB, env map[string]string, args ...string) (*exec.Cmd, string, string) {\n\ttb.Helper()\n\n\tcmd := getGrypeCommand(tb, args...)\n\tif env == nil {\n\t\tenv = make(map[string]string)\n\t}\n",
                      "markdown": "`func runGrype(tb testing.TB, env map[string]string, args ...string) (*exec.Cmd, string, string) {\n\ttb.Helper()\n\n\tcmd := getGrypeCommand(tb, args...)\n\tif env == nil {\n\t\tenv = make(map[string]string)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/utils_test.go"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 47,
                  "endLine": 158,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\t}\n}\n\nfunc testWithTimeout(t *testing.T, name string, timeout time.Duration, test func(*testing.T)) {\n\tdone := make(chan bool)\n\tgo func() {\n\t\tt.Run(name, test)\n",
                    "rendered": {
                      "text": "\t}\n}\n\nfunc testWithTimeout(t *testing.T, name string, timeout time.Duration, test func(*testing.T)) {\n\tdone := make(chan bool)\n\tgo func() {\n\t\tt.Run(name, test)\n",
                      "markdown": "`\t}\n}\n\nfunc testWithTimeout(t *testing.T, name string, timeout time.Duration, test func(*testing.T)) {\n\tdone := make(chan bool)\n\tgo func() {\n\t\tt.Run(name, test)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/utils_test.go"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 22,
                  "endLine": 130,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\ttb.Helper()\n\troot, err := exec.Command(\"git\", \"rev-parse\", \"--show-toplevel\").Output()\n\tif err != nil {\n\t\ttb.Fatalf(\"unable to find repo root dir: %+v\", err)\n\t}\n\tabsRepoRoot, err := filepath.Abs(strings.TrimSpace(string(root)))\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\ttb.Helper()\n\troot, err := exec.Command(\"git\", \"rev-parse\", \"--show-toplevel\").Output()\n\tif err != nil {\n\t\ttb.Fatalf(\"unable to find repo root dir: %+v\", err)\n\t}\n\tabsRepoRoot, err := filepath.Abs(strings.TrimSpace(string(root)))\n\tif err != nil {\n",
                      "markdown": "`\ttb.Helper()\n\troot, err := exec.Command(\"git\", \"rev-parse\", \"--show-toplevel\").Output()\n\tif err != nil {\n\t\ttb.Fatalf(\"unable to find repo root dir: %+v\", err)\n\t}\n\tabsRepoRoot, err := filepath.Abs(strings.TrimSpace(string(root)))\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/utils_test.go"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 22,
                  "endLine": 117,
                  "endColumn": 27,
                  "snippet": {
                    "text": "}\n\nfunc envMapToSlice(env map[string]string) (envList []string) {\n\tfor key, val := range env {\n\t\tif key == \"\" {\n\t\t\tcontinue\n\t\t}\n",
                    "rendered": {
                      "text": "}\n\nfunc envMapToSlice(env map[string]string) (envList []string) {\n\tfor key, val := range env {\n\t\tif key == \"\" {\n\t\t\tcontinue\n\t\t}\n",
                      "markdown": "`}\n\nfunc envMapToSlice(env map[string]string) (envList []string) {\n\tfor key, val := range env {\n\t\tif key == \"\" {\n\t\t\tcontinue\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/utils_test.go"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 3,
                  "endLine": 103,
                  "endColumn": 8,
                  "snippet": {
                    "text": "}\n\nfunc runCommand(cmd *exec.Cmd, env map[string]string) (string, string) {\n\tif env != nil {\n\t\tcmd.Env = append(os.Environ(), envMapToSlice(env)...)\n\t}\n\tvar stdout, stderr bytes.Buffer\n",
                    "rendered": {
                      "text": "}\n\nfunc runCommand(cmd *exec.Cmd, env map[string]string) (string, string) {\n\tif env != nil {\n\t\tcmd.Env = append(os.Environ(), envMapToSlice(env)...)\n\t}\n\tvar stdout, stderr bytes.Buffer\n",
                      "markdown": "`}\n\nfunc runCommand(cmd *exec.Cmd, env map[string]string) (string, string) {\n\tif env != nil {\n\t\tcmd.Env = append(os.Environ(), envMapToSlice(env)...)\n\t}\n\tvar stdout, stderr bytes.Buffer\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/utils_test.go"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 30,
                  "endLine": 102,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\treturn cmd, stdout, stderr\n}\n\nfunc runCommand(cmd *exec.Cmd, env map[string]string) (string, string) {\n\tif env != nil {\n\t\tcmd.Env = append(os.Environ(), envMapToSlice(env)...)\n\t}\n",
                    "rendered": {
                      "text": "\treturn cmd, stdout, stderr\n}\n\nfunc runCommand(cmd *exec.Cmd, env map[string]string) (string, string) {\n\tif env != nil {\n\t\tcmd.Env = append(os.Environ(), envMapToSlice(env)...)\n\t}\n",
                      "markdown": "`\treturn cmd, stdout, stderr\n}\n\nfunc runCommand(cmd *exec.Cmd, env map[string]string) (string, string) {\n\tif env != nil {\n\t\tcmd.Env = append(os.Environ(), envMapToSlice(env)...)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/utils_test.go"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 1,
                  "endLine": 92,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n\tcmd := getGrypeCommand(tb, args...)\n\tif env == nil {\n\t\tenv = make(map[string]string)\n\t}\n\n\t// we should not have tests reaching out for app update checks\n",
                    "rendered": {
                      "text": "\n\tcmd := getGrypeCommand(tb, args...)\n\tif env == nil {\n\t\tenv = make(map[string]string)\n\t}\n\n\t// we should not have tests reaching out for app update checks\n",
                      "markdown": "`\n\tcmd := getGrypeCommand(tb, args...)\n\tif env == nil {\n\t\tenv = make(map[string]string)\n\t}\n\n\t// we should not have tests reaching out for app update checks\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/utils_test.go"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 3,
                  "endLine": 91,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\ttb.Helper()\n\n\tcmd := getGrypeCommand(tb, args...)\n\tif env == nil {\n\t\tenv = make(map[string]string)\n\t}\n\n",
                    "rendered": {
                      "text": "\ttb.Helper()\n\n\tcmd := getGrypeCommand(tb, args...)\n\tif env == nil {\n\t\tenv = make(map[string]string)\n\t}\n\n",
                      "markdown": "`\ttb.Helper()\n\n\tcmd := getGrypeCommand(tb, args...)\n\tif env == nil {\n\t\tenv = make(map[string]string)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/utils_test.go"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 28,
                  "endLine": 87,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t)\n}\n\nfunc runGrype(tb testing.TB, env map[string]string, args ...string) (*exec.Cmd, string, string) {\n\ttb.Helper()\n\n\tcmd := getGrypeCommand(tb, args...)\n",
                    "rendered": {
                      "text": "\t)\n}\n\nfunc runGrype(tb testing.TB, env map[string]string, args ...string) (*exec.Cmd, string, string) {\n\ttb.Helper()\n\n\tcmd := getGrypeCommand(tb, args...)\n",
                      "markdown": "`\t)\n}\n\nfunc runGrype(tb testing.TB, env map[string]string, args ...string) (*exec.Cmd, string, string) {\n\ttb.Helper()\n\n\tcmd := getGrypeCommand(tb, args...)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/sbom_input_test.go"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 2,
                  "endLine": 85,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tcmd := exec.Command(getGrypeSnapshotLocation(t, runtime.GOOS), tt.args...)\n\n\t\t\tinput, err := os.Open(tt.input)\n\t\t\trequire.NoError(t, err)\n",
                    "rendered": {
                      "text": "\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tcmd := exec.Command(getGrypeSnapshotLocation(t, runtime.GOOS), tt.args...)\n\n\t\t\tinput, err := os.Open(tt.input)\n\t\t\trequire.NoError(t, err)\n",
                      "markdown": "`\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tcmd := exec.Command(getGrypeSnapshotLocation(t, runtime.GOOS), tt.args...)\n\n\t\t\tinput, err := os.Open(tt.input)\n\t\t\trequire.NoError(t, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/sbom_input_test.go"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 3,
                  "endLine": 52,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\tfor _, tc := range cases {\n\t\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\t\tsbomArg := tc.path\n\t\t\t\tcmd := getGrypeCommand(t, sbomArg)\n\n\t\t\t\tassertCommandExecutionSuccess(t, cmd)\n\t\t\t})\n",
                    "rendered": {
                      "text": "\t\tfor _, tc := range cases {\n\t\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\t\tsbomArg := tc.path\n\t\t\t\tcmd := getGrypeCommand(t, sbomArg)\n\n\t\t\t\tassertCommandExecutionSuccess(t, cmd)\n\t\t\t})\n",
                      "markdown": "`\t\tfor _, tc := range cases {\n\t\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\t\tsbomArg := tc.path\n\t\t\t\tcmd := getGrypeCommand(t, sbomArg)\n\n\t\t\t\tassertCommandExecutionSuccess(t, cmd)\n\t\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/sbom_input_test.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 3,
                  "endLine": 41,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\tfor _, tc := range cases {\n\t\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\t\tsbomArg := \"sbom:\" + tc.path\n\t\t\t\tcmd := getGrypeCommand(t, sbomArg)\n\n\t\t\t\tassertCommandExecutionSuccess(t, cmd)\n\t\t\t})\n",
                    "rendered": {
                      "text": "\t\tfor _, tc := range cases {\n\t\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\t\tsbomArg := \"sbom:\" + tc.path\n\t\t\t\tcmd := getGrypeCommand(t, sbomArg)\n\n\t\t\t\tassertCommandExecutionSuccess(t, cmd)\n\t\t\t})\n",
                      "markdown": "`\t\tfor _, tc := range cases {\n\t\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\t\tsbomArg := \"sbom:\" + tc.path\n\t\t\t\tcmd := getGrypeCommand(t, sbomArg)\n\n\t\t\t\tassertCommandExecutionSuccess(t, cmd)\n\t\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/codeql-analysis.yml"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 16,
                  "endLine": 69,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      uses: github/codeql-action/init@f779452ac5af1c261dce0346a8f964149f49322b # v3.26.13\n      with:\n        languages: ${{ matrix.language }}\n        # If you wish to specify custom queries, you can do so here or in a config file.\n        # By default, queries listed here will override any specified in a config file.\n        # Prefix the list here with \"+\" to use these queries and those in the config file.\n        # queries: ./path/to/local/query, your-org/your-repo/queries@main\n",
                    "rendered": {
                      "text": "      uses: github/codeql-action/init@f779452ac5af1c261dce0346a8f964149f49322b # v3.26.13\n      with:\n        languages: ${{ matrix.language }}\n        # If you wish to specify custom queries, you can do so here or in a config file.\n        # By default, queries listed here will override any specified in a config file.\n        # Prefix the list here with \"+\" to use these queries and those in the config file.\n        # queries: ./path/to/local/query, your-org/your-repo/queries@main\n",
                      "markdown": "`      uses: github/codeql-action/init@f779452ac5af1c261dce0346a8f964149f49322b # v3.26.13\n      with:\n        languages: ${{ matrix.language }}\n        # If you wish to specify custom queries, you can do so here or in a config file.\n        # By default, queries listed here will override any specified in a config file.\n        # Prefix the list here with \"+\" to use these queries and those in the config file.\n        # queries: ./path/to/local/query, your-org/your-repo/queries@main\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/codeql-analysis.yml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 9,
                  "endLine": 4,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# For most projects, this workflow file will not need changing; you simply need\n# to commit it to your repository.\n#\n# You may wish to alter this file to override the set of languages analyzed,\n# or to provide custom queries or build logic.\nname: CodeQL Security Scan\n\n",
                    "rendered": {
                      "text": "# For most projects, this workflow file will not need changing; you simply need\n# to commit it to your repository.\n#\n# You may wish to alter this file to override the set of languages analyzed,\n# or to provide custom queries or build logic.\nname: CodeQL Security Scan\n\n",
                      "markdown": "`# For most projects, this workflow file will not need changing; you simply need\n# to commit it to your repository.\n#\n# You may wish to alter this file to override the set of languages analyzed,\n# or to provide custom queries or build logic.\nname: CodeQL Security Scan\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Makefile"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 122,
                  "endLine": 36,
                  "endColumn": 128,
                  "snippet": {
                    "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                    "rendered": {
                      "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                      "markdown": "`\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Makefile"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 16,
                  "endLine": 36,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                    "rendered": {
                      "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                      "markdown": "`\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Makefile"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 181,
                  "endLine": 36,
                  "endColumn": 186,
                  "snippet": {
                    "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                    "rendered": {
                      "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                      "markdown": "`\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Makefile"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 163,
                  "endLine": 36,
                  "endColumn": 169,
                  "snippet": {
                    "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                    "rendered": {
                      "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                      "markdown": "`\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Makefile"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 122,
                  "endLine": 36,
                  "endColumn": 128,
                  "snippet": {
                    "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                    "rendered": {
                      "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                      "markdown": "`\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Makefile"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 71,
                  "endLine": 36,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                    "rendered": {
                      "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                      "markdown": "`\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Makefile"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 57,
                  "endLine": 36,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                    "rendered": {
                      "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                      "markdown": "`\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Makefile"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 16,
                  "endLine": 36,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                    "rendered": {
                      "text": "\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n",
                      "markdown": "`\t@$(TASK)\n\n# for those of us that can't seem to kick the habit of typing `make ...` lets wrap the superior `task` tool\nTASKS := $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep '^\\* ' | cut -d' ' -f2 | tr -d ':' | tr '\\n' ' '\" ) $(shell bash -c \"test -f $(TASK) && $(TASK) -l | grep 'aliases:' | cut -d ':' -f 3 | tr '\\n' ' ' | tr -d ','\")\n\n.PHONY: $(TASKS)\n$(TASKS): $(TASK)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/qualifier/rpmmodularity/qualifier_test.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 36,
                  "endLine": 40,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\t\tsatisfied:     true,\n\t\t},\n\t\t{\n\t\t\tname:          \"empty module with rpm metadata lacking actual metadata 2\",\n\t\t\trpmModularity: New(\"\"),\n\t\t\tpkg:           pkg.Package{Metadata: nil},\n\t\t\tdistro:        nil,\n",
                    "rendered": {
                      "text": "\t\t\tsatisfied:     true,\n\t\t},\n\t\t{\n\t\t\tname:          \"empty module with rpm metadata lacking actual metadata 2\",\n\t\t\trpmModularity: New(\"\"),\n\t\t\tpkg:           pkg.Package{Metadata: nil},\n\t\t\tdistro:        nil,\n",
                      "markdown": "`\t\t\tsatisfied:     true,\n\t\t},\n\t\t{\n\t\t\tname:          \"empty module with rpm metadata lacking actual metadata 2\",\n\t\t\trpmModularity: New(\"\"),\n\t\t\tpkg:           pkg.Package{Metadata: nil},\n\t\t\tdistro:        nil,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/qualifier/rpmmodularity/qualifier_test.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 38,
                  "endLine": 33,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\t\tsatisfied: false,\n\t\t},\n\t\t{\n\t\t\tname:          \"module with package rpm metadata lacking actual metadata 1\",\n\t\t\trpmModularity: New(\"test:1\"),\n\t\t\tpkg:           pkg.Package{Metadata: nil},\n\t\t\tdistro:        nil,\n",
                    "rendered": {
                      "text": "\t\t\tsatisfied: false,\n\t\t},\n\t\t{\n\t\t\tname:          \"module with package rpm metadata lacking actual metadata 1\",\n\t\t\trpmModularity: New(\"test:1\"),\n\t\t\tpkg:           pkg.Package{Metadata: nil},\n\t\t\tdistro:        nil,\n",
                      "markdown": "`\t\t\tsatisfied: false,\n\t\t},\n\t\t{\n\t\t\tname:          \"module with package rpm metadata lacking actual metadata 1\",\n\t\t\trpmModularity: New(\"test:1\"),\n\t\t\tpkg:           pkg.Package{Metadata: nil},\n\t\t\tdistro:        nil,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/qualifier/rpmmodularity/qualifier_test.go"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 22,
                  "endLine": 24,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\tsatisfied     bool\n\t}{\n\t\t{\n\t\t\tname:          \"non rpm metadata\",\n\t\t\trpmModularity: New(\"test:1\"),\n\t\t\tpkg: pkg.Package{\n\t\t\t\tMetadata: pkg.JavaMetadata{},\n",
                    "rendered": {
                      "text": "\t\tsatisfied     bool\n\t}{\n\t\t{\n\t\t\tname:          \"non rpm metadata\",\n\t\t\trpmModularity: New(\"test:1\"),\n\t\t\tpkg: pkg.Package{\n\t\t\t\tMetadata: pkg.JavaMetadata{},\n",
                      "markdown": "`\t\tsatisfied     bool\n\t}{\n\t\t{\n\t\t\tname:          \"non rpm metadata\",\n\t\t\trpmModularity: New(\"test:1\"),\n\t\t\tpkg: pkg.Package{\n\t\t\t\tMetadata: pkg.JavaMetadata{},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/syft-multiple-ecosystems.json"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 20,
                  "endLine": 66,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      }\n     },\n     {\n      \"path\": \"/etc/hostname\",\n      \"digest\": {\n       \"algorithm\": \"sha1\",\n       \"value\": \"Q16nVwYVXP/tChvUPdukVD2ifXOmc=\"\n",
                    "rendered": {
                      "text": "      }\n     },\n     {\n      \"path\": \"/etc/hostname\",\n      \"digest\": {\n       \"algorithm\": \"sha1\",\n       \"value\": \"Q16nVwYVXP/tChvUPdukVD2ifXOmc=\"\n",
                      "markdown": "`      }\n     },\n     {\n      \"path\": \"/etc/hostname\",\n      \"digest\": {\n       \"algorithm\": \"sha1\",\n       \"value\": \"Q16nVwYVXP/tChvUPdukVD2ifXOmc=\"\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/syft-multiple-ecosystems.json"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 15,
                  "endLine": 556,
                  "endColumn": 1241,
                  "snippet": {
                    "text": "json\",\n   \"tags\": [\n    \"alpine:fake\"\n   ],\n   \"imageSize\": 15879684,\n   \"layers\": [\n    {\n     \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n     \"digest\": \"sha256:50644c29ef5a27c9a40c393a73ece2479de78325cae7d762ef3cdc19bf42dd0a\",\n     \"size\": 5570176\n    }\n   ],\n   \"manifest\": \"eyJzY2hlbWFWZXJzaW9uIjoyLCJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmRpc3RyaWJ1dGlvbi5tYW5pZmVzdC52Mitqc29uIiwiY29uZmlnIjp7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuY29udGFpbmVyLmltYWdlLnYxK2pzb24iLCJzaXplIjoyMTE2LCJkaWdlc3QiOiJzaGEyNTY6ZmFkZjEyOTRjMDkyMTNiMjBkNGQ2ZmM4NDEwOTU4NGUxYzEwMmQxODVjMmNhZTE1MTQ0YTg3ZDI5ZGU2NWM2ZCJ9LCJsYXllcnMiOlt7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjo1ODQ0OTkyLCJkaWdlc3QiOiJzaGEyNTY6NTA2NDRjMjllZjVhMjdjOWE0MGMzOTNhNzNlY2UyNDc5ZGU3ODMyNWNhZTdkNzYyZWYzY2RjMTliZjQyZGQwYSJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjE2NzkzNiwiZGlnZXN0Ijoic2hhMjU2OmNjMGZmMWRkYWQ2ZmU0OTc4ZDgzMjYzMGE5MzAzODgzYWRjNTZlZGZjNzdjYWEzNjkyMjM5YzJkODFjZjVkMDAifSx7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjoxMDE2Njc4NCwiZGlnZXN0Ijoic2hhMjU2OjNkZDJkYjQ4M2JjOWQ2YjU2MWNlNWNjMTEwNWUwYjZkMTk2MWNhMjQ5YTczNmJiYTgzNzFhYjI4ZWEzMDRmODQifSx7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjoyMjUyOCwiZGlnZXN0Ijoic2hhMjU2OjkzY2Y0Y2ZiNjczYzdlMTZhOWU3NGY3MzFkNjc2N2I3MGI5MmEwYjdjOWY1OWQwNmVmZDcyZmJmZjUzNTM3MWMifV19\",\n   \"config\": \"eyJhcmNoaXRlY3R1cmUiOiJhbWQ2NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46",
                    "rendered": {
                      "text": "json\",\n   \"tags\": [\n    \"alpine:fake\"\n   ],\n   \"imageSize\": 15879684,\n   \"layers\": [\n    {\n     \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n     \"digest\": \"sha256:50644c29ef5a27c9a40c393a73ece2479de78325cae7d762ef3cdc19bf42dd0a\",\n     \"size\": 5570176\n    }\n   ],\n   \"manifest\": \"eyJzY2hlbWFWZXJzaW9uIjoyLCJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmRpc3RyaWJ1dGlvbi5tYW5pZmVzdC52Mitqc29uIiwiY29uZmlnIjp7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuY29udGFpbmVyLmltYWdlLnYxK2pzb24iLCJzaXplIjoyMTE2LCJkaWdlc3QiOiJzaGEyNTY6ZmFkZjEyOTRjMDkyMTNiMjBkNGQ2ZmM4NDEwOTU4NGUxYzEwMmQxODVjMmNhZTE1MTQ0YTg3ZDI5ZGU2NWM2ZCJ9LCJsYXllcnMiOlt7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjo1ODQ0OTkyLCJkaWdlc3QiOiJzaGEyNTY6NTA2NDRjMjllZjVhMjdjOWE0MGMzOTNhNzNlY2UyNDc5ZGU3ODMyNWNhZTdkNzYyZWYzY2RjMTliZjQyZGQwYSJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjE2NzkzNiwiZGlnZXN0Ijoic2hhMjU2OmNjMGZmMWRkYWQ2ZmU0OTc4ZDgzMjYzMGE5MzAzODgzYWRjNTZlZGZjNzdjYWEzNjkyMjM5YzJkODFjZjVkMDAifSx7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjoxMDE2Njc4NCwiZGlnZXN0Ijoic2hhMjU2OjNkZDJkYjQ4M2JjOWQ2YjU2MWNlNWNjMTEwNWUwYjZkMTk2MWNhMjQ5YTczNmJiYTgzNzFhYjI4ZWEzMDRmODQifSx7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjoyMjUyOCwiZGlnZXN0Ijoic2hhMjU2OjkzY2Y0Y2ZiNjczYzdlMTZhOWU3NGY3MzFkNjc2N2I3MGI5MmEwYjdjOWY1OWQwNmVmZDcyZmJmZjUzNTM3MWMifV19\",\n   \"config\": \"eyJhcmNoaXRlY3R1cmUiOiJhbWQ2NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46",
                      "markdown": "`json\",\n   \"tags\": [\n    \"alpine:fake\"\n   ],\n   \"imageSize\": 15879684,\n   \"layers\": [\n    {\n     \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n     \"digest\": \"sha256:50644c29ef5a27c9a40c393a73ece2479de78325cae7d762ef3cdc19bf42dd0a\",\n     \"size\": 5570176\n    }\n   ],\n   \"manifest\": \"eyJzY2hlbWFWZXJzaW9uIjoyLCJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmRpc3RyaWJ1dGlvbi5tYW5pZmVzdC52Mitqc29uIiwiY29uZmlnIjp7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuY29udGFpbmVyLmltYWdlLnYxK2pzb24iLCJzaXplIjoyMTE2LCJkaWdlc3QiOiJzaGEyNTY6ZmFkZjEyOTRjMDkyMTNiMjBkNGQ2ZmM4NDEwOTU4NGUxYzEwMmQxODVjMmNhZTE1MTQ0YTg3ZDI5ZGU2NWM2ZCJ9LCJsYXllcnMiOlt7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjo1ODQ0OTkyLCJkaWdlc3QiOiJzaGEyNTY6NTA2NDRjMjllZjVhMjdjOWE0MGMzOTNhNzNlY2UyNDc5ZGU3ODMyNWNhZTdkNzYyZWYzY2RjMTliZjQyZGQwYSJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjE2NzkzNiwiZGlnZXN0Ijoic2hhMjU2OmNjMGZmMWRkYWQ2ZmU0OTc4ZDgzMjYzMGE5MzAzODgzYWRjNTZlZGZjNzdjYWEzNjkyMjM5YzJkODFjZjVkMDAifSx7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjoxMDE2Njc4NCwiZGlnZXN0Ijoic2hhMjU2OjNkZDJkYjQ4M2JjOWQ2YjU2MWNlNWNjMTEwNWUwYjZkMTk2MWNhMjQ5YTczNmJiYTgzNzFhYjI4ZWEzMDRmODQifSx7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjoyMjUyOCwiZGlnZXN0Ijoic2hhMjU2OjkzY2Y0Y2ZiNjczYzdlMTZhOWU3NGY3MzFkNjc2N2I3MGI5MmEwYjdjOWY1OWQwNmVmZDcyZmJmZjUzNTM3MWMifV19\",\n   \"config\": \"eyJhcmNoaXRlY3R1cmUiOiJhbWQ2NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/syft-multiple-ecosystems.json"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 26,
                  "endLine": 37,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    \"installedSize\": 413696,\n    \"pullDependencies\": \"/bin/sh so:libc.musl-x86_64.so.1\",\n    \"pullChecksum\": \"Q1EymS6rAgmGs7XYhqdyEoiWgEZ6A=\",\n    \"gitCommitOfApkPort\": \"dfa1379357a321e638feef1cd8d55ab03d020f45\",\n    \"files\": [\n     {\n      \"path\": \"/dev\"\n",
                    "rendered": {
                      "text": "    \"installedSize\": 413696,\n    \"pullDependencies\": \"/bin/sh so:libc.musl-x86_64.so.1\",\n    \"pullChecksum\": \"Q1EymS6rAgmGs7XYhqdyEoiWgEZ6A=\",\n    \"gitCommitOfApkPort\": \"dfa1379357a321e638feef1cd8d55ab03d020f45\",\n    \"files\": [\n     {\n      \"path\": \"/dev\"\n",
                      "markdown": "`    \"installedSize\": 413696,\n    \"pullDependencies\": \"/bin/sh so:libc.musl-x86_64.so.1\",\n    \"pullChecksum\": \"Q1EymS6rAgmGs7XYhqdyEoiWgEZ6A=\",\n    \"gitCommitOfApkPort\": \"dfa1379357a321e638feef1cd8d55ab03d020f45\",\n    \"files\": [\n     {\n      \"path\": \"/dev\"\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/syft-java-bad-cpes.json"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 16,
                  "endLine": 84,
                  "endColumn": 2790,
                  "snippet": {
                    "text": "2N2JjOWI3ZWFkMTFkYjA0OTE4ZjAwYTZlNDMyNjI3ZDIxZTExNjBlZDkyYiJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjM1ODQsImRpZ2VzdCI6InNoYTI1NjphMTU1MzYzYTY3ZWRmNmU2NDYyYWE0NzQ0NWMzZDkwMGI4NGNlYzMzMjBiNjI0MDViNDk1ZGRmNjUwMzVjMDM5In1dfQ==\",\n      \"config\": \"eyJhcmNoaXRlY3R1cmUiOiJhbWQ2NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iXSwiQ21kIjpbIi9iaW4vc2giXSwiSW1hZ2UiOiJzaGEyNTY6NWI1MWNkNTVmNmQ5YmMyOTFkNDIzNGNmYTI2MGIyMWZmM2JkOTFkYzY2MWRlOWQ1ZmE3YzM4ZjYwNzljNGExZCIsIlZvbHVtZXMiOm51bGwsIldvcmtpbmdEaXIiOiIiLCJFbnRyeXBvaW50IjpudWxsLCJPbkJ1aWxkIjpbXSwiTGFiZWxzIjpudWxsfSwiY29udGFpbmVyX2NvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iXSwiQ21kIjpbIi9iaW4vc2giLCItYyIsIiMobm9wKSBDT1BZIGZpbGU6MmRkODU3MzFhNDA1NjliZmVjMDQ4ODBlNDU4OTg3NDhjNDIwMjBlMjM4NmRhMWViZjA5NDhiZjQ4YmIwZmRmZiBpbiAvICJdLCJJbWFnZSI6InNoYTI1Njo1YjUxY2Q1NWY2ZDliYzI5MWQ0MjM0Y2ZhMjYwYjIxZmYzYmQ5MWRjNjYxZGU5ZDVmYTdjMzhmNjA3OWM0YTFkIiwiVm9sdW1lcyI6bnVsbCwiV29ya2luZ0RpciI6IiIsIkVudHJ5cG9pbnQiOm51bGwsIk9uQnVpbGQiOltdLCJMYWJlbHMiOm51bGx9LCJjcmVhdGVkIjoiMjAyMS0wNC0wMVQxNToyODoyNy4zOTE0OTA5NjFaIiwiZG9ja2VyX3ZlcnNpb24iOiIxNy4wOS4wLWNlIiwiaGlzdG9yeSI6W3siY3JlYXRlZCI6IjIwMjEtMDMtMzFUMjA6MTA6MDYuNjg2MzU5MTI0WiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSBBREQgZmlsZTo3MTE5MTY3YjU2ZmYxMjI4YjJmYjYzOWM3Njg5NTVjZTlkYjdhOTk5Y2Q5NDcxNzkyNDBiMjE2ZGZhNWNjYmI5IGluIC8gIn0seyJjcmVhdGVkIjoiMjAyMS0wMy0zMVQyMDoxMDowNi45MzQzNjg2MDRaIiwiY3JlYXRlZF9ieSI6Ii9iaW4vc2ggLWMgIyhub3ApICBDTUQgW1wiL2Jpbi9zaFwiXSIsImVtcHR5X2xheWVyIjp0cnVlfSx7ImNyZWF0ZWQiOiIyMDIxLTA0LTAxVDE1OjI4OjI3LjIyMTEwNTY1NVoiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyB3Z2V0IC1udiBodHRwczovL3JlcG8xLm1hdmVuLm9yZy9tYXZlbjIvanVuaXQvanVuaXQvNC4xMy4xL2p1bml0LTQuMTMuMS5qYXIgXHUwMDI2XHUwMDI2ICAgICB3Z2V0IC1udiBodHRwczovL2dldC5qZW5raW5zLmlvL3BsdWdpbnMvVHdpbGlvTm90aWZpZXIvMC4yLjEvVHdpbGlvTm90aWZpZXIuaHBpIFx1MDAyNlx1MDAyNiAgICAgd2dldCAtbnYgaHR0cHM6Ly91cGRhdGVzLmplbmtpbnMtY2kub3JnL2Rvd25sb2FkL3dhci8xLjM5MC9odWRzb24ud2FyIn0seyJjcmVhdGVkIjoiMjAyMS0wNC0wMVQxNToyODoyNy4zOTE0OTA5NjFaIiwiY3JlYXRlZF9ieSI6Ii9iaW4vc2ggLWMgIyhub3ApIENPUFkgZmlsZToyZGQ4NTczMWE0MDU2OWJmZWMwNDg4MGU0NTg5ODc0OGM0MjAyMGUyMzg2ZGExZWJmMDk0OGJmNDhiYjBmZGZmIGluIC8gIn1dLCJvcyI6ImxpbnV4Iiwicm9vdGZzIjp7InR5cGUiOiJsYXllcnMiLCJkaWZmX2lkcyI6WyJzaGEyNTY6OGVhM2IyM2YzODdiZWRjNWUzY2VlNTc0NzQyZDc0ODk0MTQ0M2MzMjhhNzVmNTExZWIzN2IwZDhiNjE2NDEzMCIsInNoYTI1Njo1NDBjZTk3MzFhNTI4NjdhMjlkYjY3YmM5YjdlYWQxMWRiMDQ5MThmMDBhNmU0MzI2MjdkMjFlMTE2MGVkOTJiIiwic2hhMjU2OmExNTUzNjNhNjdlZGY2ZTY0NjJhYTQ3NDQ1YzNkOTAwYjg0Y2VjMzMyMGI2MjQwNWI0OTVkZGY2NTAzNWMwMzkiXX19\",\n      \"repoDigests\": [\n        \"anchore/test_images@sha256:4f6203a146e4c056f09fd72c687adfb23e75b18b58e3ea7c9a25a8af6699a381\"\n      ],\n      \"scope\": \"Squashed\"\n    }\n  },\n  \"distro\": {\n    \"name\": \"alpine\",\n    \"version\": \"3.13.4\",\n    \"idLike\": \"\"\n  },\n  \"descriptor\": {\n    \"name\": \"syft\",\n    \"v",
                    "rendered": {
                      "text": "2N2JjOWI3ZWFkMTFkYjA0OTE4ZjAwYTZlNDMyNjI3ZDIxZTExNjBlZDkyYiJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjM1ODQsImRpZ2VzdCI6InNoYTI1NjphMTU1MzYzYTY3ZWRmNmU2NDYyYWE0NzQ0NWMzZDkwMGI4NGNlYzMzMjBiNjI0MDViNDk1ZGRmNjUwMzVjMDM5In1dfQ==\",\n      \"config\": \"eyJhcmNoaXRlY3R1cmUiOiJhbWQ2NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iXSwiQ21kIjpbIi9iaW4vc2giXSwiSW1hZ2UiOiJzaGEyNTY6NWI1MWNkNTVmNmQ5YmMyOTFkNDIzNGNmYTI2MGIyMWZmM2JkOTFkYzY2MWRlOWQ1ZmE3YzM4ZjYwNzljNGExZCIsIlZvbHVtZXMiOm51bGwsIldvcmtpbmdEaXIiOiIiLCJFbnRyeXBvaW50IjpudWxsLCJPbkJ1aWxkIjpbXSwiTGFiZWxzIjpudWxsfSwiY29udGFpbmVyX2NvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iXSwiQ21kIjpbIi9iaW4vc2giLCItYyIsIiMobm9wKSBDT1BZIGZpbGU6MmRkODU3MzFhNDA1NjliZmVjMDQ4ODBlNDU4OTg3NDhjNDIwMjBlMjM4NmRhMWViZjA5NDhiZjQ4YmIwZmRmZiBpbiAvICJdLCJJbWFnZSI6InNoYTI1Njo1YjUxY2Q1NWY2ZDliYzI5MWQ0MjM0Y2ZhMjYwYjIxZmYzYmQ5MWRjNjYxZGU5ZDVmYTdjMzhmNjA3OWM0YTFkIiwiVm9sdW1lcyI6bnVsbCwiV29ya2luZ0RpciI6IiIsIkVudHJ5cG9pbnQiOm51bGwsIk9uQnVpbGQiOltdLCJMYWJlbHMiOm51bGx9LCJjcmVhdGVkIjoiMjAyMS0wNC0wMVQxNToyODoyNy4zOTE0OTA5NjFaIiwiZG9ja2VyX3ZlcnNpb24iOiIxNy4wOS4wLWNlIiwiaGlzdG9yeSI6W3siY3JlYXRlZCI6IjIwMjEtMDMtMzFUMjA6MTA6MDYuNjg2MzU5MTI0WiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSBBREQgZmlsZTo3MTE5MTY3YjU2ZmYxMjI4YjJmYjYzOWM3Njg5NTVjZTlkYjdhOTk5Y2Q5NDcxNzkyNDBiMjE2ZGZhNWNjYmI5IGluIC8gIn0seyJjcmVhdGVkIjoiMjAyMS0wMy0zMVQyMDoxMDowNi45MzQzNjg2MDRaIiwiY3JlYXRlZF9ieSI6Ii9iaW4vc2ggLWMgIyhub3ApICBDTUQgW1wiL2Jpbi9zaFwiXSIsImVtcHR5X2xheWVyIjp0cnVlfSx7ImNyZWF0ZWQiOiIyMDIxLTA0LTAxVDE1OjI4OjI3LjIyMTEwNTY1NVoiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyB3Z2V0IC1udiBodHRwczovL3JlcG8xLm1hdmVuLm9yZy9tYXZlbjIvanVuaXQvanVuaXQvNC4xMy4xL2p1bml0LTQuMTMuMS5qYXIgXHUwMDI2XHUwMDI2ICAgICB3Z2V0IC1udiBodHRwczovL2dldC5qZW5raW5zLmlvL3BsdWdpbnMvVHdpbGlvTm90aWZpZXIvMC4yLjEvVHdpbGlvTm90aWZpZXIuaHBpIFx1MDAyNlx1MDAyNiAgICAgd2dldCAtbnYgaHR0cHM6Ly91cGRhdGVzLmplbmtpbnMtY2kub3JnL2Rvd25sb2FkL3dhci8xLjM5MC9odWRzb24ud2FyIn0seyJjcmVhdGVkIjoiMjAyMS0wNC0wMVQxNToyODoyNy4zOTE0OTA5NjFaIiwiY3JlYXRlZF9ieSI6Ii9iaW4vc2ggLWMgIyhub3ApIENPUFkgZmlsZToyZGQ4NTczMWE0MDU2OWJmZWMwNDg4MGU0NTg5ODc0OGM0MjAyMGUyMzg2ZGExZWJmMDk0OGJmNDhiYjBmZGZmIGluIC8gIn1dLCJvcyI6ImxpbnV4Iiwicm9vdGZzIjp7InR5cGUiOiJsYXllcnMiLCJkaWZmX2lkcyI6WyJzaGEyNTY6OGVhM2IyM2YzODdiZWRjNWUzY2VlNTc0NzQyZDc0ODk0MTQ0M2MzMjhhNzVmNTExZWIzN2IwZDhiNjE2NDEzMCIsInNoYTI1Njo1NDBjZTk3MzFhNTI4NjdhMjlkYjY3YmM5YjdlYWQxMWRiMDQ5MThmMDBhNmU0MzI2MjdkMjFlMTE2MGVkOTJiIiwic2hhMjU2OmExNTUzNjNhNjdlZGY2ZTY0NjJhYTQ3NDQ1YzNkOTAwYjg0Y2VjMzMyMGI2MjQwNWI0OTVkZGY2NTAzNWMwMzkiXX19\",\n      \"repoDigests\": [\n        \"anchore/test_images@sha256:4f6203a146e4c056f09fd72c687adfb23e75b18b58e3ea7c9a25a8af6699a381\"\n      ],\n      \"scope\": \"Squashed\"\n    }\n  },\n  \"distro\": {\n    \"name\": \"alpine\",\n    \"version\": \"3.13.4\",\n    \"idLike\": \"\"\n  },\n  \"descriptor\": {\n    \"name\": \"syft\",\n    \"v",
                      "markdown": "`2N2JjOWI3ZWFkMTFkYjA0OTE4ZjAwYTZlNDMyNjI3ZDIxZTExNjBlZDkyYiJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjM1ODQsImRpZ2VzdCI6InNoYTI1NjphMTU1MzYzYTY3ZWRmNmU2NDYyYWE0NzQ0NWMzZDkwMGI4NGNlYzMzMjBiNjI0MDViNDk1ZGRmNjUwMzVjMDM5In1dfQ==\",\n      \"config\": \"eyJhcmNoaXRlY3R1cmUiOiJhbWQ2NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iXSwiQ21kIjpbIi9iaW4vc2giXSwiSW1hZ2UiOiJzaGEyNTY6NWI1MWNkNTVmNmQ5YmMyOTFkNDIzNGNmYTI2MGIyMWZmM2JkOTFkYzY2MWRlOWQ1ZmE3YzM4ZjYwNzljNGExZCIsIlZvbHVtZXMiOm51bGwsIldvcmtpbmdEaXIiOiIiLCJFbnRyeXBvaW50IjpudWxsLCJPbkJ1aWxkIjpbXSwiTGFiZWxzIjpudWxsfSwiY29udGFpbmVyX2NvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iXSwiQ21kIjpbIi9iaW4vc2giLCItYyIsIiMobm9wKSBDT1BZIGZpbGU6MmRkODU3MzFhNDA1NjliZmVjMDQ4ODBlNDU4OTg3NDhjNDIwMjBlMjM4NmRhMWViZjA5NDhiZjQ4YmIwZmRmZiBpbiAvICJdLCJJbWFnZSI6InNoYTI1Njo1YjUxY2Q1NWY2ZDliYzI5MWQ0MjM0Y2ZhMjYwYjIxZmYzYmQ5MWRjNjYxZGU5ZDVmYTdjMzhmNjA3OWM0YTFkIiwiVm9sdW1lcyI6bnVsbCwiV29ya2luZ0RpciI6IiIsIkVudHJ5cG9pbnQiOm51bGwsIk9uQnVpbGQiOltdLCJMYWJlbHMiOm51bGx9LCJjcmVhdGVkIjoiMjAyMS0wNC0wMVQxNToyODoyNy4zOTE0OTA5NjFaIiwiZG9ja2VyX3ZlcnNpb24iOiIxNy4wOS4wLWNlIiwiaGlzdG9yeSI6W3siY3JlYXRlZCI6IjIwMjEtMDMtMzFUMjA6MTA6MDYuNjg2MzU5MTI0WiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSBBREQgZmlsZTo3MTE5MTY3YjU2ZmYxMjI4YjJmYjYzOWM3Njg5NTVjZTlkYjdhOTk5Y2Q5NDcxNzkyNDBiMjE2ZGZhNWNjYmI5IGluIC8gIn0seyJjcmVhdGVkIjoiMjAyMS0wMy0zMVQyMDoxMDowNi45MzQzNjg2MDRaIiwiY3JlYXRlZF9ieSI6Ii9iaW4vc2ggLWMgIyhub3ApICBDTUQgW1wiL2Jpbi9zaFwiXSIsImVtcHR5X2xheWVyIjp0cnVlfSx7ImNyZWF0ZWQiOiIyMDIxLTA0LTAxVDE1OjI4OjI3LjIyMTEwNTY1NVoiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyB3Z2V0IC1udiBodHRwczovL3JlcG8xLm1hdmVuLm9yZy9tYXZlbjIvanVuaXQvanVuaXQvNC4xMy4xL2p1bml0LTQuMTMuMS5qYXIgXHUwMDI2XHUwMDI2ICAgICB3Z2V0IC1udiBodHRwczovL2dldC5qZW5raW5zLmlvL3BsdWdpbnMvVHdpbGlvTm90aWZpZXIvMC4yLjEvVHdpbGlvTm90aWZpZXIuaHBpIFx1MDAyNlx1MDAyNiAgICAgd2dldCAtbnYgaHR0cHM6Ly91cGRhdGVzLmplbmtpbnMtY2kub3JnL2Rvd25sb2FkL3dhci8xLjM5MC9odWRzb24ud2FyIn0seyJjcmVhdGVkIjoiMjAyMS0wNC0wMVQxNToyODoyNy4zOTE0OTA5NjFaIiwiY3JlYXRlZF9ieSI6Ii9iaW4vc2ggLWMgIyhub3ApIENPUFkgZmlsZToyZGQ4NTczMWE0MDU2OWJmZWMwNDg4MGU0NTg5ODc0OGM0MjAyMGUyMzg2ZGExZWJmMDk0OGJmNDhiYjBmZGZmIGluIC8gIn1dLCJvcyI6ImxpbnV4Iiwicm9vdGZzIjp7InR5cGUiOiJsYXllcnMiLCJkaWZmX2lkcyI6WyJzaGEyNTY6OGVhM2IyM2YzODdiZWRjNWUzY2VlNTc0NzQyZDc0ODk0MTQ0M2MzMjhhNzVmNTExZWIzN2IwZDhiNjE2NDEzMCIsInNoYTI1Njo1NDBjZTk3MzFhNTI4NjdhMjlkYjY3YmM5YjdlYWQxMWRiMDQ5MThmMDBhNmU0MzI2MjdkMjFlMTE2MGVkOTJiIiwic2hhMjU2OmExNTUzNjNhNjdlZGY2ZTY0NjJhYTQ3NDQ1YzNkOTAwYjg0Y2VjMzMyMGI2MjQwNWI0OTVkZGY2NTAzNWMwMzkiXX19\",\n      \"repoDigests\": [\n        \"anchore/test_images@sha256:4f6203a146e4c056f09fd72c687adfb23e75b18b58e3ea7c9a25a8af6699a381\"\n      ],\n      \"scope\": \"Squashed\"\n    }\n  },\n  \"distro\": {\n    \"name\": \"alpine\",\n    \"version\": \"3.13.4\",\n    \"idLike\": \"\"\n  },\n  \"descriptor\": {\n    \"name\": \"syft\",\n    \"v`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/sbom-with-intoto-string.json"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 41,
                  "endLine": 107,
                  "endColumn": 49,
                  "snippet": {
                    "text": "            \"md5\": \"460b6a1df2db2b5e80f05a44ec21c62f\"\n          },\n          {\n            \"path\": \"/usr/share/man/man1/hostname.1.gz\",\n            \"md5\": \"62e6be6a928b4b9f2a985778fee171fd\"\n          }\n        ]\n",
                    "rendered": {
                      "text": "            \"md5\": \"460b6a1df2db2b5e80f05a44ec21c62f\"\n          },\n          {\n            \"path\": \"/usr/share/man/man1/hostname.1.gz\",\n            \"md5\": \"62e6be6a928b4b9f2a985778fee171fd\"\n          }\n        ]\n",
                      "markdown": "`            \"md5\": \"460b6a1df2db2b5e80f05a44ec21c62f\"\n          },\n          {\n            \"path\": \"/usr/share/man/man1/hostname.1.gz\",\n            \"md5\": \"62e6be6a928b4b9f2a985778fee171fd\"\n          }\n        ]\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/sbom-with-intoto-string.json"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 36,
                  "endLine": 103,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            \"md5\": \"087a3eabd7427692c216a5d7a4341127\"\n          },\n          {\n            \"path\": \"/usr/share/doc/hostname/copyright\",\n            \"md5\": \"460b6a1df2db2b5e80f05a44ec21c62f\"\n          },\n          {\n",
                    "rendered": {
                      "text": "            \"md5\": \"087a3eabd7427692c216a5d7a4341127\"\n          },\n          {\n            \"path\": \"/usr/share/doc/hostname/copyright\",\n            \"md5\": \"460b6a1df2db2b5e80f05a44ec21c62f\"\n          },\n          {\n",
                      "markdown": "`            \"md5\": \"087a3eabd7427692c216a5d7a4341127\"\n          },\n          {\n            \"path\": \"/usr/share/doc/hostname/copyright\",\n            \"md5\": \"460b6a1df2db2b5e80f05a44ec21c62f\"\n          },\n          {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/sbom-with-intoto-string.json"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 36,
                  "endLine": 99,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            \"md5\": \"1ce73d718e3dccc1aaa7bce6ae2ef0a7\"\n          },\n          {\n            \"path\": \"/usr/share/doc/hostname/changelog.gz\",\n            \"md5\": \"087a3eabd7427692c216a5d7a4341127\"\n          },\n          {\n",
                    "rendered": {
                      "text": "            \"md5\": \"1ce73d718e3dccc1aaa7bce6ae2ef0a7\"\n          },\n          {\n            \"path\": \"/usr/share/doc/hostname/changelog.gz\",\n            \"md5\": \"087a3eabd7427692c216a5d7a4341127\"\n          },\n          {\n",
                      "markdown": "`            \"md5\": \"1ce73d718e3dccc1aaa7bce6ae2ef0a7\"\n          },\n          {\n            \"path\": \"/usr/share/doc/hostname/changelog.gz\",\n            \"md5\": \"087a3eabd7427692c216a5d7a4341127\"\n          },\n          {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/sbom-with-intoto-string.json"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 26,
                  "endLine": 95,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        \"installedSize\": 54,\n        \"files\": [\n          {\n            \"path\": \"/bin/hostname\",\n            \"md5\": \"1ce73d718e3dccc1aaa7bce6ae2ef0a7\"\n          },\n          {\n",
                    "rendered": {
                      "text": "        \"installedSize\": 54,\n        \"files\": [\n          {\n            \"path\": \"/bin/hostname\",\n            \"md5\": \"1ce73d718e3dccc1aaa7bce6ae2ef0a7\"\n          },\n          {\n",
                      "markdown": "`        \"installedSize\": 54,\n        \"files\": [\n          {\n            \"path\": \"/bin/hostname\",\n            \"md5\": \"1ce73d718e3dccc1aaa7bce6ae2ef0a7\"\n          },\n          {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/sbom-with-intoto-string.json"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 20,
                  "endLine": 86,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n      \"metadata\": {\n        \"package\": \"hostname\",\n        \"source\": \"\",\n        \"version\": \"3.23\",\n        \"sourceVersion\": \"\",\n",
                    "rendered": {
                      "text": "      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n      \"metadata\": {\n        \"package\": \"hostname\",\n        \"source\": \"\",\n        \"version\": \"3.23\",\n        \"sourceVersion\": \"\",\n",
                      "markdown": "`      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n      \"metadata\": {\n        \"package\": \"hostname\",\n        \"source\": \"\",\n        \"version\": \"3.23\",\n        \"sourceVersion\": \"\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/sbom-with-intoto-string.json"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 30,
                  "endLine": 83,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n      \"metadata\": {\n        \"package\": \"hostname\",\n",
                    "rendered": {
                      "text": "        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n      \"metadata\": {\n        \"package\": \"hostname\",\n",
                      "markdown": "`        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n      \"metadata\": {\n        \"package\": \"hostname\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/sbom-with-intoto-string.json"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 21,
                  "endLine": 81,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n",
                    "rendered": {
                      "text": "      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n",
                      "markdown": "`      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n      \"metadataType\": \"DpkgMetadata\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/sbom-with-intoto-string.json"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 28,
                  "endLine": 80,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      \"licenses\": [],\n      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n",
                    "rendered": {
                      "text": "      \"licenses\": [],\n      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n",
                      "markdown": "`      \"licenses\": [],\n      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/sbom-with-intoto-string.json"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 19,
                  "endLine": 80,
                  "endColumn": 27,
                  "snippet": {
                    "text": "      \"licenses\": [],\n      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n",
                    "rendered": {
                      "text": "      \"licenses\": [],\n      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n",
                      "markdown": "`      \"licenses\": [],\n      \"language\": \"\",\n      \"cpes\": [\n        \"cpe:2.3:a:hostname:hostname:3.23:*:*:*:*:*:*:*\",\n        \"cpe:2.3:a:*:hostname:3.23:*:*:*:*:*:*:*\"\n      ],\n      \"purl\": \"pkg:deb/ubuntu/hostname@3.23?arch=amd64\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/sbom-with-intoto-string.json"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 34,
                  "endLine": 73,
                  "endColumn": 42,
                  "snippet": {
                    "text": "          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n          \"path\": \"/usr/share/doc/hostname/copyright\",\n          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        }\n      ],\n",
                    "rendered": {
                      "text": "          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n          \"path\": \"/usr/share/doc/hostname/copyright\",\n          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        }\n      ],\n",
                      "markdown": "`          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n          \"path\": \"/usr/share/doc/hostname/copyright\",\n          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        }\n      ],\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/sbom-with-intoto-string.json"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 38,
                  "endLine": 69,
                  "endColumn": 46,
                  "snippet": {
                    "text": "          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n          \"path\": \"/var/lib/dpkg/info/hostname.md5sums\",\n          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n",
                    "rendered": {
                      "text": "          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n          \"path\": \"/var/lib/dpkg/info/hostname.md5sums\",\n          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n",
                      "markdown": "`          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n          \"path\": \"/var/lib/dpkg/info/hostname.md5sums\",\n          \"layerID\": \"sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009\"\n        },\n        {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/sbom-with-intoto-string.json"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 15,
                  "endLine": 59,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      }\n    },\n    {\n      \"name\": \"hostname\",\n      \"version\": \"3.23\",\n      \"type\": \"deb\",\n      \"foundBy\": \"dpkgdb-cataloger\",\n",
                    "rendered": {
                      "text": "      }\n    },\n    {\n      \"name\": \"hostname\",\n      \"version\": \"3.23\",\n      \"type\": \"deb\",\n      \"foundBy\": \"dpkgdb-cataloger\",\n",
                      "markdown": "`      }\n    },\n    {\n      \"name\": \"hostname\",\n      \"version\": \"3.23\",\n      \"type\": \"deb\",\n      \"foundBy\": \"dpkgdb-cataloger\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/test-fixtures/syft-spring.json"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 15,
                  "endLine": 105,
                  "endColumn": 1897,
                  "snippet": {
                    "text": "ringio/gs-spring-boot-docker:latest\"\n   ],\n   \"imageSize\": 142807921,\n   \"layers\": [\n    {\n     \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n     \"digest\": \"sha256:42a3027eaac150d2b8f516100921f4bd83b3dbc20bfe64124f686c072b49c602\",\n     \"size\": 1809479\n    }\n   ],\n   \"manifest\": \"eyJzY2hlbWFWZXJzaW9uIjoyLCJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmRpc3RyaWJ1dGlvbi5tYW5pZmVzdC52Mitqc29uIiwiY29uZmlnIjp7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuY29udGFpbmVyLmltYWdlLnYxK2pzb24iLCJzaXplIjoxNTk1LCJkaWdlc3QiOiJzaGEyNTY6OTA2NTY1OWM2ZTUzN2IwMzY0YjdiMWQzZTU0NDJhM2E1YWE1NmQ3NTVmYjg4M2QyMjFlOWU4YjM2MzdmYjU4ZSJ9LCJsYXllcnMiOlt7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjozMDYxNzYwLCJkaWdlc3QiOiJzaGEyNTY6NDJhMzAyN2VhYWMxNTBkMmI4ZjUxNjEwMDkyMWY0YmQ4M2IzZGJjMjBiZmU2NDEyNGY2ODZjMDcyYjQ5YzYwMiJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjE1NDQxOTIwLCJkaWdlc3QiOiJzaGEyNTY6ZjQ3MTYzZThkZTU3ZTNlM2NjZmU4OWQ1ZGZiZDljMjUyZDllY2E1M2RjNzkwNmI4ZGI2MGVkZGNiODc2YzU5MiJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjE5NjYwODAsImRpZ2VzdCI6InNoYTI1Njo2MTg5YWJlMDk1ZDUzYzFjOWYyYmZjOGY1MDEyOGVlODc2YjlhNWQxMGY5ZWRhMTU2NGU1ZjUzNTdkNmZmZTYxIn0seyJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmltYWdlLnJvb3Rmcy5kaWZmLnRhci5nemlwIiwic2l6ZSI6MTA2ODMzOTIwLCJkaWdlc3QiOiJzaGEyNTY6YTFhNmNlYWRiNzAxYWI0ZTZjOTNiMjQzZGMyYTBkYWVkYzhjZWUyM2EyNDIwMzg0NWVjY2NkNTc4NGNkMTM5MyJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjE3NDg3ODcyLCJkaWdlc3QiOiJzaGEyNTY6ODk1MDRmMDgzZDNmMTUzMjJmOTdhZTI0MGRmNDQ2NTAyMDNmMjQ0Mjc4NjBkYjFiM2QzMmU2NmRkMDU5NDBlNCJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjM1ODQsImRpZ2VzdCI6InNoYTI1NjoyNDQzNDk3MWNhN2Y0MGUxYTdlNjRlZThlYTFjYTg0MzQzMmRhMWUxYmIxYzU5ODM4NzA4MzUwNjU2ODBkMTU0In0seyJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmltYWdlLnJvb3Rmcy5kaWZmLnRhci5nemlwIiwic2l6ZSI6NDA5NiwiZGlnZXN0Ijoic2hhMjU2OjNjMDEwMjY1NDQ5ZDAwZmFlZTZmMmZhMWM3ZGY0ODEwOWMwZDcwOGM3MWJlZTRhMzhlNGI1ZTBmYTliODdjZTkifV19\",\n   \"config\": \"eyJjcmVhdGVkIjoiMTk3MC0wMS0wMVQwMDowMDowMFoiLCJhcmNoaXRlY3R1cmUiOiJhbWQ2NCIsIm9zIjoibGludXgiLCJjb25maWciOnsiRW52IjpbIlBBVEg9L3Vzci9sb2NhbC9zYmluOi91c3IvbG9jYWwvYmluOi91c3Ivc2JpbjovdXNyL2Jpbjovc2JpbjovYmluIiwiU1NMX0NFUlRfRklMRT0vZXRjL3NzbC9jZXJ0cy9jYS1jZXJ0aWZpY2F0ZXMuY3J0IiwiSkFWQV9W",
                    "rendered": {
                      "text": "ringio/gs-spring-boot-docker:latest\"\n   ],\n   \"imageSize\": 142807921,\n   \"layers\": [\n    {\n     \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n     \"digest\": \"sha256:42a3027eaac150d2b8f516100921f4bd83b3dbc20bfe64124f686c072b49c602\",\n     \"size\": 1809479\n    }\n   ],\n   \"manifest\": \"eyJzY2hlbWFWZXJzaW9uIjoyLCJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmRpc3RyaWJ1dGlvbi5tYW5pZmVzdC52Mitqc29uIiwiY29uZmlnIjp7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuY29udGFpbmVyLmltYWdlLnYxK2pzb24iLCJzaXplIjoxNTk1LCJkaWdlc3QiOiJzaGEyNTY6OTA2NTY1OWM2ZTUzN2IwMzY0YjdiMWQzZTU0NDJhM2E1YWE1NmQ3NTVmYjg4M2QyMjFlOWU4YjM2MzdmYjU4ZSJ9LCJsYXllcnMiOlt7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjozMDYxNzYwLCJkaWdlc3QiOiJzaGEyNTY6NDJhMzAyN2VhYWMxNTBkMmI4ZjUxNjEwMDkyMWY0YmQ4M2IzZGJjMjBiZmU2NDEyNGY2ODZjMDcyYjQ5YzYwMiJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjE1NDQxOTIwLCJkaWdlc3QiOiJzaGEyNTY6ZjQ3MTYzZThkZTU3ZTNlM2NjZmU4OWQ1ZGZiZDljMjUyZDllY2E1M2RjNzkwNmI4ZGI2MGVkZGNiODc2YzU5MiJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjE5NjYwODAsImRpZ2VzdCI6InNoYTI1Njo2MTg5YWJlMDk1ZDUzYzFjOWYyYmZjOGY1MDEyOGVlODc2YjlhNWQxMGY5ZWRhMTU2NGU1ZjUzNTdkNmZmZTYxIn0seyJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmltYWdlLnJvb3Rmcy5kaWZmLnRhci5nemlwIiwic2l6ZSI6MTA2ODMzOTIwLCJkaWdlc3QiOiJzaGEyNTY6YTFhNmNlYWRiNzAxYWI0ZTZjOTNiMjQzZGMyYTBkYWVkYzhjZWUyM2EyNDIwMzg0NWVjY2NkNTc4NGNkMTM5MyJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjE3NDg3ODcyLCJkaWdlc3QiOiJzaGEyNTY6ODk1MDRmMDgzZDNmMTUzMjJmOTdhZTI0MGRmNDQ2NTAyMDNmMjQ0Mjc4NjBkYjFiM2QzMmU2NmRkMDU5NDBlNCJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjM1ODQsImRpZ2VzdCI6InNoYTI1NjoyNDQzNDk3MWNhN2Y0MGUxYTdlNjRlZThlYTFjYTg0MzQzMmRhMWUxYmIxYzU5ODM4NzA4MzUwNjU2ODBkMTU0In0seyJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmltYWdlLnJvb3Rmcy5kaWZmLnRhci5nemlwIiwic2l6ZSI6NDA5NiwiZGlnZXN0Ijoic2hhMjU2OjNjMDEwMjY1NDQ5ZDAwZmFlZTZmMmZhMWM3ZGY0ODEwOWMwZDcwOGM3MWJlZTRhMzhlNGI1ZTBmYTliODdjZTkifV19\",\n   \"config\": \"eyJjcmVhdGVkIjoiMTk3MC0wMS0wMVQwMDowMDowMFoiLCJhcmNoaXRlY3R1cmUiOiJhbWQ2NCIsIm9zIjoibGludXgiLCJjb25maWciOnsiRW52IjpbIlBBVEg9L3Vzci9sb2NhbC9zYmluOi91c3IvbG9jYWwvYmluOi91c3Ivc2JpbjovdXNyL2Jpbjovc2JpbjovYmluIiwiU1NMX0NFUlRfRklMRT0vZXRjL3NzbC9jZXJ0cy9jYS1jZXJ0aWZpY2F0ZXMuY3J0IiwiSkFWQV9W",
                      "markdown": "`ringio/gs-spring-boot-docker:latest\"\n   ],\n   \"imageSize\": 142807921,\n   \"layers\": [\n    {\n     \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n     \"digest\": \"sha256:42a3027eaac150d2b8f516100921f4bd83b3dbc20bfe64124f686c072b49c602\",\n     \"size\": 1809479\n    }\n   ],\n   \"manifest\": \"eyJzY2hlbWFWZXJzaW9uIjoyLCJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmRpc3RyaWJ1dGlvbi5tYW5pZmVzdC52Mitqc29uIiwiY29uZmlnIjp7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuY29udGFpbmVyLmltYWdlLnYxK2pzb24iLCJzaXplIjoxNTk1LCJkaWdlc3QiOiJzaGEyNTY6OTA2NTY1OWM2ZTUzN2IwMzY0YjdiMWQzZTU0NDJhM2E1YWE1NmQ3NTVmYjg4M2QyMjFlOWU4YjM2MzdmYjU4ZSJ9LCJsYXllcnMiOlt7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjozMDYxNzYwLCJkaWdlc3QiOiJzaGEyNTY6NDJhMzAyN2VhYWMxNTBkMmI4ZjUxNjEwMDkyMWY0YmQ4M2IzZGJjMjBiZmU2NDEyNGY2ODZjMDcyYjQ5YzYwMiJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjE1NDQxOTIwLCJkaWdlc3QiOiJzaGEyNTY6ZjQ3MTYzZThkZTU3ZTNlM2NjZmU4OWQ1ZGZiZDljMjUyZDllY2E1M2RjNzkwNmI4ZGI2MGVkZGNiODc2YzU5MiJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjE5NjYwODAsImRpZ2VzdCI6InNoYTI1Njo2MTg5YWJlMDk1ZDUzYzFjOWYyYmZjOGY1MDEyOGVlODc2YjlhNWQxMGY5ZWRhMTU2NGU1ZjUzNTdkNmZmZTYxIn0seyJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmltYWdlLnJvb3Rmcy5kaWZmLnRhci5nemlwIiwic2l6ZSI6MTA2ODMzOTIwLCJkaWdlc3QiOiJzaGEyNTY6YTFhNmNlYWRiNzAxYWI0ZTZjOTNiMjQzZGMyYTBkYWVkYzhjZWUyM2EyNDIwMzg0NWVjY2NkNTc4NGNkMTM5MyJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjE3NDg3ODcyLCJkaWdlc3QiOiJzaGEyNTY6ODk1MDRmMDgzZDNmMTUzMjJmOTdhZTI0MGRmNDQ2NTAyMDNmMjQ0Mjc4NjBkYjFiM2QzMmU2NmRkMDU5NDBlNCJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjM1ODQsImRpZ2VzdCI6InNoYTI1NjoyNDQzNDk3MWNhN2Y0MGUxYTdlNjRlZThlYTFjYTg0MzQzMmRhMWUxYmIxYzU5ODM4NzA4MzUwNjU2ODBkMTU0In0seyJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmltYWdlLnJvb3Rmcy5kaWZmLnRhci5nemlwIiwic2l6ZSI6NDA5NiwiZGlnZXN0Ijoic2hhMjU2OjNjMDEwMjY1NDQ5ZDAwZmFlZTZmMmZhMWM3ZGY0ODEwOWMwZDcwOGM3MWJlZTRhMzhlNGI1ZTBmYTliODdjZTkifV19\",\n   \"config\": \"eyJjcmVhdGVkIjoiMTk3MC0wMS0wMVQwMDowMDowMFoiLCJhcmNoaXRlY3R1cmUiOiJhbWQ2NCIsIm9zIjoibGludXgiLCJjb25maWciOnsiRW52IjpbIlBBVEg9L3Vzci9sb2NhbC9zYmluOi91c3IvbG9jYWwvYmluOi91c3Ivc2JpbjovdXNyL2Jpbjovc2JpbjovYmluIiwiU1NMX0NFUlRfRklMRT0vZXRjL3NzbC9jZXJ0cy9jYS1jZXJ0aWZpY2F0ZXMuY3J0IiwiSkFWQV9W`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/syft_sbom_provider_test.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 20,
                  "endLine": 58,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t{Path: \"/etc\"},\n\t\t\t\t\t\t\t{Path: \"/etc/fstab\"},\n\t\t\t\t\t\t\t{Path: \"/etc/group\"},\n\t\t\t\t\t\t\t{Path: \"/etc/hostname\"},\n\t\t\t\t\t\t\t{Path: \"/etc/hosts\"},\n\t\t\t\t\t\t\t{Path: \"/etc/inittab\"},\n\t\t\t\t\t\t\t{Path: \"/etc/modules\"},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\t{Path: \"/etc\"},\n\t\t\t\t\t\t\t{Path: \"/etc/fstab\"},\n\t\t\t\t\t\t\t{Path: \"/etc/group\"},\n\t\t\t\t\t\t\t{Path: \"/etc/hostname\"},\n\t\t\t\t\t\t\t{Path: \"/etc/hosts\"},\n\t\t\t\t\t\t\t{Path: \"/etc/inittab\"},\n\t\t\t\t\t\t\t{Path: \"/etc/modules\"},\n",
                      "markdown": "`\t\t\t\t\t\t\t{Path: \"/etc\"},\n\t\t\t\t\t\t\t{Path: \"/etc/fstab\"},\n\t\t\t\t\t\t\t{Path: \"/etc/group\"},\n\t\t\t\t\t\t\t{Path: \"/etc/hostname\"},\n\t\t\t\t\t\t\t{Path: \"/etc/hosts\"},\n\t\t\t\t\t\t\t{Path: \"/etc/inittab\"},\n\t\t\t\t\t\t\t{Path: \"/etc/modules\"},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/package_test.go"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 16,
                  "endLine": 212,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\t\t\t\tManifestName:  \"main-section-name-info\",\n\t\t\t\tArchiveDigests: []Digest{{\n\t\t\t\t\tAlgorithm: \"sha1\",\n\t\t\t\t\tValue:     \"236e3bfdbdc6c86629237a74f0f11414adb4e211\",\n\t\t\t\t}},\n\t\t\t},\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\tManifestName:  \"main-section-name-info\",\n\t\t\t\tArchiveDigests: []Digest{{\n\t\t\t\t\tAlgorithm: \"sha1\",\n\t\t\t\t\tValue:     \"236e3bfdbdc6c86629237a74f0f11414adb4e211\",\n\t\t\t\t}},\n\t\t\t},\n\t\t},\n",
                      "markdown": "`\t\t\t\tManifestName:  \"main-section-name-info\",\n\t\t\t\tArchiveDigests: []Digest{{\n\t\t\t\t\tAlgorithm: \"sha1\",\n\t\t\t\t\tValue:     \"236e3bfdbdc6c86629237a74f0f11414adb4e211\",\n\t\t\t\t}},\n\t\t\t},\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/package_test.go"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 17,
                  "endLine": 201,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t\t\t\t\t},\n\t\t\t\t\tArchiveDigests: []syftFile.Digest{{\n\t\t\t\t\t\tAlgorithm: \"sha1\",\n\t\t\t\t\t\tValue:     \"236e3bfdbdc6c86629237a74f0f11414adb4e211\",\n\t\t\t\t\t}},\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t},\n\t\t\t\t\tArchiveDigests: []syftFile.Digest{{\n\t\t\t\t\t\tAlgorithm: \"sha1\",\n\t\t\t\t\t\tValue:     \"236e3bfdbdc6c86629237a74f0f11414adb4e211\",\n\t\t\t\t\t}},\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t},\n\t\t\t\t\tArchiveDigests: []syftFile.Digest{{\n\t\t\t\t\t\tAlgorithm: \"sha1\",\n\t\t\t\t\t\tValue:     \"236e3bfdbdc6c86629237a74f0f11414adb4e211\",\n\t\t\t\t\t}},\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/package_test.go"
                },
                "region": {
                  "startLine": 902,
                  "startColumn": 36,
                  "endLine": 902,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\t\texpectedPackages: []string{\"python:otherlib@1.2.3\", \"python:urllib3@1.2.3\"},\n\t\t},\n\t\t{\n\t\t\tname: \"python bindings for system RPM install\",\n\t\t\tsbom: withDistro(catalogWithOverlaps(\n\t\t\t\t[]string{\"rpm:python3-rpm@4.14.3-26.el8\", \"python:rpm@4.14.3\"},\n\t\t\t\t[]string{\"rpm:python3-rpm@4.14.3-26.el8 -> python:rpm@4.14.3\"}), \"rhel\"),\n",
                    "rendered": {
                      "text": "\t\t\texpectedPackages: []string{\"python:otherlib@1.2.3\", \"python:urllib3@1.2.3\"},\n\t\t},\n\t\t{\n\t\t\tname: \"python bindings for system RPM install\",\n\t\t\tsbom: withDistro(catalogWithOverlaps(\n\t\t\t\t[]string{\"rpm:python3-rpm@4.14.3-26.el8\", \"python:rpm@4.14.3\"},\n\t\t\t\t[]string{\"rpm:python3-rpm@4.14.3-26.el8 -> python:rpm@4.14.3\"}), \"rhel\"),\n",
                      "markdown": "`\t\t\texpectedPackages: []string{\"python:otherlib@1.2.3\", \"python:urllib3@1.2.3\"},\n\t\t},\n\t\t{\n\t\t\tname: \"python bindings for system RPM install\",\n\t\t\tsbom: withDistro(catalogWithOverlaps(\n\t\t\t\t[]string{\"rpm:python3-rpm@4.14.3-26.el8\", \"python:rpm@4.14.3\"},\n\t\t\t\t[]string{\"rpm:python3-rpm@4.14.3-26.el8 -> python:rpm@4.14.3\"}), \"rhel\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/pkg/package.go"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 30,
                  "endLine": 285,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t\t})\n\t\t}\n\t} else {\n\t\tlog.Warnf(\"unable to extract DPKG metadata for %s\", p)\n\t}\n\treturn upstreams\n}\n",
                    "rendered": {
                      "text": "\t\t\t})\n\t\t}\n\t} else {\n\t\tlog.Warnf(\"unable to extract DPKG metadata for %s\", p)\n\t}\n\treturn upstreams\n}\n",
                      "markdown": "`\t\t\t})\n\t\t}\n\t} else {\n\t\tlog.Warnf(\"unable to extract DPKG metadata for %s\", p)\n\t}\n\treturn upstreams\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/grypeerr/errors.go"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 71,
                  "endLine": 5,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\nvar (\n\t// ErrAboveSeverityThreshold indicates when a vulnerability severity is discovered that is above the given --fail-on severity value\n\tErrAboveSeverityThreshold = NewExpectedErr(\"discovered vulnerabilities at or above the severity threshold\")\n)\n",
                    "rendered": {
                      "text": "\nvar (\n\t// ErrAboveSeverityThreshold indicates when a vulnerability severity is discovered that is above the given --fail-on severity value\n\tErrAboveSeverityThreshold = NewExpectedErr(\"discovered vulnerabilities at or above the severity threshold\")\n)\n",
                      "markdown": "`\nvar (\n\t// ErrAboveSeverityThreshold indicates when a vulnerability severity is discovered that is above the given --fail-on severity value\n\tErrAboveSeverityThreshold = NewExpectedErr(\"discovered vulnerabilities at or above the severity threshold\")\n)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/stereoscope-fixture-image-simple.golden/repositories"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 104,
                  "endLine": 1,
                  "endColumn": 170,
                  "snippet": {
                    "text": "{\"stereoscope-fixture-image-simple\":{\"04e16e44161c8888a1a963720fd0443cbf7eef8101434c431de8725cd98cc9f7\":\"37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2\"}}\n",
                    "rendered": {
                      "text": "{\"stereoscope-fixture-image-simple\":{\"04e16e44161c8888a1a963720fd0443cbf7eef8101434c431de8725cd98cc9f7\":\"37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2\"}}\n",
                      "markdown": "`{\"stereoscope-fixture-image-simple\":{\"04e16e44161c8888a1a963720fd0443cbf7eef8101434c431de8725cd98cc9f7\":\"37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2\"}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/stereoscope-fixture-image-simple.golden/repositories"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 37,
                  "endLine": 1,
                  "endColumn": 103,
                  "snippet": {
                    "text": "{\"stereoscope-fixture-image-simple\":{\"04e16e44161c8888a1a963720fd0443cbf7eef8101434c431de8725cd98cc9f7\":\"37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2\"}}\n",
                    "rendered": {
                      "text": "{\"stereoscope-fixture-image-simple\":{\"04e16e44161c8888a1a963720fd0443cbf7eef8101434c431de8725cd98cc9f7\":\"37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2\"}}\n",
                      "markdown": "`{\"stereoscope-fixture-image-simple\":{\"04e16e44161c8888a1a963720fd0443cbf7eef8101434c431de8725cd98cc9f7\":\"37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2\"}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/stereoscope-fixture-image-simple.golden/ac24170b80ea83e474d7dda9000b6ab312c6b8bf4cfc5b423f753607d299a498/json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 6,
                  "endLine": 1,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\"id\":\"ac24170b80ea83e474d7dda9000b6ab312c6b8bf4cfc5b423f753607d299a498\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}",
                    "rendered": {
                      "text": "{\"id\":\"ac24170b80ea83e474d7dda9000b6ab312c6b8bf4cfc5b423f753607d299a498\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}",
                      "markdown": "`{\"id\":\"ac24170b80ea83e474d7dda9000b6ab312c6b8bf4cfc5b423f753607d299a498\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/stereoscope-fixture-image-simple.golden/4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf/json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 82,
                  "endLine": 1,
                  "endColumn": 148,
                  "snippet": {
                    "text": "{\"id\":\"4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf\",\"parent\":\"ac24170b80ea83e474d7dda9000b6ab312c6b8bf4cfc5b423f753607d299a498\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}",
                    "rendered": {
                      "text": "{\"id\":\"4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf\",\"parent\":\"ac24170b80ea83e474d7dda9000b6ab312c6b8bf4cfc5b423f753607d299a498\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}",
                      "markdown": "`{\"id\":\"4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf\",\"parent\":\"ac24170b80ea83e474d7dda9000b6ab312c6b8bf4cfc5b423f753607d299a498\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/stereoscope-fixture-image-simple.golden/4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf/json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 6,
                  "endLine": 1,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\"id\":\"4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf\",\"parent\":\"ac24170b80ea83e474d7dda9000b6ab312c6b8bf4cfc5b423f753607d299a498\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}",
                    "rendered": {
                      "text": "{\"id\":\"4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf\",\"parent\":\"ac24170b80ea83e474d7dda9000b6ab312c6b8bf4cfc5b423f753607d299a498\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}",
                      "markdown": "`{\"id\":\"4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf\",\"parent\":\"ac24170b80ea83e474d7dda9000b6ab312c6b8bf4cfc5b423f753607d299a498\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/stereoscope-fixture-image-simple.golden/37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2/json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 82,
                  "endLine": 1,
                  "endColumn": 148,
                  "snippet": {
                    "text": "{\"id\":\"37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2\",\"parent\":\"4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf\",\"created\":\"2022-09-12T15:44:57.298927919Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnB",
                    "rendered": {
                      "text": "{\"id\":\"37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2\",\"parent\":\"4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf\",\"created\":\"2022-09-12T15:44:57.298927919Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnB",
                      "markdown": "`{\"id\":\"37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2\",\"parent\":\"4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf\",\"created\":\"2022-09-12T15:44:57.298927919Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnB`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/stereoscope-fixture-image-simple.golden/37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2/json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 6,
                  "endLine": 1,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\"id\":\"37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2\",\"parent\":\"4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf\",\"created\":\"2022-09-12T15:44:57.298927919Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null",
                    "rendered": {
                      "text": "{\"id\":\"37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2\",\"parent\":\"4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf\",\"created\":\"2022-09-12T15:44:57.298927919Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null",
                      "markdown": "`{\"id\":\"37799d0374a5e46801111d59ea34ecc5c79b75301f4f5f9c6ef07247b69059f2\",\"parent\":\"4db008647e6e23f0c17e73a84a6622c48deac5866eec42b46828d65f0496e2bf\",\"created\":\"2022-09-12T15:44:57.298927919Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/anchore-fixture-image-simple.golden/repositories"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 100,
                  "endLine": 1,
                  "endColumn": 166,
                  "snippet": {
                    "text": "{\"anchore-fixture-image-simple\":{\"04e16e44161c8888a1a963720fd0443cbf7eef8101434c431de8725cd98cc9f7\":\"8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e\"}}\n",
                    "rendered": {
                      "text": "{\"anchore-fixture-image-simple\":{\"04e16e44161c8888a1a963720fd0443cbf7eef8101434c431de8725cd98cc9f7\":\"8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e\"}}\n",
                      "markdown": "`{\"anchore-fixture-image-simple\":{\"04e16e44161c8888a1a963720fd0443cbf7eef8101434c431de8725cd98cc9f7\":\"8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e\"}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/anchore-fixture-image-simple.golden/repositories"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 33,
                  "endLine": 1,
                  "endColumn": 99,
                  "snippet": {
                    "text": "{\"anchore-fixture-image-simple\":{\"04e16e44161c8888a1a963720fd0443cbf7eef8101434c431de8725cd98cc9f7\":\"8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e\"}}\n",
                    "rendered": {
                      "text": "{\"anchore-fixture-image-simple\":{\"04e16e44161c8888a1a963720fd0443cbf7eef8101434c431de8725cd98cc9f7\":\"8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e\"}}\n",
                      "markdown": "`{\"anchore-fixture-image-simple\":{\"04e16e44161c8888a1a963720fd0443cbf7eef8101434c431de8725cd98cc9f7\":\"8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e\"}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/anchore-fixture-image-simple.golden/bd11f1dee2b5665ac04f1c43ba8b0a7ea90790858baaf3c2841a724a48325b9a/json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 6,
                  "endLine": 1,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\"id\":\"bd11f1dee2b5665ac04f1c43ba8b0a7ea90790858baaf3c2841a724a48325b9a\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}",
                    "rendered": {
                      "text": "{\"id\":\"bd11f1dee2b5665ac04f1c43ba8b0a7ea90790858baaf3c2841a724a48325b9a\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}",
                      "markdown": "`{\"id\":\"bd11f1dee2b5665ac04f1c43ba8b0a7ea90790858baaf3c2841a724a48325b9a\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/anchore-fixture-image-simple.golden/8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e/json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 82,
                  "endLine": 1,
                  "endColumn": 148,
                  "snippet": {
                    "text": "{\"id\":\"8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e\",\"parent\":\"08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9\",\"created\":\"2020-09-23T11:52:43.1246668Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin",
                    "rendered": {
                      "text": "{\"id\":\"8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e\",\"parent\":\"08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9\",\"created\":\"2020-09-23T11:52:43.1246668Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin",
                      "markdown": "`{\"id\":\"8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e\",\"parent\":\"08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9\",\"created\":\"2020-09-23T11:52:43.1246668Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/anchore-fixture-image-simple.golden/8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e/json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 6,
                  "endLine": 1,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\"id\":\"8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e\",\"parent\":\"08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9\",\"created\":\"2020-09-23T11:52:43.1246668Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH",
                    "rendered": {
                      "text": "{\"id\":\"8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e\",\"parent\":\"08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9\",\"created\":\"2020-09-23T11:52:43.1246668Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH",
                      "markdown": "`{\"id\":\"8024d88a5b1d2639c2423f1d7086e66e4d18dc87261dc032ea311982a0b81a9e\",\"parent\":\"08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9\",\"created\":\"2020-09-23T11:52:43.1246668Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/anchore-fixture-image-simple.golden/08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9/json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 82,
                  "endLine": 1,
                  "endColumn": 148,
                  "snippet": {
                    "text": "{\"id\":\"08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9\",\"parent\":\"bd11f1dee2b5665ac04f1c43ba8b0a7ea90790858baaf3c2841a724a48325b9a\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}",
                    "rendered": {
                      "text": "{\"id\":\"08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9\",\"parent\":\"bd11f1dee2b5665ac04f1c43ba8b0a7ea90790858baaf3c2841a724a48325b9a\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}",
                      "markdown": "`{\"id\":\"08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9\",\"parent\":\"bd11f1dee2b5665ac04f1c43ba8b0a7ea90790858baaf3c2841a724a48325b9a\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/snapshot/anchore-fixture-image-simple.golden/08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9/json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 6,
                  "endLine": 1,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\"id\":\"08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9\",\"parent\":\"bd11f1dee2b5665ac04f1c43ba8b0a7ea90790858baaf3c2841a724a48325b9a\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}",
                    "rendered": {
                      "text": "{\"id\":\"08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9\",\"parent\":\"bd11f1dee2b5665ac04f1c43ba8b0a7ea90790858baaf3c2841a724a48325b9a\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}",
                      "markdown": "`{\"id\":\"08a9495c0a4808650b6d7ae5876f8a13058fdcf8a6d66d4688f46dc7370330e9\",\"parent\":\"bd11f1dee2b5665ac04f1c43ba8b0a7ea90790858baaf3c2841a724a48325b9a\",\"created\":\"1970-01-01T00:00:00Z\",\"container_config\":{\"Hostname\":\"\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"os\":\"linux\"}`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-debian-match-coverage/javascript/pkg-json/package.json"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 71,
                  "endLine": 65,
                  "endColumn": 76,
                  "snippet": {
                    "text": "  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n    \"tap\": \"tap -J --timeout 300 --no-esm\",\n    \"tap-cover\": \"tap -J --nyc-arg=--cache --coverage --timeout 600 --no-esm\",\n",
                    "rendered": {
                      "text": "  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n    \"tap\": \"tap -J --timeout 300 --no-esm\",\n    \"tap-cover\": \"tap -J --nyc-arg=--cache --coverage --timeout 600 --no-esm\",\n",
                      "markdown": "`  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n    \"tap\": \"tap -J --timeout 300 --no-esm\",\n    \"tap-cover\": \"tap -J --nyc-arg=--cache --coverage --timeout 600 --no-esm\",\n`"
                    }
                  },
                  "sourceLanguage": "package.json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-debian-match-coverage/javascript/pkg-json/package.json"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 52,
                  "endLine": 65,
                  "endColumn": 57,
                  "snippet": {
                    "text": "  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n    \"tap\": \"tap -J --timeout 300 --no-esm\",\n    \"tap-cover\": \"tap -J --nyc-arg=--cache --coverage --timeout 600 --no-esm\",\n",
                    "rendered": {
                      "text": "  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n    \"tap\": \"tap -J --timeout 300 --no-esm\",\n    \"tap-cover\": \"tap -J --nyc-arg=--cache --coverage --timeout 600 --no-esm\",\n",
                      "markdown": "`  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n    \"tap\": \"tap -J --timeout 300 --no-esm\",\n    \"tap-cover\": \"tap -J --nyc-arg=--cache --coverage --timeout 600 --no-esm\",\n`"
                    }
                  },
                  "sourceLanguage": "package.json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-debian-match-coverage/javascript/pkg-json/package.json"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 46,
                  "endLine": 64,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  },\n  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n    \"tap\": \"tap -J --timeout 300 --no-esm\",\n",
                    "rendered": {
                      "text": "  },\n  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n    \"tap\": \"tap -J --timeout 300 --no-esm\",\n",
                      "markdown": "`  },\n  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n    \"tap\": \"tap -J --timeout 300 --no-esm\",\n`"
                    }
                  },
                  "sourceLanguage": "package.json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-debian-match-coverage/javascript/pkg-json/package.json"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 33,
                  "endLine": 63,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    \"tar-stream\": \"^2.1.0\"\n  },\n  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n",
                    "rendered": {
                      "text": "    \"tar-stream\": \"^2.1.0\"\n  },\n  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n",
                      "markdown": "`    \"tar-stream\": \"^2.1.0\"\n  },\n  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n`"
                    }
                  },
                  "sourceLanguage": "package.json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/test-fixtures/image-debian-match-coverage/javascript/pkg-json/package.json"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 22,
                  "endLine": 63,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    \"tar-stream\": \"^2.1.0\"\n  },\n  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n",
                    "rendered": {
                      "text": "    \"tar-stream\": \"^2.1.0\"\n  },\n  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n",
                      "markdown": "`    \"tar-stream\": \"^2.1.0\"\n  },\n  \"scripts\": {\n    \"dumpconf\": \"env | grep npm | sort | uniq\",\n    \"prepare\": \"node bin/npm-cli.js rebuild && node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf test/*/*/node_modules && make -j4 mandocs\",\n    \"preversion\": \"bash scripts/update-authors.sh && git add AUTHORS && git commit -m \\\"update AUTHORS\\\" || true\",\n    \"licenses\": \"licensee --production --errors-only\",\n`"
                    }
                  },
                  "sourceLanguage": "package.json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/diff_test.go"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 3,
                  "endLine": 7,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\"flag\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for diff presenter\")\n\nconst (\n\tbaseURL   = \"https://toolbox-data.anchore.io/grype/staging-databases/vulnerability-db_v5_2022-10-14T08:22:01Z_69c99aa5917dea969f2d.tar.gz\"\n",
                    "rendered": {
                      "text": "\t\"flag\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for diff presenter\")\n\nconst (\n\tbaseURL   = \"https://toolbox-data.anchore.io/grype/staging-databases/vulnerability-db_v5_2022-10-14T08:22:01Z_69c99aa5917dea969f2d.tar.gz\"\n",
                      "markdown": "`\t\"flag\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for diff presenter\")\n\nconst (\n\tbaseURL   = \"https://toolbox-data.anchore.io/grype/staging-databases/vulnerability-db_v5_2022-10-14T08:22:01Z_69c99aa5917dea969f2d.tar.gz\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/diff_test.go"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 70,
                  "endLine": 7,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\t\"flag\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for diff presenter\")\n\nconst (\n\tbaseURL   = \"https://toolbox-data.anchore.io/grype/staging-databases/vulnerability-db_v5_2022-10-14T08:22:01Z_69c99aa5917dea969f2d.tar.gz\"\n",
                    "rendered": {
                      "text": "\t\"flag\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for diff presenter\")\n\nconst (\n\tbaseURL   = \"https://toolbox-data.anchore.io/grype/staging-databases/vulnerability-db_v5_2022-10-14T08:22:01Z_69c99aa5917dea969f2d.tar.gz\"\n",
                      "markdown": "`\t\"flag\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for diff presenter\")\n\nconst (\n\tbaseURL   = \"https://toolbox-data.anchore.io/grype/staging-databases/vulnerability-db_v5_2022-10-14T08:22:01Z_69c99aa5917dea969f2d.tar.gz\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/utils_test.go"
                },
                "region": {
                  "startLine": 60,
                  "endLine": 60,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\t\"copy\", \"--override-os\", \"linux\", sourceImage, destinationString,\n\t}\n\n\tcmd := exec.Command(skopeoPath, skopeoCommand...)\n\n\tout, err := cmd.Output()\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\t\t\"copy\", \"--override-os\", \"linux\", sourceImage, destinationString,\n\t}\n\n\tcmd := exec.Command(skopeoPath, skopeoCommand...)\n\n\tout, err := cmd.Output()\n\tif err != nil {\n",
                      "markdown": "`\t\t\"copy\", \"--override-os\", \"linux\", sourceImage, destinationString,\n\t}\n\n\tcmd := exec.Command(skopeoPath, skopeoCommand...)\n\n\tout, err := cmd.Output()\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/utils_test.go"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 53,
                  "endLine": 42,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\timageArchivePath := filepath.Join(cacheDirectory, archiveFileName)\n\n\tif _, err := os.Stat(imageArchivePath); os.IsNotExist(err) {\n\t\tt.Logf(\"Cache miss for image %s; copying to archive at %s\", imageName, imageArchivePath)\n\t\tsaveImage(t, imageName, imageArchivePath)\n\t}\n\n",
                    "rendered": {
                      "text": "\timageArchivePath := filepath.Join(cacheDirectory, archiveFileName)\n\n\tif _, err := os.Stat(imageArchivePath); os.IsNotExist(err) {\n\t\tt.Logf(\"Cache miss for image %s; copying to archive at %s\", imageName, imageArchivePath)\n\t\tsaveImage(t, imageName, imageArchivePath)\n\t}\n\n",
                      "markdown": "`\timageArchivePath := filepath.Join(cacheDirectory, archiveFileName)\n\n\tif _, err := os.Stat(imageArchivePath); os.IsNotExist(err) {\n\t\tt.Logf(\"Cache miss for image %s; copying to archive at %s\", imageName, imageArchivePath)\n\t\tsaveImage(t, imageName, imageArchivePath)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/integration/utils_test.go"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 22,
                  "endLine": 110,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\ttb.Helper()\n\troot, err := exec.Command(\"git\", \"rev-parse\", \"--show-toplevel\").Output()\n\tif err != nil {\n\t\ttb.Fatalf(\"unable to find repo root dir: %+v\", err)\n\t}\n\tabsRepoRoot, err := filepath.Abs(strings.TrimSpace(string(root)))\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\ttb.Helper()\n\troot, err := exec.Command(\"git\", \"rev-parse\", \"--show-toplevel\").Output()\n\tif err != nil {\n\t\ttb.Fatalf(\"unable to find repo root dir: %+v\", err)\n\t}\n\tabsRepoRoot, err := filepath.Abs(strings.TrimSpace(string(root)))\n\tif err != nil {\n",
                      "markdown": "`\ttb.Helper()\n\troot, err := exec.Command(\"git\", \"rev-parse\", \"--show-toplevel\").Output()\n\tif err != nil {\n\t\ttb.Fatalf(\"unable to find repo root dir: %+v\", err)\n\t}\n\tabsRepoRoot, err := filepath.Abs(strings.TrimSpace(string(root)))\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/test-ignore-reason/sbom.json"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 16,
                  "endLine": 83,
                  "endColumn": 2010,
                  "snippet": {
                    "text": "gewogICAgICAgICAibWVkaWFUeXBlIjogImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLAogICAgICAgICAic2l6ZSI6IDgxNTQwMCwKICAgICAgICAgImRpZ2VzdCI6ICJzaGEyNTY6ZmQ0NDAxNmUzZDNlZGI4ZDFkOGIxYTMzNTdmNzcwOGE4Mzg4ZTQ2MjI1MDBkMzZmZGUzYThjZGZiMjNmYmFjOCIKICAgICAgfQogICBdCn0=\",\n      \"config\": \"eyJhcmNoaXRlY3R1cmUiOiJhcm02NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iXSwiQ21kIjpbInNoIl0sIkFyZ3NFc2NhcGVkIjp0cnVlLCJJbWFnZSI6InNoYTI1NjpmNDFmZmIxYWI1MWNhMDg3YzdkN2E3MWM5NDUzMGNmOWM4MjFkZDM3Zjc2ZGU0NjY2NTZmNjM1NDE0NGQzYmQyIiwiVm9sdW1lcyI6bnVsbCwiV29ya2luZ0RpciI6IiIsIkVudHJ5cG9pbnQiOm51bGwsIk9uQnVpbGQiOm51bGwsIkxhYmVscyI6bnVsbH0sImNvbnRhaW5lciI6IjBlY2U0NzFlM2MyMGFmYTQyYWM2ZTRhNzBlYTc0MDFmM2ViNGNiNzUzZmQ0MzYyZDA3ZDNmNWI1ZjFlODhhZDEiLCJjb250YWluZXJfY29uZmlnIjp7Ikhvc3RuYW1lIjoiMGVjZTQ3MWUzYzIwIiwiRG9tYWlubmFtZSI6IiIsIlVzZXIiOiIiLCJBdHRhY2hTdGRpbiI6ZmFsc2UsIkF0dGFjaFN0ZG91dCI6ZmFsc2UsIkF0dGFjaFN0ZGVyciI6ZmFsc2UsIlR0eSI6ZmFsc2UsIk9wZW5TdGRpbiI6ZmFsc2UsIlN0ZGluT25jZSI6ZmFsc2UsIkVudiI6WyJQQVRIPS91c3IvbG9jYWwvc2JpbjovdXNyL2xvY2FsL2JpbjovdXNyL3NiaW46L3Vzci9iaW46L3NiaW46L2JpbiJdLCJDbWQiOlsiL2Jpbi9zaCIsIi1jIiwiIyhub3ApICIsIkNNRCBbXCJzaFwiXSJdLCJBcmdzRXNjYXBlZCI6dHJ1ZSwiSW1hZ2UiOiJzaGEyNTY6ZjQxZmZiMWFiNTFjYTA4N2M3ZDdhNzFjOTQ1MzBjZjljODIxZGQzN2Y3NmRlNDY2NjU2ZjYzNTQxNDRkM2JkMiIsIlZvbHVtZXMiOm51bGwsIldvcmtpbmdEaXIiOiIiLCJFbnRyeXBvaW50IjpudWxsLCJPbkJ1aWxkIjpudWxsLCJMYWJlbHMiOnt9fSwiY3JlYXRlZCI6IjIwMjAtMDYtMDJUMjE6Mzk6NDUuMzc0Mjg5MDQxWiIsImRvY2tlcl92ZXJzaW9uIjoiMTguMDkuNyIsImhpc3RvcnkiOlt7ImNyZWF0ZWQiOiIyMDIwLTA2LTAyVDIxOjM5OjQ0LjUzMDIwOTg5MVoiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyAjKG5vcCkgQUREIGZpbGU6MDdkOTQ2NmVkMWExMDkxNmY0ODIzZGI2OWY0YzU4NDg0Y2U3MDIyMWMzYzk0YTBmMmE4MDRmNTM3MWE2Mjc2NSBpbiAvICJ9LHsiY3JlYXRlZCI6IjIwMjAtMDYtMDJUMjE6Mzk6NDUuMzc0Mjg5MDQxWiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSAgQ01EIFtcInNoXCJdIiwiZW1wdHlfbGF5ZXIiOnRydWV9XSwib3MiOiJsaW51eCIsInJvb3RmcyI6eyJ0eXBlIjoibGF5ZXJzIiwiZGlmZl9pZHMiOlsic2hhMjU2OjdjZTM3ODQ0Y2E3NTYwMGRiY2JlMDg1ODU4ODQ1YzViOTJiNjEwOWRiM2M4YzFhZTZlYjg4N2FhYjkxYWQwNGYiXX19\",\n      \"repoDigests\": [\n        \"index.docker.io/library/busybox@sha256:95cf004f559831017cdf4628aaf1bb30133677be8702a8c5f2994629f637a209\"\n      ],\n      \"architecture\": \"arm64\",\n      \"os\": \"linux\"\n    }\n  },\n  \"distro\": {\n    \"prettyName\": \"BusyBox v1.31.1\",\n    \"name\": \"busybox\",\n    \"id\": \"busyb",
                    "rendered": {
                      "text": "gewogICAgICAgICAibWVkaWFUeXBlIjogImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLAogICAgICAgICAic2l6ZSI6IDgxNTQwMCwKICAgICAgICAgImRpZ2VzdCI6ICJzaGEyNTY6ZmQ0NDAxNmUzZDNlZGI4ZDFkOGIxYTMzNTdmNzcwOGE4Mzg4ZTQ2MjI1MDBkMzZmZGUzYThjZGZiMjNmYmFjOCIKICAgICAgfQogICBdCn0=\",\n      \"config\": \"eyJhcmNoaXRlY3R1cmUiOiJhcm02NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iXSwiQ21kIjpbInNoIl0sIkFyZ3NFc2NhcGVkIjp0cnVlLCJJbWFnZSI6InNoYTI1NjpmNDFmZmIxYWI1MWNhMDg3YzdkN2E3MWM5NDUzMGNmOWM4MjFkZDM3Zjc2ZGU0NjY2NTZmNjM1NDE0NGQzYmQyIiwiVm9sdW1lcyI6bnVsbCwiV29ya2luZ0RpciI6IiIsIkVudHJ5cG9pbnQiOm51bGwsIk9uQnVpbGQiOm51bGwsIkxhYmVscyI6bnVsbH0sImNvbnRhaW5lciI6IjBlY2U0NzFlM2MyMGFmYTQyYWM2ZTRhNzBlYTc0MDFmM2ViNGNiNzUzZmQ0MzYyZDA3ZDNmNWI1ZjFlODhhZDEiLCJjb250YWluZXJfY29uZmlnIjp7Ikhvc3RuYW1lIjoiMGVjZTQ3MWUzYzIwIiwiRG9tYWlubmFtZSI6IiIsIlVzZXIiOiIiLCJBdHRhY2hTdGRpbiI6ZmFsc2UsIkF0dGFjaFN0ZG91dCI6ZmFsc2UsIkF0dGFjaFN0ZGVyciI6ZmFsc2UsIlR0eSI6ZmFsc2UsIk9wZW5TdGRpbiI6ZmFsc2UsIlN0ZGluT25jZSI6ZmFsc2UsIkVudiI6WyJQQVRIPS91c3IvbG9jYWwvc2JpbjovdXNyL2xvY2FsL2JpbjovdXNyL3NiaW46L3Vzci9iaW46L3NiaW46L2JpbiJdLCJDbWQiOlsiL2Jpbi9zaCIsIi1jIiwiIyhub3ApICIsIkNNRCBbXCJzaFwiXSJdLCJBcmdzRXNjYXBlZCI6dHJ1ZSwiSW1hZ2UiOiJzaGEyNTY6ZjQxZmZiMWFiNTFjYTA4N2M3ZDdhNzFjOTQ1MzBjZjljODIxZGQzN2Y3NmRlNDY2NjU2ZjYzNTQxNDRkM2JkMiIsIlZvbHVtZXMiOm51bGwsIldvcmtpbmdEaXIiOiIiLCJFbnRyeXBvaW50IjpudWxsLCJPbkJ1aWxkIjpudWxsLCJMYWJlbHMiOnt9fSwiY3JlYXRlZCI6IjIwMjAtMDYtMDJUMjE6Mzk6NDUuMzc0Mjg5MDQxWiIsImRvY2tlcl92ZXJzaW9uIjoiMTguMDkuNyIsImhpc3RvcnkiOlt7ImNyZWF0ZWQiOiIyMDIwLTA2LTAyVDIxOjM5OjQ0LjUzMDIwOTg5MVoiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyAjKG5vcCkgQUREIGZpbGU6MDdkOTQ2NmVkMWExMDkxNmY0ODIzZGI2OWY0YzU4NDg0Y2U3MDIyMWMzYzk0YTBmMmE4MDRmNTM3MWE2Mjc2NSBpbiAvICJ9LHsiY3JlYXRlZCI6IjIwMjAtMDYtMDJUMjE6Mzk6NDUuMzc0Mjg5MDQxWiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSAgQ01EIFtcInNoXCJdIiwiZW1wdHlfbGF5ZXIiOnRydWV9XSwib3MiOiJsaW51eCIsInJvb3RmcyI6eyJ0eXBlIjoibGF5ZXJzIiwiZGlmZl9pZHMiOlsic2hhMjU2OjdjZTM3ODQ0Y2E3NTYwMGRiY2JlMDg1ODU4ODQ1YzViOTJiNjEwOWRiM2M4YzFhZTZlYjg4N2FhYjkxYWQwNGYiXX19\",\n      \"repoDigests\": [\n        \"index.docker.io/library/busybox@sha256:95cf004f559831017cdf4628aaf1bb30133677be8702a8c5f2994629f637a209\"\n      ],\n      \"architecture\": \"arm64\",\n      \"os\": \"linux\"\n    }\n  },\n  \"distro\": {\n    \"prettyName\": \"BusyBox v1.31.1\",\n    \"name\": \"busybox\",\n    \"id\": \"busyb",
                      "markdown": "`gewogICAgICAgICAibWVkaWFUeXBlIjogImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLAogICAgICAgICAic2l6ZSI6IDgxNTQwMCwKICAgICAgICAgImRpZ2VzdCI6ICJzaGEyNTY6ZmQ0NDAxNmUzZDNlZGI4ZDFkOGIxYTMzNTdmNzcwOGE4Mzg4ZTQ2MjI1MDBkMzZmZGUzYThjZGZiMjNmYmFjOCIKICAgICAgfQogICBdCn0=\",\n      \"config\": \"eyJhcmNoaXRlY3R1cmUiOiJhcm02NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iXSwiQ21kIjpbInNoIl0sIkFyZ3NFc2NhcGVkIjp0cnVlLCJJbWFnZSI6InNoYTI1NjpmNDFmZmIxYWI1MWNhMDg3YzdkN2E3MWM5NDUzMGNmOWM4MjFkZDM3Zjc2ZGU0NjY2NTZmNjM1NDE0NGQzYmQyIiwiVm9sdW1lcyI6bnVsbCwiV29ya2luZ0RpciI6IiIsIkVudHJ5cG9pbnQiOm51bGwsIk9uQnVpbGQiOm51bGwsIkxhYmVscyI6bnVsbH0sImNvbnRhaW5lciI6IjBlY2U0NzFlM2MyMGFmYTQyYWM2ZTRhNzBlYTc0MDFmM2ViNGNiNzUzZmQ0MzYyZDA3ZDNmNWI1ZjFlODhhZDEiLCJjb250YWluZXJfY29uZmlnIjp7Ikhvc3RuYW1lIjoiMGVjZTQ3MWUzYzIwIiwiRG9tYWlubmFtZSI6IiIsIlVzZXIiOiIiLCJBdHRhY2hTdGRpbiI6ZmFsc2UsIkF0dGFjaFN0ZG91dCI6ZmFsc2UsIkF0dGFjaFN0ZGVyciI6ZmFsc2UsIlR0eSI6ZmFsc2UsIk9wZW5TdGRpbiI6ZmFsc2UsIlN0ZGluT25jZSI6ZmFsc2UsIkVudiI6WyJQQVRIPS91c3IvbG9jYWwvc2JpbjovdXNyL2xvY2FsL2JpbjovdXNyL3NiaW46L3Vzci9iaW46L3NiaW46L2JpbiJdLCJDbWQiOlsiL2Jpbi9zaCIsIi1jIiwiIyhub3ApICIsIkNNRCBbXCJzaFwiXSJdLCJBcmdzRXNjYXBlZCI6dHJ1ZSwiSW1hZ2UiOiJzaGEyNTY6ZjQxZmZiMWFiNTFjYTA4N2M3ZDdhNzFjOTQ1MzBjZjljODIxZGQzN2Y3NmRlNDY2NjU2ZjYzNTQxNDRkM2JkMiIsIlZvbHVtZXMiOm51bGwsIldvcmtpbmdEaXIiOiIiLCJFbnRyeXBvaW50IjpudWxsLCJPbkJ1aWxkIjpudWxsLCJMYWJlbHMiOnt9fSwiY3JlYXRlZCI6IjIwMjAtMDYtMDJUMjE6Mzk6NDUuMzc0Mjg5MDQxWiIsImRvY2tlcl92ZXJzaW9uIjoiMTguMDkuNyIsImhpc3RvcnkiOlt7ImNyZWF0ZWQiOiIyMDIwLTA2LTAyVDIxOjM5OjQ0LjUzMDIwOTg5MVoiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyAjKG5vcCkgQUREIGZpbGU6MDdkOTQ2NmVkMWExMDkxNmY0ODIzZGI2OWY0YzU4NDg0Y2U3MDIyMWMzYzk0YTBmMmE4MDRmNTM3MWE2Mjc2NSBpbiAvICJ9LHsiY3JlYXRlZCI6IjIwMjAtMDYtMDJUMjE6Mzk6NDUuMzc0Mjg5MDQxWiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSAgQ01EIFtcInNoXCJdIiwiZW1wdHlfbGF5ZXIiOnRydWV9XSwib3MiOiJsaW51eCIsInJvb3RmcyI6eyJ0eXBlIjoibGF5ZXJzIiwiZGlmZl9pZHMiOlsic2hhMjU2OjdjZTM3ODQ0Y2E3NTYwMGRiY2JlMDg1ODU4ODQ1YzViOTJiNjEwOWRiM2M4YzFhZTZlYjg4N2FhYjkxYWQwNGYiXX19\",\n      \"repoDigests\": [\n        \"index.docker.io/library/busybox@sha256:95cf004f559831017cdf4628aaf1bb30133677be8702a8c5f2994629f637a209\"\n      ],\n      \"architecture\": \"arm64\",\n      \"os\": \"linux\"\n    }\n  },\n  \"distro\": {\n    \"prettyName\": \"BusyBox v1.31.1\",\n    \"name\": \"busybox\",\n    \"id\": \"busyb`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/test-ignore-reason/sbom.json"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 10,
                  "endLine": 64,
                  "endColumn": 76,
                  "snippet": {
                    "text": "    }\n  ],\n  \"source\": {\n    \"id\": \"1ee006886991ad4689838d3a288e0dd3fd29b70e276622f16b67a8922831a853\",\n    \"name\": \"busybox\",\n    \"version\": \"1.31\",\n    \"type\": \"image\",\n",
                    "rendered": {
                      "text": "    }\n  ],\n  \"source\": {\n    \"id\": \"1ee006886991ad4689838d3a288e0dd3fd29b70e276622f16b67a8922831a853\",\n    \"name\": \"busybox\",\n    \"version\": \"1.31\",\n    \"type\": \"image\",\n",
                      "markdown": "`    }\n  ],\n  \"source\": {\n    \"id\": \"1ee006886991ad4689838d3a288e0dd3fd29b70e276622f16b67a8922831a853\",\n    \"name\": \"busybox\",\n    \"version\": \"1.31\",\n    \"type\": \"image\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/test-ignore-reason/sbom.json"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 16,
                  "endLine": 44,
                  "endColumn": 82,
                  "snippet": {
                    "text": "  ],\n  \"artifactRelationships\": [\n    {\n      \"parent\": \"1ee006886991ad4689838d3a288e0dd3fd29b70e276622f16b67a8922831a853\",\n      \"child\": \"20a169629a73fdbd\",\n      \"type\": \"contains\"\n    },\n",
                    "rendered": {
                      "text": "  ],\n  \"artifactRelationships\": [\n    {\n      \"parent\": \"1ee006886991ad4689838d3a288e0dd3fd29b70e276622f16b67a8922831a853\",\n      \"child\": \"20a169629a73fdbd\",\n      \"type\": \"contains\"\n    },\n",
                      "markdown": "`  ],\n  \"artifactRelationships\": [\n    {\n      \"parent\": \"1ee006886991ad4689838d3a288e0dd3fd29b70e276622f16b67a8922831a853\",\n      \"child\": \"20a169629a73fdbd\",\n      \"type\": \"contains\"\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/actions/bootstrap/action.yaml"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 12,
                  "endLine": 66,
                  "snippet": {
                    "text": "\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n      shell: bash\n      run: make fingerprints\n",
                    "rendered": {
                      "text": "\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n      shell: bash\n      run: make fingerprints\n",
                      "markdown": "`\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n      shell: bash\n      run: make fingerprints\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/actions/bootstrap/action.yaml"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 47,
                  "endLine": 61,
                  "endColumn": 55,
                  "snippet": {
                    "text": "      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n",
                    "rendered": {
                      "text": "      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n",
                      "markdown": "`      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/actions/bootstrap/action.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 12,
                  "endLine": 60,
                  "snippet": {
                    "text": "\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n",
                    "rendered": {
                      "text": "\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n",
                      "markdown": "`\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/actions/bootstrap/action.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 12,
                  "endLine": 55,
                  "snippet": {
                    "text": "\n    - name: Install go dependencies\n      if: inputs.go-dependencies == 'true'\n      shell: bash\n      run: make ci-bootstrap-go\n\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n",
                    "rendered": {
                      "text": "\n    - name: Install go dependencies\n      if: inputs.go-dependencies == 'true'\n      shell: bash\n      run: make ci-bootstrap-go\n\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n",
                      "markdown": "`\n    - name: Install go dependencies\n      if: inputs.go-dependencies == 'true'\n      shell: bash\n      run: make ci-bootstrap-go\n\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/actions/bootstrap/action.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 12,
                  "endLine": 50,
                  "snippet": {
                    "text": "        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-tool-${{ hashFiles('.binny.yaml') }}\n\n    - name: Install project tools\n      shell: bash\n      run: make tools\n\n    - name: Install go dependencies\n      if: inputs.go-dependencies == 'true'\n",
                    "rendered": {
                      "text": "        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-tool-${{ hashFiles('.binny.yaml') }}\n\n    - name: Install project tools\n      shell: bash\n      run: make tools\n\n    - name: Install go dependencies\n      if: inputs.go-dependencies == 'true'\n",
                      "markdown": "`        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-tool-${{ hashFiles('.binny.yaml') }}\n\n    - name: Install project tools\n      shell: bash\n      run: make tools\n\n    - name: Install go dependencies\n      if: inputs.go-dependencies == 'true'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/actions/bootstrap/action.yaml"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 12,
                  "endLine": 66,
                  "snippet": {
                    "text": "\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n      shell: bash\n      run: make fingerprints\n",
                    "rendered": {
                      "text": "\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n      shell: bash\n      run: make fingerprints\n",
                      "markdown": "`\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n      shell: bash\n      run: make fingerprints\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/actions/bootstrap/action.yaml"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 65,
                  "endLine": 61,
                  "endColumn": 70,
                  "snippet": {
                    "text": "      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n",
                    "rendered": {
                      "text": "      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n",
                      "markdown": "`      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/actions/bootstrap/action.yaml"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 43,
                  "endLine": 61,
                  "endColumn": 48,
                  "snippet": {
                    "text": "      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n",
                    "rendered": {
                      "text": "      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n",
                      "markdown": "`      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n      if: inputs.compute-fingerprints == 'true'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/actions/bootstrap/action.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 12,
                  "endLine": 60,
                  "snippet": {
                    "text": "\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n",
                    "rendered": {
                      "text": "\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n",
                      "markdown": "`\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}\n\n    - name: Create all cache fingerprints\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/actions/bootstrap/action.yaml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 19,
                  "endLine": 57,
                  "endColumn": 24,
                  "snippet": {
                    "text": "      shell: bash\n      run: make ci-bootstrap-go\n\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n",
                    "rendered": {
                      "text": "      shell: bash\n      run: make ci-bootstrap-go\n\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n",
                      "markdown": "`      shell: bash\n      run: make ci-bootstrap-go\n\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n      shell: bash\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/actions/bootstrap/action.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 12,
                  "endLine": 55,
                  "snippet": {
                    "text": "\n    - name: Install go dependencies\n      if: inputs.go-dependencies == 'true'\n      shell: bash\n      run: make ci-bootstrap-go\n\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n",
                    "rendered": {
                      "text": "\n    - name: Install go dependencies\n      if: inputs.go-dependencies == 'true'\n      shell: bash\n      run: make ci-bootstrap-go\n\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n",
                      "markdown": "`\n    - name: Install go dependencies\n      if: inputs.go-dependencies == 'true'\n      shell: bash\n      run: make ci-bootstrap-go\n\n    - name: Install apt packages\n      if: inputs.bootstrap-apt-packages != ''\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/actions/bootstrap/action.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 12,
                  "endLine": 50,
                  "snippet": {
                    "text": "        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-tool-${{ hashFiles('.binny.yaml') }}\n\n    - name: Install project tools\n      shell: bash\n      run: make tools\n\n    - name: Install go dependencies\n      if: inputs.go-dependencies == 'true'\n",
                    "rendered": {
                      "text": "        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-tool-${{ hashFiles('.binny.yaml') }}\n\n    - name: Install project tools\n      shell: bash\n      run: make tools\n\n    - name: Install go dependencies\n      if: inputs.go-dependencies == 'true'\n",
                      "markdown": "`        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-tool-${{ hashFiles('.binny.yaml') }}\n\n    - name: Install project tools\n      shell: bash\n      run: make tools\n\n    - name: Install go dependencies\n      if: inputs.go-dependencies == 'true'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/ci-check.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nred=$(tput setaf 1)\nbold=$(tput bold)\nnormal=$(tput sgr0)\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nred=$(tput setaf 1)\nbold=$(tput bold)\nnormal=$(tput sgr0)\n",
                      "markdown": "`#!/usr/bin/env bash\n\nred=$(tput setaf 1)\nbold=$(tput bold)\nnormal=$(tput sgr0)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/ci-check.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nred=$(tput setaf 1)\nbold=$(tput bold)\nnormal=$(tput sgr0)\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nred=$(tput setaf 1)\nbold=$(tput bold)\nnormal=$(tput sgr0)\n",
                      "markdown": "`#!/usr/bin/env bash\n\nred=$(tput setaf 1)\nbold=$(tput bold)\nnormal=$(tput sgr0)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 119,
                  "endLine": 244,
                  "endColumn": 123,
                  "snippet": {
                    "text": "\ts390x) return 0 ;;\n\tamd64p32) return 0 ;;\n\tesac\n\tlog_crit \"uname_arch_check '$(uname -m)' got converted to '$arch' which is not a GOARCH value.  Please file bug report at https://github.com/client9/shlib\"\n\treturn 1\n}\nuntar() {\n",
                    "rendered": {
                      "text": "\ts390x) return 0 ;;\n\tamd64p32) return 0 ;;\n\tesac\n\tlog_crit \"uname_arch_check '$(uname -m)' got converted to '$arch' which is not a GOARCH value.  Please file bug report at https://github.com/client9/shlib\"\n\treturn 1\n}\nuntar() {\n",
                      "markdown": "`\ts390x) return 0 ;;\n\tamd64p32) return 0 ;;\n\tesac\n\tlog_crit \"uname_arch_check '$(uname -m)' got converted to '$arch' which is not a GOARCH value.  Please file bug report at https://github.com/client9/shlib\"\n\treturn 1\n}\nuntar() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 105,
                  "endLine": 223,
                  "endColumn": 109,
                  "snippet": {
                    "text": "\tsolaris) return 0 ;;\n\twindows) return 0 ;;\n\tesac\n\tlog_crit \"uname_os_check '$(uname -s)' got converted to '$os' which is not a GOOS value. Please file bug at https://github.com/client9/shlib\"\n\treturn 1\n}\nuname_arch_check() {\n",
                    "rendered": {
                      "text": "\tsolaris) return 0 ;;\n\twindows) return 0 ;;\n\tesac\n\tlog_crit \"uname_os_check '$(uname -s)' got converted to '$os' which is not a GOOS value. Please file bug at https://github.com/client9/shlib\"\n\treturn 1\n}\nuname_arch_check() {\n",
                      "markdown": "`\tsolaris) return 0 ;;\n\twindows) return 0 ;;\n\tesac\n\tlog_crit \"uname_os_check '$(uname -s)' got converted to '$os' which is not a GOOS value. Please file bug at https://github.com/client9/shlib\"\n\treturn 1\n}\nuname_arch_check() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 102,
                  "endLine": 78,
                  "endColumn": 106,
                  "snippet": {
                    "text": "\twindows/arm64) BINARIES=\"goreleaser\" ;;\n\twindows/armv6) BINARIES=\"goreleaser\" ;;\n\t*)\n\t\tlog_crit \"platform $PLATFORM is not supported.  Make sure this script is up-to-date and file request at https://github.com/${PREFIX}/issues/new\"\n\t\texit 1\n\t\t;;\n\tesac\n",
                    "rendered": {
                      "text": "\twindows/arm64) BINARIES=\"goreleaser\" ;;\n\twindows/armv6) BINARIES=\"goreleaser\" ;;\n\t*)\n\t\tlog_crit \"platform $PLATFORM is not supported.  Make sure this script is up-to-date and file request at https://github.com/${PREFIX}/issues/new\"\n\t\texit 1\n\t\t;;\n\tesac\n",
                      "markdown": "`\twindows/arm64) BINARIES=\"goreleaser\" ;;\n\twindows/armv6) BINARIES=\"goreleaser\" ;;\n\t*)\n\t\tlog_crit \"platform $PLATFORM is not supported.  Make sure this script is up-to-date and file request at https://github.com/${PREFIX}/issues/new\"\n\t\texit 1\n\t\t;;\n\tesac\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 398,
                  "startColumn": 13,
                  "endLine": 398,
                  "endColumn": 21,
                  "snippet": {
                    "text": "CHECKSUM_URL=${GITHUB_DOWNLOAD}/${TAG}/${CHECKSUM}\n\nexecute\nlog_err \"this script is deprecated, please do not use it anymore. check https://github.com/goreleaser/godownloader/issues/207\"\n",
                    "rendered": {
                      "text": "CHECKSUM_URL=${GITHUB_DOWNLOAD}/${TAG}/${CHECKSUM}\n\nexecute\nlog_err \"this script is deprecated, please do not use it anymore. check https://github.com/goreleaser/godownloader/issues/207\"\n",
                      "markdown": "`CHECKSUM_URL=${GITHUB_DOWNLOAD}/${TAG}/${CHECKSUM}\n\nexecute\nlog_err \"this script is deprecated, please do not use it anymore. check https://github.com/goreleaser/godownloader/issues/207\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 1,
                  "endLine": 352,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t\tlog_err \"hash_sha256_verify checksum for '$TARGET' did not verify ${want} vs $got\"\n\t\treturn 1\n\tfi\n}\ncat /dev/null <<EOF\n------------------------------------------------------------------------\nEnd of functions from https://github.com/client9/shlib\n------------------------------------------------------------------------\n",
                    "rendered": {
                      "text": "\t\tlog_err \"hash_sha256_verify checksum for '$TARGET' did not verify ${want} vs $got\"\n\t\treturn 1\n\tfi\n}\ncat /dev/null <<EOF\n------------------------------------------------------------------------\nEnd of functions from https://github.com/client9/shlib\n------------------------------------------------------------------------\n",
                      "markdown": "`\t\tlog_err \"hash_sha256_verify checksum for '$TARGET' did not verify ${want} vs $got\"\n\t\treturn 1\n\tfi\n}\ncat /dev/null <<EOF\n------------------------------------------------------------------------\nEnd of functions from https://github.com/client9/shlib\n------------------------------------------------------------------------\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 39,
                  "endLine": 343,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\tBASENAME=${TARGET##*/}\n\twant=$(grep \"${BASENAME}$\" \"${checksums}\" 2>/dev/null | tr '\\t' ' ' | cut -d ' ' -f 1)\n\tif [ -z \"$want\" ]; then\n\t\tlog_err \"hash_sha256_verify unable to find checksum for '${TARGET}' in '${checksums}'\"\n\t\treturn 1\n\tfi\n\tgot=$(hash_sha256 \"$TARGET\")\n",
                    "rendered": {
                      "text": "\tBASENAME=${TARGET##*/}\n\twant=$(grep \"${BASENAME}$\" \"${checksums}\" 2>/dev/null | tr '\\t' ' ' | cut -d ' ' -f 1)\n\tif [ -z \"$want\" ]; then\n\t\tlog_err \"hash_sha256_verify unable to find checksum for '${TARGET}' in '${checksums}'\"\n\t\treturn 1\n\tfi\n\tgot=$(hash_sha256 \"$TARGET\")\n",
                      "markdown": "`\tBASENAME=${TARGET##*/}\n\twant=$(grep \"${BASENAME}$\" \"${checksums}\" 2>/dev/null | tr '\\t' ' ' | cut -d ' ' -f 1)\n\tif [ -z \"$want\" ]; then\n\t\tlog_err \"hash_sha256_verify unable to find checksum for '${TARGET}' in '${checksums}'\"\n\t\treturn 1\n\tfi\n\tgot=$(hash_sha256 \"$TARGET\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 70,
                  "endLine": 341,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\t\treturn 1\n\tfi\n\tBASENAME=${TARGET##*/}\n\twant=$(grep \"${BASENAME}$\" \"${checksums}\" 2>/dev/null | tr '\\t' ' ' | cut -d ' ' -f 1)\n\tif [ -z \"$want\" ]; then\n\t\tlog_err \"hash_sha256_verify unable to find checksum for '${TARGET}' in '${checksums}'\"\n\t\treturn 1\n",
                    "rendered": {
                      "text": "\t\treturn 1\n\tfi\n\tBASENAME=${TARGET##*/}\n\twant=$(grep \"${BASENAME}$\" \"${checksums}\" 2>/dev/null | tr '\\t' ' ' | cut -d ' ' -f 1)\n\tif [ -z \"$want\" ]; then\n\t\tlog_err \"hash_sha256_verify unable to find checksum for '${TARGET}' in '${checksums}'\"\n\t\treturn 1\n",
                      "markdown": "`\t\treturn 1\n\tfi\n\tBASENAME=${TARGET##*/}\n\twant=$(grep \"${BASENAME}$\" \"${checksums}\" 2>/dev/null | tr '\\t' ' ' | cut -d ' ' -f 1)\n\tif [ -z \"$want\" ]; then\n\t\tlog_err \"hash_sha256_verify unable to find checksum for '${TARGET}' in '${checksums}'\"\n\t\treturn 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 33,
                  "endLine": 329,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\thash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f a\n\telse\n\t\tlog_crit \"hash_sha256 unable to find command to compute sha-256 hash\"\n\t\treturn 1\n\tfi\n}\n",
                    "rendered": {
                      "text": "\t\thash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f a\n\telse\n\t\tlog_crit \"hash_sha256 unable to find command to compute sha-256 hash\"\n\t\treturn 1\n\tfi\n}\n",
                      "markdown": "`\t\thash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f a\n\telse\n\t\tlog_crit \"hash_sha256 unable to find command to compute sha-256 hash\"\n\t\treturn 1\n\tfi\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 16,
                  "endLine": 327,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command openssl; then\n\t\thash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f a\n\telse\n\t\tlog_crit \"hash_sha256 unable to find command to compute sha-256 hash\"\n\t\treturn 1\n",
                    "rendered": {
                      "text": "\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command openssl; then\n\t\thash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f a\n\telse\n\t\tlog_crit \"hash_sha256 unable to find command to compute sha-256 hash\"\n\t\treturn 1\n",
                      "markdown": "`\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command openssl; then\n\t\thash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f a\n\telse\n\t\tlog_crit \"hash_sha256 unable to find command to compute sha-256 hash\"\n\t\treturn 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 21,
                  "endLine": 326,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\thash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command openssl; then\n\t\thash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f a\n\telse\n\t\tlog_crit \"hash_sha256 unable to find command to compute sha-256 hash\"\n",
                    "rendered": {
                      "text": "\t\thash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command openssl; then\n\t\thash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f a\n\telse\n\t\tlog_crit \"hash_sha256 unable to find command to compute sha-256 hash\"\n",
                      "markdown": "`\t\thash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command openssl; then\n\t\thash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f a\n\telse\n\t\tlog_crit \"hash_sha256 unable to find command to compute sha-256 hash\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 324,
                  "startColumn": 16,
                  "endLine": 324,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command shasum; then\n\t\thash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command openssl; then\n\t\thash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f a\n",
                    "rendered": {
                      "text": "\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command shasum; then\n\t\thash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command openssl; then\n\t\thash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f a\n",
                      "markdown": "`\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command shasum; then\n\t\thash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command openssl; then\n\t\thash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f a\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 16,
                  "endLine": 321,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command sha256sum; then\n\t\thash=$(sha256sum \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command shasum; then\n\t\thash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n",
                    "rendered": {
                      "text": "\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command sha256sum; then\n\t\thash=$(sha256sum \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command shasum; then\n\t\thash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n",
                      "markdown": "`\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command sha256sum; then\n\t\thash=$(sha256sum \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command shasum; then\n\t\thash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 16,
                  "endLine": 318,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tTARGET=${1:-/dev/stdin}\n\tif is_command gsha256sum; then\n\t\thash=$(gsha256sum \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command sha256sum; then\n\t\thash=$(sha256sum \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n",
                    "rendered": {
                      "text": "\tTARGET=${1:-/dev/stdin}\n\tif is_command gsha256sum; then\n\t\thash=$(gsha256sum \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command sha256sum; then\n\t\thash=$(sha256sum \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n",
                      "markdown": "`\tTARGET=${1:-/dev/stdin}\n\tif is_command gsha256sum; then\n\t\thash=$(gsha256sum \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n\telif is_command sha256sum; then\n\t\thash=$(sha256sum \"$TARGET\") || return 1\n\t\techo \"$hash\" | cut -d ' ' -f 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 69,
                  "endLine": 310,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\tgiturl=\"https://github.com/${owner_repo}/releases/${version}\"\n\tjson=$(http_copy \"$giturl\" \"Accept:application/json\")\n\ttest -z \"$json\" && return 1\n\tversion=$(echo \"$json\" | tr -s '\\n' ' ' | sed 's/.*\"tag_name\":\"//' | sed 's/\".*//')\n\ttest -z \"$version\" && return 1\n\techo \"$version\"\n}\n",
                    "rendered": {
                      "text": "\tgiturl=\"https://github.com/${owner_repo}/releases/${version}\"\n\tjson=$(http_copy \"$giturl\" \"Accept:application/json\")\n\ttest -z \"$json\" && return 1\n\tversion=$(echo \"$json\" | tr -s '\\n' ' ' | sed 's/.*\"tag_name\":\"//' | sed 's/\".*//')\n\ttest -z \"$version\" && return 1\n\techo \"$version\"\n}\n",
                      "markdown": "`\tgiturl=\"https://github.com/${owner_repo}/releases/${version}\"\n\tjson=$(http_copy \"$giturl\" \"Accept:application/json\")\n\ttest -z \"$json\" && return 1\n\tversion=$(echo \"$json\" | tr -s '\\n' ' ' | sed 's/.*\"tag_name\":\"//' | sed 's/\".*//')\n\ttest -z \"$version\" && return 1\n\techo \"$version\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 42,
                  "endLine": 310,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\tgiturl=\"https://github.com/${owner_repo}/releases/${version}\"\n\tjson=$(http_copy \"$giturl\" \"Accept:application/json\")\n\ttest -z \"$json\" && return 1\n\tversion=$(echo \"$json\" | tr -s '\\n' ' ' | sed 's/.*\"tag_name\":\"//' | sed 's/\".*//')\n\ttest -z \"$version\" && return 1\n\techo \"$version\"\n}\n",
                    "rendered": {
                      "text": "\tgiturl=\"https://github.com/${owner_repo}/releases/${version}\"\n\tjson=$(http_copy \"$giturl\" \"Accept:application/json\")\n\ttest -z \"$json\" && return 1\n\tversion=$(echo \"$json\" | tr -s '\\n' ' ' | sed 's/.*\"tag_name\":\"//' | sed 's/\".*//')\n\ttest -z \"$version\" && return 1\n\techo \"$version\"\n}\n",
                      "markdown": "`\tgiturl=\"https://github.com/${owner_repo}/releases/${version}\"\n\tjson=$(http_copy \"$giturl\" \"Accept:application/json\")\n\ttest -z \"$json\" && return 1\n\tversion=$(echo \"$json\" | tr -s '\\n' ' ' | sed 's/.*\"tag_name\":\"//' | sed 's/\".*//')\n\ttest -z \"$version\" && return 1\n\techo \"$version\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 34,
                  "endLine": 293,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\thttp_download_wget \"$@\"\n\t\treturn\n\tfi\n\tlog_crit \"http_download unable to find wget or curl\"\n\treturn 1\n}\nhttp_copy() {\n",
                    "rendered": {
                      "text": "\t\thttp_download_wget \"$@\"\n\t\treturn\n\tfi\n\tlog_crit \"http_download unable to find wget or curl\"\n\treturn 1\n}\nhttp_copy() {\n",
                      "markdown": "`\t\thttp_download_wget \"$@\"\n\t\treturn\n\tfi\n\tlog_crit \"http_download unable to find wget or curl\"\n\treturn 1\n}\nhttp_copy() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 1,
                  "endLine": 281,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tif [ -z \"$header\" ]; then\n\t\twget -q -O \"$local_file\" \"$source_url\"\n\telse\n\t\twget -q --header \"$header\" -O \"$local_file\" \"$source_url\"\n\tfi\n}\nhttp_download() {\n",
                    "rendered": {
                      "text": "\tif [ -z \"$header\" ]; then\n\t\twget -q -O \"$local_file\" \"$source_url\"\n\telse\n\t\twget -q --header \"$header\" -O \"$local_file\" \"$source_url\"\n\tfi\n}\nhttp_download() {\n",
                      "markdown": "`\tif [ -z \"$header\" ]; then\n\t\twget -q -O \"$local_file\" \"$source_url\"\n\telse\n\t\twget -q --header \"$header\" -O \"$local_file\" \"$source_url\"\n\tfi\n}\nhttp_download() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 1,
                  "endLine": 279,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tsource_url=$2\n\theader=$3\n\tif [ -z \"$header\" ]; then\n\t\twget -q -O \"$local_file\" \"$source_url\"\n\telse\n\t\twget -q --header \"$header\" -O \"$local_file\" \"$source_url\"\n\tfi\n",
                    "rendered": {
                      "text": "\tsource_url=$2\n\theader=$3\n\tif [ -z \"$header\" ]; then\n\t\twget -q -O \"$local_file\" \"$source_url\"\n\telse\n\t\twget -q --header \"$header\" -O \"$local_file\" \"$source_url\"\n\tfi\n",
                      "markdown": "`\tsource_url=$2\n\theader=$3\n\tif [ -z \"$header\" ]; then\n\t\twget -q -O \"$local_file\" \"$source_url\"\n\telse\n\t\twget -q --header \"$header\" -O \"$local_file\" \"$source_url\"\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 7,
                  "endLine": 251,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\ttarball=$1\n\tcase \"${tarball}\" in\n\t*.tar.gz | *.tgz) tar --no-same-owner -xzf \"${tarball}\" ;;\n\t*.tar) tar --no-same-owner -xf \"${tarball}\" ;;\n\t*.zip) unzip \"${tarball}\" ;;\n\t*)\n\t\tlog_err \"untar unknown archive format for ${tarball}\"\n",
                    "rendered": {
                      "text": "\ttarball=$1\n\tcase \"${tarball}\" in\n\t*.tar.gz | *.tgz) tar --no-same-owner -xzf \"${tarball}\" ;;\n\t*.tar) tar --no-same-owner -xf \"${tarball}\" ;;\n\t*.zip) unzip \"${tarball}\" ;;\n\t*)\n\t\tlog_err \"untar unknown archive format for ${tarball}\"\n",
                      "markdown": "`\ttarball=$1\n\tcase \"${tarball}\" in\n\t*.tar.gz | *.tgz) tar --no-same-owner -xzf \"${tarball}\" ;;\n\t*.tar) tar --no-same-owner -xf \"${tarball}\" ;;\n\t*.zip) unzip \"${tarball}\" ;;\n\t*)\n\t\tlog_err \"untar unknown archive format for ${tarball}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 18,
                  "endLine": 250,
                  "endColumn": 23,
                  "snippet": {
                    "text": "untar() {\n\ttarball=$1\n\tcase \"${tarball}\" in\n\t*.tar.gz | *.tgz) tar --no-same-owner -xzf \"${tarball}\" ;;\n\t*.tar) tar --no-same-owner -xf \"${tarball}\" ;;\n\t*.zip) unzip \"${tarball}\" ;;\n\t*)\n",
                    "rendered": {
                      "text": "untar() {\n\ttarball=$1\n\tcase \"${tarball}\" in\n\t*.tar.gz | *.tgz) tar --no-same-owner -xzf \"${tarball}\" ;;\n\t*.tar) tar --no-same-owner -xf \"${tarball}\" ;;\n\t*.zip) unzip \"${tarball}\" ;;\n\t*)\n",
                      "markdown": "`untar() {\n\ttarball=$1\n\tcase \"${tarball}\" in\n\t*.tar.gz | *.tgz) tar --no-same-owner -xzf \"${tarball}\" ;;\n\t*.tar) tar --no-same-owner -xf \"${tarball}\" ;;\n\t*.zip) unzip \"${tarball}\" ;;\n\t*)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 127,
                  "endLine": 128,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tesac\n\ttrue\n}\n\ncat /dev/null <<EOF\n------------------------------------------------------------------------\nhttps://github.com/client9/shlib - portable posix shell functions\nPublic domain - http://unlicense.org\n",
                    "rendered": {
                      "text": "\tesac\n\ttrue\n}\n\ncat /dev/null <<EOF\n------------------------------------------------------------------------\nhttps://github.com/client9/shlib - portable posix shell functions\nPublic domain - http://unlicense.org\n",
                      "markdown": "`\tesac\n\ttrue\n}\n\ncat /dev/null <<EOF\n------------------------------------------------------------------------\nhttps://github.com/client9/shlib - portable posix shell functions\nPublic domain - http://unlicense.org\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 21,
                  "endLine": 91,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\tfi\n\tREALTAG=$(github_release \"$OWNER/$REPO\" \"${TAG}\") && true\n\tif test -z \"$REALTAG\"; then\n\t\tlog_crit \"unable to find '${TAG}' - use 'latest' or see https://github.com/${PREFIX}/releases for details\"\n\t\texit 1\n\tfi\n\t# if version starts with 'v', remove it\n",
                    "rendered": {
                      "text": "\tfi\n\tREALTAG=$(github_release \"$OWNER/$REPO\" \"${TAG}\") && true\n\tif test -z \"$REALTAG\"; then\n\t\tlog_crit \"unable to find '${TAG}' - use 'latest' or see https://github.com/${PREFIX}/releases for details\"\n\t\texit 1\n\tfi\n\t# if version starts with 'v', remove it\n",
                      "markdown": "`\tfi\n\tREALTAG=$(github_release \"$OWNER/$REPO\" \"${TAG}\") && true\n\tif test -z \"$REALTAG\"; then\n\t\tlog_crit \"unable to find '${TAG}' - use 'latest' or see https://github.com/${PREFIX}/releases for details\"\n\t\texit 1\n\tfi\n\t# if version starts with 'v', remove it\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 64,
                  "endLine": 78,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\twindows/arm64) BINARIES=\"goreleaser\" ;;\n\twindows/armv6) BINARIES=\"goreleaser\" ;;\n\t*)\n\t\tlog_crit \"platform $PLATFORM is not supported.  Make sure this script is up-to-date and file request at https://github.com/${PREFIX}/issues/new\"\n\t\texit 1\n\t\t;;\n\tesac\n",
                    "rendered": {
                      "text": "\twindows/arm64) BINARIES=\"goreleaser\" ;;\n\twindows/armv6) BINARIES=\"goreleaser\" ;;\n\t*)\n\t\tlog_crit \"platform $PLATFORM is not supported.  Make sure this script is up-to-date and file request at https://github.com/${PREFIX}/issues/new\"\n\t\texit 1\n\t\t;;\n\tesac\n",
                      "markdown": "`\twindows/arm64) BINARIES=\"goreleaser\" ;;\n\twindows/armv6) BINARIES=\"goreleaser\" ;;\n\t*)\n\t\tlog_crit \"platform $PLATFORM is not supported.  Make sure this script is up-to-date and file request at https://github.com/${PREFIX}/issues/new\"\n\t\texit 1\n\t\t;;\n\tesac\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 40,
                  "endLine": 42,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\tTAG=$1\n}\n# this function wraps all the destructive operations\n# if a curl|bash cuts off the end of the script due to\n# network, either nothing will happen or will syntax error\n# out preventing half-done work\nexecute() {\n",
                    "rendered": {
                      "text": "\tTAG=$1\n}\n# this function wraps all the destructive operations\n# if a curl|bash cuts off the end of the script due to\n# network, either nothing will happen or will syntax error\n# out preventing half-done work\nexecute() {\n",
                      "markdown": "`\tTAG=$1\n}\n# this function wraps all the destructive operations\n# if a curl|bash cuts off the end of the script due to\n# network, either nothing will happen or will syntax error\n# out preventing half-done work\nexecute() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 31,
                  "endLine": 27,
                  "snippet": {
                    "text": "}\n\nparse_args() {\n\t#BINDIR is ./bin unless set be ENV\n\t# over-ridden by flag below\n\n\tBINDIR=${BINDIR:-./bin}\n\twhile getopts \"b:dh?x\" arg; do\n",
                    "rendered": {
                      "text": "}\n\nparse_args() {\n\t#BINDIR is ./bin unless set be ENV\n\t# over-ridden by flag below\n\n\tBINDIR=${BINDIR:-./bin}\n\twhile getopts \"b:dh?x\" arg; do\n",
                      "markdown": "`}\n\nparse_args() {\n\t#BINDIR is ./bin unless set be ENV\n\t# over-ridden by flag below\n\n\tBINDIR=${BINDIR:-./bin}\n\twhile getopts \"b:dh?x\" arg; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/goreleaser-install.sh"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nusage() {\n\tthis=$1\n\tcat <<EOF\n$this: download go binaries for goreleaser/goreleaser\n\nUsage: $this [-b] bindir [-d] [tag]\n",
                    "rendered": {
                      "text": "\nusage() {\n\tthis=$1\n\tcat <<EOF\n$this: download go binaries for goreleaser/goreleaser\n\nUsage: $this [-b] bindir [-d] [tag]\n",
                      "markdown": "`\nusage() {\n\tthis=$1\n\tcat <<EOF\n$this: download go binaries for goreleaser/goreleaser\n\nUsage: $this [-b] bindir [-d] [tag]\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 811,
                  "startColumn": 23,
                  "endLine": 811,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n      # GRYPE_REGISTRY_AUTH_TOKEN env var\n      token: \"\"\n\n      # filepath to the client certificate used for TLS authentication to the registry\n",
                    "rendered": {
                      "text": "      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n      # GRYPE_REGISTRY_AUTH_TOKEN env var\n      token: \"\"\n\n      # filepath to the client certificate used for TLS authentication to the registry\n",
                      "markdown": "`      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n      # GRYPE_REGISTRY_AUTH_TOKEN env var\n      token: \"\"\n\n      # filepath to the client certificate used for TLS authentication to the registry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 810,
                  "startColumn": 33,
                  "endLine": 810,
                  "endColumn": 41,
                  "snippet": {
                    "text": "      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n      # GRYPE_REGISTRY_AUTH_TOKEN env var\n      token: \"\"\n\n",
                    "rendered": {
                      "text": "      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n      # GRYPE_REGISTRY_AUTH_TOKEN env var\n      token: \"\"\n\n",
                      "markdown": "`      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n      # GRYPE_REGISTRY_AUTH_TOKEN env var\n      token: \"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 808,
                  "startColumn": 6,
                  "endLine": 808,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      username: \"\"\n\n      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n      # GRYPE_REGISTRY_AUTH_TOKEN env var\n",
                    "rendered": {
                      "text": "      username: \"\"\n\n      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n      # GRYPE_REGISTRY_AUTH_TOKEN env var\n",
                      "markdown": "`      username: \"\"\n\n      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n      # GRYPE_REGISTRY_AUTH_TOKEN env var\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 807,
                  "startColumn": 28,
                  "endLine": 807,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      # GRYPE_REGISTRY_AUTH_USERNAME env var\n      username: \"\"\n\n      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n",
                    "rendered": {
                      "text": "      # GRYPE_REGISTRY_AUTH_USERNAME env var\n      username: \"\"\n\n      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n",
                      "markdown": "`      # GRYPE_REGISTRY_AUTH_USERNAME env var\n      username: \"\"\n\n      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 598,
                  "startColumn": 7,
                  "endLine": 598,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  \"auths\": {\n    \"registry.example.com\": {\n      \"username\": \"AzureDiamond\",\n      \"password\": \"hunter2\"\n    }\n  }\n}\n",
                    "rendered": {
                      "text": "  \"auths\": {\n    \"registry.example.com\": {\n      \"username\": \"AzureDiamond\",\n      \"password\": \"hunter2\"\n    }\n  }\n}\n",
                      "markdown": "`  \"auths\": {\n    \"registry.example.com\": {\n      \"username\": \"AzureDiamond\",\n      \"password\": \"hunter2\"\n    }\n  }\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 623,
                  "startColumn": 24,
                  "endLine": 623,
                  "endColumn": 30,
                  "snippet": {
                    "text": "          name: registry-config\n          namespace: grype\n        data:\n          config.json: <base64 encoded config.json>\n        ```\n\n        `kubectl apply -f secret.yaml`\n",
                    "rendered": {
                      "text": "          name: registry-config\n          namespace: grype\n        data:\n          config.json: <base64 encoded config.json>\n        ```\n\n        `kubectl apply -f secret.yaml`\n",
                      "markdown": "`          name: registry-config\n          namespace: grype\n        data:\n          config.json: <base64 encoded config.json>\n        ```\n\n        `kubectl apply -f secret.yaml`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 2,
                  "endLine": 226,
                  "endColumn": 8,
                  "snippet": {
                    "text": "```\nCOSIGN_EXPERIMENTAL=1 cosign verify-attestation caphill4/java-spdx-tools:latest \\\n| jq -r .payload \\\n| base64 --decode \\\n| jq -r .predicate.Data \\\n| grype\n```\n",
                    "rendered": {
                      "text": "```\nCOSIGN_EXPERIMENTAL=1 cosign verify-attestation caphill4/java-spdx-tools:latest \\\n| jq -r .payload \\\n| base64 --decode \\\n| jq -r .predicate.Data \\\n| grype\n```\n",
                      "markdown": "````\nCOSIGN_EXPERIMENTAL=1 cosign verify-attestation caphill4/java-spdx-tools:latest \\\n| jq -r .payload \\\n| base64 --decode \\\n| jq -r .predicate.Data \\\n| grype\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 692,
                  "startColumn": 39,
                  "endLine": 692,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# same as --name; set the name of the target being analyzed\nname: \"\"\n\n# upon scanning, if a severity is found at or above the given severity then the return code will be 1\n# default is unset which will skip this validation (options: negligible, low, medium, high, critical)\n# same as --fail-on ; GRYPE_FAIL_ON_SEVERITY env var\nfail-on-severity: \"\"\n",
                    "rendered": {
                      "text": "# same as --name; set the name of the target being analyzed\nname: \"\"\n\n# upon scanning, if a severity is found at or above the given severity then the return code will be 1\n# default is unset which will skip this validation (options: negligible, low, medium, high, critical)\n# same as --fail-on ; GRYPE_FAIL_ON_SEVERITY env var\nfail-on-severity: \"\"\n",
                      "markdown": "`# same as --name; set the name of the target being analyzed\nname: \"\"\n\n# upon scanning, if a severity is found at or above the given severity then the return code will be 1\n# default is unset which will skip this validation (options: negligible, low, medium, high, critical)\n# same as --fail-on ; GRYPE_FAIL_ON_SEVERITY env var\nfail-on-severity: \"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 629,
                  "startColumn": 101,
                  "endLine": 629,
                  "endColumn": 105,
                  "snippet": {
                    "text": "config.json>\n        ```\n\n        `kubectl apply -f secret.yaml`\n\n2.  Create your pod running grype. The env `DOCKER_CONFIG` is important because it advertises where to look for the credential file.\n    In the below example, setting `DOCKER_CONFIG=/config` informs grype that credentials can be found at `/config/config.json`.\n    This is why we used `config.json` as the key for our secret. When mounted into containers the secrets' key is used as the filename.\n    The `volumeMounts` section mounts our secret to `/config`. The `volumes` section names our volume and leverages the secret we created in ",
                    "rendered": {
                      "text": "config.json>\n        ```\n\n        `kubectl apply -f secret.yaml`\n\n2.  Create your pod running grype. The env `DOCKER_CONFIG` is important because it advertises where to look for the credential file.\n    In the below example, setting `DOCKER_CONFIG=/config` informs grype that credentials can be found at `/config/config.json`.\n    This is why we used `config.json` as the key for our secret. When mounted into containers the secrets' key is used as the filename.\n    The `volumeMounts` section mounts our secret to `/config`. The `volumes` section names our volume and leverages the secret we created in ",
                      "markdown": "`config.json>\n        ```\n\n        `kubectl apply -f secret.yaml`\n\n2.  Create your pod running grype. The env `DOCKER_CONFIG` is important because it advertises where to look for the credential file.\n    In the below example, setting `DOCKER_CONFIG=/config` informs grype that credentials can be found at `/config/config.json`.\n    This is why we used `config.json` as the key for our secret. When mounted into containers the secrets' key is used as the filename.\n    The `volumeMounts` section mounts our secret to `/config`. The `volumes` section names our volume and leverages the secret we created in `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 566,
                  "startColumn": 54,
                  "endLine": 566,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n`grype db update` — ensure the latest database has been downloaded to the cache directory (Grype performs this operation at the beginning of every scan by default)\n\n`grype db list` — download the listing file configured at `db.update-url` and show databases that are available for download\n\n`grype db import` — provide grype with a database archive to explicitly use (useful for offline DB updates)\n\n",
                    "rendered": {
                      "text": "\n`grype db update` — ensure the latest database has been downloaded to the cache directory (Grype performs this operation at the beginning of every scan by default)\n\n`grype db list` — download the listing file configured at `db.update-url` and show databases that are available for download\n\n`grype db import` — provide grype with a database archive to explicitly use (useful for offline DB updates)\n\n",
                      "markdown": "`\n`grype db update` — ensure the latest database has been downloaded to the cache directory (Grype performs this operation at the beginning of every scan by default)\n\n`grype db list` — download the listing file configured at `db.update-url` and show databases that are available for download\n\n`grype db import` — provide grype with a database archive to explicitly use (useful for offline DB updates)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 564,
                  "startColumn": 120,
                  "endLine": 564,
                  "endColumn": 124,
                  "snippet": {
                    "text": "\n`grype db check` — see if updates are available for the database\n\n`grype db update` — ensure the latest database has been downloaded to the cache directory (Grype performs this operation at the beginning of every scan by default)\n\n`grype db list` — download the listing file configured at `db.update-url` and show databases that are available for download\n\n",
                    "rendered": {
                      "text": "\n`grype db check` — see if updates are available for the database\n\n`grype db update` — ensure the latest database has been downloaded to the cache directory (Grype performs this operation at the beginning of every scan by default)\n\n`grype db list` — download the listing file configured at `db.update-url` and show databases that are available for download\n\n",
                      "markdown": "`\n`grype db check` — see if updates are available for the database\n\n`grype db update` — ensure the latest database has been downloaded to the cache directory (Grype performs this operation at the beginning of every scan by default)\n\n`grype db list` — download the listing file configured at `db.update-url` and show databases that are available for download\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 558,
                  "startColumn": 68,
                  "endLine": 558,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\n#### CLI commands for database management\n\nGrype provides database-specific CLI commands for users that want to control the database from the command line. Here are some of the useful commands provided:\n\n`grype db status` — report the current status of Grype's database (such as its location, build date, and checksum)\n\n",
                    "rendered": {
                      "text": "\n#### CLI commands for database management\n\nGrype provides database-specific CLI commands for users that want to control the database from the command line. Here are some of the useful commands provided:\n\n`grype db status` — report the current status of Grype's database (such as its location, build date, and checksum)\n\n",
                      "markdown": "`\n#### CLI commands for database management\n\nGrype provides database-specific CLI commands for users that want to control the database from the command line. Here are some of the useful commands provided:\n\n`grype db status` — report the current status of Grype's database (such as its location, build date, and checksum)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 554,
                  "startColumn": 139,
                  "endLine": 554,
                  "endColumn": 147,
                  "snippet": {
                    "text": "ad the database archive, transfer it to your offline environment, and use `grype db import <db-archive-path>` to use the given database in an offline capacity.\n\nIf you would like to distribute your own Grype databases internally without needing to use `db import` manually you can leverage Grype's DB update mechanism. To do this you can craft your own `listing.json` file similar to the one found publically (see `grype db list -o raw` for an example of our public `listing.json` file) and change the download URL to point to an internal endpoint (e.g. a private S3 bucket, an internal file server, etc). An",
                    "rendered": {
                      "text": "ad the database archive, transfer it to your offline environment, and use `grype db import <db-archive-path>` to use the given database in an offline capacity.\n\nIf you would like to distribute your own Grype databases internally without needing to use `db import` manually you can leverage Grype's DB update mechanism. To do this you can craft your own `listing.json` file similar to the one found publically (see `grype db list -o raw` for an example of our public `listing.json` file) and change the download URL to point to an internal endpoint (e.g. a private S3 bucket, an internal file server, etc). An",
                      "markdown": "`ad the database archive, transfer it to your offline environment, and use `grype db import <db-archive-path>` to use the given database in an offline capacity.\n\nIf you would like to distribute your own Grype databases internally without needing to use `db import` manually you can leverage Grype's DB update mechanism. To do this you can craft your own `listing.json` file similar to the one found publically (see `grype db list -o raw` for an example of our public `listing.json` file) and change the download URL to point to an internal endpoint (e.g. a private S3 bucket, an internal file server, etc). An`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 515,
                  "startColumn": 32,
                  "endLine": 515,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\nGrype's vulnerability database is a SQLite file, named `vulnerability.db`. Updates to the database are atomic: the entire database is replaced and then treated as \"readonly\" by Grype.\n\nGrype's first step in a database update is discovering databases that are available for retrieval. Grype does this by requesting a \"listing file\" from a public endpoint:\n\n`https://toolbox-data.anchore.io/grype/databases/listing.json`\n\n",
                    "rendered": {
                      "text": "\nGrype's vulnerability database is a SQLite file, named `vulnerability.db`. Updates to the database are atomic: the entire database is replaced and then treated as \"readonly\" by Grype.\n\nGrype's first step in a database update is discovering databases that are available for retrieval. Grype does this by requesting a \"listing file\" from a public endpoint:\n\n`https://toolbox-data.anchore.io/grype/databases/listing.json`\n\n",
                      "markdown": "`\nGrype's vulnerability database is a SQLite file, named `vulnerability.db`. Updates to the database are atomic: the entire database is replaced and then treated as \"readonly\" by Grype.\n\nGrype's first step in a database update is discovering databases that are available for retrieval. Grype does this by requesting a \"listing file\" from a public endpoint:\n\n`https://toolbox-data.anchore.io/grype/databases/listing.json`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 30,
                  "endLine": 479,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n### VEX Ignore Rules\n\nIgnore rules can be written to control how Grype honors VEX statements. For\nexample, to configure Grype to only act on VEX statements when the justification is `vulnerable_code_not_present`, you can write a rule like this:\n\n```yaml\n",
                    "rendered": {
                      "text": "\n### VEX Ignore Rules\n\nIgnore rules can be written to control how Grype honors VEX statements. For\nexample, to configure Grype to only act on VEX statements when the justification is `vulnerable_code_not_present`, you can write a rule like this:\n\n```yaml\n",
                      "markdown": "`\n### VEX Ignore Rules\n\nIgnore rules can be written to control how Grype honors VEX statements. For\nexample, to configure Grype to only act on VEX statements when the justification is `vulnerable_code_not_present`, you can write a rule like this:\n\n```yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 73,
                  "endLine": 339,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\n### Gating on severity of vulnerabilities\n\nYou can have Grype exit with an error if any vulnerabilities are reported at or above the specified severity level. This comes in handy when using Grype within a script or CI pipeline. To do this, use the `--fail-on <severity>` CLI flag.\n\nFor example, here's how you could trigger a CI pipeline failure if any vulnerabilities are found in the `ubuntu:latest` image with a severity of \"medium\" or higher:\n\n",
                    "rendered": {
                      "text": "\n### Gating on severity of vulnerabilities\n\nYou can have Grype exit with an error if any vulnerabilities are reported at or above the specified severity level. This comes in handy when using Grype within a script or CI pipeline. To do this, use the `--fail-on <severity>` CLI flag.\n\nFor example, here's how you could trigger a CI pipeline failure if any vulnerabilities are found in the `ubuntu:latest` image with a severity of \"medium\" or higher:\n\n",
                      "markdown": "`\n### Gating on severity of vulnerabilities\n\nYou can have Grype exit with an error if any vulnerabilities are reported at or above the specified severity level. This comes in handy when using Grype within a script or CI pipeline. To do this, use the `--fail-on <severity>` CLI flag.\n\nFor example, here's how you could trigger a CI pipeline failure if any vulnerabilities are found in the `ubuntu:latest` image with a severity of \"medium\" or higher:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 14,
                  "endLine": 274,
                  "endColumn": 22,
                  "snippet": {
                    "text": "would exclude all `package.json` files under `/usr/foo`. For _directory scans_,\nit is required to begin path expressions with `./`, `*/`, or `**/`, all of which\nwill be resolved _relative to the specified scan directory_. Keep in mind, your shell\nmay attempt to expand wildcards, so put those parameters in single quotes, like:\n`'**/*.json'`.\n\n### External Sources\n",
                    "rendered": {
                      "text": "would exclude all `package.json` files under `/usr/foo`. For _directory scans_,\nit is required to begin path expressions with `./`, `*/`, or `**/`, all of which\nwill be resolved _relative to the specified scan directory_. Keep in mind, your shell\nmay attempt to expand wildcards, so put those parameters in single quotes, like:\n`'**/*.json'`.\n\n### External Sources\n",
                      "markdown": "`would exclude all `package.json` files under `/usr/foo`. For _directory scans_,\nit is required to begin path expressions with `./`, `*/`, or `**/`, all of which\nwill be resolved _relative to the specified scan directory_. Keep in mind, your shell\nmay attempt to expand wildcards, so put those parameters in single quotes, like:\n`'**/*.json'`.\n\n### External Sources\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 3,
                  "endLine": 51,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  - Java (JAR, WAR, EAR, JPI, HPI)\n  - JavaScript (NPM, Yarn)\n  - Python (Egg, Wheel, Poetry, requirements.txt/setup.py files)\n  - Dotnet (deps.json)\n  - Golang (go.mod)\n  - PHP (Composer)\n  - Rust (Cargo)\n",
                    "rendered": {
                      "text": "  - Java (JAR, WAR, EAR, JPI, HPI)\n  - JavaScript (NPM, Yarn)\n  - Python (Egg, Wheel, Poetry, requirements.txt/setup.py files)\n  - Dotnet (deps.json)\n  - Golang (go.mod)\n  - PHP (Composer)\n  - Rust (Cargo)\n",
                      "markdown": "`  - Java (JAR, WAR, EAR, JPI, HPI)\n  - JavaScript (NPM, Yarn)\n  - Python (Egg, Wheel, Poetry, requirements.txt/setup.py files)\n  - Dotnet (deps.json)\n  - Golang (go.mod)\n  - PHP (Composer)\n  - Rust (Cargo)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 844,
                  "startColumn": 54,
                  "endLine": 844,
                  "endColumn": 60,
                  "snippet": {
                    "text": "  file: \"\"\n\nmatch:\n  # sets the matchers below to use cpes when trying to find \n  # vulnerability matches. The stock matcher is the default\n  # when no primary matcher can be identified.\n  java:\n",
                    "rendered": {
                      "text": "  file: \"\"\n\nmatch:\n  # sets the matchers below to use cpes when trying to find \n  # vulnerability matches. The stock matcher is the default\n  # when no primary matcher can be identified.\n  java:\n",
                      "markdown": "`  file: \"\"\n\nmatch:\n  # sets the matchers below to use cpes when trying to find \n  # vulnerability matches. The stock matcher is the default\n  # when no primary matcher can be identified.\n  java:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 840,
                  "startColumn": 26,
                  "endLine": 840,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  level: \"error\"\n\n  # location to write the log file (default is not to have a log file)\n  # same as GRYPE_LOG_FILE env var\n  file: \"\"\n\nmatch:\n",
                    "rendered": {
                      "text": "  level: \"error\"\n\n  # location to write the log file (default is not to have a log file)\n  # same as GRYPE_LOG_FILE env var\n  file: \"\"\n\nmatch:\n",
                      "markdown": "`  level: \"error\"\n\n  # location to write the log file (default is not to have a log file)\n  # same as GRYPE_LOG_FILE env var\n  file: \"\"\n\nmatch:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 835,
                  "startColumn": 27,
                  "endLine": 835,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  verbosity: 0\n\n  # the log level; note: detailed logging suppress the ETUI\n  # same as GRYPE_LOG_LEVEL env var\n  # Uses logrus logging levels: https://github.com/sirupsen/logrus#level-logging\n  level: \"error\"\n\n",
                    "rendered": {
                      "text": "  verbosity: 0\n\n  # the log level; note: detailed logging suppress the ETUI\n  # same as GRYPE_LOG_LEVEL env var\n  # Uses logrus logging levels: https://github.com/sirupsen/logrus#level-logging\n  level: \"error\"\n\n",
                      "markdown": "`  verbosity: 0\n\n  # the log level; note: detailed logging suppress the ETUI\n  # same as GRYPE_LOG_LEVEL env var\n  # Uses logrus logging levels: https://github.com/sirupsen/logrus#level-logging\n  level: \"error\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 831,
                  "startColumn": 31,
                  "endLine": 831,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  quiet: false\n\n  # increase verbosity\n  # same as GRYPE_LOG_VERBOSITY env var\n  verbosity: 0\n\n  # the log level; note: detailed logging suppress the ETUI\n",
                    "rendered": {
                      "text": "  quiet: false\n\n  # increase verbosity\n  # same as GRYPE_LOG_VERBOSITY env var\n  verbosity: 0\n\n  # the log level; note: detailed logging suppress the ETUI\n",
                      "markdown": "`  quiet: false\n\n  # increase verbosity\n  # same as GRYPE_LOG_VERBOSITY env var\n  verbosity: 0\n\n  # the log level; note: detailed logging suppress the ETUI\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 827,
                  "startColumn": 32,
                  "endLine": 827,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nlog:\n  # suppress all output (except for the vulnerability list)\n  # same as -q ; GRYPE_LOG_QUIET env var\n  quiet: false\n\n  # increase verbosity\n",
                    "rendered": {
                      "text": "\nlog:\n  # suppress all output (except for the vulnerability list)\n  # same as -q ; GRYPE_LOG_QUIET env var\n  quiet: false\n\n  # increase verbosity\n",
                      "markdown": "`\nlog:\n  # suppress all output (except for the vulnerability list)\n  # same as -q ; GRYPE_LOG_QUIET env var\n  quiet: false\n\n  # increase verbosity\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 822,
                  "startColumn": 78,
                  "endLine": 822,
                  "endColumn": 83,
                  "snippet": {
                    "text": "      # GRYPE_REGISTRY_AUTH_TLS_KEY env var\n      tls-key: \"\"\n\n    # - ... # note, more credentials can be provided via config file only (not env vars)\n\n\nlog:\n",
                    "rendered": {
                      "text": "      # GRYPE_REGISTRY_AUTH_TLS_KEY env var\n      tls-key: \"\"\n\n    # - ... # note, more credentials can be provided via config file only (not env vars)\n\n\nlog:\n",
                      "markdown": "`      # GRYPE_REGISTRY_AUTH_TLS_KEY env var\n      tls-key: \"\"\n\n    # - ... # note, more credentials can be provided via config file only (not env vars)\n\n\nlog:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 819,
                  "startColumn": 35,
                  "endLine": 819,
                  "endColumn": 40,
                  "snippet": {
                    "text": "      tls-cert: \"\"\n\n      # filepath to the client key used for TLS authentication to the registry\n      # GRYPE_REGISTRY_AUTH_TLS_KEY env var\n      tls-key: \"\"\n\n    # - ... # note, more credentials can be provided via config file only (not env vars)\n",
                    "rendered": {
                      "text": "      tls-cert: \"\"\n\n      # filepath to the client key used for TLS authentication to the registry\n      # GRYPE_REGISTRY_AUTH_TLS_KEY env var\n      tls-key: \"\"\n\n    # - ... # note, more credentials can be provided via config file only (not env vars)\n",
                      "markdown": "`      tls-cert: \"\"\n\n      # filepath to the client key used for TLS authentication to the registry\n      # GRYPE_REGISTRY_AUTH_TLS_KEY env var\n      tls-key: \"\"\n\n    # - ... # note, more credentials can be provided via config file only (not env vars)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 815,
                  "startColumn": 36,
                  "endLine": 815,
                  "endColumn": 41,
                  "snippet": {
                    "text": "      token: \"\"\n\n      # filepath to the client certificate used for TLS authentication to the registry\n      # GRYPE_REGISTRY_AUTH_TLS_CERT env var\n      tls-cert: \"\"\n\n      # filepath to the client key used for TLS authentication to the registry\n",
                    "rendered": {
                      "text": "      token: \"\"\n\n      # filepath to the client certificate used for TLS authentication to the registry\n      # GRYPE_REGISTRY_AUTH_TLS_CERT env var\n      tls-cert: \"\"\n\n      # filepath to the client key used for TLS authentication to the registry\n",
                      "markdown": "`      token: \"\"\n\n      # filepath to the client certificate used for TLS authentication to the registry\n      # GRYPE_REGISTRY_AUTH_TLS_CERT env var\n      tls-cert: \"\"\n\n      # filepath to the client key used for TLS authentication to the registry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 811,
                  "startColumn": 33,
                  "endLine": 811,
                  "endColumn": 38,
                  "snippet": {
                    "text": "      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n      # GRYPE_REGISTRY_AUTH_TOKEN env var\n      token: \"\"\n\n      # filepath to the client certificate used for TLS authentication to the registry\n",
                    "rendered": {
                      "text": "      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n      # GRYPE_REGISTRY_AUTH_TOKEN env var\n      token: \"\"\n\n      # filepath to the client certificate used for TLS authentication to the registry\n",
                      "markdown": "`      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n      # GRYPE_REGISTRY_AUTH_TOKEN env var\n      token: \"\"\n\n      # filepath to the client certificate used for TLS authentication to the registry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 807,
                  "startColumn": 36,
                  "endLine": 807,
                  "endColumn": 41,
                  "snippet": {
                    "text": "      # GRYPE_REGISTRY_AUTH_USERNAME env var\n      username: \"\"\n\n      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n",
                    "rendered": {
                      "text": "      # GRYPE_REGISTRY_AUTH_USERNAME env var\n      username: \"\"\n\n      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n",
                      "markdown": "`      # GRYPE_REGISTRY_AUTH_USERNAME env var\n      username: \"\"\n\n      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n      password: \"\"\n\n      # note: token and username/password are mutually exclusive\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 804,
                  "startColumn": 36,
                  "endLine": 804,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    # GRYPE_REGISTRY_AUTH_AUTHORITY env var\n    - authority: \"\"\n\n      # GRYPE_REGISTRY_AUTH_USERNAME env var\n      username: \"\"\n\n      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n",
                    "rendered": {
                      "text": "    # GRYPE_REGISTRY_AUTH_AUTHORITY env var\n    - authority: \"\"\n\n      # GRYPE_REGISTRY_AUTH_USERNAME env var\n      username: \"\"\n\n      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n",
                      "markdown": "`    # GRYPE_REGISTRY_AUTH_AUTHORITY env var\n    - authority: \"\"\n\n      # GRYPE_REGISTRY_AUTH_USERNAME env var\n      username: \"\"\n\n      # GRYPE_REGISTRY_AUTH_PASSWORD env var\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 801,
                  "startColumn": 35,
                  "endLine": 801,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  # credentials for specific registries\n  auth:\n    # the URL to the registry (e.g. \"docker.io\", \"localhost:5000\", etc.)\n    # GRYPE_REGISTRY_AUTH_AUTHORITY env var\n    - authority: \"\"\n\n      # GRYPE_REGISTRY_AUTH_USERNAME env var\n",
                    "rendered": {
                      "text": "  # credentials for specific registries\n  auth:\n    # the URL to the registry (e.g. \"docker.io\", \"localhost:5000\", etc.)\n    # GRYPE_REGISTRY_AUTH_AUTHORITY env var\n    - authority: \"\"\n\n      # GRYPE_REGISTRY_AUTH_USERNAME env var\n",
                      "markdown": "`  # credentials for specific registries\n  auth:\n    # the URL to the registry (e.g. \"docker.io\", \"localhost:5000\", etc.)\n    # GRYPE_REGISTRY_AUTH_AUTHORITY env var\n    - authority: \"\"\n\n      # GRYPE_REGISTRY_AUTH_USERNAME env var\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 795,
                  "startColumn": 26,
                  "endLine": 795,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  insecure-use-http: false\n\n  # filepath to a CA certificate (or directory containing *.crt, *.cert, *.pem) used to generate the client certificate\n  # GRYPE_REGISTRY_CA_CERT env var\n  ca-cert: \"\"\n\n  # credentials for specific registries\n",
                    "rendered": {
                      "text": "  insecure-use-http: false\n\n  # filepath to a CA certificate (or directory containing *.crt, *.cert, *.pem) used to generate the client certificate\n  # GRYPE_REGISTRY_CA_CERT env var\n  ca-cert: \"\"\n\n  # credentials for specific registries\n",
                      "markdown": "`  insecure-use-http: false\n\n  # filepath to a CA certificate (or directory containing *.crt, *.cert, *.pem) used to generate the client certificate\n  # GRYPE_REGISTRY_CA_CERT env var\n  ca-cert: \"\"\n\n  # credentials for specific registries\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 791,
                  "startColumn": 44,
                  "endLine": 791,
                  "endColumn": 49,
                  "snippet": {
                    "text": "  insecure-skip-tls-verify: false\n\n  # use http instead of https when connecting to the registry\n  # same as GRYPE_REGISTRY_INSECURE_USE_HTTP env var\n  insecure-use-http: false\n\n  # filepath to a CA certificate (or directory containing *.crt, *.cert, *.pem) used to generate the client certificate\n",
                    "rendered": {
                      "text": "  insecure-skip-tls-verify: false\n\n  # use http instead of https when connecting to the registry\n  # same as GRYPE_REGISTRY_INSECURE_USE_HTTP env var\n  insecure-use-http: false\n\n  # filepath to a CA certificate (or directory containing *.crt, *.cert, *.pem) used to generate the client certificate\n",
                      "markdown": "`  insecure-skip-tls-verify: false\n\n  # use http instead of https when connecting to the registry\n  # same as GRYPE_REGISTRY_INSECURE_USE_HTTP env var\n  insecure-use-http: false\n\n  # filepath to a CA certificate (or directory containing *.crt, *.cert, *.pem) used to generate the client certificate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 787,
                  "startColumn": 51,
                  "endLine": 787,
                  "endColumn": 56,
                  "snippet": {
                    "text": "# options when pulling directly from a registry via the \"registry:\" scheme\nregistry:\n  # skip TLS verification when communicating with the registry\n  # same as GRYPE_REGISTRY_INSECURE_SKIP_TLS_VERIFY env var\n  insecure-skip-tls-verify: false\n\n  # use http instead of https when connecting to the registry\n",
                    "rendered": {
                      "text": "# options when pulling directly from a registry via the \"registry:\" scheme\nregistry:\n  # skip TLS verification when communicating with the registry\n  # same as GRYPE_REGISTRY_INSECURE_SKIP_TLS_VERIFY env var\n  insecure-skip-tls-verify: false\n\n  # use http instead of https when connecting to the registry\n",
                      "markdown": "`# options when pulling directly from a registry via the \"registry:\" scheme\nregistry:\n  # skip TLS verification when communicating with the registry\n  # same as GRYPE_REGISTRY_INSECURE_SKIP_TLS_VERIFY env var\n  insecure-skip-tls-verify: false\n\n  # use http instead of https when connecting to the registry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 781,
                  "startColumn": 51,
                  "endLine": 781,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  # search within archives that do not contain a file index to search against (tar, tar.gz, tar.bz2, etc)\n  # note: enabling this may result in a performance impact since all discovered compressed tars will be decompressed\n  # note: for now this only applies to the java package cataloger\n  # same as GRYPE_PACKAGE_SEARCH_UNINDEXED_ARCHIVES env var\n  unindexed-archives: false\n\n# options when pulling directly from a registry via the \"registry:\" scheme\n",
                    "rendered": {
                      "text": "  # search within archives that do not contain a file index to search against (tar, tar.gz, tar.bz2, etc)\n  # note: enabling this may result in a performance impact since all discovered compressed tars will be decompressed\n  # note: for now this only applies to the java package cataloger\n  # same as GRYPE_PACKAGE_SEARCH_UNINDEXED_ARCHIVES env var\n  unindexed-archives: false\n\n# options when pulling directly from a registry via the \"registry:\" scheme\n",
                      "markdown": "`  # search within archives that do not contain a file index to search against (tar, tar.gz, tar.bz2, etc)\n  # note: enabling this may result in a performance impact since all discovered compressed tars will be decompressed\n  # note: for now this only applies to the java package cataloger\n  # same as GRYPE_PACKAGE_SEARCH_UNINDEXED_ARCHIVES env var\n  unindexed-archives: false\n\n# options when pulling directly from a registry via the \"registry:\" scheme\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 775,
                  "startColumn": 49,
                  "endLine": 775,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n  # search within archives that do contain a file index to search against (zip)\n  # note: for now this only applies to the java package cataloger\n  # same as GRYPE_PACKAGE_SEARCH_INDEXED_ARCHIVES env var\n  indexed-archives: true\n\n  # search within archives that do not contain a file index to search against (tar, tar.gz, tar.bz2, etc)\n",
                    "rendered": {
                      "text": "\n  # search within archives that do contain a file index to search against (zip)\n  # note: for now this only applies to the java package cataloger\n  # same as GRYPE_PACKAGE_SEARCH_INDEXED_ARCHIVES env var\n  indexed-archives: true\n\n  # search within archives that do not contain a file index to search against (tar, tar.gz, tar.bz2, etc)\n",
                      "markdown": "`\n  # search within archives that do contain a file index to search against (zip)\n  # note: for now this only applies to the java package cataloger\n  # same as GRYPE_PACKAGE_SEARCH_INDEXED_ARCHIVES env var\n  indexed-archives: true\n\n  # search within archives that do not contain a file index to search against (tar, tar.gz, tar.bz2, etc)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 770,
                  "startColumn": 35,
                  "endLine": 770,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\nsearch:\n  # the search space to look for packages (options: all-layers, squashed)\n  # same as -s ; GRYPE_SEARCH_SCOPE env var\n  scope: \"squashed\"\n\n  # search within archives that do contain a file index to search against (zip)\n",
                    "rendered": {
                      "text": "\nsearch:\n  # the search space to look for packages (options: all-layers, squashed)\n  # same as -s ; GRYPE_SEARCH_SCOPE env var\n  scope: \"squashed\"\n\n  # search within archives that do contain a file index to search against (zip)\n",
                      "markdown": "`\nsearch:\n  # the search space to look for packages (options: all-layers, squashed)\n  # same as -s ; GRYPE_SEARCH_SCOPE env var\n  scope: \"squashed\"\n\n  # search within archives that do contain a file index to search against (zip)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 764,
                  "startColumn": 3,
                  "endLine": 764,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  # This file is ~156KiB as of 2024-04-17 so the download should be quick; adjust as needed\n  update-available-timeout: \"30s\"\n\n  # Timeout for downloading actual vulnerability DB\n  # The DB is ~156MB as of 2024-04-17 so slower connections may exceed the default timeout; adjust as needed\n  update-download-timeout: \"120s\"\n\n",
                    "rendered": {
                      "text": "  # This file is ~156KiB as of 2024-04-17 so the download should be quick; adjust as needed\n  update-available-timeout: \"30s\"\n\n  # Timeout for downloading actual vulnerability DB\n  # The DB is ~156MB as of 2024-04-17 so slower connections may exceed the default timeout; adjust as needed\n  update-download-timeout: \"120s\"\n\n",
                      "markdown": "`  # This file is ~156KiB as of 2024-04-17 so the download should be quick; adjust as needed\n  update-available-timeout: \"30s\"\n\n  # Timeout for downloading actual vulnerability DB\n  # The DB is ~156MB as of 2024-04-17 so slower connections may exceed the default timeout; adjust as needed\n  update-download-timeout: \"120s\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 760,
                  "startColumn": 3,
                  "endLine": 760,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  # Default max age is 120h (or five days)\n  max-allowed-built-age: \"120h\"\n\n  # Timeout for downloading GRYPE_DB_UPDATE_URL to see if the database needs to be downloaded\n  # This file is ~156KiB as of 2024-04-17 so the download should be quick; adjust as needed\n  update-available-timeout: \"30s\"\n\n",
                    "rendered": {
                      "text": "  # Default max age is 120h (or five days)\n  max-allowed-built-age: \"120h\"\n\n  # Timeout for downloading GRYPE_DB_UPDATE_URL to see if the database needs to be downloaded\n  # This file is ~156KiB as of 2024-04-17 so the download should be quick; adjust as needed\n  update-available-timeout: \"30s\"\n\n",
                      "markdown": "`  # Default max age is 120h (or five days)\n  max-allowed-built-age: \"120h\"\n\n  # Timeout for downloading GRYPE_DB_UPDATE_URL to see if the database needs to be downloaded\n  # This file is ~156KiB as of 2024-04-17 so the download should be quick; adjust as needed\n  update-available-timeout: \"30s\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 756,
                  "startColumn": 17,
                  "endLine": 756,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  validate-age: true\n\n  # Max allowed age for vulnerability database,\n  # age being the time since it was built\n  # Default max age is 120h (or five days)\n  max-allowed-built-age: \"120h\"\n\n",
                    "rendered": {
                      "text": "  validate-age: true\n\n  # Max allowed age for vulnerability database,\n  # age being the time since it was built\n  # Default max age is 120h (or five days)\n  max-allowed-built-age: \"120h\"\n\n",
                      "markdown": "`  validate-age: true\n\n  # Max allowed age for vulnerability database,\n  # age being the time since it was built\n  # Default max age is 120h (or five days)\n  max-allowed-built-age: \"120h\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 748,
                  "startColumn": 31,
                  "endLine": 748,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  cache-dir: \"$XDG_CACHE_HOME/grype/db\"\n\n  # URL of the vulnerability database\n  # same as GRYPE_DB_UPDATE_URL env var\n  update-url: \"https://toolbox-data.anchore.io/grype/databases/listing.json\"\n\n  # it ensures db build is no older than the max-allowed-built-age\n",
                    "rendered": {
                      "text": "  cache-dir: \"$XDG_CACHE_HOME/grype/db\"\n\n  # URL of the vulnerability database\n  # same as GRYPE_DB_UPDATE_URL env var\n  update-url: \"https://toolbox-data.anchore.io/grype/databases/listing.json\"\n\n  # it ensures db build is no older than the max-allowed-built-age\n",
                      "markdown": "`  cache-dir: \"$XDG_CACHE_HOME/grype/db\"\n\n  # URL of the vulnerability database\n  # same as GRYPE_DB_UPDATE_URL env var\n  update-url: \"https://toolbox-data.anchore.io/grype/databases/listing.json\"\n\n  # it ensures db build is no older than the max-allowed-built-age\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 744,
                  "startColumn": 30,
                  "endLine": 744,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  auto-update: true\n\n  # location to write the vulnerability database cache\n  # same as GRYPE_DB_CACHE_DIR env var\n  cache-dir: \"$XDG_CACHE_HOME/grype/db\"\n\n  # URL of the vulnerability database\n",
                    "rendered": {
                      "text": "  auto-update: true\n\n  # location to write the vulnerability database cache\n  # same as GRYPE_DB_CACHE_DIR env var\n  cache-dir: \"$XDG_CACHE_HOME/grype/db\"\n\n  # URL of the vulnerability database\n",
                      "markdown": "`  auto-update: true\n\n  # location to write the vulnerability database cache\n  # same as GRYPE_DB_CACHE_DIR env var\n  cache-dir: \"$XDG_CACHE_HOME/grype/db\"\n\n  # URL of the vulnerability database\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 740,
                  "startColumn": 32,
                  "endLine": 740,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\ndb:\n  # check for database updates on execution\n  # same as GRYPE_DB_AUTO_UPDATE env var\n  auto-update: true\n\n  # location to write the vulnerability database cache\n",
                    "rendered": {
                      "text": "\ndb:\n  # check for database updates on execution\n  # same as GRYPE_DB_AUTO_UPDATE env var\n  auto-update: true\n\n  # location to write the vulnerability database cache\n",
                      "markdown": "`\ndb:\n  # check for database updates on execution\n  # same as GRYPE_DB_AUTO_UPDATE env var\n  auto-update: true\n\n  # location to write the vulnerability database cache\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 723,
                  "startColumn": 36,
                  "endLine": 723,
                  "endColumn": 41,
                  "snippet": {
                    "text": "match-upstream-kernel-headers: false\n\n# os and/or architecture to use when referencing container images (e.g. \"windows/armv6\" or \"arm64\")\n# same as --platform; GRYPE_PLATFORM env var\nplatform: \"\"\n\n# If using SBOM input, automatically generate CPEs when packages have none\n",
                    "rendered": {
                      "text": "match-upstream-kernel-headers: false\n\n# os and/or architecture to use when referencing container images (e.g. \"windows/armv6\" or \"arm64\")\n# same as --platform; GRYPE_PLATFORM env var\nplatform: \"\"\n\n# If using SBOM input, automatically generate CPEs when packages have none\n",
                      "markdown": "`match-upstream-kernel-headers: false\n\n# os and/or architecture to use when referencing container images (e.g. \"windows/armv6\" or \"arm64\")\n# same as --platform; GRYPE_PLATFORM env var\nplatform: \"\"\n\n# If using SBOM input, automatically generate CPEs when packages have none\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 715,
                  "startColumn": 35,
                  "endLine": 715,
                  "endColumn": 40,
                  "snippet": {
                    "text": "# exclude:\n#   - '/etc/**'\n#   - './out/**/*.json'\n# same as --exclude ; GRYPE_EXCLUDE env var\nexclude: []\n\n# include matches on kernel-headers packages that are matched against upstream kernel package\n",
                    "rendered": {
                      "text": "# exclude:\n#   - '/etc/**'\n#   - './out/**/*.json'\n# same as --exclude ; GRYPE_EXCLUDE env var\nexclude: []\n\n# include matches on kernel-headers packages that are matched against upstream kernel package\n",
                      "markdown": "`# exclude:\n#   - '/etc/**'\n#   - './out/**/*.json'\n# same as --exclude ; GRYPE_EXCLUDE env var\nexclude: []\n\n# include matches on kernel-headers packages that are matched against upstream kernel package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 708,
                  "startColumn": 28,
                  "endLine": 708,
                  "endColumn": 33,
                  "snippet": {
                    "text": "# output-template-file: .grype/html.tmpl\n\n# write output report to a file (default is to write to stdout)\n# same as --file; GRYPE_FILE env var\nfile: \"\"\n\n# a list of globs to exclude from scanning, for example:\n",
                    "rendered": {
                      "text": "# output-template-file: .grype/html.tmpl\n\n# write output report to a file (default is to write to stdout)\n# same as --file; GRYPE_FILE env var\nfile: \"\"\n\n# a list of globs to exclude from scanning, for example:\n",
                      "markdown": "`# output-template-file: .grype/html.tmpl\n\n# write output report to a file (default is to write to stdout)\n# same as --file; GRYPE_FILE env var\nfile: \"\"\n\n# a list of globs to exclude from scanning, for example:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 699,
                  "startColumn": 27,
                  "endLine": 699,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n# the output format of the vulnerability report (options: table, template, json, cyclonedx)\n# when using template as the output type, you must also provide a value for 'output-template-file'\n# same as -o ; GRYPE_OUTPUT env var\noutput: \"table\"\n\n# if using template output, you must provide a path to a Go template file\n",
                    "rendered": {
                      "text": "\n# the output format of the vulnerability report (options: table, template, json, cyclonedx)\n# when using template as the output type, you must also provide a value for 'output-template-file'\n# same as -o ; GRYPE_OUTPUT env var\noutput: \"table\"\n\n# if using template output, you must provide a path to a Go template file\n",
                      "markdown": "`\n# the output format of the vulnerability report (options: table, template, json, cyclonedx)\n# when using template as the output type, you must also provide a value for 'output-template-file'\n# same as -o ; GRYPE_OUTPUT env var\noutput: \"table\"\n\n# if using template output, you must provide a path to a Go template file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 694,
                  "startColumn": 44,
                  "endLine": 694,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n# upon scanning, if a severity is found at or above the given severity then the return code will be 1\n# default is unset which will skip this validation (options: negligible, low, medium, high, critical)\n# same as --fail-on ; GRYPE_FAIL_ON_SEVERITY env var\nfail-on-severity: \"\"\n\n# the output format of the vulnerability report (options: table, template, json, cyclonedx)\n",
                    "rendered": {
                      "text": "\n# upon scanning, if a severity is found at or above the given severity then the return code will be 1\n# default is unset which will skip this validation (options: negligible, low, medium, high, critical)\n# same as --fail-on ; GRYPE_FAIL_ON_SEVERITY env var\nfail-on-severity: \"\"\n\n# the output format of the vulnerability report (options: table, template, json, cyclonedx)\n",
                      "markdown": "`\n# upon scanning, if a severity is found at or above the given severity then the return code will be 1\n# default is unset which will skip this validation (options: negligible, low, medium, high, critical)\n# same as --fail-on ; GRYPE_FAIL_ON_SEVERITY env var\nfail-on-severity: \"\"\n\n# the output format of the vulnerability report (options: table, template, json, cyclonedx)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 686,
                  "startColumn": 41,
                  "endLine": 686,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n# allows users to specify which image source should be used to generate the sbom\n# valid values are: registry, docker, podman\n# same as GRYPE_DEFAULT_IMAGE_PULL_SOURCE env var\ndefault-image-pull-source: \"\"\n\n# same as --name; set the name of the target being analyzed\n",
                    "rendered": {
                      "text": "\n# allows users to specify which image source should be used to generate the sbom\n# valid values are: registry, docker, podman\n# same as GRYPE_DEFAULT_IMAGE_PULL_SOURCE env var\ndefault-image-pull-source: \"\"\n\n# same as --name; set the name of the target being analyzed\n",
                      "markdown": "`\n# allows users to specify which image source should be used to generate the sbom\n# valid values are: registry, docker, podman\n# same as GRYPE_DEFAULT_IMAGE_PULL_SOURCE env var\ndefault-image-pull-source: \"\"\n\n# same as --name; set the name of the target being analyzed\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 681,
                  "startColumn": 36,
                  "endLine": 681,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n```yaml\n# enable/disable checking for application updates on startup\n# same as GRYPE_CHECK_FOR_APP_UPDATE env var\ncheck-for-app-update: true\n\n# allows users to specify which image source should be used to generate the sbom\n",
                    "rendered": {
                      "text": "\n```yaml\n# enable/disable checking for application updates on startup\n# same as GRYPE_CHECK_FOR_APP_UPDATE env var\ncheck-for-app-update: true\n\n# allows users to specify which image source should be used to generate the sbom\n",
                      "markdown": "`\n```yaml\n# enable/disable checking for application updates on startup\n# same as GRYPE_CHECK_FOR_APP_UPDATE env var\ncheck-for-app-update: true\n\n# allows users to specify which image source should be used to generate the sbom\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 660,
                  "startColumn": 36,
                  "endLine": 660,
                  "endColumn": 44,
                  "snippet": {
                    "text": "3.  The user can now run `kubectl logs grype-private-registry-demo`. The logs should show the grype analysis for the `<private_image>` provided in the pod configuration.\n\nUsing the above information, users should be able to configure private registry access without having to do so in the `grype` or `syft` configuration files.\nThey will also not be dependent on a docker daemon, (or some other runtime software) for registry configuration and access.\n\n## Configuration\n\n",
                    "rendered": {
                      "text": "3.  The user can now run `kubectl logs grype-private-registry-demo`. The logs should show the grype analysis for the `<private_image>` provided in the pod configuration.\n\nUsing the above information, users should be able to configure private registry access without having to do so in the `grype` or `syft` configuration files.\nThey will also not be dependent on a docker daemon, (or some other runtime software) for registry configuration and access.\n\n## Configuration\n\n",
                      "markdown": "`3.  The user can now run `kubectl logs grype-private-registry-demo`. The logs should show the grype analysis for the `<private_image>` provided in the pod configuration.\n\nUsing the above information, users should be able to configure private registry access without having to do so in the `grype` or `syft` configuration files.\nThey will also not be dependent on a docker daemon, (or some other runtime software) for registry configuration and access.\n\n## Configuration\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 628,
                  "startColumn": 38,
                  "endLine": 628,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n        `kubectl apply -f secret.yaml`\n\n2.  Create your pod running grype. The env `DOCKER_CONFIG` is important because it advertises where to look for the credential file.\n    In the below example, setting `DOCKER_CONFIG=/config` informs grype that credentials can be found at `/config/config.json`.\n    This is why we used `config.json` as the key for our secret. When mounted into containers the secrets' key is used as the filename.\n    The `volumeMounts` section mounts our secret to `/config`. The `volumes` section names our volume and leverages the secret we created in step one.\n",
                    "rendered": {
                      "text": "\n        `kubectl apply -f secret.yaml`\n\n2.  Create your pod running grype. The env `DOCKER_CONFIG` is important because it advertises where to look for the credential file.\n    In the below example, setting `DOCKER_CONFIG=/config` informs grype that credentials can be found at `/config/config.json`.\n    This is why we used `config.json` as the key for our secret. When mounted into containers the secrets' key is used as the filename.\n    The `volumeMounts` section mounts our secret to `/config`. The `volumes` section names our volume and leverages the secret we created in step one.\n",
                      "markdown": "`\n        `kubectl apply -f secret.yaml`\n\n2.  Create your pod running grype. The env `DOCKER_CONFIG` is important because it advertises where to look for the credential file.\n    In the below example, setting `DOCKER_CONFIG=/config` informs grype that credentials can be found at `/config/config.json`.\n    This is why we used `config.json` as the key for our secret. When mounted into containers the secrets' key is used as the filename.\n    The `volumeMounts` section mounts our secret to `/config`. The `volumes` section names our volume and leverages the secret we created in step one.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 610,
                  "startColumn": 51,
                  "endLine": 610,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n### Docker Credentials in Kubernetes\n\nThe below section shows a simple workflow on how to mount this config file as a secret into a container on kubernetes.\n\n1.  Create a secret. The value of `config.json` is important. It refers to the specification detailed [here](https://github.com/google/go-containerregistry/tree/main/pkg/authn#the-config-file).\n    Below this section is the `secret.yaml` file that the pod configuration will consume as a volume.\n",
                    "rendered": {
                      "text": "\n### Docker Credentials in Kubernetes\n\nThe below section shows a simple workflow on how to mount this config file as a secret into a container on kubernetes.\n\n1.  Create a secret. The value of `config.json` is important. It refers to the specification detailed [here](https://github.com/google/go-containerregistry/tree/main/pkg/authn#the-config-file).\n    Below this section is the `secret.yaml` file that the pod configuration will consume as a volume.\n",
                      "markdown": "`\n### Docker Credentials in Kubernetes\n\nThe below section shows a simple workflow on how to mount this config file as a secret into a container on kubernetes.\n\n1.  Create a secret. The value of `config.json` is important. It refers to the specification detailed [here](https://github.com/google/go-containerregistry/tree/main/pkg/authn#the-config-file).\n    Below this section is the `secret.yaml` file that the pod configuration will consume as a volume.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 608,
                  "startColumn": 3,
                  "endLine": 608,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n`docker run -v ./config.json:/config/config.json -e \"DOCKER_CONFIG=/config\" anchore/grype:latest <private_image>`\n\n### Docker Credentials in Kubernetes\n\nThe below section shows a simple workflow on how to mount this config file as a secret into a container on kubernetes.\n\n",
                    "rendered": {
                      "text": "\n`docker run -v ./config.json:/config/config.json -e \"DOCKER_CONFIG=/config\" anchore/grype:latest <private_image>`\n\n### Docker Credentials in Kubernetes\n\nThe below section shows a simple workflow on how to mount this config file as a secret into a container on kubernetes.\n\n",
                      "markdown": "`\n`docker run -v ./config.json:/config/config.json -e \"DOCKER_CONFIG=/config\" anchore/grype:latest <private_image>`\n\n### Docker Credentials in Kubernetes\n\nThe below section shows a simple workflow on how to mount this config file as a secret into a container on kubernetes.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 584,
                  "startColumn": 9,
                  "endLine": 584,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n## Private Registry Authentication\n\n### Local Docker Credentials\n\nWhen a container runtime is not present, grype can still utilize credentials configured in common credential sources (such as `~/.docker/config.json`).\nIt will pull images from private registries using these credentials. The config file is where your credentials are stored when authenticating with private registries via some command like `docker login`.\n",
                    "rendered": {
                      "text": "\n## Private Registry Authentication\n\n### Local Docker Credentials\n\nWhen a container runtime is not present, grype can still utilize credentials configured in common credential sources (such as `~/.docker/config.json`).\nIt will pull images from private registries using these credentials. The config file is where your credentials are stored when authenticating with private registries via some command like `docker login`.\n",
                      "markdown": "`\n## Private Registry Authentication\n\n### Local Docker Credentials\n\nWhen a container runtime is not present, grype can still utilize credentials configured in common credential sources (such as `~/.docker/config.json`).\nIt will pull images from private registries using these credentials. The config file is where your credentials are stored when authenticating with private registries via some command like `docker login`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 579,
                  "startColumn": 81,
                  "endLine": 579,
                  "endColumn": 89,
                  "snippet": {
                    "text": "- `grype completion <bash|zsh|fish>`\n- `go run ./cmd/grype completion <bash|zsh|fish>`\n\nThis will output a shell script to STDOUT, which can then be used as a completion script for Grype. Running one of the above commands with the\n`-h` or `--help` flags will provide instructions on how to do that for your chosen shell.\n\n## Private Registry Authentication\n",
                    "rendered": {
                      "text": "- `grype completion <bash|zsh|fish>`\n- `go run ./cmd/grype completion <bash|zsh|fish>`\n\nThis will output a shell script to STDOUT, which can then be used as a completion script for Grype. Running one of the above commands with the\n`-h` or `--help` flags will provide instructions on how to do that for your chosen shell.\n\n## Private Registry Authentication\n",
                      "markdown": "`- `grype completion <bash|zsh|fish>`\n- `go run ./cmd/grype completion <bash|zsh|fish>`\n\nThis will output a shell script to STDOUT, which can then be used as a completion script for Grype. Running one of the above commands with the\n`-h` or `--help` flags will provide instructions on how to do that for your chosen shell.\n\n## Private Registry Authentication\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 579,
                  "startColumn": 24,
                  "endLine": 579,
                  "endColumn": 32,
                  "snippet": {
                    "text": "- `grype completion <bash|zsh|fish>`\n- `go run ./cmd/grype completion <bash|zsh|fish>`\n\nThis will output a shell script to STDOUT, which can then be used as a completion script for Grype. Running one of the above commands with the\n`-h` or `--help` flags will provide instructions on how to do that for your chosen shell.\n\n## Private Registry Authentication\n",
                    "rendered": {
                      "text": "- `grype completion <bash|zsh|fish>`\n- `go run ./cmd/grype completion <bash|zsh|fish>`\n\nThis will output a shell script to STDOUT, which can then be used as a completion script for Grype. Running one of the above commands with the\n`-h` or `--help` flags will provide instructions on how to do that for your chosen shell.\n\n## Private Registry Authentication\n",
                      "markdown": "`- `grype completion <bash|zsh|fish>`\n- `go run ./cmd/grype completion <bash|zsh|fish>`\n\nThis will output a shell script to STDOUT, which can then be used as a completion script for Grype. Running one of the above commands with the\n`-h` or `--help` flags will provide instructions on how to do that for your chosen shell.\n\n## Private Registry Authentication\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 569,
                  "endLine": 570,
                  "endColumn": 5,
                  "snippet": {
                    "text": "`grype db list` — download the listing file configured at `db.update-url` and show databases that are available for download\n\n`grype db import` — provide grype with a database archive to explicitly use (useful for offline DB updates)\n\nFind complete information on Grype's database commands by running `grype db --help`.\n\n## Shell completion\n\n",
                    "rendered": {
                      "text": "`grype db list` — download the listing file configured at `db.update-url` and show databases that are available for download\n\n`grype db import` — provide grype with a database archive to explicitly use (useful for offline DB updates)\n\nFind complete information on Grype's database commands by running `grype db --help`.\n\n## Shell completion\n\n",
                      "markdown": "``grype db list` — download the listing file configured at `db.update-url` and show databases that are available for download\n\n`grype db import` — provide grype with a database archive to explicitly use (useful for offline DB updates)\n\nFind complete information on Grype's database commands by running `grype db --help`.\n\n## Shell completion\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 546,
                  "startColumn": 386,
                  "endLine": 546,
                  "endColumn": 392,
                  "snippet": {
                    "text": "\n#### Data staleness\n\nGrype needs up-to-date vulnerability information to provide accurate matches. By default, it will fail execution if the local database was not built in the last 5 days. The data staleness check is configurable via the environment variable `GRYPE_DB_MAX_ALLOWED_BUILT_AGE` and `GRYPE_DB_VALIDATE_AGE` or the field `max-allowed-built-age` and `validate-age`, under `db`. It uses [golang's time duration syntax](https://pkg.go.dev/time#ParseDuration). Set `GRYPE_DB_VALIDATE_AGE` or `validate-age` to `false` to disable staleness check.\n\n#### Offline and air-gapped environments\n\n",
                    "rendered": {
                      "text": "\n#### Data staleness\n\nGrype needs up-to-date vulnerability information to provide accurate matches. By default, it will fail execution if the local database was not built in the last 5 days. The data staleness check is configurable via the environment variable `GRYPE_DB_MAX_ALLOWED_BUILT_AGE` and `GRYPE_DB_VALIDATE_AGE` or the field `max-allowed-built-age` and `validate-age`, under `db`. It uses [golang's time duration syntax](https://pkg.go.dev/time#ParseDuration). Set `GRYPE_DB_VALIDATE_AGE` or `validate-age` to `false` to disable staleness check.\n\n#### Offline and air-gapped environments\n\n",
                      "markdown": "`\n#### Data staleness\n\nGrype needs up-to-date vulnerability information to provide accurate matches. By default, it will fail execution if the local database was not built in the last 5 days. The data staleness check is configurable via the environment variable `GRYPE_DB_MAX_ALLOWED_BUILT_AGE` and `GRYPE_DB_VALIDATE_AGE` or the field `max-allowed-built-age` and `validate-age`, under `db`. It uses [golang's time duration syntax](https://pkg.go.dev/time#ParseDuration). Set `GRYPE_DB_VALIDATE_AGE` or `validate-age` to `false` to disable staleness check.\n\n#### Offline and air-gapped environments\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 161,
                  "endLine": 339,
                  "endColumn": 169,
                  "snippet": {
                    "text": "\n### Gating on severity of vulnerabilities\n\nYou can have Grype exit with an error if any vulnerabilities are reported at or above the specified severity level. This comes in handy when using Grype within a script or CI pipeline. To do this, use the `--fail-on <severity>` CLI flag.\n\nFor example, here's how you could trigger a CI pipeline failure if any vulnerabilities are found in the `ubuntu:latest` image with a severity of \"medium\" or higher:\n\n",
                    "rendered": {
                      "text": "\n### Gating on severity of vulnerabilities\n\nYou can have Grype exit with an error if any vulnerabilities are reported at or above the specified severity level. This comes in handy when using Grype within a script or CI pipeline. To do this, use the `--fail-on <severity>` CLI flag.\n\nFor example, here's how you could trigger a CI pipeline failure if any vulnerabilities are found in the `ubuntu:latest` image with a severity of \"medium\" or higher:\n\n",
                      "markdown": "`\n### Gating on severity of vulnerabilities\n\nYou can have Grype exit with an error if any vulnerabilities are reported at or above the specified severity level. This comes in handy when using Grype within a script or CI pipeline. To do this, use the `--fail-on <severity>` CLI flag.\n\nFor example, here's how you could trigger a CI pipeline failure if any vulnerabilities are found in the `ubuntu:latest` image with a severity of \"medium\" or higher:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 333,
                  "startColumn": 12,
                  "endLine": 333,
                  "endColumn": 18,
                  "snippet": {
                    "text": "...\n```\n\nYou can also find the template for the default \"table\" output format in the same place.\n\nGrype also includes a vast array of utility templating functions from [sprig](http://masterminds.github.io/sprig/) apart from the default golang [text/template](https://pkg.go.dev/text/template#hdr-Functions) to allow users to customize the output from Grype.\n\n",
                    "rendered": {
                      "text": "...\n```\n\nYou can also find the template for the default \"table\" output format in the same place.\n\nGrype also includes a vast array of utility templating functions from [sprig](http://masterminds.github.io/sprig/) apart from the default golang [text/template](https://pkg.go.dev/text/template#hdr-Functions) to allow users to customize the output from Grype.\n\n",
                      "markdown": "`...\n```\n\nYou can also find the template for the default \"table\" output format in the same place.\n\nGrype also includes a vast array of utility templating functions from [sprig](http://masterminds.github.io/sprig/) apart from the default golang [text/template](https://pkg.go.dev/text/template#hdr-Functions) to allow users to customize the output from Grype.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 14,
                  "endLine": 274,
                  "endColumn": 22,
                  "snippet": {
                    "text": "would exclude all `package.json` files under `/usr/foo`. For _directory scans_,\nit is required to begin path expressions with `./`, `*/`, or `**/`, all of which\nwill be resolved _relative to the specified scan directory_. Keep in mind, your shell\nmay attempt to expand wildcards, so put those parameters in single quotes, like:\n`'**/*.json'`.\n\n### External Sources\n",
                    "rendered": {
                      "text": "would exclude all `package.json` files under `/usr/foo`. For _directory scans_,\nit is required to begin path expressions with `./`, `*/`, or `**/`, all of which\nwill be resolved _relative to the specified scan directory_. Keep in mind, your shell\nmay attempt to expand wildcards, so put those parameters in single quotes, like:\n`'**/*.json'`.\n\n### External Sources\n",
                      "markdown": "`would exclude all `package.json` files under `/usr/foo`. For _directory scans_,\nit is required to begin path expressions with `./`, `*/`, or `**/`, all of which\nwill be resolved _relative to the specified scan directory_. Keep in mind, your shell\nmay attempt to expand wildcards, so put those parameters in single quotes, like:\n`'**/*.json'`.\n\n### External Sources\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 1,
                  "endLine": 226,
                  "endColumn": 9,
                  "snippet": {
                    "text": "```\nCOSIGN_EXPERIMENTAL=1 cosign verify-attestation caphill4/java-spdx-tools:latest \\\n| jq -r .payload \\\n| base64 --decode \\\n| jq -r .predicate.Data \\\n| grype\n```\n",
                    "rendered": {
                      "text": "```\nCOSIGN_EXPERIMENTAL=1 cosign verify-attestation caphill4/java-spdx-tools:latest \\\n| jq -r .payload \\\n| base64 --decode \\\n| jq -r .predicate.Data \\\n| grype\n```\n",
                      "markdown": "````\nCOSIGN_EXPERIMENTAL=1 cosign verify-attestation caphill4/java-spdx-tools:latest \\\n| jq -r .payload \\\n| base64 --decode \\\n| jq -r .predicate.Data \\\n| grype\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 41,
                  "endLine": 199,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Then scan for new vulnerabilities as frequently as needed\ngrype sbom:./sbom.json\n\n# (You can also pipe the SBOM into Grype)\ncat ./sbom.json | grype\n```\n\nGrype supports input of [Syft](https://github.com/anchore/syft), [SPDX](https://spdx.dev/), and [CycloneDX](https://cyclonedx.org/)\n",
                    "rendered": {
                      "text": "# Then scan for new vulnerabilities as frequently as needed\ngrype sbom:./sbom.json\n\n# (You can also pipe the SBOM into Grype)\ncat ./sbom.json | grype\n```\n\nGrype supports input of [Syft](https://github.com/anchore/syft), [SPDX](https://spdx.dev/), and [CycloneDX](https://cyclonedx.org/)\n",
                      "markdown": "`# Then scan for new vulnerabilities as frequently as needed\ngrype sbom:./sbom.json\n\n# (You can also pipe the SBOM into Grype)\ncat ./sbom.json | grype\n```\n\nGrype supports input of [Syft](https://github.com/anchore/syft), [SPDX](https://spdx.dev/), and [CycloneDX](https://cyclonedx.org/)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 2,
                  "endLine": 187,
                  "endColumn": 10,
                  "snippet": {
                    "text": "```\n\nIf an image source is not provided and cannot be detected from the given reference it is assumed the image should be pulled from the Docker daemon.\nIf docker is not present, then the Podman daemon is attempted next, followed by reaching out directly to the image registry last.\n\n\nThis default behavior can be overridden with the `default-image-pull-source` configuration option (See [Configuration](https://github.com/anchore/grype#configuration) for more details).\n",
                    "rendered": {
                      "text": "```\n\nIf an image source is not provided and cannot be detected from the given reference it is assumed the image should be pulled from the Docker daemon.\nIf docker is not present, then the Podman daemon is attempted next, followed by reaching out directly to the image registry last.\n\n\nThis default behavior can be overridden with the `default-image-pull-source` configuration option (See [Configuration](https://github.com/anchore/grype#configuration) for more details).\n",
                      "markdown": "````\n\nIf an image source is not provided and cannot be detected from the given reference it is assumed the image should be pulled from the Docker daemon.\nIf docker is not present, then the Podman daemon is attempted next, followed by reaching out directly to the image registry last.\n\n\nThis default behavior can be overridden with the `default-image-pull-source` configuration option (See [Configuration](https://github.com/anchore/grype#configuration) for more details).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 132,
                  "endLine": 186,
                  "endColumn": 140,
                  "snippet": {
                    "text": "registry:yourrepo/yourimage:tag        pull image directly from a registry (no container runtime required)\n```\n\nIf an image source is not provided and cannot be detected from the given reference it is assumed the image should be pulled from the Docker daemon.\nIf docker is not present, then the Podman daemon is attempted next, followed by reaching out directly to the image registry last.\n\n\n",
                    "rendered": {
                      "text": "registry:yourrepo/yourimage:tag        pull image directly from a registry (no container runtime required)\n```\n\nIf an image source is not provided and cannot be detected from the given reference it is assumed the image should be pulled from the Docker daemon.\nIf docker is not present, then the Podman daemon is attempted next, followed by reaching out directly to the image registry last.\n\n\n",
                      "markdown": "`registry:yourrepo/yourimage:tag        pull image directly from a registry (no container runtime required)\n```\n\nIf an image source is not provided and cannot be detected from the given reference it is assumed the image should be pulled from the Docker daemon.\nIf docker is not present, then the Podman daemon is attempted next, followed by reaching out directly to the image registry last.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 58,
                  "endLine": 175,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n```\npodman:yourrepo/yourimage:tag          use images from the Podman daemon\ndocker:yourrepo/yourimage:tag          use images from the Docker daemon\ndocker-archive:path/to/yourimage.tar   use a tarball from disk for archives created from \"docker save\"\noci-archive:path/to/yourimage.tar      use a tarball from disk for OCI archives (from Skopeo or otherwise)\noci-dir:path/to/yourimage              read directly from a path on disk for OCI layout directories (from Skopeo or otherwise)\n",
                    "rendered": {
                      "text": "\n```\npodman:yourrepo/yourimage:tag          use images from the Podman daemon\ndocker:yourrepo/yourimage:tag          use images from the Docker daemon\ndocker-archive:path/to/yourimage.tar   use a tarball from disk for archives created from \"docker save\"\noci-archive:path/to/yourimage.tar      use a tarball from disk for OCI archives (from Skopeo or otherwise)\noci-dir:path/to/yourimage              read directly from a path on disk for OCI layout directories (from Skopeo or otherwise)\n",
                      "markdown": "`\n```\npodman:yourrepo/yourimage:tag          use images from the Podman daemon\ndocker:yourrepo/yourimage:tag          use images from the Docker daemon\ndocker-archive:path/to/yourimage.tar   use a tarball from disk for archives created from \"docker save\"\noci-archive:path/to/yourimage.tar      use a tarball from disk for OCI archives (from Skopeo or otherwise)\noci-dir:path/to/yourimage              read directly from a path on disk for OCI layout directories (from Skopeo or otherwise)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 6,
                  "endLine": 150,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nTo run grype from a Docker container so it can scan a running container, use the following command:\n\n```yml\ndocker run --rm \\\n--volume /var/run/docker.sock:/var/run/docker.sock \\\n--name Grype anchore/grype:latest \\\n$(ImageName):$(ImageTag)\n",
                    "rendered": {
                      "text": "\nTo run grype from a Docker container so it can scan a running container, use the following command:\n\n```yml\ndocker run --rm \\\n--volume /var/run/docker.sock:/var/run/docker.sock \\\n--name Grype anchore/grype:latest \\\n$(ImageName):$(ImageTag)\n",
                      "markdown": "`\nTo run grype from a Docker container so it can scan a running container, use the following command:\n\n```yml\ndocker run --rm \\\n--volume /var/run/docker.sock:/var/run/docker.sock \\\n--name Grype anchore/grype:latest \\\n$(ImageName):$(ImageTag)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 19,
                  "endLine": 147,
                  "endColumn": 27,
                  "snippet": {
                    "text": "grype <image> --scope all-layers\n```\n\nTo run grype from a Docker container so it can scan a running container, use the following command:\n\n```yml\ndocker run --rm \\\n",
                    "rendered": {
                      "text": "grype <image> --scope all-layers\n```\n\nTo run grype from a Docker container so it can scan a running container, use the following command:\n\n```yml\ndocker run --rm \\\n",
                      "markdown": "`grype <image> --scope all-layers\n```\n\nTo run grype from a Docker container so it can scan a running container, use the following command:\n\n```yml\ndocker run --rm \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 7,
                  "endLine": 67,
                  "endColumn": 15,
                  "snippet": {
                    "text": "```bash\ncurl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin\n```\nInstall script options:\n-\t`-b`: Specify a custom installation directory (defaults to `./bin`)\n-\t`-d`: More verbose logging levels (`-d` for debug, `-dd` for trace)\n-\t`-v`: Verify the signature of the downloaded artifact before installation (requires [`cosign`](https://github.com/sigstore/cosign) to be installed)\n",
                    "rendered": {
                      "text": "```bash\ncurl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin\n```\nInstall script options:\n-\t`-b`: Specify a custom installation directory (defaults to `./bin`)\n-\t`-d`: More verbose logging levels (`-d` for debug, `-dd` for trace)\n-\t`-v`: Verify the signature of the downloaded artifact before installation (requires [`cosign`](https://github.com/sigstore/cosign) to be installed)\n",
                      "markdown": "````bash\ncurl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin\n```\nInstall script options:\n-\t`-b`: Specify a custom installation directory (defaults to `./bin`)\n-\t`-d`: More verbose logging levels (`-d` for debug, `-dd` for trace)\n-\t`-v`: Verify the signature of the downloaded artifact before installation (requires [`cosign`](https://github.com/sigstore/cosign) to be installed)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 7,
                  "endLine": 65,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n### Recommended\n\n```bash\ncurl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin\n```\nInstall script options:\n-\t`-b`: Specify a custom installation directory (defaults to `./bin`)\n",
                    "rendered": {
                      "text": "\n### Recommended\n\n```bash\ncurl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin\n```\nInstall script options:\n-\t`-b`: Specify a custom installation directory (defaults to `./bin`)\n",
                      "markdown": "`\n### Recommended\n\n```bash\ncurl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin\n```\nInstall script options:\n-\t`-b`: Specify a custom installation directory (defaults to `./bin`)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 3,
                  "endLine": 53,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  - Python (Egg, Wheel, Poetry, requirements.txt/setup.py files)\n  - Dotnet (deps.json)\n  - Golang (go.mod)\n  - PHP (Composer)\n  - Rust (Cargo)\n- Supports Docker, OCI and [Singularity](https://github.com/sylabs/singularity) image formats.\n- [OpenVEX](https://github.com/openvex) support for filtering and augmenting scanning results.\n",
                    "rendered": {
                      "text": "  - Python (Egg, Wheel, Poetry, requirements.txt/setup.py files)\n  - Dotnet (deps.json)\n  - Golang (go.mod)\n  - PHP (Composer)\n  - Rust (Cargo)\n- Supports Docker, OCI and [Singularity](https://github.com/sylabs/singularity) image formats.\n- [OpenVEX](https://github.com/openvex) support for filtering and augmenting scanning results.\n",
                      "markdown": "`  - Python (Egg, Wheel, Poetry, requirements.txt/setup.py files)\n  - Dotnet (deps.json)\n  - Golang (go.mod)\n  - PHP (Composer)\n  - Rust (Cargo)\n- Supports Docker, OCI and [Singularity](https://github.com/sylabs/singularity) image formats.\n- [OpenVEX](https://github.com/openvex) support for filtering and augmenting scanning results.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 3,
                  "endLine": 47,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  - Ubuntu\n  - Wolfi\n- Find vulnerabilities for language-specific packages:\n  - Ruby (Gems)\n  - Java (JAR, WAR, EAR, JPI, HPI)\n  - JavaScript (NPM, Yarn)\n  - Python (Egg, Wheel, Poetry, requirements.txt/setup.py files)\n",
                    "rendered": {
                      "text": "  - Ubuntu\n  - Wolfi\n- Find vulnerabilities for language-specific packages:\n  - Ruby (Gems)\n  - Java (JAR, WAR, EAR, JPI, HPI)\n  - JavaScript (NPM, Yarn)\n  - Python (Egg, Wheel, Poetry, requirements.txt/setup.py files)\n",
                      "markdown": "`  - Ubuntu\n  - Wolfi\n- Find vulnerabilities for language-specific packages:\n  - Ruby (Gems)\n  - Java (JAR, WAR, EAR, JPI, HPI)\n  - JavaScript (NPM, Yarn)\n  - Python (Egg, Wheel, Poetry, requirements.txt/setup.py files)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  - Red Hat (RHEL)\n  - Ubuntu\n  - Wolfi\n- Find vulnerabilities for language-specific packages:\n  - Ruby (Gems)\n  - Java (JAR, WAR, EAR, JPI, HPI)\n  - JavaScript (NPM, Yarn)\n",
                    "rendered": {
                      "text": "  - Red Hat (RHEL)\n  - Ubuntu\n  - Wolfi\n- Find vulnerabilities for language-specific packages:\n  - Ruby (Gems)\n  - Java (JAR, WAR, EAR, JPI, HPI)\n  - JavaScript (NPM, Yarn)\n",
                      "markdown": "`  - Red Hat (RHEL)\n  - Ubuntu\n  - Wolfi\n- Find vulnerabilities for language-specific packages:\n  - Ruby (Gems)\n  - Java (JAR, WAR, EAR, JPI, HPI)\n  - JavaScript (NPM, Yarn)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 3,
                  "endLine": 43,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  - Debian\n  - Distroless\n  - Oracle Linux\n  - Red Hat (RHEL)\n  - Ubuntu\n  - Wolfi\n- Find vulnerabilities for language-specific packages:\n",
                    "rendered": {
                      "text": "  - Debian\n  - Distroless\n  - Oracle Linux\n  - Red Hat (RHEL)\n  - Ubuntu\n  - Wolfi\n- Find vulnerabilities for language-specific packages:\n",
                      "markdown": "`  - Debian\n  - Distroless\n  - Oracle Linux\n  - Red Hat (RHEL)\n  - Ubuntu\n  - Wolfi\n- Find vulnerabilities for language-specific packages:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 3,
                  "endLine": 38,
                  "snippet": {
                    "text": "- Find vulnerabilities for major operating system packages:\n  - Alpine\n  - Amazon Linux\n  - BusyBox\n  - CentOS\n  - CBL-Mariner\n  - Debian\n  - Distroless\n",
                    "rendered": {
                      "text": "- Find vulnerabilities for major operating system packages:\n  - Alpine\n  - Amazon Linux\n  - BusyBox\n  - CentOS\n  - CBL-Mariner\n  - Debian\n  - Distroless\n",
                      "markdown": "`- Find vulnerabilities for major operating system packages:\n  - Alpine\n  - Amazon Linux\n  - BusyBox\n  - CentOS\n  - CBL-Mariner\n  - Debian\n  - Distroless\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 1,
                  "endLine": 34,
                  "endColumn": 7,
                  "snippet": {
                    "text": "## Features\n\n- Scan the contents of a container image or filesystem to find known vulnerabilities.\n- Find vulnerabilities for major operating system packages:\n  - Alpine\n  - Amazon Linux\n  - BusyBox\n",
                    "rendered": {
                      "text": "## Features\n\n- Scan the contents of a container image or filesystem to find known vulnerabilities.\n- Find vulnerabilities for major operating system packages:\n  - Alpine\n  - Amazon Linux\n  - BusyBox\n",
                      "markdown": "`## Features\n\n- Scan the contents of a container image or filesystem to find known vulnerabilities.\n- Find vulnerabilities for major operating system packages:\n  - Alpine\n  - Amazon Linux\n  - BusyBox\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/README.md"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 57,
                  "endLine": 33,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n## Features\n\n- Scan the contents of a container image or filesystem to find known vulnerabilities.\n- Find vulnerabilities for major operating system packages:\n  - Alpine\n  - Amazon Linux\n",
                    "rendered": {
                      "text": "\n## Features\n\n- Scan the contents of a container image or filesystem to find known vulnerabilities.\n- Find vulnerabilities for major operating system packages:\n  - Alpine\n  - Amazon Linux\n",
                      "markdown": "`\n## Features\n\n- Scan the contents of a container image or filesystem to find known vulnerabilities.\n- Find vulnerabilities for major operating system packages:\n  - Alpine\n  - Amazon Linux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/v4/diff.go"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 4,
                  "endLine": 11,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tDiffRemoved DiffReason = \"removed\"\n)\n\ntype Diff struct {\n\tReason    DiffReason `json:\"reason\"`\n\tID        string     `json:\"id\"`\n\tNamespace string     `json:\"namespace\"`\n",
                    "rendered": {
                      "text": "\tDiffRemoved DiffReason = \"removed\"\n)\n\ntype Diff struct {\n\tReason    DiffReason `json:\"reason\"`\n\tID        string     `json:\"id\"`\n\tNamespace string     `json:\"namespace\"`\n",
                      "markdown": "`\tDiffRemoved DiffReason = \"removed\"\n)\n\ntype Diff struct {\n\tReason    DiffReason `json:\"reason\"`\n\tID        string     `json:\"id\"`\n\tNamespace string     `json:\"namespace\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/vulnerability_provider_test.go"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 23,
                  "endLine": 210,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t}\n\n\t// prove we survive a bad request\n\tactual, err = provider.Get(\"CVE-2014-fake-3\", \"debian:distro:debian:8\")\n\trequire.NoError(t, err)\n\tassert.Empty(t, actual)\n}\n",
                    "rendered": {
                      "text": "\t}\n\n\t// prove we survive a bad request\n\tactual, err = provider.Get(\"CVE-2014-fake-3\", \"debian:distro:debian:8\")\n\trequire.NoError(t, err)\n\tassert.Empty(t, actual)\n}\n",
                      "markdown": "`\t}\n\n\t// prove we survive a bad request\n\tactual, err = provider.Get(\"CVE-2014-fake-3\", \"debian:distro:debian:8\")\n\trequire.NoError(t, err)\n\tassert.Empty(t, actual)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/db/vulnerability_provider_test.go"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 24,
                  "endLine": 186,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\tprovider, err := NewVulnerabilityProvider(newMockStore())\n\trequire.NoError(t, err)\n\n\tactual, err := provider.Get(\"CVE-2014-fake-1\", \"debian:distro:debian:8\")\n\trequire.NoError(t, err)\n\n\texpected := []vulnerability.Vulnerability{\n",
                    "rendered": {
                      "text": "\tprovider, err := NewVulnerabilityProvider(newMockStore())\n\trequire.NoError(t, err)\n\n\tactual, err := provider.Get(\"CVE-2014-fake-1\", \"debian:distro:debian:8\")\n\trequire.NoError(t, err)\n\n\texpected := []vulnerability.Vulnerability{\n",
                      "markdown": "`\tprovider, err := NewVulnerabilityProvider(newMockStore())\n\trequire.NoError(t, err)\n\n\tactual, err := provider.Get(\"CVE-2014-fake-1\", \"debian:distro:debian:8\")\n\trequire.NoError(t, err)\n\n\texpected := []vulnerability.Vulnerability{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/vex/openvex/implementation_test.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 4,
                  "endLine": 27,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\t\t[]string{\n\t\t\t\t\"cgr.dev/chainguard/curl@sha256:9543ed09a38605c25c75486573cf530bd886615b993d5e1d1aa58fe5491287bc\",\n\t\t\t\t\"pkg:oci/curl@sha256%3A9543ed09a38605c25c75486573cf530bd886615b993d5e1d1aa58fe5491287bc?repository_url=cgr.dev/chainguard\",\n\t\t\t\t\"9543ed09a38605c25c75486573cf530bd886615b993d5e1d1aa58fe5491287bc\",\n\t\t\t},\n\t\t},\n\t\t{\n",
                    "rendered": {
                      "text": "\t\t\t[]string{\n\t\t\t\t\"cgr.dev/chainguard/curl@sha256:9543ed09a38605c25c75486573cf530bd886615b993d5e1d1aa58fe5491287bc\",\n\t\t\t\t\"pkg:oci/curl@sha256%3A9543ed09a38605c25c75486573cf530bd886615b993d5e1d1aa58fe5491287bc?repository_url=cgr.dev/chainguard\",\n\t\t\t\t\"9543ed09a38605c25c75486573cf530bd886615b993d5e1d1aa58fe5491287bc\",\n\t\t\t},\n\t\t},\n\t\t{\n",
                      "markdown": "`\t\t\t[]string{\n\t\t\t\t\"cgr.dev/chainguard/curl@sha256:9543ed09a38605c25c75486573cf530bd886615b993d5e1d1aa58fe5491287bc\",\n\t\t\t\t\"pkg:oci/curl@sha256%3A9543ed09a38605c25c75486573cf530bd886615b993d5e1d1aa58fe5491287bc?repository_url=cgr.dev/chainguard\",\n\t\t\t\t\"9543ed09a38605c25c75486573cf530bd886615b993d5e1d1aa58fe5491287bc\",\n\t\t\t},\n\t\t},\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/vex/openvex/implementation_test.go"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 4,
                  "endLine": 19,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\t\t[]string{\n\t\t\t\t\"alpine@sha256:124c7d2707904eea7431fffe91522a01e5a861a624ee31d03372cc1d138a3126\",\n\t\t\t\t\"pkg:oci/alpine@sha256%3A124c7d2707904eea7431fffe91522a01e5a861a624ee31d03372cc1d138a3126?repository_url=index.docker.io/library\",\n\t\t\t\t\"124c7d2707904eea7431fffe91522a01e5a861a624ee31d03372cc1d138a3126\",\n\t\t\t},\n\t\t},\n\t\t{\n",
                    "rendered": {
                      "text": "\t\t\t[]string{\n\t\t\t\t\"alpine@sha256:124c7d2707904eea7431fffe91522a01e5a861a624ee31d03372cc1d138a3126\",\n\t\t\t\t\"pkg:oci/alpine@sha256%3A124c7d2707904eea7431fffe91522a01e5a861a624ee31d03372cc1d138a3126?repository_url=index.docker.io/library\",\n\t\t\t\t\"124c7d2707904eea7431fffe91522a01e5a861a624ee31d03372cc1d138a3126\",\n\t\t\t},\n\t\t},\n\t\t{\n",
                      "markdown": "`\t\t\t[]string{\n\t\t\t\t\"alpine@sha256:124c7d2707904eea7431fffe91522a01e5a861a624ee31d03372cc1d138a3126\",\n\t\t\t\t\"pkg:oci/alpine@sha256%3A124c7d2707904eea7431fffe91522a01e5a861a624ee31d03372cc1d138a3126?repository_url=index.docker.io/library\",\n\t\t\t\t\"124c7d2707904eea7431fffe91522a01e5a861a624ee31d03372cc1d138a3126\",\n\t\t\t},\n\t\t},\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/__snapshots__/explain_snapshot_test.snap"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 165,
                  "endLine": 93,
                  "endColumn": 173,
                  "snippet": {
                    "text": "/nvd.nist.gov/vuln/detail/CVE-2014-3577\n\n---\n\n[TestExplainSnapshot/test_a_CVE_alias_of_a_GHSA - 1]\nCVE-2014-3577 from nvd:cpe (Medium)\norg.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a \"CN=\" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the \"foo,CN=www.apache.org\" strin",
                    "rendered": {
                      "text": "/nvd.nist.gov/vuln/detail/CVE-2014-3577\n\n---\n\n[TestExplainSnapshot/test_a_CVE_alias_of_a_GHSA - 1]\nCVE-2014-3577 from nvd:cpe (Medium)\norg.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a \"CN=\" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the \"foo,CN=www.apache.org\" strin",
                      "markdown": "`/nvd.nist.gov/vuln/detail/CVE-2014-3577\n\n---\n\n[TestExplainSnapshot/test_a_CVE_alias_of_a_GHSA - 1]\nCVE-2014-3577 from nvd:cpe (Medium)\norg.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a \"CN=\" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the \"foo,CN=www.apache.org\" strin`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/__snapshots__/explain_snapshot_test.snap"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 192,
                  "endLine": 52,
                  "endColumn": 198,
                  "snippet": {
                    "text": "\n[TestExplainSnapshot/chainguard-ruby-CVE-2023-28755 - 1]\nCVE-2023-28755 from nvd:cpe (High)\nA ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\nRelated vulnerabilities:\n    - github:language:ruby GHSA-hv5j-3h9f-99c2 (High)\n    - wolfi:distro:wolfi:rolling CVE-2023-28755 (High)\n",
                    "rendered": {
                      "text": "\n[TestExplainSnapshot/chainguard-ruby-CVE-2023-28755 - 1]\nCVE-2023-28755 from nvd:cpe (High)\nA ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\nRelated vulnerabilities:\n    - github:language:ruby GHSA-hv5j-3h9f-99c2 (High)\n    - wolfi:distro:wolfi:rolling CVE-2023-28755 (High)\n",
                      "markdown": "`\n[TestExplainSnapshot/chainguard-ruby-CVE-2023-28755 - 1]\nCVE-2023-28755 from nvd:cpe (High)\nA ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\nRelated vulnerabilities:\n    - github:language:ruby GHSA-hv5j-3h9f-99c2 (High)\n    - wolfi:distro:wolfi:rolling CVE-2023-28755 (High)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/__snapshots__/explain_snapshot_test.snap"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 67,
                  "endLine": 52,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n[TestExplainSnapshot/chainguard-ruby-CVE-2023-28755 - 1]\nCVE-2023-28755 from nvd:cpe (High)\nA ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\nRelated vulnerabilities:\n    - github:language:ruby GHSA-hv5j-3h9f-99c2 (High)\n    - wolfi:distro:wolfi:rolling CVE-2023-28755 (High)\n",
                    "rendered": {
                      "text": "\n[TestExplainSnapshot/chainguard-ruby-CVE-2023-28755 - 1]\nCVE-2023-28755 from nvd:cpe (High)\nA ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\nRelated vulnerabilities:\n    - github:language:ruby GHSA-hv5j-3h9f-99c2 (High)\n    - wolfi:distro:wolfi:rolling CVE-2023-28755 (High)\n",
                      "markdown": "`\n[TestExplainSnapshot/chainguard-ruby-CVE-2023-28755 - 1]\nCVE-2023-28755 from nvd:cpe (High)\nA ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\nRelated vulnerabilities:\n    - github:language:ruby GHSA-hv5j-3h9f-99c2 (High)\n    - wolfi:distro:wolfi:rolling CVE-2023-28755 (High)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/__snapshots__/explain_snapshot_test.snap"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 148,
                  "endLine": 41,
                  "endColumn": 153,
                  "snippet": {
                    "text": "    - Package: nss-util, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-util@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\nURLs:\n",
                    "rendered": {
                      "text": "    - Package: nss-util, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-util@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\nURLs:\n",
                      "markdown": "`    - Package: nss-util, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-util@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\nURLs:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/__snapshots__/explain_snapshot_test.snap"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 136,
                  "endLine": 41,
                  "endColumn": 141,
                  "snippet": {
                    "text": "    - Package: nss-util, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-util@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\nURLs:\n",
                    "rendered": {
                      "text": "    - Package: nss-util, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-util@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\nURLs:\n",
                      "markdown": "`    - Package: nss-util, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-util@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\nURLs:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/__snapshots__/explain_snapshot_test.snap"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 148,
                  "endLine": 35,
                  "endColumn": 153,
                  "snippet": {
                    "text": "    - Package: nss-sysinit, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-sysinit@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-util, version: 3.79.0-17.el9_1\n",
                    "rendered": {
                      "text": "    - Package: nss-sysinit, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-sysinit@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-util, version: 3.79.0-17.el9_1\n",
                      "markdown": "`    - Package: nss-sysinit, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-sysinit@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-util, version: 3.79.0-17.el9_1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/__snapshots__/explain_snapshot_test.snap"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 136,
                  "endLine": 35,
                  "endColumn": 141,
                  "snippet": {
                    "text": "    - Package: nss-sysinit, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-sysinit@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-util, version: 3.79.0-17.el9_1\n",
                    "rendered": {
                      "text": "    - Package: nss-sysinit, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-sysinit@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-util, version: 3.79.0-17.el9_1\n",
                      "markdown": "`    - Package: nss-sysinit, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-sysinit@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-util, version: 3.79.0-17.el9_1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/__snapshots__/explain_snapshot_test.snap"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 148,
                  "endLine": 29,
                  "endColumn": 153,
                  "snippet": {
                    "text": "    - Package: nss-softokn-freebl, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-softokn-freebl@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-sysinit, version: 3.79.0-17.el9_1\n",
                    "rendered": {
                      "text": "    - Package: nss-softokn-freebl, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-softokn-freebl@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-sysinit, version: 3.79.0-17.el9_1\n",
                      "markdown": "`    - Package: nss-softokn-freebl, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-softokn-freebl@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-sysinit, version: 3.79.0-17.el9_1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/__snapshots__/explain_snapshot_test.snap"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 136,
                  "endLine": 29,
                  "endColumn": 141,
                  "snippet": {
                    "text": "    - Package: nss-softokn-freebl, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-softokn-freebl@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-sysinit, version: 3.79.0-17.el9_1\n",
                    "rendered": {
                      "text": "    - Package: nss-softokn-freebl, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-softokn-freebl@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-sysinit, version: 3.79.0-17.el9_1\n",
                      "markdown": "`    - Package: nss-softokn-freebl, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-softokn-freebl@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-sysinit, version: 3.79.0-17.el9_1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/__snapshots__/explain_snapshot_test.snap"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 148,
                  "endLine": 23,
                  "endColumn": 153,
                  "snippet": {
                    "text": "    - Package: nss-softokn, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-softokn@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-softokn-freebl, version: 3.79.0-17.el9_1\n",
                    "rendered": {
                      "text": "    - Package: nss-softokn, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-softokn@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-softokn-freebl, version: 3.79.0-17.el9_1\n",
                      "markdown": "`    - Package: nss-softokn, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-softokn@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-softokn-freebl, version: 3.79.0-17.el9_1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/__snapshots__/explain_snapshot_test.snap"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 136,
                  "endLine": 23,
                  "endColumn": 141,
                  "snippet": {
                    "text": "    - Package: nss-softokn, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-softokn@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-softokn-freebl, version: 3.79.0-17.el9_1\n",
                    "rendered": {
                      "text": "    - Package: nss-softokn, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-softokn@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-softokn-freebl, version: 3.79.0-17.el9_1\n",
                      "markdown": "`    - Package: nss-softokn, version: 3.79.0-17.el9_1\n      PURL: pkg:rpm/rhel/nss-softokn@3.79.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-softokn-freebl, version: 3.79.0-17.el9_1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/__snapshots__/explain_snapshot_test.snap"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 148,
                  "endLine": 17,
                  "endColumn": 153,
                  "snippet": {
                    "text": "    - Package: nspr, version: 4.34.0-17.el9_1\n      PURL: pkg:rpm/rhel/nspr@4.34.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-softokn, version: 3.79.0-17.el9_1\n",
                    "rendered": {
                      "text": "    - Package: nspr, version: 4.34.0-17.el9_1\n      PURL: pkg:rpm/rhel/nspr@4.34.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-softokn, version: 3.79.0-17.el9_1\n",
                      "markdown": "`    - Package: nspr, version: 4.34.0-17.el9_1\n      PURL: pkg:rpm/rhel/nspr@4.34.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-softokn, version: 3.79.0-17.el9_1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/__snapshots__/explain_snapshot_test.snap"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 136,
                  "endLine": 17,
                  "endColumn": 141,
                  "snippet": {
                    "text": "    - Package: nspr, version: 4.34.0-17.el9_1\n      PURL: pkg:rpm/rhel/nspr@4.34.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-softokn, version: 3.79.0-17.el9_1\n",
                    "rendered": {
                      "text": "    - Package: nspr, version: 4.34.0-17.el9_1\n      PURL: pkg:rpm/rhel/nspr@4.34.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-softokn, version: 3.79.0-17.el9_1\n",
                      "markdown": "`    - Package: nspr, version: 4.34.0-17.el9_1\n      PURL: pkg:rpm/rhel/nspr@4.34.0-17.el9_1?arch=x86_64&upstream=nss-3.79.0-17.el9_1.src.rpm&distro=rhel-9.1\n      Match explanation(s):\n          - redhat:distro:redhat:9:CVE-2020-12413 Indirect match; this CVE is reported against nss (version 3.79.0-17.el9_1), the source RPM of this rpm package.\n      Locations:\n          - /var/lib/rpm/rpmdb.sqlite\n    - Package: nss-softokn, version: 3.79.0-17.el9_1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/table/test-fixtures/snapshot/TestTablePresenter_Color.golden"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 39,
                  "endLine": 2,
                  "endColumn": 44,
                  "snippet": {
                    "text": "NAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  \u001b[0;32mLow\u001b[0m       \npackage-2  2.2.2                        deb   CVE-1999-0002  \u001b[1;31mCritical\u001b[0m  \n",
                    "rendered": {
                      "text": "NAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  \u001b[0;32mLow\u001b[0m       \npackage-2  2.2.2                        deb   CVE-1999-0002  \u001b[1;31mCritical\u001b[0m  \n",
                      "markdown": "`NAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  \u001b[0;32mLow\u001b[0m       \npackage-2  2.2.2                        deb   CVE-1999-0002  \u001b[1;31mCritical\u001b[0m  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/table/__snapshots__/presenter_test.snap"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 39,
                  "endLine": 33,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n[TestDisplaysIgnoredMatches - 1]\nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY                     \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  Low                           \npackage-2  2.2.2                        deb   CVE-1999-0002  Critical                      \npackage-2  2.2.2                        deb   CVE-1999-0004  Critical (suppressed by VEX)  \npackage-2  2.2.2                        deb   CVE-1999-0002  Critical (suppressed)         \n",
                    "rendered": {
                      "text": "\n[TestDisplaysIgnoredMatches - 1]\nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY                     \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  Low                           \npackage-2  2.2.2                        deb   CVE-1999-0002  Critical                      \npackage-2  2.2.2                        deb   CVE-1999-0004  Critical (suppressed by VEX)  \npackage-2  2.2.2                        deb   CVE-1999-0002  Critical (suppressed)         \n",
                      "markdown": "`\n[TestDisplaysIgnoredMatches - 1]\nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY                     \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  Low                           \npackage-2  2.2.2                        deb   CVE-1999-0002  Critical                      \npackage-2  2.2.2                        deb   CVE-1999-0004  Critical (suppressed by VEX)  \npackage-2  2.2.2                        deb   CVE-1999-0002  Critical (suppressed)         \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/table/__snapshots__/presenter_test.snap"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 39,
                  "endLine": 26,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n[TestHidesIgnoredMatches - 1]\nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  Low       \npackage-2  2.2.2                        deb   CVE-1999-0002  Critical  \n\n---\n",
                    "rendered": {
                      "text": "\n[TestHidesIgnoredMatches - 1]\nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  Low       \npackage-2  2.2.2                        deb   CVE-1999-0002  Critical  \n\n---\n",
                      "markdown": "`\n[TestHidesIgnoredMatches - 1]\nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  Low       \npackage-2  2.2.2                        deb   CVE-1999-0002  Critical  \n\n---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/table/__snapshots__/presenter_test.snap"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 39,
                  "endLine": 14,
                  "endColumn": 44,
                  "snippet": {
                    "text": "package-1  1.1.1      the-next-version  rpm   CVE-1999-0001  \u001b[0;32mLow\u001b[0m       \npackage-2  2.2.2                        deb   CVE-1999-0002  \u001b[1;31mCritical\u001b[0m  \nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  Low       \npackage-2  2.2.2                        deb   CVE-1999-0002  Critical  \n\n---\n",
                    "rendered": {
                      "text": "package-1  1.1.1      the-next-version  rpm   CVE-1999-0001  \u001b[0;32mLow\u001b[0m       \npackage-2  2.2.2                        deb   CVE-1999-0002  \u001b[1;31mCritical\u001b[0m  \nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  Low       \npackage-2  2.2.2                        deb   CVE-1999-0002  Critical  \n\n---\n",
                      "markdown": "`package-1  1.1.1      the-next-version  rpm   CVE-1999-0001  \u001b[0;32mLow\u001b[0m       \npackage-2  2.2.2                        deb   CVE-1999-0002  \u001b[1;31mCritical\u001b[0m  \nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  Low       \npackage-2  2.2.2                        deb   CVE-1999-0002  Critical  \n\n---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/table/__snapshots__/presenter_test.snap"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 39,
                  "endLine": 11,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n[TestTablePresenter/with_color - 1]\nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  \u001b[0;32mLow\u001b[0m       \npackage-2  2.2.2                        deb   CVE-1999-0002  \u001b[1;31mCritical\u001b[0m  \nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  Low       \n",
                    "rendered": {
                      "text": "\n[TestTablePresenter/with_color - 1]\nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  \u001b[0;32mLow\u001b[0m       \npackage-2  2.2.2                        deb   CVE-1999-0002  \u001b[1;31mCritical\u001b[0m  \nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  Low       \n",
                      "markdown": "`\n[TestTablePresenter/with_color - 1]\nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  \u001b[0;32mLow\u001b[0m       \npackage-2  2.2.2                        deb   CVE-1999-0002  \u001b[1;31mCritical\u001b[0m  \nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  Low       \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/table/__snapshots__/presenter_test.snap"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 39,
                  "endLine": 4,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n[TestTablePresenter/no_color - 1]\nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  \u001b[0;32mLow\u001b[0m       \npackage-2  2.2.2                        deb   CVE-1999-0002  \u001b[1;31mCritical\u001b[0m  \n\n---\n",
                    "rendered": {
                      "text": "\n[TestTablePresenter/no_color - 1]\nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  \u001b[0;32mLow\u001b[0m       \npackage-2  2.2.2                        deb   CVE-1999-0002  \u001b[1;31mCritical\u001b[0m  \n\n---\n",
                      "markdown": "`\n[TestTablePresenter/no_color - 1]\nNAME       INSTALLED  FIXED-IN          TYPE  VULNERABILITY  SEVERITY \npackage-1  1.1.1      the-next-version  rpm   CVE-1999-0001  \u001b[0;32mLow\u001b[0m       \npackage-2  2.2.2                        deb   CVE-1999-0002  \u001b[1;31mCritical\u001b[0m  \n\n---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/table/presenter_test.go"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 39,
                  "endLine": 188,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n\tactual := sortRows(data)\n\n\tif diff := cmp.Diff(expected, actual); diff != \"\" {\n\t\tt.Errorf(\"sortRows() mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n",
                    "rendered": {
                      "text": "\n\tactual := sortRows(data)\n\n\tif diff := cmp.Diff(expected, actual); diff != \"\" {\n\t\tt.Errorf(\"sortRows() mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n",
                      "markdown": "`\n\tactual := sortRows(data)\n\n\tif diff := cmp.Diff(expected, actual); diff != \"\" {\n\t\tt.Errorf(\"sortRows() mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/table/presenter_test.go"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 3,
                  "endLine": 188,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n\tactual := sortRows(data)\n\n\tif diff := cmp.Diff(expected, actual); diff != \"\" {\n\t\tt.Errorf(\"sortRows() mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n",
                    "rendered": {
                      "text": "\n\tactual := sortRows(data)\n\n\tif diff := cmp.Diff(expected, actual); diff != \"\" {\n\t\tt.Errorf(\"sortRows() mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n",
                      "markdown": "`\n\tactual := sortRows(data)\n\n\tif diff := cmp.Diff(expected, actual); diff != \"\" {\n\t\tt.Errorf(\"sortRows() mismatch (-want +got):\\n%s\", diff)\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/template/presenter.go"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 30,
                  "endLine": 53,
                  "endColumn": 38,
                  "snippet": {
                    "text": "func (pres *Presenter) Present(output io.Writer) error {\n\texpandedPathToTemplateFile, err := homedir.Expand(pres.pathToTemplateFile)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to expand path %q\", pres.pathToTemplateFile)\n\t}\n\n\ttemplateContents, err := os.ReadFile(expandedPathToTemplateFile)\n",
                    "rendered": {
                      "text": "func (pres *Presenter) Present(output io.Writer) error {\n\texpandedPathToTemplateFile, err := homedir.Expand(pres.pathToTemplateFile)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to expand path %q\", pres.pathToTemplateFile)\n\t}\n\n\ttemplateContents, err := os.ReadFile(expandedPathToTemplateFile)\n",
                      "markdown": "`func (pres *Presenter) Present(output io.Writer) error {\n\texpandedPathToTemplateFile, err := homedir.Expand(pres.pathToTemplateFile)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to expand path %q\", pres.pathToTemplateFile)\n\t}\n\n\ttemplateContents, err := os.ReadFile(expandedPathToTemplateFile)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/template/presenter.go"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 30,
                  "endLine": 53,
                  "endColumn": 38,
                  "snippet": {
                    "text": "func (pres *Presenter) Present(output io.Writer) error {\n\texpandedPathToTemplateFile, err := homedir.Expand(pres.pathToTemplateFile)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to expand path %q\", pres.pathToTemplateFile)\n\t}\n\n\ttemplateContents, err := os.ReadFile(expandedPathToTemplateFile)\n",
                    "rendered": {
                      "text": "func (pres *Presenter) Present(output io.Writer) error {\n\texpandedPathToTemplateFile, err := homedir.Expand(pres.pathToTemplateFile)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to expand path %q\", pres.pathToTemplateFile)\n\t}\n\n\ttemplateContents, err := os.ReadFile(expandedPathToTemplateFile)\n",
                      "markdown": "`func (pres *Presenter) Present(output io.Writer) error {\n\texpandedPathToTemplateFile, err := homedir.Expand(pres.pathToTemplateFile)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to expand path %q\", pres.pathToTemplateFile)\n\t}\n\n\ttemplateContents, err := os.ReadFile(expandedPathToTemplateFile)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/template/presenter_test.go"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\"github.com/anchore/grype/grype/presenter/models\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for template presenters\")\n\nfunc TestPresenter_Present(t *testing.T) {\n\t_, matches, packages, context, metadataProvider, appConfig, dbStatus := internal.GenerateAnalysis(t, internal.ImageSource)\n",
                    "rendered": {
                      "text": "\t\"github.com/anchore/grype/grype/presenter/models\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for template presenters\")\n\nfunc TestPresenter_Present(t *testing.T) {\n\t_, matches, packages, context, metadataProvider, appConfig, dbStatus := internal.GenerateAnalysis(t, internal.ImageSource)\n",
                      "markdown": "`\t\"github.com/anchore/grype/grype/presenter/models\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update the *.golden files for template presenters\")\n\nfunc TestPresenter_Present(t *testing.T) {\n\t_, matches, packages, context, metadataProvider, appConfig, dbStatus := internal.GenerateAnalysis(t, internal.ImageSource)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/json/test-fixtures/image-simple/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 53,
                  "endLine": 5,
                  "endColumn": 61,
                  "snippet": {
                    "text": "FROM scratch\nADD file-1.txt /somefile-1.txt\nADD file-2.txt /somefile-2.txt\n# note: adding a directory will behave differently on docker engine v18 vs v19\nADD target /\n",
                    "rendered": {
                      "text": "FROM scratch\nADD file-1.txt /somefile-1.txt\nADD file-2.txt /somefile-2.txt\n# note: adding a directory will behave differently on docker engine v18 vs v19\nADD target /\n",
                      "markdown": "`FROM scratch\nADD file-1.txt /somefile-1.txt\nADD file-2.txt /somefile-2.txt\n# note: adding a directory will behave differently on docker engine v18 vs v19\nADD target /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-grype-source.json"
                },
                "region": {
                  "startLine": 1019,
                  "startColumn": 26,
                  "endLine": 1019,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    \"installedSize\": 389120,\n    \"pullDependencies\": \"so:libc.musl-x86_64.so.1 so:libgcrypt.so.20 so:libgnutls.so.30 so:libjpeg.so.8 so:libpng16.so.16 so:libz.so.1\",\n    \"pullChecksum\": \"Q1z0MwWQKfva+S+q7XmOBYFfQgW/k=\",\n    \"gitCommitOfApkPort\": \"bf1ec813f662f128fc6b70f37ef1c0474bb24488\",\n    \"files\": [\n     {\n      \"path\": \"/usr\",\n",
                    "rendered": {
                      "text": "    \"installedSize\": 389120,\n    \"pullDependencies\": \"so:libc.musl-x86_64.so.1 so:libgcrypt.so.20 so:libgnutls.so.30 so:libjpeg.so.8 so:libpng16.so.16 so:libz.so.1\",\n    \"pullChecksum\": \"Q1z0MwWQKfva+S+q7XmOBYFfQgW/k=\",\n    \"gitCommitOfApkPort\": \"bf1ec813f662f128fc6b70f37ef1c0474bb24488\",\n    \"files\": [\n     {\n      \"path\": \"/usr\",\n",
                      "markdown": "`    \"installedSize\": 389120,\n    \"pullDependencies\": \"so:libc.musl-x86_64.so.1 so:libgcrypt.so.20 so:libgnutls.so.30 so:libjpeg.so.8 so:libpng16.so.16 so:libz.so.1\",\n    \"pullChecksum\": \"Q1z0MwWQKfva+S+q7XmOBYFfQgW/k=\",\n    \"gitCommitOfApkPort\": \"bf1ec813f662f128fc6b70f37ef1c0474bb24488\",\n    \"files\": [\n     {\n      \"path\": \"/usr\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/test/cli/test-fixtures/sbom-grype-source.json"
                },
                "region": {
                  "startLine": 981,
                  "startColumn": 29,
                  "endLine": 981,
                  "endColumn": 35,
                  "snippet": {
                    "text": "     \"artifactId\": \"joda-time\",\n     \"version\": \"2.9.2\",\n     \"name\": \"Joda-Time\",\n     \"description\": \"Date and time library to replace JDK date handling\",\n     \"url\": \"http://www.joda.org/joda-time/\"\n    }\n   }\n",
                    "rendered": {
                      "text": "     \"artifactId\": \"joda-time\",\n     \"version\": \"2.9.2\",\n     \"name\": \"Joda-Time\",\n     \"description\": \"Date and time library to replace JDK date handling\",\n     \"url\": \"http://www.joda.org/joda-time/\"\n    }\n   }\n",
                      "markdown": "`     \"artifactId\": \"joda-time\",\n     \"version\": \"2.9.2\",\n     \"name\": \"Joda-Time\",\n     \"description\": \"Date and time library to replace JDK date handling\",\n     \"url\": \"http://www.joda.org/joda-time/\"\n    }\n   }\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/ISSUE_TEMPLATE/bug_report.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 11,
                  "endLine": 23,
                  "endColumn": 19,
                  "snippet": {
                    "text": "1. Link to Dockerhub, GitHub, GitLab, maven central, quay.io, etc to a public\n   artifact we can try scanning\n2. A Dockerfile that we can build and scan\n3. A simple script that creates a directory exhibiting the issue, for example a\n   list of `npm install` commands\n\nPlease also include the grype command and any configuration used.\n",
                    "rendered": {
                      "text": "1. Link to Dockerhub, GitHub, GitLab, maven central, quay.io, etc to a public\n   artifact we can try scanning\n2. A Dockerfile that we can build and scan\n3. A simple script that creates a directory exhibiting the issue, for example a\n   list of `npm install` commands\n\nPlease also include the grype command and any configuration used.\n",
                      "markdown": "`1. Link to Dockerhub, GitHub, GitLab, maven central, quay.io, etc to a public\n   artifact we can try scanning\n2. A Dockerfile that we can build and scan\n3. A simple script that creates a directory exhibiting the issue, for example a\n   list of `npm install` commands\n\nPlease also include the grype command and any configuration used.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-syft-release.yml"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 45,
                  "endLine": 45,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5\n        with:\n",
                    "rendered": {
                      "text": "        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5\n        with:\n",
                      "markdown": "`        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-syft-release.yml"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 10,
                  "endLine": 45,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5\n        with:\n",
                    "rendered": {
                      "text": "        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5\n        with:\n",
                      "markdown": "`        id: generate-token\n        with:\n          app_id: ${{ secrets.TOKEN_APP_ID }}\n          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}\n\n      - uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-syft-release.yml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 11,
                  "endLine": 56,
                  "endColumn": 19,
                  "snippet": {
                    "text": "          commit-message: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          title: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          body: |\n            Update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\n          token: ${{ steps.generate-token.outputs.token }}\n",
                    "rendered": {
                      "text": "          commit-message: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          title: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          body: |\n            Update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\n          token: ${{ steps.generate-token.outputs.token }}\n",
                      "markdown": "`          commit-message: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          title: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          body: |\n            Update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\n          token: ${{ steps.generate-token.outputs.token }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-syft-release.yml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 30,
                  "endLine": 54,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          branch: auto/latest-syft\n          labels: dependencies\n          commit-message: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          title: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          body: |\n            Update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\n          token: ${{ steps.generate-token.outputs.token }}\n",
                    "rendered": {
                      "text": "          branch: auto/latest-syft\n          labels: dependencies\n          commit-message: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          title: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          body: |\n            Update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\n          token: ${{ steps.generate-token.outputs.token }}\n",
                      "markdown": "`          branch: auto/latest-syft\n          labels: dependencies\n          commit-message: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          title: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          body: |\n            Update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\n          token: ${{ steps.generate-token.outputs.token }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-syft-release.yml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 39,
                  "endLine": 53,
                  "endColumn": 47,
                  "snippet": {
                    "text": "          delete-branch: true\n          branch: auto/latest-syft\n          labels: dependencies\n          commit-message: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          title: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          body: |\n            Update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\n",
                    "rendered": {
                      "text": "          delete-branch: true\n          branch: auto/latest-syft\n          labels: dependencies\n          commit-message: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          title: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          body: |\n            Update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\n",
                      "markdown": "`          delete-branch: true\n          branch: auto/latest-syft\n          labels: dependencies\n          commit-message: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          title: \"chore(deps): update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\"\n          body: |\n            Update Syft to ${{ steps.latest-version.outputs.LATEST_VERSION }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/workflows/update-syft-release.yml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 11,
                  "endLine": 34,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        run: |\n          LATEST_VERSION=$(gh release view --json name -q '.name' -R anchore/syft)\n\n          # update go.mod\n          go get github.com/anchore/syft@$LATEST_VERSION\n          go mod tidy\n\n",
                    "rendered": {
                      "text": "        run: |\n          LATEST_VERSION=$(gh release view --json name -q '.name' -R anchore/syft)\n\n          # update go.mod\n          go get github.com/anchore/syft@$LATEST_VERSION\n          go mod tidy\n\n",
                      "markdown": "`        run: |\n          LATEST_VERSION=$(gh release view --json name -q '.name' -R anchore/syft)\n\n          # update go.mod\n          go get github.com/anchore/syft@$LATEST_VERSION\n          go mod tidy\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/update-version-file.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 63,
                  "endLine": 20,
                  "endColumn": 71,
                  "snippet": {
                    "text": "# create a version file for version-update checks\necho \"${VERSION}\" | tee \"${VERSION_FILE}\"\n\n# upload the version file that supports the application version update check\nexport AWS_DEFAULT_REGION=us-west-2\naws s3 cp \"${VERSION_FILE}\" s3://toolbox-data.anchore.io/${BIN}/releases/latest/VERSION\n",
                    "rendered": {
                      "text": "# create a version file for version-update checks\necho \"${VERSION}\" | tee \"${VERSION_FILE}\"\n\n# upload the version file that supports the application version update check\nexport AWS_DEFAULT_REGION=us-west-2\naws s3 cp \"${VERSION_FILE}\" s3://toolbox-data.anchore.io/${BIN}/releases/latest/VERSION\n",
                      "markdown": "`# create a version file for version-update checks\necho \"${VERSION}\" | tee \"${VERSION_FILE}\"\n\n# upload the version file that supports the application version update check\nexport AWS_DEFAULT_REGION=us-west-2\naws s3 cp \"${VERSION_FILE}\" s3://toolbox-data.anchore.io/${BIN}/releases/latest/VERSION\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/update-version-file.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 65,
                  "endLine": 8,
                  "endColumn": 73,
                  "snippet": {
                    "text": "VERSION_FILE=\"VERSION\"\nVERSION=$1\n\n# the source of truth as to whether we want to notify users of an update is if the release just created is NOT\n# flagged as a pre-release on github\nif [[ \"$(curl -SsL https://api.github.com/repos/anchore/${BIN}/releases/tags/${VERSION} | jq .prerelease)\" == \"true\" ]] ; then\n   echo \"skipping publishing a version file (this is a pre-release: ${VERSION})\"\n",
                    "rendered": {
                      "text": "VERSION_FILE=\"VERSION\"\nVERSION=$1\n\n# the source of truth as to whether we want to notify users of an update is if the release just created is NOT\n# flagged as a pre-release on github\nif [[ \"$(curl -SsL https://api.github.com/repos/anchore/${BIN}/releases/tags/${VERSION} | jq .prerelease)\" == \"true\" ]] ; then\n   echo \"skipping publishing a version file (this is a pre-release: ${VERSION})\"\n",
                      "markdown": "`VERSION_FILE=\"VERSION\"\nVERSION=$1\n\n# the source of truth as to whether we want to notify users of an update is if the release just created is NOT\n# flagged as a pre-release on github\nif [[ \"$(curl -SsL https://api.github.com/repos/anchore/${BIN}/releases/tags/${VERSION} | jq .prerelease)\" == \"true\" ]] ; then\n   echo \"skipping publishing a version file (this is a pre-release: ${VERSION})\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/update-version-file.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -ue\n\nBIN=\"grype\"\nVERSION_FILE=\"VERSION\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -ue\n\nBIN=\"grype\"\nVERSION_FILE=\"VERSION\"\n",
                      "markdown": "`#!/usr/bin/env bash\nset -ue\n\nBIN=\"grype\"\nVERSION_FILE=\"VERSION\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/update-version-file.sh"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6,
                  "endLine": 22,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n# upload the version file that supports the application version update check\nexport AWS_DEFAULT_REGION=us-west-2\naws s3 cp \"${VERSION_FILE}\" s3://toolbox-data.anchore.io/${BIN}/releases/latest/VERSION\n",
                    "rendered": {
                      "text": "\n# upload the version file that supports the application version update check\nexport AWS_DEFAULT_REGION=us-west-2\naws s3 cp \"${VERSION_FILE}\" s3://toolbox-data.anchore.io/${BIN}/releases/latest/VERSION\n",
                      "markdown": "`\n# upload the version file that supports the application version update check\nexport AWS_DEFAULT_REGION=us-west-2\naws s3 cp \"${VERSION_FILE}\" s3://toolbox-data.anchore.io/${BIN}/releases/latest/VERSION\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/update-version-file.sh"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 19,
                  "endLine": 18,
                  "endColumn": 24,
                  "snippet": {
                    "text": "echo \"creating and publishing version file (${VERSION})\"\n\n# create a version file for version-update checks\necho \"${VERSION}\" | tee \"${VERSION_FILE}\"\n\n# upload the version file that supports the application version update check\nexport AWS_DEFAULT_REGION=us-west-2\n",
                    "rendered": {
                      "text": "echo \"creating and publishing version file (${VERSION})\"\n\n# create a version file for version-update checks\necho \"${VERSION}\" | tee \"${VERSION_FILE}\"\n\n# upload the version file that supports the application version update check\nexport AWS_DEFAULT_REGION=us-west-2\n",
                      "markdown": "`echo \"creating and publishing version file (${VERSION})\"\n\n# create a version file for version-update checks\necho \"${VERSION}\" | tee \"${VERSION_FILE}\"\n\n# upload the version file that supports the application version update check\nexport AWS_DEFAULT_REGION=us-west-2\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/update-version-file.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -ue\n\nBIN=\"grype\"\nVERSION_FILE=\"VERSION\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -ue\n\nBIN=\"grype\"\nVERSION_FILE=\"VERSION\"\n",
                      "markdown": "`#!/usr/bin/env bash\nset -ue\n\nBIN=\"grype\"\nVERSION_FILE=\"VERSION\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/internal/file/getter_test.go"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 33,
                  "endLine": 212,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t}\n\n\tserver := httptest.NewTLSServer(mux)\n\tt.Logf(\"new TLS server listening at %s\", getHost(t, server))\n\n\treturn server\n}\n",
                    "rendered": {
                      "text": "\t}\n\n\tserver := httptest.NewTLSServer(mux)\n\tt.Logf(\"new TLS server listening at %s\", getHost(t, server))\n\n\treturn server\n}\n",
                      "markdown": "`\t}\n\n\tserver := httptest.NewTLSServer(mux)\n\tt.Logf(\"new TLS server listening at %s\", getHost(t, server))\n\n\treturn server\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.binny.yaml"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 8,
                  "endLine": 74,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    with:\n      repo: rinchsan/gosimports\n\n  # used at release to generate the changelog\n  - name: chronicle\n    version:\n      want: v0.8.0\n",
                    "rendered": {
                      "text": "    with:\n      repo: rinchsan/gosimports\n\n  # used at release to generate the changelog\n  - name: chronicle\n    version:\n      want: v0.8.0\n",
                      "markdown": "`    with:\n      repo: rinchsan/gosimports\n\n  # used at release to generate the changelog\n  - name: chronicle\n    version:\n      want: v0.8.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.binny.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 39,
                  "endLine": 42,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    with:\n      repo: charmbracelet/glow\n\n  # used for signing the checksums file at release\n  - name: cosign\n    version:\n      want: v2.4.1\n",
                    "rendered": {
                      "text": "    with:\n      repo: charmbracelet/glow\n\n  # used for signing the checksums file at release\n  - name: cosign\n    version:\n      want: v2.4.1\n",
                      "markdown": "`    with:\n      repo: charmbracelet/glow\n\n  # used for signing the checksums file at release\n  - name: cosign\n    version:\n      want: v2.4.1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.binny.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 34,
                  "endLine": 34,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    with:\n      repo: golangci/golangci-lint\n\n  # used for showing the changelog at release\n  - name: glow\n    version:\n      want: v2.0.0\n",
                    "rendered": {
                      "text": "    with:\n      repo: golangci/golangci-lint\n\n  # used for showing the changelog at release\n  - name: glow\n    version:\n      want: v2.0.0\n",
                      "markdown": "`    with:\n      repo: golangci/golangci-lint\n\n  # used for showing the changelog at release\n  - name: glow\n    version:\n      want: v2.0.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.binny.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 29,
                  "endLine": 18,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    with:\n      repo: anchore/syft\n\n  # used to sign mac binaries at release\n  - name: quill\n    version:\n      want: v0.4.2\n",
                    "rendered": {
                      "text": "    with:\n      repo: anchore/syft\n\n  # used to sign mac binaries at release\n  - name: quill\n    version:\n      want: v0.4.2\n",
                      "markdown": "`    with:\n      repo: anchore/syft\n\n  # used to sign mac binaries at release\n  - name: quill\n    version:\n      want: v0.4.2\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 409,
                  "startColumn": 5,
                  "endLine": 409,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    # desc: \"[CI only] Ensure the update URL is not overridden (not pointing to staging)\"\n    silent: true\n    cmd: |\n      bash -c '\\\n        grep -q \"update-url\" test/grype-test-config.yaml; \\\n        if [ $? -eq 0 ]; then \\\n          echo \"Found \\\"update-url\\\" in CLI testing config. Cannot release if previous CLI testing did not use production (default) values\"; \\\n",
                    "rendered": {
                      "text": "    # desc: \"[CI only] Ensure the update URL is not overridden (not pointing to staging)\"\n    silent: true\n    cmd: |\n      bash -c '\\\n        grep -q \"update-url\" test/grype-test-config.yaml; \\\n        if [ $? -eq 0 ]; then \\\n          echo \"Found \\\"update-url\\\" in CLI testing config. Cannot release if previous CLI testing did not use production (default) values\"; \\\n",
                      "markdown": "`    # desc: \"[CI only] Ensure the update URL is not overridden (not pointing to staging)\"\n    silent: true\n    cmd: |\n      bash -c '\\\n        grep -q \"update-url\" test/grype-test-config.yaml; \\\n        if [ $? -eq 0 ]; then \\\n          echo \"Found \\\"update-url\\\" in CLI testing config. Cannot release if previous CLI testing did not use production (default) values\"; \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 406,
                  "startColumn": 33,
                  "endLine": 406,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        - RELEASE_VERSION\n\n  ci-validate-test-config:\n    # desc: \"[CI only] Ensure the update URL is not overridden (not pointing to staging)\"\n    silent: true\n    cmd: |\n      bash -c '\\\n",
                    "rendered": {
                      "text": "        - RELEASE_VERSION\n\n  ci-validate-test-config:\n    # desc: \"[CI only] Ensure the update URL is not overridden (not pointing to staging)\"\n    silent: true\n    cmd: |\n      bash -c '\\\n",
                      "markdown": "`        - RELEASE_VERSION\n\n  ci-validate-test-config:\n    # desc: \"[CI only] Ensure the update URL is not overridden (not pointing to staging)\"\n    silent: true\n    cmd: |\n      bash -c '\\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 396,
                  "startColumn": 22,
                  "endLine": 396,
                  "endColumn": 30,
                  "snippet": {
                    "text": "      - \"{{ .RELEASE_CMD }}\"\n\n  ci-release-version-file:\n    # desc: \"[CI only] Update the version file\"\n    deps: [tools]\n    cmds:\n      - task: ci-check\n",
                    "rendered": {
                      "text": "      - \"{{ .RELEASE_CMD }}\"\n\n  ci-release-version-file:\n    # desc: \"[CI only] Update the version file\"\n    deps: [tools]\n    cmds:\n      - task: ci-check\n",
                      "markdown": "`      - \"{{ .RELEASE_CMD }}\"\n\n  ci-release-version-file:\n    # desc: \"[CI only] Update the version file\"\n    deps: [tools]\n    cmds:\n      - task: ci-check\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 9,
                  "endLine": 104,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    silent: true\n\n  update-quality-gate-db:\n    desc: Update pinned version of quality gate database\n    cmds:\n      - cmd: \"go run cmd/grype/main.go db list -o json | jq -r .[0].url > test/quality/test-db-url\"\n        silent: true\n",
                    "rendered": {
                      "text": "    silent: true\n\n  update-quality-gate-db:\n    desc: Update pinned version of quality gate database\n    cmds:\n      - cmd: \"go run cmd/grype/main.go db list -o json | jq -r .[0].url > test/quality/test-db-url\"\n        silent: true\n",
                      "markdown": "`    silent: true\n\n  update-quality-gate-db:\n    desc: Update pinned version of quality gate database\n    cmds:\n      - cmd: \"go run cmd/grype/main.go db list -o json | jq -r .[0].url > test/quality/test-db-url\"\n        silent: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 31,
                  "endLine": 100,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    generates:\n      - \".binny.yaml\"\n      - \"{{ .TOOL_DIR }}/*\"\n    cmd: \"{{ .TOOL_DIR }}/binny update -v\"\n    silent: true\n\n  update-quality-gate-db:\n",
                    "rendered": {
                      "text": "    generates:\n      - \".binny.yaml\"\n      - \"{{ .TOOL_DIR }}/*\"\n    cmd: \"{{ .TOOL_DIR }}/binny update -v\"\n    silent: true\n\n  update-quality-gate-db:\n",
                      "markdown": "`    generates:\n      - \".binny.yaml\"\n      - \"{{ .TOOL_DIR }}/*\"\n    cmd: \"{{ .TOOL_DIR }}/binny update -v\"\n    silent: true\n\n  update-quality-gate-db:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 9,
                  "endLine": 95,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    silent: true\n\n  update-tools:\n    desc: Update pinned versions of all tools to their latest available versions\n    deps: [binny]\n    generates:\n      - \".binny.yaml\"\n",
                    "rendered": {
                      "text": "    silent: true\n\n  update-tools:\n    desc: Update pinned versions of all tools to their latest available versions\n    deps: [binny]\n    generates:\n      - \".binny.yaml\"\n",
                      "markdown": "`    silent: true\n\n  update-tools:\n    desc: Update pinned versions of all tools to their latest available versions\n    deps: [binny]\n    generates:\n      - \".binny.yaml\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 135,
                  "endLine": 430,
                  "endColumn": 143,
                  "snippet": {
                    "text": "    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                    "rendered": {
                      "text": "    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                      "markdown": "`    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 126,
                  "endLine": 430,
                  "endColumn": 133,
                  "snippet": {
                    "text": "    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                    "rendered": {
                      "text": "    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                      "markdown": "`    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 119,
                  "endLine": 430,
                  "endColumn": 125,
                  "snippet": {
                    "text": "    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                    "rendered": {
                      "text": "    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                      "markdown": "`    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 99,
                  "endLine": 430,
                  "endColumn": 104,
                  "snippet": {
                    "text": "    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                    "rendered": {
                      "text": "    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                      "markdown": "`    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 71,
                  "endLine": 430,
                  "endColumn": 77,
                  "snippet": {
                    "text": "    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                    "rendered": {
                      "text": "    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                      "markdown": "`    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 49,
                  "endLine": 427,
                  "endColumn": 54,
                  "snippet": {
                    "text": "      - \"rm -rf {{ .TMP_DIR }}/goreleaser.yaml\"\n\n  clean-cache:\n    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                    "rendered": {
                      "text": "      - \"rm -rf {{ .TMP_DIR }}/goreleaser.yaml\"\n\n  clean-cache:\n    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                      "markdown": "`      - \"rm -rf {{ .TMP_DIR }}/goreleaser.yaml\"\n\n  clean-cache:\n    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 20,
                  "endLine": 427,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      - \"rm -rf {{ .TMP_DIR }}/goreleaser.yaml\"\n\n  clean-cache:\n    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                    "rendered": {
                      "text": "      - \"rm -rf {{ .TMP_DIR }}/goreleaser.yaml\"\n\n  clean-cache:\n    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n",
                      "markdown": "`      - \"rm -rf {{ .TMP_DIR }}/goreleaser.yaml\"\n\n  clean-cache:\n    desc: Remove all docker cache and local image tar cache\n    cmds:\n      - 'find . -type f -wholename \"**/test-fixtures/cache/stereoscope-fixture-*.tar\" -delete'\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}' | grep stereoscope-fixture- | awk '{print $$1}' | uniq | xargs -r docker rmi --force\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 7,
                  "endLine": 410,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    silent: true\n    cmd: |\n      bash -c '\\\n        grep -q \"update-url\" test/grype-test-config.yaml; \\\n        if [ $? -eq 0 ]; then \\\n          echo \"Found \\\"update-url\\\" in CLI testing config. Cannot release if previous CLI testing did not use production (default) values\"; \\\n        else\n",
                    "rendered": {
                      "text": "    silent: true\n    cmd: |\n      bash -c '\\\n        grep -q \"update-url\" test/grype-test-config.yaml; \\\n        if [ $? -eq 0 ]; then \\\n          echo \"Found \\\"update-url\\\" in CLI testing config. Cannot release if previous CLI testing did not use production (default) values\"; \\\n        else\n",
                      "markdown": "`    silent: true\n    cmd: |\n      bash -c '\\\n        grep -q \"update-url\" test/grype-test-config.yaml; \\\n        if [ $? -eq 0 ]; then \\\n          echo \"Found \\\"update-url\\\" in CLI testing config. Cannot release if previous CLI testing did not use production (default) values\"; \\\n        else\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 409,
                  "startColumn": 5,
                  "endLine": 409,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    # desc: \"[CI only] Ensure the update URL is not overridden (not pointing to staging)\"\n    silent: true\n    cmd: |\n      bash -c '\\\n        grep -q \"update-url\" test/grype-test-config.yaml; \\\n        if [ $? -eq 0 ]; then \\\n          echo \"Found \\\"update-url\\\" in CLI testing config. Cannot release if previous CLI testing did not use production (default) values\"; \\\n",
                    "rendered": {
                      "text": "    # desc: \"[CI only] Ensure the update URL is not overridden (not pointing to staging)\"\n    silent: true\n    cmd: |\n      bash -c '\\\n        grep -q \"update-url\" test/grype-test-config.yaml; \\\n        if [ $? -eq 0 ]; then \\\n          echo \"Found \\\"update-url\\\" in CLI testing config. Cannot release if previous CLI testing did not use production (default) values\"; \\\n",
                      "markdown": "`    # desc: \"[CI only] Ensure the update URL is not overridden (not pointing to staging)\"\n    silent: true\n    cmd: |\n      bash -c '\\\n        grep -q \"update-url\" test/grype-test-config.yaml; \\\n        if [ $? -eq 0 ]; then \\\n          echo \"Found \\\"update-url\\\" in CLI testing config. Cannot release if previous CLI testing did not use production (default) values\"; \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 9,
                  "endLine": 351,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - silent: true\n        cmd: |\n          echo \"dist: {{ .SNAPSHOT_DIR }}\" > {{ .TMP_DIR }}/goreleaser.yaml\n          cat .goreleaser.yaml >> {{ .TMP_DIR }}/goreleaser.yaml\n\n      - \"{{ .SNAPSHOT_CMD }}\"\n\n",
                    "rendered": {
                      "text": "      - silent: true\n        cmd: |\n          echo \"dist: {{ .SNAPSHOT_DIR }}\" > {{ .TMP_DIR }}/goreleaser.yaml\n          cat .goreleaser.yaml >> {{ .TMP_DIR }}/goreleaser.yaml\n\n      - \"{{ .SNAPSHOT_CMD }}\"\n\n",
                      "markdown": "`      - silent: true\n        cmd: |\n          echo \"dist: {{ .SNAPSHOT_DIR }}\" > {{ .TMP_DIR }}/goreleaser.yaml\n          cat .goreleaser.yaml >> {{ .TMP_DIR }}/goreleaser.yaml\n\n      - \"{{ .SNAPSHOT_CMD }}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 9,
                  "endLine": 331,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - silent: true\n        cmd: |\n          echo \"dist: {{ .SNAPSHOT_DIR }}\" > {{ .TMP_DIR }}/goreleaser.yaml\n          cat .goreleaser.yaml >> {{ .TMP_DIR }}/goreleaser.yaml\n\n      - \"{{ .BUILD_CMD }}\"\n\n",
                    "rendered": {
                      "text": "      - silent: true\n        cmd: |\n          echo \"dist: {{ .SNAPSHOT_DIR }}\" > {{ .TMP_DIR }}/goreleaser.yaml\n          cat .goreleaser.yaml >> {{ .TMP_DIR }}/goreleaser.yaml\n\n      - \"{{ .BUILD_CMD }}\"\n\n",
                      "markdown": "`      - silent: true\n        cmd: |\n          echo \"dist: {{ .SNAPSHOT_DIR }}\" > {{ .TMP_DIR }}/goreleaser.yaml\n          cat .goreleaser.yaml >> {{ .TMP_DIR }}/goreleaser.yaml\n\n      - \"{{ .BUILD_CMD }}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 86,
                  "endLine": 253,
                  "endColumn": 92,
                  "snippet": {
                    "text": "    silent: true\n    cmds:\n      - \"echo '\\nDocker daemon cache:'\"\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}:{{`{{.Tag}}`}}' | grep stereoscope-fixture- | sort\"\n      - \"echo '\\nTar cache:'\"\n      - 'find . -type f -wholename \"**/test-fixtures/snapshot/*\" | sort'\n\n",
                    "rendered": {
                      "text": "    silent: true\n    cmds:\n      - \"echo '\\nDocker daemon cache:'\"\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}:{{`{{.Tag}}`}}' | grep stereoscope-fixture- | sort\"\n      - \"echo '\\nTar cache:'\"\n      - 'find . -type f -wholename \"**/test-fixtures/snapshot/*\" | sort'\n\n",
                      "markdown": "`    silent: true\n    cmds:\n      - \"echo '\\nDocker daemon cache:'\"\n      - \"docker images --format '{{`{{.ID}}`}} {{`{{.Repository}}`}}:{{`{{.Tag}}`}}' | grep stereoscope-fixture- | sort\"\n      - \"echo '\\nTar cache:'\"\n      - 'find . -type f -wholename \"**/test-fixtures/snapshot/*\" | sort'\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 71,
                  "endLine": 192,
                  "endColumn": 77,
                  "snippet": {
                    "text": "      - tmpdir\n    vars:\n      TEST_PKGS:\n        sh: \"go list ./... | grep -v {{ .OWNER }}/{{ .PROJECT }}/test | grep -v {{ .OWNER }}/{{ .PROJECT }}/internal/test | tr '\\n' ' '\"\n\n      # unit test coverage threshold (in % coverage)\n      COVERAGE_THRESHOLD: 47\n",
                    "rendered": {
                      "text": "      - tmpdir\n    vars:\n      TEST_PKGS:\n        sh: \"go list ./... | grep -v {{ .OWNER }}/{{ .PROJECT }}/test | grep -v {{ .OWNER }}/{{ .PROJECT }}/internal/test | tr '\\n' ' '\"\n\n      # unit test coverage threshold (in % coverage)\n      COVERAGE_THRESHOLD: 47\n",
                      "markdown": "`      - tmpdir\n    vars:\n      TEST_PKGS:\n        sh: \"go list ./... | grep -v {{ .OWNER }}/{{ .PROJECT }}/test | grep -v {{ .OWNER }}/{{ .PROJECT }}/internal/test | tr '\\n' ' '\"\n\n      # unit test coverage threshold (in % coverage)\n      COVERAGE_THRESHOLD: 47\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 28,
                  "endLine": 192,
                  "endColumn": 34,
                  "snippet": {
                    "text": "      - tmpdir\n    vars:\n      TEST_PKGS:\n        sh: \"go list ./... | grep -v {{ .OWNER }}/{{ .PROJECT }}/test | grep -v {{ .OWNER }}/{{ .PROJECT }}/internal/test | tr '\\n' ' '\"\n\n      # unit test coverage threshold (in % coverage)\n      COVERAGE_THRESHOLD: 47\n",
                    "rendered": {
                      "text": "      - tmpdir\n    vars:\n      TEST_PKGS:\n        sh: \"go list ./... | grep -v {{ .OWNER }}/{{ .PROJECT }}/test | grep -v {{ .OWNER }}/{{ .PROJECT }}/internal/test | tr '\\n' ' '\"\n\n      # unit test coverage threshold (in % coverage)\n      COVERAGE_THRESHOLD: 47\n",
                      "markdown": "`      - tmpdir\n    vars:\n      TEST_PKGS:\n        sh: \"go list ./... | grep -v {{ .OWNER }}/{{ .PROJECT }}/test | grep -v {{ .OWNER }}/{{ .PROJECT }}/internal/test | tr '\\n' ' '\"\n\n      # unit test coverage threshold (in % coverage)\n      COVERAGE_THRESHOLD: 47\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 30,
                  "endLine": 153,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        sh: \"find . | grep -e ':' | grep -v -e 'test/quality/.yardstick' -e 'test/quality/vulnerability-match-labels' || true\"\n    deps: [tools]\n    cmds:\n      # ensure there are no go fmt differences\n      - cmd: 'test -z \"{{ .BAD_FMT_FILES }}\" || (echo \"files with gofmt issues: [{{ .BAD_FMT_FILES }}]\"; exit 1)'\n        silent: true\n      # ensure there are no files with \":\" in it (a known back case in the go ecosystem)\n",
                    "rendered": {
                      "text": "        sh: \"find . | grep -e ':' | grep -v -e 'test/quality/.yardstick' -e 'test/quality/vulnerability-match-labels' || true\"\n    deps: [tools]\n    cmds:\n      # ensure there are no go fmt differences\n      - cmd: 'test -z \"{{ .BAD_FMT_FILES }}\" || (echo \"files with gofmt issues: [{{ .BAD_FMT_FILES }}]\"; exit 1)'\n        silent: true\n      # ensure there are no files with \":\" in it (a known back case in the go ecosystem)\n",
                      "markdown": "`        sh: \"find . | grep -e ':' | grep -v -e 'test/quality/.yardstick' -e 'test/quality/vulnerability-match-labels' || true\"\n    deps: [tools]\n    cmds:\n      # ensure there are no go fmt differences\n      - cmd: 'test -z \"{{ .BAD_FMT_FILES }}\" || (echo \"files with gofmt issues: [{{ .BAD_FMT_FILES }}]\"; exit 1)'\n        silent: true\n      # ensure there are no files with \":\" in it (a known back case in the go ecosystem)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 35,
                  "endLine": 150,
                  "endColumn": 41,
                  "snippet": {
                    "text": "      BAD_FMT_FILES:\n        sh: gofmt -l -s .\n      BAD_FILE_NAMES:\n        sh: \"find . | grep -e ':' | grep -v -e 'test/quality/.yardstick' -e 'test/quality/vulnerability-match-labels' || true\"\n    deps: [tools]\n    cmds:\n      # ensure there are no go fmt differences\n",
                    "rendered": {
                      "text": "      BAD_FMT_FILES:\n        sh: gofmt -l -s .\n      BAD_FILE_NAMES:\n        sh: \"find . | grep -e ':' | grep -v -e 'test/quality/.yardstick' -e 'test/quality/vulnerability-match-labels' || true\"\n    deps: [tools]\n    cmds:\n      # ensure there are no go fmt differences\n",
                      "markdown": "`      BAD_FMT_FILES:\n        sh: gofmt -l -s .\n      BAD_FILE_NAMES:\n        sh: \"find . | grep -e ':' | grep -v -e 'test/quality/.yardstick' -e 'test/quality/vulnerability-match-labels' || true\"\n    deps: [tools]\n    cmds:\n      # ensure there are no go fmt differences\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 21,
                  "endLine": 150,
                  "endColumn": 27,
                  "snippet": {
                    "text": "      BAD_FMT_FILES:\n        sh: gofmt -l -s .\n      BAD_FILE_NAMES:\n        sh: \"find . | grep -e ':' | grep -v -e 'test/quality/.yardstick' -e 'test/quality/vulnerability-match-labels' || true\"\n    deps: [tools]\n    cmds:\n      # ensure there are no go fmt differences\n",
                    "rendered": {
                      "text": "      BAD_FMT_FILES:\n        sh: gofmt -l -s .\n      BAD_FILE_NAMES:\n        sh: \"find . | grep -e ':' | grep -v -e 'test/quality/.yardstick' -e 'test/quality/vulnerability-match-labels' || true\"\n    deps: [tools]\n    cmds:\n      # ensure there are no go fmt differences\n",
                      "markdown": "`      BAD_FMT_FILES:\n        sh: gofmt -l -s .\n      BAD_FILE_NAMES:\n        sh: \"find . | grep -e ':' | grep -v -e 'test/quality/.yardstick' -e 'test/quality/vulnerability-match-labels' || true\"\n    deps: [tools]\n    cmds:\n      # ensure there are no go fmt differences\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/Taskfile.yaml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7,
                  "endLine": 29,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  BUILD_CMD:    \"{{ .TOOL_DIR }}/goreleaser build   --config {{ .TMP_DIR }}/goreleaser.yaml --clean --snapshot --single-target\"\n  RELEASE_CMD:  \"{{ .TOOL_DIR }}/goreleaser release --clean --release-notes {{ .CHANGELOG }}\"\n  VERSION:\n    sh: git describe --dirty --always --tags\n\n  # used for install and acceptance testing\n  COMPARE_DIR: ./test/compare\n",
                    "rendered": {
                      "text": "  BUILD_CMD:    \"{{ .TOOL_DIR }}/goreleaser build   --config {{ .TMP_DIR }}/goreleaser.yaml --clean --snapshot --single-target\"\n  RELEASE_CMD:  \"{{ .TOOL_DIR }}/goreleaser release --clean --release-notes {{ .CHANGELOG }}\"\n  VERSION:\n    sh: git describe --dirty --always --tags\n\n  # used for install and acceptance testing\n  COMPARE_DIR: ./test/compare\n",
                      "markdown": "`  BUILD_CMD:    \"{{ .TOOL_DIR }}/goreleaser build   --config {{ .TMP_DIR }}/goreleaser.yaml --clean --snapshot --single-target\"\n  RELEASE_CMD:  \"{{ .TOOL_DIR }}/goreleaser release --clean --release-notes {{ .CHANGELOG }}\"\n  VERSION:\n    sh: git describe --dirty --always --tags\n\n  # used for install and acceptance testing\n  COMPARE_DIR: ./test/compare\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/test-fixtures/ghsa-test.json"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 189,
                  "endLine": 189,
                  "endColumn": 197,
                  "snippet": {
                    "text": "thread.html/rff42cfa5e7d75b7c1af0e37589140a8f1999e578a75738740b244bd4@%3Ccommits.cxf.apache.org%3E\"\n        ],\n        \"description\": \"org.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a \\\"CN=\\\" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the \\\"foo,CN=www.apache.org\\\" s",
                    "rendered": {
                      "text": "thread.html/rff42cfa5e7d75b7c1af0e37589140a8f1999e578a75738740b244bd4@%3Ccommits.cxf.apache.org%3E\"\n        ],\n        \"description\": \"org.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a \\\"CN=\\\" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the \\\"foo,CN=www.apache.org\\\" s",
                      "markdown": "`thread.html/rff42cfa5e7d75b7c1af0e37589140a8f1999e578a75738740b244bd4@%3Ccommits.cxf.apache.org%3E\"\n        ],\n        \"description\": \"org.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a \\\"CN=\\\" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the \\\"foo,CN=www.apache.org\\\" s`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/test-fixtures/ghsa-test.json"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 191,
                  "endLine": 74,
                  "endColumn": 199,
                  "snippet": {
                    "text": "ad.html/rff42cfa5e7d75b7c1af0e37589140a8f1999e578a75738740b244bd4@%3Ccommits.cxf.apache.org%3E\"\n          ],\n          \"description\": \"org.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a \\\"CN=\\\" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the \\\"foo,CN=www.apache.org\\\" s",
                    "rendered": {
                      "text": "ad.html/rff42cfa5e7d75b7c1af0e37589140a8f1999e578a75738740b244bd4@%3Ccommits.cxf.apache.org%3E\"\n          ],\n          \"description\": \"org.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a \\\"CN=\\\" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the \\\"foo,CN=www.apache.org\\\" s",
                      "markdown": "`ad.html/rff42cfa5e7d75b7c1af0e37589140a8f1999e578a75738740b244bd4@%3Ccommits.cxf.apache.org%3E\"\n          ],\n          \"description\": \"org.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a \\\"CN=\\\" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the \\\"foo,CN=www.apache.org\\\" s`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/test-fixtures/chainguard-ruby-test.json"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 218,
                  "endLine": 249,
                  "endColumn": 224,
                  "snippet": {
                    "text": "            \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n            \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n          ],\n          \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n          \"cvss\": [\n            {\n              \"version\": \"3.1\",\n",
                    "rendered": {
                      "text": "            \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n            \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n          ],\n          \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n          \"cvss\": [\n            {\n              \"version\": \"3.1\",\n",
                      "markdown": "`            \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n            \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n          ],\n          \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n          \"cvss\": [\n            {\n              \"version\": \"3.1\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/test-fixtures/chainguard-ruby-test.json"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 93,
                  "endLine": 249,
                  "endColumn": 99,
                  "snippet": {
                    "text": "            \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n            \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n          ],\n          \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n          \"cvss\": [\n            {\n              \"version\": \"3.1\",\n",
                    "rendered": {
                      "text": "            \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n            \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n          ],\n          \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n          \"cvss\": [\n            {\n              \"version\": \"3.1\",\n",
                      "markdown": "`            \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n            \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n          ],\n          \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n          \"cvss\": [\n            {\n              \"version\": \"3.1\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/test-fixtures/chainguard-ruby-test.json"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 216,
                  "endLine": 147,
                  "endColumn": 222,
                  "snippet": {
                    "text": "          \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n          \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n        ],\n        \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n        \"cvss\": [\n          {\n            \"version\": \"3.1\",\n",
                    "rendered": {
                      "text": "          \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n          \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n        ],\n        \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n        \"cvss\": [\n          {\n            \"version\": \"3.1\",\n",
                      "markdown": "`          \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n          \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n        ],\n        \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n        \"cvss\": [\n          {\n            \"version\": \"3.1\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/test-fixtures/chainguard-ruby-test.json"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 91,
                  "endLine": 147,
                  "endColumn": 97,
                  "snippet": {
                    "text": "          \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n          \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n        ],\n        \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n        \"cvss\": [\n          {\n            \"version\": \"3.1\",\n",
                    "rendered": {
                      "text": "          \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n          \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n        ],\n        \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n        \"cvss\": [\n          {\n            \"version\": \"3.1\",\n",
                      "markdown": "`          \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n          \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n        ],\n        \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n        \"cvss\": [\n          {\n            \"version\": \"3.1\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/test-fixtures/chainguard-ruby-test.json"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 218,
                  "endLine": 37,
                  "endColumn": 224,
                  "snippet": {
                    "text": "            \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n            \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n          ],\n          \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n          \"cvss\": [\n            {\n              \"version\": \"3.1\",\n",
                    "rendered": {
                      "text": "            \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n            \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n          ],\n          \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n          \"cvss\": [\n            {\n              \"version\": \"3.1\",\n",
                      "markdown": "`            \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n            \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n          ],\n          \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n          \"cvss\": [\n            {\n              \"version\": \"3.1\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/grype/presenter/explain/test-fixtures/chainguard-ruby-test.json"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 93,
                  "endLine": 37,
                  "endColumn": 99,
                  "snippet": {
                    "text": "            \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n            \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n          ],\n          \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n          \"cvss\": [\n            {\n              \"version\": \"3.1\",\n",
                    "rendered": {
                      "text": "            \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n            \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n          ],\n          \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n          \"cvss\": [\n            {\n              \"version\": \"3.1\",\n",
                      "markdown": "`            \"https://www.ruby-lang.org/en/news/2022/12/25/ruby-3-2-0-released/\",\n            \"https://www.ruby-lang.org/en/news/2023/03/28/redos-in-uri-cve-2023-28755/\"\n          ],\n          \"description\": \"A ReDoS issue was discovered in the URI component through 0.12.0 in Ruby through 3.2.1. The URI parser mishandles invalid URLs that have specific characters. It causes an increase in execution time for parsing strings to URI objects. The fixed versions are 0.12.1, 0.11.1, 0.10.2 and 0.10.0.1.\",\n          \"cvss\": [\n            {\n              \"version\": \"3.1\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/spdx.xsd"
                },
                "region": {
                  "startLine": 1362,
                  "startColumn": 68,
                  "endLine": 1362,
                  "endColumn": 77,
                  "snippet": {
                    "text": "            </xs:enumeration>\n            <xs:enumeration value=\"HPND-export-US\">\n                <xs:annotation>\n                    <xs:documentation>HPND with US Government export control warning</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"HPND-Markus-Kuhn\">\n",
                    "rendered": {
                      "text": "            </xs:enumeration>\n            <xs:enumeration value=\"HPND-export-US\">\n                <xs:annotation>\n                    <xs:documentation>HPND with US Government export control warning</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"HPND-Markus-Kuhn\">\n",
                      "markdown": "`            </xs:enumeration>\n            <xs:enumeration value=\"HPND-export-US\">\n                <xs:annotation>\n                    <xs:documentation>HPND with US Government export control warning</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"HPND-Markus-Kuhn\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/spdx.xsd"
                },
                "region": {
                  "startLine": 3073,
                  "startColumn": 44,
                  "endLine": 3073,
                  "endColumn": 53,
                  "snippet": {
                    "text": "            </xs:enumeration>\n            <xs:enumeration value=\"x11vnc-openssl-exception\">\n                <xs:annotation>\n                    <xs:documentation>x11vnc OpenSSL Exception</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n        </xs:restriction>\n",
                    "rendered": {
                      "text": "            </xs:enumeration>\n            <xs:enumeration value=\"x11vnc-openssl-exception\">\n                <xs:annotation>\n                    <xs:documentation>x11vnc OpenSSL Exception</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n        </xs:restriction>\n",
                      "markdown": "`            </xs:enumeration>\n            <xs:enumeration value=\"x11vnc-openssl-exception\">\n                <xs:annotation>\n                    <xs:documentation>x11vnc OpenSSL Exception</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n        </xs:restriction>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/spdx.xsd"
                },
                "region": {
                  "startLine": 3063,
                  "startColumn": 44,
                  "endLine": 3063,
                  "endColumn": 53,
                  "snippet": {
                    "text": "            </xs:enumeration>\n            <xs:enumeration value=\"vsftpd-openssl-exception\">\n                <xs:annotation>\n                    <xs:documentation>vsftpd OpenSSL exception</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"WxWindows-exception-3.1\">\n",
                    "rendered": {
                      "text": "            </xs:enumeration>\n            <xs:enumeration value=\"vsftpd-openssl-exception\">\n                <xs:annotation>\n                    <xs:documentation>vsftpd OpenSSL exception</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"WxWindows-exception-3.1\">\n",
                      "markdown": "`            </xs:enumeration>\n            <xs:enumeration value=\"vsftpd-openssl-exception\">\n                <xs:annotation>\n                    <xs:documentation>vsftpd OpenSSL exception</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"WxWindows-exception-3.1\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/spdx.xsd"
                },
                "region": {
                  "startLine": 3003,
                  "startColumn": 45,
                  "endLine": 3003,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            </xs:enumeration>\n            <xs:enumeration value=\"openvpn-openssl-exception\">\n                <xs:annotation>\n                    <xs:documentation>OpenVPN OpenSSL Exception</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"PS-or-PDF-font-exception-20170817\">\n",
                    "rendered": {
                      "text": "            </xs:enumeration>\n            <xs:enumeration value=\"openvpn-openssl-exception\">\n                <xs:annotation>\n                    <xs:documentation>OpenVPN OpenSSL Exception</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"PS-or-PDF-font-exception-20170817\">\n",
                      "markdown": "`            </xs:enumeration>\n            <xs:enumeration value=\"openvpn-openssl-exception\">\n                <xs:annotation>\n                    <xs:documentation>OpenVPN OpenSSL Exception</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"PS-or-PDF-font-exception-20170817\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/spdx.xsd"
                },
                "region": {
                  "startLine": 2848,
                  "startColumn": 48,
                  "endLine": 2848,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            </xs:enumeration>\n            <xs:enumeration value=\"cryptsetup-OpenSSL-exception\">\n                <xs:annotation>\n                    <xs:documentation>cryptsetup OpenSSL exception</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"DigiRule-FOSS-exception\">\n",
                    "rendered": {
                      "text": "            </xs:enumeration>\n            <xs:enumeration value=\"cryptsetup-OpenSSL-exception\">\n                <xs:annotation>\n                    <xs:documentation>cryptsetup OpenSSL exception</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"DigiRule-FOSS-exception\">\n",
                      "markdown": "`            </xs:enumeration>\n            <xs:enumeration value=\"cryptsetup-OpenSSL-exception\">\n                <xs:annotation>\n                    <xs:documentation>cryptsetup OpenSSL exception</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"DigiRule-FOSS-exception\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 6988,
                  "startColumn": 59,
                  "endLine": 6988,
                  "endColumn": 67,
                  "snippet": {
                    "text": "                                    <xs:enumeration value=\"shared-secret\"/>\n                                    <xs:enumeration value=\"tag\"/>\n                                    <xs:enumeration value=\"additional-data\"/>\n                                    <xs:enumeration value=\"password\"/>\n                                    <xs:enumeration value=\"credential\"/>\n                                    <xs:enumeration value=\"token\"/>\n                                    <xs:enumeration value=\"other\"/>\n",
                    "rendered": {
                      "text": "                                    <xs:enumeration value=\"shared-secret\"/>\n                                    <xs:enumeration value=\"tag\"/>\n                                    <xs:enumeration value=\"additional-data\"/>\n                                    <xs:enumeration value=\"password\"/>\n                                    <xs:enumeration value=\"credential\"/>\n                                    <xs:enumeration value=\"token\"/>\n                                    <xs:enumeration value=\"other\"/>\n",
                      "markdown": "`                                    <xs:enumeration value=\"shared-secret\"/>\n                                    <xs:enumeration value=\"tag\"/>\n                                    <xs:enumeration value=\"additional-data\"/>\n                                    <xs:enumeration value=\"password\"/>\n                                    <xs:enumeration value=\"credential\"/>\n                                    <xs:enumeration value=\"token\"/>\n                                    <xs:enumeration value=\"other\"/>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 6782,
                  "startColumn": 48,
                  "endLine": 6782,
                  "endColumn": 56,
                  "snippet": {
                    "text": "                                    <xs:enumeration value=\"pkcs5\">\n                                        <xs:annotation>\n                                            <xs:documentation>\n                                                Password-Based Cryptography Specification #5\n                                            </xs:documentation>\n                                        </xs:annotation>\n                                    </xs:enumeration>\n",
                    "rendered": {
                      "text": "                                    <xs:enumeration value=\"pkcs5\">\n                                        <xs:annotation>\n                                            <xs:documentation>\n                                                Password-Based Cryptography Specification #5\n                                            </xs:documentation>\n                                        </xs:annotation>\n                                    </xs:enumeration>\n",
                      "markdown": "`                                    <xs:enumeration value=\"pkcs5\">\n                                        <xs:annotation>\n                                            <xs:documentation>\n                                                Password-Based Cryptography Specification #5\n                                            </xs:documentation>\n                                        </xs:annotation>\n                                    </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 6301,
                  "startColumn": 48,
                  "endLine": 6301,
                  "endColumn": 56,
                  "snippet": {
                    "text": "                                                (or 'message') and produces a fixed-size string of characters, which is\n                                                typically a hash value. Hash functions are commonly used in various\n                                                cryptographic applications, including data integrity verification and\n                                                password hashing.\n                                            </xs:documentation>\n                                        </xs:annotation>\n                                    </xs:enumeration>\n",
                    "rendered": {
                      "text": "                                                (or 'message') and produces a fixed-size string of characters, which is\n                                                typically a hash value. Hash functions are commonly used in various\n                                                cryptographic applications, including data integrity verification and\n                                                password hashing.\n                                            </xs:documentation>\n                                        </xs:annotation>\n                                    </xs:enumeration>\n",
                      "markdown": "`                                                (or 'message') and produces a fixed-size string of characters, which is\n                                                typically a hash value. Hash functions are commonly used in various\n                                                cryptographic applications, including data integrity verification and\n                                                password hashing.\n                                            </xs:documentation>\n                                        </xs:annotation>\n                                    </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 6185,
                  "startColumn": 35,
                  "endLine": 6185,
                  "endColumn": 43,
                  "snippet": {
                    "text": "                        Cryptographic assets occur in several forms. Algorithms and protocols are most commonly\n                        implemented in specialized cryptographic libraries. They may however also be 'hardcoded'\n                        in software components. Certificates and related cryptographic material like keys, tokens,\n                        secrets or passwords are other cryptographic assets to be modelled.\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:simpleType>\n",
                    "rendered": {
                      "text": "                        Cryptographic assets occur in several forms. Algorithms and protocols are most commonly\n                        implemented in specialized cryptographic libraries. They may however also be 'hardcoded'\n                        in software components. Certificates and related cryptographic material like keys, tokens,\n                        secrets or passwords are other cryptographic assets to be modelled.\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:simpleType>\n",
                      "markdown": "`                        Cryptographic assets occur in several forms. Algorithms and protocols are most commonly\n                        implemented in specialized cryptographic libraries. They may however also be 'hardcoded'\n                        in software components. Certificates and related cryptographic material like keys, tokens,\n                        secrets or passwords are other cryptographic assets to be modelled.\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:simpleType>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1450,
                  "startColumn": 152,
                  "endLine": 1450,
                  "endColumn": 194,
                  "snippet": {
                    "text": "            </xs:enumeration>\n            <xs:enumeration value=\"risk-assessment\">\n                <xs:annotation>\n                    <xs:documentation>Identifies and analyzes the potential of future events that may negatively impact individuals, assets, and/or the environment. Risk assessments may also include judgments on the tolerability of each risk.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"vulnerability-assertion\">\n",
                    "rendered": {
                      "text": "            </xs:enumeration>\n            <xs:enumeration value=\"risk-assessment\">\n                <xs:annotation>\n                    <xs:documentation>Identifies and analyzes the potential of future events that may negatively impact individuals, assets, and/or the environment. Risk assessments may also include judgments on the tolerability of each risk.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"vulnerability-assertion\">\n",
                      "markdown": "`            </xs:enumeration>\n            <xs:enumeration value=\"risk-assessment\">\n                <xs:annotation>\n                    <xs:documentation>Identifies and analyzes the potential of future events that may negatively impact individuals, assets, and/or the environment. Risk assessments may also include judgments on the tolerability of each risk.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"vulnerability-assertion\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1048,
                  "startColumn": 48,
                  "endLine": 1048,
                  "endColumn": 111,
                  "snippet": {
                    "text": "            </xs:enumeration>\n            <xs:enumeration value=\"platform\">\n                <xs:annotation>\n                    <xs:documentation>A runtime environment which interprets or executes software. This may include\n                        runtimes such as those that execute bytecode or low-code/no-code application platforms.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "            </xs:enumeration>\n            <xs:enumeration value=\"platform\">\n                <xs:annotation>\n                    <xs:documentation>A runtime environment which interprets or executes software. This may include\n                        runtimes such as those that execute bytecode or low-code/no-code application platforms.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`            </xs:enumeration>\n            <xs:enumeration value=\"platform\">\n                <xs:annotation>\n                    <xs:documentation>A runtime environment which interprets or executes software. This may include\n                        runtimes such as those that execute bytecode or low-code/no-code application platforms.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 38,
                  "endLine": 318,
                  "endColumn": 73,
                  "snippet": {
                    "text": "                <xs:annotation>\n                    <xs:documentation>\n                        BOM produced that represents inventory that is running and operational. This may include staging\n                        or production environments and will generally encompass multiple SBOMs describing the applications\n                        and operating system, along with HBOMs describing the hardware that makes up the system. Operations\n                        Bill of Materials (OBOM) can provide full-stack inventory of runtime environments, configurations,\n                        and additional dependencies.\n",
                    "rendered": {
                      "text": "                <xs:annotation>\n                    <xs:documentation>\n                        BOM produced that represents inventory that is running and operational. This may include staging\n                        or production environments and will generally encompass multiple SBOMs describing the applications\n                        and operating system, along with HBOMs describing the hardware that makes up the system. Operations\n                        Bill of Materials (OBOM) can provide full-stack inventory of runtime environments, configurations,\n                        and additional dependencies.\n",
                      "markdown": "`                <xs:annotation>\n                    <xs:documentation>\n                        BOM produced that represents inventory that is running and operational. This may include staging\n                        or production environments and will generally encompass multiple SBOMs describing the applications\n                        and operating system, along with HBOMs describing the hardware that makes up the system. Operations\n                        Bill of Materials (OBOM) can provide full-stack inventory of runtime environments, configurations,\n                        and additional dependencies.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 3981,
                  "startColumn": 80,
                  "endLine": 3981,
                  "endColumn": 86,
                  "snippet": {
                    "text": "                                    <xs:element name=\"image\" type=\"bom:attachedTextType\" minOccurs=\"0\" maxOccurs=\"1\">\n                                        <xs:annotation>\n                                            <xs:documentation>\n                                                The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\n                                            </xs:documentation>\n                                        </xs:annotation>\n                                    </xs:element>\n",
                    "rendered": {
                      "text": "                                    <xs:element name=\"image\" type=\"bom:attachedTextType\" minOccurs=\"0\" maxOccurs=\"1\">\n                                        <xs:annotation>\n                                            <xs:documentation>\n                                                The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\n                                            </xs:documentation>\n                                        </xs:annotation>\n                                    </xs:element>\n",
                      "markdown": "`                                    <xs:element name=\"image\" type=\"bom:attachedTextType\" minOccurs=\"0\" maxOccurs=\"1\">\n                                        <xs:annotation>\n                                            <xs:documentation>\n                                                The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\n                                            </xs:documentation>\n                                        </xs:annotation>\n                                    </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 3158,
                  "startColumn": 104,
                  "endLine": 3158,
                  "endColumn": 110,
                  "snippet": {
                    "text": "minOccurs=\"0\" maxOccurs=\"1\">\n                                                                <xs:annotation>\n                                                                    <xs:documentation>\n                                                                        The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\n                                                                    </xs:documentation>\n                                                                </xs:annotation>\n                                                            </xs:element>\n          ",
                    "rendered": {
                      "text": "minOccurs=\"0\" maxOccurs=\"1\">\n                                                                <xs:annotation>\n                                                                    <xs:documentation>\n                                                                        The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\n                                                                    </xs:documentation>\n                                                                </xs:annotation>\n                                                            </xs:element>\n          ",
                      "markdown": "`minOccurs=\"0\" maxOccurs=\"1\">\n                                                                <xs:annotation>\n                                                                    <xs:documentation>\n                                                                        The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\n                                                                    </xs:documentation>\n                                                                </xs:annotation>\n                                                            </xs:element>\n          `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1239,
                  "startColumn": 35,
                  "endLine": 1239,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    <xs:simpleType name=\"encoding\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"base64\"/>\n        </xs:restriction>\n    </xs:simpleType>\n\n",
                    "rendered": {
                      "text": "\n    <xs:simpleType name=\"encoding\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"base64\"/>\n        </xs:restriction>\n    </xs:simpleType>\n\n",
                      "markdown": "`\n    <xs:simpleType name=\"encoding\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"base64\"/>\n        </xs:restriction>\n    </xs:simpleType>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 6401,
                  "startColumn": 110,
                  "endLine": 6402,
                  "snippet": {
                    "text": " of the level of security strength, performance and complexity. Absent an\n                                    authoritative source of curve names, CycloneDX recommends use of curve names as\n                                    defined at https://neuromancer.sk/std/, the source from which can be found at\n                                    https://github.com/J08nY/std-curves.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n                        <xs:element name=\"executionEnvironment\" minOccurs=\"0\" maxOccurs=\"1\">",
                    "rendered": {
                      "text": " of the level of security strength, performance and complexity. Absent an\n                                    authoritative source of curve names, CycloneDX recommends use of curve names as\n                                    defined at https://neuromancer.sk/std/, the source from which can be found at\n                                    https://github.com/J08nY/std-curves.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n                        <xs:element name=\"executionEnvironment\" minOccurs=\"0\" maxOccurs=\"1\">",
                      "markdown": "` of the level of security strength, performance and complexity. Absent an\n                                    authoritative source of curve names, CycloneDX recommends use of curve names as\n                                    defined at https://neuromancer.sk/std/, the source from which can be found at\n                                    https://github.com/J08nY/std-curves.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n                        <xs:element name=\"executionEnvironment\" minOccurs=\"0\" maxOccurs=\"1\">`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 6401,
                  "startColumn": 43,
                  "endLine": 6401,
                  "endColumn": 47,
                  "snippet": {
                    "text": " employed which is an indicator\n                                    of the level of security strength, performance and complexity. Absent an\n                                    authoritative source of curve names, CycloneDX recommends use of curve names as\n                                    defined at https://neuromancer.sk/std/, the source from which can be found at\n                                    https://github.com/J08nY/std-curves.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n                        <",
                    "rendered": {
                      "text": " employed which is an indicator\n                                    of the level of security strength, performance and complexity. Absent an\n                                    authoritative source of curve names, CycloneDX recommends use of curve names as\n                                    defined at https://neuromancer.sk/std/, the source from which can be found at\n                                    https://github.com/J08nY/std-curves.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n                        <",
                      "markdown": "` employed which is an indicator\n                                    of the level of security strength, performance and complexity. Absent an\n                                    authoritative source of curve names, CycloneDX recommends use of curve names as\n                                    defined at https://neuromancer.sk/std/, the source from which can be found at\n                                    https://github.com/J08nY/std-curves.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n                        <`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 6023,
                  "startColumn": 64,
                  "endLine": 6023,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    <xs:complexType name=\"outputType\">\n        <xs:annotation>\n            <xs:documentation>\n                Represents resources and data output from a task at runtime by executor or task commands\n            </xs:documentation>\n        </xs:annotation>\n        <xs:sequence>\n",
                    "rendered": {
                      "text": "    <xs:complexType name=\"outputType\">\n        <xs:annotation>\n            <xs:documentation>\n                Represents resources and data output from a task at runtime by executor or task commands\n            </xs:documentation>\n        </xs:annotation>\n        <xs:sequence>\n",
                      "markdown": "`    <xs:complexType name=\"outputType\">\n        <xs:annotation>\n            <xs:documentation>\n                Represents resources and data output from a task at runtime by executor or task commands\n            </xs:documentation>\n        </xs:annotation>\n        <xs:sequence>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5810,
                  "startColumn": 72,
                  "endLine": 5810,
                  "endColumn": 76,
                  "snippet": {
                    "text": "            <xs:element name=\"outputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Represents resources and data output from a task at runtime by executor or task commands\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"outputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Represents resources and data output from a task at runtime by executor or task commands\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                      "markdown": "`            <xs:element name=\"outputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Represents resources and data output from a task at runtime by executor or task commands\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5798,
                  "startColumn": 73,
                  "endLine": 5798,
                  "endColumn": 77,
                  "snippet": {
                    "text": "            <xs:element name=\"inputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Represents resources and data brought into a task at runtime by executor or task commands\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"inputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Represents resources and data brought into a task at runtime by executor or task commands\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                      "markdown": "`            <xs:element name=\"inputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Represents resources and data brought into a task at runtime by executor or task commands\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5482,
                  "startColumn": 94,
                  "endLine": 5482,
                  "endColumn": 98,
                  "snippet": {
                    "text": "                <xs:annotation>\n                    <xs:documentation>\n                        The name of a domain-specific data type the workspace represents. This property is for CI/CD\n                        frameworks that are able to provide access to structured, managed data at a more granular level\n                        than a filesystem.\n                    </xs:documentation>\n                </xs:annotation>\n",
                    "rendered": {
                      "text": "                <xs:annotation>\n                    <xs:documentation>\n                        The name of a domain-specific data type the workspace represents. This property is for CI/CD\n                        frameworks that are able to provide access to structured, managed data at a more granular level\n                        than a filesystem.\n                    </xs:documentation>\n                </xs:annotation>\n",
                      "markdown": "`                <xs:annotation>\n                    <xs:documentation>\n                        The name of a domain-specific data type the workspace represents. This property is for CI/CD\n                        frameworks that are able to provide access to structured, managed data at a more granular level\n                        than a filesystem.\n                    </xs:documentation>\n                </xs:annotation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5467,
                  "startColumn": 55,
                  "endLine": 5467,
                  "endColumn": 64,
                  "snippet": {
                    "text": "            <xs:element name=\"accessMode\" type=\"bom:accessModeEnum\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Describes the read-write access control for the workspace relative to the owning resource instance.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"accessMode\" type=\"bom:accessModeEnum\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Describes the read-write access control for the workspace relative to the owning resource instance.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"accessMode\" type=\"bom:accessModeEnum\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Describes the read-write access control for the workspace relative to the owning resource instance.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5261,
                  "startColumn": 72,
                  "endLine": 5261,
                  "endColumn": 76,
                  "snippet": {
                    "text": "            <xs:element name=\"outputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Represents resources and data output from a task at runtime by executor or task commands\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"outputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Represents resources and data output from a task at runtime by executor or task commands\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                      "markdown": "`            <xs:element name=\"outputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Represents resources and data output from a task at runtime by executor or task commands\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5249,
                  "startColumn": 73,
                  "endLine": 5249,
                  "endColumn": 77,
                  "snippet": {
                    "text": "            <xs:element name=\"inputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Represents resources and data brought into a task at runtime by executor or task commands.\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"inputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Represents resources and data brought into a task at runtime by executor or task commands.\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                      "markdown": "`            <xs:element name=\"inputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Represents resources and data brought into a task at runtime by executor or task commands.\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5040,
                  "startColumn": 86,
                  "endLine": 5040,
                  "endColumn": 90,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"outputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>Represents resources and data output from a task at runtime by executor\n                        or task commands</xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"outputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>Represents resources and data output from a task at runtime by executor\n                        or task commands</xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"outputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>Represents resources and data output from a task at runtime by executor\n                        or task commands</xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5029,
                  "startColumn": 87,
                  "endLine": 5029,
                  "endColumn": 91,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"inputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>Represents resources and data brought into a task at runtime by executor\n                        or task commands</xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"inputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>Represents resources and data brought into a task at runtime by executor\n                        or task commands</xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"inputs\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>Represents resources and data brought into a task at runtime by executor\n                        or task commands</xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4817,
                  "startColumn": 84,
                  "endLine": 4817,
                  "endColumn": 88,
                  "snippet": {
                    "text": "            <xs:enumeration value=\"SSVC\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Stakeholder Specific Vulnerability Categorization as defined at https://github.com/CERTCC/SSVC\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "            <xs:enumeration value=\"SSVC\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Stakeholder Specific Vulnerability Categorization as defined at https://github.com/CERTCC/SSVC\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`            <xs:enumeration value=\"SSVC\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Stakeholder Specific Vulnerability Categorization as defined at https://github.com/CERTCC/SSVC\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4810,
                  "startColumn": 52,
                  "endLine": 4810,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            <xs:enumeration value=\"OWASP\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        OWASP Risk Rating as defined at https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "            <xs:enumeration value=\"OWASP\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        OWASP Risk Rating as defined at https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`            <xs:enumeration value=\"OWASP\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        OWASP Risk Rating as defined at https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4803,
                  "startColumn": 84,
                  "endLine": 4803,
                  "endColumn": 88,
                  "snippet": {
                    "text": "            <xs:enumeration value=\"CVSSv4\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Common Vulnerability Scoring System v4.0 standard as defined at https://www.first.org/cvss/v4-0/\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "            <xs:enumeration value=\"CVSSv4\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Common Vulnerability Scoring System v4.0 standard as defined at https://www.first.org/cvss/v4-0/\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`            <xs:enumeration value=\"CVSSv4\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Common Vulnerability Scoring System v4.0 standard as defined at https://www.first.org/cvss/v4-0/\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4796,
                  "startColumn": 84,
                  "endLine": 4796,
                  "endColumn": 88,
                  "snippet": {
                    "text": "            <xs:enumeration value=\"CVSSv31\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Common Vulnerability Scoring System v3.1 standard as defined at https://www.first.org/cvss/v3-1/\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "            <xs:enumeration value=\"CVSSv31\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Common Vulnerability Scoring System v3.1 standard as defined at https://www.first.org/cvss/v3-1/\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`            <xs:enumeration value=\"CVSSv31\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Common Vulnerability Scoring System v3.1 standard as defined at https://www.first.org/cvss/v3-1/\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4789,
                  "startColumn": 84,
                  "endLine": 4789,
                  "endColumn": 88,
                  "snippet": {
                    "text": "            <xs:enumeration value=\"CVSSv3\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Common Vulnerability Scoring System v3.0 standard as defined at https://www.first.org/cvss/v3-0/\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "            <xs:enumeration value=\"CVSSv3\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Common Vulnerability Scoring System v3.0 standard as defined at https://www.first.org/cvss/v3-0/\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`            <xs:enumeration value=\"CVSSv3\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Common Vulnerability Scoring System v3.0 standard as defined at https://www.first.org/cvss/v3-0/\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4782,
                  "startColumn": 84,
                  "endLine": 4782,
                  "endColumn": 88,
                  "snippet": {
                    "text": "            <xs:enumeration value=\"CVSSv2\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Common Vulnerability Scoring System v2.0 standard as defined at https://www.first.org/cvss/v2/\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "            <xs:enumeration value=\"CVSSv2\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Common Vulnerability Scoring System v2.0 standard as defined at https://www.first.org/cvss/v2/\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`            <xs:enumeration value=\"CVSSv2\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">\n                        Common Vulnerability Scoring System v2.0 standard as defined at https://www.first.org/cvss/v2/\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4758,
                  "startColumn": 43,
                  "endLine": 4758,
                  "endColumn": 47,
                  "snippet": {
                    "text": "            <xs:enumeration value=\"protected_at_perimeter\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Attacks are blocked at physical, logical, or network perimeter.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "            <xs:enumeration value=\"protected_at_perimeter\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Attacks are blocked at physical, logical, or network perimeter.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`            <xs:enumeration value=\"protected_at_perimeter\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Attacks are blocked at physical, logical, or network perimeter.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4751,
                  "startColumn": 46,
                  "endLine": 4751,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            <xs:enumeration value=\"protected_at_runtime\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Exploits are prevented at runtime.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "            <xs:enumeration value=\"protected_at_runtime\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Exploits are prevented at runtime.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`            <xs:enumeration value=\"protected_at_runtime\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Exploits are prevented at runtime.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4716,
                  "startColumn": 58,
                  "endLine": 4716,
                  "endColumn": 62,
                  "snippet": {
                    "text": "            <xs:enumeration value=\"code_not_reachable\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The vulnerable code is not invoked at runtime.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "            <xs:enumeration value=\"code_not_reachable\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The vulnerable code is not invoked at runtime.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`            <xs:enumeration value=\"code_not_reachable\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The vulnerable code is not invoked at runtime.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4410,
                  "startColumn": 175,
                  "endLine": 4410,
                  "endColumn": 179,
                  "snippet": {
                    "text": "nRangeType\" minOccurs=\"1\" maxOccurs=\"1\">\n                                                                    <xs:annotation>\n                                                                        <xs:documentation>A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst</xs:documentation>\n                                                                    </xs:annotation>\n                                                                </xs:element>\n                                                      ",
                    "rendered": {
                      "text": "nRangeType\" minOccurs=\"1\" maxOccurs=\"1\">\n                                                                    <xs:annotation>\n                                                                        <xs:documentation>A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst</xs:documentation>\n                                                                    </xs:annotation>\n                                                                </xs:element>\n                                                      ",
                      "markdown": "`nRangeType\" minOccurs=\"1\" maxOccurs=\"1\">\n                                                                    <xs:annotation>\n                                                                        <xs:documentation>A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst</xs:documentation>\n                                                                    </xs:annotation>\n                                                                </xs:element>\n                                                      `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 3618,
                  "startColumn": 85,
                  "endLine": 3618,
                  "endColumn": 89,
                  "snippet": {
                    "text": "                        <xs:enumeration value=\"natural-gas\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    Hydrocarbon gas liquids (HGL) that occur as gases at atmospheric pressure and as liquids under higher pressures including Natural gas (C5H12 and heavier), Ethane (C2H6), Propane (C3H8), etc.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:enumeration>\n",
                    "rendered": {
                      "text": "                        <xs:enumeration value=\"natural-gas\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    Hydrocarbon gas liquids (HGL) that occur as gases at atmospheric pressure and as liquids under higher pressures including Natural gas (C5H12 and heavier), Ethane (C2H6), Propane (C3H8), etc.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:enumeration>\n",
                      "markdown": "`                        <xs:enumeration value=\"natural-gas\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    Hydrocarbon gas liquids (HGL) that occur as gases at atmospheric pressure and as liquids under higher pressures including Natural gas (C5H12 and heavier), Ethane (C2H6), Propane (C3H8), etc.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 3286,
                  "startColumn": 85,
                  "endLine": 3286,
                  "endColumn": 89,
                  "snippet": {
                    "text": "lement name=\"groupAtRisk\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\">\n                                                    <xs:annotation>\n                                                        <xs:documentation>\n                                                            The groups or individuals at risk of being systematically disadvantaged by the model.\n                                                        </xs:documentation>\n                                                    </xs:annotation>\n                                                </xs:element>\n                                    ",
                    "rendered": {
                      "text": "lement name=\"groupAtRisk\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\">\n                                                    <xs:annotation>\n                                                        <xs:documentation>\n                                                            The groups or individuals at risk of being systematically disadvantaged by the model.\n                                                        </xs:documentation>\n                                                    </xs:annotation>\n                                                </xs:element>\n                                    ",
                      "markdown": "`lement name=\"groupAtRisk\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\">\n                                                    <xs:annotation>\n                                                        <xs:documentation>\n                                                            The groups or individuals at risk of being systematically disadvantaged by the model.\n                                                        </xs:documentation>\n                                                    </xs:annotation>\n                                                </xs:element>\n                                    `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 3274,
                  "startColumn": 68,
                  "endLine": 3274,
                  "endColumn": 72,
                  "snippet": {
                    "text": "                        <xs:element name=\"fairnessAssessments\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    How does the model affect groups at risk of being systematically disadvantaged?\n                                    What are the harms and benefits to the various affected groups?\n                                </xs:documentation>\n                            </xs:annotation>\n",
                    "rendered": {
                      "text": "                        <xs:element name=\"fairnessAssessments\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    How does the model affect groups at risk of being systematically disadvantaged?\n                                    What are the harms and benefits to the various affected groups?\n                                </xs:documentation>\n                            </xs:annotation>\n",
                      "markdown": "`                        <xs:element name=\"fairnessAssessments\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    How does the model affect groups at risk of being systematically disadvantaged?\n                                    What are the harms and benefits to the various affected groups?\n                                </xs:documentation>\n                            </xs:annotation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1628,
                  "startColumn": 36,
                  "endLine": 1628,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            <xs:element name=\"url\" type=\"xs:anyURI\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">The URL to the commit. This URL will typically point to a commit\n                        in a version control system.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"url\" type=\"xs:anyURI\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">The URL to the commit. This URL will typically point to a commit\n                        in a version control system.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"url\" type=\"xs:anyURI\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">The URL to the commit. This URL will typically point to a commit\n                        in a version control system.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1620,
                  "startColumn": 106,
                  "endLine": 1621,
                  "snippet": {
                    "text": "        <xs:sequence>\n            <xs:element name=\"uid\" type=\"xs:normalizedString\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">A unique identifier of the commit. This may be version control\n                        specific. For example, Subversion uses revision numbers whereas git uses commit hashes.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "        <xs:sequence>\n            <xs:element name=\"uid\" type=\"xs:normalizedString\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">A unique identifier of the commit. This may be version control\n                        specific. For example, Subversion uses revision numbers whereas git uses commit hashes.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`        <xs:sequence>\n            <xs:element name=\"uid\" type=\"xs:normalizedString\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">A unique identifier of the commit. This may be version control\n                        specific. For example, Subversion uses revision numbers whereas git uses commit hashes.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1367,
                  "startColumn": 215,
                  "endLine": 1367,
                  "endColumn": 224,
                  "snippet": {
                    "text": "            </xs:enumeration>\n            <xs:enumeration value=\"source-distribution\">\n                <xs:annotation>\n                    <xs:documentation>The location where the source code distributable can be obtained. This is often an archive format such as zip or tgz. The source-distribution type complements use of the version control (vcs) type.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"distribution\">\n",
                    "rendered": {
                      "text": "            </xs:enumeration>\n            <xs:enumeration value=\"source-distribution\">\n                <xs:annotation>\n                    <xs:documentation>The location where the source code distributable can be obtained. This is often an archive format such as zip or tgz. The source-distribution type complements use of the version control (vcs) type.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"distribution\">\n",
                      "markdown": "`            </xs:enumeration>\n            <xs:enumeration value=\"source-distribution\">\n                <xs:annotation>\n                    <xs:documentation>The location where the source code distributable can be obtained. This is often an archive format such as zip or tgz. The source-distribution type complements use of the version control (vcs) type.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"distribution\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1317,
                  "startColumn": 45,
                  "endLine": 1317,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"vcs\">\n                <xs:annotation>\n                    <xs:documentation>Version Control System</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"issue-tracker\">\n",
                    "rendered": {
                      "text": "        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"vcs\">\n                <xs:annotation>\n                    <xs:documentation>Version Control System</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"issue-tracker\">\n",
                      "markdown": "`        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"vcs\">\n                <xs:annotation>\n                    <xs:documentation>Version Control System</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"issue-tracker\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1077,
                  "startColumn": 88,
                  "endLine": 1077,
                  "endColumn": 97,
                  "snippet": {
                    "text": "            </xs:enumeration>\n            <xs:enumeration value=\"firmware\">\n                <xs:annotation>\n                    <xs:documentation>A special type of software that provides low-level control over a devices\n                        hardware. Refer to https://en.wikipedia.org/wiki/Firmware</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "            </xs:enumeration>\n            <xs:enumeration value=\"firmware\">\n                <xs:annotation>\n                    <xs:documentation>A special type of software that provides low-level control over a devices\n                        hardware. Refer to https://en.wikipedia.org/wiki/Firmware</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`            </xs:enumeration>\n            <xs:enumeration value=\"firmware\">\n                <xs:annotation>\n                    <xs:documentation>A special type of software that provides low-level control over a devices\n                        hardware. Refer to https://en.wikipedia.org/wiki/Firmware</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1011,
                  "startColumn": 29,
                  "endLine": 1011,
                  "endColumn": 33,
                  "snippet": {
                    "text": "                <xs:annotation>\n                    <xs:documentation>Components that are excluded provide the ability to document component usage\n                        for test and other non-runtime purposes. Excluded components are not reachable within a call\n                        graph at runtime.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n        </xs:restriction>\n",
                    "rendered": {
                      "text": "                <xs:annotation>\n                    <xs:documentation>Components that are excluded provide the ability to document component usage\n                        for test and other non-runtime purposes. Excluded components are not reachable within a call\n                        graph at runtime.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n        </xs:restriction>\n",
                      "markdown": "`                <xs:annotation>\n                    <xs:documentation>Components that are excluded provide the ability to document component usage\n                        for test and other non-runtime purposes. Excluded components are not reachable within a call\n                        graph at runtime.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n        </xs:restriction>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1001,
                  "startColumn": 63,
                  "endLine": 1001,
                  "endColumn": 67,
                  "snippet": {
                    "text": "            </xs:enumeration>\n            <xs:enumeration value=\"optional\">\n                <xs:annotation>\n                    <xs:documentation>The component is optional at runtime. Optional components are components that\n                        are not capable of being called due to them not be installed or otherwise accessible by any means.\n                        Components that are installed but due to configuration or other restrictions are prohibited from\n                        being called must be scoped as 'required'.</xs:documentation>\n",
                    "rendered": {
                      "text": "            </xs:enumeration>\n            <xs:enumeration value=\"optional\">\n                <xs:annotation>\n                    <xs:documentation>The component is optional at runtime. Optional components are components that\n                        are not capable of being called due to them not be installed or otherwise accessible by any means.\n                        Components that are installed but due to configuration or other restrictions are prohibited from\n                        being called must be scoped as 'required'.</xs:documentation>\n",
                      "markdown": "`            </xs:enumeration>\n            <xs:enumeration value=\"optional\">\n                <xs:annotation>\n                    <xs:documentation>The component is optional at runtime. Optional components are components that\n                        are not capable of being called due to them not be installed or otherwise accessible by any means.\n                        Components that are installed but due to configuration or other restrictions are prohibited from\n                        being called must be scoped as 'required'.</xs:documentation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 363,
                  "startColumn": 54,
                  "endLine": 363,
                  "endColumn": 58,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"contact\" type=\"bom:organizationalContact\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n                <xs:annotation>\n                    <xs:documentation>A contact person at the organization. Multiple contacts are allowed.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"contact\" type=\"bom:organizationalContact\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n                <xs:annotation>\n                    <xs:documentation>A contact person at the organization. Multiple contacts are allowed.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"contact\" type=\"bom:organizationalContact\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n                <xs:annotation>\n                    <xs:documentation>A contact person at the organization. Multiple contacts are allowed.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 108,
                  "endLine": 299,
                  "endColumn": 112,
                  "snippet": {
                    "text": "                <xs:annotation>\n                    <xs:documentation>\n                        BOM consisting of information obtained during a build process where component inventory is\n                        available for use. The precise versions of resolved components are usually available at this\n                        time as well as the provenance of where the components were retrieved from.\n                    </xs:documentation>\n                </xs:annotation>\n",
                    "rendered": {
                      "text": "                <xs:annotation>\n                    <xs:documentation>\n                        BOM consisting of information obtained during a build process where component inventory is\n                        available for use. The precise versions of resolved components are usually available at this\n                        time as well as the provenance of where the components were retrieved from.\n                    </xs:documentation>\n                </xs:annotation>\n",
                      "markdown": "`                <xs:annotation>\n                    <xs:documentation>\n                        BOM consisting of information obtained during a build process where component inventory is\n                        available for use. The precise versions of resolved components are usually available at this\n                        time as well as the provenance of where the components were retrieved from.\n                    </xs:documentation>\n                </xs:annotation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 139,
                  "endLine": 134,
                  "endColumn": 143,
                  "snippet": {
                    "text": "     </xs:element>\n            <xs:element name=\"lifecycles\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Lifecycles communicate the stage(s) in which data in the BOM was captured. Different types of data may be available at various phases of a lifecycle, such as the Software Development Lifecycle (SDLC), IT Asset Management (ITAM), and Software Asset Management (SAM). Thus, a BOM may include data specific to or only obtainable in a given lifecycle.\n                    </xs:documentation>\n                </xs:annotation",
                    "rendered": {
                      "text": "     </xs:element>\n            <xs:element name=\"lifecycles\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Lifecycles communicate the stage(s) in which data in the BOM was captured. Different types of data may be available at various phases of a lifecycle, such as the Software Development Lifecycle (SDLC), IT Asset Management (ITAM), and Software Asset Management (SAM). Thus, a BOM may include data specific to or only obtainable in a given lifecycle.\n                    </xs:documentation>\n                </xs:annotation",
                      "markdown": "`     </xs:element>\n            <xs:element name=\"lifecycles\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Lifecycles communicate the stage(s) in which data in the BOM was captured. Different types of data may be available at various phases of a lifecycle, such as the Software Development Lifecycle (SDLC), IT Asset Management (ITAM), and Software Asset Management (SAM). Thus, a BOM may include data specific to or only obtainable in a given lifecycle.\n                    </xs:documentation>\n                </xs:annotation`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 101,
                  "endLine": 79,
                  "endColumn": 105,
                  "snippet": {
                    "text": "    <xs:simpleType name=\"versionRangeType\">\n        <xs:annotation>\n            <xs:documentation xml:lang=\"en\"><![CDATA[\n                A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst\n\n                Example values:\n                - \"vers:cargo/9.0.14\"\n",
                    "rendered": {
                      "text": "    <xs:simpleType name=\"versionRangeType\">\n        <xs:annotation>\n            <xs:documentation xml:lang=\"en\"><![CDATA[\n                A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst\n\n                Example values:\n                - \"vers:cargo/9.0.14\"\n",
                      "markdown": "`    <xs:simpleType name=\"versionRangeType\">\n        <xs:annotation>\n            <xs:documentation xml:lang=\"en\"><![CDATA[\n                A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst\n\n                Example values:\n                - \"vers:cargo/9.0.14\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 36,
                  "endLine": 8,
                  "snippet": {
                    "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 8234,
                  "startColumn": 70,
                  "endLine": 8234,
                  "endColumn": 79,
                  "snippet": {
                    "text": "                </xs:element>\n                <xs:element name=\"formulation\" type=\"bom:formulationType\" minOccurs=\"0\" maxOccurs=\"1\">\n                    <xs:annotation>\n                        <xs:documentation>Describes how a component or service was manufactured or deployed. This is\n                            achieved through the use of formulas, workflows, tasks, and steps, which declare the precise\n                            steps to reproduce along with the observed formulas describing the steps which transpired\n                            in the manufacturing process.</xs:documentation>\n",
                    "rendered": {
                      "text": "                </xs:element>\n                <xs:element name=\"formulation\" type=\"bom:formulationType\" minOccurs=\"0\" maxOccurs=\"1\">\n                    <xs:annotation>\n                        <xs:documentation>Describes how a component or service was manufactured or deployed. This is\n                            achieved through the use of formulas, workflows, tasks, and steps, which declare the precise\n                            steps to reproduce along with the observed formulas describing the steps which transpired\n                            in the manufacturing process.</xs:documentation>\n",
                      "markdown": "`                </xs:element>\n                <xs:element name=\"formulation\" type=\"bom:formulationType\" minOccurs=\"0\" maxOccurs=\"1\">\n                    <xs:annotation>\n                        <xs:documentation>Describes how a component or service was manufactured or deployed. This is\n                            achieved through the use of formulas, workflows, tasks, and steps, which declare the precise\n                            steps to reproduce along with the observed formulas describing the steps which transpired\n                            in the manufacturing process.</xs:documentation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 7724,
                  "startColumn": 83,
                  "endLine": 7724,
                  "endColumn": 89,
                  "snippet": {
                    "text": "                                    </xs:element>\n                                    <xs:element name=\"expires\" type=\"xs:dateTime\" minOccurs=\"0\">\n                                        <xs:annotation>\n                                            <xs:documentation>The optional date and time (timestamp) when the evidence is no longer valid.</xs:documentation>\n                                        </xs:annotation>\n                                    </xs:element>\n                                    <xs:element name=\"author\" type=\"bom:organizationalContact\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                    "rendered": {
                      "text": "                                    </xs:element>\n                                    <xs:element name=\"expires\" type=\"xs:dateTime\" minOccurs=\"0\">\n                                        <xs:annotation>\n                                            <xs:documentation>The optional date and time (timestamp) when the evidence is no longer valid.</xs:documentation>\n                                        </xs:annotation>\n                                    </xs:element>\n                                    <xs:element name=\"author\" type=\"bom:organizationalContact\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                      "markdown": "`                                    </xs:element>\n                                    <xs:element name=\"expires\" type=\"xs:dateTime\" minOccurs=\"0\">\n                                        <xs:annotation>\n                                            <xs:documentation>The optional date and time (timestamp) when the evidence is no longer valid.</xs:documentation>\n                                        </xs:annotation>\n                                    </xs:element>\n                                    <xs:element name=\"author\" type=\"bom:organizationalContact\" minOccurs=\"0\" maxOccurs=\"1\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 7719,
                  "startColumn": 74,
                  "endLine": 7719,
                  "endColumn": 80,
                  "snippet": {
                    "text": "                                    </xs:element>\n                                    <xs:element name=\"created\" type=\"xs:dateTime\" minOccurs=\"0\">\n                                        <xs:annotation>\n                                            <xs:documentation>The date and time (timestamp) when the evidence was created.</xs:documentation>\n                                        </xs:annotation>\n                                    </xs:element>\n                                    <xs:element name=\"expires\" type=\"xs:dateTime\" minOccurs=\"0\">\n",
                    "rendered": {
                      "text": "                                    </xs:element>\n                                    <xs:element name=\"created\" type=\"xs:dateTime\" minOccurs=\"0\">\n                                        <xs:annotation>\n                                            <xs:documentation>The date and time (timestamp) when the evidence was created.</xs:documentation>\n                                        </xs:annotation>\n                                    </xs:element>\n                                    <xs:element name=\"expires\" type=\"xs:dateTime\" minOccurs=\"0\">\n",
                      "markdown": "`                                    </xs:element>\n                                    <xs:element name=\"created\" type=\"xs:dateTime\" minOccurs=\"0\">\n                                        <xs:annotation>\n                                            <xs:documentation>The date and time (timestamp) when the evidence was created.</xs:documentation>\n                                        </xs:annotation>\n                                    </xs:element>\n                                    <xs:element name=\"expires\" type=\"xs:dateTime\" minOccurs=\"0\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 7051,
                  "startColumn": 48,
                  "endLine": 7051,
                  "endColumn": 54,
                  "snippet": {
                    "text": "                        <xs:element name=\"expirationDate\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time (timestamp) when the related cryptographic material expires.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                    "rendered": {
                      "text": "                        <xs:element name=\"expirationDate\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time (timestamp) when the related cryptographic material expires.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                      "markdown": "`                        <xs:element name=\"expirationDate\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time (timestamp) when the related cryptographic material expires.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 7044,
                  "startColumn": 48,
                  "endLine": 7044,
                  "endColumn": 54,
                  "snippet": {
                    "text": "                        <xs:element name=\"updateDate\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time (timestamp) when the related cryptographic material was updated.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                    "rendered": {
                      "text": "                        <xs:element name=\"updateDate\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time (timestamp) when the related cryptographic material was updated.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                      "markdown": "`                        <xs:element name=\"updateDate\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time (timestamp) when the related cryptographic material was updated.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 7037,
                  "startColumn": 48,
                  "endLine": 7037,
                  "endColumn": 54,
                  "snippet": {
                    "text": "                        <xs:element name=\"activationDate\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time (timestamp) when the related cryptographic material was activated.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                    "rendered": {
                      "text": "                        <xs:element name=\"activationDate\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time (timestamp) when the related cryptographic material was activated.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                      "markdown": "`                        <xs:element name=\"activationDate\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time (timestamp) when the related cryptographic material was activated.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 7030,
                  "startColumn": 48,
                  "endLine": 7030,
                  "endColumn": 54,
                  "snippet": {
                    "text": "                        <xs:element name=\"creationDate\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time (timestamp) when the related cryptographic material was created.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                    "rendered": {
                      "text": "                        <xs:element name=\"creationDate\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time (timestamp) when the related cryptographic material was created.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                      "markdown": "`                        <xs:element name=\"creationDate\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time (timestamp) when the related cryptographic material was created.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 6923,
                  "startColumn": 48,
                  "endLine": 6923,
                  "endColumn": 54,
                  "snippet": {
                    "text": "                        <xs:element name=\"notValidAfter\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time according to ISO-8601 standard from which the certificate is not valid anymore\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                    "rendered": {
                      "text": "                        <xs:element name=\"notValidAfter\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time according to ISO-8601 standard from which the certificate is not valid anymore\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                      "markdown": "`                        <xs:element name=\"notValidAfter\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time according to ISO-8601 standard from which the certificate is not valid anymore\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 6916,
                  "startColumn": 48,
                  "endLine": 6916,
                  "endColumn": 54,
                  "snippet": {
                    "text": "                        <xs:element name=\"notValidBefore\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time according to ISO-8601 standard from which the certificate is valid\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                    "rendered": {
                      "text": "                        <xs:element name=\"notValidBefore\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time according to ISO-8601 standard from which the certificate is valid\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                      "markdown": "`                        <xs:element name=\"notValidBefore\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>\n                                    The date and time according to ISO-8601 standard from which the certificate is valid\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 6077,
                  "startColumn": 58,
                  "endLine": 6077,
                  "endColumn": 67,
                  "snippet": {
                    "text": "                <xs:annotation>\n                    <xs:documentation>\n                        Component or service that received the output from the task\n                        (e.g., reference to an artifactory service with data flow value of outbound)\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "                <xs:annotation>\n                    <xs:documentation>\n                        Component or service that received the output from the task\n                        (e.g., reference to an artifactory service with data flow value of outbound)\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`                <xs:annotation>\n                    <xs:documentation>\n                        Component or service that received the output from the task\n                        (e.g., reference to an artifactory service with data flow value of outbound)\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 6076,
                  "startColumn": 36,
                  "endLine": 6076,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            <xs:element name=\"target\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Component or service that received the output from the task\n                        (e.g., reference to an artifactory service with data flow value of outbound)\n                    </xs:documentation>\n                </xs:annotation>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"target\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Component or service that received the output from the task\n                        (e.g., reference to an artifactory service with data flow value of outbound)\n                    </xs:documentation>\n                </xs:annotation>\n",
                      "markdown": "`            <xs:element name=\"target\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Component or service that received the output from the task\n                        (e.g., reference to an artifactory service with data flow value of outbound)\n                    </xs:documentation>\n                </xs:annotation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 6069,
                  "startColumn": 36,
                  "endLine": 6069,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            <xs:element name=\"source\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Component or service that generated or provided the output from the task (e.g., a build tool)\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"source\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Component or service that generated or provided the output from the task (e.g., a build tool)\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"source\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        Component or service that generated or provided the output from the task (e.g., a build tool)\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5989,
                  "startColumn": 55,
                  "endLine": 5989,
                  "endColumn": 64,
                  "snippet": {
                    "text": "            <xs:element name=\"target\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        A reference to the component or service that received or stored the input if not the task\n                        itself (e.g., a local, named storage workspace)\n                    </xs:documentation>\n                </xs:annotation>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"target\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        A reference to the component or service that received or stored the input if not the task\n                        itself (e.g., a local, named storage workspace)\n                    </xs:documentation>\n                </xs:annotation>\n",
                      "markdown": "`            <xs:element name=\"target\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        A reference to the component or service that received or stored the input if not the task\n                        itself (e.g., a local, named storage workspace)\n                    </xs:documentation>\n                </xs:annotation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5982,
                  "startColumn": 45,
                  "endLine": 5982,
                  "endColumn": 54,
                  "snippet": {
                    "text": "                <xs:annotation>\n                    <xs:documentation>\n                        A references to the component or service that provided the input to the task\n                        (e.g., reference to a service with data flow value of inbound)\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "                <xs:annotation>\n                    <xs:documentation>\n                        A references to the component or service that provided the input to the task\n                        (e.g., reference to a service with data flow value of inbound)\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`                <xs:annotation>\n                    <xs:documentation>\n                        A references to the component or service that provided the input to the task\n                        (e.g., reference to a service with data flow value of inbound)\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5981,
                  "startColumn": 56,
                  "endLine": 5981,
                  "endColumn": 65,
                  "snippet": {
                    "text": "            <xs:element name=\"source\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        A references to the component or service that provided the input to the task\n                        (e.g., reference to a service with data flow value of inbound)\n                    </xs:documentation>\n                </xs:annotation>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"source\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        A references to the component or service that provided the input to the task\n                        (e.g., reference to a service with data flow value of inbound)\n                    </xs:documentation>\n                </xs:annotation>\n",
                      "markdown": "`            <xs:element name=\"source\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        A references to the component or service that provided the input to the task\n                        (e.g., reference to a service with data flow value of inbound)\n                    </xs:documentation>\n                </xs:annotation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5902,
                  "startColumn": 51,
                  "endLine": 5902,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            <xs:element name=\"target\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References the component or service that was the target of the event\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"target\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References the component or service that was the target of the event\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"target\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References the component or service that was the target of the event\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5895,
                  "startColumn": 51,
                  "endLine": 5895,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            <xs:element name=\"source\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References the component or service that was the source of the event\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"source\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References the component or service that was the source of the event\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"source\" type=\"bom:resourceReferenceType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References the component or service that was the source of the event\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5881,
                  "startColumn": 36,
                  "endLine": 5881,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            <xs:element name=\"timeReceived\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the event was received.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"timeReceived\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the event was received.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"timeReceived\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the event was received.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5791,
                  "startColumn": 36,
                  "endLine": 5791,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            <xs:element name=\"timeActivated\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the trigger was activated.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"timeActivated\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the trigger was activated.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"timeActivated\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the trigger was activated.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5729,
                  "startColumn": 50,
                  "endLine": 5729,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            <xs:element name=\"resourceReferences\" type=\"bom:resourceReferencesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References to component or service resources that are used to realize the resource instance.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"resourceReferences\" type=\"bom:resourceReferencesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References to component or service resources that are used to realize the resource instance.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"resourceReferences\" type=\"bom:resourceReferencesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References to component or service resources that are used to realize the resource instance.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5460,
                  "startColumn": 50,
                  "endLine": 5460,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            <xs:element name=\"resourceReferences\" type=\"bom:resourceReferencesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References to component or service resources that are used to realize the resource instance.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"resourceReferences\" type=\"bom:resourceReferencesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References to component or service resources that are used to realize the resource instance.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"resourceReferences\" type=\"bom:resourceReferencesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References to component or service resources that are used to realize the resource instance.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5280,
                  "startColumn": 36,
                  "endLine": 5280,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            <xs:element name=\"timeEnd\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the task ended.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"timeEnd\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the task ended.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"timeEnd\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the task ended.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5273,
                  "startColumn": 36,
                  "endLine": 5273,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            <xs:element name=\"timeStart\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the task started.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"timeStart\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the task started.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"timeStart\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the task started.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5211,
                  "startColumn": 50,
                  "endLine": 5211,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            <xs:element name=\"resourceReferences\" type=\"bom:resourceReferencesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References to component or service resources that are used to realize the resource instance.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"resourceReferences\" type=\"bom:resourceReferencesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References to component or service resources that are used to realize the resource instance.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"resourceReferences\" type=\"bom:resourceReferencesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        References to component or service resources that are used to realize the resource instance.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5071,
                  "startColumn": 66,
                  "endLine": 5071,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            <xs:element name=\"runtimeTopology\" type=\"bom:dependenciesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>A graph of the component runtime topology for workflow's instance.\n                        A description of the runtime component and service topology.  This can describe a partial or\n                        complete topology used to host and execute the task (e.g., hardware, operating systems,\n                        configurations, etc.)</xs:documentation>\n                </xs:annotation>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"runtimeTopology\" type=\"bom:dependenciesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>A graph of the component runtime topology for workflow's instance.\n                        A description of the runtime component and service topology.  This can describe a partial or\n                        complete topology used to host and execute the task (e.g., hardware, operating systems,\n                        configurations, etc.)</xs:documentation>\n                </xs:annotation>\n",
                      "markdown": "`            <xs:element name=\"runtimeTopology\" type=\"bom:dependenciesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>A graph of the component runtime topology for workflow's instance.\n                        A description of the runtime component and service topology.  This can describe a partial or\n                        complete topology used to host and execute the task (e.g., hardware, operating systems,\n                        configurations, etc.)</xs:documentation>\n                </xs:annotation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5059,
                  "startColumn": 36,
                  "endLine": 5059,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            <xs:element name=\"timeEnd\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the task ended.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"timeEnd\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the task ended.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"timeEnd\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the task ended.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 5052,
                  "startColumn": 36,
                  "endLine": 5052,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            <xs:element name=\"timeStart\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the task started.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"timeStart\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the task started.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"timeStart\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The date and time (timestamp) when the task started.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4986,
                  "startColumn": 64,
                  "endLine": 4986,
                  "endColumn": 73,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"resourceReferences\" type=\"bom:resourceReferencesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>References to component or service resources that are used to realize\n                        the resource instance.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"resourceReferences\" type=\"bom:resourceReferencesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>References to component or service resources that are used to realize\n                        the resource instance.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"resourceReferences\" type=\"bom:resourceReferencesType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>References to component or service resources that are used to realize\n                        the resource instance.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4893,
                  "startColumn": 32,
                  "endLine": 4893,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        <xs:annotation>\n            <xs:documentation>\n                Describes workflows and resources that captures rules and other aspects of how the associated\n                BOM component or service was formed.\n            </xs:documentation>\n        </xs:annotation>\n        <xs:sequence>\n",
                    "rendered": {
                      "text": "        <xs:annotation>\n            <xs:documentation>\n                Describes workflows and resources that captures rules and other aspects of how the associated\n                BOM component or service was formed.\n            </xs:documentation>\n        </xs:annotation>\n        <xs:sequence>\n",
                      "markdown": "`        <xs:annotation>\n            <xs:documentation>\n                Describes workflows and resources that captures rules and other aspects of how the associated\n                BOM component or service was formed.\n            </xs:documentation>\n        </xs:annotation>\n        <xs:sequence>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4866,
                  "startColumn": 44,
                  "endLine": 4866,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    <xs:complexType name=\"formulationType\">\n        <xs:annotation>\n            <xs:documentation>\n                Describes how a component or service was manufactured or deployed. This is achieved through the use\n                of formulas, workflows, tasks, and steps, which declare the precise steps to reproduce along with the\n                observed formulas describing the steps which transpired in the manufacturing process.\n            </xs:documentation>\n",
                    "rendered": {
                      "text": "    <xs:complexType name=\"formulationType\">\n        <xs:annotation>\n            <xs:documentation>\n                Describes how a component or service was manufactured or deployed. This is achieved through the use\n                of formulas, workflows, tasks, and steps, which declare the precise steps to reproduce along with the\n                observed formulas describing the steps which transpired in the manufacturing process.\n            </xs:documentation>\n",
                      "markdown": "`    <xs:complexType name=\"formulationType\">\n        <xs:annotation>\n            <xs:documentation>\n                Describes how a component or service was manufactured or deployed. This is achieved through the use\n                of formulas, workflows, tasks, and steps, which declare the precise steps to reproduce along with the\n                observed formulas describing the steps which transpired in the manufacturing process.\n            </xs:documentation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4691,
                  "startColumn": 40,
                  "endLine": 4691,
                  "endColumn": 49,
                  "snippet": {
                    "text": "            <xs:enumeration value=\"not_affected\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The component or service is not affected by the vulnerability. Justification should be specified\n                        for all not_affected cases.\n                    </xs:documentation>\n                </xs:annotation>\n",
                    "rendered": {
                      "text": "            <xs:enumeration value=\"not_affected\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The component or service is not affected by the vulnerability. Justification should be specified\n                        for all not_affected cases.\n                    </xs:documentation>\n                </xs:annotation>\n",
                      "markdown": "`            <xs:enumeration value=\"not_affected\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The component or service is not affected by the vulnerability. Justification should be specified\n                        for all not_affected cases.\n                    </xs:documentation>\n                </xs:annotation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4684,
                  "startColumn": 77,
                  "endLine": 4684,
                  "endColumn": 86,
                  "snippet": {
                    "text": "            <xs:enumeration value=\"false_positive\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The vulnerability is not specific to the component or service and was falsely identified or associated.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "            <xs:enumeration value=\"false_positive\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The vulnerability is not specific to the component or service and was falsely identified or associated.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`            <xs:enumeration value=\"false_positive\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The vulnerability is not specific to the component or service and was falsely identified or associated.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4595,
                  "startColumn": 50,
                  "endLine": 4595,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"timestamp\" type=\"xs:dateTime\" minOccurs=\"1\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the annotation was created.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"text\" type=\"xs:string\" minOccurs=\"1\" maxOccurs=\"1\">\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"timestamp\" type=\"xs:dateTime\" minOccurs=\"1\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the annotation was created.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"text\" type=\"xs:string\" minOccurs=\"1\" maxOccurs=\"1\">\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"timestamp\" type=\"xs:dateTime\" minOccurs=\"1\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the annotation was created.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"text\" type=\"xs:string\" minOccurs=\"1\" maxOccurs=\"1\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4589,
                  "startColumn": 81,
                  "endLine": 4589,
                  "endColumn": 90,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"annotator\" type=\"bom:annotatorChoiceType\" minOccurs=\"1\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The organization, individual, component, or service which created the textual content\n                        of the annotation.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"annotator\" type=\"bom:annotatorChoiceType\" minOccurs=\"1\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The organization, individual, component, or service which created the textual content\n                        of the annotation.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"annotator\" type=\"bom:annotatorChoiceType\" minOccurs=\"1\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The organization, individual, component, or service which created the textual content\n                        of the annotation.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4560,
                  "startColumn": 41,
                  "endLine": 4560,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"service\" type=\"bom:service\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The service that created the annotation</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n        </xs:choice>\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"service\" type=\"bom:service\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The service that created the annotation</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n        </xs:choice>\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"service\" type=\"bom:service\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The service that created the annotation</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n        </xs:choice>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4387,
                  "startColumn": 87,
                  "endLine": 4387,
                  "endColumn": 96,
                  "snippet": {
                    "text": "                                <xs:sequence minOccurs=\"0\" maxOccurs=\"1\">\n                                    <xs:element name=\"ref\" minOccurs=\"1\" maxOccurs=\"1\">\n                                        <xs:annotation>\n                                            <xs:documentation>References a component or service by the objects bom-ref.</xs:documentation>\n                                        </xs:annotation>\n                                        <xs:simpleType>\n                                            <xs:union memberTypes=\"bom:refLinkType bom:bomLinkElementType\"/>\n",
                    "rendered": {
                      "text": "                                <xs:sequence minOccurs=\"0\" maxOccurs=\"1\">\n                                    <xs:element name=\"ref\" minOccurs=\"1\" maxOccurs=\"1\">\n                                        <xs:annotation>\n                                            <xs:documentation>References a component or service by the objects bom-ref.</xs:documentation>\n                                        </xs:annotation>\n                                        <xs:simpleType>\n                                            <xs:union memberTypes=\"bom:refLinkType bom:bomLinkElementType\"/>\n",
                      "markdown": "`                                <xs:sequence minOccurs=\"0\" maxOccurs=\"1\">\n                                    <xs:element name=\"ref\" minOccurs=\"1\" maxOccurs=\"1\">\n                                        <xs:annotation>\n                                            <xs:documentation>References a component or service by the objects bom-ref.</xs:documentation>\n                                        </xs:annotation>\n                                        <xs:simpleType>\n                                            <xs:union memberTypes=\"bom:refLinkType bom:bomLinkElementType\"/>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4369,
                  "startColumn": 48,
                  "endLine": 4369,
                  "endColumn": 54,
                  "snippet": {
                    "text": "                        <xs:element name=\"lastUpdated\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation xml:lang=\"en\">\n                                    The date and time (timestamp) when the analysis was last updated.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                    "rendered": {
                      "text": "                        <xs:element name=\"lastUpdated\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation xml:lang=\"en\">\n                                    The date and time (timestamp) when the analysis was last updated.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                      "markdown": "`                        <xs:element name=\"lastUpdated\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation xml:lang=\"en\">\n                                    The date and time (timestamp) when the analysis was last updated.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4362,
                  "startColumn": 48,
                  "endLine": 4362,
                  "endColumn": 54,
                  "snippet": {
                    "text": "                        <xs:element name=\"firstIssued\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation xml:lang=\"en\">\n                                    The date and time (timestamp) when the analysis was first issued.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                    "rendered": {
                      "text": "                        <xs:element name=\"firstIssued\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation xml:lang=\"en\">\n                                    The date and time (timestamp) when the analysis was first issued.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                      "markdown": "`                        <xs:element name=\"firstIssued\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation xml:lang=\"en\">\n                                    The date and time (timestamp) when the analysis was first issued.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4355,
                  "startColumn": 59,
                  "endLine": 4355,
                  "endColumn": 68,
                  "snippet": {
                    "text": "                                <xs:documentation xml:lang=\"en\">\n                                    Detailed description of the impact including methods used during assessment.\n                                    If a vulnerability is not exploitable, this field should include specific details\n                                    on why the component or service is not impacted by this vulnerability.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                    "rendered": {
                      "text": "                                <xs:documentation xml:lang=\"en\">\n                                    Detailed description of the impact including methods used during assessment.\n                                    If a vulnerability is not exploitable, this field should include specific details\n                                    on why the component or service is not impacted by this vulnerability.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n",
                      "markdown": "`                                <xs:documentation xml:lang=\"en\">\n                                    Detailed description of the impact including methods used during assessment.\n                                    If a vulnerability is not exploitable, this field should include specific details\n                                    on why the component or service is not impacted by this vulnerability.\n                                </xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4255,
                  "startColumn": 50,
                  "endLine": 4255,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"rejected\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the vulnerability record was rejected (if applicable).</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"credits\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"rejected\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the vulnerability record was rejected (if applicable).</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"credits\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"rejected\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the vulnerability record was rejected (if applicable).</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"credits\" minOccurs=\"0\" maxOccurs=\"1\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4250,
                  "startColumn": 50,
                  "endLine": 4250,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"updated\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the vulnerability record was last updated.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"rejected\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"updated\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the vulnerability record was last updated.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"rejected\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"updated\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the vulnerability record was last updated.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"rejected\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4245,
                  "startColumn": 50,
                  "endLine": 4245,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"published\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the vulnerability record was first published.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"updated\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"published\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the vulnerability record was first published.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"updated\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"published\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the vulnerability record was first published.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"updated\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4240,
                  "startColumn": 50,
                  "endLine": 4240,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"created\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the vulnerability record was created in the vulnerability database.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"published\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"created\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the vulnerability record was created in the vulnerability database.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"published\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"created\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the vulnerability record was created in the vulnerability database.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"published\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4079,
                  "startColumn": 74,
                  "endLine": 4079,
                  "endColumn": 83,
                  "snippet": {
                    "text": "        <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:element name=\"vulnerability\" type=\"bom:vulnerabilityType\">\n                <xs:annotation>\n                    <xs:documentation>Defines a weakness in a component or service that could be exploited or triggered by a threat source.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n",
                    "rendered": {
                      "text": "        <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:element name=\"vulnerability\" type=\"bom:vulnerabilityType\">\n                <xs:annotation>\n                    <xs:documentation>Defines a weakness in a component or service that could be exploited or triggered by a threat source.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n",
                      "markdown": "`        <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:element name=\"vulnerability\" type=\"bom:vulnerabilityType\">\n                <xs:annotation>\n                    <xs:documentation>Defines a weakness in a component or service that could be exploited or triggered by a threat source.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 4027,
                  "startColumn": 59,
                  "endLine": 4027,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    <xs:complexType name=\"bomReferenceType\">\n        <xs:attribute name=\"ref\" use=\"required\">\n            <xs:annotation>\n                <xs:documentation>References a component or service by its bom-ref attribute</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n                <xs:union memberTypes=\"bom:refLinkType bom:bomLinkType\"/>\n",
                    "rendered": {
                      "text": "    <xs:complexType name=\"bomReferenceType\">\n        <xs:attribute name=\"ref\" use=\"required\">\n            <xs:annotation>\n                <xs:documentation>References a component or service by its bom-ref attribute</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n                <xs:union memberTypes=\"bom:refLinkType bom:bomLinkType\"/>\n",
                      "markdown": "`    <xs:complexType name=\"bomReferenceType\">\n        <xs:attribute name=\"ref\" use=\"required\">\n            <xs:annotation>\n                <xs:documentation>References a component or service by its bom-ref attribute</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n                <xs:union memberTypes=\"bom:refLinkType bom:bomLinkType\"/>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 3981,
                  "startColumn": 79,
                  "endLine": 3981,
                  "endColumn": 87,
                  "snippet": {
                    "text": "                                    <xs:element name=\"image\" type=\"bom:attachedTextType\" minOccurs=\"0\" maxOccurs=\"1\">\n                                        <xs:annotation>\n                                            <xs:documentation>\n                                                The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\n                                            </xs:documentation>\n                                        </xs:annotation>\n                                    </xs:element>\n",
                    "rendered": {
                      "text": "                                    <xs:element name=\"image\" type=\"bom:attachedTextType\" minOccurs=\"0\" maxOccurs=\"1\">\n                                        <xs:annotation>\n                                            <xs:documentation>\n                                                The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\n                                            </xs:documentation>\n                                        </xs:annotation>\n                                    </xs:element>\n",
                      "markdown": "`                                    <xs:element name=\"image\" type=\"bom:attachedTextType\" minOccurs=\"0\" maxOccurs=\"1\">\n                                        <xs:annotation>\n                                            <xs:documentation>\n                                                The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\n                                            </xs:documentation>\n                                        </xs:annotation>\n                                    </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 3158,
                  "startColumn": 103,
                  "endLine": 3158,
                  "endColumn": 111,
                  "snippet": {
                    "text": " minOccurs=\"0\" maxOccurs=\"1\">\n                                                                <xs:annotation>\n                                                                    <xs:documentation>\n                                                                        The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\n                                                                    </xs:documentation>\n                                                                </xs:annotation>\n                                                            </xs:element>\n           ",
                    "rendered": {
                      "text": " minOccurs=\"0\" maxOccurs=\"1\">\n                                                                <xs:annotation>\n                                                                    <xs:documentation>\n                                                                        The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\n                                                                    </xs:documentation>\n                                                                </xs:annotation>\n                                                            </xs:element>\n           ",
                      "markdown": "` minOccurs=\"0\" maxOccurs=\"1\">\n                                                                <xs:annotation>\n                                                                    <xs:documentation>\n                                                                        The graphic (vector or raster). Base64 encoding MUST be specified for binary images.\n                                                                    </xs:documentation>\n                                                                </xs:annotation>\n                                                            </xs:element>\n           `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 2839,
                  "startColumn": 50,
                  "endLine": 2839,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"timestamp\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the release note was created.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"aliases\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"timestamp\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the release note was created.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"aliases\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"timestamp\" type=\"xs:dateTime\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the release note was created.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"aliases\" minOccurs=\"0\" maxOccurs=\"1\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 2202,
                  "startColumn": 77,
                  "endLine": 2202,
                  "endColumn": 86,
                  "snippet": {
                    "text": "        <xs:attribute name=\"bom-ref\" type=\"bom:refType\">\n            <xs:annotation>\n                <xs:documentation>\n                    An optional identifier which can be used to reference the service elsewhere in the BOM.\n                    Uniqueness is enforced within all elements and children of the root-level bom element.\n                </xs:documentation>\n            </xs:annotation>\n",
                    "rendered": {
                      "text": "        <xs:attribute name=\"bom-ref\" type=\"bom:refType\">\n            <xs:annotation>\n                <xs:documentation>\n                    An optional identifier which can be used to reference the service elsewhere in the BOM.\n                    Uniqueness is enforced within all elements and children of the root-level bom element.\n                </xs:documentation>\n            </xs:annotation>\n",
                      "markdown": "`        <xs:attribute name=\"bom-ref\" type=\"bom:refType\">\n            <xs:annotation>\n                <xs:documentation>\n                    An optional identifier which can be used to reference the service elsewhere in the BOM.\n                    Uniqueness is enforced within all elements and children of the root-level bom element.\n                </xs:documentation>\n            </xs:annotation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 2169,
                  "startColumn": 91,
                  "endLine": 2169,
                  "endColumn": 100,
                  "snippet": {
                    "text": "                <xs:annotation>\n                    <xs:documentation>\n                        A list of services included or deployed behind the parent service. This is not a dependency\n                        tree. It provides a way to specify a hierarchical representation of service assemblies.\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                    "rendered": {
                      "text": "                <xs:annotation>\n                    <xs:documentation>\n                        A list of services included or deployed behind the parent service. This is not a dependency\n                        tree. It provides a way to specify a hierarchical representation of service assemblies.\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n",
                      "markdown": "`                <xs:annotation>\n                    <xs:documentation>\n                        A list of services included or deployed behind the parent service. This is not a dependency\n                        tree. It provides a way to specify a hierarchical representation of service assemblies.\n                    </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 2070,
                  "startColumn": 68,
                  "endLine": 2070,
                  "endColumn": 77,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"trustZone\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The name of the trust zone the service resides in.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"data\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"trustZone\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The name of the trust zone the service resides in.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"data\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"trustZone\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The name of the trust zone the service resides in.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"data\" minOccurs=\"0\" maxOccurs=\"1\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 2063,
                  "startColumn": 78,
                  "endLine": 2063,
                  "endColumn": 87,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"x-trust-boundary\" type=\"xs:boolean\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>A boolean value indicating if use of the service crosses a trust zone or boundary.\n                        A value of true indicates that by using the service, a trust boundary is crossed.\n                        A value of false indicates that by using the service, a trust boundary is not crossed.</xs:documentation>\n                </xs:annotation>\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"x-trust-boundary\" type=\"xs:boolean\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>A boolean value indicating if use of the service crosses a trust zone or boundary.\n                        A value of true indicates that by using the service, a trust boundary is crossed.\n                        A value of false indicates that by using the service, a trust boundary is not crossed.</xs:documentation>\n                </xs:annotation>\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"x-trust-boundary\" type=\"xs:boolean\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>A boolean value indicating if use of the service crosses a trust zone or boundary.\n                        A value of true indicates that by using the service, a trust boundary is crossed.\n                        A value of false indicates that by using the service, a trust boundary is not crossed.</xs:documentation>\n                </xs:annotation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 2058,
                  "startColumn": 54,
                  "endLine": 2058,
                  "endColumn": 63,
                  "snippet": {
                    "text": "                <xs:annotation>\n                    <xs:documentation>A boolean value indicating if the service requires authentication.\n                        A value of true indicates the service requires authentication prior to use.\n                        A value of false indicates the service does not require authentication.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"x-trust-boundary\" type=\"xs:boolean\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                    "rendered": {
                      "text": "                <xs:annotation>\n                    <xs:documentation>A boolean value indicating if the service requires authentication.\n                        A value of true indicates the service requires authentication prior to use.\n                        A value of false indicates the service does not require authentication.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"x-trust-boundary\" type=\"xs:boolean\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                      "markdown": "`                <xs:annotation>\n                    <xs:documentation>A boolean value indicating if the service requires authentication.\n                        A value of true indicates the service requires authentication prior to use.\n                        A value of false indicates the service does not require authentication.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"x-trust-boundary\" type=\"xs:boolean\" minOccurs=\"0\" maxOccurs=\"1\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 2057,
                  "startColumn": 53,
                  "endLine": 2057,
                  "endColumn": 62,
                  "snippet": {
                    "text": "            <xs:element name=\"authenticated\" type=\"xs:boolean\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>A boolean value indicating if the service requires authentication.\n                        A value of true indicates the service requires authentication prior to use.\n                        A value of false indicates the service does not require authentication.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"authenticated\" type=\"xs:boolean\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>A boolean value indicating if the service requires authentication.\n                        A value of true indicates the service requires authentication prior to use.\n                        A value of false indicates the service does not require authentication.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"authenticated\" type=\"xs:boolean\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>A boolean value indicating if the service requires authentication.\n                        A value of true indicates the service requires authentication prior to use.\n                        A value of false indicates the service does not require authentication.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 2056,
                  "startColumn": 71,
                  "endLine": 2056,
                  "endColumn": 80,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"authenticated\" type=\"xs:boolean\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>A boolean value indicating if the service requires authentication.\n                        A value of true indicates the service requires authentication prior to use.\n                        A value of false indicates the service does not require authentication.</xs:documentation>\n                </xs:annotation>\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"authenticated\" type=\"xs:boolean\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>A boolean value indicating if the service requires authentication.\n                        A value of true indicates the service requires authentication prior to use.\n                        A value of false indicates the service does not require authentication.</xs:documentation>\n                </xs:annotation>\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"authenticated\" type=\"xs:boolean\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>A boolean value indicating if the service requires authentication.\n                        A value of true indicates the service requires authentication prior to use.\n                        A value of false indicates the service does not require authentication.</xs:documentation>\n                </xs:annotation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 2048,
                  "startColumn": 51,
                  "endLine": 2048,
                  "endColumn": 60,
                  "snippet": {
                    "text": "                    <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\">\n                        <xs:element name=\"endpoint\" type=\"xs:anyURI\" minOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>A service endpoint URI.</xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n                    </xs:sequence>\n",
                    "rendered": {
                      "text": "                    <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\">\n                        <xs:element name=\"endpoint\" type=\"xs:anyURI\" minOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>A service endpoint URI.</xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n                    </xs:sequence>\n",
                      "markdown": "`                    <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\">\n                        <xs:element name=\"endpoint\" type=\"xs:anyURI\" minOccurs=\"1\">\n                            <xs:annotation>\n                                <xs:documentation>A service endpoint URI.</xs:documentation>\n                            </xs:annotation>\n                        </xs:element>\n                    </xs:sequence>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 2035,
                  "startColumn": 41,
                  "endLine": 2035,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            </xs:element>\n            <xs:element name=\"version\" type=\"bom:versionType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The service version.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"description\" type=\"xs:normalizedString\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                    "rendered": {
                      "text": "            </xs:element>\n            <xs:element name=\"version\" type=\"bom:versionType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The service version.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"description\" type=\"xs:normalizedString\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                      "markdown": "`            </xs:element>\n            <xs:element name=\"version\" type=\"bom:versionType\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The service version.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"description\" type=\"xs:normalizedString\" minOccurs=\"0\" maxOccurs=\"1\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 2023,
                  "startColumn": 79,
                  "endLine": 2023,
                  "endColumn": 88,
                  "snippet": {
                    "text": "            <xs:element name=\"group\" type=\"xs:normalizedString\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The grouping name, namespace, or identifier. This will often be a shortened,\n                        single name of the company or project that produced the service or domain name.\n                        Whitespace and special characters should be avoided.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"group\" type=\"xs:normalizedString\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The grouping name, namespace, or identifier. This will often be a shortened,\n                        single name of the company or project that produced the service or domain name.\n                        Whitespace and special characters should be avoided.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"group\" type=\"xs:normalizedString\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation>The grouping name, namespace, or identifier. This will often be a shortened,\n                        single name of the company or project that produced the service or domain name.\n                        Whitespace and special characters should be avoided.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1968,
                  "startColumn": 59,
                  "endLine": 1968,
                  "endColumn": 68,
                  "snippet": {
                    "text": "        </xs:sequence>\n        <xs:attribute name=\"ref\" type=\"bom:refLinkType\" use=\"required\">\n            <xs:annotation>\n                <xs:documentation>References a component or service by its bom-ref attribute</xs:documentation>\n            </xs:annotation>\n        </xs:attribute>\n        <xs:anyAttribute namespace=\"##other\" processContents=\"lax\">\n",
                    "rendered": {
                      "text": "        </xs:sequence>\n        <xs:attribute name=\"ref\" type=\"bom:refLinkType\" use=\"required\">\n            <xs:annotation>\n                <xs:documentation>References a component or service by its bom-ref attribute</xs:documentation>\n            </xs:annotation>\n        </xs:attribute>\n        <xs:anyAttribute namespace=\"##other\" processContents=\"lax\">\n",
                      "markdown": "`        </xs:sequence>\n        <xs:attribute name=\"ref\" type=\"bom:refLinkType\" use=\"required\">\n            <xs:annotation>\n                <xs:documentation>References a component or service by its bom-ref attribute</xs:documentation>\n            </xs:annotation>\n        </xs:attribute>\n        <xs:anyAttribute namespace=\"##other\" processContents=\"lax\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1960,
                  "startColumn": 71,
                  "endLine": 1960,
                  "endColumn": 80,
                  "snippet": {
                    "text": "                <xs:complexType>\n                    <xs:attribute name=\"ref\" type=\"bom:refLinkType\" use=\"required\">\n                        <xs:annotation>\n                            <xs:documentation>References a component or service by its bom-ref attribute</xs:documentation>\n                        </xs:annotation>\n                    </xs:attribute>\n                </xs:complexType>\n",
                    "rendered": {
                      "text": "                <xs:complexType>\n                    <xs:attribute name=\"ref\" type=\"bom:refLinkType\" use=\"required\">\n                        <xs:annotation>\n                            <xs:documentation>References a component or service by its bom-ref attribute</xs:documentation>\n                        </xs:annotation>\n                    </xs:attribute>\n                </xs:complexType>\n",
                      "markdown": "`                <xs:complexType>\n                    <xs:attribute name=\"ref\" type=\"bom:refLinkType\" use=\"required\">\n                        <xs:annotation>\n                            <xs:documentation>References a component or service by its bom-ref attribute</xs:documentation>\n                        </xs:annotation>\n                    </xs:attribute>\n                </xs:complexType>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1953,
                  "startColumn": 40,
                  "endLine": 1953,
                  "endColumn": 49,
                  "snippet": {
                    "text": "            <xs:element name=\"provides\" minOccurs=\"0\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The component or service that define a given specification or standard, which is provided or implemented by this dependency object.\n                        For example, a cryptographic library which implements a cryptographic algorithm. A component which implements another component does not imply that the implementation is in use.\n                    </xs:documentation>\n                </xs:annotation>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"provides\" minOccurs=\"0\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The component or service that define a given specification or standard, which is provided or implemented by this dependency object.\n                        For example, a cryptographic library which implements a cryptographic algorithm. A component which implements another component does not imply that the implementation is in use.\n                    </xs:documentation>\n                </xs:annotation>\n",
                      "markdown": "`            <xs:element name=\"provides\" minOccurs=\"0\">\n                <xs:annotation>\n                    <xs:documentation>\n                        The component or service that define a given specification or standard, which is provided or implemented by this dependency object.\n                        For example, a cryptographic library which implements a cryptographic algorithm. A component which implements another component does not imply that the implementation is in use.\n                    </xs:documentation>\n                </xs:annotation>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1947,
                  "startColumn": 54,
                  "endLine": 1947,
                  "endColumn": 63,
                  "snippet": {
                    "text": "        <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:element name=\"dependency\" type=\"bom:dependencyType\" minOccurs=\"0\">\n                <xs:annotation>\n                    <xs:documentation>The component or service that is a dependency of this dependency object.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"provides\" minOccurs=\"0\">\n",
                    "rendered": {
                      "text": "        <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:element name=\"dependency\" type=\"bom:dependencyType\" minOccurs=\"0\">\n                <xs:annotation>\n                    <xs:documentation>The component or service that is a dependency of this dependency object.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"provides\" minOccurs=\"0\">\n",
                      "markdown": "`        <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:element name=\"dependency\" type=\"bom:dependencyType\" minOccurs=\"0\">\n                <xs:annotation>\n                    <xs:documentation>The component or service that is a dependency of this dependency object.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"provides\" minOccurs=\"0\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1892,
                  "startColumn": 76,
                  "endLine": 1892,
                  "endColumn": 82,
                  "snippet": {
                    "text": "              contains a ancestor node containing the original component it was forked from. For example,\n                        Component A is the original component. Component B is the component being used and documented\n                        in the BOM. However, Component B contains a pedigree node with a single ancestor documenting\n                        Component A - the original component from which Component B is derived from.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"descendants\" type=\"bom:componentsTy",
                    "rendered": {
                      "text": "              contains a ancestor node containing the original component it was forked from. For example,\n                        Component A is the original component. Component B is the component being used and documented\n                        in the BOM. However, Component B contains a pedigree node with a single ancestor documenting\n                        Component A - the original component from which Component B is derived from.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"descendants\" type=\"bom:componentsTy",
                      "markdown": "`              contains a ancestor node containing the original component it was forked from. For example,\n                        Component A is the original component. Component B is the component being used and documented\n                        in the BOM. However, Component B contains a pedigree node with a single ancestor documenting\n                        Component A - the original component from which Component B is derived from.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"descendants\" type=\"bom:componentsTy`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1890,
                  "startColumn": 43,
                  "endLine": 1890,
                  "endColumn": 49,
                  "snippet": {
                    "text": "     <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">Describes zero or more components in which a component is derived\n                        from. This is commonly used to describe forks from existing projects where the forked version\n                        contains a ancestor node containing the original component it was forked from. For example,\n                        Component A is the original component. Component B is the component being used and documented\n                        in the BOM. However, Component B contains a pedigree node with a single ancestor documentin",
                    "rendered": {
                      "text": "     <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">Describes zero or more components in which a component is derived\n                        from. This is commonly used to describe forks from existing projects where the forked version\n                        contains a ancestor node containing the original component it was forked from. For example,\n                        Component A is the original component. Component B is the component being used and documented\n                        in the BOM. However, Component B contains a pedigree node with a single ancestor documentin",
                      "markdown": "`     <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">Describes zero or more components in which a component is derived\n                        from. This is commonly used to describe forks from existing projects where the forked version\n                        contains a ancestor node containing the original component it was forked from. For example,\n                        Component A is the original component. Component B is the component being used and documented\n                        in the BOM. However, Component B contains a pedigree node with a single ancestor documentin`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1621,
                  "startColumn": 87,
                  "endLine": 1621,
                  "endColumn": 92,
                  "snippet": {
                    "text": "            <xs:element name=\"uid\" type=\"xs:normalizedString\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">A unique identifier of the commit. This may be version control\n                        specific. For example, Subversion uses revision numbers whereas git uses commit hashes.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                    "rendered": {
                      "text": "            <xs:element name=\"uid\" type=\"xs:normalizedString\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">A unique identifier of the commit. This may be version control\n                        specific. For example, Subversion uses revision numbers whereas git uses commit hashes.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n",
                      "markdown": "`            <xs:element name=\"uid\" type=\"xs:normalizedString\" minOccurs=\"0\" maxOccurs=\"1\">\n                <xs:annotation>\n                    <xs:documentation xml:lang=\"en\">A unique identifier of the commit. This may be version control\n                        specific. For example, Subversion uses revision numbers whereas git uses commit hashes.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:element>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1515,
                  "startColumn": 126,
                  "endLine": 1515,
                  "endColumn": 134,
                  "snippet": {
                    "text": "            </xs:enumeration>\n            <xs:enumeration value=\"electronic-signature\">\n                <xs:annotation>\n                    <xs:documentation>An e-signature is commonly a scanned representation of a written signature or a stylized script of the persons name.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"digital-signature\">\n",
                    "rendered": {
                      "text": "            </xs:enumeration>\n            <xs:enumeration value=\"electronic-signature\">\n                <xs:annotation>\n                    <xs:documentation>An e-signature is commonly a scanned representation of a written signature or a stylized script of the persons name.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"digital-signature\">\n",
                      "markdown": "`            </xs:enumeration>\n            <xs:enumeration value=\"electronic-signature\">\n                <xs:annotation>\n                    <xs:documentation>An e-signature is commonly a scanned representation of a written signature or a stylized script of the persons name.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"digital-signature\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1430,
                  "startColumn": 66,
                  "endLine": 1430,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            </xs:enumeration>\n            <xs:enumeration value=\"formulation\">\n                <xs:annotation>\n                    <xs:documentation>Describes how a component or service was manufactured or deployed.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"attestation\">\n",
                    "rendered": {
                      "text": "            </xs:enumeration>\n            <xs:enumeration value=\"formulation\">\n                <xs:annotation>\n                    <xs:documentation>Describes how a component or service was manufactured or deployed.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"attestation\">\n",
                      "markdown": "`            </xs:enumeration>\n            <xs:enumeration value=\"formulation\">\n                <xs:annotation>\n                    <xs:documentation>Describes how a component or service was manufactured or deployed.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n            <xs:enumeration value=\"attestation\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 1213,
                  "startColumn": 85,
                  "endLine": 1213,
                  "endColumn": 94,
                  "snippet": {
                    "text": "            </xs:enumeration>\n            <xs:enumeration value=\"user\">\n                <xs:annotation>\n                    <xs:documentation>A license that grants access to the software or service by a\n                        specified number of users.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "            </xs:enumeration>\n            <xs:enumeration value=\"user\">\n                <xs:annotation>\n                    <xs:documentation>A license that grants access to the software or service by a\n                        specified number of users.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`            </xs:enumeration>\n            <xs:enumeration value=\"user\">\n                <xs:annotation>\n                    <xs:documentation>A license that grants access to the software or service by a\n                        specified number of users.</xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 23,
                  "endLine": 300,
                  "endColumn": 29,
                  "snippet": {
                    "text": "                    <xs:documentation>\n                        BOM consisting of information obtained during a build process where component inventory is\n                        available for use. The precise versions of resolved components are usually available at this\n                        time as well as the provenance of where the components were retrieved from.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                    "rendered": {
                      "text": "                    <xs:documentation>\n                        BOM consisting of information obtained during a build process where component inventory is\n                        available for use. The precise versions of resolved components are usually available at this\n                        time as well as the provenance of where the components were retrieved from.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n",
                      "markdown": "`                    <xs:documentation>\n                        BOM consisting of information obtained during a build process where component inventory is\n                        available for use. The precise versions of resolved components are usually available at this\n                        time as well as the provenance of where the components were retrieved from.\n                    </xs:documentation>\n                </xs:annotation>\n            </xs:enumeration>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/schema/cyclonedx/cyclonedx.xsd"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 50,
                  "endLine": 128,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        <xs:sequence minOccurs=\"0\" maxOccurs=\"1\">\n            <xs:element name=\"timestamp\" type=\"xs:dateTime\" minOccurs=\"0\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the BOM was created.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"lifecycles\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                    "rendered": {
                      "text": "        <xs:sequence minOccurs=\"0\" maxOccurs=\"1\">\n            <xs:element name=\"timestamp\" type=\"xs:dateTime\" minOccurs=\"0\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the BOM was created.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"lifecycles\" minOccurs=\"0\" maxOccurs=\"1\">\n",
                      "markdown": "`        <xs:sequence minOccurs=\"0\" maxOccurs=\"1\">\n            <xs:element name=\"timestamp\" type=\"xs:dateTime\" minOccurs=\"0\">\n                <xs:annotation>\n                    <xs:documentation>The date and time (timestamp) when the BOM was created.</xs:documentation>\n                </xs:annotation>\n            </xs:element>\n            <xs:element name=\"lifecycles\" minOccurs=\"0\" maxOccurs=\"1\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/trigger-release.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -eu\n\nbold=$(tput bold)\nnormal=$(tput sgr0)\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -eu\n\nbold=$(tput bold)\nnormal=$(tput sgr0)\n",
                      "markdown": "`#!/usr/bin/env bash\nset -eu\n\nbold=$(tput bold)\nnormal=$(tput sgr0)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/trigger-release.sh"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 11,
                  "endLine": 60,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\necho \"${bold}Head to the release workflow to monitor the release:${normal} $($GH_CLI run list --workflow=release.yaml --limit=1 --json url --jq '.[].url')\"\nid=$($GH_CLI run list --workflow=release.yaml --limit=1 --json databaseId --jq '.[].databaseId')\n$GH_CLI run watch $id --exit-status || (echo ; echo \"${bold}Logs of failed step:${normal}\" && GH_PAGER=\"\" $GH_CLI run view $id --log-failed)\n",
                    "rendered": {
                      "text": "\necho \"${bold}Head to the release workflow to monitor the release:${normal} $($GH_CLI run list --workflow=release.yaml --limit=1 --json url --jq '.[].url')\"\nid=$($GH_CLI run list --workflow=release.yaml --limit=1 --json databaseId --jq '.[].databaseId')\n$GH_CLI run watch $id --exit-status || (echo ; echo \"${bold}Logs of failed step:${normal}\" && GH_PAGER=\"\" $GH_CLI run view $id --log-failed)\n",
                      "markdown": "`\necho \"${bold}Head to the release workflow to monitor the release:${normal} $($GH_CLI run list --workflow=release.yaml --limit=1 --json url --jq '.[].url')\"\nid=$($GH_CLI run list --workflow=release.yaml --limit=1 --json databaseId --jq '.[].databaseId')\n$GH_CLI run watch $id --exit-status || (echo ; echo \"${bold}Logs of failed step:${normal}\" && GH_PAGER=\"\" $GH_CLI run view $id --log-failed)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/trigger-release.sh"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 89,
                  "endLine": 26,
                  "endColumn": 4,
                  "snippet": {
                    "text": "export GITHUB_TOKEN=\"${GITHUB_TOKEN-\"$($GH_CLI auth token)\"}\"\n\n# we need all of the git state to determine the next version. Since tagging is done by\n# the release pipeline it is possible to not have all of the tags from previous releases.\ngit fetch --tags\n\n# populates the CHANGELOG.md and VERSION files\necho \"${bold}Generating changelog...${normal}\"\n",
                    "rendered": {
                      "text": "export GITHUB_TOKEN=\"${GITHUB_TOKEN-\"$($GH_CLI auth token)\"}\"\n\n# we need all of the git state to determine the next version. Since tagging is done by\n# the release pipeline it is possible to not have all of the tags from previous releases.\ngit fetch --tags\n\n# populates the CHANGELOG.md and VERSION files\necho \"${bold}Generating changelog...${normal}\"\n",
                      "markdown": "`export GITHUB_TOKEN=\"${GITHUB_TOKEN-\"$($GH_CLI auth token)\"}\"\n\n# we need all of the git state to determine the next version. Since tagging is done by\n# the release pipeline it is possible to not have all of the tags from previous releases.\ngit fetch --tags\n\n# populates the CHANGELOG.md and VERSION files\necho \"${bold}Generating changelog...${normal}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/trigger-release.sh"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 20,
                  "endLine": 24,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nexport GITHUB_TOKEN=\"${GITHUB_TOKEN-\"$($GH_CLI auth token)\"}\"\n\n# we need all of the git state to determine the next version. Since tagging is done by\n# the release pipeline it is possible to not have all of the tags from previous releases.\ngit fetch --tags\n\n",
                    "rendered": {
                      "text": "\nexport GITHUB_TOKEN=\"${GITHUB_TOKEN-\"$($GH_CLI auth token)\"}\"\n\n# we need all of the git state to determine the next version. Since tagging is done by\n# the release pipeline it is possible to not have all of the tags from previous releases.\ngit fetch --tags\n\n",
                      "markdown": "`\nexport GITHUB_TOKEN=\"${GITHUB_TOKEN-\"$($GH_CLI auth token)\"}\"\n\n# we need all of the git state to determine the next version. Since tagging is done by\n# the release pipeline it is possible to not have all of the tags from previous releases.\ngit fetch --tags\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/trigger-release.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -eu\n\nbold=$(tput bold)\nnormal=$(tput sgr0)\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -eu\n\nbold=$(tput bold)\nnormal=$(tput sgr0)\n",
                      "markdown": "`#!/usr/bin/env bash\nset -eu\n\nbold=$(tput bold)\nnormal=$(tput sgr0)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/check-syft-version-is-release.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 16,
                  "endLine": 11,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# this does not guarantee that the tag has a github release associated with it\nif [[ ! $version =~ ^v[0-9]+\\.[0-9]+\\.[0-9]?$ ]]; then\n    echo \"syft version in go.mod is not a release version: $version\"\n    echo \"please update the version in go.mod to a release version and try again\"\n    exit 1\nelse\n    echo \"syft version in go.mod is a release version: $version\"\n",
                    "rendered": {
                      "text": "# this does not guarantee that the tag has a github release associated with it\nif [[ ! $version =~ ^v[0-9]+\\.[0-9]+\\.[0-9]?$ ]]; then\n    echo \"syft version in go.mod is not a release version: $version\"\n    echo \"please update the version in go.mod to a release version and try again\"\n    exit 1\nelse\n    echo \"syft version in go.mod is a release version: $version\"\n",
                      "markdown": "`# this does not guarantee that the tag has a github release associated with it\nif [[ ! $version =~ ^v[0-9]+\\.[0-9]+\\.[0-9]?$ ]]; then\n    echo \"syft version in go.mod is not a release version: $version\"\n    echo \"please update the version in go.mod to a release version and try again\"\n    exit 1\nelse\n    echo \"syft version in go.mod is a release version: $version\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/check-syft-version-is-release.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\n\nversion=$(grep -E \"github.com/anchore/syft\" go.mod | awk '{print $NF}')\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\n\nversion=$(grep -E \"github.com/anchore/syft\" go.mod | awk '{print $NF}')\n\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\n\nversion=$(grep -E \"github.com/anchore/syft\" go.mod | awk '{print $NF}')\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/check-syft-version-is-release.sh"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 52,
                  "endLine": 4,
                  "endColumn": 57,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\n\nversion=$(grep -E \"github.com/anchore/syft\" go.mod | awk '{print $NF}')\n\n# ensure that the version is a release version (not a commit hash)\n# a release in this case means that the go tooling resolved the version to a tag\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\n\nversion=$(grep -E \"github.com/anchore/syft\" go.mod | awk '{print $NF}')\n\n# ensure that the version is a release version (not a commit hash)\n# a release in this case means that the go tooling resolved the version to a tag\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\n\nversion=$(grep -E \"github.com/anchore/syft\" go.mod | awk '{print $NF}')\n\n# ensure that the version is a release version (not a commit hash)\n# a release in this case means that the go tooling resolved the version to a tag\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.github/scripts/check-syft-version-is-release.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\n\nversion=$(grep -E \"github.com/anchore/syft\" go.mod | awk '{print $NF}')\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\n\nversion=$(grep -E \"github.com/anchore/syft\" go.mod | awk '{print $NF}')\n\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\n\nversion=$(grep -E \"github.com/anchore/syft\" go.mod | awk '{print $NF}')\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/internal/file/getter.go"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 60,
                  "endLine": 66,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\t\treturn fmt.Errorf(\"multiple monitors provided, which is not allowed\")\n\t}\n\n\treturn getterClient(dst, src, true, g.httpGetter, monitors).Get()\n}\n\nfunc validateHTTPSource(src string) error {\n",
                    "rendered": {
                      "text": "\t\treturn fmt.Errorf(\"multiple monitors provided, which is not allowed\")\n\t}\n\n\treturn getterClient(dst, src, true, g.httpGetter, monitors).Get()\n}\n\nfunc validateHTTPSource(src string) error {\n",
                      "markdown": "`\t\treturn fmt.Errorf(\"multiple monitors provided, which is not allowed\")\n\t}\n\n\treturn getterClient(dst, src, true, g.httpGetter, monitors).Get()\n}\n\nfunc validateHTTPSource(src string) error {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/internal/file/getter.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 61,
                  "endLine": 54,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\t\treturn fmt.Errorf(\"multiple monitors provided, which is not allowed\")\n\t}\n\n\treturn getterClient(dst, src, false, g.httpGetter, monitors).Get()\n}\n\nfunc (g HashiGoGetter) GetToDir(dst, src string, monitors ...*progress.Manual) error {\n",
                    "rendered": {
                      "text": "\t\treturn fmt.Errorf(\"multiple monitors provided, which is not allowed\")\n\t}\n\n\treturn getterClient(dst, src, false, g.httpGetter, monitors).Get()\n}\n\nfunc (g HashiGoGetter) GetToDir(dst, src string, monitors ...*progress.Manual) error {\n",
                      "markdown": "`\t\treturn fmt.Errorf(\"multiple monitors provided, which is not allowed\")\n\t}\n\n\treturn getterClient(dst, src, false, g.httpGetter, monitors).Get()\n}\n\nfunc (g HashiGoGetter) GetToDir(dst, src string, monitors ...*progress.Manual) error {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/internal/file/getter.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 41,
                  "endLine": 27,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t// GetFile downloads the give URL into the given path. The URL must reference a single file.\n\tGetFile(dst, src string, monitor ...*progress.Manual) error\n\n\t// GetToDir downloads the resource found at the `src` URL into the given `dst` directory.\n\t// The directory must already exist, and the remote resource MUST BE AN ARCHIVE (e.g. `.tar.gz`).\n\tGetToDir(dst, src string, monitor ...*progress.Manual) error\n}\n",
                    "rendered": {
                      "text": "\t// GetFile downloads the give URL into the given path. The URL must reference a single file.\n\tGetFile(dst, src string, monitor ...*progress.Manual) error\n\n\t// GetToDir downloads the resource found at the `src` URL into the given `dst` directory.\n\t// The directory must already exist, and the remote resource MUST BE AN ARCHIVE (e.g. `.tar.gz`).\n\tGetToDir(dst, src string, monitor ...*progress.Manual) error\n}\n",
                      "markdown": "`\t// GetFile downloads the give URL into the given path. The URL must reference a single file.\n\tGetFile(dst, src string, monitor ...*progress.Manual) error\n\n\t// GetToDir downloads the resource found at the `src` URL into the given `dst` directory.\n\t// The directory must already exist, and the remote resource MUST BE AN ARCHIVE (e.g. `.tar.gz`).\n\tGetToDir(dst, src string, monitor ...*progress.Manual) error\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.bouncer.yaml"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 83,
                  "endLine": 11,
                  "endColumn": 87,
                  "snippet": {
                    "text": "  - WTFPL\n\nignore-packages:\n  # packageurl-go is released under the MIT license located in the root of the repo at /mit.LICENSE\n  - github.com/anchore/packageurl-go\n\n  # tools-golang is released under the Apache License, version 2.0 (Apache-2.0)\n",
                    "rendered": {
                      "text": "  - WTFPL\n\nignore-packages:\n  # packageurl-go is released under the MIT license located in the root of the repo at /mit.LICENSE\n  - github.com/anchore/packageurl-go\n\n  # tools-golang is released under the Apache License, version 2.0 (Apache-2.0)\n",
                      "markdown": "`  - WTFPL\n\nignore-packages:\n  # packageurl-go is released under the MIT license located in the root of the repo at /mit.LICENSE\n  - github.com/anchore/packageurl-go\n\n  # tools-golang is released under the Apache License, version 2.0 (Apache-2.0)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.bouncer.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 48,
                  "endLine": 18,
                  "endColumn": 57,
                  "snippet": {
                    "text": "  # https://github.com/spdx/tools-golang/blob/main/LICENSE.code\n  - github.com/spdx/tools-golang\n\n  # crypto/internal/boring is released under the openSSL license as a part of the Golang Standard Libary\n  - crypto/internal/boring\n\n  # from: https://github.com/xi2/xz/blob/master/LICENSE\n",
                    "rendered": {
                      "text": "  # https://github.com/spdx/tools-golang/blob/main/LICENSE.code\n  - github.com/spdx/tools-golang\n\n  # crypto/internal/boring is released under the openSSL license as a part of the Golang Standard Libary\n  - crypto/internal/boring\n\n  # from: https://github.com/xi2/xz/blob/master/LICENSE\n",
                      "markdown": "`  # https://github.com/spdx/tools-golang/blob/main/LICENSE.code\n  - github.com/spdx/tools-golang\n\n  # crypto/internal/boring is released under the openSSL license as a part of the Golang Standard Libary\n  - crypto/internal/boring\n\n  # from: https://github.com/xi2/xz/blob/master/LICENSE\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.goreleaser.yaml"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 7,
                  "endLine": 81,
                  "snippet": {
                    "text": "    homepage: &website \"https://github.com/anchore/grype\"\n    description: &description \"A vulnerability scanner for container images and filesystems\"\n    formats:\n      - rpm\n      - deb\n\nbrews:\n  - repository:\n",
                    "rendered": {
                      "text": "    homepage: &website \"https://github.com/anchore/grype\"\n    description: &description \"A vulnerability scanner for container images and filesystems\"\n    formats:\n      - rpm\n      - deb\n\nbrews:\n  - repository:\n",
                      "markdown": "`    homepage: &website \"https://github.com/anchore/grype\"\n    description: &description \"A vulnerability scanner for container images and filesystems\"\n    formats:\n      - rpm\n      - deb\n\nbrews:\n  - repository:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.goreleaser.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 60,
                  "endLine": 23,
                  "endColumn": 65,
                  "snippet": {
                    "text": "      - arm64\n      - ppc64le\n      - s390x\n    # set the modified timestamp on the output binary to the git timestamp to ensure a reproducible build\n    mod_timestamp: &build-timestamp '{{ .CommitTimestamp }}'\n    ldflags: &build-ldflags |\n      -w\n",
                    "rendered": {
                      "text": "      - arm64\n      - ppc64le\n      - s390x\n    # set the modified timestamp on the output binary to the git timestamp to ensure a reproducible build\n    mod_timestamp: &build-timestamp '{{ .CommitTimestamp }}'\n    ldflags: &build-ldflags |\n      -w\n",
                      "markdown": "`      - arm64\n      - ppc64le\n      - s390x\n    # set the modified timestamp on the output binary to the git timestamp to ensure a reproducible build\n    mod_timestamp: &build-timestamp '{{ .CommitTimestamp }}'\n    ldflags: &build-ldflags |\n      -w\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/grype.zip/.goreleaser.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 42,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "  draft: false\n\nenv:\n  # required to support multi architecture docker builds\n  - DOCKER_CLI_EXPERIMENTAL=enabled\n  - CGO_ENABLED=0\n\n",
                    "rendered": {
                      "text": "  draft: false\n\nenv:\n  # required to support multi architecture docker builds\n  - DOCKER_CLI_EXPERIMENTAL=enabled\n  - CGO_ENABLED=0\n\n",
                      "markdown": "`  draft: false\n\nenv:\n  # required to support multi architecture docker builds\n  - DOCKER_CLI_EXPERIMENTAL=enabled\n  - CGO_ENABLED=0\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}