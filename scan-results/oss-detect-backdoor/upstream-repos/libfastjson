{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/test-defs.sh"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 28,
                  "endLine": 113,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n\tif ! \"$CMP\" -s \"${srcdir}/${TEST_OUTPUT}.expected\" \"${TEST_OUTPUT}.out\" ; then\n\t\techo \"ERROR: \\\"${TEST_COMMAND} $@\\\" (${TEST_OUTPUT}) failed (set VERBOSE=1 to see full output):\" 1>&2\n\t\t(cd \"${CURDIR}\" ; set -x ; diff \"${srcdir}/${TEST_OUTPUT}.expected\" \"$testsubdir/${TEST_OUTPUT}.out\")\n\t\techo \"cp \\\"$testsubdir/${TEST_OUTPUT}.out\\\" \\\"${srcdir}/${TEST_OUTPUT}.expected\\\"\" 1>&2\n\n\t\terr=1\n",
                    "rendered": {
                      "text": "\n\tif ! \"$CMP\" -s \"${srcdir}/${TEST_OUTPUT}.expected\" \"${TEST_OUTPUT}.out\" ; then\n\t\techo \"ERROR: \\\"${TEST_COMMAND} $@\\\" (${TEST_OUTPUT}) failed (set VERBOSE=1 to see full output):\" 1>&2\n\t\t(cd \"${CURDIR}\" ; set -x ; diff \"${srcdir}/${TEST_OUTPUT}.expected\" \"$testsubdir/${TEST_OUTPUT}.out\")\n\t\techo \"cp \\\"$testsubdir/${TEST_OUTPUT}.out\\\" \\\"${srcdir}/${TEST_OUTPUT}.expected\\\"\" 1>&2\n\n\t\terr=1\n",
                      "markdown": "`\n\tif ! \"$CMP\" -s \"${srcdir}/${TEST_OUTPUT}.expected\" \"${TEST_OUTPUT}.out\" ; then\n\t\techo \"ERROR: \\\"${TEST_COMMAND} $@\\\" (${TEST_OUTPUT}) failed (set VERBOSE=1 to see full output):\" 1>&2\n\t\t(cd \"${CURDIR}\" ; set -x ; diff \"${srcdir}/${TEST_OUTPUT}.expected\" \"$testsubdir/${TEST_OUTPUT}.out\")\n\t\techo \"cp \\\"$testsubdir/${TEST_OUTPUT}.out\\\" \\\"${srcdir}/${TEST_OUTPUT}.expected\\\"\" 1>&2\n\n\t\terr=1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/test-defs.sh"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 2,
                  "endLine": 106,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tif [ \"$VALGRIND\" = \"valgrind\" ] ; then\n\t\tif ! tail -1 \"${TEST_OUTPUT}.vg.out\" | grep -q \"ERROR SUMMARY: 0 errors\" ; then\n\t\t\techo \"ERROR: valgrind found errors during execution:\" 1>&2\n\t\t\tcat \"${TEST_OUTPUT}.vg.out\"\n\t\t\terr=1\n\t\tfi\n\tfi\n",
                    "rendered": {
                      "text": "\tif [ \"$VALGRIND\" = \"valgrind\" ] ; then\n\t\tif ! tail -1 \"${TEST_OUTPUT}.vg.out\" | grep -q \"ERROR SUMMARY: 0 errors\" ; then\n\t\t\techo \"ERROR: valgrind found errors during execution:\" 1>&2\n\t\t\tcat \"${TEST_OUTPUT}.vg.out\"\n\t\t\terr=1\n\t\tfi\n\tfi\n",
                      "markdown": "`\tif [ \"$VALGRIND\" = \"valgrind\" ] ; then\n\t\tif ! tail -1 \"${TEST_OUTPUT}.vg.out\" | grep -q \"ERROR SUMMARY: 0 errors\" ; then\n\t\t\techo \"ERROR: valgrind found errors during execution:\" 1>&2\n\t\t\tcat \"${TEST_OUTPUT}.vg.out\"\n\t\t\terr=1\n\t\tfi\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/test-defs.sh"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 40,
                  "endLine": 104,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\tfi\n\n\tif [ \"$VALGRIND\" = \"valgrind\" ] ; then\n\t\tif ! tail -1 \"${TEST_OUTPUT}.vg.out\" | grep -q \"ERROR SUMMARY: 0 errors\" ; then\n\t\t\techo \"ERROR: valgrind found errors during execution:\" 1>&2\n\t\t\tcat \"${TEST_OUTPUT}.vg.out\"\n\t\t\terr=1\n",
                    "rendered": {
                      "text": "\tfi\n\n\tif [ \"$VALGRIND\" = \"valgrind\" ] ; then\n\t\tif ! tail -1 \"${TEST_OUTPUT}.vg.out\" | grep -q \"ERROR SUMMARY: 0 errors\" ; then\n\t\t\techo \"ERROR: valgrind found errors during execution:\" 1>&2\n\t\t\tcat \"${TEST_OUTPUT}.vg.out\"\n\t\t\terr=1\n",
                      "markdown": "`\tfi\n\n\tif [ \"$VALGRIND\" = \"valgrind\" ] ; then\n\t\tif ! tail -1 \"${TEST_OUTPUT}.vg.out\" | grep -q \"ERROR SUMMARY: 0 errors\" ; then\n\t\t\techo \"ERROR: valgrind found errors during execution:\" 1>&2\n\t\t\tcat \"${TEST_OUTPUT}.vg.out\"\n\t\t\terr=1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/test-defs.sh"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 6,
                  "endLine": 104,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tfi\n\n\tif [ \"$VALGRIND\" = \"valgrind\" ] ; then\n\t\tif ! tail -1 \"${TEST_OUTPUT}.vg.out\" | grep -q \"ERROR SUMMARY: 0 errors\" ; then\n\t\t\techo \"ERROR: valgrind found errors during execution:\" 1>&2\n\t\t\tcat \"${TEST_OUTPUT}.vg.out\"\n\t\t\terr=1\n",
                    "rendered": {
                      "text": "\tfi\n\n\tif [ \"$VALGRIND\" = \"valgrind\" ] ; then\n\t\tif ! tail -1 \"${TEST_OUTPUT}.vg.out\" | grep -q \"ERROR SUMMARY: 0 errors\" ; then\n\t\t\techo \"ERROR: valgrind found errors during execution:\" 1>&2\n\t\t\tcat \"${TEST_OUTPUT}.vg.out\"\n\t\t\terr=1\n",
                      "markdown": "`\tfi\n\n\tif [ \"$VALGRIND\" = \"valgrind\" ] ; then\n\t\tif ! tail -1 \"${TEST_OUTPUT}.vg.out\" | grep -q \"ERROR SUMMARY: 0 errors\" ; then\n\t\t\techo \"ERROR: valgrind found errors during execution:\" 1>&2\n\t\t\tcat \"${TEST_OUTPUT}.vg.out\"\n\t\t\terr=1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/test-defs.sh"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 17,
                  "endLine": 80,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n\tREDIR_OUTPUT=\"> \\\"${TEST_OUTPUT}.out\\\"\"\n\tif [ $VERBOSE -gt 1 ] ; then\n\t\tREDIR_OUTPUT=\"| tee \\\"${TEST_OUTPUT}.out\\\"\"\n\tfi\n\n\tif [ \"$VALGRIND\" = \"valgrind\" ] ; then\n",
                    "rendered": {
                      "text": "\n\tREDIR_OUTPUT=\"> \\\"${TEST_OUTPUT}.out\\\"\"\n\tif [ $VERBOSE -gt 1 ] ; then\n\t\tREDIR_OUTPUT=\"| tee \\\"${TEST_OUTPUT}.out\\\"\"\n\tfi\n\n\tif [ \"$VALGRIND\" = \"valgrind\" ] ; then\n",
                      "markdown": "`\n\tREDIR_OUTPUT=\"> \\\"${TEST_OUTPUT}.out\\\"\"\n\tif [ $VERBOSE -gt 1 ] ; then\n\t\tREDIR_OUTPUT=\"| tee \\\"${TEST_OUTPUT}.out\\\"\"\n\tfi\n\n\tif [ \"$VALGRIND\" = \"valgrind\" ] ; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/test-defs.sh"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 36,
                  "endLine": 56,
                  "endColumn": 41,
                  "snippet": {
                    "text": "# This is a common function to check the results of a test program\n# that is intended to generate consistent output across runs.\n#\n# ${top_builddir} must be set to the top level build directory.\n#\n# Output will be written to the current directory.\n#\n",
                    "rendered": {
                      "text": "# This is a common function to check the results of a test program\n# that is intended to generate consistent output across runs.\n#\n# ${top_builddir} must be set to the top level build directory.\n#\n# Output will be written to the current directory.\n#\n",
                      "markdown": "`# This is a common function to check the results of a test program\n# that is intended to generate consistent output across runs.\n#\n# ${top_builddir} must be set to the top level build directory.\n#\n# Output will be written to the current directory.\n#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/test-defs.sh"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 28,
                  "endLine": 27,
                  "endColumn": 33,
                  "snippet": {
                    "text": "top_builddir=${top_builddir}/tests\n\nprogname=`echo \"$0\" | sed 's,^.*/,,'`\ntestname=`echo \"$progname\" | sed 's,-.*$,,'`\ntestsubdir=${testsubdir-testSubDir}\ntestsubdir=${testsubdir}/${progname}\n\n",
                    "rendered": {
                      "text": "top_builddir=${top_builddir}/tests\n\nprogname=`echo \"$0\" | sed 's,^.*/,,'`\ntestname=`echo \"$progname\" | sed 's,-.*$,,'`\ntestsubdir=${testsubdir-testSubDir}\ntestsubdir=${testsubdir}/${progname}\n\n",
                      "markdown": "`top_builddir=${top_builddir}/tests\n\nprogname=`echo \"$0\" | sed 's,^.*/,,'`\ntestname=`echo \"$progname\" | sed 's,-.*$,,'`\ntestsubdir=${testsubdir-testSubDir}\ntestsubdir=${testsubdir}/${progname}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/test-defs.sh"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 21,
                  "endLine": 26,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\ntop_builddir=${top_builddir}/tests\n\nprogname=`echo \"$0\" | sed 's,^.*/,,'`\ntestname=`echo \"$progname\" | sed 's,-.*$,,'`\ntestsubdir=${testsubdir-testSubDir}\ntestsubdir=${testsubdir}/${progname}\n",
                    "rendered": {
                      "text": "\ntop_builddir=${top_builddir}/tests\n\nprogname=`echo \"$0\" | sed 's,^.*/,,'`\ntestname=`echo \"$progname\" | sed 's,-.*$,,'`\ntestsubdir=${testsubdir-testSubDir}\ntestsubdir=${testsubdir}/${progname}\n",
                      "markdown": "`\ntop_builddir=${top_builddir}/tests\n\nprogname=`echo \"$0\" | sed 's,^.*/,,'`\ntestname=`echo \"$progname\" | sed 's,-.*$,,'`\ntestsubdir=${testsubdir-testSubDir}\ntestsubdir=${testsubdir}/${progname}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/json_tokener.c"
                },
                "region": {
                  "startLine": 951,
                  "startColumn": 43,
                  "endLine": 951,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\treturn ret;\n\t}\n\n\tMC_DEBUG(\"fjson_tokener_parse_ex: error %s at offset %d\\n\", fjson_tokener_errors[tok->err], tok->char_offset);\n\treturn NULL;\n}\n\n",
                    "rendered": {
                      "text": "\t\treturn ret;\n\t}\n\n\tMC_DEBUG(\"fjson_tokener_parse_ex: error %s at offset %d\\n\", fjson_tokener_errors[tok->err], tok->char_offset);\n\treturn NULL;\n}\n\n",
                      "markdown": "`\t\treturn ret;\n\t}\n\n\tMC_DEBUG(\"fjson_tokener_parse_ex: error %s at offset %d\\n\", fjson_tokener_errors[tok->err], tok->char_offset);\n\treturn NULL;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/testReplaceExisting.expected"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 3,
                  "endLine": 15,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Key at index 0 is [foo1]\nKey at index 1 is [foo2]\npointer for key [foo2] does match\nKey at index 2 is [foo3]\n",
                    "rendered": {
                      "text": "Key at index 0 is [foo1]\nKey at index 1 is [foo2]\npointer for key [foo2] does match\nKey at index 2 is [foo3]\n",
                      "markdown": "`Key at index 0 is [foo1]\nKey at index 1 is [foo2]\npointer for key [foo2] does match\nKey at index 2 is [foo3]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/testReplaceExisting.expected"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Key at index 2 is [foo3]\n==== second loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\npointer for key [foo2] does match\nKey at index 2 is [foo3]\n",
                    "rendered": {
                      "text": "Key at index 2 is [foo3]\n==== second loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\npointer for key [foo2] does match\nKey at index 2 is [foo3]\n",
                      "markdown": "`Key at index 2 is [foo3]\n==== second loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\npointer for key [foo2] does match\nKey at index 2 is [foo3]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/testReplaceExisting.expected"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 3,
                  "endLine": 12,
                  "endColumn": 7,
                  "snippet": {
                    "text": "replacing value for key [foo2]\nKey at index 2 is [foo3]\n==== second loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\npointer for key [foo2] does match\nKey at index 2 is [foo3]\n",
                    "rendered": {
                      "text": "replacing value for key [foo2]\nKey at index 2 is [foo3]\n==== second loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\npointer for key [foo2] does match\nKey at index 2 is [foo3]\n",
                      "markdown": "`replacing value for key [foo2]\nKey at index 2 is [foo3]\n==== second loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\npointer for key [foo2] does match\nKey at index 2 is [foo3]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/testReplaceExisting.expected"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 3,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Key at index 0 is [foo1]\nKey at index 1 is [foo2]\nreplacing value for key [foo2]\nKey at index 2 is [foo3]\n==== second loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\n",
                    "rendered": {
                      "text": "Key at index 0 is [foo1]\nKey at index 1 is [foo2]\nreplacing value for key [foo2]\nKey at index 2 is [foo3]\n==== second loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\n",
                      "markdown": "`Key at index 0 is [foo1]\nKey at index 1 is [foo2]\nreplacing value for key [foo2]\nKey at index 2 is [foo3]\n==== second loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/testReplaceExisting.expected"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 3,
                  "endLine": 8,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Key at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\nreplacing value for key [foo2]\nKey at index 2 is [foo3]\n==== second loop starting ====\n",
                    "rendered": {
                      "text": "Key at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\nreplacing value for key [foo2]\nKey at index 2 is [foo3]\n==== second loop starting ====\n",
                      "markdown": "`Key at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\nreplacing value for key [foo2]\nKey at index 2 is [foo3]\n==== second loop starting ====\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/testReplaceExisting.expected"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 3,
                  "endLine": 7,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Key at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\nreplacing value for key [foo2]\nKey at index 2 is [foo3]\n",
                    "rendered": {
                      "text": "Key at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\nreplacing value for key [foo2]\nKey at index 2 is [foo3]\n",
                      "markdown": "`Key at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\nreplacing value for key [foo2]\nKey at index 2 is [foo3]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/testReplaceExisting.expected"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 3,
                  "endLine": 5,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Key at index 0 is [foo1] (kept)\nKey at index 1 is [foo2] (kept)\nKey at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\n",
                    "rendered": {
                      "text": "Key at index 0 is [foo1] (kept)\nKey at index 1 is [foo2] (kept)\nKey at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\n",
                      "markdown": "`Key at index 0 is [foo1] (kept)\nKey at index 1 is [foo2] (kept)\nKey at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\nKey at index 0 is [foo1]\nKey at index 1 is [foo2]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/testReplaceExisting.expected"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 7,
                  "snippet": {
                    "text": "==== delete-in-loop test starting ====\nKey at index 0 is [foo1] (kept)\nKey at index 1 is [foo2] (kept)\nKey at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\nKey at index 0 is [foo1]\n",
                    "rendered": {
                      "text": "==== delete-in-loop test starting ====\nKey at index 0 is [foo1] (kept)\nKey at index 1 is [foo2] (kept)\nKey at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\nKey at index 0 is [foo1]\n",
                      "markdown": "`==== delete-in-loop test starting ====\nKey at index 0 is [foo1] (kept)\nKey at index 1 is [foo2] (kept)\nKey at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\nKey at index 0 is [foo1]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/testReplaceExisting.expected"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 3,
                  "endLine": 3,
                  "endColumn": 7,
                  "snippet": {
                    "text": "==== delete-in-loop test starting ====\nKey at index 0 is [foo1] (kept)\nKey at index 1 is [foo2] (kept)\nKey at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\n",
                    "rendered": {
                      "text": "==== delete-in-loop test starting ====\nKey at index 0 is [foo1] (kept)\nKey at index 1 is [foo2] (kept)\nKey at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\n",
                      "markdown": "`==== delete-in-loop test starting ====\nKey at index 0 is [foo1] (kept)\nKey at index 1 is [foo2] (kept)\nKey at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n==== replace-value first loop starting ====\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/testReplaceExisting.expected"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 3,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "==== delete-in-loop test starting ====\nKey at index 0 is [foo1] (kept)\nKey at index 1 is [foo2] (kept)\nKey at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n",
                    "rendered": {
                      "text": "==== delete-in-loop test starting ====\nKey at index 0 is [foo1] (kept)\nKey at index 1 is [foo2] (kept)\nKey at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n",
                      "markdown": "`==== delete-in-loop test starting ====\nKey at index 0 is [foo1] (kept)\nKey at index 1 is [foo2] (kept)\nKey at index 2 is [deleteme] (deleted)\nKey at index 3 is [foo3] (kept)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/m4/ax_require_defined.m4"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 42,
                  "endLine": 18,
                  "endColumn": 50,
                  "snippet": {
                    "text": "#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n#\n#   It's like AC_REQUIRE except it doesn't expand the required macro.\n#\n#   Here's an example:\n#\n",
                    "rendered": {
                      "text": "#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n#\n#   It's like AC_REQUIRE except it doesn't expand the required macro.\n#\n#   Here's an example:\n#\n",
                      "markdown": "`#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n#\n#   It's like AC_REQUIRE except it doesn't expand the required macro.\n#\n#   Here's an example:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/m4/ax_require_defined.m4"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 42,
                  "endLine": 18,
                  "endColumn": 50,
                  "snippet": {
                    "text": "#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n#\n#   It's like AC_REQUIRE except it doesn't expand the required macro.\n#\n#   Here's an example:\n#\n",
                    "rendered": {
                      "text": "#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n#\n#   It's like AC_REQUIRE except it doesn't expand the required macro.\n#\n#   Here's an example:\n#\n",
                      "markdown": "`#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n#\n#   It's like AC_REQUIRE except it doesn't expand the required macro.\n#\n#   Here's an example:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/m4/ax_require_defined.m4"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 56,
                  "endLine": 13,
                  "endColumn": 64,
                  "snippet": {
                    "text": "#\n#   AX_REQUIRE_DEFINED is a simple helper for making sure other macros have\n#   been defined and thus are available for use.  This avoids random issues\n#   where a macro isn't expanded.  Instead the configure script emits a\n#   non-fatal:\n#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n",
                    "rendered": {
                      "text": "#\n#   AX_REQUIRE_DEFINED is a simple helper for making sure other macros have\n#   been defined and thus are available for use.  This avoids random issues\n#   where a macro isn't expanded.  Instead the configure script emits a\n#   non-fatal:\n#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n",
                      "markdown": "`#\n#   AX_REQUIRE_DEFINED is a simple helper for making sure other macros have\n#   been defined and thus are available for use.  This avoids random issues\n#   where a macro isn't expanded.  Instead the configure script emits a\n#   non-fatal:\n#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/testReplaceExisting.c"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 13,
                  "endLine": 78,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\tkey = fjson_object_iter_peek_name(&it);\n\t\t/* need to advance now, as modify invalidates \"it\" */\n\t\tfjson_object_iter_next(&it);\n\t\tprintf(\"Key at index %d is [%s]\\n\", new_count, key);\n\t\tnew_count++;\n\t\tif (strcmp(key, \"foo2\") != 0)\n\t\t\tcontinue;\n",
                    "rendered": {
                      "text": "\t\tkey = fjson_object_iter_peek_name(&it);\n\t\t/* need to advance now, as modify invalidates \"it\" */\n\t\tfjson_object_iter_next(&it);\n\t\tprintf(\"Key at index %d is [%s]\\n\", new_count, key);\n\t\tnew_count++;\n\t\tif (strcmp(key, \"foo2\") != 0)\n\t\t\tcontinue;\n",
                      "markdown": "`\t\tkey = fjson_object_iter_peek_name(&it);\n\t\t/* need to advance now, as modify invalidates \"it\" */\n\t\tfjson_object_iter_next(&it);\n\t\tprintf(\"Key at index %d is [%s]\\n\", new_count, key);\n\t\tnew_count++;\n\t\tif (strcmp(key, \"foo2\") != 0)\n\t\t\tcontinue;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/testReplaceExisting.c"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 13,
                  "endLine": 59,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\tkey = fjson_object_iter_peek_name(&it);\n\t\t/* need to advance now, as modify invalidates \"it\" */\n\t\tfjson_object_iter_next(&it);\n\t\tprintf(\"Key at index %d is [%s]\\n\", orig_count, key);\n\t\torig_count++;\n\t\tif (strcmp(key, \"foo2\") != 0)\n\t\t\tcontinue;\n",
                    "rendered": {
                      "text": "\t\tkey = fjson_object_iter_peek_name(&it);\n\t\t/* need to advance now, as modify invalidates \"it\" */\n\t\tfjson_object_iter_next(&it);\n\t\tprintf(\"Key at index %d is [%s]\\n\", orig_count, key);\n\t\torig_count++;\n\t\tif (strcmp(key, \"foo2\") != 0)\n\t\t\tcontinue;\n",
                      "markdown": "`\t\tkey = fjson_object_iter_peek_name(&it);\n\t\t/* need to advance now, as modify invalidates \"it\" */\n\t\tfjson_object_iter_next(&it);\n\t\tprintf(\"Key at index %d is [%s]\\n\", orig_count, key);\n\t\torig_count++;\n\t\tif (strcmp(key, \"foo2\") != 0)\n\t\t\tcontinue;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/testReplaceExisting.c"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 13,
                  "endLine": 37,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\tit = fjson_object_iter_begin(my_object);\n\twhile (!fjson_object_iter_equal(&it, &itEnd)) {\n\t\tkey = fjson_object_iter_peek_name(&it);\n\t\tprintf(\"Key at index %d is [%s]\", orig_count, key);\n\t\t/* need to advance now, as del invalidates \"it\" */\n\t\tfjson_object_iter_next(&it);\n\t\tif (strcmp(key, \"deleteme\") == 0) {\n",
                    "rendered": {
                      "text": "\tit = fjson_object_iter_begin(my_object);\n\twhile (!fjson_object_iter_equal(&it, &itEnd)) {\n\t\tkey = fjson_object_iter_peek_name(&it);\n\t\tprintf(\"Key at index %d is [%s]\", orig_count, key);\n\t\t/* need to advance now, as del invalidates \"it\" */\n\t\tfjson_object_iter_next(&it);\n\t\tif (strcmp(key, \"deleteme\") == 0) {\n",
                      "markdown": "`\tit = fjson_object_iter_begin(my_object);\n\twhile (!fjson_object_iter_equal(&it, &itEnd)) {\n\t\tkey = fjson_object_iter_peek_name(&it);\n\t\tprintf(\"Key at index %d is [%s]\", orig_count, key);\n\t\t/* need to advance now, as del invalidates \"it\" */\n\t\tfjson_object_iter_next(&it);\n\t\tif (strcmp(key, \"deleteme\") == 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/clang-check-sanitizer.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 11,
                  "endLine": 8,
                  "endColumn": 4,
                  "snippet": {
                    "text": "export CC=gcc # clang --> package currently broken in fedora 23\nexport CFLAGS=\"-g -fsanitize=address\"\n./autogen.sh\n./configure\ncat config.log\nmake clean\nexport VERBOSE=1\nmake check\n",
                    "rendered": {
                      "text": "export CC=gcc # clang --> package currently broken in fedora 23\nexport CFLAGS=\"-g -fsanitize=address\"\n./autogen.sh\n./configure\ncat config.log\nmake clean\nexport VERBOSE=1\nmake check\n",
                      "markdown": "`export CC=gcc # clang --> package currently broken in fedora 23\nexport CFLAGS=\"-g -fsanitize=address\"\n./autogen.sh\n./configure\ncat config.log\nmake clean\nexport VERBOSE=1\nmake check\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/tests/Makefile.am"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 27,
                  "endLine": 25,
                  "endColumn": 31,
                  "snippet": {
                    "text": "TESTS+= test_many_subobj.test\nTESTS+= test_obj_obj_get_ex-null.test\n# we officially do NOT support NUL bytes (however, we may\n# later add a workaround to at least transparently pass them\n# through, thus I keep this as reference).\n#TESTS+= test_null.test \n\n",
                    "rendered": {
                      "text": "TESTS+= test_many_subobj.test\nTESTS+= test_obj_obj_get_ex-null.test\n# we officially do NOT support NUL bytes (however, we may\n# later add a workaround to at least transparently pass them\n# through, thus I keep this as reference).\n#TESTS+= test_null.test \n\n",
                      "markdown": "`TESTS+= test_many_subobj.test\nTESTS+= test_obj_obj_get_ex-null.test\n# we officially do NOT support NUL bytes (however, we may\n# later add a workaround to at least transparently pass them\n# through, thus I keep this as reference).\n#TESTS+= test_null.test \n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/try_merge.sh"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 34,
                  "endColumn": 4,
                  "snippet": {
                    "text": "set -e\n\nCI/clang-check-sanitizer.sh\n\ngit checkout ${oldbranch}\n",
                    "rendered": {
                      "text": "set -e\n\nCI/clang-check-sanitizer.sh\n\ngit checkout ${oldbranch}\n",
                      "markdown": "`set -e\n\nCI/clang-check-sanitizer.sh\n\ngit checkout ${oldbranch}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/try_merge.sh"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 16,
                  "endLine": 21,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    exit 0\nfi\necho \"======================================================================\"\necho \"= SUCCESS: git merge; doing some more tests on master+PR             =\"\necho \"======================================================================\"\necho \"Note: failing tests may not be reproducible if master branch advances.\"\necho \"      However, they should not be taken lightly as they point into to\"\n",
                    "rendered": {
                      "text": "    exit 0\nfi\necho \"======================================================================\"\necho \"= SUCCESS: git merge; doing some more tests on master+PR             =\"\necho \"======================================================================\"\necho \"Note: failing tests may not be reproducible if master branch advances.\"\necho \"      However, they should not be taken lightly as they point into to\"\n",
                      "markdown": "`    exit 0\nfi\necho \"======================================================================\"\necho \"= SUCCESS: git merge; doing some more tests on master+PR             =\"\necho \"======================================================================\"\necho \"Note: failing tests may not be reproducible if master branch advances.\"\necho \"      However, they should not be taken lightly as they point into to\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/try_merge.sh"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 17,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    echo \"Note: this is not an error per se, can happen. In this case the user\"\n    echo \"must be somewhat more careful when merging.\"\n    git merge --abort\n    git checkout ${oldbranch}\n    exit 0\nfi\necho \"======================================================================\"\n",
                    "rendered": {
                      "text": "    echo \"Note: this is not an error per se, can happen. In this case the user\"\n    echo \"must be somewhat more careful when merging.\"\n    git merge --abort\n    git checkout ${oldbranch}\n    exit 0\nfi\necho \"======================================================================\"\n",
                      "markdown": "`    echo \"Note: this is not an error per se, can happen. In this case the user\"\n    echo \"must be somewhat more careful when merging.\"\n    git merge --abort\n    git checkout ${oldbranch}\n    exit 0\nfi\necho \"======================================================================\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/try_merge.sh"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "endLine": 16,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    echo \"======================================================================\"\n    echo \"Note: this is not an error per se, can happen. In this case the user\"\n    echo \"must be somewhat more careful when merging.\"\n    git merge --abort\n    git checkout ${oldbranch}\n    exit 0\nfi\n",
                    "rendered": {
                      "text": "    echo \"======================================================================\"\n    echo \"Note: this is not an error per se, can happen. In this case the user\"\n    echo \"must be somewhat more careful when merging.\"\n    git merge --abort\n    git checkout ${oldbranch}\n    exit 0\nfi\n",
                      "markdown": "`    echo \"======================================================================\"\n    echo \"Note: this is not an error per se, can happen. In this case the user\"\n    echo \"must be somewhat more careful when merging.\"\n    git merge --abort\n    git checkout ${oldbranch}\n    exit 0\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/try_merge.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 17,
                  "endLine": 12,
                  "endColumn": 22,
                  "snippet": {
                    "text": "git merge --no-edit origin/master\nif [ $? -ne 0 ]; then\n    echo \"======================================================================\"\n    echo \"= FAIL: git merge, not doing any tests on the merge result           =\"\n    echo \"======================================================================\"\n    echo \"Note: this is not an error per se, can happen. In this case the user\"\n    echo \"must be somewhat more careful when merging.\"\n",
                    "rendered": {
                      "text": "git merge --no-edit origin/master\nif [ $? -ne 0 ]; then\n    echo \"======================================================================\"\n    echo \"= FAIL: git merge, not doing any tests on the merge result           =\"\n    echo \"======================================================================\"\n    echo \"Note: this is not an error per se, can happen. In this case the user\"\n    echo \"must be somewhat more careful when merging.\"\n",
                      "markdown": "`git merge --no-edit origin/master\nif [ $? -ne 0 ]; then\n    echo \"======================================================================\"\n    echo \"= FAIL: git merge, not doing any tests on the merge result           =\"\n    echo \"======================================================================\"\n    echo \"Note: this is not an error per se, can happen. In this case the user\"\n    echo \"must be somewhat more careful when merging.\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/try_merge.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 16,
                  "endLine": 9,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\ngit merge --no-edit origin/master\nif [ $? -ne 0 ]; then\n    echo \"======================================================================\"\n    echo \"= FAIL: git merge, not doing any tests on the merge result           =\"\n",
                    "rendered": {
                      "text": "git branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\ngit merge --no-edit origin/master\nif [ $? -ne 0 ]; then\n    echo \"======================================================================\"\n    echo \"= FAIL: git merge, not doing any tests on the merge result           =\"\n",
                      "markdown": "`git branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\ngit merge --no-edit origin/master\nif [ $? -ne 0 ]; then\n    echo \"======================================================================\"\n    echo \"= FAIL: git merge, not doing any tests on the merge result           =\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/try_merge.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 19,
                  "endLine": 8,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\ngit merge --no-edit origin/master\nif [ $? -ne 0 ]; then\n    echo \"======================================================================\"\n",
                    "rendered": {
                      "text": "git config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\ngit merge --no-edit origin/master\nif [ $? -ne 0 ]; then\n    echo \"======================================================================\"\n",
                      "markdown": "`git config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\ngit merge --no-edit origin/master\nif [ $? -ne 0 ]; then\n    echo \"======================================================================\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/try_merge.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\ngit merge --no-edit origin/master\nif [ $? -ne 0 ]; then\n",
                    "rendered": {
                      "text": "git config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\ngit merge --no-edit origin/master\nif [ $? -ne 0 ]; then\n",
                      "markdown": "`git config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\ngit merge --no-edit origin/master\nif [ $? -ne 0 ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/try_merge.sh"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 20,
                  "endLine": 6,
                  "endColumn": 4,
                  "snippet": {
                    "text": "oldbranch=`git rev-parse --abbrev-ref HEAD`\ngit config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\ngit merge --no-edit origin/master\n",
                    "rendered": {
                      "text": "oldbranch=`git rev-parse --abbrev-ref HEAD`\ngit config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\ngit merge --no-edit origin/master\n",
                      "markdown": "`oldbranch=`git rev-parse --abbrev-ref HEAD`\ngit config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\ngit merge --no-edit origin/master\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/try_merge.sh"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 40,
                  "endLine": 5,
                  "endColumn": 4,
                  "snippet": {
                    "text": "#!/bin/bash\noldbranch=`git rev-parse --abbrev-ref HEAD`\ngit config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\n",
                    "rendered": {
                      "text": "#!/bin/bash\noldbranch=`git rev-parse --abbrev-ref HEAD`\ngit config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\n",
                      "markdown": "`#!/bin/bash\noldbranch=`git rev-parse --abbrev-ref HEAD`\ngit config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\ngit fetch origin\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/try_merge.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 53,
                  "endLine": 4,
                  "endColumn": 4,
                  "snippet": {
                    "text": "#!/bin/bash\noldbranch=`git rev-parse --abbrev-ref HEAD`\ngit config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\n",
                    "rendered": {
                      "text": "#!/bin/bash\noldbranch=`git rev-parse --abbrev-ref HEAD`\ngit config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\n",
                      "markdown": "`#!/bin/bash\noldbranch=`git rev-parse --abbrev-ref HEAD`\ngit config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\ngit checkout tmp-CI\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/try_merge.sh"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 43,
                  "endLine": 3,
                  "endColumn": 4,
                  "snippet": {
                    "text": "#!/bin/bash\noldbranch=`git rev-parse --abbrev-ref HEAD`\ngit config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\n",
                    "rendered": {
                      "text": "#!/bin/bash\noldbranch=`git rev-parse --abbrev-ref HEAD`\ngit config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\n",
                      "markdown": "`#!/bin/bash\noldbranch=`git rev-parse --abbrev-ref HEAD`\ngit config --global user.email \"buildbot@rsyslog.com\"\ngit config --global user.name \"buildbot\"\ngit branch -D tmp-CI\ngit branch tmp-CI\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/check_codestyle.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 13,
                  "endLine": 8,
                  "endColumn": 20,
                  "snippet": {
                    "text": "cd codestyle\ngcc --std=c99 stylecheck.c -o stylecheck\ncd ../..\nfind *.[ch] | xargs _tmp_stylecheck/codestyle/stylecheck -l 130\n",
                    "rendered": {
                      "text": "cd codestyle\ngcc --std=c99 stylecheck.c -o stylecheck\ncd ../..\nfind *.[ch] | xargs _tmp_stylecheck/codestyle/stylecheck -l 130\n",
                      "markdown": "`cd codestyle\ngcc --std=c99 stylecheck.c -o stylecheck\ncd ../..\nfind *.[ch] | xargs _tmp_stylecheck/codestyle/stylecheck -l 130\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/check_codestyle.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 8,
                  "endLine": 8,
                  "endColumn": 5,
                  "snippet": {
                    "text": "git clone https://github.com/rsyslog/codestyle\ncd codestyle\ngcc --std=c99 stylecheck.c -o stylecheck\ncd ../..\nfind *.[ch] | xargs _tmp_stylecheck/codestyle/stylecheck -l 130\n",
                    "rendered": {
                      "text": "git clone https://github.com/rsyslog/codestyle\ncd codestyle\ngcc --std=c99 stylecheck.c -o stylecheck\ncd ../..\nfind *.[ch] | xargs _tmp_stylecheck/codestyle/stylecheck -l 130\n",
                      "markdown": "`git clone https://github.com/rsyslog/codestyle\ncd codestyle\ngcc --std=c99 stylecheck.c -o stylecheck\ncd ../..\nfind *.[ch] | xargs _tmp_stylecheck/codestyle/stylecheck -l 130\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CI/check_codestyle.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 18,
                  "endLine": 4,
                  "endColumn": 4,
                  "snippet": {
                    "text": "#!/bin/bash\nmkdir _tmp_stylecheck\ncd _tmp_stylecheck\ngit clone https://github.com/rsyslog/codestyle\ncd codestyle\ngcc --std=c99 stylecheck.c -o stylecheck\ncd ../..\n",
                    "rendered": {
                      "text": "#!/bin/bash\nmkdir _tmp_stylecheck\ncd _tmp_stylecheck\ngit clone https://github.com/rsyslog/codestyle\ncd codestyle\ngcc --std=c99 stylecheck.c -o stylecheck\ncd ../..\n",
                      "markdown": "`#!/bin/bash\nmkdir _tmp_stylecheck\ncd _tmp_stylecheck\ngit clone https://github.com/rsyslog/codestyle\ncd codestyle\ngcc --std=c99 stylecheck.c -o stylecheck\ncd ../..\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/configure.ac"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 53,
                  "endLine": 11,
                  "snippet": {
                    "text": "AM_CONDITIONAL([AIX], [test x$unamestr = xAIX])\n# AIXPORT END\n\n# AIXPORT : Set the required variables for AIX config script\nif test \"$unamestr\" = \"AIX\"; then\n\texport PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig\"\n\tLIBS=\"-lbsd -lm\"\n\tCPPFLAGS=\"-D_AIX -D_THREAD_SAFE -D_BSD=43\"\n",
                    "rendered": {
                      "text": "AM_CONDITIONAL([AIX], [test x$unamestr = xAIX])\n# AIXPORT END\n\n# AIXPORT : Set the required variables for AIX config script\nif test \"$unamestr\" = \"AIX\"; then\n\texport PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig\"\n\tLIBS=\"-lbsd -lm\"\n\tCPPFLAGS=\"-D_AIX -D_THREAD_SAFE -D_BSD=43\"\n",
                      "markdown": "`AM_CONDITIONAL([AIX], [test x$unamestr = xAIX])\n# AIXPORT END\n\n# AIXPORT : Set the required variables for AIX config script\nif test \"$unamestr\" = \"AIX\"; then\n\texport PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig\"\n\tLIBS=\"-lbsd -lm\"\n\tCPPFLAGS=\"-D_AIX -D_THREAD_SAFE -D_BSD=43\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/json_object.c"
                },
                "region": {
                  "startLine": 428,
                  "endLine": 428,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t\tjso->o.c_obj.lastpg->next = pg;\n\t\tjso->o.c_obj.lastpg = pg;\n\t}\n\tpg = jso->o.c_obj.lastpg;\n\tif (pg->children[pg_idx].k == NULL) {\n\t\t/* we can use this spot and save us search time */\n\t\tchld = &(pg->children[pg_idx]);\n",
                    "rendered": {
                      "text": "\t\tjso->o.c_obj.lastpg->next = pg;\n\t\tjso->o.c_obj.lastpg = pg;\n\t}\n\tpg = jso->o.c_obj.lastpg;\n\tif (pg->children[pg_idx].k == NULL) {\n\t\t/* we can use this spot and save us search time */\n\t\tchld = &(pg->children[pg_idx]);\n",
                      "markdown": "`\t\tjso->o.c_obj.lastpg->next = pg;\n\t\tjso->o.c_obj.lastpg = pg;\n\t}\n\tpg = jso->o.c_obj.lastpg;\n\tif (pg->children[pg_idx].k == NULL) {\n\t\t/* we can use this spot and save us search time */\n\t\tchld = &(pg->children[pg_idx]);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/json_object.c"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 2,
                  "endLine": 412,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\t\t\tgoto done;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpg = pg->next;\n\t\t}\n\t\t/* if we reach this point, we have a program error */\n\t\tassert(0);\n",
                    "rendered": {
                      "text": "\t\t\t\t\tgoto done;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpg = pg->next;\n\t\t}\n\t\t/* if we reach this point, we have a program error */\n\t\tassert(0);\n",
                      "markdown": "`\t\t\t\t\tgoto done;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpg = pg->next;\n\t\t}\n\t\t/* if we reach this point, we have a program error */\n\t\tassert(0);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/json_object.c"
                },
                "region": {
                  "startLine": 403,
                  "startColumn": 1,
                  "endLine": 403,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n\tif (jso->o.c_obj.ndeleted > 0) {\n\t\t/* we first fill deleted spots */\n\t\tpg = &jso->o.c_obj.pg;\n\t\twhile (chld == NULL) {\n\t\t\tfor (int i = 0 ; i < FJSON_OBJECT_CHLD_PG_SIZE ; ++i) {\n\t\t\t\tif(pg->children[i].k == NULL) {\n",
                    "rendered": {
                      "text": "\n\tif (jso->o.c_obj.ndeleted > 0) {\n\t\t/* we first fill deleted spots */\n\t\tpg = &jso->o.c_obj.pg;\n\t\twhile (chld == NULL) {\n\t\t\tfor (int i = 0 ; i < FJSON_OBJECT_CHLD_PG_SIZE ; ++i) {\n\t\t\t\tif(pg->children[i].k == NULL) {\n",
                      "markdown": "`\n\tif (jso->o.c_obj.ndeleted > 0) {\n\t\t/* we first fill deleted spots */\n\t\tpg = &jso->o.c_obj.pg;\n\t\twhile (chld == NULL) {\n\t\t\tfor (int i = 0 ; i < FJSON_OBJECT_CHLD_PG_SIZE ; ++i) {\n\t\t\t\tif(pg->children[i].k == NULL) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/json_object.c"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 1,
                  "endLine": 349,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\t\t\tfree ((void*)pg->children[i].k);\n\t\t\tfjson_object_put (pg->children[i].v);\n\t\t}\n\t\tpg = pg->next;\n\t\tfree(del);\n\t\tdel = pg;\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tfree ((void*)pg->children[i].k);\n\t\t\tfjson_object_put (pg->children[i].v);\n\t\t}\n\t\tpg = pg->next;\n\t\tfree(del);\n\t\tdel = pg;\n\t}\n",
                      "markdown": "`\t\t\t\tfree ((void*)pg->children[i].k);\n\t\t\tfjson_object_put (pg->children[i].v);\n\t\t}\n\t\tpg = pg->next;\n\t\tfree(del);\n\t\tdel = pg;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/README.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 43,
                  "endLine": 17,
                  "endColumn": 47,
                  "snippet": {
                    "text": " \n**IMPORTANT**\nThe current API is **not** stable and will change until version 1.0.0 is\nreached. We plan to reach it by summer 2016 at latest. With 1.0.0, the API\nwill be stable. Until then, everything may change. Of course, we will not\ndeliberatly break things but we need freedom to restructure.\n\n",
                    "rendered": {
                      "text": " \n**IMPORTANT**\nThe current API is **not** stable and will change until version 1.0.0 is\nreached. We plan to reach it by summer 2016 at latest. With 1.0.0, the API\nwill be stable. Until then, everything may change. Of course, we will not\ndeliberatly break things but we need freedom to restructure.\n\n",
                      "markdown": "` \n**IMPORTANT**\nThe current API is **not** stable and will change until version 1.0.0 is\nreached. We plan to reach it by summer 2016 at latest. With 1.0.0, the API\nwill be stable. Until then, everything may change. Of course, we will not\ndeliberatly break things but we need freedom to restructure.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/README.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 6,
                  "snippet": {
                    "text": "`libfastjson` GitHub repo: https://github.com/rsyslog/libfastjson\n\n```bash\n$ git clone https://github.com/rsyslog/libfastjson.git\n$ cd libfastjson\n$ sh autogen.sh\n```\n",
                    "rendered": {
                      "text": "`libfastjson` GitHub repo: https://github.com/rsyslog/libfastjson\n\n```bash\n$ git clone https://github.com/rsyslog/libfastjson.git\n$ cd libfastjson\n$ sh autogen.sh\n```\n",
                      "markdown": "``libfastjson` GitHub repo: https://github.com/rsyslog/libfastjson\n\n```bash\n$ git clone https://github.com/rsyslog/libfastjson.git\n$ cd libfastjson\n$ sh autogen.sh\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 40,
                  "endLine": 359,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    Added cast and mask to suffice size_t v. unsigned int conversion\n    correctness \n  * json_tokener.c - sign reversal issue on error info for nested object parse\n    spotted by Johan Bj�rklund (johbjo09 at kth.se)\n  * json_object.c - escape \" in json_escape_str\n  * Change to automake and libtool to build shared and static library\n    Michael Clark <michael@metaparadigm.com>\n",
                    "rendered": {
                      "text": "    Added cast and mask to suffice size_t v. unsigned int conversion\n    correctness \n  * json_tokener.c - sign reversal issue on error info for nested object parse\n    spotted by Johan Bj�rklund (johbjo09 at kth.se)\n  * json_object.c - escape \" in json_escape_str\n  * Change to automake and libtool to build shared and static library\n    Michael Clark <michael@metaparadigm.com>\n",
                      "markdown": "`    Added cast and mask to suffice size_t v. unsigned int conversion\n    correctness \n  * json_tokener.c - sign reversal issue on error info for nested object parse\n    spotted by Johan Bj�rklund (johbjo09 at kth.se)\n  * json_object.c - escape \" in json_escape_str\n  * Change to automake and libtool to build shared and static library\n    Michael Clark <michael@metaparadigm.com>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 3,
                  "endLine": 339,
                  "endColumn": 11,
                  "snippet": {
                    "text": "0.3\n  * fix pointer arithmetic bug for error pointer check in is_error() macro\n  * fix type passed to printbuf_memappend in json_tokener\n  * update autotools bootstrap instructions in README\n    Michael Clark <michael@metaparadigm.com>\n\n0.2\n",
                    "rendered": {
                      "text": "0.3\n  * fix pointer arithmetic bug for error pointer check in is_error() macro\n  * fix type passed to printbuf_memappend in json_tokener\n  * update autotools bootstrap instructions in README\n    Michael Clark <michael@metaparadigm.com>\n\n0.2\n",
                      "markdown": "`0.3\n  * fix pointer arithmetic bug for error pointer check in is_error() macro\n  * fix type passed to printbuf_memappend in json_tokener\n  * update autotools bootstrap instructions in README\n    Michael Clark <michael@metaparadigm.com>\n\n0.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 42,
                  "endLine": 325,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    Larry Lansing, llansing at fuzzynerd dot com\n\n  * Remove automake 1.6 requirement\n  * Move autogen commands into autogen.sh. Update README\n  * Remove error pointer special case for Windows\n  * Change license from LGPL to MIT\n    Michael Clark <michael@metaparadigm.com>\n",
                    "rendered": {
                      "text": "    Larry Lansing, llansing at fuzzynerd dot com\n\n  * Remove automake 1.6 requirement\n  * Move autogen commands into autogen.sh. Update README\n  * Remove error pointer special case for Windows\n  * Change license from LGPL to MIT\n    Michael Clark <michael@metaparadigm.com>\n",
                      "markdown": "`    Larry Lansing, llansing at fuzzynerd dot com\n\n  * Remove automake 1.6 requirement\n  * Move autogen commands into autogen.sh. Update README\n  * Remove error pointer special case for Windows\n  * Change license from LGPL to MIT\n    Michael Clark <michael@metaparadigm.com>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 27,
                  "endLine": 322,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  * Make headers C++ compatible by change *this to *obj\n  * Add ifdef C++ extern \"C\" to headers\n  * Use simpler definition of min and max in bits.h\n    Larry Lansing, llansing at fuzzynerd dot com\n\n  * Remove automake 1.6 requirement\n  * Move autogen commands into autogen.sh. Update README\n",
                    "rendered": {
                      "text": "  * Make headers C++ compatible by change *this to *obj\n  * Add ifdef C++ extern \"C\" to headers\n  * Use simpler definition of min and max in bits.h\n    Larry Lansing, llansing at fuzzynerd dot com\n\n  * Remove automake 1.6 requirement\n  * Move autogen commands into autogen.sh. Update README\n",
                      "markdown": "`  * Make headers C++ compatible by change *this to *obj\n  * Add ifdef C++ extern \"C\" to headers\n  * Use simpler definition of min and max in bits.h\n    Larry Lansing, llansing at fuzzynerd dot com\n\n  * Remove automake 1.6 requirement\n  * Move autogen commands into autogen.sh. Update README\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 29,
                  "endLine": 313,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n0.6\n  * Fix bug in escaping of control characters\n    Johan Bj�rklund, johbjo09 at kth dot se\n  * Remove include \"config.h\" from headers (should only\n    be included from .c files)\n    Michael Clark <michael@metaparadigm.com>\n",
                    "rendered": {
                      "text": "\n0.6\n  * Fix bug in escaping of control characters\n    Johan Bj�rklund, johbjo09 at kth dot se\n  * Remove include \"config.h\" from headers (should only\n    be included from .c files)\n    Michael Clark <michael@metaparadigm.com>\n",
                      "markdown": "`\n0.6\n  * Fix bug in escaping of control characters\n    Johan Bj�rklund, johbjo09 at kth dot se\n  * Remove include \"config.h\" from headers (should only\n    be included from .c files)\n    Michael Clark <michael@metaparadigm.com>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 26,
                  "endLine": 312,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    using a depth state structure to allow incremental parsing\n\n0.6\n  * Fix bug in escaping of control characters\n    Johan Bj�rklund, johbjo09 at kth dot se\n  * Remove include \"config.h\" from headers (should only\n    be included from .c files)\n",
                    "rendered": {
                      "text": "    using a depth state structure to allow incremental parsing\n\n0.6\n  * Fix bug in escaping of control characters\n    Johan Bj�rklund, johbjo09 at kth dot se\n  * Remove include \"config.h\" from headers (should only\n    be included from .c files)\n",
                      "markdown": "`    using a depth state structure to allow incremental parsing\n\n0.6\n  * Fix bug in escaping of control characters\n    Johan Bj�rklund, johbjo09 at kth dot se\n  * Remove include \"config.h\" from headers (should only\n    be included from .c files)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 25,
                  "endLine": 303,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  * Add stddef.h include\n  * Patch allows for json-c compile with -Werror and not fail due to\n    -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations\n    Geoffrey Young, geoff at modperlcookbook dot org\n\n0.7\n  * Add escaping of backslash to json output\n",
                    "rendered": {
                      "text": "  * Add stddef.h include\n  * Patch allows for json-c compile with -Werror and not fail due to\n    -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations\n    Geoffrey Young, geoff at modperlcookbook dot org\n\n0.7\n  * Add escaping of backslash to json output\n",
                      "markdown": "`  * Add stddef.h include\n  * Patch allows for json-c compile with -Werror and not fail due to\n    -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations\n    Geoffrey Young, geoff at modperlcookbook dot org\n\n0.7\n  * Add escaping of backslash to json output\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 27,
                  "endLine": 299,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  * Add macros to enable compiling out debug code\n    Geoffrey Young, geoff at modperlcookbook dot org\n  * Fix bug with use of capital E in numbers with exponents\n    Mateusz Loskot, mateusz at loskot dot net\n  * Add stddef.h include\n  * Patch allows for json-c compile with -Werror and not fail due to\n    -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations\n",
                    "rendered": {
                      "text": "  * Add macros to enable compiling out debug code\n    Geoffrey Young, geoff at modperlcookbook dot org\n  * Fix bug with use of capital E in numbers with exponents\n    Mateusz Loskot, mateusz at loskot dot net\n  * Add stddef.h include\n  * Patch allows for json-c compile with -Werror and not fail due to\n    -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations\n",
                      "markdown": "`  * Add macros to enable compiling out debug code\n    Geoffrey Young, geoff at modperlcookbook dot org\n  * Fix bug with use of capital E in numbers with exponents\n    Mateusz Loskot, mateusz at loskot dot net\n  * Add stddef.h include\n  * Patch allows for json-c compile with -Werror and not fail due to\n    -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 25,
                  "endLine": 297,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  * Add va_end for every va_start\n    Dotan Barak, dotanba at gmail dot com\n  * Add macros to enable compiling out debug code\n    Geoffrey Young, geoff at modperlcookbook dot org\n  * Fix bug with use of capital E in numbers with exponents\n    Mateusz Loskot, mateusz at loskot dot net\n  * Add stddef.h include\n",
                    "rendered": {
                      "text": "  * Add va_end for every va_start\n    Dotan Barak, dotanba at gmail dot com\n  * Add macros to enable compiling out debug code\n    Geoffrey Young, geoff at modperlcookbook dot org\n  * Fix bug with use of capital E in numbers with exponents\n    Mateusz Loskot, mateusz at loskot dot net\n  * Add stddef.h include\n",
                      "markdown": "`  * Add va_end for every va_start\n    Dotan Barak, dotanba at gmail dot com\n  * Add macros to enable compiling out debug code\n    Geoffrey Young, geoff at modperlcookbook dot org\n  * Fix bug with use of capital E in numbers with exponents\n    Mateusz Loskot, mateusz at loskot dot net\n  * Add stddef.h include\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 24,
                  "endLine": 295,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n0.8\n  * Add va_end for every va_start\n    Dotan Barak, dotanba at gmail dot com\n  * Add macros to enable compiling out debug code\n    Geoffrey Young, geoff at modperlcookbook dot org\n  * Fix bug with use of capital E in numbers with exponents\n",
                    "rendered": {
                      "text": "\n0.8\n  * Add va_end for every va_start\n    Dotan Barak, dotanba at gmail dot com\n  * Add macros to enable compiling out debug code\n    Geoffrey Young, geoff at modperlcookbook dot org\n  * Fix bug with use of capital E in numbers with exponents\n",
                      "markdown": "`\n0.8\n  * Add va_end for every va_start\n    Dotan Barak, dotanba at gmail dot com\n  * Add macros to enable compiling out debug code\n    Geoffrey Young, geoff at modperlcookbook dot org\n  * Fix bug with use of capital E in numbers with exponents\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 33,
                  "endLine": 291,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    -Wold-style-definition to the compilatin flags.\n    Dotan Barak, dotanba at gmail dot com\n  * Add const correctness to public interfaces\n    Gerard Krol, g dot c dot krol at student dot tudelft dot nl\n\n0.8\n  * Add va_end for every va_start\n",
                    "rendered": {
                      "text": "    -Wold-style-definition to the compilatin flags.\n    Dotan Barak, dotanba at gmail dot com\n  * Add const correctness to public interfaces\n    Gerard Krol, g dot c dot krol at student dot tudelft dot nl\n\n0.8\n  * Add va_end for every va_start\n",
                      "markdown": "`    -Wold-style-definition to the compilatin flags.\n    Dotan Barak, dotanba at gmail dot com\n  * Add const correctness to public interfaces\n    Gerard Krol, g dot c dot krol at student dot tudelft dot nl\n\n0.8\n  * Add va_end for every va_start\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 24,
                  "endLine": 289,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    Erik Hovland, erik at hovland dot org\n  * Fixed warning reported by adding -Wstrict-prototypes\n    -Wold-style-definition to the compilatin flags.\n    Dotan Barak, dotanba at gmail dot com\n  * Add const correctness to public interfaces\n    Gerard Krol, g dot c dot krol at student dot tudelft dot nl\n\n",
                    "rendered": {
                      "text": "    Erik Hovland, erik at hovland dot org\n  * Fixed warning reported by adding -Wstrict-prototypes\n    -Wold-style-definition to the compilatin flags.\n    Dotan Barak, dotanba at gmail dot com\n  * Add const correctness to public interfaces\n    Gerard Krol, g dot c dot krol at student dot tudelft dot nl\n\n",
                      "markdown": "`    Erik Hovland, erik at hovland dot org\n  * Fixed warning reported by adding -Wstrict-prototypes\n    -Wold-style-definition to the compilatin flags.\n    Dotan Barak, dotanba at gmail dot com\n  * Add const correctness to public interfaces\n    Gerard Krol, g dot c dot krol at student dot tudelft dot nl\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 22,
                  "endLine": 286,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    Michael Clark, <michael@metaparadigm.com>\n  * Null pointer dereference fix. Fix json_object_get_boolean strlen test\n    to not return TRUE for zero length string. Remove redundant includes.\n    Erik Hovland, erik at hovland dot org\n  * Fixed warning reported by adding -Wstrict-prototypes\n    -Wold-style-definition to the compilatin flags.\n    Dotan Barak, dotanba at gmail dot com\n",
                    "rendered": {
                      "text": "    Michael Clark, <michael@metaparadigm.com>\n  * Null pointer dereference fix. Fix json_object_get_boolean strlen test\n    to not return TRUE for zero length string. Remove redundant includes.\n    Erik Hovland, erik at hovland dot org\n  * Fixed warning reported by adding -Wstrict-prototypes\n    -Wold-style-definition to the compilatin flags.\n    Dotan Barak, dotanba at gmail dot com\n",
                      "markdown": "`    Michael Clark, <michael@metaparadigm.com>\n  * Null pointer dereference fix. Fix json_object_get_boolean strlen test\n    to not return TRUE for zero length string. Remove redundant includes.\n    Erik Hovland, erik at hovland dot org\n  * Fixed warning reported by adding -Wstrict-prototypes\n    -Wold-style-definition to the compilatin flags.\n    Dotan Barak, dotanba at gmail dot com\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 26,
                  "endLine": 277,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  * Fix json_object_get_boolean to return false for empty string\n    Spotted by Vitaly Kruglikov, Vitaly dot Kruglikov at palm dot com\n  * optimizations to json_tokener_parse_ex(), printbuf_memappend()\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Disable REFCOUNT_DEBUG by default in json_object.c\n  * Don't use this as a variable, so we can compile with a C++ compiler\n  * Add casts from void* to type of assignment when using malloc \n",
                    "rendered": {
                      "text": "  * Fix json_object_get_boolean to return false for empty string\n    Spotted by Vitaly Kruglikov, Vitaly dot Kruglikov at palm dot com\n  * optimizations to json_tokener_parse_ex(), printbuf_memappend()\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Disable REFCOUNT_DEBUG by default in json_object.c\n  * Don't use this as a variable, so we can compile with a C++ compiler\n  * Add casts from void* to type of assignment when using malloc \n",
                      "markdown": "`  * Fix json_object_get_boolean to return false for empty string\n    Spotted by Vitaly Kruglikov, Vitaly dot Kruglikov at palm dot com\n  * optimizations to json_tokener_parse_ex(), printbuf_memappend()\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Disable REFCOUNT_DEBUG by default in json_object.c\n  * Don't use this as a variable, so we can compile with a C++ compiler\n  * Add casts from void* to type of assignment when using malloc \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 53,
                  "endLine": 275,
                  "endColumn": 57,
                  "snippet": {
                    "text": "  * Check all pointers for validity.\n    Erik Hovland, erik at hovland dot org\n  * Fix json_object_get_boolean to return false for empty string\n    Spotted by Vitaly Kruglikov, Vitaly dot Kruglikov at palm dot com\n  * optimizations to json_tokener_parse_ex(), printbuf_memappend()\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Disable REFCOUNT_DEBUG by default in json_object.c\n",
                    "rendered": {
                      "text": "  * Check all pointers for validity.\n    Erik Hovland, erik at hovland dot org\n  * Fix json_object_get_boolean to return false for empty string\n    Spotted by Vitaly Kruglikov, Vitaly dot Kruglikov at palm dot com\n  * optimizations to json_tokener_parse_ex(), printbuf_memappend()\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Disable REFCOUNT_DEBUG by default in json_object.c\n",
                      "markdown": "`  * Check all pointers for validity.\n    Erik Hovland, erik at hovland dot org\n  * Fix json_object_get_boolean to return false for empty string\n    Spotted by Vitaly Kruglikov, Vitaly dot Kruglikov at palm dot com\n  * optimizations to json_tokener_parse_ex(), printbuf_memappend()\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Disable REFCOUNT_DEBUG by default in json_object.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 22,
                  "endLine": 273,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  * Fix any noticeable spelling or grammar errors.\n  * Make sure every va_start has a va_end.\n  * Check all pointers for validity.\n    Erik Hovland, erik at hovland dot org\n  * Fix json_object_get_boolean to return false for empty string\n    Spotted by Vitaly Kruglikov, Vitaly dot Kruglikov at palm dot com\n  * optimizations to json_tokener_parse_ex(), printbuf_memappend()\n",
                    "rendered": {
                      "text": "  * Fix any noticeable spelling or grammar errors.\n  * Make sure every va_start has a va_end.\n  * Check all pointers for validity.\n    Erik Hovland, erik at hovland dot org\n  * Fix json_object_get_boolean to return false for empty string\n    Spotted by Vitaly Kruglikov, Vitaly dot Kruglikov at palm dot com\n  * optimizations to json_tokener_parse_ex(), printbuf_memappend()\n",
                      "markdown": "`  * Fix any noticeable spelling or grammar errors.\n  * Make sure every va_start has a va_end.\n  * Check all pointers for validity.\n    Erik Hovland, erik at hovland dot org\n  * Fix json_object_get_boolean to return false for empty string\n    Spotted by Vitaly Kruglikov, Vitaly dot Kruglikov at palm dot com\n  * optimizations to json_tokener_parse_ex(), printbuf_memappend()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 20,
                  "endLine": 269,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  * Add const qualifier to the json_tokener_parse functions\n    Eric Haszlakiewicz, EHASZLA at transunion dot com\n  * Rename min and max so we can never clash with C or C++ std library\n    Ian Atha, thatha at yahoo dash inc dot com\n  * Fix any noticeable spelling or grammar errors.\n  * Make sure every va_start has a va_end.\n  * Check all pointers for validity.\n",
                    "rendered": {
                      "text": "  * Add const qualifier to the json_tokener_parse functions\n    Eric Haszlakiewicz, EHASZLA at transunion dot com\n  * Rename min and max so we can never clash with C or C++ std library\n    Ian Atha, thatha at yahoo dash inc dot com\n  * Fix any noticeable spelling or grammar errors.\n  * Make sure every va_start has a va_end.\n  * Check all pointers for validity.\n",
                      "markdown": "`  * Add const qualifier to the json_tokener_parse functions\n    Eric Haszlakiewicz, EHASZLA at transunion dot com\n  * Rename min and max so we can never clash with C or C++ std library\n    Ian Atha, thatha at yahoo dash inc dot com\n  * Fix any noticeable spelling or grammar errors.\n  * Make sure every va_start has a va_end.\n  * Check all pointers for validity.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 31,
                  "endLine": 267,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  * Add README.html README-WIN32.html config.h.win32 to Makefile.am\n    Michael Clark, <michael@metaparadigm.com>\n  * Add const qualifier to the json_tokener_parse functions\n    Eric Haszlakiewicz, EHASZLA at transunion dot com\n  * Rename min and max so we can never clash with C or C++ std library\n    Ian Atha, thatha at yahoo dash inc dot com\n  * Fix any noticeable spelling or grammar errors.\n",
                    "rendered": {
                      "text": "  * Add README.html README-WIN32.html config.h.win32 to Makefile.am\n    Michael Clark, <michael@metaparadigm.com>\n  * Add const qualifier to the json_tokener_parse functions\n    Eric Haszlakiewicz, EHASZLA at transunion dot com\n  * Rename min and max so we can never clash with C or C++ std library\n    Ian Atha, thatha at yahoo dash inc dot com\n  * Fix any noticeable spelling or grammar errors.\n",
                      "markdown": "`  * Add README.html README-WIN32.html config.h.win32 to Makefile.am\n    Michael Clark, <michael@metaparadigm.com>\n  * Add const qualifier to the json_tokener_parse functions\n    Eric Haszlakiewicz, EHASZLA at transunion dot com\n  * Rename min and max so we can never clash with C or C++ std library\n    Ian Atha, thatha at yahoo dash inc dot com\n  * Fix any noticeable spelling or grammar errors.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 26,
                  "endLine": 261,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n    Brent Miller, bdmiller at yahoo dash inc dot com\n\n0.9\n  * Add README.html README-WIN32.html config.h.win32 to Makefile.am\n",
                    "rendered": {
                      "text": "  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n    Brent Miller, bdmiller at yahoo dash inc dot com\n\n0.9\n  * Add README.html README-WIN32.html config.h.win32 to Makefile.am\n",
                      "markdown": "`  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n    Brent Miller, bdmiller at yahoo dash inc dot com\n\n0.9\n  * Add README.html README-WIN32.html config.h.win32 to Makefile.am\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 26,
                  "endLine": 259,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n    Brent Miller, bdmiller at yahoo dash inc dot com\n\n",
                    "rendered": {
                      "text": "  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n    Brent Miller, bdmiller at yahoo dash inc dot com\n\n",
                      "markdown": "`  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n    Brent Miller, bdmiller at yahoo dash inc dot com\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 35,
                  "endLine": 257,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    were filled then successively freed.\n    Spotted by Jean-Marc Naud, j dash m at newtraxtech dot com\n  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n",
                    "rendered": {
                      "text": "    were filled then successively freed.\n    Spotted by Jean-Marc Naud, j dash m at newtraxtech dot com\n  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n",
                      "markdown": "`    were filled then successively freed.\n    Spotted by Jean-Marc Naud, j dash m at newtraxtech dot com\n  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 39,
                  "endLine": 255,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    Rui Miguel Silva Seabra, rms at 1407 dot org\n  * Fix subtle bug in linkhash where lookup could hang after all slots\n    were filled then successively freed.\n    Spotted by Jean-Marc Naud, j dash m at newtraxtech dot com\n  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n",
                    "rendered": {
                      "text": "    Rui Miguel Silva Seabra, rms at 1407 dot org\n  * Fix subtle bug in linkhash where lookup could hang after all slots\n    were filled then successively freed.\n    Spotted by Jean-Marc Naud, j dash m at newtraxtech dot com\n  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n",
                      "markdown": "`    Rui Miguel Silva Seabra, rms at 1407 dot org\n  * Fix subtle bug in linkhash where lookup could hang after all slots\n    were filled then successively freed.\n    Spotted by Jean-Marc Naud, j dash m at newtraxtech dot com\n  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 32,
                  "endLine": 252,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  * Add int64 support. Two new functions json_object_net_int64 and\n    json_object_get_int64. Binary compatibility preserved.\n    Eric Haszlakiewicz, EHASZLA at transunion com\n    Rui Miguel Silva Seabra, rms at 1407 dot org\n  * Fix subtle bug in linkhash where lookup could hang after all slots\n    were filled then successively freed.\n    Spotted by Jean-Marc Naud, j dash m at newtraxtech dot com\n",
                    "rendered": {
                      "text": "  * Add int64 support. Two new functions json_object_net_int64 and\n    json_object_get_int64. Binary compatibility preserved.\n    Eric Haszlakiewicz, EHASZLA at transunion com\n    Rui Miguel Silva Seabra, rms at 1407 dot org\n  * Fix subtle bug in linkhash where lookup could hang after all slots\n    were filled then successively freed.\n    Spotted by Jean-Marc Naud, j dash m at newtraxtech dot com\n",
                      "markdown": "`  * Add int64 support. Two new functions json_object_net_int64 and\n    json_object_get_int64. Binary compatibility preserved.\n    Eric Haszlakiewicz, EHASZLA at transunion com\n    Rui Miguel Silva Seabra, rms at 1407 dot org\n  * Fix subtle bug in linkhash where lookup could hang after all slots\n    were filled then successively freed.\n    Spotted by Jean-Marc Naud, j dash m at newtraxtech dot com\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 31,
                  "endLine": 251,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    Zachary Blair, zack_blair at hotmail dot com\n  * Add int64 support. Two new functions json_object_net_int64 and\n    json_object_get_int64. Binary compatibility preserved.\n    Eric Haszlakiewicz, EHASZLA at transunion com\n    Rui Miguel Silva Seabra, rms at 1407 dot org\n  * Fix subtle bug in linkhash where lookup could hang after all slots\n    were filled then successively freed.\n",
                    "rendered": {
                      "text": "    Zachary Blair, zack_blair at hotmail dot com\n  * Add int64 support. Two new functions json_object_net_int64 and\n    json_object_get_int64. Binary compatibility preserved.\n    Eric Haszlakiewicz, EHASZLA at transunion com\n    Rui Miguel Silva Seabra, rms at 1407 dot org\n  * Fix subtle bug in linkhash where lookup could hang after all slots\n    were filled then successively freed.\n",
                      "markdown": "`    Zachary Blair, zack_blair at hotmail dot com\n  * Add int64 support. Two new functions json_object_net_int64 and\n    json_object_get_int64. Binary compatibility preserved.\n    Eric Haszlakiewicz, EHASZLA at transunion com\n    Rui Miguel Silva Seabra, rms at 1407 dot org\n  * Fix subtle bug in linkhash where lookup could hang after all slots\n    were filled then successively freed.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 29,
                  "endLine": 248,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  * Improve support for null bytes within JSON strings.\n    Jehiah Czebotar\n  * Fix file descriptor leak if memory allocation fails in json_util\n    Zachary Blair, zack_blair at hotmail dot com\n  * Add int64 support. Two new functions json_object_net_int64 and\n    json_object_get_int64. Binary compatibility preserved.\n    Eric Haszlakiewicz, EHASZLA at transunion com\n",
                    "rendered": {
                      "text": "  * Improve support for null bytes within JSON strings.\n    Jehiah Czebotar\n  * Fix file descriptor leak if memory allocation fails in json_util\n    Zachary Blair, zack_blair at hotmail dot com\n  * Add int64 support. Two new functions json_object_net_int64 and\n    json_object_get_int64. Binary compatibility preserved.\n    Eric Haszlakiewicz, EHASZLA at transunion com\n",
                      "markdown": "`  * Improve support for null bytes within JSON strings.\n    Jehiah Czebotar\n  * Fix file descriptor leak if memory allocation fails in json_util\n    Zachary Blair, zack_blair at hotmail dot com\n  * Add int64 support. Two new functions json_object_net_int64 and\n    json_object_get_int64. Binary compatibility preserved.\n    Eric Haszlakiewicz, EHASZLA at transunion com\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 52,
                  "endLine": 79,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  see also https://github.com/rsyslog/libfastjson/issues/126\n  Thanks to Jan Gerhards for the patch.\n- m4: fix detection of atomics\n  In cross-compilation, it is impossible to run code at configure time to\n  detect the target specifics.\n  As such, AC_TRY_RUN fails miserably to detect reliably that atomic\n  intrisics are present in a toolchain, and decides they are not just\n",
                    "rendered": {
                      "text": "  see also https://github.com/rsyslog/libfastjson/issues/126\n  Thanks to Jan Gerhards for the patch.\n- m4: fix detection of atomics\n  In cross-compilation, it is impossible to run code at configure time to\n  detect the target specifics.\n  As such, AC_TRY_RUN fails miserably to detect reliably that atomic\n  intrisics are present in a toolchain, and decides they are not just\n",
                      "markdown": "`  see also https://github.com/rsyslog/libfastjson/issues/126\n  Thanks to Jan Gerhards for the patch.\n- m4: fix detection of atomics\n  In cross-compilation, it is impossible to run code at configure time to\n  detect the target specifics.\n  As such, AC_TRY_RUN fails miserably to detect reliably that atomic\n  intrisics are present in a toolchain, and decides they are not just\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 18,
                  "endLine": 348,
                  "snippet": {
                    "text": "    Added a Win32/Win64 compliant implementation of vasprintf\n  * debug.c - C. Watford (christopher.watford@gmail.com)\n    Removed usage of vsyslog on Win32/Win64 systems, needs to be handled\n    by a configure script\n  * json_object.c - C. Watford (christopher.watford@gmail.com)\n    Added scope operator to wrap usage of json_object_object_foreach, this\n    needs to be rethought to be more ANSI C friendly\n  * json_object.h - C. Watford (christopher.watford@gmail.com)\n",
                    "rendered": {
                      "text": "    Added a Win32/Win64 compliant implementation of vasprintf\n  * debug.c - C. Watford (christopher.watford@gmail.com)\n    Removed usage of vsyslog on Win32/Win64 systems, needs to be handled\n    by a configure script\n  * json_object.c - C. Watford (christopher.watford@gmail.com)\n    Added scope operator to wrap usage of json_object_object_foreach, this\n    needs to be rethought to be more ANSI C friendly\n  * json_object.h - C. Watford (christopher.watford@gmail.com)\n",
                      "markdown": "`    Added a Win32/Win64 compliant implementation of vasprintf\n  * debug.c - C. Watford (christopher.watford@gmail.com)\n    Removed usage of vsyslog on Win32/Win64 systems, needs to be handled\n    by a configure script\n  * json_object.c - C. Watford (christopher.watford@gmail.com)\n    Added scope operator to wrap usage of json_object_object_foreach, this\n    needs to be rethought to be more ANSI C friendly\n  * json_object.h - C. Watford (christopher.watford@gmail.com)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 60,
                  "endLine": 292,
                  "snippet": {
                    "text": "    -Wold-style-definition to the compilatin flags.\n    Dotan Barak, dotanba at gmail dot com\n  * Add const correctness to public interfaces\n    Gerard Krol, g dot c dot krol at student dot tudelft dot nl\n\n0.8\n  * Add va_end for every va_start\n    Dotan Barak, dotanba at gmail dot com\n",
                    "rendered": {
                      "text": "    -Wold-style-definition to the compilatin flags.\n    Dotan Barak, dotanba at gmail dot com\n  * Add const correctness to public interfaces\n    Gerard Krol, g dot c dot krol at student dot tudelft dot nl\n\n0.8\n  * Add va_end for every va_start\n    Dotan Barak, dotanba at gmail dot com\n",
                      "markdown": "`    -Wold-style-definition to the compilatin flags.\n    Dotan Barak, dotanba at gmail dot com\n  * Add const correctness to public interfaces\n    Gerard Krol, g dot c dot krol at student dot tudelft dot nl\n\n0.8\n  * Add va_end for every va_start\n    Dotan Barak, dotanba at gmail dot com\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 35,
                  "endLine": 277,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  * Fix json_object_get_boolean to return false for empty string\n    Spotted by Vitaly Kruglikov, Vitaly dot Kruglikov at palm dot com\n  * optimizations to json_tokener_parse_ex(), printbuf_memappend()\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Disable REFCOUNT_DEBUG by default in json_object.c\n  * Don't use this as a variable, so we can compile with a C++ compiler\n  * Add casts from void* to type of assignment when using malloc \n",
                    "rendered": {
                      "text": "  * Fix json_object_get_boolean to return false for empty string\n    Spotted by Vitaly Kruglikov, Vitaly dot Kruglikov at palm dot com\n  * optimizations to json_tokener_parse_ex(), printbuf_memappend()\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Disable REFCOUNT_DEBUG by default in json_object.c\n  * Don't use this as a variable, so we can compile with a C++ compiler\n  * Add casts from void* to type of assignment when using malloc \n",
                      "markdown": "`  * Fix json_object_get_boolean to return false for empty string\n    Spotted by Vitaly Kruglikov, Vitaly dot Kruglikov at palm dot com\n  * optimizations to json_tokener_parse_ex(), printbuf_memappend()\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Disable REFCOUNT_DEBUG by default in json_object.c\n  * Don't use this as a variable, so we can compile with a C++ compiler\n  * Add casts from void* to type of assignment when using malloc \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 29,
                  "endLine": 269,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  * Add const qualifier to the json_tokener_parse functions\n    Eric Haszlakiewicz, EHASZLA at transunion dot com\n  * Rename min and max so we can never clash with C or C++ std library\n    Ian Atha, thatha at yahoo dash inc dot com\n  * Fix any noticeable spelling or grammar errors.\n  * Make sure every va_start has a va_end.\n  * Check all pointers for validity.\n",
                    "rendered": {
                      "text": "  * Add const qualifier to the json_tokener_parse functions\n    Eric Haszlakiewicz, EHASZLA at transunion dot com\n  * Rename min and max so we can never clash with C or C++ std library\n    Ian Atha, thatha at yahoo dash inc dot com\n  * Fix any noticeable spelling or grammar errors.\n  * Make sure every va_start has a va_end.\n  * Check all pointers for validity.\n",
                      "markdown": "`  * Add const qualifier to the json_tokener_parse functions\n    Eric Haszlakiewicz, EHASZLA at transunion dot com\n  * Rename min and max so we can never clash with C or C++ std library\n    Ian Atha, thatha at yahoo dash inc dot com\n  * Fix any noticeable spelling or grammar errors.\n  * Make sure every va_start has a va_end.\n  * Check all pointers for validity.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 35,
                  "endLine": 261,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n    Brent Miller, bdmiller at yahoo dash inc dot com\n\n0.9\n  * Add README.html README-WIN32.html config.h.win32 to Makefile.am\n",
                    "rendered": {
                      "text": "  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n    Brent Miller, bdmiller at yahoo dash inc dot com\n\n0.9\n  * Add README.html README-WIN32.html config.h.win32 to Makefile.am\n",
                      "markdown": "`  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n    Brent Miller, bdmiller at yahoo dash inc dot com\n\n0.9\n  * Add README.html README-WIN32.html config.h.win32 to Makefile.am\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 35,
                  "endLine": 259,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n    Brent Miller, bdmiller at yahoo dash inc dot com\n\n",
                    "rendered": {
                      "text": "  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n    Brent Miller, bdmiller at yahoo dash inc dot com\n\n",
                      "markdown": "`  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n    Brent Miller, bdmiller at yahoo dash inc dot com\n  * Correction to comment describing printbuf_memappend in printbuf.h\n    Brent Miller, bdmiller at yahoo dash inc dot com\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 32,
                  "endLine": 255,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    Rui Miguel Silva Seabra, rms at 1407 dot org\n  * Fix subtle bug in linkhash where lookup could hang after all slots\n    were filled then successively freed.\n    Spotted by Jean-Marc Naud, j dash m at newtraxtech dot com\n  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n",
                    "rendered": {
                      "text": "    Rui Miguel Silva Seabra, rms at 1407 dot org\n  * Fix subtle bug in linkhash where lookup could hang after all slots\n    were filled then successively freed.\n    Spotted by Jean-Marc Naud, j dash m at newtraxtech dot com\n  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n",
                      "markdown": "`    Rui Miguel Silva Seabra, rms at 1407 dot org\n  * Fix subtle bug in linkhash where lookup could hang after all slots\n    were filled then successively freed.\n    Spotted by Jean-Marc Naud, j dash m at newtraxtech dot com\n  * Make json_object_from_file take const char *filename\n    Spotted by Vikram Raj V, vsagar at attinteractive dot com\n  * Add handling of surrogate pairs (json_tokener.c, test4.c, Makefile.am)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 45,
                  "endLine": 157,
                  "snippet": {
                    "text": "0.12\n\n  * Address security issues:\n    * CVE-2013-6371: hash collision denial of service\n    * CVE-2013-6370: buffer overflow if size_t is larger than int\n\n  * Avoid potential overflow in json_object_get_double\n\n",
                    "rendered": {
                      "text": "0.12\n\n  * Address security issues:\n    * CVE-2013-6371: hash collision denial of service\n    * CVE-2013-6370: buffer overflow if size_t is larger than int\n\n  * Avoid potential overflow in json_object_get_double\n\n",
                      "markdown": "`0.12\n\n  * Address security issues:\n    * CVE-2013-6371: hash collision denial of service\n    * CVE-2013-6370: buffer overflow if size_t is larger than int\n\n  * Avoid potential overflow in json_object_get_double\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/ChangeLog"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 65,
                  "endLine": 79,
                  "endColumn": 71,
                  "snippet": {
                    "text": "  see also https://github.com/rsyslog/libfastjson/issues/126\n  Thanks to Jan Gerhards for the patch.\n- m4: fix detection of atomics\n  In cross-compilation, it is impossible to run code at configure time to\n  detect the target specifics.\n  As such, AC_TRY_RUN fails miserably to detect reliably that atomic\n  intrisics are present in a toolchain, and decides they are not just\n",
                    "rendered": {
                      "text": "  see also https://github.com/rsyslog/libfastjson/issues/126\n  Thanks to Jan Gerhards for the patch.\n- m4: fix detection of atomics\n  In cross-compilation, it is impossible to run code at configure time to\n  detect the target specifics.\n  As such, AC_TRY_RUN fails miserably to detect reliably that atomic\n  intrisics are present in a toolchain, and decides they are not just\n",
                      "markdown": "`  see also https://github.com/rsyslog/libfastjson/issues/126\n  Thanks to Jan Gerhards for the patch.\n- m4: fix detection of atomics\n  In cross-compilation, it is impossible to run code at configure time to\n  detect the target specifics.\n  As such, AC_TRY_RUN fails miserably to detect reliably that atomic\n  intrisics are present in a toolchain, and decides they are not just\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/DIFFERENCES"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11,
                  "endLine": 38,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  If you need any of this API calls urgently, please let us know\n  why you consider it important enough to become re-added;\n  especially let us know why you think this is important to the\n  community at large. Thanks.\n  * [f]json_c_version_num()\n  * [f]json_object_get_object()\n    It returns a hash table, which exposes an implementation detail\n",
                    "rendered": {
                      "text": "  If you need any of this API calls urgently, please let us know\n  why you consider it important enough to become re-added;\n  especially let us know why you think this is important to the\n  community at large. Thanks.\n  * [f]json_c_version_num()\n  * [f]json_object_get_object()\n    It returns a hash table, which exposes an implementation detail\n",
                      "markdown": "`  If you need any of this API calls urgently, please let us know\n  why you consider it important enough to become re-added;\n  especially let us know why you think this is important to the\n  community at large. Thanks.\n  * [f]json_c_version_num()\n  * [f]json_object_get_object()\n    It returns a hash table, which exposes an implementation detail\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/DIFFERENCES"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7,
                  "endLine": 22,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n* we do NOT handle NUL characters inside strings or names\n  At the time of fork, json-c did not properly handle this, but\n  could at least, with tricks, generate outbound json with NUL\n  in string values. We do not support this.\n  This also means libfastjson is not 100% JSON compliant. Sorry\n  for that, but we try to keep things working great in the C\n",
                    "rendered": {
                      "text": "\n* we do NOT handle NUL characters inside strings or names\n  At the time of fork, json-c did not properly handle this, but\n  could at least, with tricks, generate outbound json with NUL\n  in string values. We do not support this.\n  This also means libfastjson is not 100% JSON compliant. Sorry\n  for that, but we try to keep things working great in the C\n",
                      "markdown": "`\n* we do NOT handle NUL characters inside strings or names\n  At the time of fork, json-c did not properly handle this, but\n  could at least, with tricks, generate outbound json with NUL\n  in string values. We do not support this.\n  This also means libfastjson is not 100% JSON compliant. Sorry\n  for that, but we try to keep things working great in the C\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/DIFFERENCES"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  fjson_object_iter_*()\n\n* we do NOT handle NUL characters inside strings or names\n  At the time of fork, json-c did not properly handle this, but\n  could at least, with tricks, generate outbound json with NUL\n  in string values. We do not support this.\n  This also means libfastjson is not 100% JSON compliant. Sorry\n",
                    "rendered": {
                      "text": "  fjson_object_iter_*()\n\n* we do NOT handle NUL characters inside strings or names\n  At the time of fork, json-c did not properly handle this, but\n  could at least, with tricks, generate outbound json with NUL\n  in string values. We do not support this.\n  This also means libfastjson is not 100% JSON compliant. Sorry\n",
                      "markdown": "`  fjson_object_iter_*()\n\n* we do NOT handle NUL characters inside strings or names\n  At the time of fork, json-c did not properly handle this, but\n  could at least, with tricks, generate outbound json with NUL\n  in string values. We do not support this.\n  This also means libfastjson is not 100% JSON compliant. Sorry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/DIFFERENCES"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 8,
                  "endLine": 4,
                  "endColumn": 12,
                  "snippet": {
                    "text": "Compatibility Layer\nlibfastjson offers some limited source code compatiblity to\njson-c via preprocessor macros. They are currently primarily\ntargeted at what the rsyslog family of projects need.\nAlso, they do not work work properly with ./configure checks.\nThis is due to the way autotools checks for functions.\n\n",
                    "rendered": {
                      "text": "Compatibility Layer\nlibfastjson offers some limited source code compatiblity to\njson-c via preprocessor macros. They are currently primarily\ntargeted at what the rsyslog family of projects need.\nAlso, they do not work work properly with ./configure checks.\nThis is due to the way autotools checks for functions.\n\n",
                      "markdown": "`Compatibility Layer\nlibfastjson offers some limited source code compatiblity to\njson-c via preprocessor macros. They are currently primarily\ntargeted at what the rsyslog family of projects need.\nAlso, they do not work work properly with ./configure checks.\nThis is due to the way autotools checks for functions.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/DIFFERENCES"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "  fjson_object_iter_*()\n\n* we do NOT handle NUL characters inside strings or names\n  At the time of fork, json-c did not properly handle this, but\n  could at least, with tricks, generate outbound json with NUL\n  in string values. We do not support this.\n  This also means libfastjson is not 100% JSON compliant. Sorry\n",
                    "rendered": {
                      "text": "  fjson_object_iter_*()\n\n* we do NOT handle NUL characters inside strings or names\n  At the time of fork, json-c did not properly handle this, but\n  could at least, with tricks, generate outbound json with NUL\n  in string values. We do not support this.\n  This also means libfastjson is not 100% JSON compliant. Sorry\n",
                      "markdown": "`  fjson_object_iter_*()\n\n* we do NOT handle NUL characters inside strings or names\n  At the time of fork, json-c did not properly handle this, but\n  could at least, with tricks, generate outbound json with NUL\n  in string values. We do not support this.\n  This also means libfastjson is not 100% JSON compliant. Sorry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 1125,
                  "startColumn": 39,
                  "endLine": 1125,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the \n# graphs generated by dot. A depth value of 3 means that only nodes reachable \n# from the root by following a path via at most 3 edges will be shown. Nodes that \n# lay further from the root node will be omitted. Note that setting this option to \n# 1 or 2 may greatly reduce the computation time needed for large code bases. Also \n# note that a graph may be further truncated if the graph's image dimensions are \n",
                    "rendered": {
                      "text": "\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the \n# graphs generated by dot. A depth value of 3 means that only nodes reachable \n# from the root by following a path via at most 3 edges will be shown. Nodes that \n# lay further from the root node will be omitted. Note that setting this option to \n# 1 or 2 may greatly reduce the computation time needed for large code bases. Also \n# note that a graph may be further truncated if the graph's image dimensions are \n",
                      "markdown": "`\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the \n# graphs generated by dot. A depth value of 3 means that only nodes reachable \n# from the root by following a path via at most 3 edges will be shown. Nodes that \n# lay further from the root node will be omitted. Note that setting this option to \n# 1 or 2 may greatly reduce the computation time needed for large code bases. Also \n# note that a graph may be further truncated if the graph's image dimensions are \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 916,
                  "startColumn": 55,
                  "endLine": 916,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n# names in the source code. If set to NO (the default) only conditional \n# compilation will be performed. Macro expansion can be done in a controlled \n# way by setting EXPAND_ONLY_PREDEF to YES.\n",
                    "rendered": {
                      "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n# names in the source code. If set to NO (the default) only conditional \n# compilation will be performed. Macro expansion can be done in a controlled \n# way by setting EXPAND_ONLY_PREDEF to YES.\n",
                      "markdown": "`\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n# names in the source code. If set to NO (the default) only conditional \n# compilation will be performed. Macro expansion can be done in a controlled \n# way by setting EXPAND_ONLY_PREDEF to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 880,
                  "startColumn": 46,
                  "endLine": 880,
                  "endColumn": 50,
                  "snippet": {
                    "text": "# If the GENERATE_PERLMOD tag is set to YES Doxygen will \n# generate a Perl module file that captures the structure of \n# the code including all documentation. Note that this \n# feature is still experimental and incomplete at the \n# moment.\n\nGENERATE_PERLMOD       = NO\n",
                    "rendered": {
                      "text": "# If the GENERATE_PERLMOD tag is set to YES Doxygen will \n# generate a Perl module file that captures the structure of \n# the code including all documentation. Note that this \n# feature is still experimental and incomplete at the \n# moment.\n\nGENERATE_PERLMOD       = NO\n",
                      "markdown": "`# If the GENERATE_PERLMOD tag is set to YES Doxygen will \n# generate a Perl module file that captures the structure of \n# the code including all documentation. Note that this \n# feature is still experimental and incomplete at the \n# moment.\n\nGENERATE_PERLMOD       = NO\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 869,
                  "startColumn": 16,
                  "endLine": 869,
                  "endColumn": 20,
                  "snippet": {
                    "text": "# generate an AutoGen Definitions (see autogen.sf.net) file \n# that captures the structure of the code including all \n# documentation. Note that this feature is still experimental \n# and incomplete at the moment.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n",
                    "rendered": {
                      "text": "# generate an AutoGen Definitions (see autogen.sf.net) file \n# that captures the structure of the code including all \n# documentation. Note that this feature is still experimental \n# and incomplete at the moment.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n",
                      "markdown": "`# generate an AutoGen Definitions (see autogen.sf.net) file \n# that captures the structure of the code including all \n# documentation. Note that this feature is still experimental \n# and incomplete at the moment.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 654,
                  "startColumn": 70,
                  "endLine": 654,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\nTOC_EXPAND             = NO\n\n# The DISABLE_INDEX tag can be used to turn on/off the condensed index at \n# top of each HTML page. The value NO (the default) enables the index and \n# the value YES disables it.\n\n",
                    "rendered": {
                      "text": "\nTOC_EXPAND             = NO\n\n# The DISABLE_INDEX tag can be used to turn on/off the condensed index at \n# top of each HTML page. The value NO (the default) enables the index and \n# the value YES disables it.\n\n",
                      "markdown": "`\nTOC_EXPAND             = NO\n\n# The DISABLE_INDEX tag can be used to turn on/off the condensed index at \n# top of each HTML page. The value NO (the default) enables the index and \n# the value YES disables it.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 365,
                  "startColumn": 1,
                  "endLine": 365,
                  "endColumn": 5,
                  "snippet": {
                    "text": "MAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated \n# at the bottom of the documentation of classes and structs. If set to YES the \n# list will mention the files that were used to generate the documentation.\n\nSHOW_USED_FILES        = YES\n",
                    "rendered": {
                      "text": "MAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated \n# at the bottom of the documentation of classes and structs. If set to YES the \n# list will mention the files that were used to generate the documentation.\n\nSHOW_USED_FILES        = YES\n",
                      "markdown": "`MAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated \n# at the bottom of the documentation of classes and structs. If set to YES the \n# list will mention the files that were used to generate the documentation.\n\nSHOW_USED_FILES        = YES\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 17,
                  "endLine": 24,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. \n# This could be handy for archiving the generated documentation or \n# if some version control system is used.\n\nPROJECT_NUMBER         = 0.12.99\n\n",
                    "rendered": {
                      "text": "\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. \n# This could be handy for archiving the generated documentation or \n# if some version control system is used.\n\nPROJECT_NUMBER         = 0.12.99\n\n",
                      "markdown": "`\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. \n# This could be handy for archiving the generated documentation or \n# if some version control system is used.\n\nPROJECT_NUMBER         = 0.12.99\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 1127,
                  "startColumn": 43,
                  "endLine": 1127,
                  "endColumn": 49,
                  "snippet": {
                    "text": "# graphs generated by dot. A depth value of 3 means that only nodes reachable \n# from the root by following a path via at most 3 edges will be shown. Nodes that \n# lay further from the root node will be omitted. Note that setting this option to \n# 1 or 2 may greatly reduce the computation time needed for large code bases. Also \n# note that a graph may be further truncated if the graph's image dimensions are \n# not sufficient to fit the graph (see MAX_DOT_GRAPH_WIDTH and MAX_DOT_GRAPH_HEIGHT). \n# If 0 is used for the depth value (the default), the graph is not depth-constrained.\n",
                    "rendered": {
                      "text": "# graphs generated by dot. A depth value of 3 means that only nodes reachable \n# from the root by following a path via at most 3 edges will be shown. Nodes that \n# lay further from the root node will be omitted. Note that setting this option to \n# 1 or 2 may greatly reduce the computation time needed for large code bases. Also \n# note that a graph may be further truncated if the graph's image dimensions are \n# not sufficient to fit the graph (see MAX_DOT_GRAPH_WIDTH and MAX_DOT_GRAPH_HEIGHT). \n# If 0 is used for the depth value (the default), the graph is not depth-constrained.\n",
                      "markdown": "`# graphs generated by dot. A depth value of 3 means that only nodes reachable \n# from the root by following a path via at most 3 edges will be shown. Nodes that \n# lay further from the root node will be omitted. Note that setting this option to \n# 1 or 2 may greatly reduce the computation time needed for large code bases. Also \n# note that a graph may be further truncated if the graph's image dimensions are \n# not sufficient to fit the graph (see MAX_DOT_GRAPH_WIDTH and MAX_DOT_GRAPH_HEIGHT). \n# If 0 is used for the depth value (the default), the graph is not depth-constrained.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 1126,
                  "startColumn": 27,
                  "endLine": 1126,
                  "endColumn": 33,
                  "snippet": {
                    "text": "# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the \n# graphs generated by dot. A depth value of 3 means that only nodes reachable \n# from the root by following a path via at most 3 edges will be shown. Nodes that \n# lay further from the root node will be omitted. Note that setting this option to \n# 1 or 2 may greatly reduce the computation time needed for large code bases. Also \n# note that a graph may be further truncated if the graph's image dimensions are \n# not sufficient to fit the graph (see MAX_DOT_GRAPH_WIDTH and MAX_DOT_GRAPH_HEIGHT). \n",
                    "rendered": {
                      "text": "# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the \n# graphs generated by dot. A depth value of 3 means that only nodes reachable \n# from the root by following a path via at most 3 edges will be shown. Nodes that \n# lay further from the root node will be omitted. Note that setting this option to \n# 1 or 2 may greatly reduce the computation time needed for large code bases. Also \n# note that a graph may be further truncated if the graph's image dimensions are \n# not sufficient to fit the graph (see MAX_DOT_GRAPH_WIDTH and MAX_DOT_GRAPH_HEIGHT). \n",
                      "markdown": "`# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the \n# graphs generated by dot. A depth value of 3 means that only nodes reachable \n# from the root by following a path via at most 3 edges will be shown. Nodes that \n# lay further from the root node will be omitted. Note that setting this option to \n# 1 or 2 may greatly reduce the computation time needed for large code bases. Also \n# note that a graph may be further truncated if the graph's image dimensions are \n# not sufficient to fit the graph (see MAX_DOT_GRAPH_WIDTH and MAX_DOT_GRAPH_HEIGHT). \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 1079,
                  "startColumn": 64,
                  "endLine": 1079,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\n# If the CALL_GRAPH and HAVE_DOT tags are set to YES then doxygen will \n# generate a call dependency graph for every global function or class method. \n# Note that enabling this option will significantly increase the time of a run. \n# So in most cases it will be better to enable call graphs for selected \n# functions only using the \\callgraph command.\n\n",
                    "rendered": {
                      "text": "\n# If the CALL_GRAPH and HAVE_DOT tags are set to YES then doxygen will \n# generate a call dependency graph for every global function or class method. \n# Note that enabling this option will significantly increase the time of a run. \n# So in most cases it will be better to enable call graphs for selected \n# functions only using the \\callgraph command.\n\n",
                      "markdown": "`\n# If the CALL_GRAPH and HAVE_DOT tags are set to YES then doxygen will \n# generate a call dependency graph for every global function or class method. \n# Note that enabling this option will significantly increase the time of a run. \n# So in most cases it will be better to enable call graphs for selected \n# functions only using the \\callgraph command.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 1008,
                  "startColumn": 59,
                  "endLine": 1008,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\nEXTERNAL_GROUPS        = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script \n# interpreter (i.e. the result of `which perl').\n\nPERL_PATH              = /usr/bin/perl\n",
                    "rendered": {
                      "text": "\nEXTERNAL_GROUPS        = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script \n# interpreter (i.e. the result of `which perl').\n\nPERL_PATH              = /usr/bin/perl\n",
                      "markdown": "`\nEXTERNAL_GROUPS        = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script \n# interpreter (i.e. the result of `which perl').\n\nPERL_PATH              = /usr/bin/perl\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 916,
                  "startColumn": 55,
                  "endLine": 916,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n# names in the source code. If set to NO (the default) only conditional \n# compilation will be performed. Macro expansion can be done in a controlled \n# way by setting EXPAND_ONLY_PREDEF to YES.\n",
                    "rendered": {
                      "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n# names in the source code. If set to NO (the default) only conditional \n# compilation will be performed. Macro expansion can be done in a controlled \n# way by setting EXPAND_ONLY_PREDEF to YES.\n",
                      "markdown": "`\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n# names in the source code. If set to NO (the default) only conditional \n# compilation will be performed. Macro expansion can be done in a controlled \n# way by setting EXPAND_ONLY_PREDEF to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 895,
                  "startColumn": 5,
                  "endLine": 895,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# nicely formatted so it can be parsed by a human reader.  This is useful \n# if you want to understand what is going on.  On the other hand, if this \n# tag is set to NO the size of the Perl module output will be much smaller \n# and Perl will parse it just the same.\n\nPERLMOD_PRETTY         = YES\n\n",
                    "rendered": {
                      "text": "# nicely formatted so it can be parsed by a human reader.  This is useful \n# if you want to understand what is going on.  On the other hand, if this \n# tag is set to NO the size of the Perl module output will be much smaller \n# and Perl will parse it just the same.\n\nPERLMOD_PRETTY         = YES\n\n",
                      "markdown": "`# nicely formatted so it can be parsed by a human reader.  This is useful \n# if you want to understand what is going on.  On the other hand, if this \n# tag is set to NO the size of the Perl module output will be much smaller \n# and Perl will parse it just the same.\n\nPERLMOD_PRETTY         = YES\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 894,
                  "startColumn": 34,
                  "endLine": 894,
                  "endColumn": 40,
                  "snippet": {
                    "text": "# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be \n# nicely formatted so it can be parsed by a human reader.  This is useful \n# if you want to understand what is going on.  On the other hand, if this \n# tag is set to NO the size of the Perl module output will be much smaller \n# and Perl will parse it just the same.\n\nPERLMOD_PRETTY         = YES\n",
                    "rendered": {
                      "text": "# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be \n# nicely formatted so it can be parsed by a human reader.  This is useful \n# if you want to understand what is going on.  On the other hand, if this \n# tag is set to NO the size of the Perl module output will be much smaller \n# and Perl will parse it just the same.\n\nPERLMOD_PRETTY         = YES\n",
                      "markdown": "`# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be \n# nicely formatted so it can be parsed by a human reader.  This is useful \n# if you want to understand what is going on.  On the other hand, if this \n# tag is set to NO the size of the Perl module output will be much smaller \n# and Perl will parse it just the same.\n\nPERLMOD_PRETTY         = YES\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 891,
                  "startColumn": 45,
                  "endLine": 891,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be \n# nicely formatted so it can be parsed by a human reader.  This is useful \n# if you want to understand what is going on.  On the other hand, if this \n# tag is set to NO the size of the Perl module output will be much smaller \n",
                    "rendered": {
                      "text": "\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be \n# nicely formatted so it can be parsed by a human reader.  This is useful \n# if you want to understand what is going on.  On the other hand, if this \n# tag is set to NO the size of the Perl module output will be much smaller \n",
                      "markdown": "`\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be \n# nicely formatted so it can be parsed by a human reader.  This is useful \n# if you want to understand what is going on.  On the other hand, if this \n# tag is set to NO the size of the Perl module output will be much smaller \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 887,
                  "startColumn": 41,
                  "endLine": 887,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n# If the PERLMOD_LATEX tag is set to YES Doxygen will generate \n# the necessary Makefile rules, Perl scripts and LaTeX code to be able \n# to generate PDF and DVI output from the Perl module output.\n\nPERLMOD_LATEX          = NO\n\n",
                    "rendered": {
                      "text": "\n# If the PERLMOD_LATEX tag is set to YES Doxygen will generate \n# the necessary Makefile rules, Perl scripts and LaTeX code to be able \n# to generate PDF and DVI output from the Perl module output.\n\nPERLMOD_LATEX          = NO\n\n",
                      "markdown": "`\n# If the PERLMOD_LATEX tag is set to YES Doxygen will generate \n# the necessary Makefile rules, Perl scripts and LaTeX code to be able \n# to generate PDF and DVI output from the Perl module output.\n\nPERLMOD_LATEX          = NO\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 886,
                  "startColumn": 31,
                  "endLine": 886,
                  "endColumn": 37,
                  "snippet": {
                    "text": "GENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES Doxygen will generate \n# the necessary Makefile rules, Perl scripts and LaTeX code to be able \n# to generate PDF and DVI output from the Perl module output.\n\nPERLMOD_LATEX          = NO\n",
                    "rendered": {
                      "text": "GENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES Doxygen will generate \n# the necessary Makefile rules, Perl scripts and LaTeX code to be able \n# to generate PDF and DVI output from the Perl module output.\n\nPERLMOD_LATEX          = NO\n",
                      "markdown": "`GENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES Doxygen will generate \n# the necessary Makefile rules, Perl scripts and LaTeX code to be able \n# to generate PDF and DVI output from the Perl module output.\n\nPERLMOD_LATEX          = NO\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 878,
                  "startColumn": 12,
                  "endLine": 878,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES Doxygen will \n# generate a Perl module file that captures the structure of \n# the code including all documentation. Note that this \n# feature is still experimental and incomplete at the \n# moment.\n",
                    "rendered": {
                      "text": "#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES Doxygen will \n# generate a Perl module file that captures the structure of \n# the code including all documentation. Note that this \n# feature is still experimental and incomplete at the \n# moment.\n",
                      "markdown": "`#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES Doxygen will \n# generate a Perl module file that captures the structure of \n# the code including all documentation. Note that this \n# feature is still experimental and incomplete at the \n# moment.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 874,
                  "startColumn": 38,
                  "endLine": 874,
                  "endColumn": 44,
                  "snippet": {
                    "text": "GENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES Doxygen will \n",
                    "rendered": {
                      "text": "GENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES Doxygen will \n",
                      "markdown": "`GENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES Doxygen will \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 822,
                  "startColumn": 20,
                  "endLine": 822,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# then it will generate one additional man file for each entity \n# documented in the real man page(s). These additional files \n# only source the real man page, but without them the man command \n# would be unable to find the correct page. The default is NO.\n\nMAN_LINKS              = NO\n\n",
                    "rendered": {
                      "text": "# then it will generate one additional man file for each entity \n# documented in the real man page(s). These additional files \n# only source the real man page, but without them the man command \n# would be unable to find the correct page. The default is NO.\n\nMAN_LINKS              = NO\n\n",
                      "markdown": "`# then it will generate one additional man file for each entity \n# documented in the real man page(s). These additional files \n# only source the real man page, but without them the man command \n# would be unable to find the correct page. The default is NO.\n\nMAN_LINKS              = NO\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 655,
                  "startColumn": 1,
                  "endLine": 655,
                  "endColumn": 6,
                  "snippet": {
                    "text": "TOC_EXPAND             = NO\n\n# The DISABLE_INDEX tag can be used to turn on/off the condensed index at \n# top of each HTML page. The value NO (the default) enables the index and \n# the value YES disables it.\n\nDISABLE_INDEX          = NO\n",
                    "rendered": {
                      "text": "TOC_EXPAND             = NO\n\n# The DISABLE_INDEX tag can be used to turn on/off the condensed index at \n# top of each HTML page. The value NO (the default) enables the index and \n# the value YES disables it.\n\nDISABLE_INDEX          = NO\n",
                      "markdown": "`TOC_EXPAND             = NO\n\n# The DISABLE_INDEX tag can be used to turn on/off the condensed index at \n# top of each HTML page. The value NO (the default) enables the index and \n# the value YES disables it.\n\nDISABLE_INDEX          = NO\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 60,
                  "endLine": 308,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the \n# brief documentation of file, namespace and class members alphabetically \n# by member name. If set to NO (the default) the members will appear in \n# declaration order.\n",
                    "rendered": {
                      "text": "\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the \n# brief documentation of file, namespace and class members alphabetically \n# by member name. If set to NO (the default) the members will appear in \n# declaration order.\n",
                      "markdown": "`\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the \n# brief documentation of file, namespace and class members alphabetically \n# by member name. If set to NO (the default) the members will appear in \n# declaration order.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/Doxyfile"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 6,
                  "endLine": 302,
                  "endColumn": 12,
                  "snippet": {
                    "text": "INLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen \n# will sort the (detailed) documentation of file and class members \n# alphabetically by member name. If set to NO the members will appear in \n# declaration order.\n\n",
                    "rendered": {
                      "text": "INLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen \n# will sort the (detailed) documentation of file and class members \n# alphabetically by member name. If set to NO the members will appear in \n# declaration order.\n\n",
                      "markdown": "`INLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen \n# will sort the (detailed) documentation of file and class members \n# alphabetically by member name. If set to NO the members will appear in \n# declaration order.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libfastjson.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 37,
                  "endLine": 29,
                  "endColumn": 41,
                  "snippet": {
                    "text": "automatted code style checks during CI runs:\n\n* indentions are done via TAB, not spaces\n* no trailing whitespace is permitted at the end of line\n",
                    "rendered": {
                      "text": "automatted code style checks during CI runs:\n\n* indentions are done via TAB, not spaces\n* no trailing whitespace is permitted at the end of line\n",
                      "markdown": "`automatted code style checks during CI runs:\n\n* indentions are done via TAB, not spaces\n* no trailing whitespace is permitted at the end of line\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}