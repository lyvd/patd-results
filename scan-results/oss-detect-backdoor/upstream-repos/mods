{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/mods_test.go"
                },
                "region": {
                  "startLine": 174,
                  "endLine": 174,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nvar responseTypeCases = map[string]struct {\n\tconfig Config\n\texpect openai.ChatCompletionResponseFormatType\n}{\n\t\"no format\": {\n\t\tConfig{},\n",
                    "rendered": {
                      "text": "\nvar responseTypeCases = map[string]struct {\n\tconfig Config\n\texpect openai.ChatCompletionResponseFormatType\n}{\n\t\"no format\": {\n\t\tConfig{},\n",
                      "markdown": "`\nvar responseTypeCases = map[string]struct {\n\tconfig Config\n\texpect openai.ChatCompletionResponseFormatType\n}{\n\t\"no format\": {\n\t\tConfig{},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/mods_test.go"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 29,
                  "endLine": 157,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\tmods.Config.Show = \"aaa\"\n\t\tmsg := mods.findCacheOpsDetails()()\n\t\terr := msg.(modsError)\n\t\trequire.Equal(t, \"Could not find the conversation.\", err.reason)\n\t\trequire.EqualError(t, err, errNoMatches.Error())\n\t})\n}\n",
                    "rendered": {
                      "text": "\t\tmods.Config.Show = \"aaa\"\n\t\tmsg := mods.findCacheOpsDetails()()\n\t\terr := msg.(modsError)\n\t\trequire.Equal(t, \"Could not find the conversation.\", err.reason)\n\t\trequire.EqualError(t, err, errNoMatches.Error())\n\t})\n}\n",
                      "markdown": "`\t\tmods.Config.Show = \"aaa\"\n\t\tmsg := mods.findCacheOpsDetails()()\n\t\terr := msg.(modsError)\n\t\trequire.Equal(t, \"Could not find the conversation.\", err.reason)\n\t\trequire.EqualError(t, err, errNoMatches.Error())\n\t})\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.github/workflows/goreleaser.yml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 50,
                  "endLine": 27,
                  "endColumn": 58,
                  "snippet": {
                    "text": "      nfpm_gpg_key: ${{ secrets.NFPM_GPG_KEY }}\n      nfpm_passphrase: ${{ secrets.NFPM_PASSPHRASE }}\n      macos_sign_p12: ${{ secrets.MACOS_SIGN_P12 }}\n      macos_sign_password: ${{ secrets.MACOS_SIGN_PASSWORD }}\n      macos_notary_issuer_id: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}\n      macos_notary_key_id: ${{ secrets.MACOS_NOTARY_KEY_ID }}\n      macos_notary_key: ${{ secrets.MACOS_NOTARY_KEY }}\n",
                    "rendered": {
                      "text": "      nfpm_gpg_key: ${{ secrets.NFPM_GPG_KEY }}\n      nfpm_passphrase: ${{ secrets.NFPM_PASSPHRASE }}\n      macos_sign_p12: ${{ secrets.MACOS_SIGN_P12 }}\n      macos_sign_password: ${{ secrets.MACOS_SIGN_PASSWORD }}\n      macos_notary_issuer_id: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}\n      macos_notary_key_id: ${{ secrets.MACOS_NOTARY_KEY_ID }}\n      macos_notary_key: ${{ secrets.MACOS_NOTARY_KEY }}\n",
                      "markdown": "`      nfpm_gpg_key: ${{ secrets.NFPM_GPG_KEY }}\n      nfpm_passphrase: ${{ secrets.NFPM_PASSPHRASE }}\n      macos_sign_p12: ${{ secrets.MACOS_SIGN_P12 }}\n      macos_sign_password: ${{ secrets.MACOS_SIGN_PASSWORD }}\n      macos_notary_issuer_id: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}\n      macos_notary_key_id: ${{ secrets.MACOS_NOTARY_KEY_ID }}\n      macos_notary_key: ${{ secrets.MACOS_NOTARY_KEY }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.github/workflows/goreleaser.yml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 17,
                  "endLine": 27,
                  "endColumn": 25,
                  "snippet": {
                    "text": "      nfpm_gpg_key: ${{ secrets.NFPM_GPG_KEY }}\n      nfpm_passphrase: ${{ secrets.NFPM_PASSPHRASE }}\n      macos_sign_p12: ${{ secrets.MACOS_SIGN_P12 }}\n      macos_sign_password: ${{ secrets.MACOS_SIGN_PASSWORD }}\n      macos_notary_issuer_id: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}\n      macos_notary_key_id: ${{ secrets.MACOS_NOTARY_KEY_ID }}\n      macos_notary_key: ${{ secrets.MACOS_NOTARY_KEY }}\n",
                    "rendered": {
                      "text": "      nfpm_gpg_key: ${{ secrets.NFPM_GPG_KEY }}\n      nfpm_passphrase: ${{ secrets.NFPM_PASSPHRASE }}\n      macos_sign_p12: ${{ secrets.MACOS_SIGN_P12 }}\n      macos_sign_password: ${{ secrets.MACOS_SIGN_PASSWORD }}\n      macos_notary_issuer_id: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}\n      macos_notary_key_id: ${{ secrets.MACOS_NOTARY_KEY_ID }}\n      macos_notary_key: ${{ secrets.MACOS_NOTARY_KEY }}\n",
                      "markdown": "`      nfpm_gpg_key: ${{ secrets.NFPM_GPG_KEY }}\n      nfpm_passphrase: ${{ secrets.NFPM_PASSPHRASE }}\n      macos_sign_p12: ${{ secrets.MACOS_SIGN_P12 }}\n      macos_sign_password: ${{ secrets.MACOS_SIGN_PASSWORD }}\n      macos_notary_issuer_id: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}\n      macos_notary_key_id: ${{ secrets.MACOS_NOTARY_KEY_ID }}\n      macos_notary_key: ${{ secrets.MACOS_NOTARY_KEY }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.github/workflows/nightly.yml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 50,
                  "endLine": 16,
                  "endColumn": 58,
                  "snippet": {
                    "text": "      docker_token: ${{ secrets.DOCKERHUB_TOKEN }}\n      goreleaser_key: ${{ secrets.GORELEASER_KEY }}\n      macos_sign_p12: ${{ secrets.MACOS_SIGN_P12 }}\n      macos_sign_password: ${{ secrets.MACOS_SIGN_PASSWORD }}\n      macos_notary_issuer_id: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}\n      macos_notary_key_id: ${{ secrets.MACOS_NOTARY_KEY_ID }}\n      macos_notary_key: ${{ secrets.MACOS_NOTARY_KEY }}\n",
                    "rendered": {
                      "text": "      docker_token: ${{ secrets.DOCKERHUB_TOKEN }}\n      goreleaser_key: ${{ secrets.GORELEASER_KEY }}\n      macos_sign_p12: ${{ secrets.MACOS_SIGN_P12 }}\n      macos_sign_password: ${{ secrets.MACOS_SIGN_PASSWORD }}\n      macos_notary_issuer_id: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}\n      macos_notary_key_id: ${{ secrets.MACOS_NOTARY_KEY_ID }}\n      macos_notary_key: ${{ secrets.MACOS_NOTARY_KEY }}\n",
                      "markdown": "`      docker_token: ${{ secrets.DOCKERHUB_TOKEN }}\n      goreleaser_key: ${{ secrets.GORELEASER_KEY }}\n      macos_sign_p12: ${{ secrets.MACOS_SIGN_P12 }}\n      macos_sign_password: ${{ secrets.MACOS_SIGN_PASSWORD }}\n      macos_notary_issuer_id: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}\n      macos_notary_key_id: ${{ secrets.MACOS_NOTARY_KEY_ID }}\n      macos_notary_key: ${{ secrets.MACOS_NOTARY_KEY }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.github/workflows/nightly.yml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 17,
                  "endLine": 16,
                  "endColumn": 25,
                  "snippet": {
                    "text": "      docker_token: ${{ secrets.DOCKERHUB_TOKEN }}\n      goreleaser_key: ${{ secrets.GORELEASER_KEY }}\n      macos_sign_p12: ${{ secrets.MACOS_SIGN_P12 }}\n      macos_sign_password: ${{ secrets.MACOS_SIGN_PASSWORD }}\n      macos_notary_issuer_id: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}\n      macos_notary_key_id: ${{ secrets.MACOS_NOTARY_KEY_ID }}\n      macos_notary_key: ${{ secrets.MACOS_NOTARY_KEY }}\n",
                    "rendered": {
                      "text": "      docker_token: ${{ secrets.DOCKERHUB_TOKEN }}\n      goreleaser_key: ${{ secrets.GORELEASER_KEY }}\n      macos_sign_p12: ${{ secrets.MACOS_SIGN_P12 }}\n      macos_sign_password: ${{ secrets.MACOS_SIGN_PASSWORD }}\n      macos_notary_issuer_id: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}\n      macos_notary_key_id: ${{ secrets.MACOS_NOTARY_KEY_ID }}\n      macos_notary_key: ${{ secrets.MACOS_NOTARY_KEY }}\n",
                      "markdown": "`      docker_token: ${{ secrets.DOCKERHUB_TOKEN }}\n      goreleaser_key: ${{ secrets.GORELEASER_KEY }}\n      macos_sign_p12: ${{ secrets.MACOS_SIGN_P12 }}\n      macos_sign_password: ${{ secrets.MACOS_SIGN_PASSWORD }}\n      macos_notary_issuer_id: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}\n      macos_notary_key_id: ${{ secrets.MACOS_NOTARY_KEY_ID }}\n      macos_notary_key: ${{ secrets.MACOS_NOTARY_KEY }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/google.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 140,
                  "endLine": 27,
                  "endColumn": 149,
                  "snippet": {
                    "text": "// DefaultGoogleConfig returns the default configuration for the Google API client.\nfunc DefaultGoogleConfig(model, authToken string) GoogleClientConfig {\n\treturn GoogleClientConfig{\n\t\tBaseURL:            fmt.Sprintf(\"https://generativelanguage.googleapis.com/v1beta/models/%s:streamGenerateContent?alt=sse&key=%s\", model, authToken),\n\t\tHTTPClient:         &http.Client{},\n\t\tEmptyMessagesLimit: defaultEmptyMessagesLimit,\n\t}\n",
                    "rendered": {
                      "text": "// DefaultGoogleConfig returns the default configuration for the Google API client.\nfunc DefaultGoogleConfig(model, authToken string) GoogleClientConfig {\n\treturn GoogleClientConfig{\n\t\tBaseURL:            fmt.Sprintf(\"https://generativelanguage.googleapis.com/v1beta/models/%s:streamGenerateContent?alt=sse&key=%s\", model, authToken),\n\t\tHTTPClient:         &http.Client{},\n\t\tEmptyMessagesLimit: defaultEmptyMessagesLimit,\n\t}\n",
                      "markdown": "`// DefaultGoogleConfig returns the default configuration for the Google API client.\nfunc DefaultGoogleConfig(model, authToken string) GoogleClientConfig {\n\treturn GoogleClientConfig{\n\t\tBaseURL:            fmt.Sprintf(\"https://generativelanguage.googleapis.com/v1beta/models/%s:streamGenerateContent?alt=sse&key=%s\", model, authToken),\n\t\tHTTPClient:         &http.Client{},\n\t\tEmptyMessagesLimit: defaultEmptyMessagesLimit,\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/google.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 32,
                  "endLine": 25,
                  "endColumn": 41,
                  "snippet": {
                    "text": "}\n\n// DefaultGoogleConfig returns the default configuration for the Google API client.\nfunc DefaultGoogleConfig(model, authToken string) GoogleClientConfig {\n\treturn GoogleClientConfig{\n\t\tBaseURL:            fmt.Sprintf(\"https://generativelanguage.googleapis.com/v1beta/models/%s:streamGenerateContent?alt=sse&key=%s\", model, authToken),\n\t\tHTTPClient:         &http.Client{},\n",
                    "rendered": {
                      "text": "}\n\n// DefaultGoogleConfig returns the default configuration for the Google API client.\nfunc DefaultGoogleConfig(model, authToken string) GoogleClientConfig {\n\treturn GoogleClientConfig{\n\t\tBaseURL:            fmt.Sprintf(\"https://generativelanguage.googleapis.com/v1beta/models/%s:streamGenerateContent?alt=sse&key=%s\", model, authToken),\n\t\tHTTPClient:         &http.Client{},\n",
                      "markdown": "`}\n\n// DefaultGoogleConfig returns the default configuration for the Google API client.\nfunc DefaultGoogleConfig(model, authToken string) GoogleClientConfig {\n\treturn GoogleClientConfig{\n\t\tBaseURL:            fmt.Sprintf(\"https://generativelanguage.googleapis.com/v1beta/models/%s:streamGenerateContent?alt=sse&key=%s\", model, authToken),\n\t\tHTTPClient:         &http.Client{},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/mods.go"
                },
                "region": {
                  "startLine": 418,
                  "startColumn": 20,
                  "endLine": 418,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tm.Styles.InlineCode.Render(\"mods --settings\"),\n\t\t),\n\t\terr: newUserErrorf(\n\t\t\t\"You can grab one at %s.\",\n\t\t\tm.Styles.Link.Render(docsURL),\n\t\t),\n\t}\n",
                    "rendered": {
                      "text": "\t\t\tm.Styles.InlineCode.Render(\"mods --settings\"),\n\t\t),\n\t\terr: newUserErrorf(\n\t\t\t\"You can grab one at %s.\",\n\t\t\tm.Styles.Link.Render(docsURL),\n\t\t),\n\t}\n",
                      "markdown": "`\t\t\tm.Styles.InlineCode.Render(\"mods --settings\"),\n\t\t),\n\t\terr: newUserErrorf(\n\t\t\t\"You can grab one at %s.\",\n\t\t\tm.Styles.Link.Render(docsURL),\n\t\t),\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/mods.go"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 57,
                  "endLine": 412,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\t}\n\treturn \"\", modsError{\n\t\treason: fmt.Sprintf(\n\t\t\t\"%[1]s required; set the environment variable %[1]s or update %[2]s through %[3]s.\",\n\t\t\tm.Styles.InlineCode.Render(defaultEnv),\n\t\t\tm.Styles.InlineCode.Render(\"mods.yaml\"),\n\t\t\tm.Styles.InlineCode.Render(\"mods --settings\"),\n",
                    "rendered": {
                      "text": "\t}\n\treturn \"\", modsError{\n\t\treason: fmt.Sprintf(\n\t\t\t\"%[1]s required; set the environment variable %[1]s or update %[2]s through %[3]s.\",\n\t\t\tm.Styles.InlineCode.Render(defaultEnv),\n\t\t\tm.Styles.InlineCode.Render(\"mods.yaml\"),\n\t\t\tm.Styles.InlineCode.Render(\"mods --settings\"),\n",
                      "markdown": "`\t}\n\treturn \"\", modsError{\n\t\treason: fmt.Sprintf(\n\t\t\t\"%[1]s required; set the environment variable %[1]s or update %[2]s through %[3]s.\",\n\t\t\tm.Styles.InlineCode.Render(defaultEnv),\n\t\t\tm.Styles.InlineCode.Render(\"mods.yaml\"),\n\t\t\tm.Styles.InlineCode.Render(\"mods --settings\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/mods.go"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 17,
                  "endLine": 189,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t// Only respond to keypresses when the viewport (i.e. the content) is\n\t\t// taller than the window.\n\t\tvar cmd tea.Cmd\n\t\tm.glamViewport, cmd = m.glamViewport.Update(msg)\n\t\tcmds = append(cmds, cmd)\n\t}\n\treturn m, tea.Batch(cmds...)\n",
                    "rendered": {
                      "text": "\t\t// Only respond to keypresses when the viewport (i.e. the content) is\n\t\t// taller than the window.\n\t\tvar cmd tea.Cmd\n\t\tm.glamViewport, cmd = m.glamViewport.Update(msg)\n\t\tcmds = append(cmds, cmd)\n\t}\n\treturn m, tea.Batch(cmds...)\n",
                      "markdown": "`\t\t// Only respond to keypresses when the viewport (i.e. the content) is\n\t\t// taller than the window.\n\t\tvar cmd tea.Cmd\n\t\tm.glamViewport, cmd = m.glamViewport.Update(msg)\n\t\tcmds = append(cmds, cmd)\n\t}\n\treturn m, tea.Batch(cmds...)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/mods.go"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 5,
                  "endLine": 188,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tif m.viewportNeeded() {\n\t\t// Only respond to keypresses when the viewport (i.e. the content) is\n\t\t// taller than the window.\n\t\tvar cmd tea.Cmd\n\t\tm.glamViewport, cmd = m.glamViewport.Update(msg)\n\t\tcmds = append(cmds, cmd)\n\t}\n",
                    "rendered": {
                      "text": "\tif m.viewportNeeded() {\n\t\t// Only respond to keypresses when the viewport (i.e. the content) is\n\t\t// taller than the window.\n\t\tvar cmd tea.Cmd\n\t\tm.glamViewport, cmd = m.glamViewport.Update(msg)\n\t\tcmds = append(cmds, cmd)\n\t}\n",
                      "markdown": "`\tif m.viewportNeeded() {\n\t\t// Only respond to keypresses when the viewport (i.e. the content) is\n\t\t// taller than the window.\n\t\tvar cmd tea.Cmd\n\t\tm.glamViewport, cmd = m.glamViewport.Update(msg)\n\t\tcmds = append(cmds, cmd)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/mods.go"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 9,
                  "endLine": 182,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t}\n\tif !m.Config.Quiet && (m.state == configLoadedState || m.state == requestState) {\n\t\tvar cmd tea.Cmd\n\t\tm.anim, cmd = m.anim.Update(msg)\n\t\tcmds = append(cmds, cmd)\n\t}\n\tif m.viewportNeeded() {\n",
                    "rendered": {
                      "text": "\t}\n\tif !m.Config.Quiet && (m.state == configLoadedState || m.state == requestState) {\n\t\tvar cmd tea.Cmd\n\t\tm.anim, cmd = m.anim.Update(msg)\n\t\tcmds = append(cmds, cmd)\n\t}\n\tif m.viewportNeeded() {\n",
                      "markdown": "`\t}\n\tif !m.Config.Quiet && (m.state == configLoadedState || m.state == requestState) {\n\t\tvar cmd tea.Cmd\n\t\tm.anim, cmd = m.anim.Update(msg)\n\t\tcmds = append(cmds, cmd)\n\t}\n\tif m.viewportNeeded() {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/mods.go"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 5,
                  "endLine": 181,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t}\n\t}\n\tif !m.Config.Quiet && (m.state == configLoadedState || m.state == requestState) {\n\t\tvar cmd tea.Cmd\n\t\tm.anim, cmd = m.anim.Update(msg)\n\t\tcmds = append(cmds, cmd)\n\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\t}\n\tif !m.Config.Quiet && (m.state == configLoadedState || m.state == requestState) {\n\t\tvar cmd tea.Cmd\n\t\tm.anim, cmd = m.anim.Update(msg)\n\t\tcmds = append(cmds, cmd)\n\t}\n",
                      "markdown": "`\t\t}\n\t}\n\tif !m.Config.Quiet && (m.state == configLoadedState || m.state == requestState) {\n\t\tvar cmd tea.Cmd\n\t\tm.anim, cmd = m.anim.Update(msg)\n\t\tcmds = append(cmds, cmd)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/mods.go"
                },
                "region": {
                  "startLine": 523,
                  "startColumn": 23,
                  "endLine": 523,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tif err != nil {\n\t\t\t\treturn modsError{\n\t\t\t\t\terr:    err,\n\t\t\t\t\treason: \"Could not find the conversation.\",\n\t\t\t\t}\n\t\t\t}\n\t\t\tif found != nil {\n",
                    "rendered": {
                      "text": "\t\t\tif err != nil {\n\t\t\t\treturn modsError{\n\t\t\t\t\terr:    err,\n\t\t\t\t\treason: \"Could not find the conversation.\",\n\t\t\t\t}\n\t\t\t}\n\t\t\tif found != nil {\n",
                      "markdown": "`\t\t\tif err != nil {\n\t\t\t\treturn modsError{\n\t\t\t\t\terr:    err,\n\t\t\t\t\treason: \"Could not find the conversation.\",\n\t\t\t\t}\n\t\t\t}\n\t\t\tif found != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/db_test.go"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 18,
                  "endLine": 153,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n\t\tconst testid1 = \"fc5012d8c67073ea0a46a3c05488a0e1d87df74b\"\n\t\tconst title1 = \"some title\"\n\t\tconst testid2 = \"6c33f71694bf41a18c844a96d1f62f153e5f6f44\"\n\t\tconst title2 = \"football teams\"\n\t\trequire.NoError(t, db.Save(testid1, title1, \"gpt-4o\"))\n\t\trequire.NoError(t, db.Save(testid2, title2, \"gpt-4o\"))\n",
                    "rendered": {
                      "text": "\n\t\tconst testid1 = \"fc5012d8c67073ea0a46a3c05488a0e1d87df74b\"\n\t\tconst title1 = \"some title\"\n\t\tconst testid2 = \"6c33f71694bf41a18c844a96d1f62f153e5f6f44\"\n\t\tconst title2 = \"football teams\"\n\t\trequire.NoError(t, db.Save(testid1, title1, \"gpt-4o\"))\n\t\trequire.NoError(t, db.Save(testid2, title2, \"gpt-4o\"))\n",
                      "markdown": "`\n\t\tconst testid1 = \"fc5012d8c67073ea0a46a3c05488a0e1d87df74b\"\n\t\tconst title1 = \"some title\"\n\t\tconst testid2 = \"6c33f71694bf41a18c844a96d1f62f153e5f6f44\"\n\t\tconst title2 = \"football teams\"\n\t\trequire.NoError(t, db.Save(testid1, title1, \"gpt-4o\"))\n\t\trequire.NoError(t, db.Save(testid2, title2, \"gpt-4o\"))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/db_test.go"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 18,
                  "endLine": 151,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\tt.Run(\"completions\", func(t *testing.T) {\n\t\tdb := testDB(t)\n\n\t\tconst testid1 = \"fc5012d8c67073ea0a46a3c05488a0e1d87df74b\"\n\t\tconst title1 = \"some title\"\n\t\tconst testid2 = \"6c33f71694bf41a18c844a96d1f62f153e5f6f44\"\n\t\tconst title2 = \"football teams\"\n",
                    "rendered": {
                      "text": "\tt.Run(\"completions\", func(t *testing.T) {\n\t\tdb := testDB(t)\n\n\t\tconst testid1 = \"fc5012d8c67073ea0a46a3c05488a0e1d87df74b\"\n\t\tconst title1 = \"some title\"\n\t\tconst testid2 = \"6c33f71694bf41a18c844a96d1f62f153e5f6f44\"\n\t\tconst title2 = \"football teams\"\n",
                      "markdown": "`\tt.Run(\"completions\", func(t *testing.T) {\n\t\tdb := testDB(t)\n\n\t\tconst testid1 = \"fc5012d8c67073ea0a46a3c05488a0e1d87df74b\"\n\t\tconst title1 = \"some title\"\n\t\tconst testid2 = \"6c33f71694bf41a18c844a96d1f62f153e5f6f44\"\n\t\tconst title2 = \"football teams\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/db_test.go"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 18,
                  "endLine": 122,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n\tt.Run(\"find match many\", func(t *testing.T) {\n\t\tdb := testDB(t)\n\t\tconst testid2 = \"df31ae23ab9b75b5641c2f846c571000edc71315\"\n\t\trequire.NoError(t, db.Save(testid, \"message 1\", \"gpt-4o\"))\n\t\trequire.NoError(t, db.Save(testid2, \"message 2\", \"gpt-4o\"))\n\t\t_, err := db.Find(\"df31ae\")\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"find match many\", func(t *testing.T) {\n\t\tdb := testDB(t)\n\t\tconst testid2 = \"df31ae23ab9b75b5641c2f846c571000edc71315\"\n\t\trequire.NoError(t, db.Save(testid, \"message 1\", \"gpt-4o\"))\n\t\trequire.NoError(t, db.Save(testid2, \"message 2\", \"gpt-4o\"))\n\t\t_, err := db.Find(\"df31ae\")\n",
                      "markdown": "`\n\tt.Run(\"find match many\", func(t *testing.T) {\n\t\tdb := testDB(t)\n\t\tconst testid2 = \"df31ae23ab9b75b5641c2f846c571000edc71315\"\n\t\trequire.NoError(t, db.Save(testid, \"message 1\", \"gpt-4o\"))\n\t\trequire.NoError(t, db.Save(testid2, \"message 2\", \"gpt-4o\"))\n\t\t_, err := db.Find(\"df31ae\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/db_test.go"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 16,
                  "endLine": 21,
                  "endColumn": 58,
                  "snippet": {
                    "text": "}\n\nfunc TestConvoDB(t *testing.T) {\n\tconst testid = \"df31ae23ab8b75b5643c2f846c570997edc71333\"\n\n\tt.Run(\"list-empty\", func(t *testing.T) {\n\t\tdb := testDB(t)\n",
                    "rendered": {
                      "text": "}\n\nfunc TestConvoDB(t *testing.T) {\n\tconst testid = \"df31ae23ab8b75b5643c2f846c570997edc71333\"\n\n\tt.Run(\"list-empty\", func(t *testing.T) {\n\t\tdb := testDB(t)\n",
                      "markdown": "`}\n\nfunc TestConvoDB(t *testing.T) {\n\tconst testid = \"df31ae23ab8b75b5643c2f846c570997edc71333\"\n\n\tt.Run(\"list-empty\", func(t *testing.T) {\n\t\tdb := testDB(t)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/db_test.go"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 12,
                  "endLine": 83,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\trequire.Equal(t, \"message 2\", head.Title)\n\t})\n\n\tt.Run(\"find head multiple\", func(t *testing.T) {\n\t\tdb := testDB(t)\n\n\t\trequire.NoError(t, db.Save(testid, \"message 2\", \"gpt-4o\"))\n",
                    "rendered": {
                      "text": "\t\trequire.Equal(t, \"message 2\", head.Title)\n\t})\n\n\tt.Run(\"find head multiple\", func(t *testing.T) {\n\t\tdb := testDB(t)\n\n\t\trequire.NoError(t, db.Save(testid, \"message 2\", \"gpt-4o\"))\n",
                      "markdown": "`\t\trequire.Equal(t, \"message 2\", head.Title)\n\t})\n\n\tt.Run(\"find head multiple\", func(t *testing.T) {\n\t\tdb := testDB(t)\n\n\t\trequire.NoError(t, db.Save(testid, \"message 2\", \"gpt-4o\"))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/db_test.go"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 12,
                  "endLine": 72,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\trequire.Len(t, list, 1)\n\t})\n\n\tt.Run(\"find head single\", func(t *testing.T) {\n\t\tdb := testDB(t)\n\n\t\trequire.NoError(t, db.Save(testid, \"message 2\", \"gpt-4o\"))\n",
                    "rendered": {
                      "text": "\t\trequire.Len(t, list, 1)\n\t})\n\n\tt.Run(\"find head single\", func(t *testing.T) {\n\t\tdb := testDB(t)\n\n\t\trequire.NoError(t, db.Save(testid, \"message 2\", \"gpt-4o\"))\n",
                      "markdown": "`\t\trequire.Len(t, list, 1)\n\t})\n\n\tt.Run(\"find head single\", func(t *testing.T) {\n\t\tdb := testDB(t)\n\n\t\trequire.NoError(t, db.Save(testid, \"message 2\", \"gpt-4o\"))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/examples.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 19,
                  "endLine": 41,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n### Make Recommendations\n\nMods is really good at generating recommendations based on what you have as\nwell, both for similar content but also content in an entirely different media\n(like getting music recommendations based on movies you have).\n\n",
                    "rendered": {
                      "text": "\n### Make Recommendations\n\nMods is really good at generating recommendations based on what you have as\nwell, both for similar content but also content in an entirely different media\n(like getting music recommendations based on movies you have).\n\n",
                      "markdown": "`\n### Make Recommendations\n\nMods is really good at generating recommendations based on what you have as\nwell, both for similar content but also content in an entirely different media\n(like getting music recommendations based on movies you have).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/cohere.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 26,
                  "endLine": 43,
                  "endColumn": 35,
                  "snippet": {
                    "text": "// NewCohereClient creates a new [client.Client] with the given configuration.\nfunc NewCohereClientWithConfig(config CohereClientConfig) *CohereClient {\n\topts := []option.RequestOption{\n\t\tclient.WithToken(config.AuthToken),\n\t\tclient.WithHTTPClient(config.HTTPClient),\n\t}\n\n",
                    "rendered": {
                      "text": "// NewCohereClient creates a new [client.Client] with the given configuration.\nfunc NewCohereClientWithConfig(config CohereClientConfig) *CohereClient {\n\topts := []option.RequestOption{\n\t\tclient.WithToken(config.AuthToken),\n\t\tclient.WithHTTPClient(config.HTTPClient),\n\t}\n\n",
                      "markdown": "`// NewCohereClient creates a new [client.Client] with the given configuration.\nfunc NewCohereClientWithConfig(config CohereClientConfig) *CohereClient {\n\topts := []option.RequestOption{\n\t\tclient.WithToken(config.AuthToken),\n\t\tclient.WithHTTPClient(config.HTTPClient),\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/cohere.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 14,
                  "endLine": 29,
                  "endColumn": 23,
                  "snippet": {
                    "text": "// DefaultCohereConfig returns the default configuration for the Cohere API client.\nfunc DefaultCohereConfig(authToken string) CohereClientConfig {\n\treturn CohereClientConfig{\n\t\tAuthToken:  authToken,\n\t\tBaseURL:    \"\",\n\t\tHTTPClient: &http.Client{},\n\t}\n",
                    "rendered": {
                      "text": "// DefaultCohereConfig returns the default configuration for the Cohere API client.\nfunc DefaultCohereConfig(authToken string) CohereClientConfig {\n\treturn CohereClientConfig{\n\t\tAuthToken:  authToken,\n\t\tBaseURL:    \"\",\n\t\tHTTPClient: &http.Client{},\n\t}\n",
                      "markdown": "`// DefaultCohereConfig returns the default configuration for the Cohere API client.\nfunc DefaultCohereConfig(authToken string) CohereClientConfig {\n\treturn CohereClientConfig{\n\t\tAuthToken:  authToken,\n\t\tBaseURL:    \"\",\n\t\tHTTPClient: &http.Client{},\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/cohere.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 2,
                  "endLine": 29,
                  "endColumn": 11,
                  "snippet": {
                    "text": "// DefaultCohereConfig returns the default configuration for the Cohere API client.\nfunc DefaultCohereConfig(authToken string) CohereClientConfig {\n\treturn CohereClientConfig{\n\t\tAuthToken:  authToken,\n\t\tBaseURL:    \"\",\n\t\tHTTPClient: &http.Client{},\n\t}\n",
                    "rendered": {
                      "text": "// DefaultCohereConfig returns the default configuration for the Cohere API client.\nfunc DefaultCohereConfig(authToken string) CohereClientConfig {\n\treturn CohereClientConfig{\n\t\tAuthToken:  authToken,\n\t\tBaseURL:    \"\",\n\t\tHTTPClient: &http.Client{},\n\t}\n",
                      "markdown": "`// DefaultCohereConfig returns the default configuration for the Cohere API client.\nfunc DefaultCohereConfig(authToken string) CohereClientConfig {\n\treturn CohereClientConfig{\n\t\tAuthToken:  authToken,\n\t\tBaseURL:    \"\",\n\t\tHTTPClient: &http.Client{},\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/cohere.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 25,
                  "endLine": 27,
                  "endColumn": 34,
                  "snippet": {
                    "text": "}\n\n// DefaultCohereConfig returns the default configuration for the Cohere API client.\nfunc DefaultCohereConfig(authToken string) CohereClientConfig {\n\treturn CohereClientConfig{\n\t\tAuthToken:  authToken,\n\t\tBaseURL:    \"\",\n",
                    "rendered": {
                      "text": "}\n\n// DefaultCohereConfig returns the default configuration for the Cohere API client.\nfunc DefaultCohereConfig(authToken string) CohereClientConfig {\n\treturn CohereClientConfig{\n\t\tAuthToken:  authToken,\n\t\tBaseURL:    \"\",\n",
                      "markdown": "`}\n\n// DefaultCohereConfig returns the default configuration for the Cohere API client.\nfunc DefaultCohereConfig(authToken string) CohereClientConfig {\n\treturn CohereClientConfig{\n\t\tAuthToken:  authToken,\n\t\tBaseURL:    \"\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/cohere.go"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n// CohereClientConfig represents the configuration for the Cohere API client.\ntype CohereClientConfig struct {\n\tAuthToken          string\n\tBaseURL            string\n\tHTTPClient         *http.Client\n\tEmptyMessagesLimit uint\n",
                    "rendered": {
                      "text": "\n// CohereClientConfig represents the configuration for the Cohere API client.\ntype CohereClientConfig struct {\n\tAuthToken          string\n\tBaseURL            string\n\tHTTPClient         *http.Client\n\tEmptyMessagesLimit uint\n",
                      "markdown": "`\n// CohereClientConfig represents the configuration for the Cohere API client.\ntype CohereClientConfig struct {\n\tAuthToken          string\n\tBaseURL            string\n\tHTTPClient         *http.Client\n\tEmptyMessagesLimit uint\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/cache_test.go"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 17,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\"github.com/stretchr/testify/require\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update .golden files\")\n\nfunc TestCache(t *testing.T) {\n\tt.Run(\"read non-existent\", func(t *testing.T) {\n",
                    "rendered": {
                      "text": "\t\"github.com/stretchr/testify/require\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update .golden files\")\n\nfunc TestCache(t *testing.T) {\n\tt.Run(\"read non-existent\", func(t *testing.T) {\n",
                      "markdown": "`\t\"github.com/stretchr/testify/require\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update .golden files\")\n\nfunc TestCache(t *testing.T) {\n\tt.Run(\"read non-existent\", func(t *testing.T) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/anthropic.go"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 38,
                  "endLine": 100,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\nfunc (c *AnthropicClient) setCommonHeaders(req *http.Request) {\n\treq.Header.Set(\"anthropic-version\", string(c.config.Version))\n\treq.Header.Set(\"x-api-key\", c.config.AuthToken)\n}\n\nfunc (c *AnthropicClient) newRequest(ctx context.Context, method, url string, setters ...requestOption) (*http.Request, error) {\n",
                    "rendered": {
                      "text": "\nfunc (c *AnthropicClient) setCommonHeaders(req *http.Request) {\n\treq.Header.Set(\"anthropic-version\", string(c.config.Version))\n\treq.Header.Set(\"x-api-key\", c.config.AuthToken)\n}\n\nfunc (c *AnthropicClient) newRequest(ctx context.Context, method, url string, setters ...requestOption) (*http.Request, error) {\n",
                      "markdown": "`\nfunc (c *AnthropicClient) setCommonHeaders(req *http.Request) {\n\treq.Header.Set(\"anthropic-version\", string(c.config.Version))\n\treq.Header.Set(\"x-api-key\", c.config.AuthToken)\n}\n\nfunc (c *AnthropicClient) newRequest(ctx context.Context, method, url string, setters ...requestOption) (*http.Request, error) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/anthropic.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 22,
                  "endLine": 47,
                  "endColumn": 31,
                  "snippet": {
                    "text": "// DefaultAnthropicConfig returns the default configuration for the Anthropic API client.\nfunc DefaultAnthropicConfig(authToken string) AnthropicClientConfig {\n\treturn AnthropicClientConfig{\n\t\tAuthToken:          authToken,\n\t\tBaseURL:            \"https://api.anthropic.com/v1\",\n\t\tVersion:            AnthropicV20230601,\n\t\tBeta:               AnthropicBeta,\n",
                    "rendered": {
                      "text": "// DefaultAnthropicConfig returns the default configuration for the Anthropic API client.\nfunc DefaultAnthropicConfig(authToken string) AnthropicClientConfig {\n\treturn AnthropicClientConfig{\n\t\tAuthToken:          authToken,\n\t\tBaseURL:            \"https://api.anthropic.com/v1\",\n\t\tVersion:            AnthropicV20230601,\n\t\tBeta:               AnthropicBeta,\n",
                      "markdown": "`// DefaultAnthropicConfig returns the default configuration for the Anthropic API client.\nfunc DefaultAnthropicConfig(authToken string) AnthropicClientConfig {\n\treturn AnthropicClientConfig{\n\t\tAuthToken:          authToken,\n\t\tBaseURL:            \"https://api.anthropic.com/v1\",\n\t\tVersion:            AnthropicV20230601,\n\t\tBeta:               AnthropicBeta,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/anthropic.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 2,
                  "endLine": 47,
                  "endColumn": 11,
                  "snippet": {
                    "text": "// DefaultAnthropicConfig returns the default configuration for the Anthropic API client.\nfunc DefaultAnthropicConfig(authToken string) AnthropicClientConfig {\n\treturn AnthropicClientConfig{\n\t\tAuthToken:          authToken,\n\t\tBaseURL:            \"https://api.anthropic.com/v1\",\n\t\tVersion:            AnthropicV20230601,\n\t\tBeta:               AnthropicBeta,\n",
                    "rendered": {
                      "text": "// DefaultAnthropicConfig returns the default configuration for the Anthropic API client.\nfunc DefaultAnthropicConfig(authToken string) AnthropicClientConfig {\n\treturn AnthropicClientConfig{\n\t\tAuthToken:          authToken,\n\t\tBaseURL:            \"https://api.anthropic.com/v1\",\n\t\tVersion:            AnthropicV20230601,\n\t\tBeta:               AnthropicBeta,\n",
                      "markdown": "`// DefaultAnthropicConfig returns the default configuration for the Anthropic API client.\nfunc DefaultAnthropicConfig(authToken string) AnthropicClientConfig {\n\treturn AnthropicClientConfig{\n\t\tAuthToken:          authToken,\n\t\tBaseURL:            \"https://api.anthropic.com/v1\",\n\t\tVersion:            AnthropicV20230601,\n\t\tBeta:               AnthropicBeta,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/anthropic.go"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 28,
                  "endLine": 45,
                  "endColumn": 37,
                  "snippet": {
                    "text": "}\n\n// DefaultAnthropicConfig returns the default configuration for the Anthropic API client.\nfunc DefaultAnthropicConfig(authToken string) AnthropicClientConfig {\n\treturn AnthropicClientConfig{\n\t\tAuthToken:          authToken,\n\t\tBaseURL:            \"https://api.anthropic.com/v1\",\n",
                    "rendered": {
                      "text": "}\n\n// DefaultAnthropicConfig returns the default configuration for the Anthropic API client.\nfunc DefaultAnthropicConfig(authToken string) AnthropicClientConfig {\n\treturn AnthropicClientConfig{\n\t\tAuthToken:          authToken,\n\t\tBaseURL:            \"https://api.anthropic.com/v1\",\n",
                      "markdown": "`}\n\n// DefaultAnthropicConfig returns the default configuration for the Anthropic API client.\nfunc DefaultAnthropicConfig(authToken string) AnthropicClientConfig {\n\treturn AnthropicClientConfig{\n\t\tAuthToken:          authToken,\n\t\tBaseURL:            \"https://api.anthropic.com/v1\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/anthropic.go"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n// AnthropicClientConfig represents the configuration for the Anthropic API client.\ntype AnthropicClientConfig struct {\n\tAuthToken          string\n\tBaseURL            string\n\tHTTPClient         *http.Client\n\tVersion            AnthropicAPIVersion\n",
                    "rendered": {
                      "text": "\n// AnthropicClientConfig represents the configuration for the Anthropic API client.\ntype AnthropicClientConfig struct {\n\tAuthToken          string\n\tBaseURL            string\n\tHTTPClient         *http.Client\n\tVersion            AnthropicAPIVersion\n",
                      "markdown": "`\n// AnthropicClientConfig represents the configuration for the Anthropic API client.\ntype AnthropicClientConfig struct {\n\tAuthToken          string\n\tBaseURL            string\n\tHTTPClient         *http.Client\n\tVersion            AnthropicAPIVersion\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/main_test.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n\t\t\"completion bash --help\":               true,\n\t\t\"completion fish --help\":               true,\n\t\t\"completion zsh --help\":                true,\n\t\t\"completion powershell --help\":         true,\n",
                    "rendered": {
                      "text": "\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n\t\t\"completion bash --help\":               true,\n\t\t\"completion fish --help\":               true,\n\t\t\"completion zsh --help\":                true,\n\t\t\"completion powershell --help\":         true,\n",
                      "markdown": "`\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n\t\t\"completion bash --help\":               true,\n\t\t\"completion fish --help\":               true,\n\t\t\"completion zsh --help\":                true,\n\t\t\"completion powershell --help\":         true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/main_test.go"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 13,
                  "endLine": 23,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\"completion fish\":                      true,\n\t\t\"completion zsh\":                       true,\n\t\t\"completion powershell\":                true,\n\t\t\"completion bash -h\":                   true,\n\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n",
                    "rendered": {
                      "text": "\t\t\"completion fish\":                      true,\n\t\t\"completion zsh\":                       true,\n\t\t\"completion powershell\":                true,\n\t\t\"completion bash -h\":                   true,\n\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n",
                      "markdown": "`\t\t\"completion fish\":                      true,\n\t\t\"completion zsh\":                       true,\n\t\t\"completion powershell\":                true,\n\t\t\"completion bash -h\":                   true,\n\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/main_test.go"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 13,
                  "endLine": 14,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\"something\":                            false,\n\t\t\"something something\":                  false,\n\t\t\"completion for my bash script how to\": false,\n\t\t\"completion bash how to\":               false,\n\t\t\"completion\":                           false,\n\t\t\"completion -h\":                        true,\n\t\t\"completion --help\":                    true,\n",
                    "rendered": {
                      "text": "\t\t\"something\":                            false,\n\t\t\"something something\":                  false,\n\t\t\"completion for my bash script how to\": false,\n\t\t\"completion bash how to\":               false,\n\t\t\"completion\":                           false,\n\t\t\"completion -h\":                        true,\n\t\t\"completion --help\":                    true,\n",
                      "markdown": "`\t\t\"something\":                            false,\n\t\t\"something something\":                  false,\n\t\t\"completion for my bash script how to\": false,\n\t\t\"completion bash how to\":               false,\n\t\t\"completion\":                           false,\n\t\t\"completion -h\":                        true,\n\t\t\"completion --help\":                    true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/main_test.go"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 20,
                  "endLine": 13,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\"\":                                     false,\n\t\t\"something\":                            false,\n\t\t\"something something\":                  false,\n\t\t\"completion for my bash script how to\": false,\n\t\t\"completion bash how to\":               false,\n\t\t\"completion\":                           false,\n\t\t\"completion -h\":                        true,\n",
                    "rendered": {
                      "text": "\t\t\"\":                                     false,\n\t\t\"something\":                            false,\n\t\t\"something something\":                  false,\n\t\t\"completion for my bash script how to\": false,\n\t\t\"completion bash how to\":               false,\n\t\t\"completion\":                           false,\n\t\t\"completion -h\":                        true,\n",
                      "markdown": "`\t\t\"\":                                     false,\n\t\t\"something\":                            false,\n\t\t\"something something\":                  false,\n\t\t\"completion for my bash script how to\": false,\n\t\t\"completion bash how to\":               false,\n\t\t\"completion\":                           false,\n\t\t\"completion -h\":                        true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/main_test.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 13,
                  "endLine": 29,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\"completion powershell -h\":             true,\n\t\t\"completion bash --help\":               true,\n\t\t\"completion fish --help\":               true,\n\t\t\"completion zsh --help\":                true,\n\t\t\"completion powershell --help\":         true,\n\t\t\"__complete\":                           true,\n\t\t\"__complete blah blah blah\":            true,\n",
                    "rendered": {
                      "text": "\t\t\"completion powershell -h\":             true,\n\t\t\"completion bash --help\":               true,\n\t\t\"completion fish --help\":               true,\n\t\t\"completion zsh --help\":                true,\n\t\t\"completion powershell --help\":         true,\n\t\t\"__complete\":                           true,\n\t\t\"__complete blah blah blah\":            true,\n",
                      "markdown": "`\t\t\"completion powershell -h\":             true,\n\t\t\"completion bash --help\":               true,\n\t\t\"completion fish --help\":               true,\n\t\t\"completion zsh --help\":                true,\n\t\t\"completion powershell --help\":         true,\n\t\t\"__complete\":                           true,\n\t\t\"__complete blah blah blah\":            true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/main_test.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n\t\t\"completion bash --help\":               true,\n\t\t\"completion fish --help\":               true,\n\t\t\"completion zsh --help\":                true,\n\t\t\"completion powershell --help\":         true,\n",
                    "rendered": {
                      "text": "\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n\t\t\"completion bash --help\":               true,\n\t\t\"completion fish --help\":               true,\n\t\t\"completion zsh --help\":                true,\n\t\t\"completion powershell --help\":         true,\n",
                      "markdown": "`\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n\t\t\"completion bash --help\":               true,\n\t\t\"completion fish --help\":               true,\n\t\t\"completion zsh --help\":                true,\n\t\t\"completion powershell --help\":         true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/main_test.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 13,
                  "endLine": 25,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\"completion powershell\":                true,\n\t\t\"completion bash -h\":                   true,\n\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n\t\t\"completion bash --help\":               true,\n\t\t\"completion fish --help\":               true,\n",
                    "rendered": {
                      "text": "\t\t\"completion powershell\":                true,\n\t\t\"completion bash -h\":                   true,\n\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n\t\t\"completion bash --help\":               true,\n\t\t\"completion fish --help\":               true,\n",
                      "markdown": "`\t\t\"completion powershell\":                true,\n\t\t\"completion bash -h\":                   true,\n\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n\t\t\"completion bash --help\":               true,\n\t\t\"completion fish --help\":               true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/main_test.go"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 13,
                  "endLine": 23,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\"completion fish\":                      true,\n\t\t\"completion zsh\":                       true,\n\t\t\"completion powershell\":                true,\n\t\t\"completion bash -h\":                   true,\n\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n",
                    "rendered": {
                      "text": "\t\t\"completion fish\":                      true,\n\t\t\"completion zsh\":                       true,\n\t\t\"completion powershell\":                true,\n\t\t\"completion bash -h\":                   true,\n\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n",
                      "markdown": "`\t\t\"completion fish\":                      true,\n\t\t\"completion zsh\":                       true,\n\t\t\"completion powershell\":                true,\n\t\t\"completion bash -h\":                   true,\n\t\t\"completion fish -h\":                   true,\n\t\t\"completion zsh -h\":                    true,\n\t\t\"completion powershell -h\":             true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/main_test.go"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 13,
                  "endLine": 14,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\"something\":                            false,\n\t\t\"something something\":                  false,\n\t\t\"completion for my bash script how to\": false,\n\t\t\"completion bash how to\":               false,\n\t\t\"completion\":                           false,\n\t\t\"completion -h\":                        true,\n\t\t\"completion --help\":                    true,\n",
                    "rendered": {
                      "text": "\t\t\"something\":                            false,\n\t\t\"something something\":                  false,\n\t\t\"completion for my bash script how to\": false,\n\t\t\"completion bash how to\":               false,\n\t\t\"completion\":                           false,\n\t\t\"completion -h\":                        true,\n\t\t\"completion --help\":                    true,\n",
                      "markdown": "`\t\t\"something\":                            false,\n\t\t\"something something\":                  false,\n\t\t\"completion for my bash script how to\": false,\n\t\t\"completion bash how to\":               false,\n\t\t\"completion\":                           false,\n\t\t\"completion -h\":                        true,\n\t\t\"completion --help\":                    true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/main_test.go"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 20,
                  "endLine": 13,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\"\":                                     false,\n\t\t\"something\":                            false,\n\t\t\"something something\":                  false,\n\t\t\"completion for my bash script how to\": false,\n\t\t\"completion bash how to\":               false,\n\t\t\"completion\":                           false,\n\t\t\"completion -h\":                        true,\n",
                    "rendered": {
                      "text": "\t\t\"\":                                     false,\n\t\t\"something\":                            false,\n\t\t\"something something\":                  false,\n\t\t\"completion for my bash script how to\": false,\n\t\t\"completion bash how to\":               false,\n\t\t\"completion\":                           false,\n\t\t\"completion -h\":                        true,\n",
                      "markdown": "`\t\t\"\":                                     false,\n\t\t\"something\":                            false,\n\t\t\"something something\":                  false,\n\t\t\"completion for my bash script how to\": false,\n\t\t\"completion bash how to\":               false,\n\t\t\"completion\":                           false,\n\t\t\"completion -h\":                        true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/db.go"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 15,
                  "endLine": 168,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nfunc (c *convoDB) FindHEAD() (*Conversation, error) {\n\tvar convo Conversation\n\tif err := c.db.Get(&convo, `\n\t\tSELECT\n\t\t  *\n\t\tFROM\n",
                    "rendered": {
                      "text": "\nfunc (c *convoDB) FindHEAD() (*Conversation, error) {\n\tvar convo Conversation\n\tif err := c.db.Get(&convo, `\n\t\tSELECT\n\t\t  *\n\t\tFROM\n",
                      "markdown": "`\nfunc (c *convoDB) FindHEAD() (*Conversation, error) {\n\tvar convo Conversation\n\tif err := c.db.Get(&convo, `\n\t\tSELECT\n\t\t  *\n\t\tFROM\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/db.go"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 13,
                  "endLine": 79,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nfunc hasColumn(db *sqlx.DB, col string) bool {\n\tvar count int\n\tif err := db.Get(&count, `\n\t\tSELECT count(*)\n\t\tFROM pragma_table_info('conversations') c\n\t\tWHERE c.name = $1\n",
                    "rendered": {
                      "text": "\nfunc hasColumn(db *sqlx.DB, col string) bool {\n\tvar count int\n\tif err := db.Get(&count, `\n\t\tSELECT count(*)\n\t\tFROM pragma_table_info('conversations') c\n\t\tWHERE c.name = $1\n",
                      "markdown": "`\nfunc hasColumn(db *sqlx.DB, col string) bool {\n\tvar count int\n\tif err := db.Get(&count, `\n\t\tSELECT count(*)\n\t\tFROM pragma_table_info('conversations') c\n\t\tWHERE c.name = $1\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/db.go"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 1,
                  "endLine": 107,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nfunc (c *convoDB) Save(id, title, model string) error {\n\tres, err := c.db.Exec(c.db.Rebind(`\n\t\tUPDATE conversations\n\t\tSET\n\t\t  title = ?,\n\t\t  model = ?,\n",
                    "rendered": {
                      "text": "\nfunc (c *convoDB) Save(id, title, model string) error {\n\tres, err := c.db.Exec(c.db.Rebind(`\n\t\tUPDATE conversations\n\t\tSET\n\t\t  title = ?,\n\t\t  model = ?,\n",
                      "markdown": "`\nfunc (c *convoDB) Save(id, title, model string) error {\n\tres, err := c.db.Exec(c.db.Rebind(`\n\t\tUPDATE conversations\n\t\tSET\n\t\t  title = ?,\n\t\t  model = ?,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/examples.go"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 125,
                  "endLine": 11,
                  "endColumn": 132,
                  "snippet": {
                    "text": "var examples = map[string]string{\n\t\"Write new sections for a readme\": `cat README.md | mods \"write a new section to this README documenting a pdf sharing feature\"`,\n\t\"Editorialize your video files\":   `ls ~/vids | mods -f \"summarize each of these titles, group them by decade\" | glow`,\n\t\"Let GPT pick something to watch\": `ls ~/vids | mods \"Pick 5 action packed shows from the 80s from this list\" | gum choose | xargs vlc`,\n}\n\nfunc randomExample() string {\n",
                    "rendered": {
                      "text": "var examples = map[string]string{\n\t\"Write new sections for a readme\": `cat README.md | mods \"write a new section to this README documenting a pdf sharing feature\"`,\n\t\"Editorialize your video files\":   `ls ~/vids | mods -f \"summarize each of these titles, group them by decade\" | glow`,\n\t\"Let GPT pick something to watch\": `ls ~/vids | mods \"Pick 5 action packed shows from the 80s from this list\" | gum choose | xargs vlc`,\n}\n\nfunc randomExample() string {\n",
                      "markdown": "`var examples = map[string]string{\n\t\"Write new sections for a readme\": `cat README.md | mods \"write a new section to this README documenting a pdf sharing feature\"`,\n\t\"Editorialize your video files\":   `ls ~/vids | mods -f \"summarize each of these titles, group them by decade\" | glow`,\n\t\"Let GPT pick something to watch\": `ls ~/vids | mods \"Pick 5 action packed shows from the 80s from this list\" | gum choose | xargs vlc`,\n}\n\nfunc randomExample() string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/main.go"
                },
                "region": {
                  "startLine": 543,
                  "startColumn": 33,
                  "endLine": 543,
                  "endColumn": 39,
                  "snippet": {
                    "text": "func deleteConversation() error {\n\tconvo, err := db.Find(config.Delete)\n\tif err != nil {\n\t\treturn modsError{err, \"Couldn't find conversation to delete.\"}\n\t}\n\n\tif err := db.Delete(convo.ID); err != nil {\n",
                    "rendered": {
                      "text": "func deleteConversation() error {\n\tconvo, err := db.Find(config.Delete)\n\tif err != nil {\n\t\treturn modsError{err, \"Couldn't find conversation to delete.\"}\n\t}\n\n\tif err := db.Delete(convo.ID); err != nil {\n",
                      "markdown": "`func deleteConversation() error {\n\tconvo, err := db.Find(config.Delete)\n\tif err != nil {\n\t\treturn modsError{err, \"Couldn't find conversation to delete.\"}\n\t}\n\n\tif err := db.Delete(convo.ID); err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/main.go"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 33,
                  "endLine": 488,
                  "endColumn": 39,
                  "snippet": {
                    "text": "func deleteConversationOlderThan() error {\n\tconversations, err := db.ListOlderThan(config.DeleteOlderThan)\n\tif err != nil {\n\t\treturn modsError{err, \"Couldn't find conversation to delete.\"}\n\t}\n\n\tif len(conversations) == 0 {\n",
                    "rendered": {
                      "text": "func deleteConversationOlderThan() error {\n\tconversations, err := db.ListOlderThan(config.DeleteOlderThan)\n\tif err != nil {\n\t\treturn modsError{err, \"Couldn't find conversation to delete.\"}\n\t}\n\n\tif len(conversations) == 0 {\n",
                      "markdown": "`func deleteConversationOlderThan() error {\n\tconversations, err := db.ListOlderThan(config.DeleteOlderThan)\n\tif err != nil {\n\t\treturn modsError{err, \"Couldn't find conversation to delete.\"}\n\t}\n\n\tif len(conversations) == 0 {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 28,
                  "endLine": 148,
                  "endColumn": 32,
                  "snippet": {
                    "text": "- `--max-tokens`: Specify maximum tokens with which to respond.\n- `--no-limit`: Do not limit the response tokens.\n- `--role`: Specify the role to use (See [custom roles](#custom-roles)).\n- `--word-wrap`: Wrap output at width (defaults to 80)\n- `--reset-settings`: Restore settings to default.\n\n#### Conversations\n",
                    "rendered": {
                      "text": "- `--max-tokens`: Specify maximum tokens with which to respond.\n- `--no-limit`: Do not limit the response tokens.\n- `--role`: Specify the role to use (See [custom roles](#custom-roles)).\n- `--word-wrap`: Wrap output at width (defaults to 80)\n- `--reset-settings`: Restore settings to default.\n\n#### Conversations\n",
                      "markdown": "`- `--max-tokens`: Specify maximum tokens with which to respond.\n- `--no-limit`: Do not limit the response tokens.\n- `--role`: Specify the role to use (See [custom roles](#custom-roles)).\n- `--word-wrap`: Wrap output at width (defaults to 80)\n- `--reset-settings`: Restore settings to default.\n\n#### Conversations\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 15,
                  "endLine": 95,
                  "endColumn": 21,
                  "snippet": {
                    "text": "If you built it from source, you can generate them with:\n\n```bash\nmods completion bash -h\nmods completion zsh -h\nmods completion fish -h\nmods completion powershell -h\n",
                    "rendered": {
                      "text": "If you built it from source, you can generate them with:\n\n```bash\nmods completion bash -h\nmods completion zsh -h\nmods completion fish -h\nmods completion powershell -h\n",
                      "markdown": "`If you built it from source, you can generate them with:\n\n```bash\nmods completion bash -h\nmods completion zsh -h\nmods completion fish -h\nmods completion powershell -h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 8,
                  "endLine": 53,
                  "endColumn": 16,
                  "snippet": {
                    "text": "sudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n\n</details>\n",
                    "rendered": {
                      "text": "sudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n\n</details>\n",
                      "markdown": "`sudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n\n</details>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 11,
                  "endLine": 168,
                  "endColumn": 16,
                  "snippet": {
                    "text": "- `--fanciness`: Level of fanciness.\n- `--temp`: Sampling temperature.\n- `--topp`: Top P value.\n- `--topk`: Top K value.\n\n## Custom Roles\n\n",
                    "rendered": {
                      "text": "- `--fanciness`: Level of fanciness.\n- `--temp`: Sampling temperature.\n- `--topp`: Top P value.\n- `--topk`: Top K value.\n\n## Custom Roles\n\n",
                      "markdown": "`- `--fanciness`: Level of fanciness.\n- `--temp`: Sampling temperature.\n- `--topp`: Top P value.\n- `--topk`: Top K value.\n\n## Custom Roles\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 11,
                  "endLine": 167,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n- `--fanciness`: Level of fanciness.\n- `--temp`: Sampling temperature.\n- `--topp`: Top P value.\n- `--topk`: Top K value.\n\n## Custom Roles\n",
                    "rendered": {
                      "text": "\n- `--fanciness`: Level of fanciness.\n- `--temp`: Sampling temperature.\n- `--topp`: Top P value.\n- `--topk`: Top K value.\n\n## Custom Roles\n",
                      "markdown": "`\n- `--fanciness`: Level of fanciness.\n- `--temp`: Sampling temperature.\n- `--topp`: Top P value.\n- `--topk`: Top K value.\n\n## Custom Roles\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 15,
                  "endLine": 96,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n```bash\nmods completion bash -h\nmods completion zsh -h\nmods completion fish -h\nmods completion powershell -h\n```\n",
                    "rendered": {
                      "text": "\n```bash\nmods completion bash -h\nmods completion zsh -h\nmods completion fish -h\nmods completion powershell -h\n```\n",
                      "markdown": "`\n```bash\nmods completion bash -h\nmods completion zsh -h\nmods completion fish -h\nmods completion powershell -h\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 15,
                  "endLine": 95,
                  "endColumn": 21,
                  "snippet": {
                    "text": "If you built it from source, you can generate them with:\n\n```bash\nmods completion bash -h\nmods completion zsh -h\nmods completion fish -h\nmods completion powershell -h\n",
                    "rendered": {
                      "text": "If you built it from source, you can generate them with:\n\n```bash\nmods completion bash -h\nmods completion zsh -h\nmods completion fish -h\nmods completion powershell -h\n",
                      "markdown": "`If you built it from source, you can generate them with:\n\n```bash\nmods completion bash -h\nmods completion zsh -h\nmods completion fish -h\nmods completion powershell -h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 50,
                  "endLine": 75,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\nOr, download it:\n\n- [Packages][releases] are available in Debian and RPM formats\n- [Binaries][releases] are available for Linux, macOS, and Windows\n\n[releases]: https://github.com/charmbracelet/mods/releases\n",
                    "rendered": {
                      "text": "\nOr, download it:\n\n- [Packages][releases] are available in Debian and RPM formats\n- [Binaries][releases] are available for Linux, macOS, and Windows\n\n[releases]: https://github.com/charmbracelet/mods/releases\n",
                      "markdown": "`\nOr, download it:\n\n- [Packages][releases] are available in Debian and RPM formats\n- [Binaries][releases] are available for Linux, macOS, and Windows\n\n[releases]: https://github.com/charmbracelet/mods/releases\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 4,
                  "endLine": 68,
                  "endColumn": 9,
                  "snippet": {
                    "text": "enabled=1\ngpgcheck=1\ngpgkey=https://repo.charm.sh/yum/gpg.key' | sudo tee /etc/yum.repos.d/charm.repo\nsudo yum install mods\n```\n\n</details>\n",
                    "rendered": {
                      "text": "enabled=1\ngpgcheck=1\ngpgkey=https://repo.charm.sh/yum/gpg.key' | sudo tee /etc/yum.repos.d/charm.repo\nsudo yum install mods\n```\n\n</details>\n",
                      "markdown": "`enabled=1\ngpgcheck=1\ngpgkey=https://repo.charm.sh/yum/gpg.key' | sudo tee /etc/yum.repos.d/charm.repo\nsudo yum install mods\n```\n\n</details>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 48,
                  "endLine": 67,
                  "endColumn": 53,
                  "snippet": {
                    "text": "baseurl=https://repo.charm.sh/yum/\nenabled=1\ngpgcheck=1\ngpgkey=https://repo.charm.sh/yum/gpg.key' | sudo tee /etc/yum.repos.d/charm.repo\nsudo yum install mods\n```\n\n",
                    "rendered": {
                      "text": "baseurl=https://repo.charm.sh/yum/\nenabled=1\ngpgcheck=1\ngpgkey=https://repo.charm.sh/yum/gpg.key' | sudo tee /etc/yum.repos.d/charm.repo\nsudo yum install mods\n```\n\n",
                      "markdown": "`baseurl=https://repo.charm.sh/yum/\nenabled=1\ngpgcheck=1\ngpgkey=https://repo.charm.sh/yum/gpg.key' | sudo tee /etc/yum.repos.d/charm.repo\nsudo yum install mods\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 23,
                  "endLine": 53,
                  "endColumn": 28,
                  "snippet": {
                    "text": "sudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n\n</details>\n",
                    "rendered": {
                      "text": "sudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n\n</details>\n",
                      "markdown": "`sudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n\n</details>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 4,
                  "endLine": 53,
                  "endColumn": 9,
                  "snippet": {
                    "text": "sudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n\n</details>\n",
                    "rendered": {
                      "text": "sudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n\n</details>\n",
                      "markdown": "`sudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n\n</details>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 88,
                  "endLine": 52,
                  "endColumn": 93,
                  "snippet": {
                    "text": "```bash\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n\n",
                    "rendered": {
                      "text": "```bash\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n\n",
                      "markdown": "````bash\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/README.md"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 31,
                  "endLine": 51,
                  "endColumn": 5,
                  "snippet": {
                    "text": "<summary>Debian/Ubuntu</summary>\n\n```bash\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n",
                    "rendered": {
                      "text": "<summary>Debian/Ubuntu</summary>\n\n```bash\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n",
                      "markdown": "`<summary>Debian/Ubuntu</summary>\n\n```bash\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install mods\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/anim.go"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 11,
                  "endLine": 190,
                  "snippet": {
                    "text": "\tcase spinner.TickMsg:\n\t\tvar cmd tea.Cmd\n\t\ta.ellipsis, cmd = a.ellipsis.Update(msg)\n\t\treturn a, cmd\n\tdefault:\n\t\treturn a, nil\n\t}\n}\n",
                    "rendered": {
                      "text": "\tcase spinner.TickMsg:\n\t\tvar cmd tea.Cmd\n\t\ta.ellipsis, cmd = a.ellipsis.Update(msg)\n\t\treturn a, cmd\n\tdefault:\n\t\treturn a, nil\n\t}\n}\n",
                      "markdown": "`\tcase spinner.TickMsg:\n\t\tvar cmd tea.Cmd\n\t\ta.ellipsis, cmd = a.ellipsis.Update(msg)\n\t\treturn a, cmd\n\tdefault:\n\t\treturn a, nil\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/anim.go"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 13,
                  "endLine": 188,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\treturn a, cycleColors()\n\tcase spinner.TickMsg:\n\t\tvar cmd tea.Cmd\n\t\ta.ellipsis, cmd = a.ellipsis.Update(msg)\n\t\treturn a, cmd\n\tdefault:\n\t\treturn a, nil\n",
                    "rendered": {
                      "text": "\t\treturn a, cycleColors()\n\tcase spinner.TickMsg:\n\t\tvar cmd tea.Cmd\n\t\ta.ellipsis, cmd = a.ellipsis.Update(msg)\n\t\treturn a, cmd\n\tdefault:\n\t\treturn a, nil\n",
                      "markdown": "`\t\treturn a, cycleColors()\n\tcase spinner.TickMsg:\n\t\tvar cmd tea.Cmd\n\t\ta.ellipsis, cmd = a.ellipsis.Update(msg)\n\t\treturn a, cmd\n\tdefault:\n\t\treturn a, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/anim.go"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 5,
                  "endLine": 187,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\ta.ramp = append(a.ramp[1:], a.ramp[0])\n\t\treturn a, cycleColors()\n\tcase spinner.TickMsg:\n\t\tvar cmd tea.Cmd\n\t\ta.ellipsis, cmd = a.ellipsis.Update(msg)\n\t\treturn a, cmd\n\tdefault:\n",
                    "rendered": {
                      "text": "\t\ta.ramp = append(a.ramp[1:], a.ramp[0])\n\t\treturn a, cycleColors()\n\tcase spinner.TickMsg:\n\t\tvar cmd tea.Cmd\n\t\ta.ellipsis, cmd = a.ellipsis.Update(msg)\n\t\treturn a, cmd\n\tdefault:\n",
                      "markdown": "`\t\ta.ramp = append(a.ramp[1:], a.ramp[0])\n\t\treturn a, cycleColors()\n\tcase spinner.TickMsg:\n\t\tvar cmd tea.Cmd\n\t\ta.ellipsis, cmd = a.ellipsis.Update(msg)\n\t\treturn a, cmd\n\tdefault:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/anim.go"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 3,
                  "endLine": 172,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t\t// If our entire label has reached end of life, start the\n\t\t\t\t// ellipsis \"spinner\" after a short pause.\n\t\t\t\ta.ellipsisStarted = true\n\t\t\t\tcmd = tea.Tick(time.Millisecond*220, func(time.Time) tea.Msg { //nolint:mnd\n\t\t\t\t\treturn a.ellipsis.Tick()\n\t\t\t\t})\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t// If our entire label has reached end of life, start the\n\t\t\t\t// ellipsis \"spinner\" after a short pause.\n\t\t\t\ta.ellipsisStarted = true\n\t\t\t\tcmd = tea.Tick(time.Millisecond*220, func(time.Time) tea.Msg { //nolint:mnd\n\t\t\t\t\treturn a.ellipsis.Tick()\n\t\t\t\t})\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t// If our entire label has reached end of life, start the\n\t\t\t\t// ellipsis \"spinner\" after a short pause.\n\t\t\t\ta.ellipsisStarted = true\n\t\t\t\tcmd = tea.Tick(time.Millisecond*220, func(time.Time) tea.Msg { //nolint:mnd\n\t\t\t\t\treturn a.ellipsis.Tick()\n\t\t\t\t})\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/anim.go"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 4,
                  "endLine": 155,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n// Update handles messages.\nfunc (a anim) Update(msg tea.Msg) (tea.Model, tea.Cmd) {\n\tvar cmd tea.Cmd\n\tswitch msg.(type) {\n\tcase stepCharsMsg:\n\t\ta.updateChars(&a.cyclingChars)\n",
                    "rendered": {
                      "text": "\n// Update handles messages.\nfunc (a anim) Update(msg tea.Msg) (tea.Model, tea.Cmd) {\n\tvar cmd tea.Cmd\n\tswitch msg.(type) {\n\tcase stepCharsMsg:\n\t\ta.updateChars(&a.cyclingChars)\n",
                      "markdown": "`\n// Update handles messages.\nfunc (a anim) Update(msg tea.Msg) (tea.Model, tea.Cmd) {\n\tvar cmd tea.Cmd\n\tswitch msg.(type) {\n\tcase stepCharsMsg:\n\t\ta.updateChars(&a.cyclingChars)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/config.go"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 48,
                  "endLine": 152,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\tIncludePrompt     int        `yaml:\"include-prompt\" env:\"INCLUDE_PROMPT\"`\n\tMaxRetries        int        `yaml:\"max-retries\" env:\"MAX_RETRIES\"`\n\tWordWrap          int        `yaml:\"word-wrap\" env:\"WORD_WRAP\"`\n\tFanciness         uint       `yaml:\"fanciness\" env:\"FANCINESS\"`\n\tStatusText        string     `yaml:\"status-text\" env:\"STATUS_TEXT\"`\n\tHTTPProxy         string     `yaml:\"http-proxy\" env:\"HTTP_PROXY\"`\n\tAPIs              APIs       `yaml:\"apis\"`\n",
                    "rendered": {
                      "text": "\tIncludePrompt     int        `yaml:\"include-prompt\" env:\"INCLUDE_PROMPT\"`\n\tMaxRetries        int        `yaml:\"max-retries\" env:\"MAX_RETRIES\"`\n\tWordWrap          int        `yaml:\"word-wrap\" env:\"WORD_WRAP\"`\n\tFanciness         uint       `yaml:\"fanciness\" env:\"FANCINESS\"`\n\tStatusText        string     `yaml:\"status-text\" env:\"STATUS_TEXT\"`\n\tHTTPProxy         string     `yaml:\"http-proxy\" env:\"HTTP_PROXY\"`\n\tAPIs              APIs       `yaml:\"apis\"`\n",
                      "markdown": "`\tIncludePrompt     int        `yaml:\"include-prompt\" env:\"INCLUDE_PROMPT\"`\n\tMaxRetries        int        `yaml:\"max-retries\" env:\"MAX_RETRIES\"`\n\tWordWrap          int        `yaml:\"word-wrap\" env:\"WORD_WRAP\"`\n\tFanciness         uint       `yaml:\"fanciness\" env:\"FANCINESS\"`\n\tStatusText        string     `yaml:\"status-text\" env:\"STATUS_TEXT\"`\n\tHTTPProxy         string     `yaml:\"http-proxy\" env:\"HTTP_PROXY\"`\n\tAPIs              APIs       `yaml:\"apis\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/config.go"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 53,
                  "endLine": 149,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\tCachePath         string     `yaml:\"cache-path\" env:\"CACHE_PATH\"`\n\tNoCache           bool       `yaml:\"no-cache\" env:\"NO_CACHE\"`\n\tIncludePromptArgs bool       `yaml:\"include-prompt-args\" env:\"INCLUDE_PROMPT_ARGS\"`\n\tIncludePrompt     int        `yaml:\"include-prompt\" env:\"INCLUDE_PROMPT\"`\n\tMaxRetries        int        `yaml:\"max-retries\" env:\"MAX_RETRIES\"`\n\tWordWrap          int        `yaml:\"word-wrap\" env:\"WORD_WRAP\"`\n\tFanciness         uint       `yaml:\"fanciness\" env:\"FANCINESS\"`\n",
                    "rendered": {
                      "text": "\tCachePath         string     `yaml:\"cache-path\" env:\"CACHE_PATH\"`\n\tNoCache           bool       `yaml:\"no-cache\" env:\"NO_CACHE\"`\n\tIncludePromptArgs bool       `yaml:\"include-prompt-args\" env:\"INCLUDE_PROMPT_ARGS\"`\n\tIncludePrompt     int        `yaml:\"include-prompt\" env:\"INCLUDE_PROMPT\"`\n\tMaxRetries        int        `yaml:\"max-retries\" env:\"MAX_RETRIES\"`\n\tWordWrap          int        `yaml:\"word-wrap\" env:\"WORD_WRAP\"`\n\tFanciness         uint       `yaml:\"fanciness\" env:\"FANCINESS\"`\n",
                      "markdown": "`\tCachePath         string     `yaml:\"cache-path\" env:\"CACHE_PATH\"`\n\tNoCache           bool       `yaml:\"no-cache\" env:\"NO_CACHE\"`\n\tIncludePromptArgs bool       `yaml:\"include-prompt-args\" env:\"INCLUDE_PROMPT_ARGS\"`\n\tIncludePrompt     int        `yaml:\"include-prompt\" env:\"INCLUDE_PROMPT\"`\n\tMaxRetries        int        `yaml:\"max-retries\" env:\"MAX_RETRIES\"`\n\tWordWrap          int        `yaml:\"word-wrap\" env:\"WORD_WRAP\"`\n\tFanciness         uint       `yaml:\"fanciness\" env:\"FANCINESS\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/config.go"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 58,
                  "endLine": 148,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\tNoLimit           bool       `yaml:\"no-limit\" env:\"NO_LIMIT\"`\n\tCachePath         string     `yaml:\"cache-path\" env:\"CACHE_PATH\"`\n\tNoCache           bool       `yaml:\"no-cache\" env:\"NO_CACHE\"`\n\tIncludePromptArgs bool       `yaml:\"include-prompt-args\" env:\"INCLUDE_PROMPT_ARGS\"`\n\tIncludePrompt     int        `yaml:\"include-prompt\" env:\"INCLUDE_PROMPT\"`\n\tMaxRetries        int        `yaml:\"max-retries\" env:\"MAX_RETRIES\"`\n\tWordWrap          int        `yaml:\"word-wrap\" env:\"WORD_WRAP\"`\n",
                    "rendered": {
                      "text": "\tNoLimit           bool       `yaml:\"no-limit\" env:\"NO_LIMIT\"`\n\tCachePath         string     `yaml:\"cache-path\" env:\"CACHE_PATH\"`\n\tNoCache           bool       `yaml:\"no-cache\" env:\"NO_CACHE\"`\n\tIncludePromptArgs bool       `yaml:\"include-prompt-args\" env:\"INCLUDE_PROMPT_ARGS\"`\n\tIncludePrompt     int        `yaml:\"include-prompt\" env:\"INCLUDE_PROMPT\"`\n\tMaxRetries        int        `yaml:\"max-retries\" env:\"MAX_RETRIES\"`\n\tWordWrap          int        `yaml:\"word-wrap\" env:\"WORD_WRAP\"`\n",
                      "markdown": "`\tNoLimit           bool       `yaml:\"no-limit\" env:\"NO_LIMIT\"`\n\tCachePath         string     `yaml:\"cache-path\" env:\"CACHE_PATH\"`\n\tNoCache           bool       `yaml:\"no-cache\" env:\"NO_CACHE\"`\n\tIncludePromptArgs bool       `yaml:\"include-prompt-args\" env:\"INCLUDE_PROMPT_ARGS\"`\n\tIncludePrompt     int        `yaml:\"include-prompt\" env:\"INCLUDE_PROMPT\"`\n\tMaxRetries        int        `yaml:\"max-retries\" env:\"MAX_RETRIES\"`\n\tWordWrap          int        `yaml:\"word-wrap\" env:\"WORD_WRAP\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/config.go"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 44,
                  "endLine": 51,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\"version\":           \"Show version and exit.\",\n\t\"max-retries\":       \"Maximum number of times to retry API calls.\",\n\t\"no-limit\":          \"Turn off the client-side limit on the size of the input into the model.\",\n\t\"word-wrap\":         \"Wrap formatted output at specific width (default is 80)\",\n\t\"max-tokens\":        \"Maximum number of tokens in response.\",\n\t\"temp\":              \"Temperature (randomness) of results, from 0.0 to 2.0.\",\n\t\"stop\":              \"Up to 4 sequences where the API will stop generating further tokens.\",\n",
                    "rendered": {
                      "text": "\t\"version\":           \"Show version and exit.\",\n\t\"max-retries\":       \"Maximum number of times to retry API calls.\",\n\t\"no-limit\":          \"Turn off the client-side limit on the size of the input into the model.\",\n\t\"word-wrap\":         \"Wrap formatted output at specific width (default is 80)\",\n\t\"max-tokens\":        \"Maximum number of tokens in response.\",\n\t\"temp\":              \"Temperature (randomness) of results, from 0.0 to 2.0.\",\n\t\"stop\":              \"Up to 4 sequences where the API will stop generating further tokens.\",\n",
                      "markdown": "`\t\"version\":           \"Show version and exit.\",\n\t\"max-retries\":       \"Maximum number of times to retry API calls.\",\n\t\"no-limit\":          \"Turn off the client-side limit on the size of the input into the model.\",\n\t\"word-wrap\":         \"Wrap formatted output at specific width (default is 80)\",\n\t\"max-tokens\":        \"Maximum number of tokens in response.\",\n\t\"temp\":              \"Temperature (randomness) of results, from 0.0 to 2.0.\",\n\t\"stop\":              \"Up to 4 sequences where the API will stop generating further tokens.\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/config.go"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 12,
                  "endLine": 221,
                  "snippet": {
                    "text": "\t\t\tfor _, a := range mv.Aliases {\n\t\t\t\t_, ok := ms[a]\n\t\t\t\tif !ok {\n\t\t\t\t\tms[a] = mv\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\t\t\tfor _, a := range mv.Aliases {\n\t\t\t\t_, ok := ms[a]\n\t\t\t\tif !ok {\n\t\t\t\t\tms[a] = mv\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n",
                      "markdown": "`\t\t\tfor _, a := range mv.Aliases {\n\t\t\t\t_, ok := ms[a]\n\t\t\t\tif !ok {\n\t\t\t\t\tms[a] = mv\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/config.go"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 12,
                  "endLine": 216,
                  "snippet": {
                    "text": "\t\t\t// only set the model key and aliases if they haven't already been used\n\t\t\t_, ok := ms[mk]\n\t\t\tif !ok {\n\t\t\t\tms[mk] = mv\n\t\t\t}\n\t\t\tfor _, a := range mv.Aliases {\n\t\t\t\t_, ok := ms[a]\n\t\t\t\tif !ok {\n",
                    "rendered": {
                      "text": "\t\t\t// only set the model key and aliases if they haven't already been used\n\t\t\t_, ok := ms[mk]\n\t\t\tif !ok {\n\t\t\t\tms[mk] = mv\n\t\t\t}\n\t\t\tfor _, a := range mv.Aliases {\n\t\t\t\t_, ok := ms[a]\n\t\t\t\tif !ok {\n",
                      "markdown": "`\t\t\t// only set the model key and aliases if they haven't already been used\n\t\t\t_, ok := ms[mk]\n\t\t\tif !ok {\n\t\t\t\tms[mk] = mv\n\t\t\t}\n\t\t\tfor _, a := range mv.Aliases {\n\t\t\t\t_, ok := ms[a]\n\t\t\t\tif !ok {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/config.go"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 9,
                  "endLine": 209,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t}\n\tms := make(map[string]Model)\n\tfor _, api := range c.APIs {\n\t\tfor mk, mv := range api.Models {\n\t\t\tmv.Name = mk\n\t\t\tmv.API = api.Name\n\t\t\t// only set the model key and aliases if they haven't already been used\n",
                    "rendered": {
                      "text": "\t}\n\tms := make(map[string]Model)\n\tfor _, api := range c.APIs {\n\t\tfor mk, mv := range api.Models {\n\t\t\tmv.Name = mk\n\t\t\tmv.API = api.Name\n\t\t\t// only set the model key and aliases if they haven't already been used\n",
                      "markdown": "`\t}\n\tms := make(map[string]Model)\n\tfor _, api := range c.APIs {\n\t\tfor mk, mv := range api.Models {\n\t\t\tmv.Name = mk\n\t\t\tmv.API = api.Name\n\t\t\t// only set the model key and aliases if they haven't already been used\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/config.go"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 37,
                  "endLine": 188,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\tvar c Config\n\tsp, err := xdg.ConfigFile(filepath.Join(\"mods\", \"mods.yml\"))\n\tif err != nil {\n\t\treturn c, modsError{err, \"Could not find settings path.\"}\n\t}\n\tc.SettingsPath = sp\n\n",
                    "rendered": {
                      "text": "\tvar c Config\n\tsp, err := xdg.ConfigFile(filepath.Join(\"mods\", \"mods.yml\"))\n\tif err != nil {\n\t\treturn c, modsError{err, \"Could not find settings path.\"}\n\t}\n\tc.SettingsPath = sp\n\n",
                      "markdown": "`\tvar c Config\n\tsp, err := xdg.ConfigFile(filepath.Join(\"mods\", \"mods.yml\"))\n\tif err != nil {\n\t\treturn c, modsError{err, \"Could not find settings path.\"}\n\t}\n\tc.SettingsPath = sp\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/config.go"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 49,
                  "endLine": 56,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\"temp\":              \"Temperature (randomness) of results, from 0.0 to 2.0.\",\n\t\"stop\":              \"Up to 4 sequences where the API will stop generating further tokens.\",\n\t\"topp\":              \"TopP, an alternative to temperature that narrows response, from 0.0 to 1.0.\",\n\t\"topk\":              \"TopK, only sample from the top K options for each subsequent token.\",\n\t\"fanciness\":         \"Your desired level of fanciness.\",\n\t\"status-text\":       \"Text to show while generating.\",\n\t\"settings\":          \"Open settings in your $EDITOR.\",\n",
                    "rendered": {
                      "text": "\t\"temp\":              \"Temperature (randomness) of results, from 0.0 to 2.0.\",\n\t\"stop\":              \"Up to 4 sequences where the API will stop generating further tokens.\",\n\t\"topp\":              \"TopP, an alternative to temperature that narrows response, from 0.0 to 1.0.\",\n\t\"topk\":              \"TopK, only sample from the top K options for each subsequent token.\",\n\t\"fanciness\":         \"Your desired level of fanciness.\",\n\t\"status-text\":       \"Text to show while generating.\",\n\t\"settings\":          \"Open settings in your $EDITOR.\",\n",
                      "markdown": "`\t\"temp\":              \"Temperature (randomness) of results, from 0.0 to 2.0.\",\n\t\"stop\":              \"Up to 4 sequences where the API will stop generating further tokens.\",\n\t\"topp\":              \"TopP, an alternative to temperature that narrows response, from 0.0 to 1.0.\",\n\t\"topk\":              \"TopK, only sample from the top K options for each subsequent token.\",\n\t\"fanciness\":         \"Your desired level of fanciness.\",\n\t\"status-text\":       \"Text to show while generating.\",\n\t\"settings\":          \"Open settings in your $EDITOR.\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mods.zip/load.go"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 19,
                  "endLine": 12,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\nfunc loadMsg(msg string) (string, error) {\n\tif strings.HasPrefix(msg, \"https://\") || strings.HasPrefix(msg, \"http://\") {\n\t\tresp, err := http.Get(msg) //nolint:gosec,noctx\n\t\tif err != nil {\n\t\t\treturn \"\", err //nolint:wrapcheck\n\t\t}\n",
                    "rendered": {
                      "text": "\nfunc loadMsg(msg string) (string, error) {\n\tif strings.HasPrefix(msg, \"https://\") || strings.HasPrefix(msg, \"http://\") {\n\t\tresp, err := http.Get(msg) //nolint:gosec,noctx\n\t\tif err != nil {\n\t\t\treturn \"\", err //nolint:wrapcheck\n\t\t}\n",
                      "markdown": "`\nfunc loadMsg(msg string) (string, error) {\n\tif strings.HasPrefix(msg, \"https://\") || strings.HasPrefix(msg, \"http://\") {\n\t\tresp, err := http.Get(msg) //nolint:gosec,noctx\n\t\tif err != nil {\n\t\t\treturn \"\", err //nolint:wrapcheck\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}