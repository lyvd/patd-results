{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 24,
                  "endLine": 226,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  end\n\n  def stub_failed_auth\n    stub_request(:post, AUTH_TOKEN_ENDPOINT)\n      .to_return(status: 401,\n                 body: '{\"error\":\"invalid_client\",\"error_description\":\"The client secret supplied for a confidential client is invalid.\"}')\n  end\n",
                    "rendered": {
                      "text": "  end\n\n  def stub_failed_auth\n    stub_request(:post, AUTH_TOKEN_ENDPOINT)\n      .to_return(status: 401,\n                 body: '{\"error\":\"invalid_client\",\"error_description\":\"The client secret supplied for a confidential client is invalid.\"}')\n  end\n",
                      "markdown": "`  end\n\n  def stub_failed_auth\n    stub_request(:post, AUTH_TOKEN_ENDPOINT)\n      .to_return(status: 401,\n                 body: '{\"error\":\"invalid_client\",\"error_description\":\"The client secret supplied for a confidential client is invalid.\"}')\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 24,
                  "endLine": 221,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  end\n\n  def stub_successful_auth\n    stub_request(:post, AUTH_TOKEN_ENDPOINT)\n      .to_return(body: '{\"access_token\":\"bearer token\",\"token_type\":\"Bearer\",\"expires_in\":432000,\"scope\":\"client_credentials\"}')\n  end\n\n",
                    "rendered": {
                      "text": "  end\n\n  def stub_successful_auth\n    stub_request(:post, AUTH_TOKEN_ENDPOINT)\n      .to_return(body: '{\"access_token\":\"bearer token\",\"token_type\":\"Bearer\",\"expires_in\":432000,\"scope\":\"client_credentials\"}')\n  end\n\n",
                      "markdown": "`  end\n\n  def stub_successful_auth\n    stub_request(:post, AUTH_TOKEN_ENDPOINT)\n      .to_return(body: '{\"access_token\":\"bearer token\",\"token_type\":\"Bearer\",\"expires_in\":432000,\"scope\":\"client_credentials\"}')\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 66,
                  "endLine": 201,
                  "endColumn": 76,
                  "snippet": {
                    "text": "    ]\n\n    @driver = create_api_output_driver('service_client_identifier service_client_id',\n                                       'service_client_secret_key secret_key',\n                                       'ingest_api_tenant tenant_name',\n                                       conf)\n\n",
                    "rendered": {
                      "text": "    ]\n\n    @driver = create_api_output_driver('service_client_identifier service_client_id',\n                                       'service_client_secret_key secret_key',\n                                       'ingest_api_tenant tenant_name',\n                                       conf)\n\n",
                      "markdown": "`    ]\n\n    @driver = create_api_output_driver('service_client_identifier service_client_id',\n                                       'service_client_secret_key secret_key',\n                                       'ingest_api_tenant tenant_name',\n                                       conf)\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 55,
                  "endLine": 201,
                  "endColumn": 65,
                  "snippet": {
                    "text": "    ]\n\n    @driver = create_api_output_driver('service_client_identifier service_client_id',\n                                       'service_client_secret_key secret_key',\n                                       'ingest_api_tenant tenant_name',\n                                       conf)\n\n",
                    "rendered": {
                      "text": "    ]\n\n    @driver = create_api_output_driver('service_client_identifier service_client_id',\n                                       'service_client_secret_key secret_key',\n                                       'ingest_api_tenant tenant_name',\n                                       conf)\n\n",
                      "markdown": "`    ]\n\n    @driver = create_api_output_driver('service_client_identifier service_client_id',\n                                       'service_client_secret_key secret_key',\n                                       'ingest_api_tenant tenant_name',\n                                       conf)\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 65,
                  "endLine": 75,
                  "endColumn": 75,
                  "snippet": {
                    "text": "  it 'should not fail to start when provided bad auth' do\n    stub_failed_auth\n    driver = create_api_output_driver('service_client_identifier service_client_id',\n                                      'service_client_secret_key secret_key',\n                                      'ingest_api_tenant tenant_name')\n    driver.run\n  end\n",
                    "rendered": {
                      "text": "  it 'should not fail to start when provided bad auth' do\n    stub_failed_auth\n    driver = create_api_output_driver('service_client_identifier service_client_id',\n                                      'service_client_secret_key secret_key',\n                                      'ingest_api_tenant tenant_name')\n    driver.run\n  end\n",
                      "markdown": "`  it 'should not fail to start when provided bad auth' do\n    stub_failed_auth\n    driver = create_api_output_driver('service_client_identifier service_client_id',\n                                      'service_client_secret_key secret_key',\n                                      'ingest_api_tenant tenant_name')\n    driver.run\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 54,
                  "endLine": 75,
                  "endColumn": 64,
                  "snippet": {
                    "text": "  it 'should not fail to start when provided bad auth' do\n    stub_failed_auth\n    driver = create_api_output_driver('service_client_identifier service_client_id',\n                                      'service_client_secret_key secret_key',\n                                      'ingest_api_tenant tenant_name')\n    driver.run\n  end\n",
                    "rendered": {
                      "text": "  it 'should not fail to start when provided bad auth' do\n    stub_failed_auth\n    driver = create_api_output_driver('service_client_identifier service_client_id',\n                                      'service_client_secret_key secret_key',\n                                      'ingest_api_tenant tenant_name')\n    driver.run\n  end\n",
                      "markdown": "`  it 'should not fail to start when provided bad auth' do\n    stub_failed_auth\n    driver = create_api_output_driver('service_client_identifier service_client_id',\n                                      'service_client_secret_key secret_key',\n                                      'ingest_api_tenant tenant_name')\n    driver.run\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 62,
                  "endLine": 55,
                  "endColumn": 72,
                  "snippet": {
                    "text": "      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n",
                    "rendered": {
                      "text": "      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n",
                      "markdown": "`      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 51,
                  "endLine": 55,
                  "endColumn": 61,
                  "snippet": {
                    "text": "      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n",
                    "rendered": {
                      "text": "      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n",
                      "markdown": "`      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 62,
                  "endLine": 46,
                  "endColumn": 72,
                  "snippet": {
                    "text": "        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n",
                    "rendered": {
                      "text": "        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n",
                      "markdown": "`        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 51,
                  "endLine": 46,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n",
                    "rendered": {
                      "text": "        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n",
                      "markdown": "`        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 62,
                  "endLine": 36,
                  "endColumn": 72,
                  "snippet": {
                    "text": "        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n",
                    "rendered": {
                      "text": "        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n",
                      "markdown": "`        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 51,
                  "endLine": 36,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n",
                    "rendered": {
                      "text": "        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n",
                      "markdown": "`        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n        end.must_raise Fluent::ConfigError\n      }\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 63,
                  "endLine": 27,
                  "endColumn": 73,
                  "snippet": {
                    "text": "                                            'service_client_secret_key secret_key',\n                                            'ingest_api_tenant tenant_name').instance\n        expect(instance.service_client_identifier).must_equal 'service_client_id'\n        expect(instance.service_client_secret_key).must_equal 'secret_key'\n        expect(instance.ingest_api_tenant).must_equal 'tenant_name'\n      }\n    end\n",
                    "rendered": {
                      "text": "                                            'service_client_secret_key secret_key',\n                                            'ingest_api_tenant tenant_name').instance\n        expect(instance.service_client_identifier).must_equal 'service_client_id'\n        expect(instance.service_client_secret_key).must_equal 'secret_key'\n        expect(instance.ingest_api_tenant).must_equal 'tenant_name'\n      }\n    end\n",
                      "markdown": "`                                            'service_client_secret_key secret_key',\n                                            'ingest_api_tenant tenant_name').instance\n        expect(instance.service_client_identifier).must_equal 'service_client_id'\n        expect(instance.service_client_secret_key).must_equal 'secret_key'\n        expect(instance.ingest_api_tenant).must_equal 'tenant_name'\n      }\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 39,
                  "endLine": 27,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                                            'service_client_secret_key secret_key',\n                                            'ingest_api_tenant tenant_name').instance\n        expect(instance.service_client_identifier).must_equal 'service_client_id'\n        expect(instance.service_client_secret_key).must_equal 'secret_key'\n        expect(instance.ingest_api_tenant).must_equal 'tenant_name'\n      }\n    end\n",
                    "rendered": {
                      "text": "                                            'service_client_secret_key secret_key',\n                                            'ingest_api_tenant tenant_name').instance\n        expect(instance.service_client_identifier).must_equal 'service_client_id'\n        expect(instance.service_client_secret_key).must_equal 'secret_key'\n        expect(instance.ingest_api_tenant).must_equal 'tenant_name'\n      }\n    end\n",
                      "markdown": "`                                            'service_client_secret_key secret_key',\n                                            'ingest_api_tenant tenant_name').instance\n        expect(instance.service_client_identifier).must_equal 'service_client_id'\n        expect(instance.service_client_secret_key).must_equal 'secret_key'\n        expect(instance.ingest_api_tenant).must_equal 'tenant_name'\n      }\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 71,
                  "endLine": 24,
                  "endColumn": 81,
                  "snippet": {
                    "text": "    describe 'good_config' do\n      it {\n        instance = create_api_output_driver('service_client_identifier service_client_id',\n                                            'service_client_secret_key secret_key',\n                                            'ingest_api_tenant tenant_name').instance\n        expect(instance.service_client_identifier).must_equal 'service_client_id'\n        expect(instance.service_client_secret_key).must_equal 'secret_key'\n",
                    "rendered": {
                      "text": "    describe 'good_config' do\n      it {\n        instance = create_api_output_driver('service_client_identifier service_client_id',\n                                            'service_client_secret_key secret_key',\n                                            'ingest_api_tenant tenant_name').instance\n        expect(instance.service_client_identifier).must_equal 'service_client_id'\n        expect(instance.service_client_secret_key).must_equal 'secret_key'\n",
                      "markdown": "`    describe 'good_config' do\n      it {\n        instance = create_api_output_driver('service_client_identifier service_client_id',\n                                            'service_client_secret_key secret_key',\n                                            'ingest_api_tenant tenant_name').instance\n        expect(instance.service_client_identifier).must_equal 'service_client_id'\n        expect(instance.service_client_secret_key).must_equal 'secret_key'\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 60,
                  "endLine": 24,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    describe 'good_config' do\n      it {\n        instance = create_api_output_driver('service_client_identifier service_client_id',\n                                            'service_client_secret_key secret_key',\n                                            'ingest_api_tenant tenant_name').instance\n        expect(instance.service_client_identifier).must_equal 'service_client_id'\n        expect(instance.service_client_secret_key).must_equal 'secret_key'\n",
                    "rendered": {
                      "text": "    describe 'good_config' do\n      it {\n        instance = create_api_output_driver('service_client_identifier service_client_id',\n                                            'service_client_secret_key secret_key',\n                                            'ingest_api_tenant tenant_name').instance\n        expect(instance.service_client_identifier).must_equal 'service_client_id'\n        expect(instance.service_client_secret_key).must_equal 'secret_key'\n",
                      "markdown": "`    describe 'good_config' do\n      it {\n        instance = create_api_output_driver('service_client_identifier service_client_id',\n                                            'service_client_secret_key secret_key',\n                                            'ingest_api_tenant tenant_name').instance\n        expect(instance.service_client_identifier).must_equal 'service_client_id'\n        expect(instance.service_client_secret_key).must_equal 'secret_key'\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  include PluginTestHelper\n\n  INGEST_API_ENDPOINT = 'https://api.scp.splunk.com/tenant_name/ingest/v1beta2/events'\n  AUTH_TOKEN_ENDPOINT = 'https://auth.scp.splunk.com/token'\n\n  before { Fluent::Test.setup } # setup router and others\n\n",
                    "rendered": {
                      "text": "  include PluginTestHelper\n\n  INGEST_API_ENDPOINT = 'https://api.scp.splunk.com/tenant_name/ingest/v1beta2/events'\n  AUTH_TOKEN_ENDPOINT = 'https://auth.scp.splunk.com/token'\n\n  before { Fluent::Test.setup } # setup router and others\n\n",
                      "markdown": "`  include PluginTestHelper\n\n  INGEST_API_ENDPOINT = 'https://api.scp.splunk.com/tenant_name/ingest/v1beta2/events'\n  AUTH_TOKEN_ENDPOINT = 'https://auth.scp.splunk.com/token'\n\n  before { Fluent::Test.setup } # setup router and others\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 5,
                  "endLine": 134,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        verify_sent_events status: 429\n      end.must_raise RuntimeError\n\n      expect do\n        verify_sent_events status: 401\n      end.must_raise RuntimeError\n    ensure\n",
                    "rendered": {
                      "text": "        verify_sent_events status: 429\n      end.must_raise RuntimeError\n\n      expect do\n        verify_sent_events status: 401\n      end.must_raise RuntimeError\n    ensure\n",
                      "markdown": "`        verify_sent_events status: 429\n      end.must_raise RuntimeError\n\n      expect do\n        verify_sent_events status: 401\n      end.must_raise RuntimeError\n    ensure\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 5,
                  "endLine": 130,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    report_on_exception = Thread.report_on_exception\n    Thread.report_on_exception = false\n    begin\n      expect do\n        verify_sent_events status: 429\n      end.must_raise RuntimeError\n\n",
                    "rendered": {
                      "text": "    report_on_exception = Thread.report_on_exception\n    Thread.report_on_exception = false\n    begin\n      expect do\n        verify_sent_events status: 429\n      end.must_raise RuntimeError\n\n",
                      "markdown": "`    report_on_exception = Thread.report_on_exception\n    Thread.report_on_exception = false\n    begin\n      expect do\n        verify_sent_events status: 429\n      end.must_raise RuntimeError\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 7,
                  "endLine": 63,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n    describe 'missing secret key' do\n      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'ingest_api_tenant tenant_name')\n",
                    "rendered": {
                      "text": "\n    describe 'missing secret key' do\n      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'ingest_api_tenant tenant_name')\n",
                      "markdown": "`\n    describe 'missing secret key' do\n      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'ingest_api_tenant tenant_name')\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 7,
                  "endLine": 53,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    end\n    describe 'missing client identifier' do\n      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n",
                    "rendered": {
                      "text": "    end\n    describe 'missing client identifier' do\n      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n",
                      "markdown": "`    end\n    describe 'missing client identifier' do\n      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_secret_key secret_key',\n                                   'ingest_api_tenant tenant_name')\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 7,
                  "endLine": 43,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    end\n    describe 'missing tenant name' do\n      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n",
                    "rendered": {
                      "text": "    end\n    describe 'missing tenant name' do\n      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n",
                      "markdown": "`    end\n    describe 'missing tenant name' do\n      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 33,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    end\n    describe 'invalid host' do\n      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n",
                    "rendered": {
                      "text": "    end\n    describe 'invalid host' do\n      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n",
                      "markdown": "`    end\n    describe 'invalid host' do\n      it {\n        expect do\n          create_api_output_driver('ingest_api_host %bad-host%',\n                                   'service_client_identifier service_client_id',\n                                   'service_client_secret_key secret_key',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_ingest_api_test.rb"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 5,
                  "endLine": 18,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n  describe 'Required configs validation' do\n    it 'should have required fields' do\n      expect { create_api_output_driver }.must_raise Fluent::ConfigError\n    end\n\n    describe 'good_config' do\n",
                    "rendered": {
                      "text": "\n  describe 'Required configs validation' do\n    it 'should have required fields' do\n      expect { create_api_output_driver }.must_raise Fluent::ConfigError\n    end\n\n    describe 'good_config' do\n",
                      "markdown": "`\n  describe 'Required configs validation' do\n    it 'should have required fields' do\n      expect { create_api_output_driver }.must_raise Fluent::ConfigError\n    end\n\n    describe 'good_config' do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_hec_test.rb"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 32,
                  "endLine": 130,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    assert_nil(test_driver.instance.time_key)\n  end\n\n  it \"should use host machine's hostname for event host by default\" do\n    verify_sent_events do |batch|\n      batch.each do |item|\n        expect(item['host']).must_equal Socket.gethostname\n",
                    "rendered": {
                      "text": "    assert_nil(test_driver.instance.time_key)\n  end\n\n  it \"should use host machine's hostname for event host by default\" do\n    verify_sent_events do |batch|\n      batch.each do |item|\n        expect(item['host']).must_equal Socket.gethostname\n",
                      "markdown": "`    assert_nil(test_driver.instance.time_key)\n  end\n\n  it \"should use host machine's hostname for event host by default\" do\n    verify_sent_events do |batch|\n      batch.each do |item|\n        expect(item['host']).must_equal Socket.gethostname\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_hec_test.rb"
                },
                "region": {
                  "startLine": 365,
                  "startColumn": 61,
                  "endLine": 365,
                  "endColumn": 70,
                  "snippet": {
                    "text": "      expect(create_hec_output_driver('hec_host splunk.com', 'open_timeout 5').instance.open_timeout).must_equal 5\n    end\n\n    it 'should check default values are created correctly for timeout params' do\n      test_driver = create_hec_output_driver('hec_host splunk.com')\n      expect(test_driver.instance.idle_timeout).must_equal 5\n      assert_nil(test_driver.instance.read_timeout)\n",
                    "rendered": {
                      "text": "      expect(create_hec_output_driver('hec_host splunk.com', 'open_timeout 5').instance.open_timeout).must_equal 5\n    end\n\n    it 'should check default values are created correctly for timeout params' do\n      test_driver = create_hec_output_driver('hec_host splunk.com')\n      expect(test_driver.instance.idle_timeout).must_equal 5\n      assert_nil(test_driver.instance.read_timeout)\n",
                      "markdown": "`      expect(create_hec_output_driver('hec_host splunk.com', 'open_timeout 5').instance.open_timeout).must_equal 5\n    end\n\n    it 'should check default values are created correctly for timeout params' do\n      test_driver = create_hec_output_driver('hec_host splunk.com')\n      expect(test_driver.instance.idle_timeout).must_equal 5\n      assert_nil(test_driver.instance.read_timeout)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_hec_test.rb"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 5,
                  "endLine": 279,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        create_hec_output_driver('hec_host somehost', 'data_type metric', 'metrics_from_event false')\n      end.must_raise Fluent::ConfigError\n\n      expect do\n        create_hec_output_driver('hec_host somehost', 'data_type metric', 'metric_name_key x')\n      end.must_raise Fluent::ConfigError\n\n",
                    "rendered": {
                      "text": "        create_hec_output_driver('hec_host somehost', 'data_type metric', 'metrics_from_event false')\n      end.must_raise Fluent::ConfigError\n\n      expect do\n        create_hec_output_driver('hec_host somehost', 'data_type metric', 'metric_name_key x')\n      end.must_raise Fluent::ConfigError\n\n",
                      "markdown": "`        create_hec_output_driver('hec_host somehost', 'data_type metric', 'metrics_from_event false')\n      end.must_raise Fluent::ConfigError\n\n      expect do\n        create_hec_output_driver('hec_host somehost', 'data_type metric', 'metric_name_key x')\n      end.must_raise Fluent::ConfigError\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_hec_test.rb"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 5,
                  "endLine": 275,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        create_hec_output_driver('hec_host somehost', 'data_type metric')\n      ).wont_be_nil\n\n      expect do\n        create_hec_output_driver('hec_host somehost', 'data_type metric', 'metrics_from_event false')\n      end.must_raise Fluent::ConfigError\n\n",
                    "rendered": {
                      "text": "        create_hec_output_driver('hec_host somehost', 'data_type metric')\n      ).wont_be_nil\n\n      expect do\n        create_hec_output_driver('hec_host somehost', 'data_type metric', 'metrics_from_event false')\n      end.must_raise Fluent::ConfigError\n\n",
                      "markdown": "`        create_hec_output_driver('hec_host somehost', 'data_type metric')\n      ).wont_be_nil\n\n      expect do\n        create_hec_output_driver('hec_host somehost', 'data_type metric', 'metrics_from_event false')\n      end.must_raise Fluent::ConfigError\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_hec_test.rb"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 33,
                  "endLine": 125,
                  "endColumn": 39,
                  "snippet": {
                    "text": "  #   expect(create_hec_output_driver('hec_host splunk.com').instance.time_key).must_equal nil\n  # end\n  #\n  it 'should contain splunk event time field via fluentd, as nil' do\n    test_driver = create_hec_output_driver('hec_host splunk.com')\n    assert_nil(test_driver.instance.time_key)\n  end\n",
                    "rendered": {
                      "text": "  #   expect(create_hec_output_driver('hec_host splunk.com').instance.time_key).must_equal nil\n  # end\n  #\n  it 'should contain splunk event time field via fluentd, as nil' do\n    test_driver = create_hec_output_driver('hec_host splunk.com')\n    assert_nil(test_driver.instance.time_key)\n  end\n",
                      "markdown": "`  #   expect(create_hec_output_driver('hec_host splunk.com').instance.time_key).must_equal nil\n  # end\n  #\n  it 'should contain splunk event time field via fluentd, as nil' do\n    test_driver = create_hec_output_driver('hec_host splunk.com')\n    assert_nil(test_driver.instance.time_key)\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_hec_test.rb"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 35,
                  "endLine": 121,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    end\n  end\n\n  # it \"should contain splunk event time field via fluentd, as nil\" do\n  #   expect(create_hec_output_driver('hec_host splunk.com').instance.time_key).must_equal nil\n  # end\n  #\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  # it \"should contain splunk event time field via fluentd, as nil\" do\n  #   expect(create_hec_output_driver('hec_host splunk.com').instance.time_key).must_equal nil\n  # end\n  #\n",
                      "markdown": "`    end\n  end\n\n  # it \"should contain splunk event time field via fluentd, as nil\" do\n  #   expect(create_hec_output_driver('hec_host splunk.com').instance.time_key).must_equal nil\n  # end\n  #\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_hec_test.rb"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 10,
                  "endLine": 96,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n  describe 'full_url validation' do\n    describe 'invalid full_url' do\n      it { expect { create_hec_output_driver(full_url: '%bad-host%.com') }.must_raise Fluent::ConfigError }\n    end\n    describe 'good full_url' do\n      it { \n",
                    "rendered": {
                      "text": "\n  describe 'full_url validation' do\n    describe 'invalid full_url' do\n      it { expect { create_hec_output_driver(full_url: '%bad-host%.com') }.must_raise Fluent::ConfigError }\n    end\n    describe 'good full_url' do\n      it { \n",
                      "markdown": "`\n  describe 'full_url validation' do\n    describe 'invalid full_url' do\n      it { expect { create_hec_output_driver(full_url: '%bad-host%.com') }.must_raise Fluent::ConfigError }\n    end\n    describe 'good full_url' do\n      it { \n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_hec_test.rb"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 10,
                  "endLine": 84,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        expect { create_hec_output_driver }.must_raise Fluent::ConfigError\n      end\n\n      it { expect { create_hec_output_driver('hec_host %bad-host%') }.must_raise Fluent::ConfigError }\n    end\n\n    describe 'good host' do\n",
                    "rendered": {
                      "text": "        expect { create_hec_output_driver }.must_raise Fluent::ConfigError\n      end\n\n      it { expect { create_hec_output_driver('hec_host %bad-host%') }.must_raise Fluent::ConfigError }\n    end\n\n    describe 'good host' do\n",
                      "markdown": "`        expect { create_hec_output_driver }.must_raise Fluent::ConfigError\n      end\n\n      it { expect { create_hec_output_driver('hec_host %bad-host%') }.must_raise Fluent::ConfigError }\n    end\n\n    describe 'good host' do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/test/fluent/plugin/out_splunk_hec_test.rb"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 7,
                  "endLine": 81,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  describe 'hec_host validation' do\n    describe 'invalid host' do\n      it 'should require hec_host or full_url' do\n        expect { create_hec_output_driver }.must_raise Fluent::ConfigError\n      end\n\n      it { expect { create_hec_output_driver('hec_host %bad-host%') }.must_raise Fluent::ConfigError }\n",
                    "rendered": {
                      "text": "  describe 'hec_host validation' do\n    describe 'invalid host' do\n      it 'should require hec_host or full_url' do\n        expect { create_hec_output_driver }.must_raise Fluent::ConfigError\n      end\n\n      it { expect { create_hec_output_driver('hec_host %bad-host%') }.must_raise Fluent::ConfigError }\n",
                      "markdown": "`  describe 'hec_host validation' do\n    describe 'invalid host' do\n      it 'should require hec_host or full_url' do\n        expect { create_hec_output_driver }.must_raise Fluent::ConfigError\n      end\n\n      it { expect { create_hec_output_driver('hec_host %bad-host%') }.must_raise Fluent::ConfigError }\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/build.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 6,
                  "endLine": 7,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n# Install dependecies\ngem install bundler\nbundle update --bundler\nbundle install\n\n# Build Gem\n",
                    "rendered": {
                      "text": "\n# Install dependecies\ngem install bundler\nbundle update --bundler\nbundle install\n\n# Build Gem\n",
                      "markdown": "`\n# Install dependecies\ngem install bundler\nbundle update --bundler\nbundle install\n\n# Build Gem\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/build.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\nTAG=$1\n\n# Install dependecies\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\nTAG=$1\n\n# Install dependecies\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\nTAG=$1\n\n# Install dependecies\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/build.sh"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 31,
                  "endLine": 19,
                  "endColumn": 7,
                  "snippet": {
                    "text": "VERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\nmkdir -p docker/licenses\ncp -rp LICENSE docker/licenses/\ndocker build --no-cache --pull --build-arg VERSION=$VERSION -t splunk/fluentd-hec:$TAG ./docker\n",
                    "rendered": {
                      "text": "VERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\nmkdir -p docker/licenses\ncp -rp LICENSE docker/licenses/\ndocker build --no-cache --pull --build-arg VERSION=$VERSION -t splunk/fluentd-hec:$TAG ./docker\n",
                      "markdown": "`VERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\nmkdir -p docker/licenses\ncp -rp LICENSE docker/licenses/\ndocker build --no-cache --pull --build-arg VERSION=$VERSION -t splunk/fluentd-hec:$TAG ./docker\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/build.sh"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 24,
                  "endLine": 18,
                  "endColumn": 3,
                  "snippet": {
                    "text": "# Build Docker Image\nVERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\nmkdir -p docker/licenses\ncp -rp LICENSE docker/licenses/\ndocker build --no-cache --pull --build-arg VERSION=$VERSION -t splunk/fluentd-hec:$TAG ./docker\n",
                    "rendered": {
                      "text": "# Build Docker Image\nVERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\nmkdir -p docker/licenses\ncp -rp LICENSE docker/licenses/\ndocker build --no-cache --pull --build-arg VERSION=$VERSION -t splunk/fluentd-hec:$TAG ./docker\n",
                      "markdown": "`# Build Docker Image\nVERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\nmkdir -p docker/licenses\ncp -rp LICENSE docker/licenses/\ndocker build --no-cache --pull --build-arg VERSION=$VERSION -t splunk/fluentd-hec:$TAG ./docker\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/build.sh"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 44,
                  "endLine": 16,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n# Build Docker Image\nVERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\nmkdir -p docker/licenses\ncp -rp LICENSE docker/licenses/\ndocker build --no-cache --pull --build-arg VERSION=$VERSION -t splunk/fluentd-hec:$TAG ./docker\n",
                    "rendered": {
                      "text": "\n# Build Docker Image\nVERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\nmkdir -p docker/licenses\ncp -rp LICENSE docker/licenses/\ndocker build --no-cache --pull --build-arg VERSION=$VERSION -t splunk/fluentd-hec:$TAG ./docker\n",
                      "markdown": "`\n# Build Docker Image\nVERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\nmkdir -p docker/licenses\ncp -rp LICENSE docker/licenses/\ndocker build --no-cache --pull --build-arg VERSION=$VERSION -t splunk/fluentd-hec:$TAG ./docker\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/build.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 14,
                  "endColumn": 15,
                  "snippet": {
                    "text": "bundle exec rake build -t -v\ncp pkg/fluent-plugin-*.gem docker\n\n# Build Docker Image\nVERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\nmkdir -p docker/licenses\n",
                    "rendered": {
                      "text": "bundle exec rake build -t -v\ncp pkg/fluent-plugin-*.gem docker\n\n# Build Docker Image\nVERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\nmkdir -p docker/licenses\n",
                      "markdown": "`bundle exec rake build -t -v\ncp pkg/fluent-plugin-*.gem docker\n\n# Build Docker Image\nVERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\nmkdir -p docker/licenses\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/build.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 26,
                  "endLine": 13,
                  "snippet": {
                    "text": "\n# Build Gem\nbundle exec rake build -t -v\ncp pkg/fluent-plugin-*.gem docker\n\n# Build Docker Image\nVERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\n",
                    "rendered": {
                      "text": "\n# Build Gem\nbundle exec rake build -t -v\ncp pkg/fluent-plugin-*.gem docker\n\n# Build Docker Image\nVERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\n",
                      "markdown": "`\n# Build Gem\nbundle exec rake build -t -v\ncp pkg/fluent-plugin-*.gem docker\n\n# Build Docker Image\nVERSION=`cat VERSION`\necho \"Copying licenses to be included in the docker image...\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/build.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 28,
                  "endLine": 12,
                  "endColumn": 3,
                  "snippet": {
                    "text": "bundle install\n\n# Build Gem\nbundle exec rake build -t -v\ncp pkg/fluent-plugin-*.gem docker\n\n# Build Docker Image\nVERSION=`cat VERSION`\n",
                    "rendered": {
                      "text": "bundle install\n\n# Build Gem\nbundle exec rake build -t -v\ncp pkg/fluent-plugin-*.gem docker\n\n# Build Docker Image\nVERSION=`cat VERSION`\n",
                      "markdown": "`bundle install\n\n# Build Gem\nbundle exec rake build -t -v\ncp pkg/fluent-plugin-*.gem docker\n\n# Build Docker Image\nVERSION=`cat VERSION`\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/build.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\nTAG=$1\n\n# Install dependecies\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\nTAG=$1\n\n# Install dependecies\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\nTAG=$1\n\n# Install dependecies\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/lib/fluent/plugin/out_splunk_ingest_api.rb"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 22,
                  "endLine": 112,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      # ingest API is an array of json objects\n      body = \"[#{chunk.read.chomp(',')}]\"\n      @conn ||= new_connection\n      response = @conn.post(\"https://#{@ingest_api_host}/#{@ingest_api_tenant}#{@ingest_api_events_endpoint}\", body: body)\n      process_response(response, body)\n    end\n  end\n",
                    "rendered": {
                      "text": "      # ingest API is an array of json objects\n      body = \"[#{chunk.read.chomp(',')}]\"\n      @conn ||= new_connection\n      response = @conn.post(\"https://#{@ingest_api_host}/#{@ingest_api_tenant}#{@ingest_api_events_endpoint}\", body: body)\n      process_response(response, body)\n    end\n  end\n",
                      "markdown": "`      # ingest API is an array of json objects\n      body = \"[#{chunk.read.chomp(',')}]\"\n      @conn ||= new_connection\n      response = @conn.post(\"https://#{@ingest_api_host}/#{@ingest_api_tenant}#{@ingest_api_events_endpoint}\", body: body)\n      process_response(response, body)\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/lib/fluent/plugin/out_splunk_ingest_api.rb"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 32,
                  "endLine": 98,
                  "endColumn": 42,
                  "snippet": {
                    "text": "      client = OpenIDConnect::Client.new(\n        token_endpoint: @token_endpoint,\n        identifier: @service_client_identifier,\n        secret: @service_client_secret_key,\n        redirect_uri: 'http://localhost:8080/', # Not used\n        host: @ingest_auth_host,\n        scheme: 'https'\n",
                    "rendered": {
                      "text": "      client = OpenIDConnect::Client.new(\n        token_endpoint: @token_endpoint,\n        identifier: @service_client_identifier,\n        secret: @service_client_secret_key,\n        redirect_uri: 'http://localhost:8080/', # Not used\n        host: @ingest_auth_host,\n        scheme: 'https'\n",
                      "markdown": "`      client = OpenIDConnect::Client.new(\n        token_endpoint: @token_endpoint,\n        identifier: @service_client_identifier,\n        secret: @service_client_secret_key,\n        redirect_uri: 'http://localhost:8080/', # Not used\n        host: @ingest_auth_host,\n        scheme: 'https'\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/lib/fluent/plugin/out_splunk_ingest_api.rb"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 33,
                  "endLine": 16,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    config_param :service_client_identifier, :string, default: nil\n\n    desc 'Service Client Secret Key'\n    config_param :service_client_secret_key, :string, default: nil\n\n    desc 'Token Endpoint'\n    config_param :token_endpoint, :string, default: '/token'\n",
                    "rendered": {
                      "text": "    config_param :service_client_identifier, :string, default: nil\n\n    desc 'Service Client Secret Key'\n    config_param :service_client_secret_key, :string, default: nil\n\n    desc 'Token Endpoint'\n    config_param :token_endpoint, :string, default: '/token'\n",
                      "markdown": "`    config_param :service_client_identifier, :string, default: nil\n\n    desc 'Service Client Secret Key'\n    config_param :service_client_secret_key, :string, default: nil\n\n    desc 'Token Endpoint'\n    config_param :token_endpoint, :string, default: '/token'\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/lib/fluent/plugin/out_splunk_hec.rb"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 14,
                  "endLine": 34,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    desc 'Protocol to use to call HEC API.'\n    config_param :protocol, :enum, list: %i[http https], default: :https\n\n    desc 'The hostname/IP to HEC, or HEC load balancer.'\n    config_param :hec_host, :string, default: ''\n\n    desc 'The port number to HEC, or HEC load balancer.'\n",
                    "rendered": {
                      "text": "    desc 'Protocol to use to call HEC API.'\n    config_param :protocol, :enum, list: %i[http https], default: :https\n\n    desc 'The hostname/IP to HEC, or HEC load balancer.'\n    config_param :hec_host, :string, default: ''\n\n    desc 'The port number to HEC, or HEC load balancer.'\n",
                      "markdown": "`    desc 'Protocol to use to call HEC API.'\n    config_param :protocol, :enum, list: %i[http https], default: :https\n\n    desc 'The hostname/IP to HEC, or HEC load balancer.'\n    config_param :hec_host, :string, default: ''\n\n    desc 'The port number to HEC, or HEC load balancer.'\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/lib/fluent/plugin/out_splunk_hec.rb"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 23,
                  "endLine": 55,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    desc 'The amount of time allowed between reading two chunks from the socket.'\n    config_param :read_timeout, :integer, default: nil\n\n    desc 'The amount of time to wait for a connection to be opened.'\n    config_param :open_timeout, :integer, default: nil\n\n    desc 'The path to a file containing a PEM-format CA certificate for this client.'\n",
                    "rendered": {
                      "text": "    desc 'The amount of time allowed between reading two chunks from the socket.'\n    config_param :read_timeout, :integer, default: nil\n\n    desc 'The amount of time to wait for a connection to be opened.'\n    config_param :open_timeout, :integer, default: nil\n\n    desc 'The path to a file containing a PEM-format CA certificate for this client.'\n",
                      "markdown": "`    desc 'The amount of time allowed between reading two chunks from the socket.'\n    config_param :read_timeout, :integer, default: nil\n\n    desc 'The amount of time to wait for a connection to be opened.'\n    config_param :open_timeout, :integer, default: nil\n\n    desc 'The path to a file containing a PEM-format CA certificate for this client.'\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/lib/fluent/plugin/out_splunk_hec.rb"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 23,
                  "endLine": 52,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    desc 'If a connection has not been used for this number of seconds it will automatically be reset upon the next use to avoid attempting to send to a closed connection. nil means no timeout.'\n    config_param :idle_timeout, :integer, default: 5\n\n    desc 'The amount of time allowed between reading two chunks from the socket.'\n    config_param :read_timeout, :integer, default: nil\n\n    desc 'The amount of time to wait for a connection to be opened.'\n",
                    "rendered": {
                      "text": "    desc 'If a connection has not been used for this number of seconds it will automatically be reset upon the next use to avoid attempting to send to a closed connection. nil means no timeout.'\n    config_param :idle_timeout, :integer, default: 5\n\n    desc 'The amount of time allowed between reading two chunks from the socket.'\n    config_param :read_timeout, :integer, default: nil\n\n    desc 'The amount of time to wait for a connection to be opened.'\n",
                      "markdown": "`    desc 'If a connection has not been used for this number of seconds it will automatically be reset upon the next use to avoid attempting to send to a closed connection. nil means no timeout.'\n    config_param :idle_timeout, :integer, default: 5\n\n    desc 'The amount of time allowed between reading two chunks from the socket.'\n    config_param :read_timeout, :integer, default: nil\n\n    desc 'The amount of time to wait for a connection to be opened.'\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/lib/fluent/plugin/out_splunk_hec.rb"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 25,
                  "endLine": 23,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    autoload :VERSION, \"fluent/plugin/out_splunk_hec/version\"\n    autoload :MatchFormatter, \"fluent/plugin/out_splunk_hec/match_formatter\"\n\n    KEY_FIELDS = %w[index time host source sourcetype metric_name metric_value].freeze\n    TAG_PLACEHOLDER = '${tag}'.freeze\n\n    MISSING_FIELD = Hash.new do |_h, k|\n",
                    "rendered": {
                      "text": "    autoload :VERSION, \"fluent/plugin/out_splunk_hec/version\"\n    autoload :MatchFormatter, \"fluent/plugin/out_splunk_hec/match_formatter\"\n\n    KEY_FIELDS = %w[index time host source sourcetype metric_name metric_value].freeze\n    TAG_PLACEHOLDER = '${tag}'.freeze\n\n    MISSING_FIELD = Hash.new do |_h, k|\n",
                      "markdown": "`    autoload :VERSION, \"fluent/plugin/out_splunk_hec/version\"\n    autoload :MatchFormatter, \"fluent/plugin/out_splunk_hec/match_formatter\"\n\n    KEY_FIELDS = %w[index time host source sourcetype metric_name metric_value].freeze\n    TAG_PLACEHOLDER = '${tag}'.freeze\n\n    MISSING_FIELD = Hash.new do |_h, k|\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/lib/fluent/plugin/out_splunk.rb"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 17,
                  "endLine": 326,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      if !@registry.exist?(metric.name)\n        @registry.register(metric)\n      else\n        @registry.get(metric.name)\n      end\n    end\n  end\n",
                    "rendered": {
                      "text": "      if !@registry.exist?(metric.name)\n        @registry.register(metric)\n      else\n        @registry.get(metric.name)\n      end\n    end\n  end\n",
                      "markdown": "`      if !@registry.exist?(metric.name)\n        @registry.register(metric)\n      else\n        @registry.get(metric.name)\n      end\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/lib/fluent/plugin/out_splunk.rb"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 60,
                  "endLine": 18,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    KEY_FIELDS = %w[index host source sourcetype metric_name metric_value time].freeze\n    TAG_PLACEHOLDER = '${tag}'\n\n    desc 'The host field for events, by default it uses the hostname of the machine that runnning fluentd. This is exclusive with `host_key`.'\n    config_param :host, :string, default: nil\n\n    desc 'Field name to contain host. This is exclusive with `host`.'\n",
                    "rendered": {
                      "text": "    KEY_FIELDS = %w[index host source sourcetype metric_name metric_value time].freeze\n    TAG_PLACEHOLDER = '${tag}'\n\n    desc 'The host field for events, by default it uses the hostname of the machine that runnning fluentd. This is exclusive with `host_key`.'\n    config_param :host, :string, default: nil\n\n    desc 'Field name to contain host. This is exclusive with `host`.'\n",
                      "markdown": "`    KEY_FIELDS = %w[index host source sourcetype metric_name metric_value time].freeze\n    TAG_PLACEHOLDER = '${tag}'\n\n    desc 'The host field for events, by default it uses the hostname of the machine that runnning fluentd. This is exclusive with `host_key`.'\n    config_param :host, :string, default: nil\n\n    desc 'Field name to contain host. This is exclusive with `host`.'\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/lib/fluent/plugin/out_splunk.rb"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 62,
                  "endLine": 178,
                  "endColumn": 66,
                  "snippet": {
                    "text": "    def check_conflict\n      KEY_FIELDS.each do |f|\n        kf = \"#{f}_key\"\n        raise Fluent::ConfigError, \"Can not set #{f} and #{kf} at the same time.\" \\\n          if %W[@#{f} @#{kf}].all? &method(:instance_variable_get)\n      end\n    end\n",
                    "rendered": {
                      "text": "    def check_conflict\n      KEY_FIELDS.each do |f|\n        kf = \"#{f}_key\"\n        raise Fluent::ConfigError, \"Can not set #{f} and #{kf} at the same time.\" \\\n          if %W[@#{f} @#{kf}].all? &method(:instance_variable_get)\n      end\n    end\n",
                      "markdown": "`    def check_conflict\n      KEY_FIELDS.each do |f|\n        kf = \"#{f}_key\"\n        raise Fluent::ConfigError, \"Can not set #{f} and #{kf} at the same time.\" \\\n          if %W[@#{f} @#{kf}].all? &method(:instance_variable_get)\n      end\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Gemfile"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 39,
                  "endLine": 3,
                  "endColumn": 47,
                  "snippet": {
                    "text": "source 'https://rubygems.org'\n\n# This is separate gemfile for building docker image that has all plugins\n# for kubernetes log collection agent\n# List all required gems here and install via bundler to resolve dependencies\ngem \"fluentd\", \"=1.15.3\"\n",
                    "rendered": {
                      "text": "source 'https://rubygems.org'\n\n# This is separate gemfile for building docker image that has all plugins\n# for kubernetes log collection agent\n# List all required gems here and install via bundler to resolve dependencies\ngem \"fluentd\", \"=1.15.3\"\n",
                      "markdown": "`source 'https://rubygems.org'\n\n# This is separate gemfile for building docker image that has all plugins\n# for kubernetes log collection agent\n# List all required gems here and install via bundler to resolve dependencies\ngem \"fluentd\", \"=1.15.3\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/ci_scripts/deploy_connector.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\n\n#Make sure to check and clean previously failed deployment\necho \"Checking if previous deployment exist...\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\n\n#Make sure to check and clean previously failed deployment\necho \"Checking if previous deployment exist...\"\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\n\n#Make sure to check and clean previously failed deployment\necho \"Checking if previous deployment exist...\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/ci_scripts/deploy_connector.sh"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 23,
                  "endLine": 31,
                  "endColumn": 29,
                  "snippet": {
                    "text": "# wait for deployment to finish\n# metric and logging deamon set for each node + aggr + object + splunk\nPODS=$((MINIKUBE_NODE_COUNTS*2+2+1))\nuntil kubectl get pod | grep Running | [[ $(wc -l) == $PODS ]]; do\n   kubectl get pod\n   sleep 2;\ndone\n",
                    "rendered": {
                      "text": "# wait for deployment to finish\n# metric and logging deamon set for each node + aggr + object + splunk\nPODS=$((MINIKUBE_NODE_COUNTS*2+2+1))\nuntil kubectl get pod | grep Running | [[ $(wc -l) == $PODS ]]; do\n   kubectl get pod\n   sleep 2;\ndone\n",
                      "markdown": "`# wait for deployment to finish\n# metric and logging deamon set for each node + aggr + object + splunk\nPODS=$((MINIKUBE_NODE_COUNTS*2+2+1))\nuntil kubectl get pod | grep Running | [[ $(wc -l) == $PODS ]]; do\n   kubectl get pod\n   sleep 2;\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/ci_scripts/deploy_connector.sh"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 40,
                  "endLine": 29,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# kubectl get pod | grep \"ci-sck-splunk-kubernetes-logging\" | awk 'NR==1{print $1}\nkubectl get pod\n# wait for deployment to finish\n# metric and logging deamon set for each node + aggr + object + splunk\nPODS=$((MINIKUBE_NODE_COUNTS*2+2+1))\nuntil kubectl get pod | grep Running | [[ $(wc -l) == $PODS ]]; do\n   kubectl get pod\n",
                    "rendered": {
                      "text": "# kubectl get pod | grep \"ci-sck-splunk-kubernetes-logging\" | awk 'NR==1{print $1}\nkubectl get pod\n# wait for deployment to finish\n# metric and logging deamon set for each node + aggr + object + splunk\nPODS=$((MINIKUBE_NODE_COUNTS*2+2+1))\nuntil kubectl get pod | grep Running | [[ $(wc -l) == $PODS ]]; do\n   kubectl get pod\n",
                      "markdown": "`# kubectl get pod | grep \"ci-sck-splunk-kubernetes-logging\" | awk 'NR==1{print $1}\nkubectl get pod\n# wait for deployment to finish\n# metric and logging deamon set for each node + aggr + object + splunk\nPODS=$((MINIKUBE_NODE_COUNTS*2+2+1))\nuntil kubectl get pod | grep Running | [[ $(wc -l) == $PODS ]]; do\n   kubectl get pod\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/ci_scripts/deploy_connector.sh"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 61,
                  "endLine": 26,
                  "endColumn": 66,
                  "snippet": {
                    "text": "--set splunk-kubernetes-logging.image.tag=recent \\\n--set splunk-kubernetes-logging.image.pullPolicy=IfNotPresent \\\n-f ci_scripts/sck_values.yml helm-chart/splunk-connect-for-kubernetes\n# kubectl get pod | grep \"ci-sck-splunk-kubernetes-logging\" | awk 'NR==1{print $1}\nkubectl get pod\n# wait for deployment to finish\n# metric and logging deamon set for each node + aggr + object + splunk\n",
                    "rendered": {
                      "text": "--set splunk-kubernetes-logging.image.tag=recent \\\n--set splunk-kubernetes-logging.image.pullPolicy=IfNotPresent \\\n-f ci_scripts/sck_values.yml helm-chart/splunk-connect-for-kubernetes\n# kubectl get pod | grep \"ci-sck-splunk-kubernetes-logging\" | awk 'NR==1{print $1}\nkubectl get pod\n# wait for deployment to finish\n# metric and logging deamon set for each node + aggr + object + splunk\n",
                      "markdown": "`--set splunk-kubernetes-logging.image.tag=recent \\\n--set splunk-kubernetes-logging.image.pullPolicy=IfNotPresent \\\n-f ci_scripts/sck_values.yml helm-chart/splunk-connect-for-kubernetes\n# kubectl get pod | grep \"ci-sck-splunk-kubernetes-logging\" | awk 'NR==1{print $1}\nkubectl get pod\n# wait for deployment to finish\n# metric and logging deamon set for each node + aggr + object + splunk\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/ci_scripts/deploy_connector.sh"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 19,
                  "endLine": 26,
                  "endColumn": 25,
                  "snippet": {
                    "text": "--set splunk-kubernetes-logging.image.tag=recent \\\n--set splunk-kubernetes-logging.image.pullPolicy=IfNotPresent \\\n-f ci_scripts/sck_values.yml helm-chart/splunk-connect-for-kubernetes\n# kubectl get pod | grep \"ci-sck-splunk-kubernetes-logging\" | awk 'NR==1{print $1}\nkubectl get pod\n# wait for deployment to finish\n# metric and logging deamon set for each node + aggr + object + splunk\n",
                    "rendered": {
                      "text": "--set splunk-kubernetes-logging.image.tag=recent \\\n--set splunk-kubernetes-logging.image.pullPolicy=IfNotPresent \\\n-f ci_scripts/sck_values.yml helm-chart/splunk-connect-for-kubernetes\n# kubectl get pod | grep \"ci-sck-splunk-kubernetes-logging\" | awk 'NR==1{print $1}\nkubectl get pod\n# wait for deployment to finish\n# metric and logging deamon set for each node + aggr + object + splunk\n",
                      "markdown": "`--set splunk-kubernetes-logging.image.tag=recent \\\n--set splunk-kubernetes-logging.image.pullPolicy=IfNotPresent \\\n-f ci_scripts/sck_values.yml helm-chart/splunk-connect-for-kubernetes\n# kubectl get pod | grep \"ci-sck-splunk-kubernetes-logging\" | awk 'NR==1{print $1}\nkubectl get pod\n# wait for deployment to finish\n# metric and logging deamon set for each node + aggr + object + splunk\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/ci_scripts/deploy_connector.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7,
                  "endLine": 14,
                  "endColumn": 4,
                  "snippet": {
                    "text": "fi\n\n# Clone splunk-connect-for-kubernetes repo\ncd /opt\ngit clone https://github.com/splunk/splunk-connect-for-kubernetes.git\ncd splunk-connect-for-kubernetes\n\nminikube image load splunk/fluentd-hec:recent\n",
                    "rendered": {
                      "text": "fi\n\n# Clone splunk-connect-for-kubernetes repo\ncd /opt\ngit clone https://github.com/splunk/splunk-connect-for-kubernetes.git\ncd splunk-connect-for-kubernetes\n\nminikube image load splunk/fluentd-hec:recent\n",
                      "markdown": "`fi\n\n# Clone splunk-connect-for-kubernetes repo\ncd /opt\ngit clone https://github.com/splunk/splunk-connect-for-kubernetes.git\ncd splunk-connect-for-kubernetes\n\nminikube image load splunk/fluentd-hec:recent\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/ci_scripts/deploy_connector.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\n\n#Make sure to check and clean previously failed deployment\necho \"Checking if previous deployment exist...\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\n\n#Make sure to check and clean previously failed deployment\necho \"Checking if previous deployment exist...\"\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\n\n#Make sure to check and clean previously failed deployment\necho \"Checking if previous deployment exist...\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/ci_scripts/k8s-splunk.yml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 19,
                  "endLine": 28,
                  "endColumn": 27,
                  "snippet": {
                    "text": "      value: --accept-license\n    - name: SPLUNK_USER\n      value: root\n    - name: SPLUNK_PASSWORD\n      value: changeme2\n    - name: SPLUNK_LAUNCH_CONF\n      value: OPTIMISTIC_ABOUT_FILE_LOCKING=1\n",
                    "rendered": {
                      "text": "      value: --accept-license\n    - name: SPLUNK_USER\n      value: root\n    - name: SPLUNK_PASSWORD\n      value: changeme2\n    - name: SPLUNK_LAUNCH_CONF\n      value: OPTIMISTIC_ABOUT_FILE_LOCKING=1\n",
                      "markdown": "`      value: --accept-license\n    - name: SPLUNK_USER\n      value: root\n    - name: SPLUNK_PASSWORD\n      value: changeme2\n    - name: SPLUNK_LAUNCH_CONF\n      value: OPTIMISTIC_ABOUT_FILE_LOCKING=1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/CONTRIBUTORS.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nto see line-by-line credits and\n\n    git log --follow file\n\nto see the change log even across renames and rewrites.\n",
                    "rendered": {
                      "text": "\nto see line-by-line credits and\n\n    git log --follow file\n\nto see the change log even across renames and rewrites.\n",
                      "markdown": "`\nto see line-by-line credits and\n\n    git log --follow file\n\nto see the change log even across renames and rewrites.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/CONTRIBUTORS.md"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 3,
                  "endLine": 9,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n**For the detailed history of contributions** of a given file, try\n\n    git blame file\n\nto see line-by-line credits and\n\n",
                    "rendered": {
                      "text": "\n**For the detailed history of contributions** of a given file, try\n\n    git blame file\n\nto see line-by-line credits and\n\n",
                      "markdown": "`\n**For the detailed history of contributions** of a given file, try\n\n    git blame file\n\nto see line-by-line credits and\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 40,
                  "endLine": 196,
                  "endColumn": 48,
                  "snippet": {
                    "text": "          python -m pytest \\\n          \t--splunkd-url https://$CI_SPLUNK_HOST:8089 \\\n          \t--splunk-user admin \\\n          \t--splunk-password $CI_SPLUNK_PASSWORD \\\n            --nodes-count $MINIKUBE_NODE_COUNTS\\\n          \t-p no:warnings -s -n auto\n  fossa-scan:\n",
                    "rendered": {
                      "text": "          python -m pytest \\\n          \t--splunkd-url https://$CI_SPLUNK_HOST:8089 \\\n          \t--splunk-user admin \\\n          \t--splunk-password $CI_SPLUNK_PASSWORD \\\n            --nodes-count $MINIKUBE_NODE_COUNTS\\\n          \t-p no:warnings -s -n auto\n  fossa-scan:\n",
                      "markdown": "`          python -m pytest \\\n          \t--splunkd-url https://$CI_SPLUNK_HOST:8089 \\\n          \t--splunk-user admin \\\n          \t--splunk-password $CI_SPLUNK_PASSWORD \\\n            --nodes-count $MINIKUBE_NODE_COUNTS\\\n          \t-p no:warnings -s -n auto\n  fossa-scan:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 20,
                  "endLine": 196,
                  "endColumn": 28,
                  "snippet": {
                    "text": "          python -m pytest \\\n          \t--splunkd-url https://$CI_SPLUNK_HOST:8089 \\\n          \t--splunk-user admin \\\n          \t--splunk-password $CI_SPLUNK_PASSWORD \\\n            --nodes-count $MINIKUBE_NODE_COUNTS\\\n          \t-p no:warnings -s -n auto\n  fossa-scan:\n",
                    "rendered": {
                      "text": "          python -m pytest \\\n          \t--splunkd-url https://$CI_SPLUNK_HOST:8089 \\\n          \t--splunk-user admin \\\n          \t--splunk-password $CI_SPLUNK_PASSWORD \\\n            --nodes-count $MINIKUBE_NODE_COUNTS\\\n          \t-p no:warnings -s -n auto\n  fossa-scan:\n",
                      "markdown": "`          python -m pytest \\\n          \t--splunkd-url https://$CI_SPLUNK_HOST:8089 \\\n          \t--splunk-user admin \\\n          \t--splunk-password $CI_SPLUNK_PASSWORD \\\n            --nodes-count $MINIKUBE_NODE_COUNTS\\\n          \t-p no:warnings -s -n auto\n  fossa-scan:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 52,
                  "endLine": 164,
                  "endColumn": 60,
                  "snippet": {
                    "text": "          # lower the limit to 50MiB. Higher limits throws error 'Search not executed XXXX'\n          kubectl exec -it splunk -- bash -c 'echo -e \"\\n[diskUsage]\\nminFreeSpace = 50\" >> /opt/splunk/etc/system/local/server.conf'\n          # Restart Splunk\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/server/control/restart -X POST\n\n      - name: Deploy k8s connector\n        run: |\n",
                    "rendered": {
                      "text": "          # lower the limit to 50MiB. Higher limits throws error 'Search not executed XXXX'\n          kubectl exec -it splunk -- bash -c 'echo -e \"\\n[diskUsage]\\nminFreeSpace = 50\" >> /opt/splunk/etc/system/local/server.conf'\n          # Restart Splunk\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/server/control/restart -X POST\n\n      - name: Deploy k8s connector\n        run: |\n",
                      "markdown": "`          # lower the limit to 50MiB. Higher limits throws error 'Search not executed XXXX'\n          kubectl exec -it splunk -- bash -c 'echo -e \"\\n[diskUsage]\\nminFreeSpace = 50\" >> /opt/splunk/etc/system/local/server.conf'\n          # Restart Splunk\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/server/control/restart -X POST\n\n      - name: Deploy k8s connector\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 57,
                  "endLine": 160,
                  "endColumn": 65,
                  "snippet": {
                    "text": "vent\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable\n          # Create new HEC token\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d \"name=splunk_hec_token&token=a6b5e77f-d5f6-415a-bd43-930cecb12959&disabled=0&index=default-events&indexes=default-events,$CI_INDEX_METRICS,$CI_INDEX_OBJECTS,$CI_INDEX_EVENTS,ns-anno,pod-anno\" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http\n         ",
                    "rendered": {
                      "text": "vent\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable\n          # Create new HEC token\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d \"name=splunk_hec_token&token=a6b5e77f-d5f6-415a-bd43-930cecb12959&disabled=0&index=default-events&indexes=default-events,$CI_INDEX_METRICS,$CI_INDEX_OBJECTS,$CI_INDEX_EVENTS,ns-anno,pod-anno\" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http\n         ",
                      "markdown": "`vent\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable\n          # Create new HEC token\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d \"name=splunk_hec_token&token=a6b5e77f-d5f6-415a-bd43-930cecb12959&disabled=0&index=default-events&indexes=default-events,$CI_INDEX_METRICS,$CI_INDEX_OBJECTS,$CI_INDEX_EVENTS,ns-anno,pod-anno\" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http\n         `"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 57,
                  "endLine": 158,
                  "endColumn": 65,
                  "snippet": {
                    "text": "vices/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable\n          # Create new HEC token\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d \"name=splunk_hec_token&token=a6b5e77f-d5f6-415a-bd43-930cecb12959&disabled=0&index=defa",
                    "rendered": {
                      "text": "vices/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable\n          # Create new HEC token\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d \"name=splunk_hec_token&token=a6b5e77f-d5f6-415a-bd43-930cecb12959&disabled=0&index=defa",
                      "markdown": "`vices/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable\n          # Create new HEC token\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d \"name=splunk_hec_token&token=a6b5e77f-d5f6-415a-bd43-930cecb12959&disabled=0&index=defa`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 52,
                  "endLine": 156,
                  "endColumn": 60,
                  "snippet": {
                    "text": "SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enab",
                    "rendered": {
                      "text": "SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enab",
                      "markdown": "`SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enab`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 52,
                  "endLine": 155,
                  "endColumn": 60,
                  "snippet": {
                    "text": ":$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          cur",
                    "rendered": {
                      "text": ":$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          cur",
                      "markdown": "`:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          cur`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 52,
                  "endLine": 154,
                  "endColumn": 60,
                  "snippet": {
                    "text": "I_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAM",
                    "rendered": {
                      "text": "I_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAM",
                      "markdown": "`I_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAM`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 52,
                  "endLine": 153,
                  "endColumn": 60,
                  "snippet": {
                    "text": "$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPL",
                    "rendered": {
                      "text": "$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPL",
                      "markdown": "`$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPL`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 52,
                  "endLine": 152,
                  "endColumn": 60,
                  "snippet": {
                    "text": "=$(kubectl get pod splunk --template={{.status.podIP}})\n          # Setup Indexes\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_",
                    "rendered": {
                      "text": "=$(kubectl get pod splunk --template={{.status.podIP}})\n          # Setup Indexes\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_",
                      "markdown": "`=$(kubectl get pod splunk --template={{.status.podIP}})\n          # Setup Indexes\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 52,
                  "endLine": 151,
                  "endColumn": 60,
                  "snippet": {
                    "text": "nk is ready\n          until kubectl logs splunk --tail=2 | grep -q 'Ansible playbook complete'; do\n            sleep 1;\n          done\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          # Setup Indexes\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SP",
                    "rendered": {
                      "text": "nk is ready\n          until kubectl logs splunk --tail=2 | grep -q 'Ansible playbook complete'; do\n            sleep 1;\n          done\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          # Setup Indexes\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SP",
                      "markdown": "`nk is ready\n          until kubectl logs splunk --tail=2 | grep -q 'Ansible playbook complete'; do\n            sleep 1;\n          done\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          # Setup Indexes\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SP`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 16,
                  "endLine": 66,
                  "endColumn": 24,
                  "snippet": {
                    "text": "      CI_SPLUNK_PORT: 8089\n      CI_SPLUNK_USERNAME: admin\n      CI_SPLUNK_HEC_TOKEN: a6b5e77f-d5f6-415a-bd43-930cecb12959\n      CI_SPLUNK_PASSWORD: changeme2\n      CI_INDEX_EVENTS: ci_events\n      CI_INDEX_OBJECTS: ci_objects\n      CI_INDEX_METRICS: ci_metrics\n",
                    "rendered": {
                      "text": "      CI_SPLUNK_PORT: 8089\n      CI_SPLUNK_USERNAME: admin\n      CI_SPLUNK_HEC_TOKEN: a6b5e77f-d5f6-415a-bd43-930cecb12959\n      CI_SPLUNK_PASSWORD: changeme2\n      CI_INDEX_EVENTS: ci_events\n      CI_INDEX_OBJECTS: ci_objects\n      CI_INDEX_METRICS: ci_metrics\n",
                      "markdown": "`      CI_SPLUNK_PORT: 8089\n      CI_SPLUNK_USERNAME: admin\n      CI_SPLUNK_HEC_TOKEN: a6b5e77f-d5f6-415a-bd43-930cecb12959\n      CI_SPLUNK_PASSWORD: changeme2\n      CI_INDEX_EVENTS: ci_events\n      CI_INDEX_OBJECTS: ci_objects\n      CI_INDEX_METRICS: ci_metrics\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 121,
                  "endLine": 207,
                  "snippet": {
                    "text": "      - uses: actions/checkout@v3\n      - name: run fossa anlyze and create report\n        run: |\n          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash\n          fossa analyze  --include-unused-deps --debug\n          fossa report attribution --format text > /tmp/THIRDPARTY\n        env:\n          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}\n",
                    "rendered": {
                      "text": "      - uses: actions/checkout@v3\n      - name: run fossa anlyze and create report\n        run: |\n          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash\n          fossa analyze  --include-unused-deps --debug\n          fossa report attribution --format text > /tmp/THIRDPARTY\n        env:\n          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}\n",
                      "markdown": "`      - uses: actions/checkout@v3\n      - name: run fossa anlyze and create report\n        run: |\n          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash\n          fossa analyze  --include-unused-deps --debug\n          fossa report attribution --format text > /tmp/THIRDPARTY\n        env:\n          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 36,
                  "endLine": 162,
                  "endColumn": 42,
                  "snippet": {
                    "text": "t-events,$CI_INDEX_METRICS,$CI_INDEX_OBJECTS,$CI_INDEX_EVENTS,ns-anno,pod-anno\" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http\n          # lower the limit to 50MiB. Higher limits throws error 'Search not executed XXXX'\n          kubectl exec -it splunk -- bash -c 'echo -e \"\\n[diskUsage]\\nminFreeSpace = 50\" >> /opt/splunk/etc/system/local/server.conf'\n          # Restart Splunk\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/server/control/restart -X POST\n\n      - name: Deploy k8s connector\n    ",
                    "rendered": {
                      "text": "t-events,$CI_INDEX_METRICS,$CI_INDEX_OBJECTS,$CI_INDEX_EVENTS,ns-anno,pod-anno\" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http\n          # lower the limit to 50MiB. Higher limits throws error 'Search not executed XXXX'\n          kubectl exec -it splunk -- bash -c 'echo -e \"\\n[diskUsage]\\nminFreeSpace = 50\" >> /opt/splunk/etc/system/local/server.conf'\n          # Restart Splunk\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/server/control/restart -X POST\n\n      - name: Deploy k8s connector\n    ",
                      "markdown": "`t-events,$CI_INDEX_METRICS,$CI_INDEX_OBJECTS,$CI_INDEX_EVENTS,ns-anno,pod-anno\" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http\n          # lower the limit to 50MiB. Higher limits throws error 'Search not executed XXXX'\n          kubectl exec -it splunk -- bash -c 'echo -e \"\\n[diskUsage]\\nminFreeSpace = 50\" >> /opt/splunk/etc/system/local/server.conf'\n          # Restart Splunk\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/server/control/restart -X POST\n\n      - name: Deploy k8s connector\n    `"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 121,
                  "endLine": 207,
                  "snippet": {
                    "text": "      - uses: actions/checkout@v3\n      - name: run fossa anlyze and create report\n        run: |\n          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash\n          fossa analyze  --include-unused-deps --debug\n          fossa report attribution --format text > /tmp/THIRDPARTY\n        env:\n          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}\n",
                    "rendered": {
                      "text": "      - uses: actions/checkout@v3\n      - name: run fossa anlyze and create report\n        run: |\n          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash\n          fossa analyze  --include-unused-deps --debug\n          fossa report attribution --format text > /tmp/THIRDPARTY\n        env:\n          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}\n",
                      "markdown": "`      - uses: actions/checkout@v3\n      - name: run fossa anlyze and create report\n        run: |\n          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash\n          fossa analyze  --include-unused-deps --debug\n          fossa report attribution --format text > /tmp/THIRDPARTY\n        env:\n          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 9,
                  "endLine": 206,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      - uses: actions/checkout@v3\n      - name: run fossa anlyze and create report\n        run: |\n          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash\n          fossa analyze  --include-unused-deps --debug\n          fossa report attribution --format text > /tmp/THIRDPARTY\n        env:\n",
                    "rendered": {
                      "text": "      - uses: actions/checkout@v3\n      - name: run fossa anlyze and create report\n        run: |\n          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash\n          fossa analyze  --include-unused-deps --debug\n          fossa report attribution --format text > /tmp/THIRDPARTY\n        env:\n",
                      "markdown": "`      - uses: actions/checkout@v3\n      - name: run fossa anlyze and create report\n        run: |\n          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash\n          fossa analyze  --include-unused-deps --debug\n          fossa report attribution --format text > /tmp/THIRDPARTY\n        env:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 9,
                  "endLine": 191,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          cd test\n          pip install --upgrade pip\n          pip install -r requirements.txt\n          echo \"Running functional tests.....\"\n          python -m pytest \\\n          \t--splunkd-url https://$CI_SPLUNK_HOST:8089 \\\n",
                    "rendered": {
                      "text": "          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          cd test\n          pip install --upgrade pip\n          pip install -r requirements.txt\n          echo \"Running functional tests.....\"\n          python -m pytest \\\n          \t--splunkd-url https://$CI_SPLUNK_HOST:8089 \\\n",
                      "markdown": "`          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          cd test\n          pip install --upgrade pip\n          pip install -r requirements.txt\n          echo \"Running functional tests.....\"\n          python -m pytest \\\n          \t--splunkd-url https://$CI_SPLUNK_HOST:8089 \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 31,
                  "endLine": 191,
                  "snippet": {
                    "text": "          export PYTHONWARNINGS=\"ignore:Unverified HTTPS request\"\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          cd test\n          pip install --upgrade pip\n          pip install -r requirements.txt\n          echo \"Running functional tests.....\"\n          python -m pytest \\\n          \t--splunkd-url https://$CI_SPLUNK_HOST:8089 \\\n",
                    "rendered": {
                      "text": "          export PYTHONWARNINGS=\"ignore:Unverified HTTPS request\"\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          cd test\n          pip install --upgrade pip\n          pip install -r requirements.txt\n          echo \"Running functional tests.....\"\n          python -m pytest \\\n          \t--splunkd-url https://$CI_SPLUNK_HOST:8089 \\\n",
                      "markdown": "`          export PYTHONWARNINGS=\"ignore:Unverified HTTPS request\"\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          cd test\n          pip install --upgrade pip\n          pip install -r requirements.txt\n          echo \"Running functional tests.....\"\n          python -m pytest \\\n          \t--splunkd-url https://$CI_SPLUNK_HOST:8089 \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 9,
                  "endLine": 190,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          export PYTHONWARNINGS=\"ignore:Unverified HTTPS request\"\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          cd test\n          pip install --upgrade pip\n          pip install -r requirements.txt\n          echo \"Running functional tests.....\"\n          python -m pytest \\\n",
                    "rendered": {
                      "text": "          export PYTHONWARNINGS=\"ignore:Unverified HTTPS request\"\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          cd test\n          pip install --upgrade pip\n          pip install -r requirements.txt\n          echo \"Running functional tests.....\"\n          python -m pytest \\\n",
                      "markdown": "`          export PYTHONWARNINGS=\"ignore:Unverified HTTPS request\"\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          cd test\n          pip install --upgrade pip\n          pip install -r requirements.txt\n          echo \"Running functional tests.....\"\n          python -m pytest \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 9,
                  "endLine": 164,
                  "endColumn": 15,
                  "snippet": {
                    "text": "          # lower the limit to 50MiB. Higher limits throws error 'Search not executed XXXX'\n          kubectl exec -it splunk -- bash -c 'echo -e \"\\n[diskUsage]\\nminFreeSpace = 50\" >> /opt/splunk/etc/system/local/server.conf'\n          # Restart Splunk\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/server/control/restart -X POST\n\n      - name: Deploy k8s connector\n        run: |\n",
                    "rendered": {
                      "text": "          # lower the limit to 50MiB. Higher limits throws error 'Search not executed XXXX'\n          kubectl exec -it splunk -- bash -c 'echo -e \"\\n[diskUsage]\\nminFreeSpace = 50\" >> /opt/splunk/etc/system/local/server.conf'\n          # Restart Splunk\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/server/control/restart -X POST\n\n      - name: Deploy k8s connector\n        run: |\n",
                      "markdown": "`          # lower the limit to 50MiB. Higher limits throws error 'Search not executed XXXX'\n          kubectl exec -it splunk -- bash -c 'echo -e \"\\n[diskUsage]\\nminFreeSpace = 50\" >> /opt/splunk/etc/system/local/server.conf'\n          # Restart Splunk\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/server/control/restart -X POST\n\n      - name: Deploy k8s connector\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 36,
                  "endLine": 162,
                  "endColumn": 42,
                  "snippet": {
                    "text": "t-events,$CI_INDEX_METRICS,$CI_INDEX_OBJECTS,$CI_INDEX_EVENTS,ns-anno,pod-anno\" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http\n          # lower the limit to 50MiB. Higher limits throws error 'Search not executed XXXX'\n          kubectl exec -it splunk -- bash -c 'echo -e \"\\n[diskUsage]\\nminFreeSpace = 50\" >> /opt/splunk/etc/system/local/server.conf'\n          # Restart Splunk\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/server/control/restart -X POST\n\n      - name: Deploy k8s connector\n    ",
                    "rendered": {
                      "text": "t-events,$CI_INDEX_METRICS,$CI_INDEX_OBJECTS,$CI_INDEX_EVENTS,ns-anno,pod-anno\" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http\n          # lower the limit to 50MiB. Higher limits throws error 'Search not executed XXXX'\n          kubectl exec -it splunk -- bash -c 'echo -e \"\\n[diskUsage]\\nminFreeSpace = 50\" >> /opt/splunk/etc/system/local/server.conf'\n          # Restart Splunk\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/server/control/restart -X POST\n\n      - name: Deploy k8s connector\n    ",
                      "markdown": "`t-events,$CI_INDEX_METRICS,$CI_INDEX_OBJECTS,$CI_INDEX_EVENTS,ns-anno,pod-anno\" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http\n          # lower the limit to 50MiB. Higher limits throws error 'Search not executed XXXX'\n          kubectl exec -it splunk -- bash -c 'echo -e \"\\n[diskUsage]\\nminFreeSpace = 50\" >> /opt/splunk/etc/system/local/server.conf'\n          # Restart Splunk\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/server/control/restart -X POST\n\n      - name: Deploy k8s connector\n    `"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 9,
                  "endLine": 160,
                  "endColumn": 15,
                  "snippet": {
                    "text": "ices/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable\n          # Create new HEC token\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d \"name=splunk_hec_token&token=a6b5e77f-d5f6-415a-bd43-930cecb12959&disabled=0&index=default-events&indexes=default-events,$CI_INDEX_METRICS,$CI_INDEX_OBJECTS,$CI_INDEX_EVENTS,ns-anno,pod-anno\" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/",
                    "rendered": {
                      "text": "ices/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable\n          # Create new HEC token\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d \"name=splunk_hec_token&token=a6b5e77f-d5f6-415a-bd43-930cecb12959&disabled=0&index=default-events&indexes=default-events,$CI_INDEX_METRICS,$CI_INDEX_OBJECTS,$CI_INDEX_EVENTS,ns-anno,pod-anno\" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/",
                      "markdown": "`ices/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable\n          # Create new HEC token\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d \"name=splunk_hec_token&token=a6b5e77f-d5f6-415a-bd43-930cecb12959&disabled=0&index=default-events&indexes=default-events,$CI_INDEX_METRICS,$CI_INDEX_OBJECTS,$CI_INDEX_EVENTS,ns-anno,pod-anno\" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 9,
                  "endLine": 158,
                  "endColumn": 15,
                  "snippet": {
                    "text": "WORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable\n          # Create new HEC token\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d \"name=splunk_hec_token&token=a6b5e77f",
                    "rendered": {
                      "text": "WORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable\n          # Create new HEC token\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d \"name=splunk_hec_token&token=a6b5e77f",
                      "markdown": "`WORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable\n          # Create new HEC token\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d \"name=splunk_hec_token&token=a6b5e77f`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 9,
                  "endLine": 156,
                  "endColumn": 15,
                  "snippet": {
                    "text": "K_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobod",
                    "rendered": {
                      "text": "K_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobod",
                      "markdown": "`K_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n          # Enable HEC services\n          curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobod`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 9,
                  "endLine": 155,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n",
                    "rendered": {
                      "text": "$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n",
                      "markdown": "`$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=pod-anno -d datatype=event\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 9,
                  "endLine": 154,
                  "endColumn": 15,
                  "snippet": {
                    "text": "_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=",
                    "rendered": {
                      "text": "_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=",
                      "markdown": "`_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=ns-anno -d datatype=`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 9,
                  "endLine": 153,
                  "endColumn": 15,
                  "snippet": {
                    "text": "CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -",
                    "rendered": {
                      "text": "CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -",
                      "markdown": "`CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS -d datatype=metric\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=default-events -`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 9,
                  "endLine": 152,
                  "endColumn": 15,
                  "snippet": {
                    "text": "       done\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          # Setup Indexes\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS",
                    "rendered": {
                      "text": "       done\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          # Setup Indexes\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS",
                      "markdown": "`       done\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          # Setup Indexes\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_METRICS`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 9,
                  "endLine": 151,
                  "endColumn": 15,
                  "snippet": {
                    "text": "/k8s-splunk.yml\n          # Wait until splunk is ready\n          until kubectl logs splunk --tail=2 | grep -q 'Ansible playbook complete'; do\n            sleep 1;\n          done\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          # Setup Indexes\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS ",
                    "rendered": {
                      "text": "/k8s-splunk.yml\n          # Wait until splunk is ready\n          until kubectl logs splunk --tail=2 | grep -q 'Ansible playbook complete'; do\n            sleep 1;\n          done\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          # Setup Indexes\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS ",
                      "markdown": "`/k8s-splunk.yml\n          # Wait until splunk is ready\n          until kubectl logs splunk --tail=2 | grep -q 'Ansible playbook complete'; do\n            sleep 1;\n          done\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n          # Setup Indexes\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_EVENTS -d datatype=event\n          curl -k -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/services/data/indexes -d name=$CI_INDEX_OBJECTS `"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 46,
                  "endLine": 146,
                  "endColumn": 52,
                  "snippet": {
                    "text": "          # Install Splunk on minikube\n          kubectl apply -f ci_scripts/k8s-splunk.yml\n          # Wait until splunk is ready\n          until kubectl logs splunk --tail=2 | grep -q 'Ansible playbook complete'; do\n            sleep 1;\n          done\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n",
                    "rendered": {
                      "text": "          # Install Splunk on minikube\n          kubectl apply -f ci_scripts/k8s-splunk.yml\n          # Wait until splunk is ready\n          until kubectl logs splunk --tail=2 | grep -q 'Ansible playbook complete'; do\n            sleep 1;\n          done\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n",
                      "markdown": "`          # Install Splunk on minikube\n          kubectl apply -f ci_scripts/k8s-splunk.yml\n          # Wait until splunk is ready\n          until kubectl logs splunk --tail=2 | grep -q 'Ansible playbook complete'; do\n            sleep 1;\n          done\n          export CI_SPLUNK_HOST=$(kubectl get pod splunk --template={{.status.podIP}})\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 32,
                  "endLine": 140,
                  "endColumn": 38,
                  "snippet": {
                    "text": "            sleep 1;\n          done\n          kubectl get nodes\n          until kubectl get sa | grep -q 'default'; do\n            sleep 1;\n          done\n          # Install Splunk on minikube\n",
                    "rendered": {
                      "text": "            sleep 1;\n          done\n          kubectl get nodes\n          until kubectl get sa | grep -q 'default'; do\n            sleep 1;\n          done\n          # Install Splunk on minikube\n",
                      "markdown": "`            sleep 1;\n          done\n          kubectl get nodes\n          until kubectl get sa | grep -q 'default'; do\n            sleep 1;\n          done\n          # Install Splunk on minikube\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 64,
                  "endLine": 135,
                  "endColumn": 70,
                  "snippet": {
                    "text": "        run: |\n          # Wait until minikube is ready\n          export JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\n          until kubectl get nodes -o jsonpath=\"$JSONPATH\" 2>&1 | grep -q \"Ready=True\"; do\n            echo \"wait for minikube ready ...\"\n            sleep 1;\n          done\n",
                    "rendered": {
                      "text": "        run: |\n          # Wait until minikube is ready\n          export JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\n          until kubectl get nodes -o jsonpath=\"$JSONPATH\" 2>&1 | grep -q \"Ready=True\"; do\n            echo \"wait for minikube ready ...\"\n            sleep 1;\n          done\n",
                      "markdown": "`        run: |\n          # Wait until minikube is ready\n          export JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\n          until kubectl get nodes -o jsonpath=\"$JSONPATH\" 2>&1 | grep -q \"Ready=True\"; do\n            echo \"wait for minikube ready ...\"\n            sleep 1;\n          done\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 64,
                  "endLine": 127,
                  "endColumn": 70,
                  "snippet": {
                    "text": "          # Start Minikube and Wait\n          minikube start --driver=docker --container-runtime=docker --cpus 2 --memory 4096 --kubernetes-version=${KUBERNETES_VERSION} --no-vtx-check -n=${MINIKUBE_NODE_COUNTS}\n          export JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\n          until kubectl get nodes -o jsonpath=\"$JSONPATH\" 2>&1 | grep -q \"Ready=True\"; do\n            sleep 1;\n          done\n\n",
                    "rendered": {
                      "text": "          # Start Minikube and Wait\n          minikube start --driver=docker --container-runtime=docker --cpus 2 --memory 4096 --kubernetes-version=${KUBERNETES_VERSION} --no-vtx-check -n=${MINIKUBE_NODE_COUNTS}\n          export JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\n          until kubectl get nodes -o jsonpath=\"$JSONPATH\" 2>&1 | grep -q \"Ready=True\"; do\n            sleep 1;\n          done\n\n",
                      "markdown": "`          # Start Minikube and Wait\n          minikube start --driver=docker --container-runtime=docker --cpus 2 --memory 4096 --kubernetes-version=${KUBERNETES_VERSION} --no-vtx-check -n=${MINIKUBE_NODE_COUNTS}\n          export JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\n          until kubectl get nodes -o jsonpath=\"$JSONPATH\" 2>&1 | grep -q \"Ready=True\"; do\n            sleep 1;\n          done\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 14,
                  "endLine": 123,
                  "endColumn": 18,
                  "snippet": {
                    "text": "          # Install Minikube\n          curl -Lo minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64\n          chmod +x minikube\n          sudo mv minikube /usr/local/bin/\n          # Start Minikube and Wait\n          minikube start --driver=docker --container-runtime=docker --cpus 2 --memory 4096 --kubernetes-version=${KUBERNETES_VERSION} --no-vtx-check -n=${MINIKUBE_NODE_COUNTS}\n          export JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\n",
                    "rendered": {
                      "text": "          # Install Minikube\n          curl -Lo minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64\n          chmod +x minikube\n          sudo mv minikube /usr/local/bin/\n          # Start Minikube and Wait\n          minikube start --driver=docker --container-runtime=docker --cpus 2 --memory 4096 --kubernetes-version=${KUBERNETES_VERSION} --no-vtx-check -n=${MINIKUBE_NODE_COUNTS}\n          export JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\n",
                      "markdown": "`          # Install Minikube\n          curl -Lo minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64\n          chmod +x minikube\n          sudo mv minikube /usr/local/bin/\n          # Start Minikube and Wait\n          minikube start --driver=docker --container-runtime=docker --cpus 2 --memory 4096 --kubernetes-version=${KUBERNETES_VERSION} --no-vtx-check -n=${MINIKUBE_NODE_COUNTS}\n          export JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 9,
                  "endLine": 122,
                  "endColumn": 16,
                  "snippet": {
                    "text": "          touch ${HOME}/.kube/config\n          # Install Minikube\n          curl -Lo minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64\n          chmod +x minikube\n          sudo mv minikube /usr/local/bin/\n          # Start Minikube and Wait\n          minikube start --driver=docker --container-runtime=docker --cpus 2 --memory 4096 --kubernetes-version=${KUBERNETES_VERSION} --no-vtx-check -n=${MINIKUBE_NODE_COUNTS}\n",
                    "rendered": {
                      "text": "          touch ${HOME}/.kube/config\n          # Install Minikube\n          curl -Lo minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64\n          chmod +x minikube\n          sudo mv minikube /usr/local/bin/\n          # Start Minikube and Wait\n          minikube start --driver=docker --container-runtime=docker --cpus 2 --memory 4096 --kubernetes-version=${KUBERNETES_VERSION} --no-vtx-check -n=${MINIKUBE_NODE_COUNTS}\n",
                      "markdown": "`          touch ${HOME}/.kube/config\n          # Install Minikube\n          curl -Lo minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64\n          chmod +x minikube\n          sudo mv minikube /usr/local/bin/\n          # Start Minikube and Wait\n          minikube start --driver=docker --container-runtime=docker --cpus 2 --memory 4096 --kubernetes-version=${KUBERNETES_VERSION} --no-vtx-check -n=${MINIKUBE_NODE_COUNTS}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 9,
                  "endLine": 121,
                  "endColumn": 15,
                  "snippet": {
                    "text": "          mkdir -p ${HOME}/.kube\n          touch ${HOME}/.kube/config\n          # Install Minikube\n          curl -Lo minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64\n          chmod +x minikube\n          sudo mv minikube /usr/local/bin/\n          # Start Minikube and Wait\n",
                    "rendered": {
                      "text": "          mkdir -p ${HOME}/.kube\n          touch ${HOME}/.kube/config\n          # Install Minikube\n          curl -Lo minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64\n          chmod +x minikube\n          sudo mv minikube /usr/local/bin/\n          # Start Minikube and Wait\n",
                      "markdown": "`          mkdir -p ${HOME}/.kube\n          touch ${HOME}/.kube/config\n          # Install Minikube\n          curl -Lo minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64\n          chmod +x minikube\n          sudo mv minikube /usr/local/bin/\n          # Start Minikube and Wait\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 14,
                  "endLine": 117,
                  "endColumn": 18,
                  "snippet": {
                    "text": "          # Install Kubectl\n          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl\n          chmod +x kubectl\n          sudo mv kubectl /usr/local/bin/\n          mkdir -p ${HOME}/.kube\n          touch ${HOME}/.kube/config\n          # Install Minikube\n",
                    "rendered": {
                      "text": "          # Install Kubectl\n          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl\n          chmod +x kubectl\n          sudo mv kubectl /usr/local/bin/\n          mkdir -p ${HOME}/.kube\n          touch ${HOME}/.kube/config\n          # Install Minikube\n",
                      "markdown": "`          # Install Kubectl\n          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl\n          chmod +x kubectl\n          sudo mv kubectl /usr/local/bin/\n          mkdir -p ${HOME}/.kube\n          touch ${HOME}/.kube/config\n          # Install Minikube\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 9,
                  "endLine": 116,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        run: |\n          # Install Kubectl\n          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl\n          chmod +x kubectl\n          sudo mv kubectl /usr/local/bin/\n          mkdir -p ${HOME}/.kube\n          touch ${HOME}/.kube/config\n",
                    "rendered": {
                      "text": "        run: |\n          # Install Kubectl\n          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl\n          chmod +x kubectl\n          sudo mv kubectl /usr/local/bin/\n          mkdir -p ${HOME}/.kube\n          touch ${HOME}/.kube/config\n",
                      "markdown": "`        run: |\n          # Install Kubectl\n          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl\n          chmod +x kubectl\n          sudo mv kubectl /usr/local/bin/\n          mkdir -p ${HOME}/.kube\n          touch ${HOME}/.kube/config\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 9,
                  "endLine": 115,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      - name: Setup Minikube\n        run: |\n          # Install Kubectl\n          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl\n          chmod +x kubectl\n          sudo mv kubectl /usr/local/bin/\n          mkdir -p ${HOME}/.kube\n",
                    "rendered": {
                      "text": "      - name: Setup Minikube\n        run: |\n          # Install Kubectl\n          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl\n          chmod +x kubectl\n          sudo mv kubectl /usr/local/bin/\n          mkdir -p ${HOME}/.kube\n",
                      "markdown": "`      - name: Setup Minikube\n        run: |\n          # Install Kubectl\n          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl\n          chmod +x kubectl\n          sudo mv kubectl /usr/local/bin/\n          mkdir -p ${HOME}/.kube\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 9,
                  "endLine": 110,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n      - name: Check kubernetes-metrics image\n        run: |\n          docker image ls\n\n      - name: Setup Minikube\n        run: |\n",
                    "rendered": {
                      "text": "\n      - name: Check kubernetes-metrics image\n        run: |\n          docker image ls\n\n      - name: Setup Minikube\n        run: |\n",
                      "markdown": "`\n      - name: Check kubernetes-metrics image\n        run: |\n          docker image ls\n\n      - name: Setup Minikube\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 20,
                  "endLine": 92,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        with:\n          platforms: all\n\n      - name: Set up Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@master\n\n",
                    "rendered": {
                      "text": "        with:\n          platforms: all\n\n      - name: Set up Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@master\n\n",
                      "markdown": "`        with:\n          platforms: all\n\n      - name: Set up Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@master\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 9,
                  "endLine": 29,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      - name: Builder\n        run: |\n          bundle exec rake build -t -v\n          cp -R pkg /tmp\n\n      - name: Cache pkg\n        uses: actions/cache@v1\n",
                    "rendered": {
                      "text": "      - name: Builder\n        run: |\n          bundle exec rake build -t -v\n          cp -R pkg /tmp\n\n      - name: Cache pkg\n        uses: actions/cache@v1\n",
                      "markdown": "`      - name: Builder\n        run: |\n          bundle exec rake build -t -v\n          cp -R pkg /tmp\n\n      - name: Cache pkg\n        uses: actions/cache@v1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/workflows/ci_build_test.yaml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 19,
                  "endLine": 16,
                  "endColumn": 25,
                  "snippet": {
                    "text": "      - name: Checkout code\n        uses: actions/checkout@v2\n\n      - name: Setup Ruby and install gems\n        uses: ruby/setup-ruby@v1\n        with:\n          bundler-cache: true\n",
                    "rendered": {
                      "text": "      - name: Checkout code\n        uses: actions/checkout@v2\n\n      - name: Setup Ruby and install gems\n        uses: ruby/setup-ruby@v1\n        with:\n          bundler-cache: true\n",
                      "markdown": "`      - name: Checkout code\n        uses: actions/checkout@v2\n\n      - name: Setup Ruby and install gems\n        uses: ruby/setup-ruby@v1\n        with:\n          bundler-cache: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/ci_scripts/install_dep.sh"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 6,
                  "endLine": 4,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nsudo gem update --system\ngem install bundler\nbundle update --bundler\nbundle install",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nsudo gem update --system\ngem install bundler\nbundle update --bundler\nbundle install",
                      "markdown": "`#!/usr/bin/env bash\nsudo gem update --system\ngem install bundler\nbundle update --bundler\nbundle install`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/ci_scripts/install_dep.sh"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 8,
                  "endLine": 2,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nsudo gem update --system\ngem install bundler\nbundle update --bundler\nbundle install",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nsudo gem update --system\ngem install bundler\nbundle update --bundler\nbundle install",
                      "markdown": "`#!/usr/bin/env bash\nsudo gem update --system\ngem install bundler\nbundle update --bundler\nbundle install`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/ci_scripts/install_dep.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nsudo gem update --system\ngem install bundler\nbundle update --bundler\nbundle install",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nsudo gem update --system\ngem install bundler\nbundle update --bundler\nbundle install",
                      "markdown": "`#!/usr/bin/env bash\nsudo gem update --system\ngem install bundler\nbundle update --bundler\nbundle install`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/ci_scripts/install_dep.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nsudo gem update --system\ngem install bundler\nbundle update --bundler\nbundle install",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nsudo gem update --system\ngem install bundler\nbundle update --bundler\nbundle install",
                      "markdown": "`#!/usr/bin/env bash\nsudo gem update --system\ngem install bundler\nbundle update --bundler\nbundle install`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/CLA.md"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 4,
                  "endLine": 15,
                  "endColumn": 13,
                  "snippet": {
                    "text": "work, that is intentionally submitted by You for inclusion in, or documentation of, this project/repository.  For the \npurposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication submitted for \ninclusion in this project/repository, including but not limited to communication on electronic mailing lists, source \ncode control systems, and issue tracking systems that are managed by, or on behalf of, the maintainers of \nthe project/repository. \n\n“Work” shall mean the collective software, content, and documentation in this project/repository.\n",
                    "rendered": {
                      "text": "work, that is intentionally submitted by You for inclusion in, or documentation of, this project/repository.  For the \npurposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication submitted for \ninclusion in this project/repository, including but not limited to communication on electronic mailing lists, source \ncode control systems, and issue tracking systems that are managed by, or on behalf of, the maintainers of \nthe project/repository. \n\n“Work” shall mean the collective software, content, and documentation in this project/repository.\n",
                      "markdown": "`work, that is intentionally submitted by You for inclusion in, or documentation of, this project/repository.  For the \npurposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication submitted for \ninclusion in this project/repository, including but not limited to communication on electronic mailing lists, source \ncode control systems, and issue tracking systems that are managed by, or on behalf of, the maintainers of \nthe project/repository. \n\n“Work” shall mean the collective software, content, and documentation in this project/repository.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/Makefile"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 8,
                  "endLine": 27,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\ninstall-deps:\n\t@gem install bundler\n\t@bundle update --bundler\n\t@bundle install\n\nunpack: build\n",
                    "rendered": {
                      "text": "\ninstall-deps:\n\t@gem install bundler\n\t@bundle update --bundler\n\t@bundle install\n\nunpack: build\n",
                      "markdown": "`\ninstall-deps:\n\t@gem install bundler\n\t@bundle update --bundler\n\t@bundle install\n\nunpack: build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/Makefile"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 4,
                  "endLine": 35,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t@mkdir -p docker/gem\n\t@rm -rf docker/gem/*\n\t@gem unpack docker/fluent-plugin-*.gem --target docker/gem\n\t@cd docker && bundle install\n",
                    "rendered": {
                      "text": "\t@mkdir -p docker/gem\n\t@rm -rf docker/gem/*\n\t@gem unpack docker/fluent-plugin-*.gem --target docker/gem\n\t@cd docker && bundle install\n",
                      "markdown": "`\t@mkdir -p docker/gem\n\t@rm -rf docker/gem/*\n\t@gem unpack docker/fluent-plugin-*.gem --target docker/gem\n\t@cd docker && bundle install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/Makefile"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 28,
                  "endLine": 32,
                  "snippet": {
                    "text": "\t@bundle install\n\nunpack: build\n\t@cp pkg/fluent-plugin-*.gem docker\n\t@mkdir -p docker/gem\n\t@rm -rf docker/gem/*\n\t@gem unpack docker/fluent-plugin-*.gem --target docker/gem\n\t@cd docker && bundle install\n",
                    "rendered": {
                      "text": "\t@bundle install\n\nunpack: build\n\t@cp pkg/fluent-plugin-*.gem docker\n\t@mkdir -p docker/gem\n\t@rm -rf docker/gem/*\n\t@gem unpack docker/fluent-plugin-*.gem --target docker/gem\n\t@cd docker && bundle install\n",
                      "markdown": "`\t@bundle install\n\nunpack: build\n\t@cp pkg/fluent-plugin-*.gem docker\n\t@mkdir -p docker/gem\n\t@rm -rf docker/gem/*\n\t@gem unpack docker/fluent-plugin-*.gem --target docker/gem\n\t@cd docker && bundle install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/Makefile"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7,
                  "endLine": 16,
                  "snippet": {
                    "text": "build: clean_pkg \n\t@bundle exec rake build\n\n.PHONY: docker\ndocker:\n\t@docker buildx build --no-cache --pull --platform linux/amd64 -o type=image,name=splunk/fluentd-hec:$(VERSION),push=false --build-arg VERSION=$(VERSION) . -f docker/Dockerfile\n\ndocker-rebuild:\n",
                    "rendered": {
                      "text": "build: clean_pkg \n\t@bundle exec rake build\n\n.PHONY: docker\ndocker:\n\t@docker buildx build --no-cache --pull --platform linux/amd64 -o type=image,name=splunk/fluentd-hec:$(VERSION),push=false --build-arg VERSION=$(VERSION) . -f docker/Dockerfile\n\ndocker-rebuild:\n",
                      "markdown": "`build: clean_pkg \n\t@bundle exec rake build\n\n.PHONY: docker\ndocker:\n\t@docker buildx build --no-cache --pull --platform linux/amd64 -o type=image,name=splunk/fluentd-hec:$(VERSION),push=false --build-arg VERSION=$(VERSION) . -f docker/Dockerfile\n\ndocker-rebuild:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Dockerfile"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 17,
                  "endLine": 52,
                  "endColumn": 4,
                  "snippet": {
                    "text": "   chown -R $FLUENT_USER /fluentd && chgrp -R $FLUENT_USER /fluentd && \\\n   chmod +t /tmp\n\nUSER $FLUENT_USER\nCMD bundle exec fluentd -c /fluentd/etc/fluent.conf",
                    "rendered": {
                      "text": "   chown -R $FLUENT_USER /fluentd && chgrp -R $FLUENT_USER /fluentd && \\\n   chmod +t /tmp\n\nUSER $FLUENT_USER\nCMD bundle exec fluentd -c /fluentd/etc/fluent.conf",
                      "markdown": "`   chown -R $FLUENT_USER /fluentd && chgrp -R $FLUENT_USER /fluentd && \\\n   chmod +t /tmp\n\nUSER $FLUENT_USER\nCMD bundle exec fluentd -c /fluentd/etc/fluent.conf`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Dockerfile"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 7,
                  "endLine": 36,
                  "endColumn": 15,
                  "snippet": {
                    "text": "RUN dnf install -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n",
                    "rendered": {
                      "text": "RUN dnf install -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n",
                      "markdown": "`RUN dnf install -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Dockerfile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 10,
                  "endLine": 6,
                  "endColumn": 18,
                  "snippet": {
                    "text": "ADD ./ /app/\nWORKDIR /app\nRUN gem install bundler\nRUN bundle update --bundler\nRUN bundle install\n\nRUN bundle exec rake build -t -v\n",
                    "rendered": {
                      "text": "ADD ./ /app/\nWORKDIR /app\nRUN gem install bundler\nRUN bundle update --bundler\nRUN bundle install\n\nRUN bundle exec rake build -t -v\n",
                      "markdown": "`ADD ./ /app/\nWORKDIR /app\nRUN gem install bundler\nRUN bundle update --bundler\nRUN bundle install\n\nRUN bundle exec rake build -t -v\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Dockerfile"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 2,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "   useradd -r -g $FLUENT_USER $FLUENT_USER && \\\n   mkdir -p /fluentd/log /fluentd/etc /fluentd/plugins &&\\\n   chown -R $FLUENT_USER /fluentd && chgrp -R $FLUENT_USER /fluentd && \\\n   chmod +t /tmp\n\nUSER $FLUENT_USER\nCMD bundle exec fluentd -c /fluentd/etc/fluent.conf",
                    "rendered": {
                      "text": "   useradd -r -g $FLUENT_USER $FLUENT_USER && \\\n   mkdir -p /fluentd/log /fluentd/etc /fluentd/plugins &&\\\n   chown -R $FLUENT_USER /fluentd && chgrp -R $FLUENT_USER /fluentd && \\\n   chmod +t /tmp\n\nUSER $FLUENT_USER\nCMD bundle exec fluentd -c /fluentd/etc/fluent.conf",
                      "markdown": "`   useradd -r -g $FLUENT_USER $FLUENT_USER && \\\n   mkdir -p /fluentd/log /fluentd/etc /fluentd/plugins &&\\\n   chown -R $FLUENT_USER /fluentd && chgrp -R $FLUENT_USER /fluentd && \\\n   chmod +t /tmp\n\nUSER $FLUENT_USER\nCMD bundle exec fluentd -c /fluentd/etc/fluent.conf`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Dockerfile"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 2,
                  "endLine": 48,
                  "endColumn": 9,
                  "snippet": {
                    "text": "RUN groupadd -r $FLUENT_USER && \\\n   useradd -r -g $FLUENT_USER $FLUENT_USER && \\\n   mkdir -p /fluentd/log /fluentd/etc /fluentd/plugins &&\\\n   chown -R $FLUENT_USER /fluentd && chgrp -R $FLUENT_USER /fluentd && \\\n   chmod +t /tmp\n\nUSER $FLUENT_USER\n",
                    "rendered": {
                      "text": "RUN groupadd -r $FLUENT_USER && \\\n   useradd -r -g $FLUENT_USER $FLUENT_USER && \\\n   mkdir -p /fluentd/log /fluentd/etc /fluentd/plugins &&\\\n   chown -R $FLUENT_USER /fluentd && chgrp -R $FLUENT_USER /fluentd && \\\n   chmod +t /tmp\n\nUSER $FLUENT_USER\n",
                      "markdown": "`RUN groupadd -r $FLUENT_USER && \\\n   useradd -r -g $FLUENT_USER $FLUENT_USER && \\\n   mkdir -p /fluentd/log /fluentd/etc /fluentd/plugins &&\\\n   chown -R $FLUENT_USER /fluentd && chgrp -R $FLUENT_USER /fluentd && \\\n   chmod +t /tmp\n\nUSER $FLUENT_USER\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Dockerfile"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 5,
                  "endLine": 43,
                  "endColumn": 10,
                  "snippet": {
                    "text": " -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n   && gem unpack /tmp/*.gem --target gem \\\n   && bundle install \\\n   && yum groupremove -y \"Development Tools\" \\\n   && rpm -e --nodeps python3-urllib3-* python3-requests-* python3-libxml2-* python3-dmidecode-* subscription-manager-* libwebp-* libwebp-devel-*  libjpeg-turbo-devel-* libjpeg-turbo-* mariadb-connector-c-config-* mariadb-connector-c-* mariadb-connector-c-devel-* rsync-* libX11-* libX11-common-* libX11-devel-",
                    "rendered": {
                      "text": " -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n   && gem unpack /tmp/*.gem --target gem \\\n   && bundle install \\\n   && yum groupremove -y \"Development Tools\" \\\n   && rpm -e --nodeps python3-urllib3-* python3-requests-* python3-libxml2-* python3-dmidecode-* subscription-manager-* libwebp-* libwebp-devel-*  libjpeg-turbo-devel-* libjpeg-turbo-* mariadb-connector-c-config-* mariadb-connector-c-* mariadb-connector-c-devel-* rsync-* libX11-* libX11-common-* libX11-devel-",
                      "markdown": "` -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n   && gem unpack /tmp/*.gem --target gem \\\n   && bundle install \\\n   && yum groupremove -y \"Development Tools\" \\\n   && rpm -e --nodeps python3-urllib3-* python3-requests-* python3-libxml2-* python3-dmidecode-* subscription-manager-* libwebp-* libwebp-devel-*  libjpeg-turbo-devel-* libjpeg-turbo-* mariadb-connector-c-config-* mariadb-connector-c-* mariadb-connector-c-devel-* rsync-* libX11-* libX11-common-* libX11-devel-`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Dockerfile"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 5,
                  "endLine": 42,
                  "endColumn": 10,
                  "snippet": {
                    "text": "/app/LICENSE /licenses/LICENSE\n\nRUN dnf install -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n   && gem unpack /tmp/*.gem --target gem \\\n   && bundle install \\\n   && yum groupremove -y \"Development Tools\" \\\n   && rpm -e --nodeps python3-urllib3-* python3-requests-* python3-libxml2-* python3-dmidecode-* subscription-manager-* libwebp-* libwebp-devel-*  libjpeg-turbo-devel-* libjpeg-turbo-* mariadb-connector-c-config-* mariadb-connector-c-* mariadb-connector-c-devel-*",
                    "rendered": {
                      "text": "/app/LICENSE /licenses/LICENSE\n\nRUN dnf install -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n   && gem unpack /tmp/*.gem --target gem \\\n   && bundle install \\\n   && yum groupremove -y \"Development Tools\" \\\n   && rpm -e --nodeps python3-urllib3-* python3-requests-* python3-libxml2-* python3-dmidecode-* subscription-manager-* libwebp-* libwebp-devel-*  libjpeg-turbo-devel-* libjpeg-turbo-* mariadb-connector-c-config-* mariadb-connector-c-* mariadb-connector-c-devel-*",
                      "markdown": "`/app/LICENSE /licenses/LICENSE\n\nRUN dnf install -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n   && gem unpack /tmp/*.gem --target gem \\\n   && bundle install \\\n   && yum groupremove -y \"Development Tools\" \\\n   && rpm -e --nodeps python3-urllib3-* python3-requests-* python3-libxml2-* python3-dmidecode-* subscription-manager-* libwebp-* libwebp-devel-*  libjpeg-turbo-devel-* libjpeg-turbo-* mariadb-connector-c-config-* mariadb-connector-c-* mariadb-connector-c-devel-*`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Dockerfile"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 5,
                  "endLine": 37,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n   && gem unpack /tmp/*.gem --target gem \\\n",
                    "rendered": {
                      "text": "\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n   && gem unpack /tmp/*.gem --target gem \\\n",
                      "markdown": "`\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n   && gem unpack /tmp/*.gem --target gem \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Dockerfile"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 8,
                  "snippet": {
                    "text": "RUN dnf install -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n",
                    "rendered": {
                      "text": "RUN dnf install -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n",
                      "markdown": "`RUN dnf install -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n   && yum remove -y nodejs npm \\\n   && gem install bundler \\\n   && gem uninstall -i /usr/share/gems bundler \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Dockerfile"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 3,
                  "endLine": 33,
                  "endColumn": 8,
                  "snippet": {
                    "text": "RUN mkdir /licenses\nCOPY --from=builder /app/LICENSE /licenses/LICENSE\n\nRUN dnf install -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n",
                    "rendered": {
                      "text": "RUN mkdir /licenses\nCOPY --from=builder /app/LICENSE /licenses/LICENSE\n\nRUN dnf install -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n",
                      "markdown": "`RUN mkdir /licenses\nCOPY --from=builder /app/LICENSE /licenses/LICENSE\n\nRUN dnf install -y jq\n\nCOPY --from=builder /app/docker/Gemfile* ./\nRUN yum update -y \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Dockerfile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 22,
                  "endLine": 24,
                  "endColumn": 4,
                  "snippet": {
                    "text": "      summary=\"Splunk Connect for Kubernetes Logging container\" \\\n      description=\"Splunk Connect for Kubernetes Logging container\"\n\nENV VERSION=${VERSION}\nENV FLUENT_USER fluent\n\nUSER root\n\n",
                    "rendered": {
                      "text": "      summary=\"Splunk Connect for Kubernetes Logging container\" \\\n      description=\"Splunk Connect for Kubernetes Logging container\"\n\nENV VERSION=${VERSION}\nENV FLUENT_USER fluent\n\nUSER root\n\n",
                      "markdown": "`      summary=\"Splunk Connect for Kubernetes Logging container\" \\\n      description=\"Splunk Connect for Kubernetes Logging container\"\n\nENV VERSION=${VERSION}\nENV FLUENT_USER fluent\n\nUSER root\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Dockerfile"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 23,
                  "endColumn": 4,
                  "snippet": {
                    "text": "      release=${VERSION} \\\n      summary=\"Splunk Connect for Kubernetes Logging container\" \\\n      description=\"Splunk Connect for Kubernetes Logging container\"\n\nENV VERSION=${VERSION}\nENV FLUENT_USER fluent\n\nUSER root\n",
                    "rendered": {
                      "text": "      release=${VERSION} \\\n      summary=\"Splunk Connect for Kubernetes Logging container\" \\\n      description=\"Splunk Connect for Kubernetes Logging container\"\n\nENV VERSION=${VERSION}\nENV FLUENT_USER fluent\n\nUSER root\n",
                      "markdown": "`      release=${VERSION} \\\n      summary=\"Splunk Connect for Kubernetes Logging container\" \\\n      description=\"Splunk Connect for Kubernetes Logging container\"\n\nENV VERSION=${VERSION}\nENV FLUENT_USER fluent\n\nUSER root\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Gemfile.lock"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 1,
                  "endLine": 173,
                  "snippet": {
                    "text": "    yajl-ruby (1.4.3)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  cgi (~> 0.3.6)\n  date (~> 3.3.3)\n",
                    "rendered": {
                      "text": "    yajl-ruby (1.4.3)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  cgi (~> 0.3.6)\n  date (~> 3.3.3)\n",
                      "markdown": "`    yajl-ruby (1.4.3)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  cgi (~> 0.3.6)\n  date (~> 3.3.3)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Gemfile.lock"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 5,
                  "endLine": 161,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    unf_ext (0.0.8.2)\n    validate_email (0.1.6)\n      activemodel (>= 3.0)\n      mail (>= 2.2.5)\n    validate_url (1.0.15)\n      activemodel (>= 3.0.0)\n      public_suffix\n",
                    "rendered": {
                      "text": "    unf_ext (0.0.8.2)\n    validate_email (0.1.6)\n      activemodel (>= 3.0)\n      mail (>= 2.2.5)\n    validate_url (1.0.15)\n      activemodel (>= 3.0.0)\n      public_suffix\n",
                      "markdown": "`    unf_ext (0.0.8.2)\n    validate_email (0.1.6)\n      activemodel (>= 3.0)\n      mail (>= 2.2.5)\n    validate_url (1.0.15)\n      activemodel (>= 3.0.0)\n      public_suffix\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Gemfile.lock"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 3,
                  "endLine": 151,
                  "endColumn": 12,
                  "snippet": {
                    "text": "      httpclient (>= 2.4)\n    systemd-journal (1.3.3)\n      ffi (~> 1.9)\n    timeout (0.4.0)\n    tzinfo (2.0.6)\n      concurrent-ruby (~> 1.0)\n    tzinfo-data (1.2023.3)\n",
                    "rendered": {
                      "text": "      httpclient (>= 2.4)\n    systemd-journal (1.3.3)\n      ffi (~> 1.9)\n    timeout (0.4.0)\n    tzinfo (2.0.6)\n      concurrent-ruby (~> 1.0)\n    tzinfo-data (1.2023.3)\n",
                      "markdown": "`      httpclient (>= 2.4)\n    systemd-journal (1.3.3)\n      ffi (~> 1.9)\n    timeout (0.4.0)\n    tzinfo (2.0.6)\n      concurrent-ruby (~> 1.0)\n    tzinfo-data (1.2023.3)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/docker/Gemfile.lock"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 3,
                  "endLine": 102,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    jsonpath (1.1.3)\n      multi_json\n    lru_redux (1.1.0)\n    mail (2.7.1)\n      mini_mime (>= 0.1.1)\n    mime-types (3.4.1)\n      mime-types-data (~> 3.2015)\n",
                    "rendered": {
                      "text": "    jsonpath (1.1.3)\n      multi_json\n    lru_redux (1.1.0)\n    mail (2.7.1)\n      mini_mime (>= 0.1.1)\n    mime-types (3.4.1)\n      mime-types-data (~> 3.2015)\n",
                      "markdown": "`    jsonpath (1.1.3)\n      multi_json\n    lru_redux (1.1.0)\n    mail (2.7.1)\n      mini_mime (>= 0.1.1)\n    mime-types (3.4.1)\n      mime-types-data (~> 3.2015)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/.github/ISSUE_TEMPLATE/bug_report.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 1,
                  "endLine": 25,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n**Environment**:\n- Kubernetes version (use `kubectl version`):\n- Ruby version (use `ruby --version`):\n- OS (e.g: `cat /etc/os-release`):\n- Splunk version:\n- Others:\n",
                    "rendered": {
                      "text": "\n**Environment**:\n- Kubernetes version (use `kubectl version`):\n- Ruby version (use `ruby --version`):\n- OS (e.g: `cat /etc/os-release`):\n- Splunk version:\n- Others:\n",
                      "markdown": "`\n**Environment**:\n- Kubernetes version (use `kubectl version`):\n- Ruby version (use `ruby --version`):\n- OS (e.g: `cat /etc/os-release`):\n- Splunk version:\n- Others:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/Gemfile.lock"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 1,
                  "endLine": 143,
                  "snippet": {
                    "text": "    yajl-ruby (1.4.3)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  bundler (~> 2.0)\n  fluent-plugin-splunk-hec!\n",
                    "rendered": {
                      "text": "    yajl-ruby (1.4.3)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  bundler (~> 2.0)\n  fluent-plugin-splunk-hec!\n",
                      "markdown": "`    yajl-ruby (1.4.3)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  bundler (~> 2.0)\n  fluent-plugin-splunk-hec!\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/Gemfile.lock"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 5,
                  "endLine": 126,
                  "endColumn": 11,
                  "snippet": {
                    "text": "      tzinfo (>= 1.0.0)\n    validate_email (0.1.6)\n      activemodel (>= 3.0)\n      mail (>= 2.2.5)\n    validate_url (1.0.15)\n      activemodel (>= 3.0.0)\n      public_suffix\n",
                    "rendered": {
                      "text": "      tzinfo (>= 1.0.0)\n    validate_email (0.1.6)\n      activemodel (>= 3.0)\n      mail (>= 2.2.5)\n    validate_url (1.0.15)\n      activemodel (>= 3.0.0)\n      public_suffix\n",
                      "markdown": "`      tzinfo (>= 1.0.0)\n    validate_email (0.1.6)\n      activemodel (>= 3.0)\n      mail (>= 2.2.5)\n    validate_url (1.0.15)\n      activemodel (>= 3.0.0)\n      public_suffix\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/Gemfile.lock"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 3,
                  "endLine": 119,
                  "endColumn": 12,
                  "snippet": {
                    "text": "      faraday-follow_redirects\n    test-unit (3.5.3)\n      power_assert\n    timeout (0.2.0)\n    tzinfo (2.0.6)\n      concurrent-ruby (~> 1.0)\n    tzinfo-data (1.2022.6)\n",
                    "rendered": {
                      "text": "      faraday-follow_redirects\n    test-unit (3.5.3)\n      power_assert\n    timeout (0.2.0)\n    tzinfo (2.0.6)\n      concurrent-ruby (~> 1.0)\n    tzinfo-data (1.2022.6)\n",
                      "markdown": "`      faraday-follow_redirects\n    test-unit (3.5.3)\n      power_assert\n    timeout (0.2.0)\n    tzinfo (2.0.6)\n      concurrent-ruby (~> 1.0)\n    tzinfo-data (1.2022.6)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/Gemfile.lock"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 5,
                  "endLine": 79,
                  "snippet": {
                    "text": "    net-smtp (0.3.1)\n      digest\n      net-protocol\n      timeout\n    openid_connect (1.1.8)\n      activemodel\n      attr_required (>= 1.0.0)\n      json-jwt (>= 1.5.0)\n",
                    "rendered": {
                      "text": "    net-smtp (0.3.1)\n      digest\n      net-protocol\n      timeout\n    openid_connect (1.1.8)\n      activemodel\n      attr_required (>= 1.0.0)\n      json-jwt (>= 1.5.0)\n",
                      "markdown": "`    net-smtp (0.3.1)\n      digest\n      net-protocol\n      timeout\n    openid_connect (1.1.8)\n      activemodel\n      attr_required (>= 1.0.0)\n      json-jwt (>= 1.5.0)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/Gemfile.lock"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 5,
                  "endLine": 75,
                  "snippet": {
                    "text": "      connection_pool (~> 2.2)\n    net-protocol (0.1.2)\n      io-wait\n      timeout\n    net-smtp (0.3.1)\n      digest\n      net-protocol\n      timeout\n",
                    "rendered": {
                      "text": "      connection_pool (~> 2.2)\n    net-protocol (0.1.2)\n      io-wait\n      timeout\n    net-smtp (0.3.1)\n      digest\n      net-protocol\n      timeout\n",
                      "markdown": "`      connection_pool (~> 2.2)\n    net-protocol (0.1.2)\n      io-wait\n      timeout\n    net-smtp (0.3.1)\n      digest\n      net-protocol\n      timeout\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/Gemfile.lock"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 3,
                  "endLine": 64,
                  "endColumn": 9,
                  "snippet": {
                    "text": "      aes_key_wrap\n      bindata\n      httpclient\n    mail (2.7.1)\n      mini_mime (>= 0.1.1)\n    mini_mime (1.1.2)\n    minitest (5.15.0)\n",
                    "rendered": {
                      "text": "      aes_key_wrap\n      bindata\n      httpclient\n    mail (2.7.1)\n      mini_mime (>= 0.1.1)\n    mini_mime (1.1.2)\n    minitest (5.15.0)\n",
                      "markdown": "`      aes_key_wrap\n      bindata\n      httpclient\n    mail (2.7.1)\n      mini_mime (>= 0.1.1)\n    mini_mime (1.1.2)\n    minitest (5.15.0)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 4,
                  "endLine": 17,
                  "endColumn": 13,
                  "snippet": {
                    "text": "work, that is intentionally submitted by You for inclusion in, or documentation of, this project/repository.  For the \npurposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication submitted for \ninclusion in this project/repository, including but not limited to communication on electronic mailing lists, source \ncode control systems, and issue tracking systems that are managed by, or on behalf of, the maintainers of \nthe project/repository. \n\n“Work” shall mean the collective software, content, and documentation in this project/repository.\n",
                    "rendered": {
                      "text": "work, that is intentionally submitted by You for inclusion in, or documentation of, this project/repository.  For the \npurposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication submitted for \ninclusion in this project/repository, including but not limited to communication on electronic mailing lists, source \ncode control systems, and issue tracking systems that are managed by, or on behalf of, the maintainers of \nthe project/repository. \n\n“Work” shall mean the collective software, content, and documentation in this project/repository.\n",
                      "markdown": "`work, that is intentionally submitted by You for inclusion in, or documentation of, this project/repository.  For the \npurposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication submitted for \ninclusion in this project/repository, including but not limited to communication on electronic mailing lists, source \ncode control systems, and issue tracking systems that are managed by, or on behalf of, the maintainers of \nthe project/repository. \n\n“Work” shall mean the collective software, content, and documentation in this project/repository.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 19,
                  "endLine": 209,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\nSplunk uses the client identifier to make authorized requests to the ingest API.\n\n### service_client_secret_key: (string)\n\nThe client identifier uses this authorization to make requests to the ingest API.\n\n",
                    "rendered": {
                      "text": "\nSplunk uses the client identifier to make authorized requests to the ingest API.\n\n### service_client_secret_key: (string)\n\nThe client identifier uses this authorization to make requests to the ingest API.\n\n",
                      "markdown": "`\nSplunk uses the client identifier to make authorized requests to the ingest API.\n\n### service_client_secret_key: (string)\n\nThe client identifier uses this authorization to make requests to the ingest API.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 163,
                  "endLine": 65,
                  "endColumn": 173,
                  "snippet": {
                    "text": "</match>\n```\n\nThis example shows the configuration to be used for sending events to ingest API. This configuration shows how to use `service_client_identifier`, `service_client_secret_key` to get token from `token_endpoint` and send events to `ingest_api_host` for the tenant `ingest_api_tenant` at the endpoint `ingest_api_events_endpoint`. The `debug_http` flag indicates whether the user wants to print debug logs to stdout.\n\n#### Example 3: Overwrite HEC defaults\n\n",
                    "rendered": {
                      "text": "</match>\n```\n\nThis example shows the configuration to be used for sending events to ingest API. This configuration shows how to use `service_client_identifier`, `service_client_secret_key` to get token from `token_endpoint` and send events to `ingest_api_host` for the tenant `ingest_api_tenant` at the endpoint `ingest_api_events_endpoint`. The `debug_http` flag indicates whether the user wants to print debug logs to stdout.\n\n#### Example 3: Overwrite HEC defaults\n\n",
                      "markdown": "`</match>\n```\n\nThis example shows the configuration to be used for sending events to ingest API. This configuration shows how to use `service_client_identifier`, `service_client_secret_key` to get token from `token_endpoint` and send events to `ingest_api_host` for the tenant `ingest_api_tenant` at the endpoint `ingest_api_events_endpoint`. The `debug_http` flag indicates whether the user wants to print debug logs to stdout.\n\n#### Example 3: Overwrite HEC defaults\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 15,
                  "endLine": 55,
                  "endColumn": 25,
                  "snippet": {
                    "text": "<match **>\n@type splunk_ingest_api\nservice_client_identifier xxxxxxxx\nservice_client_secret_key xxxx-xxxxx\ntoken_endpoint /token\ningest_auth_host auth.scp.splunk.com\ningest_api_host api.scp.splunk.com\n",
                    "rendered": {
                      "text": "<match **>\n@type splunk_ingest_api\nservice_client_identifier xxxxxxxx\nservice_client_secret_key xxxx-xxxxx\ntoken_endpoint /token\ningest_auth_host auth.scp.splunk.com\ningest_api_host api.scp.splunk.com\n",
                      "markdown": "`<match **>\n@type splunk_ingest_api\nservice_client_identifier xxxxxxxx\nservice_client_secret_key xxxx-xxxxx\ntoken_endpoint /token\ningest_auth_host auth.scp.splunk.com\ningest_api_host api.scp.splunk.com\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 54,
                  "endLine": 246,
                  "endColumn": 62,
                  "snippet": {
                    "text": "### host (string) (optional)\n\nThe host location for events. Cannot set both `host` and `host_key` parameters at the same time.  \nIf the parameter is not set, the default value is the hostname of the machine runnning fluentd.\n\n### host_key (string) (optional)\n\n",
                    "rendered": {
                      "text": "### host (string) (optional)\n\nThe host location for events. Cannot set both `host` and `host_key` parameters at the same time.  \nIf the parameter is not set, the default value is the hostname of the machine runnning fluentd.\n\n### host_key (string) (optional)\n\n",
                      "markdown": "`### host (string) (optional)\n\nThe host location for events. Cannot set both `host` and `host_key` parameters at the same time.  \nIf the parameter is not set, the default value is the hostname of the machine runnning fluentd.\n\n### host_key (string) (optional)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 20,
                  "endLine": 219,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n### ingest_api_host: (string)\n\nIndicates which url/hostname to use for requests to the ingest API.\n\n### ingest_api_tenant: (string)\n\n",
                    "rendered": {
                      "text": "\n### ingest_api_host: (string)\n\nIndicates which url/hostname to use for requests to the ingest API.\n\n### ingest_api_tenant: (string)\n\n",
                      "markdown": "`\n### ingest_api_host: (string)\n\nIndicates which url/hostname to use for requests to the ingest API.\n\n### ingest_api_tenant: (string)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 4,
                  "endLine": 169,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n### hec_host (string) (required)\n\nThe hostname/IP for the HEC token or the HEC load balancer.\n\n### hec_port (integer) (optional)\n\n",
                    "rendered": {
                      "text": "\n### hec_host (string) (required)\n\nThe hostname/IP for the HEC token or the HEC load balancer.\n\n### hec_port (integer) (optional)\n\n",
                      "markdown": "`\n### hec_host (string) (required)\n\nThe hostname/IP for the HEC token or the HEC load balancer.\n\n### hec_port (integer) (optional)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 311,
                  "endLine": 46,
                  "endColumn": 319,
                  "snippet": {
                    "text": "</match>\n```\n\nThis example is very basic, it just tells the plugin to send events to Splunk HEC on `https://12.34.56.78:8088` (https is the default protocol), using the HEC token `00000000-0000-0000-0000-000000000000`. It will use whatever index, source, sourcetype are configured in HEC. And the `host` of each event is the hostname of the machine which running fluentd.\n\n\n#### Example 2: SCS Ingest Configuration example\n",
                    "rendered": {
                      "text": "</match>\n```\n\nThis example is very basic, it just tells the plugin to send events to Splunk HEC on `https://12.34.56.78:8088` (https is the default protocol), using the HEC token `00000000-0000-0000-0000-000000000000`. It will use whatever index, source, sourcetype are configured in HEC. And the `host` of each event is the hostname of the machine which running fluentd.\n\n\n#### Example 2: SCS Ingest Configuration example\n",
                      "markdown": "`</match>\n```\n\nThis example is very basic, it just tells the plugin to send events to Splunk HEC on `https://12.34.56.78:8088` (https is the default protocol), using the HEC token `00000000-0000-0000-0000-000000000000`. It will use whatever index, source, sourcetype are configured in HEC. And the `host` of each event is the hostname of the machine which running fluentd.\n\n\n#### Example 2: SCS Ingest Configuration example\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 106,
                  "endLine": 416,
                  "endColumn": 110,
                  "snippet": {
                    "text": "\n#### idle_timeout (integer)\n\nThe default is five seconds. If a connection has not been used for five seconds, it is automatically reset at next use, in order to avoid attempting to send to a closed connection. Specifiy `nil` to prohibit any timeouts.\n\n#### read_timeout (integer)\n\n",
                    "rendered": {
                      "text": "\n#### idle_timeout (integer)\n\nThe default is five seconds. If a connection has not been used for five seconds, it is automatically reset at next use, in order to avoid attempting to send to a closed connection. Specifiy `nil` to prohibit any timeouts.\n\n#### read_timeout (integer)\n\n",
                      "markdown": "`\n#### idle_timeout (integer)\n\nThe default is five seconds. If a connection has not been used for five seconds, it is automatically reset at next use, in order to avoid attempting to send to a closed connection. Specifiy `nil` to prohibit any timeouts.\n\n#### read_timeout (integer)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 153,
                  "endLine": 301,
                  "endColumn": 157,
                  "snippet": {
                    "text": "\n#### When `data_type` is `event`\n\nIn this case, parameters inside `<fields>` are used as indexed fields and removed from the original input events. Please see the \"Add a \"fields\" property at the top JSON level\" [here](http://dev.splunk.com/view/event-collector/SP-CAAAFB6) for details. Given we have configuration like\n\n```\n<match **>\n",
                    "rendered": {
                      "text": "\n#### When `data_type` is `event`\n\nIn this case, parameters inside `<fields>` are used as indexed fields and removed from the original input events. Please see the \"Add a \"fields\" property at the top JSON level\" [here](http://dev.splunk.com/view/event-collector/SP-CAAAFB6) for details. Given we have configuration like\n\n```\n<match **>\n",
                      "markdown": "`\n#### When `data_type` is `event`\n\nIn this case, parameters inside `<fields>` are used as indexed fields and removed from the original input events. Please see the \"Add a \"fields\" property at the top JSON level\" [here](http://dev.splunk.com/view/event-collector/SP-CAAAFB6) for details. Given we have configuration like\n\n```\n<match **>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 93,
                  "endLine": 268,
                  "endColumn": 97,
                  "snippet": {
                    "text": "\n### sourcetype_key (string) (optional)\n\nField name that contains the sourcetype. Cannot set both `source` and `source_key` parameters at the same time.\n\n### time_key (string) (optional)\n\n",
                    "rendered": {
                      "text": "\n### sourcetype_key (string) (optional)\n\nField name that contains the sourcetype. Cannot set both `source` and `source_key` parameters at the same time.\n\n### time_key (string) (optional)\n\n",
                      "markdown": "`\n### sourcetype_key (string) (optional)\n\nField name that contains the sourcetype. Cannot set both `source` and `source_key` parameters at the same time.\n\n### time_key (string) (optional)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 52,
                  "endLine": 264,
                  "endColumn": 56,
                  "snippet": {
                    "text": "### sourcetype (string) (optional)\n\nThe sourcetype field for events. When not set, the sourcetype is decided by HEC.  \nCannot set both `source` and `source_key` parameters at the same time.  \n\n### sourcetype_key (string) (optional)\n\n",
                    "rendered": {
                      "text": "### sourcetype (string) (optional)\n\nThe sourcetype field for events. When not set, the sourcetype is decided by HEC.  \nCannot set both `source` and `source_key` parameters at the same time.  \n\n### sourcetype_key (string) (optional)\n\n",
                      "markdown": "`### sourcetype (string) (optional)\n\nThe sourcetype field for events. When not set, the sourcetype is decided by HEC.  \nCannot set both `source` and `source_key` parameters at the same time.  \n\n### sourcetype_key (string) (optional)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 82,
                  "endLine": 259,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\n### source_key (string) (optional)\n\nField name to contain source. Cannot set both `source` and `source_key` parameters at the same time.\n\n### sourcetype (string) (optional)\n\n",
                    "rendered": {
                      "text": "\n### source_key (string) (optional)\n\nField name to contain source. Cannot set both `source` and `source_key` parameters at the same time.\n\n### sourcetype (string) (optional)\n\n",
                      "markdown": "`\n### source_key (string) (optional)\n\nField name to contain source. Cannot set both `source` and `source_key` parameters at the same time.\n\n### sourcetype (string) (optional)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 52,
                  "endLine": 255,
                  "endColumn": 56,
                  "snippet": {
                    "text": "### source (string) (optional)\n\nThe source field for events. If this parameter is not set, the source will be decided by HEC.  \nCannot set both `source` and `source_key` parameters at the same time.  \n\n### source_key (string) (optional)\n\n",
                    "rendered": {
                      "text": "### source (string) (optional)\n\nThe source field for events. If this parameter is not set, the source will be decided by HEC.  \nCannot set both `source` and `source_key` parameters at the same time.  \n\n### source_key (string) (optional)\n\n",
                      "markdown": "`### source (string) (optional)\n\nThe source field for events. If this parameter is not set, the source will be decided by HEC.  \nCannot set both `source` and `source_key` parameters at the same time.  \n\n### source_key (string) (optional)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 75,
                  "endLine": 250,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n### host_key (string) (optional)\n\nKey for the host location. Cannot set both `host` and `host_key` parameters at the same time.  \n\n### source (string) (optional)\n\n",
                    "rendered": {
                      "text": "\n### host_key (string) (optional)\n\nKey for the host location. Cannot set both `host` and `host_key` parameters at the same time.  \n\n### source (string) (optional)\n\n",
                      "markdown": "`\n### host_key (string) (optional)\n\nKey for the host location. Cannot set both `host` and `host_key` parameters at the same time.  \n\n### source (string) (optional)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 78,
                  "endLine": 245,
                  "endColumn": 82,
                  "snippet": {
                    "text": "\n### host (string) (optional)\n\nThe host location for events. Cannot set both `host` and `host_key` parameters at the same time.  \nIf the parameter is not set, the default value is the hostname of the machine runnning fluentd.\n\n### host_key (string) (optional)\n",
                    "rendered": {
                      "text": "\n### host (string) (optional)\n\nThe host location for events. Cannot set both `host` and `host_key` parameters at the same time.  \nIf the parameter is not set, the default value is the hostname of the machine runnning fluentd.\n\n### host_key (string) (optional)\n",
                      "markdown": "`\n### host (string) (optional)\n\nThe host location for events. Cannot set both `host` and `host_key` parameters at the same time.  \nIf the parameter is not set, the default value is the hostname of the machine runnning fluentd.\n\n### host_key (string) (optional)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 102,
                  "endLine": 241,
                  "endColumn": 106,
                  "snippet": {
                    "text": "\n### index_key (string) (optional)\n\nThe field name that contains the Splunk index name. Cannot set both `index` and `index_key` parameters at the same time.\n\n### host (string) (optional)\n\n",
                    "rendered": {
                      "text": "\n### index_key (string) (optional)\n\nThe field name that contains the Splunk index name. Cannot set both `index` and `index_key` parameters at the same time.\n\n### host (string) (optional)\n\n",
                      "markdown": "`\n### index_key (string) (optional)\n\nThe field name that contains the Splunk index name. Cannot set both `index` and `index_key` parameters at the same time.\n\n### host (string) (optional)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 80,
                  "endLine": 237,
                  "endColumn": 84,
                  "snippet": {
                    "text": "### index (string) (optional)\n\nIdentifier for the Splunk index to be used for indexing events. If this parameter is not set,  \nthe indexer is chosen by HEC. Cannot set both `index` and `index_key` parameters at the same time.\n\n### index_key (string) (optional)\n\n",
                    "rendered": {
                      "text": "### index (string) (optional)\n\nIdentifier for the Splunk index to be used for indexing events. If this parameter is not set,  \nthe indexer is chosen by HEC. Cannot set both `index` and `index_key` parameters at the same time.\n\n### index_key (string) (optional)\n\n",
                      "markdown": "`### index (string) (optional)\n\nIdentifier for the Splunk index to be used for indexing events. If this parameter is not set,  \nthe indexer is chosen by HEC. Cannot set both `index` and `index_key` parameters at the same time.\n\n### index_key (string) (optional)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 281,
                  "endLine": 65,
                  "endColumn": 285,
                  "snippet": {
                    "text": "</match>\n```\n\nThis example shows the configuration to be used for sending events to ingest API. This configuration shows how to use `service_client_identifier`, `service_client_secret_key` to get token from `token_endpoint` and send events to `ingest_api_host` for the tenant `ingest_api_tenant` at the endpoint `ingest_api_events_endpoint`. The `debug_http` flag indicates whether the user wants to print debug logs to stdout.\n\n#### Example 3: Overwrite HEC defaults\n\n",
                    "rendered": {
                      "text": "</match>\n```\n\nThis example shows the configuration to be used for sending events to ingest API. This configuration shows how to use `service_client_identifier`, `service_client_secret_key` to get token from `token_endpoint` and send events to `ingest_api_host` for the tenant `ingest_api_tenant` at the endpoint `ingest_api_events_endpoint`. The `debug_http` flag indicates whether the user wants to print debug logs to stdout.\n\n#### Example 3: Overwrite HEC defaults\n\n",
                      "markdown": "`</match>\n```\n\nThis example shows the configuration to be used for sending events to ingest API. This configuration shows how to use `service_client_identifier`, `service_client_secret_key` to get token from `token_endpoint` and send events to `ingest_api_host` for the tenant `ingest_api_tenant` at the endpoint `ingest_api_events_endpoint`. The `debug_http` flag indicates whether the user wants to print debug logs to stdout.\n\n#### Example 3: Overwrite HEC defaults\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 424,
                  "startColumn": 13,
                  "endLine": 424,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n#### open_timeout (integer)\n\nThe amount of time to wait for a connection to be opened. The default is `nil`, which means no timeout.\n\n### SSL parameters\n\n",
                    "rendered": {
                      "text": "\n#### open_timeout (integer)\n\nThe amount of time to wait for a connection to be opened. The default is `nil`, which means no timeout.\n\n### SSL parameters\n\n",
                      "markdown": "`\n#### open_timeout (integer)\n\nThe amount of time to wait for a connection to be opened. The default is `nil`, which means no timeout.\n\n### SSL parameters\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 420,
                  "startColumn": 13,
                  "endLine": 420,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n#### read_timeout (integer)\n\nThe amount of time allowed between reading two chunks from the socket. The default value is `nil`, which means no timeout. \n\n#### open_timeout (integer)\n\n",
                    "rendered": {
                      "text": "\n#### read_timeout (integer)\n\nThe amount of time allowed between reading two chunks from the socket. The default value is `nil`, which means no timeout. \n\n#### open_timeout (integer)\n\n",
                      "markdown": "`\n#### read_timeout (integer)\n\nThe amount of time allowed between reading two chunks from the socket. The default value is `nil`, which means no timeout. \n\n#### open_timeout (integer)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/README.md"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 160,
                  "endLine": 301,
                  "endColumn": 165,
                  "snippet": {
                    "text": "\n#### When `data_type` is `event`\n\nIn this case, parameters inside `<fields>` are used as indexed fields and removed from the original input events. Please see the \"Add a \"fields\" property at the top JSON level\" [here](http://dev.splunk.com/view/event-collector/SP-CAAAFB6) for details. Given we have configuration like\n\n```\n<match **>\n",
                    "rendered": {
                      "text": "\n#### When `data_type` is `event`\n\nIn this case, parameters inside `<fields>` are used as indexed fields and removed from the original input events. Please see the \"Add a \"fields\" property at the top JSON level\" [here](http://dev.splunk.com/view/event-collector/SP-CAAAFB6) for details. Given we have configuration like\n\n```\n<match **>\n",
                      "markdown": "`\n#### When `data_type` is `event`\n\nIn this case, parameters inside `<fields>` are used as indexed fields and removed from the original input events. Please see the \"Add a \"fields\" property at the top JSON level\" [here](http://dev.splunk.com/view/event-collector/SP-CAAAFB6) for details. Given we have configuration like\n\n```\n<match **>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/CODE_OF_CONDUCT.md"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 9,
                  "endLine": 71,
                  "endColumn": 13,
                  "snippet": {
                    "text": "## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                    "rendered": {
                      "text": "## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                      "markdown": "`## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/CODE_OF_CONDUCT.md"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 39,
                  "endLine": 58,
                  "endColumn": 43,
                  "snippet": {
                    "text": "## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at zliang@splunk.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\n",
                    "rendered": {
                      "text": "## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at zliang@splunk.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\n",
                      "markdown": "`## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at zliang@splunk.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-splunk-hec.zip/CODE_OF_CONDUCT.md"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 14,
                  "endLine": 52,
                  "endColumn": 18,
                  "snippet": {
                    "text": "when an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n",
                    "rendered": {
                      "text": "when an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n",
                      "markdown": "`when an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}