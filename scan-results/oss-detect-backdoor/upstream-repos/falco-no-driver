{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 36,
                  "endLine": 305,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\tASSERT_TRUE(filter->is_equal(macro.get()));\n\n\tmacro->left = filter_ast::field_expr::create(\"another.field\", \"\");\n\tASSERT_FALSE(filter->is_equal(macro.get()));\n}\n",
                    "rendered": {
                      "text": "\tASSERT_TRUE(filter->is_equal(macro.get()));\n\n\tmacro->left = filter_ast::field_expr::create(\"another.field\", \"\");\n\tASSERT_FALSE(filter->is_equal(macro.get()));\n}\n",
                      "markdown": "`\tASSERT_TRUE(filter->is_equal(macro.get()));\n\n\tmacro->left = filter_ast::field_expr::create(\"another.field\", \"\");\n\tASSERT_FALSE(filter->is_equal(macro.get()));\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 35,
                  "endLine": 302,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos);\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(macro.get()));\n\n\tmacro->left = filter_ast::field_expr::create(\"another.field\", \"\");\n\tASSERT_FALSE(filter->is_equal(macro.get()));\n",
                    "rendered": {
                      "text": "\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos);\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(macro.get()));\n\n\tmacro->left = filter_ast::field_expr::create(\"another.field\", \"\");\n\tASSERT_FALSE(filter->is_equal(macro.get()));\n",
                      "markdown": "`\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos);\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(macro.get()));\n\n\tmacro->left = filter_ast::field_expr::create(\"another.field\", \"\");\n\tASSERT_FALSE(filter->is_equal(macro.get()));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 37,
                  "endLine": 276,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos_1);\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(a_filter->is_equal(macro.get()));\n\n\tresolver.set_macro(MACRO_NAME, NULL);\n\tASSERT_FALSE(resolver.run(b_filter));\n",
                    "rendered": {
                      "text": "\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos_1);\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(a_filter->is_equal(macro.get()));\n\n\tresolver.set_macro(MACRO_NAME, NULL);\n\tASSERT_FALSE(resolver.run(b_filter));\n",
                      "markdown": "`\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos_1);\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(a_filter->is_equal(macro.get()));\n\n\tresolver.set_macro(MACRO_NAME, NULL);\n\tASSERT_FALSE(resolver.run(b_filter));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 45,
                  "endLine": 254,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\tASSERT_EQ(resolver.get_unknown_macros().size(), 1);\n\tASSERT_STREQ(resolver.get_unknown_macros().begin()->first.c_str(), MACRO_B_NAME);\n\tASSERT_EQ(resolver.get_unknown_macros().begin()->second, b_macro_pos);\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n}\n\nTEST(MacroResolver, should_undefine_macro) {\n",
                    "rendered": {
                      "text": "\tASSERT_EQ(resolver.get_unknown_macros().size(), 1);\n\tASSERT_STREQ(resolver.get_unknown_macros().begin()->first.c_str(), MACRO_B_NAME);\n\tASSERT_EQ(resolver.get_unknown_macros().begin()->second, b_macro_pos);\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n}\n\nTEST(MacroResolver, should_undefine_macro) {\n",
                      "markdown": "`\tASSERT_EQ(resolver.get_unknown_macros().size(), 1);\n\tASSERT_STREQ(resolver.get_unknown_macros().begin()->first.c_str(), MACRO_B_NAME);\n\tASSERT_EQ(resolver.get_unknown_macros().begin()->second, b_macro_pos);\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n}\n\nTEST(MacroResolver, should_undefine_macro) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 37,
                  "endLine": 242,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n\tstd::shared_ptr<filter_ast::expr> filter =\n\t        filter_ast::identifier_expr::create(MACRO_A_NAME, a_macro_pos);\n\tauto expected_filter = clone(a_macro.get());\n\n\tfilter_macro_resolver resolver;\n\tresolver.set_macro(MACRO_A_NAME, a_macro);\n",
                    "rendered": {
                      "text": "\n\tstd::shared_ptr<filter_ast::expr> filter =\n\t        filter_ast::identifier_expr::create(MACRO_A_NAME, a_macro_pos);\n\tauto expected_filter = clone(a_macro.get());\n\n\tfilter_macro_resolver resolver;\n\tresolver.set_macro(MACRO_A_NAME, a_macro);\n",
                      "markdown": "`\n\tstd::shared_ptr<filter_ast::expr> filter =\n\t        filter_ast::identifier_expr::create(MACRO_A_NAME, a_macro_pos);\n\tauto expected_filter = clone(a_macro.get());\n\n\tfilter_macro_resolver resolver;\n\tresolver.set_macro(MACRO_A_NAME, a_macro);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 45,
                  "endLine": 207,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n}\n\nTEST(MacroResolver, should_find_unknown_macros) {\n",
                    "rendered": {
                      "text": "\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n}\n\nTEST(MacroResolver, should_find_unknown_macros) {\n",
                      "markdown": "`\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n}\n\nTEST(MacroResolver, should_find_unknown_macros) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 45,
                  "endLine": 201,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\tASSERT_EQ(b_resolved_itr->second, b_macro_pos);\n\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n\n\t// second run\n\tASSERT_FALSE(resolver.run(filter));\n",
                    "rendered": {
                      "text": "\tASSERT_EQ(b_resolved_itr->second, b_macro_pos);\n\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n\n\t// second run\n\tASSERT_FALSE(resolver.run(filter));\n",
                      "markdown": "`\tASSERT_EQ(b_resolved_itr->second, b_macro_pos);\n\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n\n\t// second run\n\tASSERT_FALSE(resolver.run(filter));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 45,
                  "endLine": 152,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n}\n\nTEST(MacroResolver, should_resolve_macros_on_a_filter_AST_nested_macros) {\n",
                    "rendered": {
                      "text": "\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n}\n\nTEST(MacroResolver, should_resolve_macros_on_a_filter_AST_nested_macros) {\n",
                      "markdown": "`\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n}\n\nTEST(MacroResolver, should_resolve_macros_on_a_filter_AST_nested_macros) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 45,
                  "endLine": 146,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_STREQ(b_resolved_itr->first.c_str(), MACRO_B_NAME);\n\tASSERT_EQ(b_resolved_itr->second, b_macro_pos);\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n\n\t// second run\n\tASSERT_FALSE(resolver.run(filter));\n",
                    "rendered": {
                      "text": "\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_STREQ(b_resolved_itr->first.c_str(), MACRO_B_NAME);\n\tASSERT_EQ(b_resolved_itr->second, b_macro_pos);\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n\n\t// second run\n\tASSERT_FALSE(resolver.run(filter));\n",
                      "markdown": "`\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_STREQ(b_resolved_itr->first.c_str(), MACRO_B_NAME);\n\tASSERT_EQ(b_resolved_itr->second, b_macro_pos);\n\tASSERT_TRUE(filter->is_equal(expected_filter.get()));\n\n\t// second run\n\tASSERT_FALSE(resolver.run(filter));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 36,
                  "endLine": 126,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n\tstd::vector<std::unique_ptr<filter_ast::expr>> expected_or;\n\texpected_or.push_back(clone(a_macro.get()));\n\texpected_or.push_back(clone(b_macro.get()));\n\tstd::shared_ptr<filter_ast::expr> expected_filter = filter_ast::or_expr::create(expected_or);\n\n\tfilter_macro_resolver resolver;\n",
                    "rendered": {
                      "text": "\n\tstd::vector<std::unique_ptr<filter_ast::expr>> expected_or;\n\texpected_or.push_back(clone(a_macro.get()));\n\texpected_or.push_back(clone(b_macro.get()));\n\tstd::shared_ptr<filter_ast::expr> expected_filter = filter_ast::or_expr::create(expected_or);\n\n\tfilter_macro_resolver resolver;\n",
                      "markdown": "`\n\tstd::vector<std::unique_ptr<filter_ast::expr>> expected_or;\n\texpected_or.push_back(clone(a_macro.get()));\n\texpected_or.push_back(clone(b_macro.get()));\n\tstd::shared_ptr<filter_ast::expr> expected_filter = filter_ast::or_expr::create(expected_or);\n\n\tfilter_macro_resolver resolver;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 36,
                  "endLine": 125,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\tstd::shared_ptr<filter_ast::expr> filter = filter_ast::or_expr::create(filter_or);\n\n\tstd::vector<std::unique_ptr<filter_ast::expr>> expected_or;\n\texpected_or.push_back(clone(a_macro.get()));\n\texpected_or.push_back(clone(b_macro.get()));\n\tstd::shared_ptr<filter_ast::expr> expected_filter = filter_ast::or_expr::create(expected_or);\n\n",
                    "rendered": {
                      "text": "\tstd::shared_ptr<filter_ast::expr> filter = filter_ast::or_expr::create(filter_or);\n\n\tstd::vector<std::unique_ptr<filter_ast::expr>> expected_or;\n\texpected_or.push_back(clone(a_macro.get()));\n\texpected_or.push_back(clone(b_macro.get()));\n\tstd::shared_ptr<filter_ast::expr> expected_filter = filter_ast::or_expr::create(expected_or);\n\n",
                      "markdown": "`\tstd::shared_ptr<filter_ast::expr> filter = filter_ast::or_expr::create(filter_or);\n\n\tstd::vector<std::unique_ptr<filter_ast::expr>> expected_or;\n\texpected_or.push_back(clone(a_macro.get()));\n\texpected_or.push_back(clone(b_macro.get()));\n\tstd::shared_ptr<filter_ast::expr> expected_filter = filter_ast::or_expr::create(expected_or);\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 35,
                  "endLine": 105,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tASSERT_EQ(filter.get(), old_filter_ptr);\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(macro.get()));\n}\n\nTEST(MacroResolver, should_resolve_macros_on_a_filter_AST_multiple_macros) {\n",
                    "rendered": {
                      "text": "\tASSERT_EQ(filter.get(), old_filter_ptr);\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(macro.get()));\n}\n\nTEST(MacroResolver, should_resolve_macros_on_a_filter_AST_multiple_macros) {\n",
                      "markdown": "`\tASSERT_EQ(filter.get(), old_filter_ptr);\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(macro.get()));\n}\n\nTEST(MacroResolver, should_resolve_macros_on_a_filter_AST_multiple_macros) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 17,
                  "endLine": 102,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t// second run\n\told_filter_ptr = filter.get();\n\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_EQ(filter.get(), old_filter_ptr);\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(macro.get()));\n",
                    "rendered": {
                      "text": "\t// second run\n\told_filter_ptr = filter.get();\n\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_EQ(filter.get(), old_filter_ptr);\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(macro.get()));\n",
                      "markdown": "`\t// second run\n\told_filter_ptr = filter.get();\n\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_EQ(filter.get(), old_filter_ptr);\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(macro.get()));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 24,
                  "endLine": 100,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\tASSERT_TRUE(filter->is_equal(macro.get()));\n\n\t// second run\n\told_filter_ptr = filter.get();\n\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_EQ(filter.get(), old_filter_ptr);\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n",
                    "rendered": {
                      "text": "\tASSERT_TRUE(filter->is_equal(macro.get()));\n\n\t// second run\n\told_filter_ptr = filter.get();\n\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_EQ(filter.get(), old_filter_ptr);\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n",
                      "markdown": "`\tASSERT_TRUE(filter->is_equal(macro.get()));\n\n\t// second run\n\told_filter_ptr = filter.get();\n\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_EQ(filter.get(), old_filter_ptr);\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 35,
                  "endLine": 97,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos);\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(macro.get()));\n\n\t// second run\n\told_filter_ptr = filter.get();\n",
                    "rendered": {
                      "text": "\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos);\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(macro.get()));\n\n\t// second run\n\told_filter_ptr = filter.get();\n",
                      "markdown": "`\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos);\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(macro.get()));\n\n\t// second run\n\told_filter_ptr = filter.get();\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 17,
                  "endLine": 92,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t// first run\n\tfilter_ast::expr* old_filter_ptr = filter.get();\n\tASSERT_TRUE(resolver.run(filter));\n\tASSERT_NE(filter.get(), old_filter_ptr);\n\tASSERT_EQ(resolver.get_resolved_macros().size(), 1);\n\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos);\n",
                    "rendered": {
                      "text": "\t// first run\n\tfilter_ast::expr* old_filter_ptr = filter.get();\n\tASSERT_TRUE(resolver.run(filter));\n\tASSERT_NE(filter.get(), old_filter_ptr);\n\tASSERT_EQ(resolver.get_resolved_macros().size(), 1);\n\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos);\n",
                      "markdown": "`\t// first run\n\tfilter_ast::expr* old_filter_ptr = filter.get();\n\tASSERT_TRUE(resolver.run(filter));\n\tASSERT_NE(filter.get(), old_filter_ptr);\n\tASSERT_EQ(resolver.get_resolved_macros().size(), 1);\n\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 42,
                  "endLine": 90,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\tresolver.set_macro(MACRO_NAME, macro);\n\n\t// first run\n\tfilter_ast::expr* old_filter_ptr = filter.get();\n\tASSERT_TRUE(resolver.run(filter));\n\tASSERT_NE(filter.get(), old_filter_ptr);\n\tASSERT_EQ(resolver.get_resolved_macros().size(), 1);\n",
                    "rendered": {
                      "text": "\tresolver.set_macro(MACRO_NAME, macro);\n\n\t// first run\n\tfilter_ast::expr* old_filter_ptr = filter.get();\n\tASSERT_TRUE(resolver.run(filter));\n\tASSERT_NE(filter.get(), old_filter_ptr);\n\tASSERT_EQ(resolver.get_resolved_macros().size(), 1);\n",
                      "markdown": "`\tresolver.set_macro(MACRO_NAME, macro);\n\n\t// first run\n\tfilter_ast::expr* old_filter_ptr = filter.get();\n\tASSERT_TRUE(resolver.run(filter));\n\tASSERT_NE(filter.get(), old_filter_ptr);\n\tASSERT_EQ(resolver.get_resolved_macros().size(), 1);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 38,
                  "endLine": 73,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected.get()));\n}\n\nTEST(MacroResolver, should_resolve_macros_on_a_filter_AST_single_node) {\n",
                    "rendered": {
                      "text": "\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected.get()));\n}\n\nTEST(MacroResolver, should_resolve_macros_on_a_filter_AST_single_node) {\n",
                      "markdown": "`\tASSERT_FALSE(resolver.run(filter));\n\tASSERT_TRUE(resolver.get_resolved_macros().empty());\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected.get()));\n}\n\nTEST(MacroResolver, should_resolve_macros_on_a_filter_AST_single_node) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 38,
                  "endLine": 67,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos);\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected.get()));\n\n\t// second run\n\tASSERT_FALSE(resolver.run(filter));\n",
                    "rendered": {
                      "text": "\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos);\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected.get()));\n\n\t// second run\n\tASSERT_FALSE(resolver.run(filter));\n",
                      "markdown": "`\tASSERT_STREQ(resolver.get_resolved_macros().begin()->first.c_str(), MACRO_NAME);\n\tASSERT_EQ(resolver.get_resolved_macros().begin()->second, macro_pos);\n\tASSERT_TRUE(resolver.get_unknown_macros().empty());\n\tASSERT_TRUE(filter->is_equal(expected.get()));\n\n\t// second run\n\tASSERT_FALSE(resolver.run(filter));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 64,
                  "endLine": 55,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\texpected_and.push_back(\n\t        filter_ast::unary_check_expr::create(filter_ast::field_expr::create(\"evt.name\", \"\"),\n\t                                             \"exists\"));\n\texpected_and.push_back(filter_ast::not_expr::create(clone(macro.get())));\n\tstd::shared_ptr<filter_ast::expr> expected = filter_ast::and_expr::create(expected_and);\n\n\tfilter_macro_resolver resolver;\n",
                    "rendered": {
                      "text": "\texpected_and.push_back(\n\t        filter_ast::unary_check_expr::create(filter_ast::field_expr::create(\"evt.name\", \"\"),\n\t                                             \"exists\"));\n\texpected_and.push_back(filter_ast::not_expr::create(clone(macro.get())));\n\tstd::shared_ptr<filter_ast::expr> expected = filter_ast::and_expr::create(expected_and);\n\n\tfilter_macro_resolver resolver;\n",
                      "markdown": "`\texpected_and.push_back(\n\t        filter_ast::unary_check_expr::create(filter_ast::field_expr::create(\"evt.name\", \"\"),\n\t                                             \"exists\"));\n\texpected_and.push_back(filter_ast::not_expr::create(clone(macro.get())));\n\tstd::shared_ptr<filter_ast::expr> expected = filter_ast::and_expr::create(expected_and);\n\n\tfilter_macro_resolver resolver;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rulesets.cpp"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 35,
                  "endLine": 146,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tauto f = create_factory(&inspector, filterlist);\n\tauto r = create_ruleset(f);\n\tauto ast = create_ast(f);\n\tauto filter = create_filter(f, ast.get());\n\n\tfalco_rule rule_A = {};\n\trule_A.name = \"rule_A\";\n",
                    "rendered": {
                      "text": "\tauto f = create_factory(&inspector, filterlist);\n\tauto r = create_ruleset(f);\n\tauto ast = create_ast(f);\n\tauto filter = create_filter(f, ast.get());\n\n\tfalco_rule rule_A = {};\n\trule_A.name = \"rule_A\";\n",
                      "markdown": "`\tauto f = create_factory(&inspector, filterlist);\n\tauto r = create_ruleset(f);\n\tauto ast = create_ast(f);\n\tauto filter = create_filter(f, ast.get());\n\n\tfalco_rule rule_A = {};\n\trule_A.name = \"rule_A\";\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rulesets.cpp"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 35,
                  "endLine": 54,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tauto f = create_factory(&inspector, filterlist);\n\tauto r = create_ruleset(f);\n\tauto ast = create_ast(f);\n\tauto filter = create_filter(f, ast.get());\n\n\tfalco_rule rule_A = {};\n\trule_A.name = \"rule_A\";\n",
                    "rendered": {
                      "text": "\tauto f = create_factory(&inspector, filterlist);\n\tauto r = create_ruleset(f);\n\tauto ast = create_ast(f);\n\tauto filter = create_filter(f, ast.get());\n\n\tfalco_rule rule_A = {};\n\trule_A.name = \"rule_A\";\n",
                      "markdown": "`\tauto f = create_factory(&inspector, filterlist);\n\tauto r = create_ruleset(f);\n\tauto ast = create_ast(f);\n\tauto filter = create_filter(f, ast.get());\n\n\tfalco_rule rule_A = {};\n\trule_A.name = \"rule_A\";\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 1022,
                  "startColumn": 34,
                  "endLine": 1023,
                  "snippet": {
                    "text": "\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n    - name: test_exception\n",
                    "rendered": {
                      "text": "\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n    - name: test_exception\n",
                      "markdown": "`\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n    - name: test_exception\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 1008,
                  "startColumn": 12,
                  "endLine": 1008,
                  "endColumn": 18,
                  "snippet": {
                    "text": "- rule: test_rule\n  exceptions:\n    - name: test_exception\n      value: curl 1.1.1.1\n  override:\n    exceptions: append\n)END\";\n",
                    "rendered": {
                      "text": "- rule: test_rule\n  exceptions:\n    - name: test_exception\n      value: curl 1.1.1.1\n  override:\n    exceptions: append\n)END\";\n",
                      "markdown": "`- rule: test_rule\n  exceptions:\n    - name: test_exception\n      value: curl 1.1.1.1\n  override:\n    exceptions: append\n)END\";\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 995,
                  "startColumn": 34,
                  "endLine": 996,
                  "snippet": {
                    "text": "\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n    - name: test_exception\n",
                    "rendered": {
                      "text": "\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n    - name: test_exception\n",
                      "markdown": "`\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n    - name: test_exception\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 982,
                  "startColumn": 12,
                  "endLine": 982,
                  "endColumn": 18,
                  "snippet": {
                    "text": "- rule: test_rule\n  exceptions:\n    - name: test_exception\n      value: curl 1.1.1.1\n  append: true\n)END\";\n\n",
                    "rendered": {
                      "text": "- rule: test_rule\n  exceptions:\n    - name: test_exception\n      value: curl 1.1.1.1\n  append: true\n)END\";\n\n",
                      "markdown": "`- rule: test_rule\n  exceptions:\n    - name: test_exception\n      value: curl 1.1.1.1\n  append: true\n)END\";\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 969,
                  "startColumn": 34,
                  "endLine": 970,
                  "snippet": {
                    "text": "\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n    - name: test_exception\n",
                    "rendered": {
                      "text": "\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n    - name: test_exception\n",
                      "markdown": "`\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n    - name: test_exception\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 927,
                  "startColumn": 35,
                  "endLine": 927,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\tASSERT_TRUE(load_rules(rules_content, \"rules.yaml\"));\n\tASSERT_VALIDATION_STATUS(yaml_helper::validation_ok) << m_load_result->schema_validation();\n\tASSERT_EQ(get_compiled_rule_condition(\"test_rule\"),\n\t          \"((proc.cmdline contains curl or proc.cmdline contains wget) and not proc.cmdline \"\n\t          \"contains \\\"curl 127.0.0.1\\\")\");\n}\n\n",
                    "rendered": {
                      "text": "\tASSERT_TRUE(load_rules(rules_content, \"rules.yaml\"));\n\tASSERT_VALIDATION_STATUS(yaml_helper::validation_ok) << m_load_result->schema_validation();\n\tASSERT_EQ(get_compiled_rule_condition(\"test_rule\"),\n\t          \"((proc.cmdline contains curl or proc.cmdline contains wget) and not proc.cmdline \"\n\t          \"contains \\\"curl 127.0.0.1\\\")\");\n}\n\n",
                      "markdown": "`\tASSERT_TRUE(load_rules(rules_content, \"rules.yaml\"));\n\tASSERT_VALIDATION_STATUS(yaml_helper::validation_ok) << m_load_result->schema_validation();\n\tASSERT_EQ(get_compiled_rule_condition(\"test_rule\"),\n\t          \"((proc.cmdline contains curl or proc.cmdline contains wget) and not proc.cmdline \"\n\t          \"contains \\\"curl 127.0.0.1\\\")\");\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 913,
                  "startColumn": 64,
                  "endLine": 914,
                  "snippet": {
                    "text": "\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl or proc.cmdline contains wget\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n    - name: test_exception\n",
                    "rendered": {
                      "text": "\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl or proc.cmdline contains wget\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n    - name: test_exception\n",
                      "markdown": "`\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl or proc.cmdline contains wget\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n    - name: test_exception\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 913,
                  "startColumn": 34,
                  "endLine": 913,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl or proc.cmdline contains wget\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n",
                    "rendered": {
                      "text": "\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl or proc.cmdline contains wget\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n",
                      "markdown": "`\tstd::string rules_content = R\"END(\n- rule: test_rule\n  desc: test rule\n  condition: proc.cmdline contains curl or proc.cmdline contains wget\n  output: command=%proc.cmdline\n  priority: INFO\n  exceptions:\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 809,
                  "startColumn": 24,
                  "endLine": 810,
                  "snippet": {
                    "text": "\n- rule: test_rule\n  desc: redefined rule syntax\n  condition: proc.name = cat\n  output: user=%user.name command=%proc.cmdline file=%fd.name\n  priority: WARNING\n  enabled: true\n)END\";\n",
                    "rendered": {
                      "text": "\n- rule: test_rule\n  desc: redefined rule syntax\n  condition: proc.name = cat\n  output: user=%user.name command=%proc.cmdline file=%fd.name\n  priority: WARNING\n  enabled: true\n)END\";\n",
                      "markdown": "`\n- rule: test_rule\n  desc: redefined rule syntax\n  condition: proc.name = cat\n  output: user=%user.name command=%proc.cmdline file=%fd.name\n  priority: WARNING\n  enabled: true\n)END\";\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 785,
                  "startColumn": 28,
                  "endLine": 786,
                  "snippet": {
                    "text": "  enabled: false\n\n- rule: test_rule\n  condition: and proc.name = cat\n  append: true\n  enabled: true\n)END\";\n\n",
                    "rendered": {
                      "text": "  enabled: false\n\n- rule: test_rule\n  condition: and proc.name = cat\n  append: true\n  enabled: true\n)END\";\n\n",
                      "markdown": "`  enabled: false\n\n- rule: test_rule\n  condition: and proc.name = cat\n  append: true\n  enabled: true\n)END\";\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 686,
                  "startColumn": 28,
                  "endLine": 687,
                  "snippet": {
                    "text": "\n- rule: test_rule\n  desc: correct override\n  condition: and proc.name = cat\n  enabled: true\n  override:\n    desc: replace\n    condition: append\n",
                    "rendered": {
                      "text": "\n- rule: test_rule\n  desc: correct override\n  condition: and proc.name = cat\n  enabled: true\n  override:\n    desc: replace\n    condition: append\n",
                      "markdown": "`\n- rule: test_rule\n  desc: correct override\n  condition: and proc.name = cat\n  enabled: true\n  override:\n    desc: replace\n    condition: append\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 662,
                  "startColumn": 28,
                  "endLine": 663,
                  "snippet": {
                    "text": "\n- rule: test_rule\n  desc: missing enabled key\n  condition: and proc.name = cat\n  override:\n    desc: replace\n    condition: append\n    enabled: replace\n",
                    "rendered": {
                      "text": "\n- rule: test_rule\n  desc: missing enabled key\n  condition: and proc.name = cat\n  override:\n    desc: replace\n    condition: append\n    enabled: replace\n",
                      "markdown": "`\n- rule: test_rule\n  desc: missing enabled key\n  condition: and proc.name = cat\n  override:\n    desc: replace\n    condition: append\n    enabled: replace\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 639,
                  "startColumn": 28,
                  "endLine": 640,
                  "snippet": {
                    "text": "\n- rule: failing_rule\n  desc: an appended incorrect field\n  condition: and proc.name = cat\n  priority: WARNING\n  override:\n    desc: replace\n    condition: append\n",
                    "rendered": {
                      "text": "\n- rule: failing_rule\n  desc: an appended incorrect field\n  condition: and proc.name = cat\n  priority: WARNING\n  override:\n    desc: replace\n    condition: append\n",
                      "markdown": "`\n- rule: failing_rule\n  desc: an appended incorrect field\n  condition: and proc.name = cat\n  priority: WARNING\n  override:\n    desc: replace\n    condition: append\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 451,
                  "startColumn": 28,
                  "endLine": 452,
                  "snippet": {
                    "text": "  priority: INFO\n\n- rule: test_rule\n  condition: and proc.name = cat\n  append: true\n)END\";\n\n\tASSERT_TRUE(load_rules(rules_content, \"rules.yaml\"));\n",
                    "rendered": {
                      "text": "  priority: INFO\n\n- rule: test_rule\n  condition: and proc.name = cat\n  append: true\n)END\";\n\n\tASSERT_TRUE(load_rules(rules_content, \"rules.yaml\"));\n",
                      "markdown": "`  priority: INFO\n\n- rule: test_rule\n  condition: and proc.name = cat\n  append: true\n)END\";\n\n\tASSERT_TRUE(load_rules(rules_content, \"rules.yaml\"));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 431,
                  "startColumn": 28,
                  "endLine": 432,
                  "snippet": {
                    "text": "  priority: INFO\n\n- rule: test_rule\n  condition: and proc.name = cat\n  override:\n    condition: append\n)END\";\n\n",
                    "rendered": {
                      "text": "  priority: INFO\n\n- rule: test_rule\n  condition: and proc.name = cat\n  override:\n    condition: append\n)END\";\n\n",
                      "markdown": "`  priority: INFO\n\n- rule: test_rule\n  condition: and proc.name = cat\n  override:\n    condition: append\n)END\";\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 406,
                  "startColumn": 28,
                  "endLine": 407,
                  "snippet": {
                    "text": "TEST_F(test_falco_engine, rule_append_before_rule_definition) {\n\tstd::string rules_content = R\"END(\n- rule: test_rule\n  condition: and proc.name = cat\n  append: true\n\n- rule: test_rule\n  desc: simple rule\n",
                    "rendered": {
                      "text": "TEST_F(test_falco_engine, rule_append_before_rule_definition) {\n\tstd::string rules_content = R\"END(\n- rule: test_rule\n  condition: and proc.name = cat\n  append: true\n\n- rule: test_rule\n  desc: simple rule\n",
                      "markdown": "`TEST_F(test_falco_engine, rule_append_before_rule_definition) {\n\tstd::string rules_content = R\"END(\n- rule: test_rule\n  condition: and proc.name = cat\n  append: true\n\n- rule: test_rule\n  desc: simple rule\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 28,
                  "endLine": 387,
                  "snippet": {
                    "text": "TEST_F(test_falco_engine, rule_override_replace_before_rule_definition) {\n\tstd::string rules_content = R\"END(\n- rule: test_rule\n  condition: and proc.name = cat\n  override:\n    condition: replace\n\n- rule: test_rule\n",
                    "rendered": {
                      "text": "TEST_F(test_falco_engine, rule_override_replace_before_rule_definition) {\n\tstd::string rules_content = R\"END(\n- rule: test_rule\n  condition: and proc.name = cat\n  override:\n    condition: replace\n\n- rule: test_rule\n",
                      "markdown": "`TEST_F(test_falco_engine, rule_override_replace_before_rule_definition) {\n\tstd::string rules_content = R\"END(\n- rule: test_rule\n  condition: and proc.name = cat\n  override:\n    condition: replace\n\n- rule: test_rule\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 28,
                  "endLine": 367,
                  "snippet": {
                    "text": "TEST_F(test_falco_engine, rule_override_append_before_rule_definition) {\n\tstd::string rules_content = R\"END(\n- rule: test_rule\n  condition: and proc.name = cat\n  override:\n    condition: append\n\n- rule: test_rule\n",
                    "rendered": {
                      "text": "TEST_F(test_falco_engine, rule_override_append_before_rule_definition) {\n\tstd::string rules_content = R\"END(\n- rule: test_rule\n  condition: and proc.name = cat\n  override:\n    condition: append\n\n- rule: test_rule\n",
                      "markdown": "`TEST_F(test_falco_engine, rule_override_append_before_rule_definition) {\n\tstd::string rules_content = R\"END(\n- rule: test_rule\n  condition: and proc.name = cat\n  override:\n    condition: append\n\n- rule: test_rule\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 28,
                  "endLine": 223,
                  "snippet": {
                    "text": "\n- rule: failing_rule\n  desc: an appended incorrect field\n  condition: and proc.name = cat\n  append: true\n  override:\n    desc: replace\n    condition: append\n",
                    "rendered": {
                      "text": "\n- rule: failing_rule\n  desc: an appended incorrect field\n  condition: and proc.name = cat\n  append: true\n  override:\n    desc: replace\n    condition: append\n",
                      "markdown": "`\n- rule: failing_rule\n  desc: an appended incorrect field\n  condition: and proc.name = cat\n  append: true\n  override:\n    desc: replace\n    condition: append\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 28,
                  "endLine": 198,
                  "snippet": {
                    "text": "\n- rule: failing_rule\n  desc: an appended incorrect field\n  condition: and proc.name = cat\n  priority: WARNING\n  override:\n    desc: replace\n    condition: append\n",
                    "rendered": {
                      "text": "\n- rule: failing_rule\n  desc: an appended incorrect field\n  condition: and proc.name = cat\n  priority: WARNING\n  override:\n    desc: replace\n    condition: append\n",
                      "markdown": "`\n- rule: failing_rule\n  desc: an appended incorrect field\n  condition: and proc.name = cat\n  priority: WARNING\n  override:\n    desc: replace\n    condition: append\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 28,
                  "endLine": 162,
                  "snippet": {
                    "text": "\n- rule: legit_rule\n  desc: a replaced legit description\n  condition: and proc.name = cat\n  priority: WARNING\n  override:\n    desc: replace\n    condition: append\n",
                    "rendered": {
                      "text": "\n- rule: legit_rule\n  desc: a replaced legit description\n  condition: and proc.name = cat\n  priority: WARNING\n  override:\n    desc: replace\n    condition: append\n",
                      "markdown": "`\n- rule: legit_rule\n  desc: a replaced legit description\n  condition: and proc.name = cat\n  priority: WARNING\n  override:\n    desc: replace\n    condition: append\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 28,
                  "endLine": 108,
                  "snippet": {
                    "text": "  priority: INFO\n\n- rule: legit_rule\n  condition: and proc.name = cat\n  append: true\n)END\";\n\n\tASSERT_TRUE(load_rules(rules_content, \"legit_rules.yaml\")) << m_load_result_string;\n",
                    "rendered": {
                      "text": "  priority: INFO\n\n- rule: legit_rule\n  condition: and proc.name = cat\n  append: true\n)END\";\n\n\tASSERT_TRUE(load_rules(rules_content, \"legit_rules.yaml\")) << m_load_result_string;\n",
                      "markdown": "`  priority: INFO\n\n- rule: legit_rule\n  condition: and proc.name = cat\n  append: true\n)END\";\n\n\tASSERT_TRUE(load_rules(rules_content, \"legit_rules.yaml\")) << m_load_result_string;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 28,
                  "endLine": 73,
                  "snippet": {
                    "text": "\n- rule: legit_rule\n  desc: with append\n  condition: and proc.name = cat\n  output: proc=%proc.name\n  override:\n    desc: append\n    condition: append\n",
                    "rendered": {
                      "text": "\n- rule: legit_rule\n  desc: with append\n  condition: and proc.name = cat\n  output: proc=%proc.name\n  override:\n    desc: append\n    condition: append\n",
                      "markdown": "`\n- rule: legit_rule\n  desc: with append\n  condition: and proc.name = cat\n  output: proc=%proc.name\n  override:\n    desc: append\n    condition: append\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_rule_loader.cpp"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 27,
                  "endLine": 51,
                  "snippet": {
                    "text": "  priority: INFO\n\n- macro: interactive\n  condition: or proc.name = ssh\n  override:\n    condition: append\n)END\";\n\n",
                    "rendered": {
                      "text": "  priority: INFO\n\n- macro: interactive\n  condition: or proc.name = ssh\n  override:\n    condition: append\n)END\";\n\n",
                      "markdown": "`  priority: INFO\n\n- macro: interactive\n  condition: or proc.name = ssh\n  override:\n    condition: append\n)END\";\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_warning_resolver.cpp"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 34,
                  "endLine": 24,
                  "endColumn": 39,
                  "snippet": {
                    "text": "static bool warns(const std::string& condition) {\n\tstd::set<falco::load_result::warning_code> w;\n\tauto ast = libsinsp::filter::parser(condition).parse();\n\tfilter_warning_resolver().run(ast.get(), w);\n\treturn !w.empty();\n}\n\n",
                    "rendered": {
                      "text": "static bool warns(const std::string& condition) {\n\tstd::set<falco::load_result::warning_code> w;\n\tauto ast = libsinsp::filter::parser(condition).parse();\n\tfilter_warning_resolver().run(ast.get(), w);\n\treturn !w.empty();\n}\n\n",
                      "markdown": "`static bool warns(const std::string& condition) {\n\tstd::set<falco::load_result::warning_code> w;\n\tauto ast = libsinsp::filter::parser(condition).parse();\n\tfilter_warning_resolver().run(ast.get(), w);\n\treturn !w.empty();\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/helpers_inspector.cpp"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 34,
                  "endLine": 70,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\t\t\t\treturn run_result::ok();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn run_result::fatal(\"Can't find plugin for event source: \" + source);\n\t\t} else if(s.is_nodriver()) /* nodriver engine. */\n\t\t{\n\t\t\t// when opening a capture with no driver, Falco will first check\n",
                    "rendered": {
                      "text": "\t\t\t\t\treturn run_result::ok();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn run_result::fatal(\"Can't find plugin for event source: \" + source);\n\t\t} else if(s.is_nodriver()) /* nodriver engine. */\n\t\t{\n\t\t\t// when opening a capture with no driver, Falco will first check\n",
                      "markdown": "`\t\t\t\t\treturn run_result::ok();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn run_result::fatal(\"Can't find plugin for event source: \" + source);\n\t\t} else if(s.is_nodriver()) /* nodriver engine. */\n\t\t{\n\t\t\t// when opening a capture with no driver, Falco will first check\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/load_config.cpp"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 69,
                  "endLine": 82,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\t\t                         FALCO_SOURCE_CONF_FILE + \", \" + FALCO_INSTALL_CONF_FILE +\n\t\t                         \" or by passing -c\");\n#else   // BUILD_TYPE_RELEASE\n\t\treturn run_result::fatal(std::string(\"You must create a config file at \") +\n\t\t                         FALCO_INSTALL_CONF_FILE + \" or by passing -c\");\n#endif  // BUILD_TYPE_RELEASE\n\t}\n",
                    "rendered": {
                      "text": "\t\t                         FALCO_SOURCE_CONF_FILE + \", \" + FALCO_INSTALL_CONF_FILE +\n\t\t                         \" or by passing -c\");\n#else   // BUILD_TYPE_RELEASE\n\t\treturn run_result::fatal(std::string(\"You must create a config file at \") +\n\t\t                         FALCO_INSTALL_CONF_FILE + \" or by passing -c\");\n#endif  // BUILD_TYPE_RELEASE\n\t}\n",
                      "markdown": "`\t\t                         FALCO_SOURCE_CONF_FILE + \", \" + FALCO_INSTALL_CONF_FILE +\n\t\t                         \" or by passing -c\");\n#else   // BUILD_TYPE_RELEASE\n\t\treturn run_result::fatal(std::string(\"You must create a config file at \") +\n\t\t                         FALCO_INSTALL_CONF_FILE + \" or by passing -c\");\n#endif  // BUILD_TYPE_RELEASE\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/load_config.cpp"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 69,
                  "endLine": 78,
                  "endColumn": 73,
                  "snippet": {
                    "text": "#ifndef __EMSCRIPTEN__\n\tif(s.options.conf_filename.empty()) {\n#ifndef BUILD_TYPE_RELEASE\n\t\treturn run_result::fatal(std::string(\"You must create a config file at \") +\n\t\t                         FALCO_SOURCE_CONF_FILE + \", \" + FALCO_INSTALL_CONF_FILE +\n\t\t                         \" or by passing -c\");\n#else   // BUILD_TYPE_RELEASE\n",
                    "rendered": {
                      "text": "#ifndef __EMSCRIPTEN__\n\tif(s.options.conf_filename.empty()) {\n#ifndef BUILD_TYPE_RELEASE\n\t\treturn run_result::fatal(std::string(\"You must create a config file at \") +\n\t\t                         FALCO_SOURCE_CONF_FILE + \", \" + FALCO_INSTALL_CONF_FILE +\n\t\t                         \" or by passing -c\");\n#else   // BUILD_TYPE_RELEASE\n",
                      "markdown": "`#ifndef __EMSCRIPTEN__\n\tif(s.options.conf_filename.empty()) {\n#ifndef BUILD_TYPE_RELEASE\n\t\treturn run_result::fatal(std::string(\"You must create a config file at \") +\n\t\t                         FALCO_SOURCE_CONF_FILE + \", \" + FALCO_INSTALL_CONF_FILE +\n\t\t                         \" or by passing -c\");\n#else   // BUILD_TYPE_RELEASE\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/start_grpc_server.cpp"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 38,
                  "endLine": 45,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t\t// achieve?\n\t\ts.grpc_server.init(s.config->m_grpc_bind_address,\n\t\t                   s.config->m_grpc_threadiness,\n\t\t                   s.config->m_grpc_private_key,\n\t\t                   s.config->m_grpc_cert_chain,\n\t\t                   s.config->m_grpc_root_certs,\n\t\t                   s.config->m_log_level);\n",
                    "rendered": {
                      "text": "\t\t// achieve?\n\t\ts.grpc_server.init(s.config->m_grpc_bind_address,\n\t\t                   s.config->m_grpc_threadiness,\n\t\t                   s.config->m_grpc_private_key,\n\t\t                   s.config->m_grpc_cert_chain,\n\t\t                   s.config->m_grpc_root_certs,\n\t\t                   s.config->m_log_level);\n",
                      "markdown": "`\t\t// achieve?\n\t\ts.grpc_server.init(s.config->m_grpc_bind_address,\n\t\t                   s.config->m_grpc_threadiness,\n\t\t                   s.config->m_grpc_private_key,\n\t\t                   s.config->m_grpc_cert_chain,\n\t\t                   s.config->m_grpc_root_certs,\n\t\t                   s.config->m_log_level);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/options.cpp"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 100,
                  "endLine": 108,
                  "endColumn": 106,
                  "snippet": {
                    "text": "he -i option lists these events ignored). Using -A can impact performance. This option has no effect when reproducing events from a capture file.\", cxxopts::value(all_events)->default_value(\"false\"))\n\t\t(\"b,print-base64\",           \"DEPRECATED: use -o buffer_format_base64=true. Print data buffers in base64. This is useful for encoding binary data that needs to be used over media designed to consume this format.\")\n\t\t(\"disable-source\",           \"Turn off a specific <event_source>. By default, all loaded sources get enabled. Available sources are 'syscall' plus all sources defined by loaded plugins sup",
                    "rendered": {
                      "text": "he -i option lists these events ignored). Using -A can impact performance. This option has no effect when reproducing events from a capture file.\", cxxopts::value(all_events)->default_value(\"false\"))\n\t\t(\"b,print-base64\",           \"DEPRECATED: use -o buffer_format_base64=true. Print data buffers in base64. This is useful for encoding binary data that needs to be used over media designed to consume this format.\")\n\t\t(\"disable-source\",           \"Turn off a specific <event_source>. By default, all loaded sources get enabled. Available sources are 'syscall' plus all sources defined by loaded plugins sup",
                      "markdown": "`he -i option lists these events ignored). Using -A can impact performance. This option has no effect when reproducing events from a capture file.\", cxxopts::value(all_events)->default_value(\"false\"))\n\t\t(\"b,print-base64\",           \"DEPRECATED: use -o buffer_format_base64=true. Print data buffers in base64. This is useful for encoding binary data that needs to be used over media designed to consume this format.\")\n\t\t(\"disable-source\",           \"Turn off a specific <event_source>. By default, all loaded sources get enabled. Available sources are 'syscall' plus all sources defined by loaded plugins sup`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/options.cpp"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 12,
                  "endLine": 108,
                  "endColumn": 18,
                  "snippet": {
                    "text": "ned in rules and configs. Some events are ignored by default when -A is not specified (the -i option lists these events ignored). Using -A can impact performance. This option has no effect when reproducing events from a capture file.\", cxxopts::value(all_events)->default_value(\"false\"))\n\t\t(\"b,print-base64\",           \"DEPRECATED: use -o buffer_format_base64=true. Print data buffers in base64. This is useful for encoding binary data that needs to be used over media designed to consume this format.\")\n\t\t(\"disable-source\",           \"Turn off a specific <event_source>. By default, all loaded sources get",
                    "rendered": {
                      "text": "ned in rules and configs. Some events are ignored by default when -A is not specified (the -i option lists these events ignored). Using -A can impact performance. This option has no effect when reproducing events from a capture file.\", cxxopts::value(all_events)->default_value(\"false\"))\n\t\t(\"b,print-base64\",           \"DEPRECATED: use -o buffer_format_base64=true. Print data buffers in base64. This is useful for encoding binary data that needs to be used over media designed to consume this format.\")\n\t\t(\"disable-source\",           \"Turn off a specific <event_source>. By default, all loaded sources get",
                      "markdown": "`ned in rules and configs. Some events are ignored by default when -A is not specified (the -i option lists these events ignored). Using -A can impact performance. This option has no effect when reproducing events from a capture file.\", cxxopts::value(all_events)->default_value(\"false\"))\n\t\t(\"b,print-base64\",           \"DEPRECATED: use -o buffer_format_base64=true. Print data buffers in base64. This is useful for encoding binary data that needs to be used over media designed to consume this format.\")\n\t\t(\"disable-source\",           \"Turn off a specific <event_source>. By default, all loaded sources get`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/options.cpp"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 58,
                  "endLine": 50,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\tif(!conf_filename.empty()) {\n\t\tconf_stream.open(conf_filename);\n\t\tif(!conf_stream.is_open()) {\n\t\t\terrstr = std::string(\"Could not find configuration file at \") + conf_filename;\n\t\t\treturn false;\n\t\t}\n\t} else {\n",
                    "rendered": {
                      "text": "\tif(!conf_filename.empty()) {\n\t\tconf_stream.open(conf_filename);\n\t\tif(!conf_stream.is_open()) {\n\t\t\terrstr = std::string(\"Could not find configuration file at \") + conf_filename;\n\t\t\treturn false;\n\t\t}\n\t} else {\n",
                      "markdown": "`\tif(!conf_filename.empty()) {\n\t\tconf_stream.open(conf_filename);\n\t\tif(!conf_stream.is_open()) {\n\t\t\terrstr = std::string(\"Could not find configuration file at \") + conf_filename;\n\t\t\treturn false;\n\t\t}\n\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/options.cpp"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 27,
                  "endLine": 69,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\t\t// no valid config file, some ways of running falco\n\t\t\t\t// (e.g. --help, --list) do not need a config file.\n\t\t\t\t//\n\t\t\t\t// Later, when it comes time to read a config file, if\n\t\t\t\t// the filename is empty we exit with an error.\n\t\t\t\tconf_filename = \"\";\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t// no valid config file, some ways of running falco\n\t\t\t\t// (e.g. --help, --list) do not need a config file.\n\t\t\t\t//\n\t\t\t\t// Later, when it comes time to read a config file, if\n\t\t\t\t// the filename is empty we exit with an error.\n\t\t\t\tconf_filename = \"\";\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t// no valid config file, some ways of running falco\n\t\t\t\t// (e.g. --help, --list) do not need a config file.\n\t\t\t\t//\n\t\t\t\t// Later, when it comes time to read a config file, if\n\t\t\t\t// the filename is empty we exit with an error.\n\t\t\t\tconf_filename = \"\";\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/options.cpp"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 34,
                  "endLine": 50,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tif(!conf_filename.empty()) {\n\t\tconf_stream.open(conf_filename);\n\t\tif(!conf_stream.is_open()) {\n\t\t\terrstr = std::string(\"Could not find configuration file at \") + conf_filename;\n\t\t\treturn false;\n\t\t}\n\t} else {\n",
                    "rendered": {
                      "text": "\tif(!conf_filename.empty()) {\n\t\tconf_stream.open(conf_filename);\n\t\tif(!conf_stream.is_open()) {\n\t\t\terrstr = std::string(\"Could not find configuration file at \") + conf_filename;\n\t\t\treturn false;\n\t\t}\n\t} else {\n",
                      "markdown": "`\tif(!conf_filename.empty()) {\n\t\tconf_stream.open(conf_filename);\n\t\tif(!conf_stream.is_open()) {\n\t\t\terrstr = std::string(\"Could not find configuration file at \") + conf_filename;\n\t\t\treturn false;\n\t\t}\n\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/restart_handler.cpp"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 19,
                  "endLine": 71,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tfor(const auto& f : m_watched_dirs) {\n\t\tauto wd = inotify_add_watch(m_inotify_fd, f.c_str(), IN_CREATE | IN_DELETE | IN_MOVE);\n\t\tif(wd < 0) {\n\t\t\terr = \"could not watch directory: \" + f;\n\t\t\treturn false;\n\t\t}\n\t\tfalco_logger::log(falco_logger::level::DEBUG, \"Watching directory '\" + f + \"'\\n\");\n",
                    "rendered": {
                      "text": "\tfor(const auto& f : m_watched_dirs) {\n\t\tauto wd = inotify_add_watch(m_inotify_fd, f.c_str(), IN_CREATE | IN_DELETE | IN_MOVE);\n\t\tif(wd < 0) {\n\t\t\terr = \"could not watch directory: \" + f;\n\t\t\treturn false;\n\t\t}\n\t\tfalco_logger::log(falco_logger::level::DEBUG, \"Watching directory '\" + f + \"'\\n\");\n",
                      "markdown": "`\tfor(const auto& f : m_watched_dirs) {\n\t\tauto wd = inotify_add_watch(m_inotify_fd, f.c_str(), IN_CREATE | IN_DELETE | IN_MOVE);\n\t\tif(wd < 0) {\n\t\t\terr = \"could not watch directory: \" + f;\n\t\t\treturn false;\n\t\t}\n\t\tfalco_logger::log(falco_logger::level::DEBUG, \"Watching directory '\" + f + \"'\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/restart_handler.cpp"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 19,
                  "endLine": 62,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t                            f.c_str(),\n\t\t                            IN_CLOSE_WRITE | IN_MOVE_SELF | IN_DELETE_SELF);\n\t\tif(wd < 0) {\n\t\t\terr = \"could not watch file: \" + f;\n\t\t\treturn false;\n\t\t}\n\t\tfalco_logger::log(falco_logger::level::DEBUG, \"Watching file '\" + f + \"'\\n\");\n",
                    "rendered": {
                      "text": "\t\t                            f.c_str(),\n\t\t                            IN_CLOSE_WRITE | IN_MOVE_SELF | IN_DELETE_SELF);\n\t\tif(wd < 0) {\n\t\t\terr = \"could not watch file: \" + f;\n\t\t\treturn false;\n\t\t}\n\t\tfalco_logger::log(falco_logger::level::DEBUG, \"Watching file '\" + f + \"'\\n\");\n",
                      "markdown": "`\t\t                            f.c_str(),\n\t\t                            IN_CLOSE_WRITE | IN_MOVE_SELF | IN_DELETE_SELF);\n\t\tif(wd < 0) {\n\t\t\terr = \"could not watch file: \" + f;\n\t\t\treturn false;\n\t\t}\n\t\tfalco_logger::log(falco_logger::level::DEBUG, \"Watching file '\" + f + \"'\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/schema.proto"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 36,
                  "endLine": 8,
                  "snippet": {
                    "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20191030-api.md"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 138,
                  "endLine": 9,
                  "endColumn": 142,
                  "snippet": {
                    "text": "\nThe Falco API is a set of contracts describing how users can interacts with Falco.\n\nBy defining a set of interfaces the Falco Authors intend to decouple Falco from other software and data (eg., from the input sources) and, at the same time, make it more extensible.\n\nThus, this document intent is to propose a list of services that constitute the Falco API (targeting the first stable version of Falco, v1.0.0).\n\n",
                    "rendered": {
                      "text": "\nThe Falco API is a set of contracts describing how users can interacts with Falco.\n\nBy defining a set of interfaces the Falco Authors intend to decouple Falco from other software and data (eg., from the input sources) and, at the same time, make it more extensible.\n\nThus, this document intent is to propose a list of services that constitute the Falco API (targeting the first stable version of Falco, v1.0.0).\n\n",
                      "markdown": "`\nThe Falco API is a set of contracts describing how users can interacts with Falco.\n\nBy defining a set of interfaces the Falco Authors intend to decouple Falco from other software and data (eg., from the input sources) and, at the same time, make it more extensible.\n\nThus, this document intent is to propose a list of services that constitute the Falco API (targeting the first stable version of Falco, v1.0.0).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20191030-api.md"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 3,
                  "endLine": 120,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n    For example,\n    ```proto3\n    service api {\n      rpc version(request) returns (response);\n      rpc outputs(request) returns (stream response);\n      rpc drops(request) returns (stream response);\n",
                    "rendered": {
                      "text": "\n    For example,\n    ```proto3\n    service api {\n      rpc version(request) returns (response);\n      rpc outputs(request) returns (stream response);\n      rpc drops(request) returns (stream response);\n",
                      "markdown": "`\n    For example,\n    ```proto3\n    service api {\n      rpc version(request) returns (response);\n      rpc outputs(request) returns (stream response);\n      rpc drops(request) returns (stream response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20191030-api.md"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 16,
                  "endLine": 116,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    }\n    ```\n\n- a `.proto` for service definitions\n\n    For example,\n    ```proto3\n",
                    "rendered": {
                      "text": "    }\n    ```\n\n- a `.proto` for service definitions\n\n    For example,\n    ```proto3\n",
                      "markdown": "`    }\n    ```\n\n- a `.proto` for service definitions\n\n    For example,\n    ```proto3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20191030-api.md"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 74,
                  "endLine": 73,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\nThis translates in having the following set of `proto` files.\n\n- a `.proto` containing the **request** and **response messages** for each service - eg., `version.proto`, `outputs.proto` etc.\n\n    For example,\n    ```proto3\n",
                    "rendered": {
                      "text": "\nThis translates in having the following set of `proto` files.\n\n- a `.proto` containing the **request** and **response messages** for each service - eg., `version.proto`, `outputs.proto` etc.\n\n    For example,\n    ```proto3\n",
                      "markdown": "`\nThis translates in having the following set of `proto` files.\n\n- a `.proto` containing the **request** and **response messages** for each service - eg., `version.proto`, `outputs.proto` etc.\n\n    For example,\n    ```proto3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20191030-api.md"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 3,
                  "endLine": 69,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nWe propose to have:\n- 1 gRPC server\n- 1 service grouping services\n\nThis translates in having the following set of `proto` files.\n\n",
                    "rendered": {
                      "text": "\nWe propose to have:\n- 1 gRPC server\n- 1 service grouping services\n\nThis translates in having the following set of `proto` files.\n\n",
                      "markdown": "`\nWe propose to have:\n- 1 gRPC server\n- 1 service grouping services\n\nThis translates in having the following set of `proto` files.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20191030-api.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 84,
                  "endLine": 17,
                  "endColumn": 89,
                  "snippet": {
                    "text": "\nWe want to enable users to use third-party clients to interface with Falco outputs, inputs, rules, and configurations.\n\nSuch ability would enable the community to create a whole set of OSS tools, built on top of Falco.\n\nSome examples, already in place, are:\n\n",
                    "rendered": {
                      "text": "\nWe want to enable users to use third-party clients to interface with Falco outputs, inputs, rules, and configurations.\n\nSuch ability would enable the community to create a whole set of OSS tools, built on top of Falco.\n\nSome examples, already in place, are:\n\n",
                      "markdown": "`\nWe want to enable users to use third-party clients to interface with Falco outputs, inputs, rules, and configurations.\n\nSuch ability would enable the community to create a whole set of OSS tools, built on top of Falco.\n\nSome examples, already in place, are:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230511-roadmap-management.md"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 36,
                  "endLine": 76,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n## Testing and Quality Assurance (QA)\n\nEach iteration's output must include at least one Falco pre-release (or a viable development build) designated for testing and QA activities. While it's acceptable for these builds to contain unfinished features or known bugs, they must enable any community member to contribute to the testing and QA efforts.\n\nThe targeted schedule for these Testing/QA activities should be the **last week of each iteration** (or earlier during the *Release Preparation*).\n\n",
                    "rendered": {
                      "text": "\n## Testing and Quality Assurance (QA)\n\nEach iteration's output must include at least one Falco pre-release (or a viable development build) designated for testing and QA activities. While it's acceptable for these builds to contain unfinished features or known bugs, they must enable any community member to contribute to the testing and QA efforts.\n\nThe targeted schedule for these Testing/QA activities should be the **last week of each iteration** (or earlier during the *Release Preparation*).\n\n",
                      "markdown": "`\n## Testing and Quality Assurance (QA)\n\nEach iteration's output must include at least one Falco pre-release (or a viable development build) designated for testing and QA activities. While it's acceptable for these builds to contain unfinished features or known bugs, they must enable any community member to contribute to the testing and QA efforts.\n\nThe targeted schedule for these Testing/QA activities should be the **last week of each iteration** (or earlier during the *Release Preparation*).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230511-roadmap-management.md"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 307,
                  "endLine": 56,
                  "endColumn": 311,
                  "snippet": {
                    "text": "ease schedule of the [components Falco depends on](https://github.com/falcosecurity/falco/blob/master/RELEASE.md#falco-components-versioning) needs to be synchronized to conform to these stipulations. For instance, a [falcosecurity/libs](https://github.com/falcosecurity/libs) release may be required at least one week prior to the termination of each iteration.\n\nThe maintainers are responsible for adapting those components' release schedules and procedures to release cycles and development iterations of Falco. Furthermore, all release processes must be documented and provide clear expectations rega",
                    "rendered": {
                      "text": "ease schedule of the [components Falco depends on](https://github.com/falcosecurity/falco/blob/master/RELEASE.md#falco-components-versioning) needs to be synchronized to conform to these stipulations. For instance, a [falcosecurity/libs](https://github.com/falcosecurity/libs) release may be required at least one week prior to the termination of each iteration.\n\nThe maintainers are responsible for adapting those components' release schedules and procedures to release cycles and development iterations of Falco. Furthermore, all release processes must be documented and provide clear expectations rega",
                      "markdown": "`ease schedule of the [components Falco depends on](https://github.com/falcosecurity/falco/blob/master/RELEASE.md#falco-components-versioning) needs to be synchronized to conform to these stipulations. For instance, a [falcosecurity/libs](https://github.com/falcosecurity/libs) release may be required at least one week prior to the termination of each iteration.\n\nThe maintainers are responsible for adapting those components' release schedules and procedures to release cycles and development iterations of Falco. Furthermore, all release processes must be documented and provide clear expectations rega`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230511-roadmap-management.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 83,
                  "endLine": 28,
                  "endColumn": 87,
                  "snippet": {
                    "text": "security/evolution#official) will be interconnected with the roadmap, making it comprehensive enough to incorporate items from all related [Falcosecurity repositories](https://github.com/falcosecurity) as necessary.\n\nThis proposal does **not apply to hotfix releases** that may happen whenever needed at the maintainers' discretion.\n\n## Release Cycles and Development Iterations\n\nFalco releases happen 3 times per year. Each release cycle completes, respectively, by the end of January, May, and September.\n\nA **release cycle is a 16-week time frame** between two subsequent releases.\n\nUsing this schema,",
                    "rendered": {
                      "text": "security/evolution#official) will be interconnected with the roadmap, making it comprehensive enough to incorporate items from all related [Falcosecurity repositories](https://github.com/falcosecurity) as necessary.\n\nThis proposal does **not apply to hotfix releases** that may happen whenever needed at the maintainers' discretion.\n\n## Release Cycles and Development Iterations\n\nFalco releases happen 3 times per year. Each release cycle completes, respectively, by the end of January, May, and September.\n\nA **release cycle is a 16-week time frame** between two subsequent releases.\n\nUsing this schema,",
                      "markdown": "`security/evolution#official) will be interconnected with the roadmap, making it comprehensive enough to incorporate items from all related [Falcosecurity repositories](https://github.com/falcosecurity) as necessary.\n\nThis proposal does **not apply to hotfix releases** that may happen whenever needed at the maintainers' discretion.\n\n## Release Cycles and Development Iterations\n\nFalco releases happen 3 times per year. Each release cycle completes, respectively, by the end of January, May, and September.\n\nA **release cycle is a 16-week time frame** between two subsequent releases.\n\nUsing this schema,`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230511-roadmap-management.md"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 202,
                  "endLine": 72,
                  "endColumn": 207,
                  "snippet": {
                    "text": "\nDuring these planning sessions, tasks are allocated to the current iteration or postponed to one of the following iterations. The assigned iteration indicates the projected completion date for a particular workstream.\n\nWhen a session matches with the commencement of an iteration, maintainers convene to assess the planning and prioritize tasks for the iteration. The first planning session of a release cycle must define top priorities for the related release.\n\n## Testing and Quality Assurance (QA)\n\n",
                    "rendered": {
                      "text": "\nDuring these planning sessions, tasks are allocated to the current iteration or postponed to one of the following iterations. The assigned iteration indicates the projected completion date for a particular workstream.\n\nWhen a session matches with the commencement of an iteration, maintainers convene to assess the planning and prioritize tasks for the iteration. The first planning session of a release cycle must define top priorities for the related release.\n\n## Testing and Quality Assurance (QA)\n\n",
                      "markdown": "`\nDuring these planning sessions, tasks are allocated to the current iteration or postponed to one of the following iterations. The assigned iteration indicates the projected completion date for a particular workstream.\n\nWhen a session matches with the commencement of an iteration, maintainers convene to assess the planning and prioritize tasks for the iteration. The first planning session of a release cycle must define top priorities for the related release.\n\n## Testing and Quality Assurance (QA)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230511-roadmap-management.md"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 30,
                  "endLine": 34,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\nFalco releases happen 3 times per year. Each release cycle completes, respectively, by the end of January, May, and September.\n\nA **release cycle is a 16-week time frame** between two subsequent releases.\n\nUsing this schema, in a 52-week calendar year, we allocate 48 weeks for scheduled activities (16 weeks *x* 3 releases), leaving 4 weeks for breaks.\n\n",
                    "rendered": {
                      "text": "\nFalco releases happen 3 times per year. Each release cycle completes, respectively, by the end of January, May, and September.\n\nA **release cycle is a 16-week time frame** between two subsequent releases.\n\nUsing this schema, in a 52-week calendar year, we allocate 48 weeks for scheduled activities (16 weeks *x* 3 releases), leaving 4 weeks for breaks.\n\n",
                      "markdown": "`\nFalco releases happen 3 times per year. Each release cycle completes, respectively, by the end of January, May, and September.\n\nA **release cycle is a 16-week time frame** between two subsequent releases.\n\nUsing this schema, in a 52-week calendar year, we allocate 48 weeks for scheduled activities (16 weeks *x* 3 releases), leaving 4 weeks for breaks.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210501-plugin-system.md"
                },
                "region": {
                  "startLine": 602,
                  "startColumn": 141,
                  "endLine": 602,
                  "endColumn": 145,
                  "snippet": {
                    "text": "* open_params: If present, the exact params text that will be provided as an argument to the open() function.\n* open_params_file: If present, the provided file will be read and the contents will be provided as an argument to the open() function.\n\nFor a given yaml object in the plugins list, only one of init_config/init_config_file and one of open_params/open_params_file can be provided at a time.\n\nA new \"load_plugins\" property in falco.yaml will allow for loading a subset of the plugins defined in plugins. If present, only the plugins with the provided names will be loaded.\n\n",
                    "rendered": {
                      "text": "* open_params: If present, the exact params text that will be provided as an argument to the open() function.\n* open_params_file: If present, the provided file will be read and the contents will be provided as an argument to the open() function.\n\nFor a given yaml object in the plugins list, only one of init_config/init_config_file and one of open_params/open_params_file can be provided at a time.\n\nA new \"load_plugins\" property in falco.yaml will allow for loading a subset of the plugins defined in plugins. If present, only the plugins with the provided names will be loaded.\n\n",
                      "markdown": "`* open_params: If present, the exact params text that will be provided as an argument to the open() function.\n* open_params_file: If present, the provided file will be read and the contents will be provided as an argument to the open() function.\n\nFor a given yaml object in the plugins list, only one of init_config/init_config_file and one of open_params/open_params_file can be provided at a time.\n\nA new \"load_plugins\" property in falco.yaml will allow for loading a subset of the plugins defined in plugins. If present, only the plugins with the provided names will be loaded.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210501-plugin-system.md"
                },
                "region": {
                  "startLine": 563,
                  "endLine": 564,
                  "endColumn": 3,
                  "snippet": {
                    "text": "- if a mix of source and extractor plugins are loaded for a given event source, that the exported fields have unique names that don't overlap across plugins\n\n#### Loading plugins in falcosecurity/libs\n\nAt the libraries level, loading plugins is handled via the static method:\n\n```c++\nvoid sinsp_plugin::register_plugin(sinsp* inspector, string filepath, char* config, ...)\n",
                    "rendered": {
                      "text": "- if a mix of source and extractor plugins are loaded for a given event source, that the exported fields have unique names that don't overlap across plugins\n\n#### Loading plugins in falcosecurity/libs\n\nAt the libraries level, loading plugins is handled via the static method:\n\n```c++\nvoid sinsp_plugin::register_plugin(sinsp* inspector, string filepath, char* config, ...)\n",
                      "markdown": "`- if a mix of source and extractor plugins are loaded for a given event source, that the exported fields have unique names that don't overlap across plugins\n\n#### Loading plugins in falcosecurity/libs\n\nAt the libraries level, loading plugins is handled via the static method:\n\n```c++\nvoid sinsp_plugin::register_plugin(sinsp* inspector, string filepath, char* config, ...)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210501-plugin-system.md"
                },
                "region": {
                  "startLine": 559,
                  "startColumn": 39,
                  "endLine": 559,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n- the plugin is valid, i.e. that it exports the set of expected symbols\n- the plugin has an api version number that is compatible with the libraries instance\n- that only one source plugin is loaded at a time for a given event source\n- if a mix of source and extractor plugins are loaded for a given event source, that the exported fields have unique names that don't overlap across plugins\n\n#### Loading plugins in falcosecurity/libs\n",
                    "rendered": {
                      "text": "\n- the plugin is valid, i.e. that it exports the set of expected symbols\n- the plugin has an api version number that is compatible with the libraries instance\n- that only one source plugin is loaded at a time for a given event source\n- if a mix of source and extractor plugins are loaded for a given event source, that the exported fields have unique names that don't overlap across plugins\n\n#### Loading plugins in falcosecurity/libs\n",
                      "markdown": "`\n- the plugin is valid, i.e. that it exports the set of expected symbols\n- the plugin has an api version number that is compatible with the libraries instance\n- that only one source plugin is loaded at a time for a given event source\n- if a mix of source and extractor plugins are loaded for a given event source, that the exported fields have unique names that don't overlap across plugins\n\n#### Loading plugins in falcosecurity/libs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210501-plugin-system.md"
                },
                "region": {
                  "startLine": 535,
                  "startColumn": 32,
                  "endLine": 535,
                  "endColumn": 36,
                  "snippet": {
                    "text": "nvolved and the core libraries extract the process name for the tid performing a syscall. For AWS Cloudtrail events, the core libraries are not involved in field extraction and is performed by the AWS Cloudtrail plugin instead.\n\nWe only need to ensure the following:\n\n* That only one plugin is loaded at a time that exports a given event source. For example, the libraries can load either a gke-audit-bridge plugin with event source k8s_audit, or eks-audit-bridge with event source k8s_audit, but not both.\n* That for a mix of source and extractor plugins having the same event source, that the fields ar",
                    "rendered": {
                      "text": "nvolved and the core libraries extract the process name for the tid performing a syscall. For AWS Cloudtrail events, the core libraries are not involved in field extraction and is performed by the AWS Cloudtrail plugin instead.\n\nWe only need to ensure the following:\n\n* That only one plugin is loaded at a time that exports a given event source. For example, the libraries can load either a gke-audit-bridge plugin with event source k8s_audit, or eks-audit-bridge with event source k8s_audit, but not both.\n* That for a mix of source and extractor plugins having the same event source, that the fields ar",
                      "markdown": "`nvolved and the core libraries extract the process name for the tid performing a syscall. For AWS Cloudtrail events, the core libraries are not involved in field extraction and is performed by the AWS Cloudtrail plugin instead.\n\nWe only need to ensure the following:\n\n* That only one plugin is loaded at a time that exports a given event source. For example, the libraries can load either a gke-audit-bridge plugin with event source k8s_audit, or eks-audit-bridge with event source k8s_audit, but not both.\n* That for a mix of source and extractor plugins having the same event source, that the fields ar`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210501-plugin-system.md"
                },
                "region": {
                  "startLine": 528,
                  "endLine": 529,
                  "endColumn": 3,
                  "snippet": {
                    "text": "ifically, their event sources), instead of unconditionally as Falco is started. This is especially important for macros, which do not contain a source property, but might contain fields that are only implemented by a given plugin.\n\n### Handling Duplicate/Overlapping Fields in Plugins/Libraries Core\n\nAt an initial glance, adding plugins introduces the possibility of tens/hundreds of new filtercheck fields that could potentially overlap/conflict. For example, what happens if a plugin defines a \"proc.name\" field? However, the notion of \"event source\" makes these potential conflicts manageable.\n\nRemem",
                    "rendered": {
                      "text": "ifically, their event sources), instead of unconditionally as Falco is started. This is especially important for macros, which do not contain a source property, but might contain fields that are only implemented by a given plugin.\n\n### Handling Duplicate/Overlapping Fields in Plugins/Libraries Core\n\nAt an initial glance, adding plugins introduces the possibility of tens/hundreds of new filtercheck fields that could potentially overlap/conflict. For example, what happens if a plugin defines a \"proc.name\" field? However, the notion of \"event source\" makes these potential conflicts manageable.\n\nRemem",
                      "markdown": "`ifically, their event sources), instead of unconditionally as Falco is started. This is especially important for macros, which do not contain a source property, but might contain fields that are only implemented by a given plugin.\n\n### Handling Duplicate/Overlapping Fields in Plugins/Libraries Core\n\nAt an initial glance, adding plugins introduces the possibility of tens/hundreds of new filtercheck fields that could potentially overlap/conflict. For example, what happens if a plugin defines a \"proc.name\" field? However, the notion of \"event source\" makes these potential conflicts manageable.\n\nRemem`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210501-plugin-system.md"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 339,
                  "endLine": 90,
                  "endColumn": 348,
                  "snippet": {
                    "text": "\n### Protecting from plugin issues\n\nThe libraries will do everything possible to validate the data coming from the plugins and protect Falco and the other consumers from corrupted data. However, for performance reasons, plugins will be \"trusted\": they will run in the same thread and address space as Falco and they could crash the program. We assume that the user will be in control of plugin loading and will make sure only trusted plugins are loaded/packaged with Falco.\n\n### Plugin/Event Source registries\n\n",
                    "rendered": {
                      "text": "\n### Protecting from plugin issues\n\nThe libraries will do everything possible to validate the data coming from the plugins and protect Falco and the other consumers from corrupted data. However, for performance reasons, plugins will be \"trusted\": they will run in the same thread and address space as Falco and they could crash the program. We assume that the user will be in control of plugin loading and will make sure only trusted plugins are loaded/packaged with Falco.\n\n### Plugin/Event Source registries\n\n",
                      "markdown": "`\n### Protecting from plugin issues\n\nThe libraries will do everything possible to validate the data coming from the plugins and protect Falco and the other consumers from corrupted data. However, for performance reasons, plugins will be \"trusted\": they will run in the same thread and address space as Falco and they could crash the program. We assume that the user will be in control of plugin loading and will make sure only trusted plugins are loaded/packaged with Falco.\n\n### Plugin/Event Source registries\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210501-plugin-system.md"
                },
                "region": {
                  "startLine": 559,
                  "startColumn": 44,
                  "endLine": 559,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n- the plugin is valid, i.e. that it exports the set of expected symbols\n- the plugin has an api version number that is compatible with the libraries instance\n- that only one source plugin is loaded at a time for a given event source\n- if a mix of source and extractor plugins are loaded for a given event source, that the exported fields have unique names that don't overlap across plugins\n\n#### Loading plugins in falcosecurity/libs\n",
                    "rendered": {
                      "text": "\n- the plugin is valid, i.e. that it exports the set of expected symbols\n- the plugin has an api version number that is compatible with the libraries instance\n- that only one source plugin is loaded at a time for a given event source\n- if a mix of source and extractor plugins are loaded for a given event source, that the exported fields have unique names that don't overlap across plugins\n\n#### Loading plugins in falcosecurity/libs\n",
                      "markdown": "`\n- the plugin is valid, i.e. that it exports the set of expected symbols\n- the plugin has an api version number that is compatible with the libraries instance\n- that only one source plugin is loaded at a time for a given event source\n- if a mix of source and extractor plugins are loaded for a given event source, that the exported fields have unique names that don't overlap across plugins\n\n#### Loading plugins in falcosecurity/libs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210501-plugin-system.md"
                },
                "region": {
                  "startLine": 535,
                  "startColumn": 37,
                  "endLine": 535,
                  "endColumn": 43,
                  "snippet": {
                    "text": "ed and the core libraries extract the process name for the tid performing a syscall. For AWS Cloudtrail events, the core libraries are not involved in field extraction and is performed by the AWS Cloudtrail plugin instead.\n\nWe only need to ensure the following:\n\n* That only one plugin is loaded at a time that exports a given event source. For example, the libraries can load either a gke-audit-bridge plugin with event source k8s_audit, or eks-audit-bridge with event source k8s_audit, but not both.\n* That for a mix of source and extractor plugins having the same event source, that the fields are disti",
                    "rendered": {
                      "text": "ed and the core libraries extract the process name for the tid performing a syscall. For AWS Cloudtrail events, the core libraries are not involved in field extraction and is performed by the AWS Cloudtrail plugin instead.\n\nWe only need to ensure the following:\n\n* That only one plugin is loaded at a time that exports a given event source. For example, the libraries can load either a gke-audit-bridge plugin with event source k8s_audit, or eks-audit-bridge with event source k8s_audit, but not both.\n* That for a mix of source and extractor plugins having the same event source, that the fields are disti",
                      "markdown": "`ed and the core libraries extract the process name for the tid performing a syscall. For AWS Cloudtrail events, the core libraries are not involved in field extraction and is performed by the AWS Cloudtrail plugin instead.\n\nWe only need to ensure the following:\n\n* That only one plugin is loaded at a time that exports a given event source. For example, the libraries can load either a gke-audit-bridge plugin with event source k8s_audit, or eks-audit-bridge with event source k8s_audit, but not both.\n* That for a mix of source and extractor plugins having the same event source, that the fields are disti`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210501-plugin-system.md"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 33,
                  "endLine": 116,
                  "endColumn": 39,
                  "snippet": {
                    "text": "// - datalen: pointer to a 32bit integer. The plugin will set it the size of the\n//   buffer pointed by data.\n// - ts: the event timestamp. Can be (uint64_t)-1, in which case the engine will\n//   automatically fill the event time with the current time.\ntypedef struct ss_plugin_event\n{\n\tuint8_t *data;\n",
                    "rendered": {
                      "text": "// - datalen: pointer to a 32bit integer. The plugin will set it the size of the\n//   buffer pointed by data.\n// - ts: the event timestamp. Can be (uint64_t)-1, in which case the engine will\n//   automatically fill the event time with the current time.\ntypedef struct ss_plugin_event\n{\n\tuint8_t *data;\n",
                      "markdown": "`// - datalen: pointer to a 32bit integer. The plugin will set it the size of the\n//   buffer pointed by data.\n// - ts: the event timestamp. Can be (uint64_t)-1, in which case the engine will\n//   automatically fill the event time with the current time.\ntypedef struct ss_plugin_event\n{\n\tuint8_t *data;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210501-plugin-system.md"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 131,
                  "endLine": 98,
                  "endColumn": 137,
                  "snippet": {
                    "text": "\nTo facilitate the allocation and distribution of plugin IDs, we will require that plugin developers request IDs for their plugins to the Falco organization. The mechanism used for plugin allocation is not determined yet and will be discussed in the future.\n\nSimilarly, plugin developers must register event sources with the Falco organization. This allows coordination between plugins that wish to provide compatible payloads, and to allow extractor plugins to know what data format is associated with a given event source.\n\n### golang plugin SDK\n\n",
                    "rendered": {
                      "text": "\nTo facilitate the allocation and distribution of plugin IDs, we will require that plugin developers request IDs for their plugins to the Falco organization. The mechanism used for plugin allocation is not determined yet and will be discussed in the future.\n\nSimilarly, plugin developers must register event sources with the Falco organization. This allows coordination between plugins that wish to provide compatible payloads, and to allow extractor plugins to know what data format is associated with a given event source.\n\n### golang plugin SDK\n\n",
                      "markdown": "`\nTo facilitate the allocation and distribution of plugin IDs, we will require that plugin developers request IDs for their plugins to the Falco organization. The mechanism used for plugin allocation is not determined yet and will be discussed in the future.\n\nSimilarly, plugin developers must register event sources with the Falco organization. This allows coordination between plugins that wish to provide compatible payloads, and to allow extractor plugins to know what data format is associated with a given event source.\n\n### golang plugin SDK\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210501-plugin-system.md"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 699,
                  "endLine": 61,
                  "endColumn": 705,
                  "snippet": {
                    "text": "lational and/or logical operators. For example, given an expression \"ct.name=root and ct.region=us-east-1\", the plugin framework handles parsing the expression, calling the plugin to extract values for a given event, and determining the result of the expression. In a Falco output string like \"An EC2 Node was created (name=%ec2.name region=%ct.region)\", the plugin framework handles parsing the output string, calling the plugin to extract values for a given event, and building the resolved string.\n\nSource plugins also provide an \"id\", which is globally unique and is used in capture files (see below).\n",
                    "rendered": {
                      "text": "lational and/or logical operators. For example, given an expression \"ct.name=root and ct.region=us-east-1\", the plugin framework handles parsing the expression, calling the plugin to extract values for a given event, and determining the result of the expression. In a Falco output string like \"An EC2 Node was created (name=%ec2.name region=%ct.region)\", the plugin framework handles parsing the output string, calling the plugin to extract values for a given event, and building the resolved string.\n\nSource plugins also provide an \"id\", which is globally unique and is used in capture files (see below).\n",
                      "markdown": "`lational and/or logical operators. For example, given an expression \"ct.name=root and ct.region=us-east-1\", the plugin framework handles parsing the expression, calling the plugin to extract values for a given event, and determining the result of the expression. In a Falco output string like \"An EC2 Node was created (name=%ec2.name region=%ct.region)\", the plugin framework handles parsing the output string, calling the plugin to extract values for a given event, and building the resolved string.\n\nSource plugins also provide an \"id\", which is globally unique and is used in capture files (see below).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210501-plugin-system.md"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 6,
                  "snippet": {
                    "text": "- enrichment\n- filtering\n- formatting and screen rendering\n- Lua scripting (chisels)\n\nThese features have been designed with one specific input in mind: system calls. However, they are generically adaptable to a broad set of inputs, such as cloud logs.\n\n",
                    "rendered": {
                      "text": "- enrichment\n- filtering\n- formatting and screen rendering\n- Lua scripting (chisels)\n\nThese features have been designed with one specific input in mind: system calls. However, they are generically adaptable to a broad set of inputs, such as cloud logs.\n\n",
                      "markdown": "`- enrichment\n- filtering\n- formatting and screen rendering\n- Lua scripting (chisels)\n\nThese features have been designed with one specific input in mind: system calls. However, they are generically adaptable to a broad set of inputs, such as cloud logs.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210501-plugin-system.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 16,
                  "endLine": 19,
                  "endColumn": 24,
                  "snippet": {
                    "text": "- trace files management\n- enrichment\n- filtering\n- formatting and screen rendering\n- Lua scripting (chisels)\n\nThese features have been designed with one specific input in mind: system calls. However, they are generically adaptable to a broad set of inputs, such as cloud logs.\n",
                    "rendered": {
                      "text": "- trace files management\n- enrichment\n- filtering\n- formatting and screen rendering\n- Lua scripting (chisels)\n\nThese features have been designed with one specific input in mind: system calls. However, they are generically adaptable to a broad set of inputs, such as cloud logs.\n",
                      "markdown": "`- trace files management\n- enrichment\n- filtering\n- formatting and screen rendering\n- Lua scripting (chisels)\n\nThese features have been designed with one specific input in mind: system calls. However, they are generically adaptable to a broad set of inputs, such as cloud logs.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210119-libraries-contribution.md"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 108,
                  "endLine": 129,
                  "endColumn": 112,
                  "snippet": {
                    "text": "\n1. Extract them from `draios/sysdig/driver` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the point below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n",
                    "rendered": {
                      "text": "\n1. Extract them from `draios/sysdig/driver` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the point below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n",
                      "markdown": "`\n1. Extract them from `draios/sysdig/driver` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the point below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210119-libraries-contribution.md"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 109,
                  "endLine": 87,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\n1. Extract libscap from `draios/sysdig/userspace/libscap` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the points below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n",
                    "rendered": {
                      "text": "\n1. Extract libscap from `draios/sysdig/userspace/libscap` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the points below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n",
                      "markdown": "`\n1. Extract libscap from `draios/sysdig/userspace/libscap` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the points below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210119-libraries-contribution.md"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 109,
                  "endLine": 45,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\n1. Extract libsinsp from `draios/sysdig/userspace/libsinsp` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the points below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n",
                    "rendered": {
                      "text": "\n1. Extract libsinsp from `draios/sysdig/userspace/libsinsp` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the points below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n",
                      "markdown": "`\n1. Extract libsinsp from `draios/sysdig/userspace/libsinsp` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the points below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210119-libraries-contribution.md"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 117,
                  "endLine": 145,
                  "endColumn": 123,
                  "snippet": {
                    "text": "\n8. Falco follows a [multi-stage model for adopting new projects](https://github.com/falcosecurity/evolution#falco-project-evolution), in this case we will do an exception since the library is foundational for Falco and it has a very good track record already. We are just changing maintenance ownership\n\n9. Contributing, Code of Conduct, Governance, Security, and Support will be the same as the rest of the organization, find them [here](https://github.com/falcosecurity/.github)\n\n10. Every other additional change will need to have its own process with a proposal\n\n",
                    "rendered": {
                      "text": "\n8. Falco follows a [multi-stage model for adopting new projects](https://github.com/falcosecurity/evolution#falco-project-evolution), in this case we will do an exception since the library is foundational for Falco and it has a very good track record already. We are just changing maintenance ownership\n\n9. Contributing, Code of Conduct, Governance, Security, and Support will be the same as the rest of the organization, find them [here](https://github.com/falcosecurity/.github)\n\n10. Every other additional change will need to have its own process with a proposal\n\n",
                      "markdown": "`\n8. Falco follows a [multi-stage model for adopting new projects](https://github.com/falcosecurity/evolution#falco-project-evolution), in this case we will do an exception since the library is foundational for Falco and it has a very good track record already. We are just changing maintenance ownership\n\n9. Contributing, Code of Conduct, Governance, Security, and Support will be the same as the rest of the organization, find them [here](https://github.com/falcosecurity/.github)\n\n10. Every other additional change will need to have its own process with a proposal\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210119-libraries-contribution.md"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 113,
                  "endLine": 129,
                  "endColumn": 119,
                  "snippet": {
                    "text": "\n1. Extract them from `draios/sysdig/driver` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the point below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n",
                    "rendered": {
                      "text": "\n1. Extract them from `draios/sysdig/driver` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the point below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n",
                      "markdown": "`\n1. Extract them from `draios/sysdig/driver` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the point below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210119-libraries-contribution.md"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 118,
                  "endLine": 115,
                  "endColumn": 124,
                  "snippet": {
                    "text": "\n14. This project will go already \"Official support\" once the contribution is completed\n\n15. Contributing, Code of Conduct, Governance, Security, and Support will be the same as the rest of the organization, find them [here](https://github.com/falcosecurity/.github)\n\n16. Every other additional change will need to have its own process with a proposal\n\n",
                    "rendered": {
                      "text": "\n14. This project will go already \"Official support\" once the contribution is completed\n\n15. Contributing, Code of Conduct, Governance, Security, and Support will be the same as the rest of the organization, find them [here](https://github.com/falcosecurity/.github)\n\n16. Every other additional change will need to have its own process with a proposal\n\n",
                      "markdown": "`\n14. This project will go already \"Official support\" once the contribution is completed\n\n15. Contributing, Code of Conduct, Governance, Security, and Support will be the same as the rest of the organization, find them [here](https://github.com/falcosecurity/.github)\n\n16. Every other additional change will need to have its own process with a proposal\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210119-libraries-contribution.md"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 114,
                  "endLine": 87,
                  "endColumn": 120,
                  "snippet": {
                    "text": "\n1. Extract libscap from `draios/sysdig/userspace/libscap` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the points below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n",
                    "rendered": {
                      "text": "\n1. Extract libscap from `draios/sysdig/userspace/libscap` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the points below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n",
                      "markdown": "`\n1. Extract libscap from `draios/sysdig/userspace/libscap` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the points below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210119-libraries-contribution.md"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 118,
                  "endLine": 73,
                  "endColumn": 124,
                  "snippet": {
                    "text": "\n14. This project will go already \"Official support\" once the contribution is completed\n\n15. Contributing, Code of Conduct, Governance, Security, and Support will be the same as the rest of the organization, find them [here](https://github.com/falcosecurity/.github)\n\n16. Every other additional change will need to have its own process with a proposal\n\n",
                    "rendered": {
                      "text": "\n14. This project will go already \"Official support\" once the contribution is completed\n\n15. Contributing, Code of Conduct, Governance, Security, and Support will be the same as the rest of the organization, find them [here](https://github.com/falcosecurity/.github)\n\n16. Every other additional change will need to have its own process with a proposal\n\n",
                      "markdown": "`\n14. This project will go already \"Official support\" once the contribution is completed\n\n15. Contributing, Code of Conduct, Governance, Security, and Support will be the same as the rest of the organization, find them [here](https://github.com/falcosecurity/.github)\n\n16. Every other additional change will need to have its own process with a proposal\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210119-libraries-contribution.md"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 114,
                  "endLine": 45,
                  "endColumn": 120,
                  "snippet": {
                    "text": "\n1. Extract libsinsp from `draios/sysdig/userspace/libsinsp` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the points below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n",
                    "rendered": {
                      "text": "\n1. Extract libsinsp from `draios/sysdig/userspace/libsinsp` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the points below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n",
                      "markdown": "`\n1. Extract libsinsp from `draios/sysdig/userspace/libsinsp` (keeping the commit history) into [falcosecurity/libs](https://github.com/falcosecurity/libs)\n\n2. The migration comes first, then we can do additional PRs for the points below so that we do only one thing at a time and keep the history linear\n\n3. Keep the same code, refactorings will need to be done in subsequent PRs and approved separately\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20210119-libraries-contribution.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 39,
                  "endLine": 25,
                  "endColumn": 44,
                  "snippet": {
                    "text": "ntinue to use the libraries now provided by the Falco community underneath.\n\nThis change is win-win for both parties because of the following reasons:\n\n- The Falco community owns the source code of the three most important parts of the software it distributes.\n  - Right now it is \"only\" an engine on top of the libraries. This **contribution** helps in making the scope of the Falco project broader. Having the majority of the source code under an **open governance** in the same organization gives the Falco project more contribution opportunities, helps it in **evolving independently** and makes the w",
                    "rendered": {
                      "text": "ntinue to use the libraries now provided by the Falco community underneath.\n\nThis change is win-win for both parties because of the following reasons:\n\n- The Falco community owns the source code of the three most important parts of the software it distributes.\n  - Right now it is \"only\" an engine on top of the libraries. This **contribution** helps in making the scope of the Falco project broader. Having the majority of the source code under an **open governance** in the same organization gives the Falco project more contribution opportunities, helps it in **evolving independently** and makes the w",
                      "markdown": "`ntinue to use the libraries now provided by the Falco community underneath.\n\nThis change is win-win for both parties because of the following reasons:\n\n- The Falco community owns the source code of the three most important parts of the software it distributes.\n  - Right now it is \"only\" an engine on top of the libraries. This **contribution** helps in making the scope of the Falco project broader. Having the majority of the source code under an **open governance** in the same organization gives the Falco project more contribution opportunities, helps it in **evolving independently** and makes the w`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200828-structured-exception-handling.md"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 7,
                  "endLine": 66,
                  "endColumn": 15,
                  "snippet": {
                    "text": "- macro: user_known_update_package_registry\n  condition: (never_true)\n\n- rule: Update Package Repository\n  desc: Detect package repositories get updated\n  condition: >\n    ((open_write and access_repositories) or (modify and modify_repositories))\n",
                    "rendered": {
                      "text": "- macro: user_known_update_package_registry\n  condition: (never_true)\n\n- rule: Update Package Repository\n  desc: Detect package repositories get updated\n  condition: >\n    ((open_write and access_repositories) or (modify and modify_repositories))\n",
                      "markdown": "`- macro: user_known_update_package_registry\n  condition: (never_true)\n\n- rule: Update Package Repository\n  desc: Detect package repositories get updated\n  condition: >\n    ((open_write and access_repositories) or (modify and modify_repositories))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200828-structured-exception-handling.md"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 194,
                  "endLine": 54,
                  "endColumn": 202,
                  "snippet": {
                    "text": "\n### Using Appends/Overwrites to Customize Rules\n\nAn important way to customize rules and macros is to use `append: true` to add to them, or `append: false` to define a new rule/macro, overwriting the original rule/macro. Here's an example from Update Package Repository:\n\n```yaml\n- list: package_mgmt_binaries\n",
                    "rendered": {
                      "text": "\n### Using Appends/Overwrites to Customize Rules\n\nAn important way to customize rules and macros is to use `append: true` to add to them, or `append: false` to define a new rule/macro, overwriting the original rule/macro. Here's an example from Update Package Repository:\n\n```yaml\n- list: package_mgmt_binaries\n",
                      "markdown": "`\n### Using Appends/Overwrites to Customize Rules\n\nAn important way to customize rules and macros is to use `append: true` to add to them, or `append: false` to define a new rule/macro, overwriting the original rule/macro. Here's an example from Update Package Repository:\n\n```yaml\n- list: package_mgmt_binaries\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200828-structured-exception-handling.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 118,
                  "endLine": 24,
                  "endColumn": 122,
                  "snippet": {
                    "text": "    and not user_known_write_below_binary_dir_activities\n...\n```\nIn most cases, these exceptions are expressed as concatenations to the original rule's condition. For example, looking at the macro package_mgmt_procs:\n\n```yaml\n- macro: package_mgmt_procs\n",
                    "rendered": {
                      "text": "    and not user_known_write_below_binary_dir_activities\n...\n```\nIn most cases, these exceptions are expressed as concatenations to the original rule's condition. For example, looking at the macro package_mgmt_procs:\n\n```yaml\n- macro: package_mgmt_procs\n",
                      "markdown": "`    and not user_known_write_below_binary_dir_activities\n...\n```\nIn most cases, these exceptions are expressed as concatenations to the original rule's condition. For example, looking at the macro package_mgmt_procs:\n\n```yaml\n- macro: package_mgmt_procs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200828-structured-exception-handling.md"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 228,
                  "endLine": 237,
                  "endColumn": 233,
                  "snippet": {
                    "text": "\nHowever, there are a few changes we'll have to make to Falco rules file parsing:\n\n* Currently, Falco will reject files containing anything other than rule/macro/list top-level objects. As a result, `exception` objects would be rejected. We'll probably want to make a one-time change to Falco to allow arbitrary top level objects.\n* Similarly, Falco will reject rule objects with exception keys. We'll also probably want to change Falco to allow unknown keys inside rule/macro/list/exception objects.\n\n\n",
                    "rendered": {
                      "text": "\nHowever, there are a few changes we'll have to make to Falco rules file parsing:\n\n* Currently, Falco will reject files containing anything other than rule/macro/list top-level objects. As a result, `exception` objects would be rejected. We'll probably want to make a one-time change to Falco to allow arbitrary top level objects.\n* Similarly, Falco will reject rule objects with exception keys. We'll also probably want to change Falco to allow unknown keys inside rule/macro/list/exception objects.\n\n\n",
                      "markdown": "`\nHowever, there are a few changes we'll have to make to Falco rules file parsing:\n\n* Currently, Falco will reject files containing anything other than rule/macro/list top-level objects. As a result, `exception` objects would be rejected. We'll probably want to make a one-time change to Falco to allow arbitrary top level objects.\n* Similarly, Falco will reject rule objects with exception keys. We'll also probably want to change Falco to allow unknown keys inside rule/macro/list/exception objects.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200828-structured-exception-handling.md"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 74,
                  "endLine": 132,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n## Solution: Exceptions as first class objects\n\nTo address some of these problems, we will add the notion of Exceptions as top level objects alongside Rules, Macros, and Lists. A rule that supports exceptions must define a new key `exceptions` in the rule. The exceptions key is a list of identifier plus list of tuples of filtercheck fields. Here's an example:\n\n```yaml\n- rule: Write below binary dir\n",
                    "rendered": {
                      "text": "\n## Solution: Exceptions as first class objects\n\nTo address some of these problems, we will add the notion of Exceptions as top level objects alongside Rules, Macros, and Lists. A rule that supports exceptions must define a new key `exceptions` in the rule. The exceptions key is a list of identifier plus list of tuples of filtercheck fields. Here's an example:\n\n```yaml\n- rule: Write below binary dir\n",
                      "markdown": "`\n## Solution: Exceptions as first class objects\n\nTo address some of these problems, we will add the notion of Exceptions as top level objects alongside Rules, Macros, and Lists. A rule that supports exceptions must define a new key `exceptions` in the rule. The exceptions key is a list of identifier plus list of tuples of filtercheck fields. Here's an example:\n\n```yaml\n- rule: Write below binary dir\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-1.md"
                },
                "region": {
                  "startLine": 108,
                  "endLine": 109,
                  "endColumn": 7,
                  "snippet": {
                    "text": "     - Old documentation\n\n### Documentation\n\nUpdate documentation in [falco-website#184](https://github.com/falcosecurity/falco-website/pull/184).\n\n### Adjusting projects\n\n",
                    "rendered": {
                      "text": "     - Old documentation\n\n### Documentation\n\nUpdate documentation in [falco-website#184](https://github.com/falcosecurity/falco-website/pull/184).\n\n### Adjusting projects\n\n",
                      "markdown": "`     - Old documentation\n\n### Documentation\n\nUpdate documentation in [falco-website#184](https://github.com/falcosecurity/falco-website/pull/184).\n\n### Adjusting projects\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-1.md"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 129,
                  "endLine": 81,
                  "endColumn": 133,
                  "snippet": {
                    "text": "\n\"_Incubating level_\" projects such as [falco-exporter](https://github.com/falco-exporter) can be promoted from `contrib` to their own repository.\n\nThis is done as needed, and can best be measured by the need to cut a release and use the GitHub release features. Again, this is at the discretion of the Falco open source community.\n\n### official support\n\n",
                    "rendered": {
                      "text": "\n\"_Incubating level_\" projects such as [falco-exporter](https://github.com/falco-exporter) can be promoted from `contrib` to their own repository.\n\nThis is done as needed, and can best be measured by the need to cut a release and use the GitHub release features. Again, this is at the discretion of the Falco open source community.\n\n### official support\n\n",
                      "markdown": "`\n\"_Incubating level_\" projects such as [falco-exporter](https://github.com/falco-exporter) can be promoted from `contrib` to their own repository.\n\nThis is done as needed, and can best be measured by the need to cut a release and use the GitHub release features. Again, this is at the discretion of the Falco open source community.\n\n### official support\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-1.md"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 53,
                  "endLine": 69,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nWe will modeling a loosely defined adoption of the Kubernetes and CNCF incubator efforts.\n\nThe criteria will remain loose, and tighten as needed at the discretion of the Falco open source community.\n\n### contrib\n\n",
                    "rendered": {
                      "text": "\nWe will modeling a loosely defined adoption of the Kubernetes and CNCF incubator efforts.\n\nThe criteria will remain loose, and tighten as needed at the discretion of the Falco open source community.\n\n### contrib\n\n",
                      "markdown": "`\nWe will modeling a loosely defined adoption of the Kubernetes and CNCF incubator efforts.\n\nThe criteria will remain loose, and tighten as needed at the discretion of the Falco open source community.\n\n### contrib\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-1.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 4,
                  "endLine": 29,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n**falco-driver-loader**\n\n*The bash script found [here](https://github.com/falcosecurity/falco/blob/master/scripts/falco-driver-loader) that tries to compile else download the driver (kernel module or eBPF probe).*\n\n**package**\n\n",
                    "rendered": {
                      "text": "\n**falco-driver-loader**\n\n*The bash script found [here](https://github.com/falcosecurity/falco/blob/master/scripts/falco-driver-loader) that tries to compile else download the driver (kernel module or eBPF probe).*\n\n**package**\n\n",
                      "markdown": "`\n**falco-driver-loader**\n\n*The bash script found [here](https://github.com/falcosecurity/falco/blob/master/scripts/falco-driver-loader) that tries to compile else download the driver (kernel module or eBPF probe).*\n\n**package**\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-1.md"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 63,
                  "endLine": 81,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n\"_Incubating level_\" projects such as [falco-exporter](https://github.com/falco-exporter) can be promoted from `contrib` to their own repository.\n\nThis is done as needed, and can best be measured by the need to cut a release and use the GitHub release features. Again, this is at the discretion of the Falco open source community.\n\n### official support\n\n",
                    "rendered": {
                      "text": "\n\"_Incubating level_\" projects such as [falco-exporter](https://github.com/falco-exporter) can be promoted from `contrib` to their own repository.\n\nThis is done as needed, and can best be measured by the need to cut a release and use the GitHub release features. Again, this is at the discretion of the Falco open source community.\n\n### official support\n\n",
                      "markdown": "`\n\"_Incubating level_\" projects such as [falco-exporter](https://github.com/falco-exporter) can be promoted from `contrib` to their own repository.\n\nThis is done as needed, and can best be measured by the need to cut a release and use the GitHub release features. Again, this is at the discretion of the Falco open source community.\n\n### official support\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-1.md"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 327,
                  "endLine": 56,
                  "endColumn": 332,
                  "snippet": {
                    "text": "st-slim](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:_tag_-slim](https://hub.docker.com/repository/docker/falcosecurity/falco),[falcosecurity/falco:master-slim](https://hub.docker.com/repository/docker/falcosecurity/falco) | docker/slim | Falco (DEB build from git tag or from the master) without the building toolchain. |\n| [falcosecurity/falco-driver-loader:latest](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader), [falcosecurity/falco-driver-loader:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader), [",
                    "rendered": {
                      "text": "st-slim](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:_tag_-slim](https://hub.docker.com/repository/docker/falcosecurity/falco),[falcosecurity/falco:master-slim](https://hub.docker.com/repository/docker/falcosecurity/falco) | docker/slim | Falco (DEB build from git tag or from the master) without the building toolchain. |\n| [falcosecurity/falco-driver-loader:latest](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader), [falcosecurity/falco-driver-loader:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader), [",
                      "markdown": "`st-slim](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:_tag_-slim](https://hub.docker.com/repository/docker/falcosecurity/falco),[falcosecurity/falco:master-slim](https://hub.docker.com/repository/docker/falcosecurity/falco) | docker/slim | Falco (DEB build from git tag or from the master) without the building toolchain. |\n| [falcosecurity/falco-driver-loader:latest](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader), [falcosecurity/falco-driver-loader:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader), [`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-1.md"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 315,
                  "endLine": 55,
                  "endColumn": 320,
                  "snippet": {
                    "text": "y/falco:latest](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:master](https://hub.docker.com/repository/docker/falcosecurity/falco) | docker/stable | Falco (DEB built from git tag or from the master) with all the building toolchain. |\n| [falcosecurity/falco:latest-slim](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:_tag_-slim](https://hub.docker.com/repository/docker/falcosecurity/falco),[falcosecurity/falco:master-slim](https://hub.d",
                    "rendered": {
                      "text": "y/falco:latest](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:master](https://hub.docker.com/repository/docker/falcosecurity/falco) | docker/stable | Falco (DEB built from git tag or from the master) with all the building toolchain. |\n| [falcosecurity/falco:latest-slim](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:_tag_-slim](https://hub.docker.com/repository/docker/falcosecurity/falco),[falcosecurity/falco:master-slim](https://hub.d",
                      "markdown": "`y/falco:latest](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:master](https://hub.docker.com/repository/docker/falcosecurity/falco) | docker/stable | Falco (DEB built from git tag or from the master) with all the building toolchain. |\n| [falcosecurity/falco:latest-slim](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:_tag_-slim](https://hub.docker.com/repository/docker/falcosecurity/falco),[falcosecurity/falco:master-slim](https://hub.d`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-1.md"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 30,
                  "endLine": 45,
                  "endColumn": 35,
                  "snippet": {
                    "text": "List of currently official packages (for x86 64bits only):\n\n- `falco-x.y.z-x86_64.deb` for debian like systems, it installs the kernel module by default\n- `falco-x.y.z-x86_64.rpm` for rpm like systems, it installs the kernel module by default\n- `falco-x.y.z-x86_64.tar.gz` for binary installation, it contains `falco` binary, `falco-driver-loader` script, drivers source, and related dependencies\n\n\n",
                    "rendered": {
                      "text": "List of currently official packages (for x86 64bits only):\n\n- `falco-x.y.z-x86_64.deb` for debian like systems, it installs the kernel module by default\n- `falco-x.y.z-x86_64.rpm` for rpm like systems, it installs the kernel module by default\n- `falco-x.y.z-x86_64.tar.gz` for binary installation, it contains `falco` binary, `falco-driver-loader` script, drivers source, and related dependencies\n\n\n",
                      "markdown": "`List of currently official packages (for x86 64bits only):\n\n- `falco-x.y.z-x86_64.deb` for debian like systems, it installs the kernel module by default\n- `falco-x.y.z-x86_64.rpm` for rpm like systems, it installs the kernel module by default\n- `falco-x.y.z-x86_64.tar.gz` for binary installation, it contains `falco` binary, `falco-driver-loader` script, drivers source, and related dependencies\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-1.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 4,
                  "endLine": 29,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n**falco-driver-loader**\n\n*The bash script found [here](https://github.com/falcosecurity/falco/blob/master/scripts/falco-driver-loader) that tries to compile else download the driver (kernel module or eBPF probe).*\n\n**package**\n\n",
                    "rendered": {
                      "text": "\n**falco-driver-loader**\n\n*The bash script found [here](https://github.com/falcosecurity/falco/blob/master/scripts/falco-driver-loader) that tries to compile else download the driver (kernel module or eBPF probe).*\n\n**package**\n\n",
                      "markdown": "`\n**falco-driver-loader**\n\n*The bash script found [here](https://github.com/falcosecurity/falco/blob/master/scripts/falco-driver-loader) that tries to compile else download the driver (kernel module or eBPF probe).*\n\n**package**\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-2.md"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 39,
                  "endLine": 136,
                  "endColumn": 47,
                  "snippet": {
                    "text": " - Announcement on Falco mailing list\n - Issues/Pull Request to Helm chart\n     - Note: At the very least open an issue and document how to make the existing helm chart work with the new changes if needed. [Nova Volunteers]\n     - We should at least open a PR and update the helm chart with these new expectations if needed. [Nova Volunteers]\n     - We should revisit the helm chart OWNERS\n - Twitter\n - Documentation\n",
                    "rendered": {
                      "text": " - Announcement on Falco mailing list\n - Issues/Pull Request to Helm chart\n     - Note: At the very least open an issue and document how to make the existing helm chart work with the new changes if needed. [Nova Volunteers]\n     - We should at least open a PR and update the helm chart with these new expectations if needed. [Nova Volunteers]\n     - We should revisit the helm chart OWNERS\n - Twitter\n - Documentation\n",
                      "markdown": "` - Announcement on Falco mailing list\n - Issues/Pull Request to Helm chart\n     - Note: At the very least open an issue and document how to make the existing helm chart work with the new changes if needed. [Nova Volunteers]\n     - We should at least open a PR and update the helm chart with these new expectations if needed. [Nova Volunteers]\n     - We should revisit the helm chart OWNERS\n - Twitter\n - Documentation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-2.md"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 16,
                  "endLine": 136,
                  "endColumn": 20,
                  "snippet": {
                    "text": " - Announcement on Falco mailing list\n - Issues/Pull Request to Helm chart\n     - Note: At the very least open an issue and document how to make the existing helm chart work with the new changes if needed. [Nova Volunteers]\n     - We should at least open a PR and update the helm chart with these new expectations if needed. [Nova Volunteers]\n     - We should revisit the helm chart OWNERS\n - Twitter\n - Documentation\n",
                    "rendered": {
                      "text": " - Announcement on Falco mailing list\n - Issues/Pull Request to Helm chart\n     - Note: At the very least open an issue and document how to make the existing helm chart work with the new changes if needed. [Nova Volunteers]\n     - We should at least open a PR and update the helm chart with these new expectations if needed. [Nova Volunteers]\n     - We should revisit the helm chart OWNERS\n - Twitter\n - Documentation\n",
                      "markdown": "` - Announcement on Falco mailing list\n - Issues/Pull Request to Helm chart\n     - Note: At the very least open an issue and document how to make the existing helm chart work with the new changes if needed. [Nova Volunteers]\n     - We should at least open a PR and update the helm chart with these new expectations if needed. [Nova Volunteers]\n     - We should revisit the helm chart OWNERS\n - Twitter\n - Documentation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-2.md"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 12,
                  "endLine": 135,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n - Announcement on Falco mailing list\n - Issues/Pull Request to Helm chart\n     - Note: At the very least open an issue and document how to make the existing helm chart work with the new changes if needed. [Nova Volunteers]\n     - We should at least open a PR and update the helm chart with these new expectations if needed. [Nova Volunteers]\n     - We should revisit the helm chart OWNERS\n - Twitter\n",
                    "rendered": {
                      "text": "\n - Announcement on Falco mailing list\n - Issues/Pull Request to Helm chart\n     - Note: At the very least open an issue and document how to make the existing helm chart work with the new changes if needed. [Nova Volunteers]\n     - We should at least open a PR and update the helm chart with these new expectations if needed. [Nova Volunteers]\n     - We should revisit the helm chart OWNERS\n - Twitter\n",
                      "markdown": "`\n - Announcement on Falco mailing list\n - Issues/Pull Request to Helm chart\n     - Note: At the very least open an issue and document how to make the existing helm chart work with the new changes if needed. [Nova Volunteers]\n     - We should at least open a PR and update the helm chart with these new expectations if needed. [Nova Volunteers]\n     - We should revisit the helm chart OWNERS\n - Twitter\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-2.md"
                },
                "region": {
                  "startLine": 122,
                  "endLine": 123,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    - Create `usage` commands for every docker image\n    \n### Documentation\n\nUpdate documentation in [falco-website](https://github.com/falcosecurity/falco-website/)\n\n#### Note:\n\n",
                    "rendered": {
                      "text": "    - Create `usage` commands for every docker image\n    \n### Documentation\n\nUpdate documentation in [falco-website](https://github.com/falcosecurity/falco-website/)\n\n#### Note:\n\n",
                      "markdown": "`    - Create `usage` commands for every docker image\n    \n### Documentation\n\nUpdate documentation in [falco-website](https://github.com/falcosecurity/falco-website/)\n\n#### Note:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-2.md"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 71,
                  "endLine": 105,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n## Action\n\nFor each item, ask if this already exists. If so we need to rename, and update it to match this new convention. If does not exist, add it.\n\n    \n### Action Items\n",
                    "rendered": {
                      "text": "\n## Action\n\nFor each item, ask if this already exists. If so we need to rename, and update it to match this new convention. If does not exist, add it.\n\n    \n### Action Items\n",
                      "markdown": "`\n## Action\n\nFor each item, ask if this already exists. If so we need to rename, and update it to match this new convention. If does not exist, add it.\n\n    \n### Action Items\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-2.md"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 39,
                  "endLine": 119,
                  "endColumn": 47,
                  "snippet": {
                    "text": " - Add `Makefile` where needed\n - Implement missing packages\n    - Rename `SKIP_MODULE_LOAD` environment variable of docker images to `SKIP_DRIVER_LOADER`\n    - Create `usage` commands for every docker image\n    \n### Documentation\n\n",
                    "rendered": {
                      "text": " - Add `Makefile` where needed\n - Implement missing packages\n    - Rename `SKIP_MODULE_LOAD` environment variable of docker images to `SKIP_DRIVER_LOADER`\n    - Create `usage` commands for every docker image\n    \n### Documentation\n\n",
                      "markdown": "` - Add `Makefile` where needed\n - Implement missing packages\n    - Rename `SKIP_MODULE_LOAD` environment variable of docker images to `SKIP_DRIVER_LOADER`\n    - Create `usage` commands for every docker image\n    \n### Documentation\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-2.md"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 55,
                  "endLine": 118,
                  "endColumn": 63,
                  "snippet": {
                    "text": " - Documentation in all packages with `INSTALL` file\n - Add `Makefile` where needed\n - Implement missing packages\n    - Rename `SKIP_MODULE_LOAD` environment variable of docker images to `SKIP_DRIVER_LOADER`\n    - Create `usage` commands for every docker image\n    \n### Documentation\n",
                    "rendered": {
                      "text": " - Documentation in all packages with `INSTALL` file\n - Add `Makefile` where needed\n - Implement missing packages\n    - Rename `SKIP_MODULE_LOAD` environment variable of docker images to `SKIP_DRIVER_LOADER`\n    - Create `usage` commands for every docker image\n    \n### Documentation\n",
                      "markdown": "` - Documentation in all packages with `INSTALL` file\n - Add `Makefile` where needed\n - Implement missing packages\n    - Rename `SKIP_MODULE_LOAD` environment variable of docker images to `SKIP_DRIVER_LOADER`\n    - Create `usage` commands for every docker image\n    \n### Documentation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-2.md"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 9,
                  "endLine": 113,
                  "endColumn": 17,
                  "snippet": {
                    "text": "Here are SOME of the items that would need to be done for example:\n\n - Rename package accordingly \n - Rename docker images accordingly \n     - Evaluate how to call what's currently called `falcosecurity/falco:latest-slim`\n - Documentation in all packages with `INSTALL` file\n - Add `Makefile` where needed\n",
                    "rendered": {
                      "text": "Here are SOME of the items that would need to be done for example:\n\n - Rename package accordingly \n - Rename docker images accordingly \n     - Evaluate how to call what's currently called `falcosecurity/falco:latest-slim`\n - Documentation in all packages with `INSTALL` file\n - Add `Makefile` where needed\n",
                      "markdown": "`Here are SOME of the items that would need to be done for example:\n\n - Rename package accordingly \n - Rename docker images accordingly \n     - Evaluate how to call what's currently called `falcosecurity/falco:latest-slim`\n - Documentation in all packages with `INSTALL` file\n - Add `Makefile` where needed\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-2.md"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 83,
                  "endLine": 55,
                  "endColumn": 88,
                  "snippet": {
                    "text": " - falco-*x.y.z*-bpf-x86_64.rpm\n     - `falco` and `bpf`\n\nWe reserve the right to change the naming convention of rpm packages accordingly to rpm conventions.\n\n### .tar.gz\n\n",
                    "rendered": {
                      "text": " - falco-*x.y.z*-bpf-x86_64.rpm\n     - `falco` and `bpf`\n\nWe reserve the right to change the naming convention of rpm packages accordingly to rpm conventions.\n\n### .tar.gz\n\n",
                      "markdown": "` - falco-*x.y.z*-bpf-x86_64.rpm\n     - `falco` and `bpf`\n\nWe reserve the right to change the naming convention of rpm packages accordingly to rpm conventions.\n\n### .tar.gz\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-2.md"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 55,
                  "endLine": 55,
                  "endColumn": 60,
                  "snippet": {
                    "text": " - falco-*x.y.z*-bpf-x86_64.rpm\n     - `falco` and `bpf`\n\nWe reserve the right to change the naming convention of rpm packages accordingly to rpm conventions.\n\n### .tar.gz\n\n",
                    "rendered": {
                      "text": " - falco-*x.y.z*-bpf-x86_64.rpm\n     - `falco` and `bpf`\n\nWe reserve the right to change the naming convention of rpm packages accordingly to rpm conventions.\n\n### .tar.gz\n\n",
                      "markdown": "` - falco-*x.y.z*-bpf-x86_64.rpm\n     - `falco` and `bpf`\n\nWe reserve the right to change the naming convention of rpm packages accordingly to rpm conventions.\n\n### .tar.gz\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200506-artifacts-scope-part-2.md"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 17,
                  "endLine": 46,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n### .rpm\n\n Falco running in rpm like systems that will default to the kernel module.\n\n- falco-*x.y.z*-x86_64.rpm\n     - alias to ` falco-*x.y.z*-module-x86_64.rpm`\n",
                    "rendered": {
                      "text": "\n### .rpm\n\n Falco running in rpm like systems that will default to the kernel module.\n\n- falco-*x.y.z*-x86_64.rpm\n     - alias to ` falco-*x.y.z*-module-x86_64.rpm`\n",
                      "markdown": "`\n### .rpm\n\n Falco running in rpm like systems that will default to the kernel module.\n\n- falco-*x.y.z*-x86_64.rpm\n     - alias to ` falco-*x.y.z*-module-x86_64.rpm`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/formats.cpp"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 22,
                  "endLine": 107,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tevent[\"rule\"] = rule;\n\t\tevent[\"priority\"] = level;\n\t\tevent[\"source\"] = source;\n\t\tevent[\"hostname\"] = hostname;\n\n\t\tif(m_json_include_output_property) {\n\t\t\tevent[\"output\"] = output;\n",
                    "rendered": {
                      "text": "\t\tevent[\"rule\"] = rule;\n\t\tevent[\"priority\"] = level;\n\t\tevent[\"source\"] = source;\n\t\tevent[\"hostname\"] = hostname;\n\n\t\tif(m_json_include_output_property) {\n\t\t\tevent[\"output\"] = output;\n",
                      "markdown": "`\t\tevent[\"rule\"] = rule;\n\t\tevent[\"priority\"] = level;\n\t\tevent[\"source\"] = source;\n\t\tevent[\"hostname\"] = hostname;\n\n\t\tif(m_json_include_output_property) {\n\t\t\tevent[\"output\"] = output;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/formats.cpp"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 9,
                  "endLine": 107,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\tevent[\"rule\"] = rule;\n\t\tevent[\"priority\"] = level;\n\t\tevent[\"source\"] = source;\n\t\tevent[\"hostname\"] = hostname;\n\n\t\tif(m_json_include_output_property) {\n\t\t\tevent[\"output\"] = output;\n",
                    "rendered": {
                      "text": "\t\tevent[\"rule\"] = rule;\n\t\tevent[\"priority\"] = level;\n\t\tevent[\"source\"] = source;\n\t\tevent[\"hostname\"] = hostname;\n\n\t\tif(m_json_include_output_property) {\n\t\t\tevent[\"output\"] = output;\n",
                      "markdown": "`\t\tevent[\"rule\"] = rule;\n\t\tevent[\"priority\"] = level;\n\t\tevent[\"source\"] = source;\n\t\tevent[\"hostname\"] = hostname;\n\n\t\tif(m_json_include_output_property) {\n\t\t\tevent[\"output\"] = output;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/formats.cpp"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 59,
                  "endLine": 42,
                  "endColumn": 67,
                  "snippet": {
                    "text": "                                        const std::string &level,\n                                        const std::string &format,\n                                        const std::set<std::string> &tags,\n                                        const std::string &hostname,\n                                        const extra_output_field_t &extra_fields) const {\n\tstd::string prefix_format;\n\tstd::string message_format = format;\n",
                    "rendered": {
                      "text": "                                        const std::string &level,\n                                        const std::string &format,\n                                        const std::set<std::string> &tags,\n                                        const std::string &hostname,\n                                        const extra_output_field_t &extra_fields) const {\n\tstd::string prefix_format;\n\tstd::string message_format = format;\n",
                      "markdown": "`                                        const std::string &level,\n                                        const std::string &format,\n                                        const std::set<std::string> &tags,\n                                        const std::string &hostname,\n                                        const extra_output_field_t &extra_fields) const {\n\tstd::string prefix_format;\n\tstd::string message_format = format;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/formats.cpp"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 33,
                  "endLine": 88,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n\t\t// For JSON output, the formatter returned a json-as-text\n\t\t// object containing all the fields in the original format\n\t\t// message as well as the event time in ns. Use this to build\n\t\t// a more detailed object containing the event time, rule,\n\t\t// severity, full output, and fields.\n\t\tnlohmann::json event;\n",
                    "rendered": {
                      "text": "\n\t\t// For JSON output, the formatter returned a json-as-text\n\t\t// object containing all the fields in the original format\n\t\t// message as well as the event time in ns. Use this to build\n\t\t// a more detailed object containing the event time, rule,\n\t\t// severity, full output, and fields.\n\t\tnlohmann::json event;\n",
                      "markdown": "`\n\t\t// For JSON output, the formatter returned a json-as-text\n\t\t// object containing all the fields in the original format\n\t\t// message as well as the event time in ns. Use this to build\n\t\t// a more detailed object containing the event time, rule,\n\t\t// severity, full output, and fields.\n\t\tnlohmann::json event;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/formats.cpp"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 40,
                  "endLine": 63,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\tauto prefix_formatter = m_falco_engine->create_formatter(source, prefix_format);\n\tauto message_formatter = m_falco_engine->create_formatter(source, message_format);\n\n\t// The classic Falco output prefix with time and priority e.g. \"13:53:31.726060287: Critical\"\n\tstd::string prefix;\n\tprefix_formatter->tostring_withformat(evt, prefix, sinsp_evt_formatter::OF_NORMAL);\n\n",
                    "rendered": {
                      "text": "\tauto prefix_formatter = m_falco_engine->create_formatter(source, prefix_format);\n\tauto message_formatter = m_falco_engine->create_formatter(source, message_format);\n\n\t// The classic Falco output prefix with time and priority e.g. \"13:53:31.726060287: Critical\"\n\tstd::string prefix;\n\tprefix_formatter->tostring_withformat(evt, prefix, sinsp_evt_formatter::OF_NORMAL);\n\n",
                      "markdown": "`\tauto prefix_formatter = m_falco_engine->create_formatter(source, prefix_format);\n\tauto message_formatter = m_falco_engine->create_formatter(source, message_format);\n\n\t// The classic Falco output prefix with time and priority e.g. \"13:53:31.726060287: Critical\"\n\tstd::string prefix;\n\tprefix_formatter->tostring_withformat(evt, prefix, sinsp_evt_formatter::OF_NORMAL);\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_falco_engine.cpp"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 38,
                  "endLine": 89,
                  "endColumn": 43,
                  "snippet": {
                    "text": "void add_source_to_engine(falco::app::state& s, const std::string& src) {\n\tauto src_info = s.source_infos.at(src);\n\tauto& filterchecks = *src_info->filterchecks;\n\tauto* inspector = src_info->inspector.get();\n\n\tauto filter_factory = std::make_shared<sinsp_filter_factory>(inspector, filterchecks);\n\tauto formatter_factory = std::make_shared<sinsp_evt_formatter_factory>(inspector, filterchecks);\n",
                    "rendered": {
                      "text": "void add_source_to_engine(falco::app::state& s, const std::string& src) {\n\tauto src_info = s.source_infos.at(src);\n\tauto& filterchecks = *src_info->filterchecks;\n\tauto* inspector = src_info->inspector.get();\n\n\tauto filter_factory = std::make_shared<sinsp_filter_factory>(inspector, filterchecks);\n\tauto formatter_factory = std::make_shared<sinsp_evt_formatter_factory>(inspector, filterchecks);\n",
                      "markdown": "`void add_source_to_engine(falco::app::state& s, const std::string& src) {\n\tauto src_info = s.source_infos.at(src);\n\tauto& filterchecks = *src_info->filterchecks;\n\tauto* inspector = src_info->inspector.get();\n\n\tauto filter_factory = std::make_shared<sinsp_filter_factory>(inspector, filterchecks);\n\tauto formatter_factory = std::make_shared<sinsp_evt_formatter_factory>(inspector, filterchecks);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 41,
                  "endLine": 167,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\nThis proposal mandates making use of official documentation (i.e., falco.org) to state official items, such as artifacts, distribution channels, and mirrors.\n\nFor that reason, it becomes imperative to update the documentation periodically concerning the list of officially supported distribution channels and mirrors.\n\n### Usage of GitHub Packages\n\n",
                    "rendered": {
                      "text": "\nThis proposal mandates making use of official documentation (i.e., falco.org) to state official items, such as artifacts, distribution channels, and mirrors.\n\nFor that reason, it becomes imperative to update the documentation periodically concerning the list of officially supported distribution channels and mirrors.\n\n### Usage of GitHub Packages\n\n",
                      "markdown": "`\nThis proposal mandates making use of official documentation (i.e., falco.org) to state official items, such as artifacts, distribution channels, and mirrors.\n\nFor that reason, it becomes imperative to update the documentation periodically concerning the list of officially supported distribution channels and mirrors.\n\n### Usage of GitHub Packages\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 3,
                  "endLine": 163,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nThis implicitly requires that `falcoctl` be shipped in a bundle with Falco.\n\n### Update the documentation\n\nThis proposal mandates making use of official documentation (i.e., falco.org) to state official items, such as artifacts, distribution channels, and mirrors.\n\n",
                    "rendered": {
                      "text": "\nThis implicitly requires that `falcoctl` be shipped in a bundle with Falco.\n\n### Update the documentation\n\nThis proposal mandates making use of official documentation (i.e., falco.org) to state official items, such as artifacts, distribution channels, and mirrors.\n\n",
                      "markdown": "`\nThis implicitly requires that `falcoctl` be shipped in a bundle with Falco.\n\n### Update the documentation\n\nThis proposal mandates making use of official documentation (i.e., falco.org) to state official items, such as artifacts, distribution channels, and mirrors.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 152,
                  "endLine": 153,
                  "endColumn": 3,
                  "snippet": {
                    "text": "ering the centrality of falcoctl for managing official artifacts for Falco, the falcoctl project must be promoted to \"Official\" status, and its repository assumed to be [core](https://github.com/falcosecurity/evolution/blob/main/GOVERNANCE.md#core-repositories).\n\n### Deprecate `falco-driver-loader`\n\nAt the time of writing, `falco-driver-loader` is a shell script shipped in a bundle with Falco that has the responsibility of installing a driver by either downloading it from our distribution channels or trying to build it on-the-fly.\n\nOur experience showed all the limitations of this approach, and it",
                    "rendered": {
                      "text": "ering the centrality of falcoctl for managing official artifacts for Falco, the falcoctl project must be promoted to \"Official\" status, and its repository assumed to be [core](https://github.com/falcosecurity/evolution/blob/main/GOVERNANCE.md#core-repositories).\n\n### Deprecate `falco-driver-loader`\n\nAt the time of writing, `falco-driver-loader` is a shell script shipped in a bundle with Falco that has the responsibility of installing a driver by either downloading it from our distribution channels or trying to build it on-the-fly.\n\nOur experience showed all the limitations of this approach, and it",
                      "markdown": "`ering the centrality of falcoctl for managing official artifacts for Falco, the falcoctl project must be promoted to \"Official\" status, and its repository assumed to be [core](https://github.com/falcosecurity/evolution/blob/main/GOVERNANCE.md#core-repositories).\n\n### Deprecate `falco-driver-loader`\n\nAt the time of writing, `falco-driver-loader` is a shell script shipped in a bundle with Falco that has the responsibility of installing a driver by either downloading it from our distribution channels or trying to build it on-the-fly.\n\nOur experience showed all the limitations of this approach, and it`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 82,
                  "endColumn": 3,
                  "snippet": {
                    "text": "/) (which is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n\n#### Other channels\n\nAt the time of writing, no other distribution channels are present or needed. However, in case a new kind of artifact will require a particular distribution mechanism (for example, in case an existing package manager system need to consume the artifact using its protocol), the rule of thumb is first to",
                    "rendered": {
                      "text": "/) (which is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n\n#### Other channels\n\nAt the time of writing, no other distribution channels are present or needed. However, in case a new kind of artifact will require a particular distribution mechanism (for example, in case an existing package manager system need to consume the artifact using its protocol), the rule of thumb is first to",
                      "markdown": "`/) (which is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n\n#### Other channels\n\nAt the time of writing, no other distribution channels are present or needed. However, in case a new kind of artifact will require a particular distribution mechanism (for example, in case an existing package manager system need to consume the artifact using its protocol), the rule of thumb is first to`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 46,
                  "endLine": 75,
                  "endColumn": 50,
                  "snippet": {
                    "text": "Mirrors are allowed and encouraged if they facilitate artifacts consumption by our users. This proposal recommends to enable mirrors on the major public OCI registry, such as [Amazon ECR](https://gallery.ecr.aws/) (which is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n",
                    "rendered": {
                      "text": "Mirrors are allowed and encouraged if they facilitate artifacts consumption by our users. This proposal recommends to enable mirrors on the major public OCI registry, such as [Amazon ECR](https://gallery.ecr.aws/) (which is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n",
                      "markdown": "`Mirrors are allowed and encouraged if they facilitate artifacts consumption by our users. This proposal recommends to enable mirrors on the major public OCI registry, such as [Amazon ECR](https://gallery.ecr.aws/) (which is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 255,
                  "endLine": 72,
                  "endColumn": 259,
                  "snippet": {
                    "text": "of artifacts (e.g., plugins, rules, etc.).\n\n\nMirrors are allowed and encouraged if they facilitate artifacts consumption by our users. This proposal recommends to enable mirrors on the major public OCI registry, such as [Amazon ECR](https://gallery.ecr.aws/) (which is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n\n#### Other channels\n\nAt the time of writing, no other distribution c",
                    "rendered": {
                      "text": "of artifacts (e.g., plugins, rules, etc.).\n\n\nMirrors are allowed and encouraged if they facilitate artifacts consumption by our users. This proposal recommends to enable mirrors on the major public OCI registry, such as [Amazon ECR](https://gallery.ecr.aws/) (which is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n\n#### Other channels\n\nAt the time of writing, no other distribution c",
                      "markdown": "`of artifacts (e.g., plugins, rules, etc.).\n\n\nMirrors are allowed and encouraged if they facilitate artifacts consumption by our users. This proposal recommends to enable mirrors on the major public OCI registry, such as [Amazon ECR](https://gallery.ecr.aws/) (which is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n\n#### Other channels\n\nAt the time of writing, no other distribution c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 88,
                  "endLine": 46,
                  "endColumn": 92,
                  "snippet": {
                    "text": "oad.falco.org](https://download.falco.org/)** where most of the file artifacts lives\n- **endpoints made available by GitHub** for the Falcosecurity organization (e.g., release download URL, GitHub pages, etc.).\n\nTypically, all official artifacts that can be shipped as plain files should be published at [download.falco.org](https://download.falco.org/) and available for download. \n\nUsing the GitHub platform is allowed as an alternative assuming that artifacts are published under the Falcosecurity organization and the GitHub platform usage limitations are being respected (a notable example is publis",
                    "rendered": {
                      "text": "oad.falco.org](https://download.falco.org/)** where most of the file artifacts lives\n- **endpoints made available by GitHub** for the Falcosecurity organization (e.g., release download URL, GitHub pages, etc.).\n\nTypically, all official artifacts that can be shipped as plain files should be published at [download.falco.org](https://download.falco.org/) and available for download. \n\nUsing the GitHub platform is allowed as an alternative assuming that artifacts are published under the Falcosecurity organization and the GitHub platform usage limitations are being respected (a notable example is publis",
                      "markdown": "`oad.falco.org](https://download.falco.org/)** where most of the file artifacts lives\n- **endpoints made available by GitHub** for the Falcosecurity organization (e.g., release download URL, GitHub pages, etc.).\n\nTypically, all official artifacts that can be shipped as plain files should be published at [download.falco.org](https://download.falco.org/) and available for download. \n\nUsing the GitHub platform is allowed as an alternative assuming that artifacts are published under the Falcosecurity organization and the GitHub platform usage limitations are being respected (a notable example is publis`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 24,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\nWith officially supported artifacts, we mean that set of artifacts published \nby Falcosecurity as part of Falco or its ecosystem.\n\nAt the time of writing, the Falcosecurity organization distributes several kinds of artifacts in the form of files or container images. They include:\n- Installation packages\n- Helm charts\n- Drivers (eg, kmod, eBPF)\n",
                    "rendered": {
                      "text": "\nWith officially supported artifacts, we mean that set of artifacts published \nby Falcosecurity as part of Falco or its ecosystem.\n\nAt the time of writing, the Falcosecurity organization distributes several kinds of artifacts in the form of files or container images. They include:\n- Installation packages\n- Helm charts\n- Drivers (eg, kmod, eBPF)\n",
                      "markdown": "`\nWith officially supported artifacts, we mean that set of artifacts published \nby Falcosecurity as part of Falco or its ecosystem.\n\nAt the time of writing, the Falcosecurity organization distributes several kinds of artifacts in the form of files or container images. They include:\n- Installation packages\n- Helm charts\n- Drivers (eg, kmod, eBPF)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 105,
                  "endLine": 159,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\nThus, this proposal mandates to deprecate of `falco-driver-loader` in favor of `falcoctl.`\n\nHowever, to avoid user disruption and breaking legacy use case, it's recommended to provide still a faced script that exposes the same command line usage of `falco-driver-loader` but forward its execution to the new tool `falcoctl`.\n\nThis implicitly requires that `falcoctl` be shipped in a bundle with Falco.\n\n",
                    "rendered": {
                      "text": "\nThus, this proposal mandates to deprecate of `falco-driver-loader` in favor of `falcoctl.`\n\nHowever, to avoid user disruption and breaking legacy use case, it's recommended to provide still a faced script that exposes the same command line usage of `falco-driver-loader` but forward its execution to the new tool `falcoctl`.\n\nThis implicitly requires that `falcoctl` be shipped in a bundle with Falco.\n\n",
                      "markdown": "`\nThus, this proposal mandates to deprecate of `falco-driver-loader` in favor of `falcoctl.`\n\nHowever, to avoid user disruption and breaking legacy use case, it's recommended to provide still a faced script that exposes the same command line usage of `falco-driver-loader` but forward its execution to the new tool `falcoctl`.\n\nThis implicitly requires that `falcoctl` be shipped in a bundle with Falco.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 91,
                  "endLine": 155,
                  "endColumn": 99,
                  "snippet": {
                    "text": "\nAt the time of writing, `falco-driver-loader` is a shell script shipped in a bundle with Falco that has the responsibility of installing a driver by either downloading it from our distribution channels or trying to build it on-the-fly.\n\nOur experience showed all the limitations of this approach, and it's now clear that such as script is hard to maintain. Furthermore, its responsibility overlaps with our aim to use `falcoctl` as the tool for managing artifacts.\n\nThus, this proposal mandates to deprecate of `falco-driver-loader` in favor of `falcoctl.`\n\n",
                    "rendered": {
                      "text": "\nAt the time of writing, `falco-driver-loader` is a shell script shipped in a bundle with Falco that has the responsibility of installing a driver by either downloading it from our distribution channels or trying to build it on-the-fly.\n\nOur experience showed all the limitations of this approach, and it's now clear that such as script is hard to maintain. Furthermore, its responsibility overlaps with our aim to use `falcoctl` as the tool for managing artifacts.\n\nThus, this proposal mandates to deprecate of `falco-driver-loader` in favor of `falcoctl.`\n\n",
                      "markdown": "`\nAt the time of writing, `falco-driver-loader` is a shell script shipped in a bundle with Falco that has the responsibility of installing a driver by either downloading it from our distribution channels or trying to build it on-the-fly.\n\nOur experience showed all the limitations of this approach, and it's now clear that such as script is hard to maintain. Furthermore, its responsibility overlaps with our aim to use `falcoctl` as the tool for managing artifacts.\n\nThus, this proposal mandates to deprecate of `falco-driver-loader` in favor of `falcoctl.`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 56,
                  "endLine": 153,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\n### Deprecate `falco-driver-loader`\n\nAt the time of writing, `falco-driver-loader` is a shell script shipped in a bundle with Falco that has the responsibility of installing a driver by either downloading it from our distribution channels or trying to build it on-the-fly.\n\nOur experience showed all the limitations of this approach, and it's now clear that such as script is hard to maintain. Furthermore, its responsibility overlaps with our aim to use `falcoctl` as the tool for managing artifacts.\n\n",
                    "rendered": {
                      "text": "\n### Deprecate `falco-driver-loader`\n\nAt the time of writing, `falco-driver-loader` is a shell script shipped in a bundle with Falco that has the responsibility of installing a driver by either downloading it from our distribution channels or trying to build it on-the-fly.\n\nOur experience showed all the limitations of this approach, and it's now clear that such as script is hard to maintain. Furthermore, its responsibility overlaps with our aim to use `falcoctl` as the tool for managing artifacts.\n\n",
                      "markdown": "`\n### Deprecate `falco-driver-loader`\n\nAt the time of writing, `falco-driver-loader` is a shell script shipped in a bundle with Falco that has the responsibility of installing a driver by either downloading it from our distribution channels or trying to build it on-the-fly.\n\nOur experience showed all the limitations of this approach, and it's now clear that such as script is hard to maintain. Furthermore, its responsibility overlaps with our aim to use `falcoctl` as the tool for managing artifacts.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 6,
                  "endLine": 153,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n### Deprecate `falco-driver-loader`\n\nAt the time of writing, `falco-driver-loader` is a shell script shipped in a bundle with Falco that has the responsibility of installing a driver by either downloading it from our distribution channels or trying to build it on-the-fly.\n\nOur experience showed all the limitations of this approach, and it's now clear that such as script is hard to maintain. Furthermore, its responsibility overlaps with our aim to use `falcoctl` as the tool for managing artifacts.\n\n",
                    "rendered": {
                      "text": "\n### Deprecate `falco-driver-loader`\n\nAt the time of writing, `falco-driver-loader` is a shell script shipped in a bundle with Falco that has the responsibility of installing a driver by either downloading it from our distribution channels or trying to build it on-the-fly.\n\nOur experience showed all the limitations of this approach, and it's now clear that such as script is hard to maintain. Furthermore, its responsibility overlaps with our aim to use `falcoctl` as the tool for managing artifacts.\n\n",
                      "markdown": "`\n### Deprecate `falco-driver-loader`\n\nAt the time of writing, `falco-driver-loader` is a shell script shipped in a bundle with Falco that has the responsibility of installing a driver by either downloading it from our distribution channels or trying to build it on-the-fly.\n\nOur experience showed all the limitations of this approach, and it's now clear that such as script is hard to maintain. Furthermore, its responsibility overlaps with our aim to use `falcoctl` as the tool for managing artifacts.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 376,
                  "endLine": 91,
                  "endColumn": 381,
                  "snippet": {
                    "text": " thru an auditable and reproducible process that runs on our infra. It's recommended that the naming and versioning of the published artifact consistently match the originating repository's naming and versioning. For example, the package `falco-0.33.0-x86_64.tar.gz` must match the source code of the git tag [0.33.0](https://github.com/falcosecurity/falco/tree/0.33.0) of the [falco](https://github.com/falcosecurity/falco) repository.\n\nIt's recommended that **each repository publish only one kind of artifact** associated with it. \n\nExceptions are allowed for:\n - mono repos (notably [charts](https://g",
                    "rendered": {
                      "text": " thru an auditable and reproducible process that runs on our infra. It's recommended that the naming and versioning of the published artifact consistently match the originating repository's naming and versioning. For example, the package `falco-0.33.0-x86_64.tar.gz` must match the source code of the git tag [0.33.0](https://github.com/falcosecurity/falco/tree/0.33.0) of the [falco](https://github.com/falcosecurity/falco) repository.\n\nIt's recommended that **each repository publish only one kind of artifact** associated with it. \n\nExceptions are allowed for:\n - mono repos (notably [charts](https://g",
                      "markdown": "` thru an auditable and reproducible process that runs on our infra. It's recommended that the naming and versioning of the published artifact consistently match the originating repository's naming and versioning. For example, the package `falco-0.33.0-x86_64.tar.gz` must match the source code of the git tag [0.33.0](https://github.com/falcosecurity/falco/tree/0.33.0) of the [falco](https://github.com/falcosecurity/falco) repository.\n\nIt's recommended that **each repository publish only one kind of artifact** associated with it. \n\nExceptions are allowed for:\n - mono repos (notably [charts](https://g`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 6,
                  "endLine": 82,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ch is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n\n#### Other channels\n\nAt the time of writing, no other distribution channels are present or needed. However, in case a new kind of artifact will require a particular distribution mechanism (for example, in case an existing package manager system need to consume the artifact using its protocol), the rule of thumb is first to use the ",
                    "rendered": {
                      "text": "ch is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n\n#### Other channels\n\nAt the time of writing, no other distribution channels are present or needed. However, in case a new kind of artifact will require a particular distribution mechanism (for example, in case an existing package manager system need to consume the artifact using its protocol), the rule of thumb is first to use the ",
                      "markdown": "`ch is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n\n#### Other channels\n\nAt the time of writing, no other distribution channels are present or needed. However, in case a new kind of artifact will require a particular distribution mechanism (for example, in case an existing package manager system need to consume the artifact using its protocol), the rule of thumb is first to use the `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 262,
                  "endLine": 72,
                  "endColumn": 268,
                  "snippet": {
                    "text": "facts (e.g., plugins, rules, etc.).\n\n\nMirrors are allowed and encouraged if they facilitate artifacts consumption by our users. This proposal recommends to enable mirrors on the major public OCI registry, such as [Amazon ECR](https://gallery.ecr.aws/) (which is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n\n#### Other channels\n\nAt the time of writing, no other distribution channels a",
                    "rendered": {
                      "text": "facts (e.g., plugins, rules, etc.).\n\n\nMirrors are allowed and encouraged if they facilitate artifacts consumption by our users. This proposal recommends to enable mirrors on the major public OCI registry, such as [Amazon ECR](https://gallery.ecr.aws/) (which is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n\n#### Other channels\n\nAt the time of writing, no other distribution channels a",
                      "markdown": "`facts (e.g., plugins, rules, etc.).\n\n\nMirrors are allowed and encouraged if they facilitate artifacts consumption by our users. This proposal recommends to enable mirrors on the major public OCI registry, such as [Amazon ECR](https://gallery.ecr.aws/) (which is already implentend in our infra at the time of writing).\n\n\nOfficial **channels and mirrors must be listed at [falco.org](https://falco.org/)**. \n\nIt is allowed to publish other non-official artifacts, even using image tags, taking that those are correctly denoted.\n\n\n#### Other channels\n\nAt the time of writing, no other distribution channels a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 18,
                  "endLine": 65,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n| Registry | Name | Account URL |\n| -------- | -------- | -------- |\n| `docker.io`    | Docker Hub     | https://hub.docker.com/u/falcosecurity |\n| `ghcr.io`    | Github Packages Container registry     | https://github.com/orgs/falcosecurity/packages |\n\n\n",
                    "rendered": {
                      "text": "\n| Registry | Name | Account URL |\n| -------- | -------- | -------- |\n| `docker.io`    | Docker Hub     | https://hub.docker.com/u/falcosecurity |\n| `ghcr.io`    | Github Packages Container registry     | https://github.com/orgs/falcosecurity/packages |\n\n\n",
                      "markdown": "`\n| Registry | Name | Account URL |\n| -------- | -------- | -------- |\n| `docker.io`    | Docker Hub     | https://hub.docker.com/u/falcosecurity |\n| `ghcr.io`    | Github Packages Container registry     | https://github.com/orgs/falcosecurity/packages |\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 122,
                  "endLine": 40,
                  "endColumn": 130,
                  "snippet": {
                    "text": "\n#### HTTP Distribution\n\nDistributing artifacts as plain files via HTTP is mostly intended for **humans, simple and legacy clients** (e.g., a shell script that downloads a file). \n\nThe allowed publishing channels are:\n- **[download.falco.org](https://download.falco.org/)** where most of the file artifacts lives\n",
                    "rendered": {
                      "text": "\n#### HTTP Distribution\n\nDistributing artifacts as plain files via HTTP is mostly intended for **humans, simple and legacy clients** (e.g., a shell script that downloads a file). \n\nThe allowed publishing channels are:\n- **[download.falco.org](https://download.falco.org/)** where most of the file artifacts lives\n",
                      "markdown": "`\n#### HTTP Distribution\n\nDistributing artifacts as plain files via HTTP is mostly intended for **humans, simple and legacy clients** (e.g., a shell script that downloads a file). \n\nThe allowed publishing channels are:\n- **[download.falco.org](https://download.falco.org/)** where most of the file artifacts lives\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20221129-artifacts-distribution.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 6,
                  "endLine": 24,
                  "endColumn": 12,
                  "snippet": {
                    "text": "With officially supported artifacts, we mean that set of artifacts published \nby Falcosecurity as part of Falco or its ecosystem.\n\nAt the time of writing, the Falcosecurity organization distributes several kinds of artifacts in the form of files or container images. They include:\n- Installation packages\n- Helm charts\n- Drivers (eg, kmod, eBPF)\n",
                    "rendered": {
                      "text": "With officially supported artifacts, we mean that set of artifacts published \nby Falcosecurity as part of Falco or its ecosystem.\n\nAt the time of writing, the Falcosecurity organization distributes several kinds of artifacts in the form of files or container images. They include:\n- Installation packages\n- Helm charts\n- Drivers (eg, kmod, eBPF)\n",
                      "markdown": "`With officially supported artifacts, we mean that set of artifacts published \nby Falcosecurity as part of Falco or its ecosystem.\n\nAt the time of writing, the Falcosecurity organization distributes several kinds of artifacts in the form of files or container images. They include:\n- Installation packages\n- Helm charts\n- Drivers (eg, kmod, eBPF)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20190826-grpc-outputs.md"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 9,
                  "endLine": 111,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  string rule = 4;\n  string output = 5;\n  map<string, string> output_fields = 6;\n  string hostname = 7;\n}\n```\n\n",
                    "rendered": {
                      "text": "  string rule = 4;\n  string output = 5;\n  map<string, string> output_fields = 6;\n  string hostname = 7;\n}\n```\n\n",
                      "markdown": "`  string rule = 4;\n  string output = 5;\n  map<string, string> output_fields = 6;\n  string hostname = 7;\n}\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20190826-grpc-outputs.md"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 26,
                  "endColumn": 3,
                  "snippet": {
                    "text": "The most valuable information that Falco can give to its users are the alerts.\n\nAn alert is an \"output\" when it goes over a transport, and it is emitted by Falco every time a rule is matched.\n\nAt the current moment, however, Falco can deliver alerts in a very basic way, for example by dumping them to standard output.\n\nFor this reason, many Falco users asked, with issues - eg., [falco#528](https://github.com/falcosecurity/falco/issues/528) - or in the [slack channel](https://slack.k8s.io) if we can find a more consumable way to implement Falco outputs in an extensible way.\n\n",
                    "rendered": {
                      "text": "The most valuable information that Falco can give to its users are the alerts.\n\nAn alert is an \"output\" when it goes over a transport, and it is emitted by Falco every time a rule is matched.\n\nAt the current moment, however, Falco can deliver alerts in a very basic way, for example by dumping them to standard output.\n\nFor this reason, many Falco users asked, with issues - eg., [falco#528](https://github.com/falcosecurity/falco/issues/528) - or in the [slack channel](https://slack.k8s.io) if we can find a more consumable way to implement Falco outputs in an extensible way.\n\n",
                      "markdown": "`The most valuable information that Falco can give to its users are the alerts.\n\nAn alert is an \"output\" when it goes over a transport, and it is emitted by Falco every time a rule is matched.\n\nAt the current moment, however, Falco can deliver alerts in a very basic way, for example by dumping them to standard output.\n\nFor this reason, many Falco users asked, with issues - eg., [falco#528](https://github.com/falcosecurity/falco/issues/528) - or in the [slack channel](https://slack.k8s.io) if we can find a more consumable way to implement Falco outputs in an extensible way.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20190826-grpc-outputs.md"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 27,
                  "endLine": 105,
                  "endColumn": 33,
                  "snippet": {
                    "text": "// It contains all the elements that Falco emits in an output along with the\n// definitions for priorities and source.\nmessage response {\n  google.protobuf.Timestamp time = 1;\n  falco.schema.priority priority = 2;\n  falco.schema.source source = 3;\n  string rule = 4;\n",
                    "rendered": {
                      "text": "// It contains all the elements that Falco emits in an output along with the\n// definitions for priorities and source.\nmessage response {\n  google.protobuf.Timestamp time = 1;\n  falco.schema.priority priority = 2;\n  falco.schema.source source = 3;\n  string rule = 4;\n",
                      "markdown": "`// It contains all the elements that Falco emits in an output along with the\n// definitions for priorities and source.\nmessage response {\n  google.protobuf.Timestamp time = 1;\n  falco.schema.priority priority = 2;\n  falco.schema.source source = 3;\n  string rule = 4;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20190826-grpc-outputs.md"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 47,
                  "endLine": 89,
                  "endColumn": 8,
                  "snippet": {
                    "text": "option go_package = \"github.com/falcosecurity/client-go/pkg/api/outputs\";\n\n// This service defines the RPC methods\n// to `request` a stream of output `response`s.\nservice service {\n  // Subscribe to a stream of Falco outputs by sending a stream of requests.\n  rpc sub(stream request) returns (stream response);\n  // Get all the Falco outputs present in the system up to this call.\n",
                    "rendered": {
                      "text": "option go_package = \"github.com/falcosecurity/client-go/pkg/api/outputs\";\n\n// This service defines the RPC methods\n// to `request` a stream of output `response`s.\nservice service {\n  // Subscribe to a stream of Falco outputs by sending a stream of requests.\n  rpc sub(stream request) returns (stream response);\n  // Get all the Falco outputs present in the system up to this call.\n",
                      "markdown": "`option go_package = \"github.com/falcosecurity/client-go/pkg/api/outputs\";\n\n// This service defines the RPC methods\n// to `request` a stream of output `response`s.\nservice service {\n  // Subscribe to a stream of Falco outputs by sending a stream of requests.\n  rpc sub(stream request) returns (stream response);\n  // Get all the Falco outputs present in the system up to this call.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20190826-grpc-outputs.md"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 7,
                  "endLine": 87,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\noption go_package = \"github.com/falcosecurity/client-go/pkg/api/outputs\";\n\n// This service defines the RPC methods\n// to `request` a stream of output `response`s.\nservice service {\n  // Subscribe to a stream of Falco outputs by sending a stream of requests.\n",
                    "rendered": {
                      "text": "\noption go_package = \"github.com/falcosecurity/client-go/pkg/api/outputs\";\n\n// This service defines the RPC methods\n// to `request` a stream of output `response`s.\nservice service {\n  // Subscribe to a stream of Falco outputs by sending a stream of requests.\n",
                      "markdown": "`\noption go_package = \"github.com/falcosecurity/client-go/pkg/api/outputs\";\n\n// This service defines the RPC methods\n// to `request` a stream of output `response`s.\nservice service {\n  // Subscribe to a stream of Falco outputs by sending a stream of requests.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20190826-grpc-outputs.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 182,
                  "endLine": 28,
                  "endColumn": 188,
                  "snippet": {
                    "text": "\nAt the current moment, however, Falco can deliver alerts in a very basic way, for example by dumping them to standard output.\n\nFor this reason, many Falco users asked, with issues - eg., [falco#528](https://github.com/falcosecurity/falco/issues/528) - or in the [slack channel](https://slack.k8s.io) if we can find a more consumable way to implement Falco outputs in an extensible way.\n\nThe motivation behind this proposal is to design a new output implementation that can meet our user's needs.\n\n",
                    "rendered": {
                      "text": "\nAt the current moment, however, Falco can deliver alerts in a very basic way, for example by dumping them to standard output.\n\nFor this reason, many Falco users asked, with issues - eg., [falco#528](https://github.com/falcosecurity/falco/issues/528) - or in the [slack channel](https://slack.k8s.io) if we can find a more consumable way to implement Falco outputs in an extensible way.\n\nThe motivation behind this proposal is to design a new output implementation that can meet our user's needs.\n\n",
                      "markdown": "`\nAt the current moment, however, Falco can deliver alerts in a very basic way, for example by dumping them to standard output.\n\nFor this reason, many Falco users asked, with issues - eg., [falco#528](https://github.com/falcosecurity/falco/issues/528) - or in the [slack channel](https://slack.k8s.io) if we can find a more consumable way to implement Falco outputs in an extensible way.\n\nThe motivation behind this proposal is to design a new output implementation that can meet our user's needs.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20190826-grpc-outputs.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 87,
                  "endLine": 24,
                  "endColumn": 93,
                  "snippet": {
                    "text": "\nThe most valuable information that Falco can give to its users are the alerts.\n\nAn alert is an \"output\" when it goes over a transport, and it is emitted by Falco every time a rule is matched.\n\nAt the current moment, however, Falco can deliver alerts in a very basic way, for example by dumping them to standard output.\n\n",
                    "rendered": {
                      "text": "\nThe most valuable information that Falco can give to its users are the alerts.\n\nAn alert is an \"output\" when it goes over a transport, and it is emitted by Falco every time a rule is matched.\n\nAt the current moment, however, Falco can deliver alerts in a very basic way, for example by dumping them to standard output.\n\n",
                      "markdown": "`\nThe most valuable information that Falco can give to its users are the alerts.\n\nAn alert is an \"output\" when it goes over a transport, and it is emitted by Falco every time a rule is matched.\n\nAt the current moment, however, Falco can deliver alerts in a very basic way, for example by dumping them to standard output.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/filter_macro_resolver.cpp"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 42,
                  "endLine": 124,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n\t\tm_macros_path.push_back(macro->first);\n\t\tm_node_substitute = nullptr;\n\t\tauto new_node = ast::clone(macro->second.get());\n\t\tnew_node->accept(this);\n\t\t// new_node might already have set a non-NULL m_node_substitute.\n\t\t// if not, the right substituted is the newly-cloned node.\n",
                    "rendered": {
                      "text": "\n\t\tm_macros_path.push_back(macro->first);\n\t\tm_node_substitute = nullptr;\n\t\tauto new_node = ast::clone(macro->second.get());\n\t\tnew_node->accept(this);\n\t\t// new_node might already have set a non-NULL m_node_substitute.\n\t\t// if not, the right substituted is the newly-cloned node.\n",
                      "markdown": "`\n\t\tm_macros_path.push_back(macro->first);\n\t\tm_node_substitute = nullptr;\n\t\tauto new_node = ast::clone(macro->second.get());\n\t\tnew_node->accept(this);\n\t\t// new_node might already have set a non-NULL m_node_substitute.\n\t\t// if not, the right substituted is the newly-cloned node.\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_rule.h"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 42,
                  "endLine": 95,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\t        this->description == rhs.description && this->output == rhs.output &&\n\t\t        this->tags == rhs.tags && this->exception_fields == rhs.exception_fields &&\n\t\t        this->priority == rhs.priority && this->condition.get() == rhs.condition.get() &&\n\t\t        this->filter.get() == rhs.filter.get());\n\t}\n\n\tstd::size_t id;\n",
                    "rendered": {
                      "text": "\t\t        this->description == rhs.description && this->output == rhs.output &&\n\t\t        this->tags == rhs.tags && this->exception_fields == rhs.exception_fields &&\n\t\t        this->priority == rhs.priority && this->condition.get() == rhs.condition.get() &&\n\t\t        this->filter.get() == rhs.filter.get());\n\t}\n\n\tstd::size_t id;\n",
                      "markdown": "`\t\t        this->description == rhs.description && this->output == rhs.output &&\n\t\t        this->tags == rhs.tags && this->exception_fields == rhs.exception_fields &&\n\t\t        this->priority == rhs.priority && this->condition.get() == rhs.condition.get() &&\n\t\t        this->filter.get() == rhs.filter.get());\n\t}\n\n\tstd::size_t id;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_rule.h"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 22,
                  "endLine": 95,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t        this->description == rhs.description && this->output == rhs.output &&\n\t\t        this->tags == rhs.tags && this->exception_fields == rhs.exception_fields &&\n\t\t        this->priority == rhs.priority && this->condition.get() == rhs.condition.get() &&\n\t\t        this->filter.get() == rhs.filter.get());\n\t}\n\n\tstd::size_t id;\n",
                    "rendered": {
                      "text": "\t\t        this->description == rhs.description && this->output == rhs.output &&\n\t\t        this->tags == rhs.tags && this->exception_fields == rhs.exception_fields &&\n\t\t        this->priority == rhs.priority && this->condition.get() == rhs.condition.get() &&\n\t\t        this->filter.get() == rhs.filter.get());\n\t}\n\n\tstd::size_t id;\n",
                      "markdown": "`\t\t        this->description == rhs.description && this->output == rhs.output &&\n\t\t        this->tags == rhs.tags && this->exception_fields == rhs.exception_fields &&\n\t\t        this->priority == rhs.priority && this->condition.get() == rhs.condition.get() &&\n\t\t        this->filter.get() == rhs.filter.get());\n\t}\n\n\tstd::size_t id;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_rule.h"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 82,
                  "endLine": 94,
                  "endColumn": 87,
                  "snippet": {
                    "text": "\t\treturn (this->id == rhs.id && this->source == rhs.source && this->name == rhs.name &&\n\t\t        this->description == rhs.description && this->output == rhs.output &&\n\t\t        this->tags == rhs.tags && this->exception_fields == rhs.exception_fields &&\n\t\t        this->priority == rhs.priority && this->condition.get() == rhs.condition.get() &&\n\t\t        this->filter.get() == rhs.filter.get());\n\t}\n\n",
                    "rendered": {
                      "text": "\t\treturn (this->id == rhs.id && this->source == rhs.source && this->name == rhs.name &&\n\t\t        this->description == rhs.description && this->output == rhs.output &&\n\t\t        this->tags == rhs.tags && this->exception_fields == rhs.exception_fields &&\n\t\t        this->priority == rhs.priority && this->condition.get() == rhs.condition.get() &&\n\t\t        this->filter.get() == rhs.filter.get());\n\t}\n\n",
                      "markdown": "`\t\treturn (this->id == rhs.id && this->source == rhs.source && this->name == rhs.name &&\n\t\t        this->description == rhs.description && this->output == rhs.output &&\n\t\t        this->tags == rhs.tags && this->exception_fields == rhs.exception_fields &&\n\t\t        this->priority == rhs.priority && this->condition.get() == rhs.condition.get() &&\n\t\t        this->filter.get() == rhs.filter.get());\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_rule.h"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 59,
                  "endLine": 94,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t\treturn (this->id == rhs.id && this->source == rhs.source && this->name == rhs.name &&\n\t\t        this->description == rhs.description && this->output == rhs.output &&\n\t\t        this->tags == rhs.tags && this->exception_fields == rhs.exception_fields &&\n\t\t        this->priority == rhs.priority && this->condition.get() == rhs.condition.get() &&\n\t\t        this->filter.get() == rhs.filter.get());\n\t}\n\n",
                    "rendered": {
                      "text": "\t\treturn (this->id == rhs.id && this->source == rhs.source && this->name == rhs.name &&\n\t\t        this->description == rhs.description && this->output == rhs.output &&\n\t\t        this->tags == rhs.tags && this->exception_fields == rhs.exception_fields &&\n\t\t        this->priority == rhs.priority && this->condition.get() == rhs.condition.get() &&\n\t\t        this->filter.get() == rhs.filter.get());\n\t}\n\n",
                      "markdown": "`\t\treturn (this->id == rhs.id && this->source == rhs.source && this->name == rhs.name &&\n\t\t        this->description == rhs.description && this->output == rhs.output &&\n\t\t        this->tags == rhs.tags && this->exception_fields == rhs.exception_fields &&\n\t\t        this->priority == rhs.priority && this->condition.get() == rhs.condition.get() &&\n\t\t        this->filter.get() == rhs.filter.get());\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_rule.h"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 48,
                  "endLine": 66,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\t// pointing to the same underlying memory, not that\n\t\t// they are logically equal.\n\t\treturn (this->used == rhs.used && this->id == rhs.id && this->name == rhs.name &&\n\t\t        this->condition.get() == rhs.condition.get());\n\t}\n\n\tbool used;\n",
                    "rendered": {
                      "text": "\t\t// pointing to the same underlying memory, not that\n\t\t// they are logically equal.\n\t\treturn (this->used == rhs.used && this->id == rhs.id && this->name == rhs.name &&\n\t\t        this->condition.get() == rhs.condition.get());\n\t}\n\n\tbool used;\n",
                      "markdown": "`\t\t// pointing to the same underlying memory, not that\n\t\t// they are logically equal.\n\t\treturn (this->used == rhs.used && this->id == rhs.id && this->name == rhs.name &&\n\t\t        this->condition.get() == rhs.condition.get());\n\t}\n\n\tbool used;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_rule.h"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 25,
                  "endLine": 66,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t// pointing to the same underlying memory, not that\n\t\t// they are logically equal.\n\t\treturn (this->used == rhs.used && this->id == rhs.id && this->name == rhs.name &&\n\t\t        this->condition.get() == rhs.condition.get());\n\t}\n\n\tbool used;\n",
                    "rendered": {
                      "text": "\t\t// pointing to the same underlying memory, not that\n\t\t// they are logically equal.\n\t\treturn (this->used == rhs.used && this->id == rhs.id && this->name == rhs.name &&\n\t\t        this->condition.get() == rhs.condition.get());\n\t}\n\n\tbool used;\n",
                      "markdown": "`\t\t// pointing to the same underlying memory, not that\n\t\t// they are logically equal.\n\t\treturn (this->used == rhs.used && this->id == rhs.id && this->name == rhs.name &&\n\t\t        this->condition.get() == rhs.condition.get());\n\t}\n\n\tbool used;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/process_events.cpp"
                },
                "region": {
                  "startLine": 489,
                  "startColumn": 29,
                  "endLine": 489,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t\t\t\t                         &ctx.res);\n\t\t\t\t} else {\n\t\t\t\t\tauto res_ptr = &ctx.res;\n\t\t\t\t\tauto sync_ptr = ctx.sync.get();\n\t\t\t\t\tctx.thread = std::make_unique<std::thread>(\n\t\t\t\t\t        [&s, src_info, &statsw, source, sync_ptr, res_ptr]() {\n\t\t\t\t\t\t        process_inspector_events(s,\n",
                    "rendered": {
                      "text": "\t\t\t\t\t                         &ctx.res);\n\t\t\t\t} else {\n\t\t\t\t\tauto res_ptr = &ctx.res;\n\t\t\t\t\tauto sync_ptr = ctx.sync.get();\n\t\t\t\t\tctx.thread = std::make_unique<std::thread>(\n\t\t\t\t\t        [&s, src_info, &statsw, source, sync_ptr, res_ptr]() {\n\t\t\t\t\t\t        process_inspector_events(s,\n",
                      "markdown": "`\t\t\t\t\t                         &ctx.res);\n\t\t\t\t} else {\n\t\t\t\t\tauto res_ptr = &ctx.res;\n\t\t\t\t\tauto sync_ptr = ctx.sync.get();\n\t\t\t\t\tctx.thread = std::make_unique<std::thread>(\n\t\t\t\t\t        [&s, src_info, &statsw, source, sync_ptr, res_ptr]() {\n\t\t\t\t\t\t        process_inspector_events(s,\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/process_events.cpp"
                },
                "region": {
                  "startLine": 485,
                  "startColumn": 38,
                  "endLine": 485,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\t\t\t\t                         src_info->inspector,\n\t\t\t\t\t                         statsw,\n\t\t\t\t\t                         source,\n\t\t\t\t\t                         ctx.sync.get(),\n\t\t\t\t\t                         &ctx.res);\n\t\t\t\t} else {\n\t\t\t\t\tauto res_ptr = &ctx.res;\n",
                    "rendered": {
                      "text": "\t\t\t\t\t                         src_info->inspector,\n\t\t\t\t\t                         statsw,\n\t\t\t\t\t                         source,\n\t\t\t\t\t                         ctx.sync.get(),\n\t\t\t\t\t                         &ctx.res);\n\t\t\t\t} else {\n\t\t\t\t\tauto res_ptr = &ctx.res;\n",
                      "markdown": "`\t\t\t\t\t                         src_info->inspector,\n\t\t\t\t\t                         statsw,\n\t\t\t\t\t                         source,\n\t\t\t\t\t                         ctx.sync.get(),\n\t\t\t\t\t                         &ctx.res);\n\t\t\t\t} else {\n\t\t\t\t\tauto res_ptr = &ctx.res;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/process_events.cpp"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 71,
                  "endLine": 393,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\tif(config->m_metrics_enabled &&\n\t   !(sw->has_output() || config->m_webserver_config.m_prometheus_metrics_enabled)) {\n\t\treturn falco::app::run_result::fatal(\n\t\t        \"Metrics are enabled with no output configured. Please enable at least one output \"\n\t\t        \"channel ('metrics.output_rule', 'metrics.output_file' or \"\n\t\t        \"'webserver.prometheus_metrics_enabled')\");\n\t}\n",
                    "rendered": {
                      "text": "\tif(config->m_metrics_enabled &&\n\t   !(sw->has_output() || config->m_webserver_config.m_prometheus_metrics_enabled)) {\n\t\treturn falco::app::run_result::fatal(\n\t\t        \"Metrics are enabled with no output configured. Please enable at least one output \"\n\t\t        \"channel ('metrics.output_rule', 'metrics.output_file' or \"\n\t\t        \"'webserver.prometheus_metrics_enabled')\");\n\t}\n",
                      "markdown": "`\tif(config->m_metrics_enabled &&\n\t   !(sw->has_output() || config->m_webserver_config.m_prometheus_metrics_enabled)) {\n\t\treturn falco::app::run_result::fatal(\n\t\t        \"Metrics are enabled with no output configured. Please enable at least one output \"\n\t\t        \"channel ('metrics.output_rule', 'metrics.output_file' or \"\n\t\t        \"'webserver.prometheus_metrics_enabled')\");\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/process_events.cpp"
                },
                "region": {
                  "startLine": 387,
                  "startColumn": 20,
                  "endLine": 387,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t               ::isdigit)) {\n\t\treturn falco::app::run_result::fatal(\n\t\t        \"Metrics interval was passed as numeric value without Prometheus time unit. Please \"\n\t\t        \"specify a time unit\");\n\t}\n\n\tif(config->m_metrics_enabled &&\n",
                    "rendered": {
                      "text": "\t               ::isdigit)) {\n\t\treturn falco::app::run_result::fatal(\n\t\t        \"Metrics interval was passed as numeric value without Prometheus time unit. Please \"\n\t\t        \"specify a time unit\");\n\t}\n\n\tif(config->m_metrics_enabled &&\n",
                      "markdown": "`\t               ::isdigit)) {\n\t\treturn falco::app::run_result::fatal(\n\t\t        \"Metrics interval was passed as numeric value without Prometheus time unit. Please \"\n\t\t        \"specify a time unit\");\n\t}\n\n\tif(config->m_metrics_enabled &&\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/process_events.cpp"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 74,
                  "endLine": 386,
                  "endColumn": 80,
                  "snippet": {
                    "text": "\t               config->m_metrics_interval_str.end(),\n\t               ::isdigit)) {\n\t\treturn falco::app::run_result::fatal(\n\t\t        \"Metrics interval was passed as numeric value without Prometheus time unit. Please \"\n\t\t        \"specify a time unit\");\n\t}\n\n",
                    "rendered": {
                      "text": "\t               config->m_metrics_interval_str.end(),\n\t               ::isdigit)) {\n\t\treturn falco::app::run_result::fatal(\n\t\t        \"Metrics interval was passed as numeric value without Prometheus time unit. Please \"\n\t\t        \"specify a time unit\");\n\t}\n\n",
                      "markdown": "`\t               config->m_metrics_interval_str.end(),\n\t               ::isdigit)) {\n\t\treturn falco::app::run_result::fatal(\n\t\t        \"Metrics interval was passed as numeric value without Prometheus time unit. Please \"\n\t\t        \"specify a time unit\");\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/process_events.cpp"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 20,
                  "endLine": 378,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tif(config->m_metrics_interval < 100) {\n\t\treturn falco::app::run_result::fatal(\n\t\t        \"Metrics interval must have a minimum value of 100ms and reflect a Prometheus \"\n\t\t        \"compliant time duration format: \"\n\t\t        \"https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations. \");\n\t}\n\n",
                    "rendered": {
                      "text": "\tif(config->m_metrics_interval < 100) {\n\t\treturn falco::app::run_result::fatal(\n\t\t        \"Metrics interval must have a minimum value of 100ms and reflect a Prometheus \"\n\t\t        \"compliant time duration format: \"\n\t\t        \"https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations. \");\n\t}\n\n",
                      "markdown": "`\tif(config->m_metrics_interval < 100) {\n\t\treturn falco::app::run_result::fatal(\n\t\t        \"Metrics interval must have a minimum value of 100ms and reflect a Prometheus \"\n\t\t        \"compliant time duration format: \"\n\t\t        \"https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations. \");\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 4,
                  "endLine": 41,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n",
                    "rendered": {
                      "text": "\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n",
                      "markdown": "`\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7,
                  "endLine": 39,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n\t// read hostname\n\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n",
                    "rendered": {
                      "text": "\n\t// read hostname\n\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n",
                      "markdown": "`\n\t// read hostname\n\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 45,
                  "endLine": 71,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t                                            s.config->m_buffered_outputs,\n\t                                            s.config->m_outputs_queue_capacity,\n\t                                            s.config->m_time_format_iso_8601,\n\t                                            hostname);\n\n\treturn run_result::ok();\n}\n",
                    "rendered": {
                      "text": "\t                                            s.config->m_buffered_outputs,\n\t                                            s.config->m_outputs_queue_capacity,\n\t                                            s.config->m_time_format_iso_8601,\n\t                                            hostname);\n\n\treturn run_result::ok();\n}\n",
                      "markdown": "`\t                                            s.config->m_buffered_outputs,\n\t                                            s.config->m_outputs_queue_capacity,\n\t                                            s.config->m_time_format_iso_8601,\n\t                                            hostname);\n\n\treturn run_result::ok();\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 15,
                  "endLine": 52,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n\t\t}\n\t\thostname = c_hostname;\n\t}\n\n\tif(s.options.dry_run) {\n",
                    "rendered": {
                      "text": "\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n\t\t}\n\t\thostname = c_hostname;\n\t}\n\n\tif(s.options.dry_run) {\n",
                      "markdown": "`\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n\t\t}\n\t\thostname = c_hostname;\n\t}\n\n\tif(s.options.dry_run) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 2,
                  "endLine": 52,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n\t\t}\n\t\thostname = c_hostname;\n\t}\n\n\tif(s.options.dry_run) {\n",
                    "rendered": {
                      "text": "\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n\t\t}\n\t\thostname = c_hostname;\n\t}\n\n\tif(s.options.dry_run) {\n",
                      "markdown": "`\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n\t\t}\n\t\thostname = c_hostname;\n\t}\n\n\tif(s.options.dry_run) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 43,
                  "endLine": 50,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t\tchar c_hostname[256];\n\t\tint err = gethostname(c_hostname, 256);\n\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n\t\t}\n\t\thostname = c_hostname;\n\t}\n",
                    "rendered": {
                      "text": "\t\tchar c_hostname[256];\n\t\tint err = gethostname(c_hostname, 256);\n\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n\t\t}\n\t\thostname = c_hostname;\n\t}\n",
                      "markdown": "`\t\tchar c_hostname[256];\n\t\tint err = gethostname(c_hostname, 256);\n\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n\t\t}\n\t\thostname = c_hostname;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 26,
                  "endLine": 48,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t                          hostname + \"\\n\");\n\t} else {\n\t\tchar c_hostname[256];\n\t\tint err = gethostname(c_hostname, 256);\n\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t                          hostname + \"\\n\");\n\t} else {\n\t\tchar c_hostname[256];\n\t\tint err = gethostname(c_hostname, 256);\n\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n\t\t}\n",
                      "markdown": "`\t\t                          hostname + \"\\n\");\n\t} else {\n\t\tchar c_hostname[256];\n\t\tint err = gethostname(c_hostname, 256);\n\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 9,
                  "endLine": 47,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n\t\t                          hostname + \"\\n\");\n\t} else {\n\t\tchar c_hostname[256];\n\t\tint err = gethostname(c_hostname, 256);\n\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n",
                    "rendered": {
                      "text": "\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n\t\t                          hostname + \"\\n\");\n\t} else {\n\t\tchar c_hostname[256];\n\t\tint err = gethostname(c_hostname, 256);\n\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n",
                      "markdown": "`\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n\t\t                          hostname + \"\\n\");\n\t} else {\n\t\tchar c_hostname[256];\n\t\tint err = gethostname(c_hostname, 256);\n\t\tif(err != 0) {\n\t\t\treturn run_result::fatal(\"Failed to get hostname\");\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 28,
                  "endLine": 45,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n\t\t                          hostname + \"\\n\");\n\t} else {\n\t\tchar c_hostname[256];\n\t\tint err = gethostname(c_hostname, 256);\n",
                    "rendered": {
                      "text": "\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n\t\t                          hostname + \"\\n\");\n\t} else {\n\t\tchar c_hostname[256];\n\t\tint err = gethostname(c_hostname, 256);\n",
                      "markdown": "`\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n\t\t                          hostname + \"\\n\");\n\t} else {\n\t\tchar c_hostname[256];\n\t\tint err = gethostname(c_hostname, 256);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 17,
                  "endLine": 42,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n\t\t                          hostname + \"\\n\");\n",
                    "rendered": {
                      "text": "\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n\t\t                          hostname + \"\\n\");\n",
                      "markdown": "`\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n\t\t                          hostname + \"\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 2,
                  "endLine": 42,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n\t\t                          hostname + \"\\n\");\n",
                    "rendered": {
                      "text": "\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n\t\t                          hostname + \"\\n\");\n",
                      "markdown": "`\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n\t\t                          hostname + \"\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 25,
                  "endLine": 41,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n",
                    "rendered": {
                      "text": "\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n",
                      "markdown": "`\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 8,
                  "endLine": 41,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n",
                    "rendered": {
                      "text": "\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n",
                      "markdown": "`\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n\t\tfalco_logger::log(falco_logger::level::INFO,\n\t\t                  \"Hostname value has been overridden via environment variable to: \" +\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 11,
                  "endLine": 39,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n\t// read hostname\n\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n",
                    "rendered": {
                      "text": "\n\t// read hostname\n\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n",
                      "markdown": "`\n\t// read hostname\n\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n\t\thostname = env_hostname;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 38,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t}\n\n\t// read hostname\n\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n",
                    "rendered": {
                      "text": "\t}\n\n\t// read hostname\n\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n",
                      "markdown": "`\t}\n\n\t// read hostname\n\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n\tif(env_hostname || (env_hostname = getenv(\"FALCO_GRPC_HOSTNAME\"))) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 9,
                  "endLine": 37,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t        \"enabled.\");\n\t}\n\n\t// read hostname\n\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n",
                    "rendered": {
                      "text": "\t\t        \"enabled.\");\n\t}\n\n\t// read hostname\n\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n",
                      "markdown": "`\t\t        \"enabled.\");\n\t}\n\n\t// read hostname\n\tstd::string hostname;\n\tchar* env_hostname = getenv(\"FALCO_HOSTNAME\");\n\t// todo(leogr): keep FALCO_GRPC_HOSTNAME for backward compatibility. Shall we deprecate it?\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_outputs.cpp"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 49,
                  "endLine": 33,
                  "endColumn": 53,
                  "snippet": {
                    "text": "falco::app::run_result falco::app::actions::init_outputs(falco::app::state& s) {\n\tif(s.config->m_outputs.empty()) {\n\t\treturn run_result::fatal(\n\t\t        \"No output configured, please make sure at least one output is configured and \"\n\t\t        \"enabled.\");\n\t}\n\n",
                    "rendered": {
                      "text": "falco::app::run_result falco::app::actions::init_outputs(falco::app::state& s) {\n\tif(s.config->m_outputs.empty()) {\n\t\treturn run_result::fatal(\n\t\t        \"No output configured, please make sure at least one output is configured and \"\n\t\t        \"enabled.\");\n\t}\n\n",
                      "markdown": "`falco::app::run_result falco::app::actions::init_outputs(falco::app::state& s) {\n\tif(s.config->m_outputs.empty()) {\n\t\treturn run_result::fatal(\n\t\t        \"No output configured, please make sure at least one output is configured and \"\n\t\t        \"enabled.\");\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_server.h"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 15,
                  "endLine": 55,
                  "endColumn": 26,
                  "snippet": {
                    "text": "private:\n\tstd::string m_server_addr;\n\tint m_threadiness = 1;\n\tstd::string m_private_key;\n\tstd::string m_cert_chain;\n\tstd::string m_root_certs;\n\n",
                    "rendered": {
                      "text": "private:\n\tstd::string m_server_addr;\n\tint m_threadiness = 1;\n\tstd::string m_private_key;\n\tstd::string m_cert_chain;\n\tstd::string m_root_certs;\n\n",
                      "markdown": "`private:\n\tstd::string m_server_addr;\n\tint m_threadiness = 1;\n\tstd::string m_private_key;\n\tstd::string m_cert_chain;\n\tstd::string m_root_certs;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_server.h"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 30,
                  "endLine": 38,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n\tvoid init(const std::string& server_addr,\n\t          int threadiness,\n\t          const std::string& private_key,\n\t          const std::string& cert_chain,\n\t          const std::string& root_certs,\n\t          const std::string& log_level);\n",
                    "rendered": {
                      "text": "\n\tvoid init(const std::string& server_addr,\n\t          int threadiness,\n\t          const std::string& private_key,\n\t          const std::string& cert_chain,\n\t          const std::string& root_certs,\n\t          const std::string& log_level);\n",
                      "markdown": "`\n\tvoid init(const std::string& server_addr,\n\t          int threadiness,\n\t          const std::string& private_key,\n\t          const std::string& cert_chain,\n\t          const std::string& root_certs,\n\t          const std::string& log_level);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000300"
          },
          "message": {
            "text": "Backdoor: Reverse Shell",
            "id": "BD000300"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1032,
                  "startColumn": 32,
                  "endLine": 1032,
                  "endColumn": 45,
                  "snippet": {
                    "text": "@LucaGuerra](https://github.com/LucaGuerra)\n\n### Bug Fixes\n\n* fix(userspace/falco): ensure that only rules files named with `-V` are loaded when validating rules files. [[#2088](https://github.com/falcosecurity/falco/pull/2088)] - [@mstemm](https://github.com/mstemm)\n* fix(rules): use exit event in reverse shell detection rule [[#2076](https://github.com/falcosecurity/falco/pull/2076)] - [@alacuku](https://github.com/alacuku)\n* fix(scripts): falco-driver-loader script will now seek for drivers in driver/${ARCH}/ for x86_64 too. [[#2057](https://github.com/falcosecurity/falco/pull/2057)] - [@FedeDP](https:/",
                    "rendered": {
                      "text": "@LucaGuerra](https://github.com/LucaGuerra)\n\n### Bug Fixes\n\n* fix(userspace/falco): ensure that only rules files named with `-V` are loaded when validating rules files. [[#2088](https://github.com/falcosecurity/falco/pull/2088)] - [@mstemm](https://github.com/mstemm)\n* fix(rules): use exit event in reverse shell detection rule [[#2076](https://github.com/falcosecurity/falco/pull/2076)] - [@alacuku](https://github.com/alacuku)\n* fix(scripts): falco-driver-loader script will now seek for drivers in driver/${ARCH}/ for x86_64 too. [[#2057](https://github.com/falcosecurity/falco/pull/2057)] - [@FedeDP](https:/",
                      "markdown": "`@LucaGuerra](https://github.com/LucaGuerra)\n\n### Bug Fixes\n\n* fix(userspace/falco): ensure that only rules files named with `-V` are loaded when validating rules files. [[#2088](https://github.com/falcosecurity/falco/pull/2088)] - [@mstemm](https://github.com/mstemm)\n* fix(rules): use exit event in reverse shell detection rule [[#2076](https://github.com/falcosecurity/falco/pull/2076)] - [@alacuku](https://github.com/alacuku)\n* fix(scripts): falco-driver-loader script will now seek for drivers in driver/${ARCH}/ for x86_64 too. [[#2057](https://github.com/falcosecurity/falco/pull/2057)] - [@FedeDP](https:/`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2540,
                  "startColumn": 49,
                  "endLine": 2540,
                  "endColumn": 53,
                  "snippet": {
                    "text": "alco/pull/366)]\n* Let pam-config read sensitive files [[#388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp agent, gliderlabs logspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional m",
                    "rendered": {
                      "text": "alco/pull/366)]\n* Let pam-config read sensitive files [[#388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp agent, gliderlabs logspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional m",
                      "markdown": "`alco/pull/366)]\n* Let pam-config read sensitive files [[#388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp agent, gliderlabs logspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional m`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 782,
                  "startColumn": 30,
                  "endLine": 782,
                  "endColumn": 38,
                  "snippet": {
                    "text": "ages with the modern BPF probe [[#2320](https://github.com/falcosecurity/falco/pull/2320)] - [@Andreagit97](https://github.com/Andreagit97)\n* rules: add Falco container lists [[#2290](https://github.com/falcosecurity/falco/pull/2290)] - [@oscr](https://github.com/oscr)\n* rules(macro: private_key_or_password): now also check for OpenSSH private keys [[#2284](https://github.com/falcosecurity/falco/pull/2284)] - [@oscr](https://github.com/oscr)\n* update(cmake): bump libs and driver to latest RC. [[#2302](https://github.com/falcosecurity/falco/pull/2302)] - [@FedeDP](https://github.com/FedeDP)\n* Ensure th",
                    "rendered": {
                      "text": "ages with the modern BPF probe [[#2320](https://github.com/falcosecurity/falco/pull/2320)] - [@Andreagit97](https://github.com/Andreagit97)\n* rules: add Falco container lists [[#2290](https://github.com/falcosecurity/falco/pull/2290)] - [@oscr](https://github.com/oscr)\n* rules(macro: private_key_or_password): now also check for OpenSSH private keys [[#2284](https://github.com/falcosecurity/falco/pull/2284)] - [@oscr](https://github.com/oscr)\n* update(cmake): bump libs and driver to latest RC. [[#2302](https://github.com/falcosecurity/falco/pull/2302)] - [@FedeDP](https://github.com/FedeDP)\n* Ensure th",
                      "markdown": "`ages with the modern BPF probe [[#2320](https://github.com/falcosecurity/falco/pull/2320)] - [@Andreagit97](https://github.com/Andreagit97)\n* rules: add Falco container lists [[#2290](https://github.com/falcosecurity/falco/pull/2290)] - [@oscr](https://github.com/oscr)\n* rules(macro: private_key_or_password): now also check for OpenSSH private keys [[#2284](https://github.com/falcosecurity/falco/pull/2284)] - [@oscr](https://github.com/oscr)\n* update(cmake): bump libs and driver to latest RC. [[#2302](https://github.com/falcosecurity/falco/pull/2302)] - [@FedeDP](https://github.com/FedeDP)\n* Ensure th`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 782,
                  "startColumn": 15,
                  "endLine": 782,
                  "endColumn": 26,
                  "snippet": {
                    "text": "nerate Falco images with the modern BPF probe [[#2320](https://github.com/falcosecurity/falco/pull/2320)] - [@Andreagit97](https://github.com/Andreagit97)\n* rules: add Falco container lists [[#2290](https://github.com/falcosecurity/falco/pull/2290)] - [@oscr](https://github.com/oscr)\n* rules(macro: private_key_or_password): now also check for OpenSSH private keys [[#2284](https://github.com/falcosecurity/falco/pull/2284)] - [@oscr](https://github.com/oscr)\n* update(cmake): bump libs and driver to latest RC. [[#2302](https://github.com/falcosecurity/falco/pull/2302)] - [@FedeDP](https://github.com/FedeDP)",
                    "rendered": {
                      "text": "nerate Falco images with the modern BPF probe [[#2320](https://github.com/falcosecurity/falco/pull/2320)] - [@Andreagit97](https://github.com/Andreagit97)\n* rules: add Falco container lists [[#2290](https://github.com/falcosecurity/falco/pull/2290)] - [@oscr](https://github.com/oscr)\n* rules(macro: private_key_or_password): now also check for OpenSSH private keys [[#2284](https://github.com/falcosecurity/falco/pull/2284)] - [@oscr](https://github.com/oscr)\n* update(cmake): bump libs and driver to latest RC. [[#2302](https://github.com/falcosecurity/falco/pull/2302)] - [@FedeDP](https://github.com/FedeDP)",
                      "markdown": "`nerate Falco images with the modern BPF probe [[#2320](https://github.com/falcosecurity/falco/pull/2320)] - [@Andreagit97](https://github.com/Andreagit97)\n* rules: add Falco container lists [[#2290](https://github.com/falcosecurity/falco/pull/2290)] - [@oscr](https://github.com/oscr)\n* rules(macro: private_key_or_password): now also check for OpenSSH private keys [[#2284](https://github.com/falcosecurity/falco/pull/2284)] - [@oscr](https://github.com/oscr)\n* update(cmake): bump libs and driver to latest RC. [[#2302](https://github.com/falcosecurity/falco/pull/2302)] - [@FedeDP](https://github.com/FedeDP)`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2833,
                  "startColumn": 52,
                  "endLine": 2833,
                  "endColumn": 110,
                  "snippet": {
                    "text": "All of these changes result in dramatically reduced CPU usage. Here are some comparisons between 0.2.0 and 0.3.0 for the following workloads:\n\n* [Phoronix](http://www.phoronix-test-suite.com/)'s `pts/apache` and `pts/dbench` tests.\n* Sysdig Cloud Kubernetes Demo: Starts a kubernetes environment using docker with apache and wordpress instances + synthetic workloads.\n* [Juttle-engine examples](https://github.com/juttle/juttle-engine/blob/master/examples/README.md) : Several elasticsearch, node.js, logstash, mysql, postgres, influxdb instances run under docker-compose.\n\n| Workload                          | 0.2.0 CPU Usage | 0.3.0 CPU Usage |\n",
                    "rendered": {
                      "text": "All of these changes result in dramatically reduced CPU usage. Here are some comparisons between 0.2.0 and 0.3.0 for the following workloads:\n\n* [Phoronix](http://www.phoronix-test-suite.com/)'s `pts/apache` and `pts/dbench` tests.\n* Sysdig Cloud Kubernetes Demo: Starts a kubernetes environment using docker with apache and wordpress instances + synthetic workloads.\n* [Juttle-engine examples](https://github.com/juttle/juttle-engine/blob/master/examples/README.md) : Several elasticsearch, node.js, logstash, mysql, postgres, influxdb instances run under docker-compose.\n\n| Workload                          | 0.2.0 CPU Usage | 0.3.0 CPU Usage |\n",
                      "markdown": "`All of these changes result in dramatically reduced CPU usage. Here are some comparisons between 0.2.0 and 0.3.0 for the following workloads:\n\n* [Phoronix](http://www.phoronix-test-suite.com/)'s `pts/apache` and `pts/dbench` tests.\n* Sysdig Cloud Kubernetes Demo: Starts a kubernetes environment using docker with apache and wordpress instances + synthetic workloads.\n* [Juttle-engine examples](https://github.com/juttle/juttle-engine/blob/master/examples/README.md) : Several elasticsearch, node.js, logstash, mysql, postgres, influxdb instances run under docker-compose.\n\n| Workload                          | 0.2.0 CPU Usage | 0.3.0 CPU Usage |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1997,
                  "startColumn": 17,
                  "endLine": 1997,
                  "endColumn": 25,
                  "snippet": {
                    "text": "osecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](https://github.com/falcosecurity/falco/pull/922)]\n* update: adds a hostname field to grpc output [[#927](https://github.com/falcosecurity/falco/pull/927)]\n* build: download grpc from their github repo [[#933](https://github.com/falcosecurity/falco/pull/933)]\n* update: ef_drop_falco is now ef_drop_simple_cons [[#922](https://github.com/falcosecurity/falco/pull/922)]\n* updat",
                    "rendered": {
                      "text": "osecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](https://github.com/falcosecurity/falco/pull/922)]\n* update: adds a hostname field to grpc output [[#927](https://github.com/falcosecurity/falco/pull/927)]\n* build: download grpc from their github repo [[#933](https://github.com/falcosecurity/falco/pull/933)]\n* update: ef_drop_falco is now ef_drop_simple_cons [[#922](https://github.com/falcosecurity/falco/pull/922)]\n* updat",
                      "markdown": "`osecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](https://github.com/falcosecurity/falco/pull/922)]\n* update: adds a hostname field to grpc output [[#927](https://github.com/falcosecurity/falco/pull/927)]\n* build: download grpc from their github repo [[#933](https://github.com/falcosecurity/falco/pull/933)]\n* update: ef_drop_falco is now ef_drop_simple_cons [[#922](https://github.com/falcosecurity/falco/pull/922)]\n* updat`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1093,
                  "startColumn": 17,
                  "endLine": 1093,
                  "endColumn": 25,
                  "snippet": {
                    "text": "o 39ae7d40496793cf3d3e7890c9bbdc202263836b [[#2031](https://github.com/falcosecurity/falco/pull/2031)] - [@FedeDP](https://github.com/FedeDP)\n* update!: moving out plugins ruleset files [[#1995](https://github.com/falcosecurity/falco/pull/1995)] - [@leogr](https://github.com/leogr)\n* update: added `hostname` as a field in JSON output [[#1989](https://github.com/falcosecurity/falco/pull/1989)] - [@Milkshak3s](https://github.com/Milkshak3s)\n* refactor!: remove K8S audit logs from Falco [[#1952](https://github.com/falcosecurity/falco/pull/1952)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* re",
                    "rendered": {
                      "text": "o 39ae7d40496793cf3d3e7890c9bbdc202263836b [[#2031](https://github.com/falcosecurity/falco/pull/2031)] - [@FedeDP](https://github.com/FedeDP)\n* update!: moving out plugins ruleset files [[#1995](https://github.com/falcosecurity/falco/pull/1995)] - [@leogr](https://github.com/leogr)\n* update: added `hostname` as a field in JSON output [[#1989](https://github.com/falcosecurity/falco/pull/1989)] - [@Milkshak3s](https://github.com/Milkshak3s)\n* refactor!: remove K8S audit logs from Falco [[#1952](https://github.com/falcosecurity/falco/pull/1952)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* re",
                      "markdown": "`o 39ae7d40496793cf3d3e7890c9bbdc202263836b [[#2031](https://github.com/falcosecurity/falco/pull/2031)] - [@FedeDP](https://github.com/FedeDP)\n* update!: moving out plugins ruleset files [[#1995](https://github.com/falcosecurity/falco/pull/1995)] - [@leogr](https://github.com/leogr)\n* update: added `hostname` as a field in JSON output [[#1989](https://github.com/falcosecurity/falco/pull/1989)] - [@Milkshak3s](https://github.com/Milkshak3s)\n* refactor!: remove K8S audit logs from Falco [[#1952](https://github.com/falcosecurity/falco/pull/1952)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* re`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 915,
                  "startColumn": 7,
                  "endLine": 915,
                  "endColumn": 15,
                  "snippet": {
                    "text": "isor [[#2223](https://github.com/falcosecurity/falco/pull/2223)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(userspace/engine): avoid reading duplicate exception values [[#2200](https://github.com/falcosecurity/falco/pull/2200)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix: hostname was not present when `json_output: true` [[#2174](https://github.com/falcosecurity/falco/pull/2174)] - [@leogr](https://github.com/leogr)\n\n\n### Rule Changes\n\n* rule(macro: known_gke_mount_in_privileged_containers): add new macro [[#2198](https://github.com/falcosecurity/falco/pull/2198)] - [@hi120k",
                    "rendered": {
                      "text": "isor [[#2223](https://github.com/falcosecurity/falco/pull/2223)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(userspace/engine): avoid reading duplicate exception values [[#2200](https://github.com/falcosecurity/falco/pull/2200)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix: hostname was not present when `json_output: true` [[#2174](https://github.com/falcosecurity/falco/pull/2174)] - [@leogr](https://github.com/leogr)\n\n\n### Rule Changes\n\n* rule(macro: known_gke_mount_in_privileged_containers): add new macro [[#2198](https://github.com/falcosecurity/falco/pull/2198)] - [@hi120k",
                      "markdown": "`isor [[#2223](https://github.com/falcosecurity/falco/pull/2223)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(userspace/engine): avoid reading duplicate exception values [[#2200](https://github.com/falcosecurity/falco/pull/2200)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix: hostname was not present when `json_output: true` [[#2174](https://github.com/falcosecurity/falco/pull/2174)] - [@leogr](https://github.com/leogr)\n\n\n### Rule Changes\n\n* rule(macro: known_gke_mount_in_privileged_containers): add new macro [[#2198](https://github.com/falcosecurity/falco/pull/2198)] - [@hi120k`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 901,
                  "startColumn": 55,
                  "endLine": 901,
                  "endColumn": 63,
                  "snippet": {
                    "text": "/pull/2097)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(userspace/falco): use move semantics in falco logger [[#2095](https://github.com/falcosecurity/falco/pull/2095)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update: use `FALCO_HOSTNAME` env var to override the hostname value [[#2174](https://github.com/falcosecurity/falco/pull/2174)] - [@leogr](https://github.com/leogr)\n* update: bump libs and driver versions to 6599e2efebce30a95f27739d655d53f0d5f686e4 [[#2177](https://github.com/falcosecurity/falco/pull/2177)] - [@jasondellaluce](https://github.com/jasondellaluc",
                    "rendered": {
                      "text": "/pull/2097)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(userspace/falco): use move semantics in falco logger [[#2095](https://github.com/falcosecurity/falco/pull/2095)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update: use `FALCO_HOSTNAME` env var to override the hostname value [[#2174](https://github.com/falcosecurity/falco/pull/2174)] - [@leogr](https://github.com/leogr)\n* update: bump libs and driver versions to 6599e2efebce30a95f27739d655d53f0d5f686e4 [[#2177](https://github.com/falcosecurity/falco/pull/2177)] - [@jasondellaluce](https://github.com/jasondellaluc",
                      "markdown": "`/pull/2097)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(userspace/falco): use move semantics in falco logger [[#2095](https://github.com/falcosecurity/falco/pull/2095)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update: use `FALCO_HOSTNAME` env var to override the hostname value [[#2174](https://github.com/falcosecurity/falco/pull/2174)] - [@leogr](https://github.com/leogr)\n* update: bump libs and driver versions to 6599e2efebce30a95f27739d655d53f0d5f686e4 [[#2177](https://github.com/falcosecurity/falco/pull/2177)] - [@jasondellaluce](https://github.com/jasondellaluc`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1961,
                  "startColumn": 11,
                  "endLine": 1961,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n### Bug Fixes\n\n* fix: the base64 output format (-b) now works with both json and normal output. [[#1033](https://github.com/falcosecurity/falco/pull/1033)]\n* fix: version follows semver 2 bnf [[#872](https://github.com/falcosecurity/falco/pull/872)]\n\n### Rule Changes\n",
                    "rendered": {
                      "text": "\n### Bug Fixes\n\n* fix: the base64 output format (-b) now works with both json and normal output. [[#1033](https://github.com/falcosecurity/falco/pull/1033)]\n* fix: version follows semver 2 bnf [[#872](https://github.com/falcosecurity/falco/pull/872)]\n\n### Rule Changes\n",
                      "markdown": "`\n### Bug Fixes\n\n* fix: the base64 output format (-b) now works with both json and normal output. [[#1033](https://github.com/falcosecurity/falco/pull/1033)]\n* fix: version follows semver 2 bnf [[#872](https://github.com/falcosecurity/falco/pull/872)]\n\n### Rule Changes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1578,
                  "startColumn": 179,
                  "endLine": 1578,
                  "endColumn": 188,
                  "snippet": {
                    "text": "er): new rule created [[#1500](https://github.com/falcosecurity/falco/pull/1500)] - [@Kaizhe](https://github.com/Kaizhe)\n* rule(Linux Kernel Module injection detected): adds a new rule that detects when an LKM module is injected using `insmod` from a container (typically used by rootkits looking to obfuscate their behavior via kernel hooking). [[#1478](https://github.com/falcosecurity/falco/pull/1478)] - [@d1vious](https://github.com/d1vious)\n* rule(macro multipath_writing_conf): create and use the macro [[#1475](https://github.com/falcosecurity/falco/pull/1475)] - [@nmarier-coveo](https://github.com/n",
                    "rendered": {
                      "text": "er): new rule created [[#1500](https://github.com/falcosecurity/falco/pull/1500)] - [@Kaizhe](https://github.com/Kaizhe)\n* rule(Linux Kernel Module injection detected): adds a new rule that detects when an LKM module is injected using `insmod` from a container (typically used by rootkits looking to obfuscate their behavior via kernel hooking). [[#1478](https://github.com/falcosecurity/falco/pull/1478)] - [@d1vious](https://github.com/d1vious)\n* rule(macro multipath_writing_conf): create and use the macro [[#1475](https://github.com/falcosecurity/falco/pull/1475)] - [@nmarier-coveo](https://github.com/n",
                      "markdown": "`er): new rule created [[#1500](https://github.com/falcosecurity/falco/pull/1500)] - [@Kaizhe](https://github.com/Kaizhe)\n* rule(Linux Kernel Module injection detected): adds a new rule that detects when an LKM module is injected using `insmod` from a container (typically used by rootkits looking to obfuscate their behavior via kernel hooking). [[#1478](https://github.com/falcosecurity/falco/pull/1478)] - [@d1vious](https://github.com/d1vious)\n* rule(macro multipath_writing_conf): create and use the macro [[#1475](https://github.com/falcosecurity/falco/pull/1475)] - [@nmarier-coveo](https://github.com/n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2858,
                  "startColumn": 44,
                  "endLine": 2858,
                  "endColumn": 48,
                  "snippet": {
                    "text": "```\nRule evttype_not_equals: warning (trailing-evttype):\nevt.type!=execve\n     does not have all evt.type restrictions at the beginning of the condition,\n     or uses a negative match (i.e. \"not\"/\"!=\") for some evt.type restriction.\n     This has a performance penalty, as the rule can not be limited to specific event types.\n     Consider moving all evt.type restrictions to the beginning of the rule and/or\n",
                    "rendered": {
                      "text": "```\nRule evttype_not_equals: warning (trailing-evttype):\nevt.type!=execve\n     does not have all evt.type restrictions at the beginning of the condition,\n     or uses a negative match (i.e. \"not\"/\"!=\") for some evt.type restriction.\n     This has a performance penalty, as the rule can not be limited to specific event types.\n     Consider moving all evt.type restrictions to the beginning of the rule and/or\n",
                      "markdown": "````\nRule evttype_not_equals: warning (trailing-evttype):\nevt.type!=execve\n     does not have all evt.type restrictions at the beginning of the condition,\n     or uses a negative match (i.e. \"not\"/\"!=\") for some evt.type restriction.\n     This has a performance penalty, as the rule can not be limited to specific event types.\n     Consider moving all evt.type restrictions to the beginning of the rule and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2844,
                  "startColumn": 106,
                  "endLine": 2844,
                  "endColumn": 110,
                  "snippet": {
                    "text": "| Kubernetes-Demo (During Teardown) | 15%             | 3%              |\n| Juttle-examples                   | 3%              | 1%              |\n\nAs a part of these changes, falco now prefers rule conditions that have at least one `evt.type=` operator, at the beginning of the condition, before any negative operators (i.e. `not` or `!=`). If a condition does not have any `evt.type=` operator, falco will log a warning like:\n\n```\nRule no_evttype: warning (no-evttype):\n",
                    "rendered": {
                      "text": "| Kubernetes-Demo (During Teardown) | 15%             | 3%              |\n| Juttle-examples                   | 3%              | 1%              |\n\nAs a part of these changes, falco now prefers rule conditions that have at least one `evt.type=` operator, at the beginning of the condition, before any negative operators (i.e. `not` or `!=`). If a condition does not have any `evt.type=` operator, falco will log a warning like:\n\n```\nRule no_evttype: warning (no-evttype):\n",
                      "markdown": "`| Kubernetes-Demo (During Teardown) | 15%             | 3%              |\n| Juttle-examples                   | 3%              | 1%              |\n\nAs a part of these changes, falco now prefers rule conditions that have at least one `evt.type=` operator, at the beginning of the condition, before any negative operators (i.e. `not` or `!=`). If a condition does not have any `evt.type=` operator, falco will log a warning like:\n\n```\nRule no_evttype: warning (no-evttype):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2844,
                  "startColumn": 71,
                  "endLine": 2844,
                  "endColumn": 75,
                  "snippet": {
                    "text": "| Kubernetes-Demo (During Teardown) | 15%             | 3%              |\n| Juttle-examples                   | 3%              | 1%              |\n\nAs a part of these changes, falco now prefers rule conditions that have at least one `evt.type=` operator, at the beginning of the condition, before any negative operators (i.e. `not` or `!=`). If a condition does not have any `evt.type=` operator, falco will log a warning like:\n\n```\nRule no_evttype: warning (no-evttype):\n",
                    "rendered": {
                      "text": "| Kubernetes-Demo (During Teardown) | 15%             | 3%              |\n| Juttle-examples                   | 3%              | 1%              |\n\nAs a part of these changes, falco now prefers rule conditions that have at least one `evt.type=` operator, at the beginning of the condition, before any negative operators (i.e. `not` or `!=`). If a condition does not have any `evt.type=` operator, falco will log a warning like:\n\n```\nRule no_evttype: warning (no-evttype):\n",
                      "markdown": "`| Kubernetes-Demo (During Teardown) | 15%             | 3%              |\n| Juttle-examples                   | 3%              | 1%              |\n\nAs a part of these changes, falco now prefers rule conditions that have at least one `evt.type=` operator, at the beginning of the condition, before any negative operators (i.e. `not` or `!=`). If a condition does not have any `evt.type=` operator, falco will log a warning like:\n\n```\nRule no_evttype: warning (no-evttype):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2823,
                  "startColumn": 114,
                  "endLine": 2823,
                  "endColumn": 118,
                  "snippet": {
                    "text": "tps://github.com/draios/falco/pull/137)]\n\n## v0.3.0\n\nReleased 2016-08-05\n\n### Major Changes\n\nSignificantly improved performance, involving changes in the falco and sysdig repositories:\n\n* Reordering a rule condition's operators to put likely-to-fail operators at the beginning and expensive operators at the end. [[#95](https://github.com/draios/falco/pull/95/)] [[#104](https://github.com/draios/falco/pull/104/)]\n* Adding the ability to perform x in (a, b, c, ...) as a single set membership test instead of individual comparisons between x=a, x=b, etc. [[#624](https://github.com/draios/sysdig/pull/62",
                    "rendered": {
                      "text": "tps://github.com/draios/falco/pull/137)]\n\n## v0.3.0\n\nReleased 2016-08-05\n\n### Major Changes\n\nSignificantly improved performance, involving changes in the falco and sysdig repositories:\n\n* Reordering a rule condition's operators to put likely-to-fail operators at the beginning and expensive operators at the end. [[#95](https://github.com/draios/falco/pull/95/)] [[#104](https://github.com/draios/falco/pull/104/)]\n* Adding the ability to perform x in (a, b, c, ...) as a single set membership test instead of individual comparisons between x=a, x=b, etc. [[#624](https://github.com/draios/sysdig/pull/62",
                      "markdown": "`tps://github.com/draios/falco/pull/137)]\n\n## v0.3.0\n\nReleased 2016-08-05\n\n### Major Changes\n\nSignificantly improved performance, involving changes in the falco and sysdig repositories:\n\n* Reordering a rule condition's operators to put likely-to-fail operators at the beginning and expensive operators at the end. [[#95](https://github.com/draios/falco/pull/95/)] [[#104](https://github.com/draios/falco/pull/104/)]\n* Adding the ability to perform x in (a, b, c, ...) as a single set membership test instead of individual comparisons between x=a, x=b, etc. [[#624](https://github.com/draios/sysdig/pull/62`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2823,
                  "startColumn": 73,
                  "endLine": 2823,
                  "endColumn": 77,
                  "snippet": {
                    "text": "r program output notifications [[#137](https://github.com/draios/falco/pull/137)]\n\n## v0.3.0\n\nReleased 2016-08-05\n\n### Major Changes\n\nSignificantly improved performance, involving changes in the falco and sysdig repositories:\n\n* Reordering a rule condition's operators to put likely-to-fail operators at the beginning and expensive operators at the end. [[#95](https://github.com/draios/falco/pull/95/)] [[#104](https://github.com/draios/falco/pull/104/)]\n* Adding the ability to perform x in (a, b, c, ...) as a single set membership test instead of individual comparisons between x=a, x=b, etc. [[#624]",
                    "rendered": {
                      "text": "r program output notifications [[#137](https://github.com/draios/falco/pull/137)]\n\n## v0.3.0\n\nReleased 2016-08-05\n\n### Major Changes\n\nSignificantly improved performance, involving changes in the falco and sysdig repositories:\n\n* Reordering a rule condition's operators to put likely-to-fail operators at the beginning and expensive operators at the end. [[#95](https://github.com/draios/falco/pull/95/)] [[#104](https://github.com/draios/falco/pull/104/)]\n* Adding the ability to perform x in (a, b, c, ...) as a single set membership test instead of individual comparisons between x=a, x=b, etc. [[#624]",
                      "markdown": "`r program output notifications [[#137](https://github.com/draios/falco/pull/137)]\n\n## v0.3.0\n\nReleased 2016-08-05\n\n### Major Changes\n\nSignificantly improved performance, involving changes in the falco and sysdig repositories:\n\n* Reordering a rule condition's operators to put likely-to-fail operators at the beginning and expensive operators at the end. [[#95](https://github.com/draios/falco/pull/95/)] [[#104](https://github.com/draios/falco/pull/104/)]\n* Adding the ability to perform x in (a, b, c, ...) as a single set membership test instead of individual comparisons between x=a, x=b, etc. [[#624]`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2811,
                  "startColumn": 1,
                  "endLine": 2811,
                  "endColumn": 9,
                  "snippet": {
                    "text": "e configurable outputs [[#117](https://github.com/draios/falco/pull/117)]. This was not broken in 0.3.0, just between 0.3.0 and 0.4.0.\n* Fixed a lua stack leak that could cause problems when matching millions of events against a large set of rules [[#123](https://github.com/draios/falco/pull/123)]\n* Update docker files to reflect changes to `debian:unstable` docker image [[#124](https://github.com/draios/falco/pull/124)]\n* Fixed logic for detecting config files to ensure config files in `/etc/falco.yaml` are properly detected  [[#135](https://github.com/draios/falco/pull/135)] [[#136](https://github.c",
                    "rendered": {
                      "text": "e configurable outputs [[#117](https://github.com/draios/falco/pull/117)]. This was not broken in 0.3.0, just between 0.3.0 and 0.4.0.\n* Fixed a lua stack leak that could cause problems when matching millions of events against a large set of rules [[#123](https://github.com/draios/falco/pull/123)]\n* Update docker files to reflect changes to `debian:unstable` docker image [[#124](https://github.com/draios/falco/pull/124)]\n* Fixed logic for detecting config files to ensure config files in `/etc/falco.yaml` are properly detected  [[#135](https://github.com/draios/falco/pull/135)] [[#136](https://github.c",
                      "markdown": "`e configurable outputs [[#117](https://github.com/draios/falco/pull/117)]. This was not broken in 0.3.0, just between 0.3.0 and 0.4.0.\n* Fixed a lua stack leak that could cause problems when matching millions of events against a large set of rules [[#123](https://github.com/draios/falco/pull/123)]\n* Update docker files to reflect changes to `debian:unstable` docker image [[#124](https://github.com/draios/falco/pull/124)]\n* Fixed logic for detecting config files to ensure config files in `/etc/falco.yaml` are properly detected  [[#135](https://github.com/draios/falco/pull/135)] [[#136](https://github.c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2710,
                  "startColumn": 1,
                  "endLine": 2710,
                  "endColumn": 9,
                  "snippet": {
                    "text": "example k8s yaml files that show how to run falco as a k8s DaemonSet, and how to run falco-event-generator as a deployment running on one node. [[#222](https://github.com/draios/falco/pull/222)] [[#225](https://github.com/draios/falco/issues/225)] [[#226](https://github.com/draios/falco/pull/226)]\n* Update third party libraries to address security vulnerabilities. [[#182](https://github.com/draios/falco/pull/182)]\n* Falco can now be built on OSX. Like sysdig, on OSX it is limited to reading existing trace files. [[#210](https://github.com/draios/falco/pull/210)]\n\n### Minor Changes\n* Several changes to",
                    "rendered": {
                      "text": "example k8s yaml files that show how to run falco as a k8s DaemonSet, and how to run falco-event-generator as a deployment running on one node. [[#222](https://github.com/draios/falco/pull/222)] [[#225](https://github.com/draios/falco/issues/225)] [[#226](https://github.com/draios/falco/pull/226)]\n* Update third party libraries to address security vulnerabilities. [[#182](https://github.com/draios/falco/pull/182)]\n* Falco can now be built on OSX. Like sysdig, on OSX it is limited to reading existing trace files. [[#210](https://github.com/draios/falco/pull/210)]\n\n### Minor Changes\n* Several changes to",
                      "markdown": "`example k8s yaml files that show how to run falco as a k8s DaemonSet, and how to run falco-event-generator as a deployment running on one node. [[#222](https://github.com/draios/falco/pull/222)] [[#225](https://github.com/draios/falco/issues/225)] [[#226](https://github.com/draios/falco/pull/226)]\n* Update third party libraries to address security vulnerabilities. [[#182](https://github.com/draios/falco/pull/182)]\n* Falco can now be built on OSX. Like sysdig, on OSX it is limited to reading existing trace files. [[#210](https://github.com/draios/falco/pull/210)]\n\n### Minor Changes\n* Several changes to`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2694,
                  "startColumn": 1,
                  "endLine": 2694,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n### Bug Fixes\n\n* Update the falco driver to work with kernel 4.11 [[#829](https://github.com/draios/sysdig/pull/829)]\n\n### Rule Changes\n\n",
                    "rendered": {
                      "text": "\n### Bug Fixes\n\n* Update the falco driver to work with kernel 4.11 [[#829](https://github.com/draios/sysdig/pull/829)]\n\n### Rule Changes\n\n",
                      "markdown": "`\n### Bug Fixes\n\n* Update the falco driver to work with kernel 4.11 [[#829](https://github.com/draios/sysdig/pull/829)]\n\n### Rule Changes\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2663,
                  "startColumn": 1,
                  "endLine": 2663,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n### Major Changes\n\n* Update the priorities of falco rules to use a wider range of priorities rather than just ERROR/WARNING. More info on the use of priorities in the ruleset can be found [here](https://github.com/draios/falco/wiki/Falco-Rules#rule-priorities). [[#244](https://github.com/draios/falco/pull/244)]\n\n### Minor Changes\n\n",
                    "rendered": {
                      "text": "\n### Major Changes\n\n* Update the priorities of falco rules to use a wider range of priorities rather than just ERROR/WARNING. More info on the use of priorities in the ruleset can be found [here](https://github.com/draios/falco/wiki/Falco-Rules#rule-priorities). [[#244](https://github.com/draios/falco/pull/244)]\n\n### Minor Changes\n\n",
                      "markdown": "`\n### Major Changes\n\n* Update the priorities of falco rules to use a wider range of priorities rather than just ERROR/WARNING. More info on the use of priorities in the ruleset can be found [here](https://github.com/draios/falco/wiki/Falco-Rules#rule-priorities). [[#244](https://github.com/draios/falco/pull/244)]\n\n### Minor Changes\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2635,
                  "startColumn": 22,
                  "endLine": 2635,
                  "endColumn": 26,
                  "snippet": {
                    "text": "### Minor Changes\n\n* Minor updates to falco example programs [[#248](https://github.com/draios/falco/pull/248)] [[#275](https://github.com/draios/falco/pull/275)]\n* Also validate macros at rule parse time. [[#257](https://github.com/draios/falco/pull/257)]\n* Minor README typo fixes [[#276](https://github.com/draios/falco/pull/276)]\n* Add a government CLA (contributor license agreement). [[#263](https://github.com/draios/falco/pull/263)]\n* Add ability to only run rules with a priority >= some threshold [[#281](https://github.com/draios/falco/pull/281)]\n",
                    "rendered": {
                      "text": "### Minor Changes\n\n* Minor updates to falco example programs [[#248](https://github.com/draios/falco/pull/248)] [[#275](https://github.com/draios/falco/pull/275)]\n* Also validate macros at rule parse time. [[#257](https://github.com/draios/falco/pull/257)]\n* Minor README typo fixes [[#276](https://github.com/draios/falco/pull/276)]\n* Add a government CLA (contributor license agreement). [[#263](https://github.com/draios/falco/pull/263)]\n* Add ability to only run rules with a priority >= some threshold [[#281](https://github.com/draios/falco/pull/281)]\n",
                      "markdown": "`### Minor Changes\n\n* Minor updates to falco example programs [[#248](https://github.com/draios/falco/pull/248)] [[#275](https://github.com/draios/falco/pull/275)]\n* Also validate macros at rule parse time. [[#257](https://github.com/draios/falco/pull/257)]\n* Minor README typo fixes [[#276](https://github.com/draios/falco/pull/276)]\n* Add a government CLA (contributor license agreement). [[#263](https://github.com/draios/falco/pull/263)]\n* Add ability to only run rules with a priority >= some threshold [[#281](https://github.com/draios/falco/pull/281)]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2577,
                  "startColumn": 72,
                  "endLine": 2577,
                  "endColumn": 76,
                  "snippet": {
                    "text": " like `fd.net` can now be used with the `in` operator e.g. `evt.type=connect and fd.net in (\"127.0.0.1/24\")`. [[draios/sysdig#1091](https://github.com/draios/sysdig/pull/1091)] [[#343](https://github.com/draios/falco/pull/343)]\n* Ensure that `keep_alive` can be used both with file and program output at the same time. [[#335](https://github.com/draios/falco/pull/335)]\n* Make it possible to append to a skipped macro/rule without falco complaining [[#346](https://github.com/draios/falco/pull/346)] [[#305](https://github.com/draios/falco/issues/305)]\n* Ensure rule order is preserved even when rules do",
                    "rendered": {
                      "text": " like `fd.net` can now be used with the `in` operator e.g. `evt.type=connect and fd.net in (\"127.0.0.1/24\")`. [[draios/sysdig#1091](https://github.com/draios/sysdig/pull/1091)] [[#343](https://github.com/draios/falco/pull/343)]\n* Ensure that `keep_alive` can be used both with file and program output at the same time. [[#335](https://github.com/draios/falco/pull/335)]\n* Make it possible to append to a skipped macro/rule without falco complaining [[#346](https://github.com/draios/falco/pull/346)] [[#305](https://github.com/draios/falco/issues/305)]\n* Ensure rule order is preserved even when rules do",
                      "markdown": "` like `fd.net` can now be used with the `in` operator e.g. `evt.type=connect and fd.net in (\"127.0.0.1/24\")`. [[draios/sysdig#1091](https://github.com/draios/sysdig/pull/1091)] [[#343](https://github.com/draios/falco/pull/343)]\n* Ensure that `keep_alive` can be used both with file and program output at the same time. [[#335](https://github.com/draios/falco/pull/335)]\n* Make it possible to append to a skipped macro/rule without falco complaining [[#346](https://github.com/draios/falco/pull/346)] [[#305](https://github.com/draios/falco/issues/305)]\n* Ensure rule order is preserved even when rules do`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2564,
                  "startColumn": 92,
                  "endLine": 2564,
                  "endColumn": 96,
                  "snippet": {
                    "text": "dig#1105](https://github.com/draios/sysdig/pull/1105)]\n\n### Minor Changes\n\n* Add gdb to the development Docker image (sysdig/falco:dev) to aid in debugging. [[#323](https://github.com/draios/falco/pull/323)]\n* You can now specify -V multiple times on the command line to validate multiple rules files at once. [[#329](https://github.com/draios/falco/pull/329)]\n* When run with `-v`, falco will print *dangling* macros/lists that are not used by any rules. [[#329](https://github.com/draios/falco/pull/329)]\n* Add an example demonstrating cryptomining attack that exploits an open docker daemon using host",
                    "rendered": {
                      "text": "dig#1105](https://github.com/draios/sysdig/pull/1105)]\n\n### Minor Changes\n\n* Add gdb to the development Docker image (sysdig/falco:dev) to aid in debugging. [[#323](https://github.com/draios/falco/pull/323)]\n* You can now specify -V multiple times on the command line to validate multiple rules files at once. [[#329](https://github.com/draios/falco/pull/329)]\n* When run with `-v`, falco will print *dangling* macros/lists that are not used by any rules. [[#329](https://github.com/draios/falco/pull/329)]\n* Add an example demonstrating cryptomining attack that exploits an open docker daemon using host",
                      "markdown": "`dig#1105](https://github.com/draios/sysdig/pull/1105)]\n\n### Minor Changes\n\n* Add gdb to the development Docker image (sysdig/falco:dev) to aid in debugging. [[#323](https://github.com/draios/falco/pull/323)]\n* You can now specify -V multiple times on the command line to validate multiple rules files at once. [[#329](https://github.com/draios/falco/pull/329)]\n* When run with `-v`, falco will print *dangling* macros/lists that are not used by any rules. [[#329](https://github.com/draios/falco/pull/329)]\n* Add an example demonstrating cryptomining attack that exploits an open docker daemon using host`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2542,
                  "startColumn": 1,
                  "endLine": 2542,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ogspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/falco/pull/366)]\n* Let program `id` open network connections [[#366](https://github.com/draios/falco/pull/366)]\n* Opt-in rule for protec",
                    "rendered": {
                      "text": "ogspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/falco/pull/366)]\n* Let program `id` open network connections [[#366](https://github.com/draios/falco/pull/366)]\n* Opt-in rule for protec",
                      "markdown": "`ogspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/falco/pull/366)]\n* Let program `id` open network connections [[#366](https://github.com/draios/falco/pull/366)]\n* Opt-in rule for protec`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2541,
                  "startColumn": 1,
                  "endLine": 2541,
                  "endColumn": 9,
                  "snippet": {
                    "text": "388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp agent, gliderlabs logspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/f",
                    "rendered": {
                      "text": "388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp agent, gliderlabs logspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/f",
                      "markdown": "`388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp agent, gliderlabs logspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2537,
                  "startColumn": 1,
                  "endLine": 2537,
                  "endColumn": 9,
                  "snippet": {
                    "text": "hub.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp age",
                    "rendered": {
                      "text": "hub.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp age",
                      "markdown": "`hub.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp age`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2536,
                  "startColumn": 1,
                  "endLine": 2536,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ditional package management programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https:/",
                    "rendered": {
                      "text": "ditional package management programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https:/",
                      "markdown": "`ditional package management programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https:/`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2535,
                  "startColumn": 1,
                  "endLine": 2535,
                  "endColumn": 9,
                  "snippet": {
                    "text": "s://github.com/draios/falco/issues/392)]\n\n### Rule Changes\n\n* Add additional binary writing programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional package management programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/f",
                    "rendered": {
                      "text": "s://github.com/draios/falco/issues/392)]\n\n### Rule Changes\n\n* Add additional binary writing programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional package management programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/f",
                      "markdown": "`s://github.com/draios/falco/issues/392)]\n\n### Rule Changes\n\n* Add additional binary writing programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional package management programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2495,
                  "startColumn": 8,
                  "endLine": 2495,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n### Bug Fixes\n\n* Better control of specifying location of lua source code [[#406](https://github.com/draios/falco/pull/406)]\n\n### Rule Changes\n\n",
                    "rendered": {
                      "text": "\n### Bug Fixes\n\n* Better control of specifying location of lua source code [[#406](https://github.com/draios/falco/pull/406)]\n\n### Rule Changes\n\n",
                      "markdown": "`\n### Bug Fixes\n\n* Better control of specifying location of lua source code [[#406](https://github.com/draios/falco/pull/406)]\n\n### Rule Changes\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2394,
                  "startColumn": 1,
                  "endLine": 2394,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n* Remove FPs for `Launch Sensitive Mount Container` rule [[#509](https://github.com/falcosecurity/falco/pull/509/files)]\n\n* Update Container rules/macros to use the more reliable `container.image.{repository,tag}` that always return the repository/tag of an image instead of `container.image`, which may not for some docker daemon versions. [[#513](https://github.com/falcosecurity/falco/pull/513)]\n\n## v0.13.1\n\n",
                    "rendered": {
                      "text": "\n* Remove FPs for `Launch Sensitive Mount Container` rule [[#509](https://github.com/falcosecurity/falco/pull/509/files)]\n\n* Update Container rules/macros to use the more reliable `container.image.{repository,tag}` that always return the repository/tag of an image instead of `container.image`, which may not for some docker daemon versions. [[#513](https://github.com/falcosecurity/falco/pull/513)]\n\n## v0.13.1\n\n",
                      "markdown": "`\n* Remove FPs for `Launch Sensitive Mount Container` rule [[#509](https://github.com/falcosecurity/falco/pull/509/files)]\n\n* Update Container rules/macros to use the more reliable `container.image.{repository,tag}` that always return the repository/tag of an image instead of `container.image`, which may not for some docker daemon versions. [[#513](https://github.com/falcosecurity/falco/pull/513)]\n\n## v0.13.1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2334,
                  "startColumn": 164,
                  "endLine": 2334,
                  "endColumn": 170,
                  "snippet": {
                    "text": "th-sysdig-falco/). [[#575](https://github.com/falcosecurity/falco/pull/575)] [[#578](https://github.com/falcosecurity/falco/pull/578)]\n\n* New rules for additional use cases: New rules `Schedule Cron Jobs`, `Update Package Repository`, `Remove Bulk Data from Disk`, `Set Setuid or Setgid bit`, `Detect bash history deletion`, `Create Hidden Files or Directories` look for additional common follow-on activity you might see from an attacker. [[#578](https://github.com/falcosecurity/falco/pull/578)] [[#580](https://github.com/falcosecurity/falco/pull/580)]\n\n* Allow docker's \"exe\" (usually part of docker sa",
                    "rendered": {
                      "text": "th-sysdig-falco/). [[#575](https://github.com/falcosecurity/falco/pull/575)] [[#578](https://github.com/falcosecurity/falco/pull/578)]\n\n* New rules for additional use cases: New rules `Schedule Cron Jobs`, `Update Package Repository`, `Remove Bulk Data from Disk`, `Set Setuid or Setgid bit`, `Detect bash history deletion`, `Create Hidden Files or Directories` look for additional common follow-on activity you might see from an attacker. [[#578](https://github.com/falcosecurity/falco/pull/578)] [[#580](https://github.com/falcosecurity/falco/pull/580)]\n\n* Allow docker's \"exe\" (usually part of docker sa",
                      "markdown": "`th-sysdig-falco/). [[#575](https://github.com/falcosecurity/falco/pull/575)] [[#578](https://github.com/falcosecurity/falco/pull/578)]\n\n* New rules for additional use cases: New rules `Schedule Cron Jobs`, `Update Package Repository`, `Remove Bulk Data from Disk`, `Set Setuid or Setgid bit`, `Detect bash history deletion`, `Create Hidden Files or Directories` look for additional common follow-on activity you might see from an attacker. [[#578](https://github.com/falcosecurity/falco/pull/578)] [[#580](https://github.com/falcosecurity/falco/pull/580)]\n\n* Allow docker's \"exe\" (usually part of docker sa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2247,
                  "startColumn": 25,
                  "endLine": 2247,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n### Major Changes\n\n* Drop unnecessary events at the kernel level instead of userspace, which should improve performance [[#635](https://github.com/falcosecurity/falco/pull/635)]\n\n### Minor Changes\n\n",
                    "rendered": {
                      "text": "\n### Major Changes\n\n* Drop unnecessary events at the kernel level instead of userspace, which should improve performance [[#635](https://github.com/falcosecurity/falco/pull/635)]\n\n### Minor Changes\n\n",
                      "markdown": "`\n### Major Changes\n\n* Drop unnecessary events at the kernel level instead of userspace, which should improve performance [[#635](https://github.com/falcosecurity/falco/pull/635)]\n\n### Minor Changes\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2163,
                  "startColumn": 1,
                  "endLine": 2163,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n* Token bucket unit tests and redesign. [[#692](https://github.com/falcosecurity/falco/pull/692)]\n\n* Update github PR template. [[#699](https://github.com/falcosecurity/falco/pull/699)]\n\n* Fix PR template for kind/rule-*. [[#697](https://github.com/falcosecurity/falco/pull/697)]\n\n",
                    "rendered": {
                      "text": "\n* Token bucket unit tests and redesign. [[#692](https://github.com/falcosecurity/falco/pull/692)]\n\n* Update github PR template. [[#699](https://github.com/falcosecurity/falco/pull/699)]\n\n* Fix PR template for kind/rule-*. [[#697](https://github.com/falcosecurity/falco/pull/697)]\n\n",
                      "markdown": "`\n* Token bucket unit tests and redesign. [[#692](https://github.com/falcosecurity/falco/pull/692)]\n\n* Update github PR template. [[#699](https://github.com/falcosecurity/falco/pull/699)]\n\n* Fix PR template for kind/rule-*. [[#697](https://github.com/falcosecurity/falco/pull/697)]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2079,
                  "startColumn": 98,
                  "endLine": 2079,
                  "endColumn": 104,
                  "snippet": {
                    "text": "name shell history: when deleting a shell history file now the syscalls are taken into account rather than just the commands deleting the files [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: delete or rename shell history: history deletion now supports fish and zsh in addition to bash [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: \"create hidden files or directories\" and \"update package repository\" now trigger also if the files are moved and not just if modified or created. [[#766](https://github.com/falcosecurity/falco/pull/766)]\n\n## v0.17.1\n\nReleased 2019-09",
                    "rendered": {
                      "text": "name shell history: when deleting a shell history file now the syscalls are taken into account rather than just the commands deleting the files [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: delete or rename shell history: history deletion now supports fish and zsh in addition to bash [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: \"create hidden files or directories\" and \"update package repository\" now trigger also if the files are moved and not just if modified or created. [[#766](https://github.com/falcosecurity/falco/pull/766)]\n\n## v0.17.1\n\nReleased 2019-09",
                      "markdown": "`name shell history: when deleting a shell history file now the syscalls are taken into account rather than just the commands deleting the files [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: delete or rename shell history: history deletion now supports fish and zsh in addition to bash [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: \"create hidden files or directories\" and \"update package repository\" now trigger also if the files are moved and not just if modified or created. [[#766](https://github.com/falcosecurity/falco/pull/766)]\n\n## v0.17.1\n\nReleased 2019-09`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2075,
                  "startColumn": 15,
                  "endLine": 2075,
                  "endColumn": 21,
                  "snippet": {
                    "text": "ttps://github.com/falcosecurity/falco/pull/763)]\n* rules: add back rule delete bash history for backport compatibility [[#864](https://github.com/falcosecurity/falco/pull/864)]\n* rule: syscalls are used to detect suid and sgid [[#765](https://github.com/falcosecurity/falco/pull/765)]\n* rules: delete bash history is renamed to delete or rename shell history [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: add image fluent/fluentd-kubernetes-daemonset to clear log trusted images [[#852](https://github.com/falcosecurity/falco/pull/852)]\n* rules: include default users created by `kops`",
                    "rendered": {
                      "text": "ttps://github.com/falcosecurity/falco/pull/763)]\n* rules: add back rule delete bash history for backport compatibility [[#864](https://github.com/falcosecurity/falco/pull/864)]\n* rule: syscalls are used to detect suid and sgid [[#765](https://github.com/falcosecurity/falco/pull/765)]\n* rules: delete bash history is renamed to delete or rename shell history [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: add image fluent/fluentd-kubernetes-daemonset to clear log trusted images [[#852](https://github.com/falcosecurity/falco/pull/852)]\n* rules: include default users created by `kops`",
                      "markdown": "`ttps://github.com/falcosecurity/falco/pull/763)]\n* rules: add back rule delete bash history for backport compatibility [[#864](https://github.com/falcosecurity/falco/pull/864)]\n* rule: syscalls are used to detect suid and sgid [[#765](https://github.com/falcosecurity/falco/pull/765)]\n* rules: delete bash history is renamed to delete or rename shell history [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: add image fluent/fluentd-kubernetes-daemonset to clear log trusted images [[#852](https://github.com/falcosecurity/falco/pull/852)]\n* rules: include default users created by `kops``"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2073,
                  "startColumn": 29,
                  "endLine": 2073,
                  "endColumn": 35,
                  "snippet": {
                    "text": "ttps://github.com/falcosecurity/falco/pull/755)]\n* rules: ignore sensitive mounts from the ecs-agent [[#881](https://github.com/falcosecurity/falco/pull/881)]\n* rules: add rules to detect crypto mining activities [[#763](https://github.com/falcosecurity/falco/pull/763)]\n* rules: add back rule delete bash history for backport compatibility [[#864](https://github.com/falcosecurity/falco/pull/864)]\n* rule: syscalls are used to detect suid and sgid [[#765](https://github.com/falcosecurity/falco/pull/765)]\n* rules: delete bash history is renamed to delete or rename shell history [[#762](https://github.co",
                    "rendered": {
                      "text": "ttps://github.com/falcosecurity/falco/pull/755)]\n* rules: ignore sensitive mounts from the ecs-agent [[#881](https://github.com/falcosecurity/falco/pull/881)]\n* rules: add rules to detect crypto mining activities [[#763](https://github.com/falcosecurity/falco/pull/763)]\n* rules: add back rule delete bash history for backport compatibility [[#864](https://github.com/falcosecurity/falco/pull/864)]\n* rule: syscalls are used to detect suid and sgid [[#765](https://github.com/falcosecurity/falco/pull/765)]\n* rules: delete bash history is renamed to delete or rename shell history [[#762](https://github.co",
                      "markdown": "`ttps://github.com/falcosecurity/falco/pull/755)]\n* rules: ignore sensitive mounts from the ecs-agent [[#881](https://github.com/falcosecurity/falco/pull/881)]\n* rules: add rules to detect crypto mining activities [[#763](https://github.com/falcosecurity/falco/pull/763)]\n* rules: add back rule delete bash history for backport compatibility [[#864](https://github.com/falcosecurity/falco/pull/864)]\n* rule: syscalls are used to detect suid and sgid [[#765](https://github.com/falcosecurity/falco/pull/765)]\n* rules: delete bash history is renamed to delete or rename shell history [[#762](https://github.co`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1930,
                  "startColumn": 60,
                  "endLine": 1930,
                  "endColumn": 64,
                  "snippet": {
                    "text": " [[#1074](https://github.com/falcosecurity/falco/pull/1074)]\n* new(docker/event-generator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binutils-2.30) from a new open reposi",
                    "rendered": {
                      "text": " [[#1074](https://github.com/falcosecurity/falco/pull/1074)]\n* new(docker/event-generator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binutils-2.30) from a new open reposi",
                      "markdown": "` [[#1074](https://github.com/falcosecurity/falco/pull/1074)]\n* new(docker/event-generator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binutils-2.30) from a new open reposi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1928,
                  "startColumn": 7,
                  "endLine": 1928,
                  "endColumn": 15,
                  "snippet": {
                    "text": "/pull/1059)]\n* new: sign packages with falcosecurity gpg key [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Minor Changes\n\n* new: falco_version_prerelease contains the number of commits since last tag on the master [[#1086](https://github.com/falcosecurity/falco/pull/1086)]\n* docs: update branding [[#1074](https://github.com/falcosecurity/falco/pull/1074)]\n* new(docker/event-generator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build a",
                    "rendered": {
                      "text": "/pull/1059)]\n* new: sign packages with falcosecurity gpg key [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Minor Changes\n\n* new: falco_version_prerelease contains the number of commits since last tag on the master [[#1086](https://github.com/falcosecurity/falco/pull/1086)]\n* docs: update branding [[#1074](https://github.com/falcosecurity/falco/pull/1074)]\n* new(docker/event-generator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build a",
                      "markdown": "`/pull/1059)]\n* new: sign packages with falcosecurity gpg key [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Minor Changes\n\n* new: falco_version_prerelease contains the number of commits since last tag on the master [[#1086](https://github.com/falcosecurity/falco/pull/1086)]\n* docs: update branding [[#1074](https://github.com/falcosecurity/falco/pull/1074)]\n* new(docker/event-generator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1916,
                  "startColumn": 96,
                  "endLine": 1916,
                  "endColumn": 104,
                  "snippet": {
                    "text": "count Created in Kube Namespace): only detect sa created in kube namespace with success [[#1117](https://github.com/falcosecurity/falco/pull/1117)]\n\n## v0.21.0\n\nReleased on 2020-03-17\n\n### Major Changes\n\n* BREAKING CHANGE: the SYSDIG_BPF_PROBE environment variable is now just FALCO_BPF_PROBE (please update your systemd scripts or kubernetes deployments. [[#1050](https://github.com/falcosecurity/falco/pull/1050)]\n* new: automatically publish deb packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm package",
                    "rendered": {
                      "text": "count Created in Kube Namespace): only detect sa created in kube namespace with success [[#1117](https://github.com/falcosecurity/falco/pull/1117)]\n\n## v0.21.0\n\nReleased on 2020-03-17\n\n### Major Changes\n\n* BREAKING CHANGE: the SYSDIG_BPF_PROBE environment variable is now just FALCO_BPF_PROBE (please update your systemd scripts or kubernetes deployments. [[#1050](https://github.com/falcosecurity/falco/pull/1050)]\n* new: automatically publish deb packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm package",
                      "markdown": "`count Created in Kube Namespace): only detect sa created in kube namespace with success [[#1117](https://github.com/falcosecurity/falco/pull/1117)]\n\n## v0.21.0\n\nReleased on 2020-03-17\n\n### Major Changes\n\n* BREAKING CHANGE: the SYSDIG_BPF_PROBE environment variable is now just FALCO_BPF_PROBE (please update your systemd scripts or kubernetes deployments. [[#1050](https://github.com/falcosecurity/falco/pull/1050)]\n* new: automatically publish deb packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm package`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1905,
                  "startColumn": 13,
                  "endLine": 1905,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ect traffic that is not to authorized server process and port [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Delete or rename shell history): \"mitre_defense_evation\" tag corrected to \"mitre_defense_evasion\" [[#1143](https://github.com/falcosecurity/falco/pull/1143)]\n* rule(Delete Bash History): \"mitre_defense_evation\" tag corrected to \"mitre_defense_evasion\" [[#1143](https://github.com/falcosecurity/falco/pull/1143)]\n* rule(Write below root): use pmatch to check against known root directories [[#1137](https://github.com/falcosecurity/falco/pull/1137)]\n* rule(Detect outbound conne",
                    "rendered": {
                      "text": "ect traffic that is not to authorized server process and port [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Delete or rename shell history): \"mitre_defense_evation\" tag corrected to \"mitre_defense_evasion\" [[#1143](https://github.com/falcosecurity/falco/pull/1143)]\n* rule(Delete Bash History): \"mitre_defense_evation\" tag corrected to \"mitre_defense_evasion\" [[#1143](https://github.com/falcosecurity/falco/pull/1143)]\n* rule(Write below root): use pmatch to check against known root directories [[#1137](https://github.com/falcosecurity/falco/pull/1137)]\n* rule(Detect outbound conne",
                      "markdown": "`ect traffic that is not to authorized server process and port [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Delete or rename shell history): \"mitre_defense_evation\" tag corrected to \"mitre_defense_evasion\" [[#1143](https://github.com/falcosecurity/falco/pull/1143)]\n* rule(Delete Bash History): \"mitre_defense_evation\" tag corrected to \"mitre_defense_evasion\" [[#1143](https://github.com/falcosecurity/falco/pull/1143)]\n* rule(Write below root): use pmatch to check against known root directories [[#1137](https://github.com/falcosecurity/falco/pull/1137)]\n* rule(Detect outbound conne`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1875,
                  "startColumn": 21,
                  "endLine": 1875,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n### Minor Changes\n\n* docs(integrations): update API resource versions to Kubernetes 1.16 [[#1044](https://github.com/falcosecurity/falco/pull/1044)]\n* docs: add new release archive to the `README.md` [[#1098](https://github.com/falcosecurity/falco/pull/1098)]\n* update: driver version a259b4bf49c3 [[#1138](https://github.com/falcosecurity/falco/pull/1138)]\n* docs(integrations/k8s-using-daemonset): --cri flag correct socket path [[#1140](https://github.com/falcosecurity/falco/pull/1140)]\n",
                    "rendered": {
                      "text": "\n### Minor Changes\n\n* docs(integrations): update API resource versions to Kubernetes 1.16 [[#1044](https://github.com/falcosecurity/falco/pull/1044)]\n* docs: add new release archive to the `README.md` [[#1098](https://github.com/falcosecurity/falco/pull/1098)]\n* update: driver version a259b4bf49c3 [[#1138](https://github.com/falcosecurity/falco/pull/1138)]\n* docs(integrations/k8s-using-daemonset): --cri flag correct socket path [[#1140](https://github.com/falcosecurity/falco/pull/1140)]\n",
                      "markdown": "`\n### Minor Changes\n\n* docs(integrations): update API resource versions to Kubernetes 1.16 [[#1044](https://github.com/falcosecurity/falco/pull/1044)]\n* docs: add new release archive to the `README.md` [[#1098](https://github.com/falcosecurity/falco/pull/1098)]\n* update: driver version a259b4bf49c3 [[#1138](https://github.com/falcosecurity/falco/pull/1138)]\n* docs(integrations/k8s-using-daemonset): --cri flag correct socket path [[#1140](https://github.com/falcosecurity/falco/pull/1140)]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1793,
                  "startColumn": 34,
                  "endLine": 1793,
                  "endColumn": 42,
                  "snippet": {
                    "text": "ent_container): Allow hcp-tunnelfront to run kubectl in containers [[#1230](https://github.com/falcosecurity/falco/pull/1230)]\n* rule(list allowed_k8s_users): Add vertical pod autoscaler as known k8s users [[#1230](https://github.com/falcosecurity/falco/pull/1230)]\n* rule(Anonymous Request Allowed): update to checking auth decision equals to allow [[#1267](https://github.com/falcosecurity/falco/pull/1267)]\n* rule(Container Drift Detected (chmod)): new rule to detect if an existing file get exec permissions in a container [[#1254](https://github.com/falcosecurity/falco/pull/1254)]\n* rule(Container Drif",
                    "rendered": {
                      "text": "ent_container): Allow hcp-tunnelfront to run kubectl in containers [[#1230](https://github.com/falcosecurity/falco/pull/1230)]\n* rule(list allowed_k8s_users): Add vertical pod autoscaler as known k8s users [[#1230](https://github.com/falcosecurity/falco/pull/1230)]\n* rule(Anonymous Request Allowed): update to checking auth decision equals to allow [[#1267](https://github.com/falcosecurity/falco/pull/1267)]\n* rule(Container Drift Detected (chmod)): new rule to detect if an existing file get exec permissions in a container [[#1254](https://github.com/falcosecurity/falco/pull/1254)]\n* rule(Container Drif",
                      "markdown": "`ent_container): Allow hcp-tunnelfront to run kubectl in containers [[#1230](https://github.com/falcosecurity/falco/pull/1230)]\n* rule(list allowed_k8s_users): Add vertical pod autoscaler as known k8s users [[#1230](https://github.com/falcosecurity/falco/pull/1230)]\n* rule(Anonymous Request Allowed): update to checking auth decision equals to allow [[#1267](https://github.com/falcosecurity/falco/pull/1267)]\n* rule(Container Drift Detected (chmod)): new rule to detect if an existing file get exec permissions in a container [[#1254](https://github.com/falcosecurity/falco/pull/1254)]\n* rule(Container Drif`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1743,
                  "startColumn": 63,
                  "endLine": 1743,
                  "endColumn": 71,
                  "snippet": {
                    "text": " [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_update_package_registry): new macro to be overridden to list known package registry update  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Update Package Registry): exclude known package registry update [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activities that read SSH info  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read ssh information): do not throw for act",
                    "rendered": {
                      "text": " [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_update_package_registry): new macro to be overridden to list known package registry update  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Update Package Registry): exclude known package registry update [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activities that read SSH info  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read ssh information): do not throw for act",
                      "markdown": "` [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_update_package_registry): new macro to be overridden to list known package registry update  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Update Package Registry): exclude known package registry update [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activities that read SSH info  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read ssh information): do not throw for act`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1742,
                  "startColumn": 107,
                  "endLine": 1742,
                  "endColumn": 115,
                  "snippet": {
                    "text": "t known cron jobs   [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Schedule Cron Jobs): exclude known cron jobs  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_update_package_registry): new macro to be overridden to list known package registry update  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Update Package Registry): exclude known package registry update [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activitie",
                    "rendered": {
                      "text": "t known cron jobs   [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Schedule Cron Jobs): exclude known cron jobs  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_update_package_registry): new macro to be overridden to list known package registry update  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Update Package Registry): exclude known package registry update [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activitie",
                      "markdown": "`t known cron jobs   [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Schedule Cron Jobs): exclude known cron jobs  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_update_package_registry): new macro to be overridden to list known package registry update  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Update Package Registry): exclude known package registry update [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activitie`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1660,
                  "startColumn": 59,
                  "endLine": 1660,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n### Major Changes\n\n* new(userspace/falco): print the Falco and driver versions at the very beginning of the output. [[#1303](https://github.com/falcosecurity/falco/pull/1303)] - [@leogr](https://github.com/leogr)\n* new: libyaml is now bundled in the release process. Users can now avoid installing libyaml directly when getting Falco from the official release. [[#1252](https://github.com/falcosecurity/falco/pull/1252)] - [@fntlnz](https://github.com/fntlnz)\n\n\n",
                    "rendered": {
                      "text": "\n### Major Changes\n\n* new(userspace/falco): print the Falco and driver versions at the very beginning of the output. [[#1303](https://github.com/falcosecurity/falco/pull/1303)] - [@leogr](https://github.com/leogr)\n* new: libyaml is now bundled in the release process. Users can now avoid installing libyaml directly when getting Falco from the official release. [[#1252](https://github.com/falcosecurity/falco/pull/1252)] - [@fntlnz](https://github.com/fntlnz)\n\n\n",
                      "markdown": "`\n### Major Changes\n\n* new(userspace/falco): print the Falco and driver versions at the very beginning of the output. [[#1303](https://github.com/falcosecurity/falco/pull/1303)] - [@leogr](https://github.com/leogr)\n* new: libyaml is now bundled in the release process. Users can now avoid installing libyaml directly when getting Falco from the official release. [[#1252](https://github.com/falcosecurity/falco/pull/1252)] - [@fntlnz](https://github.com/fntlnz)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1649,
                  "startColumn": 88,
                  "endLine": 1649,
                  "endColumn": 94,
                  "snippet": {
                    "text": "io)\n* rule(macro consider_packet_socket_communication): enable \"Packet socket created in container\" rule by default. [[#1402](https://github.com/falcosecurity/falco/pull/1402)] - [@rung](https://github.com/rung)\n* rule(Delete or rename shell history): skip docker overlay filesystems when considering bash history [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(Disallowed K8s User): quote colons in user names [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(macro falco_sensitive_mount_con",
                    "rendered": {
                      "text": "io)\n* rule(macro consider_packet_socket_communication): enable \"Packet socket created in container\" rule by default. [[#1402](https://github.com/falcosecurity/falco/pull/1402)] - [@rung](https://github.com/rung)\n* rule(Delete or rename shell history): skip docker overlay filesystems when considering bash history [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(Disallowed K8s User): quote colons in user names [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(macro falco_sensitive_mount_con",
                      "markdown": "`io)\n* rule(macro consider_packet_socket_communication): enable \"Packet socket created in container\" rule by default. [[#1402](https://github.com/falcosecurity/falco/pull/1402)] - [@rung](https://github.com/rung)\n* rule(Delete or rename shell history): skip docker overlay filesystems when considering bash history [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(Disallowed K8s User): quote colons in user names [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(macro falco_sensitive_mount_con`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1458,
                  "startColumn": 41,
                  "endLine": 1458,
                  "endColumn": 45,
                  "snippet": {
                    "text": "ttps://github.com/falcosecurity/falco/pull/1545)] - [@cpanato](https://github.com/cpanato)\n* docs(test): update links to new Falco website URLs [[#1563](https://github.com/falcosecurity/falco/pull/1563)] - [@shane-lawrence](https://github.com/shane-lawrence)\n* build: now Falco packages are published at https://download.falco.org [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://github.com/leogr)\n* update: lower the `syscall_event_drops.max_burst` default value to 1 [[#1586](https://github.com/falcosecurity/falco/pull/1586)] - [@leodido](https://github.com/leodido)\n* up",
                    "rendered": {
                      "text": "ttps://github.com/falcosecurity/falco/pull/1545)] - [@cpanato](https://github.com/cpanato)\n* docs(test): update links to new Falco website URLs [[#1563](https://github.com/falcosecurity/falco/pull/1563)] - [@shane-lawrence](https://github.com/shane-lawrence)\n* build: now Falco packages are published at https://download.falco.org [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://github.com/leogr)\n* update: lower the `syscall_event_drops.max_burst` default value to 1 [[#1586](https://github.com/falcosecurity/falco/pull/1586)] - [@leodido](https://github.com/leodido)\n* up",
                      "markdown": "`ttps://github.com/falcosecurity/falco/pull/1545)] - [@cpanato](https://github.com/cpanato)\n* docs(test): update links to new Falco website URLs [[#1563](https://github.com/falcosecurity/falco/pull/1563)] - [@shane-lawrence](https://github.com/shane-lawrence)\n* build: now Falco packages are published at https://download.falco.org [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://github.com/leogr)\n* update: lower the `syscall_event_drops.max_burst` default value to 1 [[#1586](https://github.com/falcosecurity/falco/pull/1586)] - [@leodido](https://github.com/leodido)\n* up`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1457,
                  "startColumn": 13,
                  "endLine": 1457,
                  "endColumn": 21,
                  "snippet": {
                    "text": "ries and drivers donation [[#1530](https://github.com/falcosecurity/falco/pull/1530)] - [@leodido](https://github.com/leodido)\n* docs(docker): update links to the new Falco website URLs [[#1545](https://github.com/falcosecurity/falco/pull/1545)] - [@cpanato](https://github.com/cpanato)\n* docs(test): update links to new Falco website URLs [[#1563](https://github.com/falcosecurity/falco/pull/1563)] - [@shane-lawrence](https://github.com/shane-lawrence)\n* build: now Falco packages are published at https://download.falco.org [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://gi",
                    "rendered": {
                      "text": "ries and drivers donation [[#1530](https://github.com/falcosecurity/falco/pull/1530)] - [@leodido](https://github.com/leodido)\n* docs(docker): update links to the new Falco website URLs [[#1545](https://github.com/falcosecurity/falco/pull/1545)] - [@cpanato](https://github.com/cpanato)\n* docs(test): update links to new Falco website URLs [[#1563](https://github.com/falcosecurity/falco/pull/1563)] - [@shane-lawrence](https://github.com/shane-lawrence)\n* build: now Falco packages are published at https://download.falco.org [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://gi",
                      "markdown": "`ries and drivers donation [[#1530](https://github.com/falcosecurity/falco/pull/1530)] - [@leodido](https://github.com/leodido)\n* docs(docker): update links to the new Falco website URLs [[#1545](https://github.com/falcosecurity/falco/pull/1545)] - [@cpanato](https://github.com/cpanato)\n* docs(test): update links to new Falco website URLs [[#1563](https://github.com/falcosecurity/falco/pull/1563)] - [@shane-lawrence](https://github.com/shane-lawrence)\n* build: now Falco packages are published at https://download.falco.org [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://gi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1456,
                  "startColumn": 15,
                  "endLine": 1456,
                  "endColumn": 23,
                  "snippet": {
                    "text": "lco version [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.com/leodido)\n\n\n### Minor Changes\n\n* docs(proposals): libraries and drivers donation [[#1530](https://github.com/falcosecurity/falco/pull/1530)] - [@leodido](https://github.com/leodido)\n* docs(docker): update links to the new Falco website URLs [[#1545](https://github.com/falcosecurity/falco/pull/1545)] - [@cpanato](https://github.com/cpanato)\n* docs(test): update links to new Falco website URLs [[#1563](https://github.com/falcosecurity/falco/pull/1563)] - [@shane-lawrence](https://github.com/shane-lawre",
                    "rendered": {
                      "text": "lco version [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.com/leodido)\n\n\n### Minor Changes\n\n* docs(proposals): libraries and drivers donation [[#1530](https://github.com/falcosecurity/falco/pull/1530)] - [@leodido](https://github.com/leodido)\n* docs(docker): update links to the new Falco website URLs [[#1545](https://github.com/falcosecurity/falco/pull/1545)] - [@cpanato](https://github.com/cpanato)\n* docs(test): update links to new Falco website URLs [[#1563](https://github.com/falcosecurity/falco/pull/1563)] - [@shane-lawrence](https://github.com/shane-lawre",
                      "markdown": "`lco version [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.com/leodido)\n\n\n### Minor Changes\n\n* docs(proposals): libraries and drivers donation [[#1530](https://github.com/falcosecurity/falco/pull/1530)] - [@leodido](https://github.com/leodido)\n* docs(docker): update links to the new Falco website URLs [[#1545](https://github.com/falcosecurity/falco/pull/1545)] - [@cpanato](https://github.com/cpanato)\n* docs(test): update links to new Falco website URLs [[#1563](https://github.com/falcosecurity/falco/pull/1563)] - [@shane-lawrence](https://github.com/shane-lawre`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1441,
                  "startColumn": 75,
                  "endLine": 1441,
                  "endColumn": 79,
                  "snippet": {
                    "text": ".com/danpopSD)\n* docs: update link for HackMD community call notes [[#1614](https://github.com/falcosecurity/falco/pull/1614)] - [@leodido](https://github.com/leodido)\n\n\n## v0.28.0\n\nReleased on 2021-04-12\n\n### Major Changes\n\n* BREAKING CHANGE: Bintray is deprecated, no new packages will be published at https://dl.bintray.com/falcosecurity/ [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://github.com/leogr)\n* BREAKING CHANGE: SKIP_MODULE_LOAD env variable no more disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://",
                    "rendered": {
                      "text": ".com/danpopSD)\n* docs: update link for HackMD community call notes [[#1614](https://github.com/falcosecurity/falco/pull/1614)] - [@leodido](https://github.com/leodido)\n\n\n## v0.28.0\n\nReleased on 2021-04-12\n\n### Major Changes\n\n* BREAKING CHANGE: Bintray is deprecated, no new packages will be published at https://dl.bintray.com/falcosecurity/ [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://github.com/leogr)\n* BREAKING CHANGE: SKIP_MODULE_LOAD env variable no more disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://",
                      "markdown": "`.com/danpopSD)\n* docs: update link for HackMD community call notes [[#1614](https://github.com/falcosecurity/falco/pull/1614)] - [@leodido](https://github.com/leodido)\n\n\n## v0.28.0\n\nReleased on 2021-04-12\n\n### Major Changes\n\n* BREAKING CHANGE: Bintray is deprecated, no new packages will be published at https://dl.bintray.com/falcosecurity/ [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://github.com/leogr)\n* BREAKING CHANGE: SKIP_MODULE_LOAD env variable no more disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1432,
                  "startColumn": 7,
                  "endLine": 1432,
                  "endColumn": 15,
                  "snippet": {
                    "text": "* regression test for malformed k8s audit input (FAL-01-003) [[#1624](https://github.com/falcosecurity/falco/pull/1624)] - [@leodido](https://github.com/leodido)\n* Add mathworks to adopterlist [[#1621](https://github.com/falcosecurity/falco/pull/1621)] - [@natchaphon-r](https://github.com/natchaphon-r)\n* adding known users [[#1623](https://github.com/falcosecurity/falco/pull/1623)] - [@danpopSD](https://github.com/danpopSD)\n* docs: update link for HackMD community call notes [[#1614](https://github.com/falcosecurity/falco/pull/1614)] - [@leodido](https://github.com/leodido)\n\n\n## v0.28.0\n",
                    "rendered": {
                      "text": "* regression test for malformed k8s audit input (FAL-01-003) [[#1624](https://github.com/falcosecurity/falco/pull/1624)] - [@leodido](https://github.com/leodido)\n* Add mathworks to adopterlist [[#1621](https://github.com/falcosecurity/falco/pull/1621)] - [@natchaphon-r](https://github.com/natchaphon-r)\n* adding known users [[#1623](https://github.com/falcosecurity/falco/pull/1623)] - [@danpopSD](https://github.com/danpopSD)\n* docs: update link for HackMD community call notes [[#1614](https://github.com/falcosecurity/falco/pull/1614)] - [@leodido](https://github.com/leodido)\n\n\n## v0.28.0\n",
                      "markdown": "`* regression test for malformed k8s audit input (FAL-01-003) [[#1624](https://github.com/falcosecurity/falco/pull/1624)] - [@leodido](https://github.com/leodido)\n* Add mathworks to adopterlist [[#1621](https://github.com/falcosecurity/falco/pull/1621)] - [@natchaphon-r](https://github.com/natchaphon-r)\n* adding known users [[#1623](https://github.com/falcosecurity/falco/pull/1623)] - [@danpopSD](https://github.com/danpopSD)\n* docs: update link for HackMD community call notes [[#1614](https://github.com/falcosecurity/falco/pull/1614)] - [@leodido](https://github.com/leodido)\n\n\n## v0.28.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1364,
                  "startColumn": 19,
                  "endLine": 1364,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n### Non user-facing changes\n\n* docs(release.md): update steps [[#1684](https://github.com/falcosecurity/falco/pull/1684)] - [@maxgio92](https://github.com/maxgio92)\n\n\n## v0.29.0\n",
                    "rendered": {
                      "text": "\n### Non user-facing changes\n\n* docs(release.md): update steps [[#1684](https://github.com/falcosecurity/falco/pull/1684)] - [@maxgio92](https://github.com/maxgio92)\n\n\n## v0.29.0\n",
                      "markdown": "`\n### Non user-facing changes\n\n* docs(release.md): update steps [[#1684](https://github.com/falcosecurity/falco/pull/1684)] - [@maxgio92](https://github.com/maxgio92)\n\n\n## v0.29.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1319,
                  "startColumn": 65,
                  "endLine": 1319,
                  "endColumn": 69,
                  "snippet": {
                    "text": "o/pull/1667)] - [@zuc](https://github.com/zuc)\n\n\n### Minor Changes\n\n* update: bump driver version to 3aa7a83bf7b9e6229a3824e3fd1f4452d1e95cb4 [[#1744](https://github.com/falcosecurity/falco/pull/1744)] - [@zuc](https://github.com/zuc)\n* docs: clarify that previous Falco drivers will remain available at https://download.falco.org and no automated cleanup is run anymore [[#1738](https://github.com/falcosecurity/falco/pull/1738)] - [@leodido](https://github.com/leodido)\n* update(outputs): add configuration option for tags in json outputs [[#1733](https://github.com/falcosecurity/falco/pull/1733)] - [",
                    "rendered": {
                      "text": "o/pull/1667)] - [@zuc](https://github.com/zuc)\n\n\n### Minor Changes\n\n* update: bump driver version to 3aa7a83bf7b9e6229a3824e3fd1f4452d1e95cb4 [[#1744](https://github.com/falcosecurity/falco/pull/1744)] - [@zuc](https://github.com/zuc)\n* docs: clarify that previous Falco drivers will remain available at https://download.falco.org and no automated cleanup is run anymore [[#1738](https://github.com/falcosecurity/falco/pull/1738)] - [@leodido](https://github.com/leodido)\n* update(outputs): add configuration option for tags in json outputs [[#1733](https://github.com/falcosecurity/falco/pull/1733)] - [",
                      "markdown": "`o/pull/1667)] - [@zuc](https://github.com/zuc)\n\n\n### Minor Changes\n\n* update: bump driver version to 3aa7a83bf7b9e6229a3824e3fd1f4452d1e95cb4 [[#1744](https://github.com/falcosecurity/falco/pull/1744)] - [@zuc](https://github.com/zuc)\n* docs: clarify that previous Falco drivers will remain available at https://download.falco.org and no automated cleanup is run anymore [[#1738](https://github.com/falcosecurity/falco/pull/1738)] - [@leodido](https://github.com/leodido)\n* update(outputs): add configuration option for tags in json outputs [[#1733](https://github.com/falcosecurity/falco/pull/1733)] - [`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1300,
                  "startColumn": 15,
                  "endLine": 1300,
                  "endColumn": 23,
                  "snippet": {
                    "text": "est directory [[#1801](https://github.com/falcosecurity/falco/pull/1801)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* drop Falco luajit module, use the one provided by libs [[#1788](https://github.com/falcosecurity/falco/pull/1788)] - [@FedeDP](https://github.com/FedeDP)\n* chore(build): update libs version to 7906f7e [[#1790](https://github.com/falcosecurity/falco/pull/1790)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* Add SysFlow to list of libs adopters [[#1747](https://github.com/falcosecurity/falco/pull/1747)] - [@araujof](https://github.com/araujof)\n* build: dropped centos8 circ",
                    "rendered": {
                      "text": "est directory [[#1801](https://github.com/falcosecurity/falco/pull/1801)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* drop Falco luajit module, use the one provided by libs [[#1788](https://github.com/falcosecurity/falco/pull/1788)] - [@FedeDP](https://github.com/FedeDP)\n* chore(build): update libs version to 7906f7e [[#1790](https://github.com/falcosecurity/falco/pull/1790)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* Add SysFlow to list of libs adopters [[#1747](https://github.com/falcosecurity/falco/pull/1747)] - [@araujof](https://github.com/araujof)\n* build: dropped centos8 circ",
                      "markdown": "`est directory [[#1801](https://github.com/falcosecurity/falco/pull/1801)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* drop Falco luajit module, use the one provided by libs [[#1788](https://github.com/falcosecurity/falco/pull/1788)] - [@FedeDP](https://github.com/FedeDP)\n* chore(build): update libs version to 7906f7e [[#1790](https://github.com/falcosecurity/falco/pull/1790)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* Add SysFlow to list of libs adopters [[#1747](https://github.com/falcosecurity/falco/pull/1747)] - [@araujof](https://github.com/araujof)\n* build: dropped centos8 circ`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1234,
                  "startColumn": 52,
                  "endLine": 1234,
                  "endColumn": 56,
                  "snippet": {
                    "text": "m/falcosecurity/falco/pull/1872)] - [@FedeDP](https://github.com/FedeDP)\n* build: switch to dynamic build for the binary package (`.tar.gz`) [[#1853](https://github.com/falcosecurity/falco/pull/1853)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update: simpleconsumer filtering is now being done at kernel level [[#1846](https://github.com/falcosecurity/falco/pull/1846)] - [@FedeDP](https://github.com/FedeDP)\n* update(scripts/falco-driver-loader): first try to load the latest kmod version, then fallback to an already installed if any [[#1863](https://github.com/falcosecurity/falco/pull/1863)] -",
                    "rendered": {
                      "text": "m/falcosecurity/falco/pull/1872)] - [@FedeDP](https://github.com/FedeDP)\n* build: switch to dynamic build for the binary package (`.tar.gz`) [[#1853](https://github.com/falcosecurity/falco/pull/1853)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update: simpleconsumer filtering is now being done at kernel level [[#1846](https://github.com/falcosecurity/falco/pull/1846)] - [@FedeDP](https://github.com/FedeDP)\n* update(scripts/falco-driver-loader): first try to load the latest kmod version, then fallback to an already installed if any [[#1863](https://github.com/falcosecurity/falco/pull/1863)] -",
                      "markdown": "`m/falcosecurity/falco/pull/1872)] - [@FedeDP](https://github.com/FedeDP)\n* build: switch to dynamic build for the binary package (`.tar.gz`) [[#1853](https://github.com/falcosecurity/falco/pull/1853)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update: simpleconsumer filtering is now being done at kernel level [[#1846](https://github.com/falcosecurity/falco/pull/1846)] - [@FedeDP](https://github.com/FedeDP)\n* update(scripts/falco-driver-loader): first try to load the latest kmod version, then fallback to an already installed if any [[#1863](https://github.com/falcosecurity/falco/pull/1863)] -`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1226,
                  "startColumn": 8,
                  "endLine": 1226,
                  "endColumn": 16,
                  "snippet": {
                    "text": "52](https://github.com/falcosecurity/falco/pull/1852)] - [@jasondellaluce](https://github.com/jasondellaluce)\n\n\n### Minor Changes\n\n* rules: add the official Falco ECR repository to rules [[#1817](https://github.com/falcosecurity/falco/pull/1817)] - [@calvinbui](https://github.com/calvinbui)\n* build: update CircleCI machine image for eBPF tests to a newer version of ubuntu [[#1764](https://github.com/falcosecurity/falco/pull/1764)] - [@mstemm](https://github.com/mstemm)\n* update(engine): refactor Falco engine to be agnostic to specific event sources [[#1715](https://github.com/falcosecurity/falco/pull/",
                    "rendered": {
                      "text": "52](https://github.com/falcosecurity/falco/pull/1852)] - [@jasondellaluce](https://github.com/jasondellaluce)\n\n\n### Minor Changes\n\n* rules: add the official Falco ECR repository to rules [[#1817](https://github.com/falcosecurity/falco/pull/1817)] - [@calvinbui](https://github.com/calvinbui)\n* build: update CircleCI machine image for eBPF tests to a newer version of ubuntu [[#1764](https://github.com/falcosecurity/falco/pull/1764)] - [@mstemm](https://github.com/mstemm)\n* update(engine): refactor Falco engine to be agnostic to specific event sources [[#1715](https://github.com/falcosecurity/falco/pull/",
                      "markdown": "`52](https://github.com/falcosecurity/falco/pull/1852)] - [@jasondellaluce](https://github.com/jasondellaluce)\n\n\n### Minor Changes\n\n* rules: add the official Falco ECR repository to rules [[#1817](https://github.com/falcosecurity/falco/pull/1817)] - [@calvinbui](https://github.com/calvinbui)\n* build: update CircleCI machine image for eBPF tests to a newer version of ubuntu [[#1764](https://github.com/falcosecurity/falco/pull/1764)] - [@mstemm](https://github.com/mstemm)\n* update(engine): refactor Falco engine to be agnostic to specific event sources [[#1715](https://github.com/falcosecurity/falco/pull/`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1177,
                  "startColumn": 74,
                  "endLine": 1177,
                  "endColumn": 78,
                  "snippet": {
                    "text": "/LucaGuerra)\n\n\n### Bug Fixes\n\n* fix(userspace/falco): correct plugins init config conversion from YAML to JSON [[#1907](https://github.com/falcosecurity/falco/pull/1907)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix(userspace/engine): for rules at the informational level being loaded at the notice level [[#1885](https://github.com/falcosecurity/falco/pull/1885)] - [@mike-stewart](https://github.com/mike-stewart)\n* chore(userspace/falco): fixes truncated -b option description. [[#1915](https://github.com/falcosecurity/falco/pull/1915)] - [@andreabonanno](https://github.com/andreabon",
                    "rendered": {
                      "text": "/LucaGuerra)\n\n\n### Bug Fixes\n\n* fix(userspace/falco): correct plugins init config conversion from YAML to JSON [[#1907](https://github.com/falcosecurity/falco/pull/1907)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix(userspace/engine): for rules at the informational level being loaded at the notice level [[#1885](https://github.com/falcosecurity/falco/pull/1885)] - [@mike-stewart](https://github.com/mike-stewart)\n* chore(userspace/falco): fixes truncated -b option description. [[#1915](https://github.com/falcosecurity/falco/pull/1915)] - [@andreabonanno](https://github.com/andreabon",
                      "markdown": "`/LucaGuerra)\n\n\n### Bug Fixes\n\n* fix(userspace/falco): correct plugins init config conversion from YAML to JSON [[#1907](https://github.com/falcosecurity/falco/pull/1907)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix(userspace/engine): for rules at the informational level being loaded at the notice level [[#1885](https://github.com/falcosecurity/falco/pull/1885)] - [@mike-stewart](https://github.com/mike-stewart)\n* chore(userspace/falco): fixes truncated -b option description. [[#1915](https://github.com/falcosecurity/falco/pull/1915)] - [@andreabonanno](https://github.com/andreabon`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1177,
                  "startColumn": 34,
                  "endLine": 1177,
                  "endColumn": 38,
                  "snippet": {
                    "text": "923)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n\n### Bug Fixes\n\n* fix(userspace/falco): correct plugins init config conversion from YAML to JSON [[#1907](https://github.com/falcosecurity/falco/pull/1907)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix(userspace/engine): for rules at the informational level being loaded at the notice level [[#1885](https://github.com/falcosecurity/falco/pull/1885)] - [@mike-stewart](https://github.com/mike-stewart)\n* chore(userspace/falco): fixes truncated -b option description. [[#1915](https://github.com/falcosecurity/falco/pull/1915)] - [@and",
                    "rendered": {
                      "text": "923)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n\n### Bug Fixes\n\n* fix(userspace/falco): correct plugins init config conversion from YAML to JSON [[#1907](https://github.com/falcosecurity/falco/pull/1907)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix(userspace/engine): for rules at the informational level being loaded at the notice level [[#1885](https://github.com/falcosecurity/falco/pull/1885)] - [@mike-stewart](https://github.com/mike-stewart)\n* chore(userspace/falco): fixes truncated -b option description. [[#1915](https://github.com/falcosecurity/falco/pull/1915)] - [@and",
                      "markdown": "`923)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n\n### Bug Fixes\n\n* fix(userspace/falco): correct plugins init config conversion from YAML to JSON [[#1907](https://github.com/falcosecurity/falco/pull/1907)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix(userspace/engine): for rules at the informational level being loaded at the notice level [[#1885](https://github.com/falcosecurity/falco/pull/1885)] - [@mike-stewart](https://github.com/mike-stewart)\n* chore(userspace/falco): fixes truncated -b option description. [[#1915](https://github.com/falcosecurity/falco/pull/1915)] - [@and`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1154,
                  "startColumn": 14,
                  "endLine": 1154,
                  "endColumn": 22,
                  "snippet": {
                    "text": "* rules: whitelist GCP's container threat detection image [[#1959](https://github.com/falcosecurity/falco/pull/1959)] - [@clmssz](https://github.com/clmssz)\n* Fix some typos [[#1961](https://github.com/falcosecurity/falco/pull/1961)] - [@invidian](https://github.com/invidian)\n* chore(rules): remove leftover [[#1958](https://github.com/falcosecurity/falco/pull/1958)] - [@leogr](https://github.com/leogr)\n* docs: readme update and plugins [[#1940](https://github.com/falcosecurity/falco/pull/1940)] - [@leogr](https://github.com/leogr)\n\n\n## v0.31.1\n",
                    "rendered": {
                      "text": "* rules: whitelist GCP's container threat detection image [[#1959](https://github.com/falcosecurity/falco/pull/1959)] - [@clmssz](https://github.com/clmssz)\n* Fix some typos [[#1961](https://github.com/falcosecurity/falco/pull/1961)] - [@invidian](https://github.com/invidian)\n* chore(rules): remove leftover [[#1958](https://github.com/falcosecurity/falco/pull/1958)] - [@leogr](https://github.com/leogr)\n* docs: readme update and plugins [[#1940](https://github.com/falcosecurity/falco/pull/1940)] - [@leogr](https://github.com/leogr)\n\n\n## v0.31.1\n",
                      "markdown": "`* rules: whitelist GCP's container threat detection image [[#1959](https://github.com/falcosecurity/falco/pull/1959)] - [@clmssz](https://github.com/clmssz)\n* Fix some typos [[#1961](https://github.com/falcosecurity/falco/pull/1961)] - [@invidian](https://github.com/invidian)\n* chore(rules): remove leftover [[#1958](https://github.com/falcosecurity/falco/pull/1958)] - [@leogr](https://github.com/leogr)\n* docs: readme update and plugins [[#1940](https://github.com/falcosecurity/falco/pull/1940)] - [@leogr](https://github.com/leogr)\n\n\n## v0.31.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1144,
                  "startColumn": 23,
                  "endLine": 1144,
                  "endColumn": 31,
                  "snippet": {
                    "text": "include dir [[#1987](https://github.com/falcosecurity/falco/pull/1987)] - [@leogr](https://github.com/leogr)\n* rule(Anonymous Request Allowed): exclude {/livez, /readyz} [[#1954](https://github.com/falcosecurity/falco/pull/1954)] - [@sledigabel](https://github.com/sledigabel)\n* chore(falco_scripts): Update `falco-driver-loader` cleaning phase [[#1950](https://github.com/falcosecurity/falco/pull/1950)] - [@Andreagit97](https://github.com/Andreagit97)\n* new(userspace/falco): use new plugin caps API [[#1982](https://github.com/falcosecurity/falco/pull/1982)] - [@FedeDP](https://github.com/FedeDP)\n* build",
                    "rendered": {
                      "text": "include dir [[#1987](https://github.com/falcosecurity/falco/pull/1987)] - [@leogr](https://github.com/leogr)\n* rule(Anonymous Request Allowed): exclude {/livez, /readyz} [[#1954](https://github.com/falcosecurity/falco/pull/1954)] - [@sledigabel](https://github.com/sledigabel)\n* chore(falco_scripts): Update `falco-driver-loader` cleaning phase [[#1950](https://github.com/falcosecurity/falco/pull/1950)] - [@Andreagit97](https://github.com/Andreagit97)\n* new(userspace/falco): use new plugin caps API [[#1982](https://github.com/falcosecurity/falco/pull/1982)] - [@FedeDP](https://github.com/FedeDP)\n* build",
                      "markdown": "`include dir [[#1987](https://github.com/falcosecurity/falco/pull/1987)] - [@leogr](https://github.com/leogr)\n* rule(Anonymous Request Allowed): exclude {/livez, /readyz} [[#1954](https://github.com/falcosecurity/falco/pull/1954)] - [@sledigabel](https://github.com/sledigabel)\n* chore(falco_scripts): Update `falco-driver-loader` cleaning phase [[#1950](https://github.com/falcosecurity/falco/pull/1950)] - [@Andreagit97](https://github.com/Andreagit97)\n* new(userspace/falco): use new plugin caps API [[#1982](https://github.com/falcosecurity/falco/pull/1982)] - [@FedeDP](https://github.com/FedeDP)\n* build`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1130,
                  "startColumn": 6,
                  "endLine": 1130,
                  "endColumn": 14,
                  "snippet": {
                    "text": "930)] - [@mmoyerfigma](https://github.com/mmoyerfigma)\n* rule(macro user_known_shell_config_modifiers): allow to allowlist shell config modifiers [[#1938](https://github.com/falcosecurity/falco/pull/1938)] - [@claudio-vellage](https://github.com/claudio-vellage)\n\n\n### Non user-facing changes\n\n* new: update plugins [[#2023](https://github.com/falcosecurity/falco/pull/2023)] - [@FedeDP](https://github.com/FedeDP)\n* update(build): updated libs version for Falco 0.32.0 release. [[#2022](https://github.com/falcosecurity/falco/pull/2022)] - [@FedeDP](https://github.com/FedeDP)\n* update(build): updated libs ",
                    "rendered": {
                      "text": "930)] - [@mmoyerfigma](https://github.com/mmoyerfigma)\n* rule(macro user_known_shell_config_modifiers): allow to allowlist shell config modifiers [[#1938](https://github.com/falcosecurity/falco/pull/1938)] - [@claudio-vellage](https://github.com/claudio-vellage)\n\n\n### Non user-facing changes\n\n* new: update plugins [[#2023](https://github.com/falcosecurity/falco/pull/2023)] - [@FedeDP](https://github.com/FedeDP)\n* update(build): updated libs version for Falco 0.32.0 release. [[#2022](https://github.com/falcosecurity/falco/pull/2022)] - [@FedeDP](https://github.com/FedeDP)\n* update(build): updated libs ",
                      "markdown": "`930)] - [@mmoyerfigma](https://github.com/mmoyerfigma)\n* rule(macro user_known_shell_config_modifiers): allow to allowlist shell config modifiers [[#1938](https://github.com/falcosecurity/falco/pull/1938)] - [@claudio-vellage](https://github.com/claudio-vellage)\n\n\n### Non user-facing changes\n\n* new: update plugins [[#2023](https://github.com/falcosecurity/falco/pull/2023)] - [@FedeDP](https://github.com/FedeDP)\n* update(build): updated libs version for Falco 0.32.0 release. [[#2022](https://github.com/falcosecurity/falco/pull/2022)] - [@FedeDP](https://github.com/FedeDP)\n* update(build): updated libs `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1101,
                  "startColumn": 11,
                  "endLine": 1101,
                  "endColumn": 19,
                  "snippet": {
                    "text": "lcosecurity/falco/pull/1966)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor(userspace/engine): decoupling ruleset reading, parsing, and compilation steps [[#1970](https://github.com/falcosecurity/falco/pull/1970)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor: update definitions of falco_common [[#1967](https://github.com/falcosecurity/falco/pull/1967)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update: improved Falco engine event processing performance [[#1944](https://github.com/falcosecurity/falco/pull/1944)] - [@deepskyblue86](https://github.co",
                    "rendered": {
                      "text": "lcosecurity/falco/pull/1966)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor(userspace/engine): decoupling ruleset reading, parsing, and compilation steps [[#1970](https://github.com/falcosecurity/falco/pull/1970)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor: update definitions of falco_common [[#1967](https://github.com/falcosecurity/falco/pull/1967)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update: improved Falco engine event processing performance [[#1944](https://github.com/falcosecurity/falco/pull/1944)] - [@deepskyblue86](https://github.co",
                      "markdown": "`lcosecurity/falco/pull/1966)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor(userspace/engine): decoupling ruleset reading, parsing, and compilation steps [[#1970](https://github.com/falcosecurity/falco/pull/1970)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor: update definitions of falco_common [[#1967](https://github.com/falcosecurity/falco/pull/1967)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update: improved Falco engine event processing performance [[#1944](https://github.com/falcosecurity/falco/pull/1944)] - [@deepskyblue86](https://github.co`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1027,
                  "startColumn": 16,
                  "endLine": 1027,
                  "endColumn": 24,
                  "snippet": {
                    "text": "ption [[#2059](https://github.com/falcosecurity/falco/pull/2059)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(userspace/falco): support libs logging [[#2093](https://github.com/falcosecurity/falco/pull/2093)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(falco): update libs to 0.7.0 [[#2119](https://github.com/falcosecurity/falco/pull/2119)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n### Bug Fixes\n\n* fix(userspace/falco): ensure that only rules files named with `-V` are loaded when validating rules files. [[#2088](https://github.com/falcosecurity/falco/pull/2",
                    "rendered": {
                      "text": "ption [[#2059](https://github.com/falcosecurity/falco/pull/2059)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(userspace/falco): support libs logging [[#2093](https://github.com/falcosecurity/falco/pull/2093)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(falco): update libs to 0.7.0 [[#2119](https://github.com/falcosecurity/falco/pull/2119)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n### Bug Fixes\n\n* fix(userspace/falco): ensure that only rules files named with `-V` are loaded when validating rules files. [[#2088](https://github.com/falcosecurity/falco/pull/2",
                      "markdown": "`ption [[#2059](https://github.com/falcosecurity/falco/pull/2059)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(userspace/falco): support libs logging [[#2093](https://github.com/falcosecurity/falco/pull/2093)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(falco): update libs to 0.7.0 [[#2119](https://github.com/falcosecurity/falco/pull/2119)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n### Bug Fixes\n\n* fix(userspace/falco): ensure that only rules files named with `-V` are loaded when validating rules files. [[#2088](https://github.com/falcosecurity/falco/pull/2`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 989,
                  "startColumn": 14,
                  "endLine": 989,
                  "endColumn": 22,
                  "snippet": {
                    "text": "ust-pushed falco master image. [[#2194](https://github.com/falcosecurity/falco/pull/2194)] - [@FedeDP](https://github.com/FedeDP)\n* Support condition parse errors in rule loading results [[#2155](https://github.com/falcosecurity/falco/pull/2155)] - [@mstemm](https://github.com/mstemm)\n* docs: readme update [[#2183](https://github.com/falcosecurity/falco/pull/2183)] - [@leogr](https://github.com/leogr)\n* cleanup: rename legacy references [[#2180](https://github.com/falcosecurity/falco/pull/2180)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor(userspace/engine): increase const coheren",
                    "rendered": {
                      "text": "ust-pushed falco master image. [[#2194](https://github.com/falcosecurity/falco/pull/2194)] - [@FedeDP](https://github.com/FedeDP)\n* Support condition parse errors in rule loading results [[#2155](https://github.com/falcosecurity/falco/pull/2155)] - [@mstemm](https://github.com/mstemm)\n* docs: readme update [[#2183](https://github.com/falcosecurity/falco/pull/2183)] - [@leogr](https://github.com/leogr)\n* cleanup: rename legacy references [[#2180](https://github.com/falcosecurity/falco/pull/2180)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor(userspace/engine): increase const coheren",
                      "markdown": "`ust-pushed falco master image. [[#2194](https://github.com/falcosecurity/falco/pull/2194)] - [@FedeDP](https://github.com/FedeDP)\n* Support condition parse errors in rule loading results [[#2155](https://github.com/falcosecurity/falco/pull/2155)] - [@mstemm](https://github.com/mstemm)\n* docs: readme update [[#2183](https://github.com/falcosecurity/falco/pull/2183)] - [@leogr](https://github.com/leogr)\n* cleanup: rename legacy references [[#2180](https://github.com/falcosecurity/falco/pull/2180)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor(userspace/engine): increase const coheren`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 852,
                  "startColumn": 1,
                  "endLine": 852,
                  "endColumn": 9,
                  "snippet": {
                    "text": "### Minor Changes\n\n* update(falco): fix container-gvisor and kubernetes-gvisor print options [[#2288](https://github.com/falcosecurity/falco/pull/2288)]\n* Update libs to 0.9.2, fixing potential CLBO on gVisor+Kubernetes and crash with eBPF when some CPUs are offline [[#2299](https://github.com/falcosecurity/falco/pull/2299)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n## v0.33.0\n\n",
                    "rendered": {
                      "text": "### Minor Changes\n\n* update(falco): fix container-gvisor and kubernetes-gvisor print options [[#2288](https://github.com/falcosecurity/falco/pull/2288)]\n* Update libs to 0.9.2, fixing potential CLBO on gVisor+Kubernetes and crash with eBPF when some CPUs are offline [[#2299](https://github.com/falcosecurity/falco/pull/2299)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n## v0.33.0\n\n",
                      "markdown": "`### Minor Changes\n\n* update(falco): fix container-gvisor and kubernetes-gvisor print options [[#2288](https://github.com/falcosecurity/falco/pull/2288)]\n* Update libs to 0.9.2, fixing potential CLBO on gVisor+Kubernetes and crash with eBPF when some CPUs are offline [[#2299](https://github.com/falcosecurity/falco/pull/2299)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n## v0.33.0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 829,
                  "startColumn": 16,
                  "endLine": 829,
                  "endColumn": 24,
                  "snippet": {
                    "text": "ile [[#2337](https://github.com/falcosecurity/falco/pull/2337)] - [@Andreagit97](https://github.com/Andreagit97)\n* cleanup(ci): move static analysis job from circle CI to GHA [[#2332](https://github.com/falcosecurity/falco/pull/2332)] - [@Andreagit97](https://github.com/Andreagit97)\n* update(falco): update cpp-httplib to 0.11.3 [[#2327](https://github.com/falcosecurity/falco/pull/2327)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(script): makes user able to pass custom option to driver-loade… [[#1901](https://github.com/falcosecurity/falco/pull/1901)] - [@andreabonanno](https://github.com/",
                    "rendered": {
                      "text": "ile [[#2337](https://github.com/falcosecurity/falco/pull/2337)] - [@Andreagit97](https://github.com/Andreagit97)\n* cleanup(ci): move static analysis job from circle CI to GHA [[#2332](https://github.com/falcosecurity/falco/pull/2332)] - [@Andreagit97](https://github.com/Andreagit97)\n* update(falco): update cpp-httplib to 0.11.3 [[#2327](https://github.com/falcosecurity/falco/pull/2327)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(script): makes user able to pass custom option to driver-loade… [[#1901](https://github.com/falcosecurity/falco/pull/1901)] - [@andreabonanno](https://github.com/",
                      "markdown": "`ile [[#2337](https://github.com/falcosecurity/falco/pull/2337)] - [@Andreagit97](https://github.com/Andreagit97)\n* cleanup(ci): move static analysis job from circle CI to GHA [[#2332](https://github.com/falcosecurity/falco/pull/2332)] - [@Andreagit97](https://github.com/Andreagit97)\n* update(falco): update cpp-httplib to 0.11.3 [[#2327](https://github.com/falcosecurity/falco/pull/2327)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(script): makes user able to pass custom option to driver-loade… [[#1901](https://github.com/falcosecurity/falco/pull/1901)] - [@andreabonanno](https://github.com/`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 826,
                  "startColumn": 31,
                  "endLine": 826,
                  "endColumn": 37,
                  "snippet": {
                    "text": "osecurity/falco/pull/2375)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(userspace): use the right path for the `cpus_for_each_syscall_buffer` config [[#2378](https://github.com/falcosecurity/falco/pull/2378)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(scripts): fixed incorrect bash var expansion [[#2367](https://github.com/falcosecurity/falco/pull/2367)] - [@therealbobo](https://github.com/therealbobo)\n* update(CI): upgrade toolchain in modern falco builder dockerfile [[#2337](https://github.com/falcosecurity/falco/pull/2337)] - [@Andreagit97](https://github.com/Andreagit97)\n*",
                    "rendered": {
                      "text": "osecurity/falco/pull/2375)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(userspace): use the right path for the `cpus_for_each_syscall_buffer` config [[#2378](https://github.com/falcosecurity/falco/pull/2378)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(scripts): fixed incorrect bash var expansion [[#2367](https://github.com/falcosecurity/falco/pull/2367)] - [@therealbobo](https://github.com/therealbobo)\n* update(CI): upgrade toolchain in modern falco builder dockerfile [[#2337](https://github.com/falcosecurity/falco/pull/2337)] - [@Andreagit97](https://github.com/Andreagit97)\n*",
                      "markdown": "`osecurity/falco/pull/2375)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(userspace): use the right path for the `cpus_for_each_syscall_buffer` config [[#2378](https://github.com/falcosecurity/falco/pull/2378)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(scripts): fixed incorrect bash var expansion [[#2367](https://github.com/falcosecurity/falco/pull/2367)] - [@therealbobo](https://github.com/therealbobo)\n* update(CI): upgrade toolchain in modern falco builder dockerfile [[#2337](https://github.com/falcosecurity/falco/pull/2337)] - [@Andreagit97](https://github.com/Andreagit97)\n*`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 805,
                  "startColumn": 41,
                  "endLine": 805,
                  "endColumn": 49,
                  "snippet": {
                    "text": "/2311)] - [@jasondellaluce](https://github.com/jasondellaluce)\n\n\n### Rule Changes\n\n* rules(tagging): enhanced rules tagging for inventory / threat modeling [[#2167](https://github.com/falcosecurity/falco/pull/2167)] - [@incertum](https://github.com/incertum)\n* rule(Outbound Connection to C2 Server): Update the \"Outbound connection to C2 server\" rule to match both FQDN and IP addresses. Prior to this change, the rule only matched IP addresses and not FQDN. [[#2241](https://github.com/falcosecurity/falco/pull/2241)] - [@Nicolas-Peiffer](https://github.com/Nicolas-Peiffer)\n* rule(Execution from /dev/shm)",
                    "rendered": {
                      "text": "/2311)] - [@jasondellaluce](https://github.com/jasondellaluce)\n\n\n### Rule Changes\n\n* rules(tagging): enhanced rules tagging for inventory / threat modeling [[#2167](https://github.com/falcosecurity/falco/pull/2167)] - [@incertum](https://github.com/incertum)\n* rule(Outbound Connection to C2 Server): Update the \"Outbound connection to C2 server\" rule to match both FQDN and IP addresses. Prior to this change, the rule only matched IP addresses and not FQDN. [[#2241](https://github.com/falcosecurity/falco/pull/2241)] - [@Nicolas-Peiffer](https://github.com/Nicolas-Peiffer)\n* rule(Execution from /dev/shm)",
                      "markdown": "`/2311)] - [@jasondellaluce](https://github.com/jasondellaluce)\n\n\n### Rule Changes\n\n* rules(tagging): enhanced rules tagging for inventory / threat modeling [[#2167](https://github.com/falcosecurity/falco/pull/2167)] - [@incertum](https://github.com/incertum)\n* rule(Outbound Connection to C2 Server): Update the \"Outbound connection to C2 server\" rule to match both FQDN and IP addresses. Prior to this change, the rule only matched IP addresses and not FQDN. [[#2241](https://github.com/falcosecurity/falco/pull/2241)] - [@Nicolas-Peiffer](https://github.com/Nicolas-Peiffer)\n* rule(Execution from /dev/shm)`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 794,
                  "startColumn": 104,
                  "endLine": 794,
                  "endColumn": 108,
                  "snippet": {
                    "text": "er plugins configuration is now trimmed from surrounding whitespace [[#2267](https://github.com/falcosecurity/falco/pull/2267)] - [@yardenshoham](https://github.com/yardenshoham)\n\n\n### Bug Fixes\n\n* fix(engine): Avoid crash related to caching syscall source when the falco engine uses multiple sources at the same time. [[#2272](https://github.com/falcosecurity/falco/pull/2272)] - [@mstemm](https://github.com/mstemm)\n* fix(scripts): use falco-driver-loader only into install scripts [[#2391](https://github.com/falcosecurity/falco/pull/2391)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(users",
                    "rendered": {
                      "text": "er plugins configuration is now trimmed from surrounding whitespace [[#2267](https://github.com/falcosecurity/falco/pull/2267)] - [@yardenshoham](https://github.com/yardenshoham)\n\n\n### Bug Fixes\n\n* fix(engine): Avoid crash related to caching syscall source when the falco engine uses multiple sources at the same time. [[#2272](https://github.com/falcosecurity/falco/pull/2272)] - [@mstemm](https://github.com/mstemm)\n* fix(scripts): use falco-driver-loader only into install scripts [[#2391](https://github.com/falcosecurity/falco/pull/2391)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(users",
                      "markdown": "`er plugins configuration is now trimmed from surrounding whitespace [[#2267](https://github.com/falcosecurity/falco/pull/2267)] - [@yardenshoham](https://github.com/yardenshoham)\n\n\n### Bug Fixes\n\n* fix(engine): Avoid crash related to caching syscall source when the falco engine uses multiple sources at the same time. [[#2272](https://github.com/falcosecurity/falco/pull/2272)] - [@mstemm](https://github.com/mstemm)\n* fix(scripts): use falco-driver-loader only into install scripts [[#2391](https://github.com/falcosecurity/falco/pull/2391)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(users`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 780,
                  "startColumn": 13,
                  "endLine": 780,
                  "endColumn": 21,
                  "snippet": {
                    "text": "s://github.com/falcosecurity/falco/pull/2336)] - [@Dentrax](https://github.com/Dentrax)\n* doc(userspace): provide users with a correct message when some syscalls are not defined [[#2329](https://github.com/falcosecurity/falco/pull/2329)] - [@Andreagit97](https://github.com/Andreagit97)\n* update(ci): update ci jobs to generate Falco images with the modern BPF probe [[#2320](https://github.com/falcosecurity/falco/pull/2320)] - [@Andreagit97](https://github.com/Andreagit97)\n* rules: add Falco container lists [[#2290](https://github.com/falcosecurity/falco/pull/2290)] - [@oscr](https://github.com/oscr)\n* ",
                    "rendered": {
                      "text": "s://github.com/falcosecurity/falco/pull/2336)] - [@Dentrax](https://github.com/Dentrax)\n* doc(userspace): provide users with a correct message when some syscalls are not defined [[#2329](https://github.com/falcosecurity/falco/pull/2329)] - [@Andreagit97](https://github.com/Andreagit97)\n* update(ci): update ci jobs to generate Falco images with the modern BPF probe [[#2320](https://github.com/falcosecurity/falco/pull/2320)] - [@Andreagit97](https://github.com/Andreagit97)\n* rules: add Falco container lists [[#2290](https://github.com/falcosecurity/falco/pull/2290)] - [@oscr](https://github.com/oscr)\n* ",
                      "markdown": "`s://github.com/falcosecurity/falco/pull/2336)] - [@Dentrax](https://github.com/Dentrax)\n* doc(userspace): provide users with a correct message when some syscalls are not defined [[#2329](https://github.com/falcosecurity/falco/pull/2329)] - [@Andreagit97](https://github.com/Andreagit97)\n* update(ci): update ci jobs to generate Falco images with the modern BPF probe [[#2320](https://github.com/falcosecurity/falco/pull/2320)] - [@Andreagit97](https://github.com/Andreagit97)\n* rules: add Falco container lists [[#2290](https://github.com/falcosecurity/falco/pull/2290)] - [@oscr](https://github.com/oscr)\n* `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 765,
                  "startColumn": 16,
                  "endLine": 765,
                  "endColumn": 24,
                  "snippet": {
                    "text": "all_buffer` default value [[#2404](https://github.com/falcosecurity/falco/pull/2404)] - [@Andreagit97](https://github.com/Andreagit97)\n* update(build): update falcoctl to 0.3.0 [[#2401](https://github.com/falcosecurity/falco/pull/2401)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(build): update falcoctl to 0.3.0-rc7 [[#2396](https://github.com/falcosecurity/falco/pull/2396)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(cmake): bump libs to 0.10.3 [[#2392](https://github.com/falcosecurity/falco/pull/2392)] - [@FedeDP](https://github.com/FedeDP)\n* build: `/etc/falco/rules.availabl",
                    "rendered": {
                      "text": "all_buffer` default value [[#2404](https://github.com/falcosecurity/falco/pull/2404)] - [@Andreagit97](https://github.com/Andreagit97)\n* update(build): update falcoctl to 0.3.0 [[#2401](https://github.com/falcosecurity/falco/pull/2401)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(build): update falcoctl to 0.3.0-rc7 [[#2396](https://github.com/falcosecurity/falco/pull/2396)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(cmake): bump libs to 0.10.3 [[#2392](https://github.com/falcosecurity/falco/pull/2392)] - [@FedeDP](https://github.com/FedeDP)\n* build: `/etc/falco/rules.availabl",
                      "markdown": "`all_buffer` default value [[#2404](https://github.com/falcosecurity/falco/pull/2404)] - [@Andreagit97](https://github.com/Andreagit97)\n* update(build): update falcoctl to 0.3.0 [[#2401](https://github.com/falcosecurity/falco/pull/2401)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(build): update falcoctl to 0.3.0-rc7 [[#2396](https://github.com/falcosecurity/falco/pull/2396)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(cmake): bump libs to 0.10.3 [[#2392](https://github.com/falcosecurity/falco/pull/2392)] - [@FedeDP](https://github.com/FedeDP)\n* build: `/etc/falco/rules.availabl`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 764,
                  "startColumn": 16,
                  "endLine": 764,
                  "endColumn": 24,
                  "snippet": {
                    "text": "ps://github.com/falcosecurity/falco/pull/2406)] - [@loresuso](https://github.com/loresuso)\n* update(userspace): change `modern_bpf.cpus_for_each_syscall_buffer` default value [[#2404](https://github.com/falcosecurity/falco/pull/2404)] - [@Andreagit97](https://github.com/Andreagit97)\n* update(build): update falcoctl to 0.3.0 [[#2401](https://github.com/falcosecurity/falco/pull/2401)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(build): update falcoctl to 0.3.0-rc7 [[#2396](https://github.com/falcosecurity/falco/pull/2396)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(cmake): bump ",
                    "rendered": {
                      "text": "ps://github.com/falcosecurity/falco/pull/2406)] - [@loresuso](https://github.com/loresuso)\n* update(userspace): change `modern_bpf.cpus_for_each_syscall_buffer` default value [[#2404](https://github.com/falcosecurity/falco/pull/2404)] - [@Andreagit97](https://github.com/Andreagit97)\n* update(build): update falcoctl to 0.3.0 [[#2401](https://github.com/falcosecurity/falco/pull/2401)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(build): update falcoctl to 0.3.0-rc7 [[#2396](https://github.com/falcosecurity/falco/pull/2396)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(cmake): bump ",
                      "markdown": "`ps://github.com/falcosecurity/falco/pull/2406)] - [@loresuso](https://github.com/loresuso)\n* update(userspace): change `modern_bpf.cpus_for_each_syscall_buffer` default value [[#2404](https://github.com/falcosecurity/falco/pull/2404)] - [@Andreagit97](https://github.com/Andreagit97)\n* update(build): update falcoctl to 0.3.0 [[#2401](https://github.com/falcosecurity/falco/pull/2401)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(build): update falcoctl to 0.3.0-rc7 [[#2396](https://github.com/falcosecurity/falco/pull/2396)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(cmake): bump `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 660,
                  "startColumn": 17,
                  "endLine": 660,
                  "endColumn": 26,
                  "snippet": {
                    "text": "t `-A` flag [[#2551](https://github.com/falcosecurity/falco/pull/2551)] - [@Andreagit97](https://github.com/Andreagit97)\n* update: `falco-driver-loader` now uses now uses $TMPDIR if set [[#2518](https://github.com/falcosecurity/falco/pull/2518)] - [@jabdr](https://github.com/jabdr)\n* update: improve control and UX of ignored events [[#2509](https://github.com/falcosecurity/falco/pull/2509)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update: bump libs and adapt Falco to new libsinsp event source management [[#2507](https://github.com/falcosecurity/falco/pull/2507)] - [@jasondellaluce](http",
                    "rendered": {
                      "text": "t `-A` flag [[#2551](https://github.com/falcosecurity/falco/pull/2551)] - [@Andreagit97](https://github.com/Andreagit97)\n* update: `falco-driver-loader` now uses now uses $TMPDIR if set [[#2518](https://github.com/falcosecurity/falco/pull/2518)] - [@jabdr](https://github.com/jabdr)\n* update: improve control and UX of ignored events [[#2509](https://github.com/falcosecurity/falco/pull/2509)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update: bump libs and adapt Falco to new libsinsp event source management [[#2507](https://github.com/falcosecurity/falco/pull/2507)] - [@jasondellaluce](http",
                      "markdown": "`t `-A` flag [[#2551](https://github.com/falcosecurity/falco/pull/2551)] - [@Andreagit97](https://github.com/Andreagit97)\n* update: `falco-driver-loader` now uses now uses $TMPDIR if set [[#2518](https://github.com/falcosecurity/falco/pull/2518)] - [@jabdr](https://github.com/jabdr)\n* update: improve control and UX of ignored events [[#2509](https://github.com/falcosecurity/falco/pull/2509)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update: bump libs and adapt Falco to new libsinsp event source management [[#2507](https://github.com/falcosecurity/falco/pull/2507)] - [@jasondellaluce](http`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 644,
                  "startColumn": 16,
                  "endLine": 644,
                  "endColumn": 24,
                  "snippet": {
                    "text": "te(cmake): bump falco rules to 1.0.0-rc1 [[#2609](https://github.com/falcosecurity/falco/pull/2609)] - [@loresuso](https://github.com/loresuso)\n* update(cmake): bump libs to 0.11.0 [[#2608](https://github.com/falcosecurity/falco/pull/2608)] - [@loresuso](https://github.com/loresuso)\n* cleanup(docs): update release.md [[#2599](https://github.com/falcosecurity/falco/pull/2599)] - [@incertum](https://github.com/incertum)\n* update(cmake): bump libs to 0.11.0-rc5 and driver to 5.0.1. [[#2600](https://github.com/falcosecurity/falco/pull/2600)] - [@FedeDP](https://github.com/FedeDP)\n* cleanup(docs): adjust f",
                    "rendered": {
                      "text": "te(cmake): bump falco rules to 1.0.0-rc1 [[#2609](https://github.com/falcosecurity/falco/pull/2609)] - [@loresuso](https://github.com/loresuso)\n* update(cmake): bump libs to 0.11.0 [[#2608](https://github.com/falcosecurity/falco/pull/2608)] - [@loresuso](https://github.com/loresuso)\n* cleanup(docs): update release.md [[#2599](https://github.com/falcosecurity/falco/pull/2599)] - [@incertum](https://github.com/incertum)\n* update(cmake): bump libs to 0.11.0-rc5 and driver to 5.0.1. [[#2600](https://github.com/falcosecurity/falco/pull/2600)] - [@FedeDP](https://github.com/FedeDP)\n* cleanup(docs): adjust f",
                      "markdown": "`te(cmake): bump falco rules to 1.0.0-rc1 [[#2609](https://github.com/falcosecurity/falco/pull/2609)] - [@loresuso](https://github.com/loresuso)\n* update(cmake): bump libs to 0.11.0 [[#2608](https://github.com/falcosecurity/falco/pull/2608)] - [@loresuso](https://github.com/loresuso)\n* cleanup(docs): update release.md [[#2599](https://github.com/falcosecurity/falco/pull/2599)] - [@incertum](https://github.com/incertum)\n* update(cmake): bump libs to 0.11.0-rc5 and driver to 5.0.1. [[#2600](https://github.com/falcosecurity/falco/pull/2600)] - [@FedeDP](https://github.com/FedeDP)\n* cleanup(docs): adjust f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 584,
                  "startColumn": 8,
                  "endLine": 584,
                  "endColumn": 16,
                  "snippet": {
                    "text": "les from `64ce419` to `bf1639a` [[#2738](https://github.com/falcosecurity/falco/pull/2738)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* Relocate tools on Flatcar in BPF mode [[#2729](https://github.com/falcosecurity/falco/pull/2729)] - [@johananl](https://github.com/johananl)\n* build: update versioning with cmake [[#2727](https://github.com/falcosecurity/falco/pull/2727)] - [@leogr](https://github.com/leogr)\n* update(userspace/engine): make rule_matching strategy stateless  [[#2726](https://github.com/falcosecurity/falco/pull/2726)] - [@loresuso](https://github.com/loresuso)\n* chore: bu",
                    "rendered": {
                      "text": "les from `64ce419` to `bf1639a` [[#2738](https://github.com/falcosecurity/falco/pull/2738)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* Relocate tools on Flatcar in BPF mode [[#2729](https://github.com/falcosecurity/falco/pull/2729)] - [@johananl](https://github.com/johananl)\n* build: update versioning with cmake [[#2727](https://github.com/falcosecurity/falco/pull/2727)] - [@leogr](https://github.com/leogr)\n* update(userspace/engine): make rule_matching strategy stateless  [[#2726](https://github.com/falcosecurity/falco/pull/2726)] - [@loresuso](https://github.com/loresuso)\n* chore: bu",
                      "markdown": "`les from `64ce419` to `bf1639a` [[#2738](https://github.com/falcosecurity/falco/pull/2738)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* Relocate tools on Flatcar in BPF mode [[#2729](https://github.com/falcosecurity/falco/pull/2729)] - [@johananl](https://github.com/johananl)\n* build: update versioning with cmake [[#2727](https://github.com/falcosecurity/falco/pull/2727)] - [@leogr](https://github.com/leogr)\n* update(userspace/engine): make rule_matching strategy stateless  [[#2726](https://github.com/falcosecurity/falco/pull/2726)] - [@loresuso](https://github.com/loresuso)\n* chore: bu`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 544,
                  "startColumn": 33,
                  "endLine": 544,
                  "endColumn": 38,
                  "snippet": {
                    "text": "elease author to release body. [[#2828](https://github.com/falcosecurity/falco/pull/2828)] - [@FedeDP](https://github.com/FedeDP)\n* new(ci): autogenerate release body. [[#2812](https://github.com/falcosecurity/falco/pull/2812)] - [@FedeDP](https://github.com/FedeDP)\n* fix(dockerfile): remove useless CMD [[#2824](https://github.com/falcosecurity/falco/pull/2824)] - [@Andreagit97](https://github.com/Andreagit97)\n* chore: bump to the latest libs [[#2822](https://github.com/falcosecurity/falco/pull/2822)] - [@Andreagit97](https://github.com/Andreagit97)\n* update: add SPDX license identifier [[#2809](ht",
                    "rendered": {
                      "text": "elease author to release body. [[#2828](https://github.com/falcosecurity/falco/pull/2828)] - [@FedeDP](https://github.com/FedeDP)\n* new(ci): autogenerate release body. [[#2812](https://github.com/falcosecurity/falco/pull/2812)] - [@FedeDP](https://github.com/FedeDP)\n* fix(dockerfile): remove useless CMD [[#2824](https://github.com/falcosecurity/falco/pull/2824)] - [@Andreagit97](https://github.com/Andreagit97)\n* chore: bump to the latest libs [[#2822](https://github.com/falcosecurity/falco/pull/2822)] - [@Andreagit97](https://github.com/Andreagit97)\n* update: add SPDX license identifier [[#2809](ht",
                      "markdown": "`elease author to release body. [[#2828](https://github.com/falcosecurity/falco/pull/2828)] - [@FedeDP](https://github.com/FedeDP)\n* new(ci): autogenerate release body. [[#2812](https://github.com/falcosecurity/falco/pull/2812)] - [@FedeDP](https://github.com/FedeDP)\n* fix(dockerfile): remove useless CMD [[#2824](https://github.com/falcosecurity/falco/pull/2824)] - [@Andreagit97](https://github.com/Andreagit97)\n* chore: bump to the latest libs [[#2822](https://github.com/falcosecurity/falco/pull/2822)] - [@Andreagit97](https://github.com/Andreagit97)\n* update: add SPDX license identifier [[#2809](ht`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 530,
                  "startColumn": 63,
                  "endLine": 530,
                  "endColumn": 72,
                  "snippet": {
                    "text": "1)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(docker): remove experimental image based on RedHat UBI [[#2720](https://github.com/falcosecurity/falco/pull/2720)] - [@leogr](https://github.com/leogr)\n\n\n### Bug Fixes\n\n* fix(outputs): expose queue_capacity_outputs config for memory control [[#2711](https://github.com/falcosecurity/falco/pull/2711)] - [@incertum](https://github.com/incertum)\n* fix(userspace/falco): cleanup metrics timer upon leaving. [[#2759](https://github.com/falcosecurity/falco/pull/2759)] - [@FedeDP](https://github.com/FedeDP)\n* fix: restore Falco MINIMAL_BUILD and",
                    "rendered": {
                      "text": "1)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(docker): remove experimental image based on RedHat UBI [[#2720](https://github.com/falcosecurity/falco/pull/2720)] - [@leogr](https://github.com/leogr)\n\n\n### Bug Fixes\n\n* fix(outputs): expose queue_capacity_outputs config for memory control [[#2711](https://github.com/falcosecurity/falco/pull/2711)] - [@incertum](https://github.com/incertum)\n* fix(userspace/falco): cleanup metrics timer upon leaving. [[#2759](https://github.com/falcosecurity/falco/pull/2759)] - [@FedeDP](https://github.com/FedeDP)\n* fix: restore Falco MINIMAL_BUILD and",
                      "markdown": "`1)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(docker): remove experimental image based on RedHat UBI [[#2720](https://github.com/falcosecurity/falco/pull/2720)] - [@leogr](https://github.com/leogr)\n\n\n### Bug Fixes\n\n* fix(outputs): expose queue_capacity_outputs config for memory control [[#2711](https://github.com/falcosecurity/falco/pull/2711)] - [@incertum](https://github.com/incertum)\n* fix(userspace/falco): cleanup metrics timer upon leaving. [[#2759](https://github.com/falcosecurity/falco/pull/2759)] - [@FedeDP](https://github.com/FedeDP)\n* fix: restore Falco MINIMAL_BUILD and`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 1,
                  "endLine": 522,
                  "endColumn": 9,
                  "snippet": {
                    "text": "d version for falco-driver-loader [[#2728](https://github.com/falcosecurity/falco/pull/2728)] - [@johananl](https://github.com/johananl)\n* cleanup(config): assign Stable to `base_syscalls` config [[#2740](https://github.com/falcosecurity/falco/pull/2740)] - [@incertum](https://github.com/incertum)\n* update : support build for wasm [[#2663](https://github.com/falcosecurity/falco/pull/2663)] - [@Rohith-Raju](https://github.com/Rohith-Raju)\n* docs(config.yaml): fix wrong severity levels for sinsp logger [[#2736](https://github.com/falcosecurity/falco/pull/2736)] - [@Andreagit97](https://github.com/Andrea",
                    "rendered": {
                      "text": "d version for falco-driver-loader [[#2728](https://github.com/falcosecurity/falco/pull/2728)] - [@johananl](https://github.com/johananl)\n* cleanup(config): assign Stable to `base_syscalls` config [[#2740](https://github.com/falcosecurity/falco/pull/2740)] - [@incertum](https://github.com/incertum)\n* update : support build for wasm [[#2663](https://github.com/falcosecurity/falco/pull/2663)] - [@Rohith-Raju](https://github.com/Rohith-Raju)\n* docs(config.yaml): fix wrong severity levels for sinsp logger [[#2736](https://github.com/falcosecurity/falco/pull/2736)] - [@Andreagit97](https://github.com/Andrea",
                      "markdown": "`d version for falco-driver-loader [[#2728](https://github.com/falcosecurity/falco/pull/2728)] - [@johananl](https://github.com/johananl)\n* cleanup(config): assign Stable to `base_syscalls` config [[#2740](https://github.com/falcosecurity/falco/pull/2740)] - [@incertum](https://github.com/incertum)\n* update : support build for wasm [[#2663](https://github.com/falcosecurity/falco/pull/2663)] - [@Rohith-Raju](https://github.com/Rohith-Raju)\n* docs(config.yaml): fix wrong severity levels for sinsp logger [[#2736](https://github.com/falcosecurity/falco/pull/2736)] - [@Andreagit97](https://github.com/Andrea`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 497,
                  "startColumn": 28,
                  "endLine": 497,
                  "endColumn": 36,
                  "snippet": {
                    "text": "[#2705](https://github.com/falcosecurity/falco/pull/2705)] - [@loresuso](https://github.com/loresuso)\n\n\n### Minor Changes\n\n* update(cmake): bumped bundled falcoctl to 0.6.2 [[#2829](https://github.com/falcosecurity/falco/pull/2829)] - [@FedeDP](https://github.com/FedeDP)\n* update(rules)!: major rule update to version 2.0.0 [[#2823](https://github.com/falcosecurity/falco/pull/2823)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(cmake): bumped plugins to latest stable versions [[#2820](https://github.com/falcosecurity/falco/pull/2820)] - [@FedeDP](https://github.com/FedeDP)\n* update(cmake): bu",
                    "rendered": {
                      "text": "[#2705](https://github.com/falcosecurity/falco/pull/2705)] - [@loresuso](https://github.com/loresuso)\n\n\n### Minor Changes\n\n* update(cmake): bumped bundled falcoctl to 0.6.2 [[#2829](https://github.com/falcosecurity/falco/pull/2829)] - [@FedeDP](https://github.com/FedeDP)\n* update(rules)!: major rule update to version 2.0.0 [[#2823](https://github.com/falcosecurity/falco/pull/2823)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(cmake): bumped plugins to latest stable versions [[#2820](https://github.com/falcosecurity/falco/pull/2820)] - [@FedeDP](https://github.com/FedeDP)\n* update(cmake): bu",
                      "markdown": "`[#2705](https://github.com/falcosecurity/falco/pull/2705)] - [@loresuso](https://github.com/loresuso)\n\n\n### Minor Changes\n\n* update(cmake): bumped bundled falcoctl to 0.6.2 [[#2829](https://github.com/falcosecurity/falco/pull/2829)] - [@FedeDP](https://github.com/FedeDP)\n* update(rules)!: major rule update to version 2.0.0 [[#2823](https://github.com/falcosecurity/falco/pull/2823)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(cmake): bumped plugins to latest stable versions [[#2820](https://github.com/falcosecurity/falco/pull/2820)] - [@FedeDP](https://github.com/FedeDP)\n* update(cmake): bu`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 422,
                  "startColumn": 15,
                  "endLine": 422,
                  "endColumn": 23,
                  "snippet": {
                    "text": "it is no longer used [[#2933](https://github.com/falcosecurity/falco/pull/2933)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(engine): port decode_uri in falco engine [[#2912](https://github.com/falcosecurity/falco/pull/2912)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(falco): update to libs on nov 28th [[#2929](https://github.com/falcosecurity/falco/pull/2929)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(falco): remove `init` in the configuration constructor [[#2917](https://github.com/falcosecurity/falco/pull/2917)] - [@Andreagit97](https://github.com/Andreagit97)",
                    "rendered": {
                      "text": "it is no longer used [[#2933](https://github.com/falcosecurity/falco/pull/2933)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(engine): port decode_uri in falco engine [[#2912](https://github.com/falcosecurity/falco/pull/2912)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(falco): update to libs on nov 28th [[#2929](https://github.com/falcosecurity/falco/pull/2929)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(falco): remove `init` in the configuration constructor [[#2917](https://github.com/falcosecurity/falco/pull/2917)] - [@Andreagit97](https://github.com/Andreagit97)",
                      "markdown": "`it is no longer used [[#2933](https://github.com/falcosecurity/falco/pull/2933)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(engine): port decode_uri in falco engine [[#2912](https://github.com/falcosecurity/falco/pull/2912)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(falco): update to libs on nov 28th [[#2929](https://github.com/falcosecurity/falco/pull/2929)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(falco): remove `init` in the configuration constructor [[#2917](https://github.com/falcosecurity/falco/pull/2917)] - [@Andreagit97](https://github.com/Andreagit97)`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 11,
                  "endLine": 386,
                  "endColumn": 19,
                  "snippet": {
                    "text": "pment libs [[#2946](https://github.com/falcosecurity/falco/pull/2946)] - [@federico-sysdig](https://github.com/federico-sysdig)\n* chore(falco): bump Falco to `000d576` libs commit [[#2944](https://github.com/falcosecurity/falco/pull/2944)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(gha): update rpmsign [[#2856](https://github.com/falcosecurity/falco/pull/2856)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* build(deps): Bump submodules/falcosecurity-rules from `424b258` to `1221b9e` [[#3000](https://github.com/falcosecurity/falco/pull/3000)] - [@dependabot[bot]](https://github.com/apps/d",
                    "rendered": {
                      "text": "pment libs [[#2946](https://github.com/falcosecurity/falco/pull/2946)] - [@federico-sysdig](https://github.com/federico-sysdig)\n* chore(falco): bump Falco to `000d576` libs commit [[#2944](https://github.com/falcosecurity/falco/pull/2944)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(gha): update rpmsign [[#2856](https://github.com/falcosecurity/falco/pull/2856)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* build(deps): Bump submodules/falcosecurity-rules from `424b258` to `1221b9e` [[#3000](https://github.com/falcosecurity/falco/pull/3000)] - [@dependabot[bot]](https://github.com/apps/d",
                      "markdown": "`pment libs [[#2946](https://github.com/falcosecurity/falco/pull/2946)] - [@federico-sysdig](https://github.com/federico-sysdig)\n* chore(falco): bump Falco to `000d576` libs commit [[#2944](https://github.com/falcosecurity/falco/pull/2944)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(gha): update rpmsign [[#2856](https://github.com/falcosecurity/falco/pull/2856)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* build(deps): Bump submodules/falcosecurity-rules from `424b258` to `1221b9e` [[#3000](https://github.com/falcosecurity/falco/pull/3000)] - [@dependabot[bot]](https://github.com/apps/d`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 114,
                  "endLine": 337,
                  "endColumn": 122,
                  "snippet": {
                    "text": "e node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in",
                    "rendered": {
                      "text": "e node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in",
                      "markdown": "`e node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 49,
                  "endLine": 337,
                  "endColumn": 53,
                  "snippet": {
                    "text": "d in other cases, where we only returned the default values if the node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var val",
                    "rendered": {
                      "text": "d in other cases, where we only returned the default values if the node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var val",
                      "markdown": "`d in other cases, where we only returned the default values if the node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var val`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 10,
                  "endLine": 267,
                  "endColumn": 18,
                  "snippet": {
                    "text": "FedeDP](https://github.com/FedeDP)\n* Improve const correctness [[#3083](https://github.com/falcosecurity/falco/pull/3083)] - [@sgaist](https://github.com/sgaist)\n* Improve exception throwing [[#3085](https://github.com/falcosecurity/falco/pull/3085)] - [@sgaist](https://github.com/sgaist)\n* fix(ci): update sync in deb and rpm scripts with acl [[#3062](https://github.com/falcosecurity/falco/pull/3062)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(tests): consolidate Falco engine and rule loader tests [[#3066](https://github.com/falcosecurity/falco/pull/3066)] - [@LucaGuerra](https://github.",
                    "rendered": {
                      "text": "FedeDP](https://github.com/FedeDP)\n* Improve const correctness [[#3083](https://github.com/falcosecurity/falco/pull/3083)] - [@sgaist](https://github.com/sgaist)\n* Improve exception throwing [[#3085](https://github.com/falcosecurity/falco/pull/3085)] - [@sgaist](https://github.com/sgaist)\n* fix(ci): update sync in deb and rpm scripts with acl [[#3062](https://github.com/falcosecurity/falco/pull/3062)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(tests): consolidate Falco engine and rule loader tests [[#3066](https://github.com/falcosecurity/falco/pull/3066)] - [@LucaGuerra](https://github.",
                      "markdown": "`FedeDP](https://github.com/FedeDP)\n* Improve const correctness [[#3083](https://github.com/falcosecurity/falco/pull/3083)] - [@sgaist](https://github.com/sgaist)\n* Improve exception throwing [[#3085](https://github.com/falcosecurity/falco/pull/3085)] - [@sgaist](https://github.com/sgaist)\n* fix(ci): update sync in deb and rpm scripts with acl [[#3062](https://github.com/falcosecurity/falco/pull/3062)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(tests): consolidate Falco engine and rule loader tests [[#3066](https://github.com/falcosecurity/falco/pull/3066)] - [@LucaGuerra](https://github.`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 10,
                  "endLine": 238,
                  "endColumn": 18,
                  "snippet": {
                    "text": " both release and debug versions [[#3161](https://github.com/falcosecurity/falco/pull/3161)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(userspace/falco): watch all configs files. [[#3160](https://github.com/falcosecurity/falco/pull/3160)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): update scorecard-action to v2.3.1 [[#3153](https://github.com/falcosecurity/falco/pull/3153)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(falco): consolidate falco::grpc::server in one class [[#3150](https://github.com/falcosecurity/falco/pull/3150)] - [@LucaGuerra](https://github.com/LucaGuer",
                    "rendered": {
                      "text": " both release and debug versions [[#3161](https://github.com/falcosecurity/falco/pull/3161)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(userspace/falco): watch all configs files. [[#3160](https://github.com/falcosecurity/falco/pull/3160)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): update scorecard-action to v2.3.1 [[#3153](https://github.com/falcosecurity/falco/pull/3153)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(falco): consolidate falco::grpc::server in one class [[#3150](https://github.com/falcosecurity/falco/pull/3150)] - [@LucaGuerra](https://github.com/LucaGuer",
                      "markdown": "` both release and debug versions [[#3161](https://github.com/falcosecurity/falco/pull/3161)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(userspace/falco): watch all configs files. [[#3160](https://github.com/falcosecurity/falco/pull/3160)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): update scorecard-action to v2.3.1 [[#3153](https://github.com/falcosecurity/falco/pull/3153)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(falco): consolidate falco::grpc::server in one class [[#3150](https://github.com/falcosecurity/falco/pull/3150)] - [@LucaGuerra](https://github.com/LucaGuer`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 31,
                  "endLine": 233,
                  "endColumn": 35,
                  "snippet": {
                    "text": "m/falcosecurity/falco/pull/3173)] - [@FedeDP](https://github.com/FedeDP)\n* build(deps): Bump submodules/falcosecurity-rules from `869c9a7` to `ec255e6` [[#3170](https://github.com/falcosecurity/falco/pull/3170)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* update(app): close inspectors at teardown time [[#3169](https://github.com/falcosecurity/falco/pull/3169)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(docker): fixed docker entrypoints for driver loading. [[#3168](https://github.com/falcosecurity/falco/pull/3168)] - [@FedeDP](https://github.com/FedeDP)\n* fix(docker,scripts",
                    "rendered": {
                      "text": "m/falcosecurity/falco/pull/3173)] - [@FedeDP](https://github.com/FedeDP)\n* build(deps): Bump submodules/falcosecurity-rules from `869c9a7` to `ec255e6` [[#3170](https://github.com/falcosecurity/falco/pull/3170)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* update(app): close inspectors at teardown time [[#3169](https://github.com/falcosecurity/falco/pull/3169)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(docker): fixed docker entrypoints for driver loading. [[#3168](https://github.com/falcosecurity/falco/pull/3168)] - [@FedeDP](https://github.com/FedeDP)\n* fix(docker,scripts",
                      "markdown": "`m/falcosecurity/falco/pull/3173)] - [@FedeDP](https://github.com/FedeDP)\n* build(deps): Bump submodules/falcosecurity-rules from `869c9a7` to `ec255e6` [[#3170](https://github.com/falcosecurity/falco/pull/3170)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* update(app): close inspectors at teardown time [[#3169](https://github.com/falcosecurity/falco/pull/3169)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(docker): fixed docker entrypoints for driver loading. [[#3168](https://github.com/falcosecurity/falco/pull/3168)] - [@FedeDP](https://github.com/FedeDP)\n* fix(docker,scripts`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 13,
                  "endLine": 216,
                  "endColumn": 21,
                  "snippet": {
                    "text": "ttps://github.com/falcosecurity/falco/pull/3128)] - [@alacuku](https://github.com/alacuku)\n* build(deps): Bump submodules/falcosecurity-rules from `59bf03b` to `9e56293` [[#3212](https://github.com/falcosecurity/falco/pull/3212)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* chore(gha): update cosign to v3.5.0 [[#3209](https://github.com/falcosecurity/falco/pull/3209)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* build(deps): Bump submodules/falcosecurity-rules from `29c41c4` to `59bf03b` [[#3207](https://github.com/falcosecurity/falco/pull/3207)] - [@dependabot[bot]](https://github.c",
                    "rendered": {
                      "text": "ttps://github.com/falcosecurity/falco/pull/3128)] - [@alacuku](https://github.com/alacuku)\n* build(deps): Bump submodules/falcosecurity-rules from `59bf03b` to `9e56293` [[#3212](https://github.com/falcosecurity/falco/pull/3212)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* chore(gha): update cosign to v3.5.0 [[#3209](https://github.com/falcosecurity/falco/pull/3209)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* build(deps): Bump submodules/falcosecurity-rules from `29c41c4` to `59bf03b` [[#3207](https://github.com/falcosecurity/falco/pull/3207)] - [@dependabot[bot]](https://github.c",
                      "markdown": "`ttps://github.com/falcosecurity/falco/pull/3128)] - [@alacuku](https://github.com/alacuku)\n* build(deps): Bump submodules/falcosecurity-rules from `59bf03b` to `9e56293` [[#3212](https://github.com/falcosecurity/falco/pull/3212)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* chore(gha): update cosign to v3.5.0 [[#3209](https://github.com/falcosecurity/falco/pull/3209)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* build(deps): Bump submodules/falcosecurity-rules from `29c41c4` to `59bf03b` [[#3207](https://github.com/falcosecurity/falco/pull/3207)] - [@dependabot[bot]](https://github.c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 16,
                  "endLine": 193,
                  "endColumn": 24,
                  "snippet": {
                    "text": "fig key [[#3162](https://github.com/falcosecurity/falco/pull/3162)] - [@FedeDP](https://github.com/FedeDP)\n* chore(falco): update falco libs and driver to master (Apr 8th 2024) [[#3158](https://github.com/falcosecurity/falco/pull/3158)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(build): update libs to 026ffe1d8f1b25c6ccdc09afa2c02afdd3e3f672 [[#3151](https://github.com/falcosecurity/falco/pull/3151)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup: minor adjustments to readme, add new testing section [[#3072](https://github.com/falcosecurity/falco/pull/3072)] - [@incertum](https:",
                    "rendered": {
                      "text": "fig key [[#3162](https://github.com/falcosecurity/falco/pull/3162)] - [@FedeDP](https://github.com/FedeDP)\n* chore(falco): update falco libs and driver to master (Apr 8th 2024) [[#3158](https://github.com/falcosecurity/falco/pull/3158)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(build): update libs to 026ffe1d8f1b25c6ccdc09afa2c02afdd3e3f672 [[#3151](https://github.com/falcosecurity/falco/pull/3151)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup: minor adjustments to readme, add new testing section [[#3072](https://github.com/falcosecurity/falco/pull/3072)] - [@incertum](https:",
                      "markdown": "`fig key [[#3162](https://github.com/falcosecurity/falco/pull/3162)] - [@FedeDP](https://github.com/FedeDP)\n* chore(falco): update falco libs and driver to master (Apr 8th 2024) [[#3158](https://github.com/falcosecurity/falco/pull/3158)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(build): update libs to 026ffe1d8f1b25c6ccdc09afa2c02afdd3e3f672 [[#3151](https://github.com/falcosecurity/falco/pull/3151)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup: minor adjustments to readme, add new testing section [[#3072](https://github.com/falcosecurity/falco/pull/3072)] - [@incertum](https:`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 15,
                  "endLine": 192,
                  "endColumn": 23,
                  "snippet": {
                    "text": "fiers [[#3186](https://github.com/falcosecurity/falco/pull/3186)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* chore(userspace/falco): deprecated old 'rules_file' config key [[#3162](https://github.com/falcosecurity/falco/pull/3162)] - [@FedeDP](https://github.com/FedeDP)\n* chore(falco): update falco libs and driver to master (Apr 8th 2024) [[#3158](https://github.com/falcosecurity/falco/pull/3158)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(build): update libs to 026ffe1d8f1b25c6ccdc09afa2c02afdd3e3f672 [[#3151](https://github.com/falcosecurity/falco/pull/3151)] - [@LucaGuerr",
                    "rendered": {
                      "text": "fiers [[#3186](https://github.com/falcosecurity/falco/pull/3186)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* chore(userspace/falco): deprecated old 'rules_file' config key [[#3162](https://github.com/falcosecurity/falco/pull/3162)] - [@FedeDP](https://github.com/FedeDP)\n* chore(falco): update falco libs and driver to master (Apr 8th 2024) [[#3158](https://github.com/falcosecurity/falco/pull/3158)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(build): update libs to 026ffe1d8f1b25c6ccdc09afa2c02afdd3e3f672 [[#3151](https://github.com/falcosecurity/falco/pull/3151)] - [@LucaGuerr",
                      "markdown": "`fiers [[#3186](https://github.com/falcosecurity/falco/pull/3186)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* chore(userspace/falco): deprecated old 'rules_file' config key [[#3162](https://github.com/falcosecurity/falco/pull/3162)] - [@FedeDP](https://github.com/FedeDP)\n* chore(falco): update falco libs and driver to master (Apr 8th 2024) [[#3158](https://github.com/falcosecurity/falco/pull/3158)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update(build): update libs to 026ffe1d8f1b25c6ccdc09afa2c02afdd3e3f672 [[#3151](https://github.com/falcosecurity/falco/pull/3151)] - [@LucaGuerr`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 16,
                  "endLine": 185,
                  "endColumn": 24,
                  "snippet": {
                    "text": "etection framework [[#2655](https://github.com/falcosecurity/falco/pull/2655)] - [@incertum](https://github.com/incertum)\n\n\n### Minor Changes\n\n* update(cmake): bump falcoctl to v0.8.0. [[#3219](https://github.com/falcosecurity/falco/pull/3219)] - [@FedeDP](https://github.com/FedeDP)\n* update(rules): update falco-rules to 3.1.0 [[#3217](https://github.com/falcosecurity/falco/pull/3217)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* refactor(userspace): move falco logger under falco engine [[#3208](https://github.com/falcosecurity/falco/pull/3208)] - [@jasondellaluce](https://github.com/jasondellaluc",
                    "rendered": {
                      "text": "etection framework [[#2655](https://github.com/falcosecurity/falco/pull/2655)] - [@incertum](https://github.com/incertum)\n\n\n### Minor Changes\n\n* update(cmake): bump falcoctl to v0.8.0. [[#3219](https://github.com/falcosecurity/falco/pull/3219)] - [@FedeDP](https://github.com/FedeDP)\n* update(rules): update falco-rules to 3.1.0 [[#3217](https://github.com/falcosecurity/falco/pull/3217)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* refactor(userspace): move falco logger under falco engine [[#3208](https://github.com/falcosecurity/falco/pull/3208)] - [@jasondellaluce](https://github.com/jasondellaluc",
                      "markdown": "`etection framework [[#2655](https://github.com/falcosecurity/falco/pull/2655)] - [@incertum](https://github.com/incertum)\n\n\n### Minor Changes\n\n* update(cmake): bump falcoctl to v0.8.0. [[#3219](https://github.com/falcosecurity/falco/pull/3219)] - [@FedeDP](https://github.com/FedeDP)\n* update(rules): update falco-rules to 3.1.0 [[#3217](https://github.com/falcosecurity/falco/pull/3217)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* refactor(userspace): move falco logger under falco engine [[#3208](https://github.com/falcosecurity/falco/pull/3208)] - [@jasondellaluce](https://github.com/jasondellaluc`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 15,
                  "endLine": 102,
                  "endColumn": 23,
                  "snippet": {
                    "text": "ttps://github.com/falcosecurity/falco/pull/3225)] - [@FedeDP](https://github.com/FedeDP)\n* chore(deps): Bump submodules/falcosecurity-rules from `9e56293` to `679a50a` [[#3222](https://github.com/falcosecurity/falco/pull/3222)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* update(docs): update CHANGELOG for 0.38.0 (master branch) [[#3224](https://github.com/falcosecurity/falco/pull/3224)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n### Statistics\n\n|   MERGED PRS    | NUMBER |\n|-----------------|--------|\n| Not user-facing |     35 |\n| Release note    |     22 |\n| Total           |    ",
                    "rendered": {
                      "text": "ttps://github.com/falcosecurity/falco/pull/3225)] - [@FedeDP](https://github.com/FedeDP)\n* chore(deps): Bump submodules/falcosecurity-rules from `9e56293` to `679a50a` [[#3222](https://github.com/falcosecurity/falco/pull/3222)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* update(docs): update CHANGELOG for 0.38.0 (master branch) [[#3224](https://github.com/falcosecurity/falco/pull/3224)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n### Statistics\n\n|   MERGED PRS    | NUMBER |\n|-----------------|--------|\n| Not user-facing |     35 |\n| Release note    |     22 |\n| Total           |    ",
                      "markdown": "`ttps://github.com/falcosecurity/falco/pull/3225)] - [@FedeDP](https://github.com/FedeDP)\n* chore(deps): Bump submodules/falcosecurity-rules from `9e56293` to `679a50a` [[#3222](https://github.com/falcosecurity/falco/pull/3222)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* update(docs): update CHANGELOG for 0.38.0 (master branch) [[#3224](https://github.com/falcosecurity/falco/pull/3224)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n### Statistics\n\n|   MERGED PRS    | NUMBER |\n|-----------------|--------|\n| Not user-facing |     35 |\n| Release note    |     22 |\n| Total           |    `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 19,
                  "endLine": 81,
                  "endColumn": 27,
                  "snippet": {
                    "text": "inned-dependencies issue [[#3299](https://github.com/falcosecurity/falco/pull/3299)] - [@harshitasao](https://github.com/harshitasao)\n* update(cmake): bump falcoctl to v0.10.0-rc1 [[#3316](https://github.com/falcosecurity/falco/pull/3316)] - [@alacuku](https://github.com/alacuku)\n* ci(insecure-api): update semgrep docker image [[#3315](https://github.com/falcosecurity/falco/pull/3315)] - [@francesco-furlan](https://github.com/francesco-furlan)\n* Add demo environment instructions and docker-config files [[#3295](https://github.com/falcosecurity/falco/pull/3295)] - [@bbl232](https://github.com/bbl232)\n*",
                    "rendered": {
                      "text": "inned-dependencies issue [[#3299](https://github.com/falcosecurity/falco/pull/3299)] - [@harshitasao](https://github.com/harshitasao)\n* update(cmake): bump falcoctl to v0.10.0-rc1 [[#3316](https://github.com/falcosecurity/falco/pull/3316)] - [@alacuku](https://github.com/alacuku)\n* ci(insecure-api): update semgrep docker image [[#3315](https://github.com/falcosecurity/falco/pull/3315)] - [@francesco-furlan](https://github.com/francesco-furlan)\n* Add demo environment instructions and docker-config files [[#3295](https://github.com/falcosecurity/falco/pull/3295)] - [@bbl232](https://github.com/bbl232)\n*",
                      "markdown": "`inned-dependencies issue [[#3299](https://github.com/falcosecurity/falco/pull/3299)] - [@harshitasao](https://github.com/harshitasao)\n* update(cmake): bump falcoctl to v0.10.0-rc1 [[#3316](https://github.com/falcosecurity/falco/pull/3316)] - [@alacuku](https://github.com/alacuku)\n* ci(insecure-api): update semgrep docker image [[#3315](https://github.com/falcosecurity/falco/pull/3315)] - [@francesco-furlan](https://github.com/francesco-furlan)\n* Add demo environment instructions and docker-config files [[#3295](https://github.com/falcosecurity/falco/pull/3295)] - [@bbl232](https://github.com/bbl232)\n*`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 95,
                  "endLine": 62,
                  "endColumn": 99,
                  "snippet": {
                    "text": "aGuerra](https://github.com/LucaGuerra)\n* fix(falco): allow plugin init_config map in json schema [[#3335](https://github.com/falcosecurity/falco/pull/3335)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(userspace/falco): properly account for plugin with CAP_PARSING when computing interesting sc set [[#3334](https://github.com/falcosecurity/falco/pull/3334)] - [@FedeDP](https://github.com/FedeDP)\n\n\n\n### Non user-facing changes\n\n* feat(cmake): add conditional builds for falcoctl and rules paths [[#3305](https://github.com/falcosecurity/falco/pull/3305)] - [@tembleking](https://github.com/tem",
                    "rendered": {
                      "text": "aGuerra](https://github.com/LucaGuerra)\n* fix(falco): allow plugin init_config map in json schema [[#3335](https://github.com/falcosecurity/falco/pull/3335)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(userspace/falco): properly account for plugin with CAP_PARSING when computing interesting sc set [[#3334](https://github.com/falcosecurity/falco/pull/3334)] - [@FedeDP](https://github.com/FedeDP)\n\n\n\n### Non user-facing changes\n\n* feat(cmake): add conditional builds for falcoctl and rules paths [[#3305](https://github.com/falcosecurity/falco/pull/3305)] - [@tembleking](https://github.com/tem",
                      "markdown": "`aGuerra](https://github.com/LucaGuerra)\n* fix(falco): allow plugin init_config map in json schema [[#3335](https://github.com/falcosecurity/falco/pull/3335)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(userspace/falco): properly account for plugin with CAP_PARSING when computing interesting sc set [[#3334](https://github.com/falcosecurity/falco/pull/3334)] - [@FedeDP](https://github.com/FedeDP)\n\n\n\n### Non user-facing changes\n\n* feat(cmake): add conditional builds for falcoctl and rules paths [[#3305](https://github.com/falcosecurity/falco/pull/3305)] - [@tembleking](https://github.com/tem`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 49,
                  "endLine": 60,
                  "endColumn": 53,
                  "snippet": {
                    "text": "ty/falco/pull/3324)] - [@incertum](https://github.com/incertum)\n\n\n### Bug Fixes\n\n* fix(falco): allow disable_cri_async from both CLI and config [[#3353](https://github.com/falcosecurity/falco/pull/3353)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(engine): sync outputs before printing stats at shutdown [[#3338](https://github.com/falcosecurity/falco/pull/3338)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(falco): allow plugin init_config map in json schema [[#3335](https://github.com/falcosecurity/falco/pull/3335)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(userspace/fal",
                    "rendered": {
                      "text": "ty/falco/pull/3324)] - [@incertum](https://github.com/incertum)\n\n\n### Bug Fixes\n\n* fix(falco): allow disable_cri_async from both CLI and config [[#3353](https://github.com/falcosecurity/falco/pull/3353)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(engine): sync outputs before printing stats at shutdown [[#3338](https://github.com/falcosecurity/falco/pull/3338)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(falco): allow plugin init_config map in json schema [[#3335](https://github.com/falcosecurity/falco/pull/3335)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(userspace/fal",
                      "markdown": "`ty/falco/pull/3324)] - [@incertum](https://github.com/incertum)\n\n\n### Bug Fixes\n\n* fix(falco): allow disable_cri_async from both CLI and config [[#3353](https://github.com/falcosecurity/falco/pull/3353)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(engine): sync outputs before printing stats at shutdown [[#3338](https://github.com/falcosecurity/falco/pull/3338)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(falco): allow plugin init_config map in json schema [[#3335](https://github.com/falcosecurity/falco/pull/3335)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(userspace/fal`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2833,
                  "startColumn": 69,
                  "endLine": 2833,
                  "endColumn": 77,
                  "snippet": {
                    "text": "ll of these changes result in dramatically reduced CPU usage. Here are some comparisons between 0.2.0 and 0.3.0 for the following workloads:\n\n* [Phoronix](http://www.phoronix-test-suite.com/)'s `pts/apache` and `pts/dbench` tests.\n* Sysdig Cloud Kubernetes Demo: Starts a kubernetes environment using docker with apache and wordpress instances + synthetic workloads.\n* [Juttle-engine examples](https://github.com/juttle/juttle-engine/blob/master/examples/README.md) : Several elasticsearch, node.js, logstash, mysql, postgres, influxdb instances run under docker-compose.\n\n| Workload                         ",
                    "rendered": {
                      "text": "ll of these changes result in dramatically reduced CPU usage. Here are some comparisons between 0.2.0 and 0.3.0 for the following workloads:\n\n* [Phoronix](http://www.phoronix-test-suite.com/)'s `pts/apache` and `pts/dbench` tests.\n* Sysdig Cloud Kubernetes Demo: Starts a kubernetes environment using docker with apache and wordpress instances + synthetic workloads.\n* [Juttle-engine examples](https://github.com/juttle/juttle-engine/blob/master/examples/README.md) : Several elasticsearch, node.js, logstash, mysql, postgres, influxdb instances run under docker-compose.\n\n| Workload                         ",
                      "markdown": "`ll of these changes result in dramatically reduced CPU usage. Here are some comparisons between 0.2.0 and 0.3.0 for the following workloads:\n\n* [Phoronix](http://www.phoronix-test-suite.com/)'s `pts/apache` and `pts/dbench` tests.\n* Sysdig Cloud Kubernetes Demo: Starts a kubernetes environment using docker with apache and wordpress instances + synthetic workloads.\n* [Juttle-engine examples](https://github.com/juttle/juttle-engine/blob/master/examples/README.md) : Several elasticsearch, node.js, logstash, mysql, postgres, influxdb instances run under docker-compose.\n\n| Workload                         `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2811,
                  "startColumn": 61,
                  "endLine": 2811,
                  "endColumn": 69,
                  "snippet": {
                    "text": "co/pull/117)]. This was not broken in 0.3.0, just between 0.3.0 and 0.4.0.\n* Fixed a lua stack leak that could cause problems when matching millions of events against a large set of rules [[#123](https://github.com/draios/falco/pull/123)]\n* Update docker files to reflect changes to `debian:unstable` docker image [[#124](https://github.com/draios/falco/pull/124)]\n* Fixed logic for detecting config files to ensure config files in `/etc/falco.yaml` are properly detected  [[#135](https://github.com/draios/falco/pull/135)] [[#136](https://github.com/draios/falco/pull/136)]\n* Don't alert on falco spawning a",
                    "rendered": {
                      "text": "co/pull/117)]. This was not broken in 0.3.0, just between 0.3.0 and 0.4.0.\n* Fixed a lua stack leak that could cause problems when matching millions of events against a large set of rules [[#123](https://github.com/draios/falco/pull/123)]\n* Update docker files to reflect changes to `debian:unstable` docker image [[#124](https://github.com/draios/falco/pull/124)]\n* Fixed logic for detecting config files to ensure config files in `/etc/falco.yaml` are properly detected  [[#135](https://github.com/draios/falco/pull/135)] [[#136](https://github.com/draios/falco/pull/136)]\n* Don't alert on falco spawning a",
                      "markdown": "`co/pull/117)]. This was not broken in 0.3.0, just between 0.3.0 and 0.4.0.\n* Fixed a lua stack leak that could cause problems when matching millions of events against a large set of rules [[#123](https://github.com/draios/falco/pull/123)]\n* Update docker files to reflect changes to `debian:unstable` docker image [[#124](https://github.com/draios/falco/pull/124)]\n* Fixed logic for detecting config files to ensure config files in `/etc/falco.yaml` are properly detected  [[#135](https://github.com/draios/falco/pull/135)] [[#136](https://github.com/draios/falco/pull/136)]\n* Don't alert on falco spawning a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2811,
                  "startColumn": 8,
                  "endLine": 2811,
                  "endColumn": 16,
                  "snippet": {
                    "text": "gurable outputs [[#117](https://github.com/draios/falco/pull/117)]. This was not broken in 0.3.0, just between 0.3.0 and 0.4.0.\n* Fixed a lua stack leak that could cause problems when matching millions of events against a large set of rules [[#123](https://github.com/draios/falco/pull/123)]\n* Update docker files to reflect changes to `debian:unstable` docker image [[#124](https://github.com/draios/falco/pull/124)]\n* Fixed logic for detecting config files to ensure config files in `/etc/falco.yaml` are properly detected  [[#135](https://github.com/draios/falco/pull/135)] [[#136](https://github.com/drai",
                    "rendered": {
                      "text": "gurable outputs [[#117](https://github.com/draios/falco/pull/117)]. This was not broken in 0.3.0, just between 0.3.0 and 0.4.0.\n* Fixed a lua stack leak that could cause problems when matching millions of events against a large set of rules [[#123](https://github.com/draios/falco/pull/123)]\n* Update docker files to reflect changes to `debian:unstable` docker image [[#124](https://github.com/draios/falco/pull/124)]\n* Fixed logic for detecting config files to ensure config files in `/etc/falco.yaml` are properly detected  [[#135](https://github.com/draios/falco/pull/135)] [[#136](https://github.com/drai",
                      "markdown": "`gurable outputs [[#117](https://github.com/draios/falco/pull/117)]. This was not broken in 0.3.0, just between 0.3.0 and 0.4.0.\n* Fixed a lua stack leak that could cause problems when matching millions of events against a large set of rules [[#123](https://github.com/draios/falco/pull/123)]\n* Update docker files to reflect changes to `debian:unstable` docker image [[#124](https://github.com/draios/falco/pull/124)]\n* Fixed logic for detecting config files to ensure config files in `/etc/falco.yaml` are properly detected  [[#135](https://github.com/draios/falco/pull/135)] [[#136](https://github.com/drai`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2810,
                  "startColumn": 9,
                  "endLine": 2810,
                  "endColumn": 14,
                  "snippet": {
                    "text": "ull/141)]\n* Minor changes to node.js example to avoid falco false positives [[#111](https://github.com/draios/falco/pull/111/)]\n* Fixed regression that broke configurable outputs [[#117](https://github.com/draios/falco/pull/117)]. This was not broken in 0.3.0, just between 0.3.0 and 0.4.0.\n* Fixed a lua stack leak that could cause problems when matching millions of events against a large set of rules [[#123](https://github.com/draios/falco/pull/123)]\n* Update docker files to reflect changes to `debian:unstable` docker image [[#124](https://github.com/draios/falco/pull/124)]\n* Fixed logic for detect",
                    "rendered": {
                      "text": "ull/141)]\n* Minor changes to node.js example to avoid falco false positives [[#111](https://github.com/draios/falco/pull/111/)]\n* Fixed regression that broke configurable outputs [[#117](https://github.com/draios/falco/pull/117)]. This was not broken in 0.3.0, just between 0.3.0 and 0.4.0.\n* Fixed a lua stack leak that could cause problems when matching millions of events against a large set of rules [[#123](https://github.com/draios/falco/pull/123)]\n* Update docker files to reflect changes to `debian:unstable` docker image [[#124](https://github.com/draios/falco/pull/124)]\n* Fixed logic for detect",
                      "markdown": "`ull/141)]\n* Minor changes to node.js example to avoid falco false positives [[#111](https://github.com/draios/falco/pull/111/)]\n* Fixed regression that broke configurable outputs [[#117](https://github.com/draios/falco/pull/117)]. This was not broken in 0.3.0, just between 0.3.0 and 0.4.0.\n* Fixed a lua stack leak that could cause problems when matching millions of events against a large set of rules [[#123](https://github.com/draios/falco/pull/123)]\n* Update docker files to reflect changes to `debian:unstable` docker image [[#124](https://github.com/draios/falco/pull/124)]\n* Fixed logic for detect`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2799,
                  "startColumn": 12,
                  "endLine": 2799,
                  "endColumn": 20,
                  "snippet": {
                    "text": "[#113](https://github.com/draios/falco/pull/113)] [[#132](https://github.com/draios/falco/pull/132)]\n* Changed rule names to be human readable [[#116](https://github.com/draios/falco/pull/116)]\n* Add Copyright notice to all source files [[#126](https://github.com/draios/falco/pull/126)]\n* Changes to docker images to make it easier to massage JSON output for webhooks [[#133](https://github.com/draios/falco/pull/133)]\n* When run with `-v`, print statistics on the number of events processed and dropped [[#139](https://github.com/draios/falco/pull/139)]\n* Add ability to write trace files with `-w`. This c",
                    "rendered": {
                      "text": "[#113](https://github.com/draios/falco/pull/113)] [[#132](https://github.com/draios/falco/pull/132)]\n* Changed rule names to be human readable [[#116](https://github.com/draios/falco/pull/116)]\n* Add Copyright notice to all source files [[#126](https://github.com/draios/falco/pull/126)]\n* Changes to docker images to make it easier to massage JSON output for webhooks [[#133](https://github.com/draios/falco/pull/133)]\n* When run with `-v`, print statistics on the number of events processed and dropped [[#139](https://github.com/draios/falco/pull/139)]\n* Add ability to write trace files with `-w`. This c",
                      "markdown": "`[#113](https://github.com/draios/falco/pull/113)] [[#132](https://github.com/draios/falco/pull/132)]\n* Changed rule names to be human readable [[#116](https://github.com/draios/falco/pull/116)]\n* Add Copyright notice to all source files [[#126](https://github.com/draios/falco/pull/126)]\n* Changes to docker images to make it easier to massage JSON output for webhooks [[#133](https://github.com/draios/falco/pull/133)]\n* When run with `-v`, print statistics on the number of events processed and dropped [[#139](https://github.com/draios/falco/pull/139)]\n* Add ability to write trace files with `-w`. This c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2796,
                  "startColumn": 126,
                  "endLine": 2796,
                  "endColumn": 134,
                  "snippet": {
                    "text": "ee if the subject is a prefix of any target [[sysdig/#660](https://github.com/draios/sysdig/pull/660)] [[#125](https://github.com/draios/falco/pull/125)]\n\n### Minor Changes\n\n* Add an event generator program that simulates suspicious activity that can be detected by falco. This is also available as a docker image [[sysdig/falco-event-generator](https://hub.docker.com/r/sysdig/falco-event-generator/)]. [[#113](https://github.com/draios/falco/pull/113)] [[#132](https://github.com/draios/falco/pull/132)]\n* Changed rule names to be human readable [[#116](https://github.com/draios/falco/pull/116)]\n* Add Cop",
                    "rendered": {
                      "text": "ee if the subject is a prefix of any target [[sysdig/#660](https://github.com/draios/sysdig/pull/660)] [[#125](https://github.com/draios/falco/pull/125)]\n\n### Minor Changes\n\n* Add an event generator program that simulates suspicious activity that can be detected by falco. This is also available as a docker image [[sysdig/falco-event-generator](https://hub.docker.com/r/sysdig/falco-event-generator/)]. [[#113](https://github.com/draios/falco/pull/113)] [[#132](https://github.com/draios/falco/pull/132)]\n* Changed rule names to be human readable [[#116](https://github.com/draios/falco/pull/116)]\n* Add Cop",
                      "markdown": "`ee if the subject is a prefix of any target [[sysdig/#660](https://github.com/draios/sysdig/pull/660)] [[#125](https://github.com/draios/falco/pull/125)]\n\n### Minor Changes\n\n* Add an event generator program that simulates suspicious activity that can be detected by falco. This is also available as a docker image [[sysdig/falco-event-generator](https://hub.docker.com/r/sysdig/falco-event-generator/)]. [[#113](https://github.com/draios/falco/pull/113)] [[#132](https://github.com/draios/falco/pull/132)]\n* Changed rule names to be human readable [[#116](https://github.com/draios/falco/pull/116)]\n* Add Cop`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2782,
                  "startColumn": 32,
                  "endLine": 2782,
                  "endColumn": 39,
                  "snippet": {
                    "text": "g/#658](https://github.com/draios/sysdig/pull/658)]\n** New rules utilizing privileged state [[#121](https://github.com/draios/falco/pull/121)]\n** New filters `container.mount*` to match container mount points [[sysdig/#655](https://github.com/draios/sysdig/pull/655)]\n** New rules utilizing container mount points [[#120](https://github.com/draios/falco/pull/120)]\n** New filter `container.image.id` to match container image id [[sysdig/#661](https://github.com/draios/sysdig/pull/661)]\n\n* Improved visibility into orchestration environments:\n** New k8s.deployment.* and k8s.rs.* filters to support latest k",
                    "rendered": {
                      "text": "g/#658](https://github.com/draios/sysdig/pull/658)]\n** New rules utilizing privileged state [[#121](https://github.com/draios/falco/pull/121)]\n** New filters `container.mount*` to match container mount points [[sysdig/#655](https://github.com/draios/sysdig/pull/655)]\n** New rules utilizing container mount points [[#120](https://github.com/draios/falco/pull/120)]\n** New filter `container.image.id` to match container image id [[sysdig/#661](https://github.com/draios/sysdig/pull/661)]\n\n* Improved visibility into orchestration environments:\n** New k8s.deployment.* and k8s.rs.* filters to support latest k",
                      "markdown": "`g/#658](https://github.com/draios/sysdig/pull/658)]\n** New rules utilizing privileged state [[#121](https://github.com/draios/falco/pull/121)]\n** New filters `container.mount*` to match container mount points [[sysdig/#655](https://github.com/draios/sysdig/pull/655)]\n** New rules utilizing container mount points [[#120](https://github.com/draios/falco/pull/120)]\n** New filter `container.image.id` to match container image id [[sysdig/#661](https://github.com/draios/sysdig/pull/661)]\n\n* Improved visibility into orchestration environments:\n** New k8s.deployment.* and k8s.rs.* filters to support latest k`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2781,
                  "startColumn": 52,
                  "endLine": 2781,
                  "endColumn": 59,
                  "snippet": {
                    "text": " containers running in privileged mode [[sysdig/#655](https://github.com/draios/sysdig/pull/655)] [[sysdig/#658](https://github.com/draios/sysdig/pull/658)]\n** New rules utilizing privileged state [[#121](https://github.com/draios/falco/pull/121)]\n** New filters `container.mount*` to match container mount points [[sysdig/#655](https://github.com/draios/sysdig/pull/655)]\n** New rules utilizing container mount points [[#120](https://github.com/draios/falco/pull/120)]\n** New filter `container.image.id` to match container image id [[sysdig/#661](https://github.com/draios/sysdig/pull/661)]\n\n* Improved vis",
                    "rendered": {
                      "text": " containers running in privileged mode [[sysdig/#655](https://github.com/draios/sysdig/pull/655)] [[sysdig/#658](https://github.com/draios/sysdig/pull/658)]\n** New rules utilizing privileged state [[#121](https://github.com/draios/falco/pull/121)]\n** New filters `container.mount*` to match container mount points [[sysdig/#655](https://github.com/draios/sysdig/pull/655)]\n** New rules utilizing container mount points [[#120](https://github.com/draios/falco/pull/120)]\n** New filter `container.image.id` to match container image id [[sysdig/#661](https://github.com/draios/sysdig/pull/661)]\n\n* Improved vis",
                      "markdown": "` containers running in privileged mode [[sysdig/#655](https://github.com/draios/sysdig/pull/655)] [[sysdig/#658](https://github.com/draios/sysdig/pull/658)]\n** New rules utilizing privileged state [[#121](https://github.com/draios/falco/pull/121)]\n** New filters `container.mount*` to match container mount points [[sysdig/#655](https://github.com/draios/sysdig/pull/655)]\n** New rules utilizing container mount points [[#120](https://github.com/draios/falco/pull/120)]\n** New filter `container.image.id` to match container image id [[sysdig/#661](https://github.com/draios/sysdig/pull/661)]\n\n* Improved vis`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2765,
                  "startColumn": 112,
                  "endLine": 2765,
                  "endColumn": 119,
                  "snippet": {
                    "text": "ub.com/draios/falco/pull/148)]\n\n### Rule Changes\n\n* Add DNF as non-alerting for RPM and package management. Thanks @djcross for the fix. [[#153](https://github.com/draios/falco/pull/153)]\n* Make `google_containers/kube-proxy` a trusted image, affecting the File Open by Privileged Container/Sensitive Mount by Container rules. [[#159](https://github.com/draios/falco/pull/159)]\n* Add fail2ban-server as a program that can spawn shells. Thanks @jcoetzee for the fix. [[#168](https://github.com/draios/falco/pull/168)]\n* Add systemd as a program that can access sensitive files. Thanks @jcoetzee for the fix. ",
                    "rendered": {
                      "text": "ub.com/draios/falco/pull/148)]\n\n### Rule Changes\n\n* Add DNF as non-alerting for RPM and package management. Thanks @djcross for the fix. [[#153](https://github.com/draios/falco/pull/153)]\n* Make `google_containers/kube-proxy` a trusted image, affecting the File Open by Privileged Container/Sensitive Mount by Container rules. [[#159](https://github.com/draios/falco/pull/159)]\n* Add fail2ban-server as a program that can spawn shells. Thanks @jcoetzee for the fix. [[#168](https://github.com/draios/falco/pull/168)]\n* Add systemd as a program that can access sensitive files. Thanks @jcoetzee for the fix. ",
                      "markdown": "`ub.com/draios/falco/pull/148)]\n\n### Rule Changes\n\n* Add DNF as non-alerting for RPM and package management. Thanks @djcross for the fix. [[#153](https://github.com/draios/falco/pull/153)]\n* Make `google_containers/kube-proxy` a trusted image, affecting the File Open by Privileged Container/Sensitive Mount by Container rules. [[#159](https://github.com/draios/falco/pull/159)]\n* Add fail2ban-server as a program that can spawn shells. Thanks @jcoetzee for the fix. [[#168](https://github.com/draios/falco/pull/168)]\n* Add systemd as a program that can access sensitive files. Thanks @jcoetzee for the fix. `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2764,
                  "startColumn": 29,
                  "endLine": 2764,
                  "endColumn": 34,
                  "snippet": {
                    "text": "ew configuration option `log_level` controls the verbosity of falco's logging. [[#160](https://github.com/draios/falco/pull/160)]\n\n\n### Bug Fixes\n\n* Improve compatibility with Sysdig Cloud Agent build [[#148](https://github.com/draios/falco/pull/148)]\n\n### Rule Changes\n\n* Add DNF as non-alerting for RPM and package management. Thanks @djcross for the fix. [[#153](https://github.com/draios/falco/pull/153)]\n* Make `google_containers/kube-proxy` a trusted image, affecting the File Open by Privileged Container/Sensitive Mount by Container rules. [[#159](https://github.com/draios/falco/pull/159)]\n* Add ",
                    "rendered": {
                      "text": "ew configuration option `log_level` controls the verbosity of falco's logging. [[#160](https://github.com/draios/falco/pull/160)]\n\n\n### Bug Fixes\n\n* Improve compatibility with Sysdig Cloud Agent build [[#148](https://github.com/draios/falco/pull/148)]\n\n### Rule Changes\n\n* Add DNF as non-alerting for RPM and package management. Thanks @djcross for the fix. [[#153](https://github.com/draios/falco/pull/153)]\n* Make `google_containers/kube-proxy` a trusted image, affecting the File Open by Privileged Container/Sensitive Mount by Container rules. [[#159](https://github.com/draios/falco/pull/159)]\n* Add ",
                      "markdown": "`ew configuration option `log_level` controls the verbosity of falco's logging. [[#160](https://github.com/draios/falco/pull/160)]\n\n\n### Bug Fixes\n\n* Improve compatibility with Sysdig Cloud Agent build [[#148](https://github.com/draios/falco/pull/148)]\n\n### Rule Changes\n\n* Add DNF as non-alerting for RPM and package management. Thanks @djcross for the fix. [[#153](https://github.com/draios/falco/pull/153)]\n* Make `google_containers/kube-proxy` a trusted image, affecting the File Open by Privileged Container/Sensitive Mount by Container rules. [[#159](https://github.com/draios/falco/pull/159)]\n* Add `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2764,
                  "startColumn": 5,
                  "endLine": 2764,
                  "endColumn": 10,
                  "snippet": {
                    "text": "ios/falco/pull/155)]\n* New configuration option `log_level` controls the verbosity of falco's logging. [[#160](https://github.com/draios/falco/pull/160)]\n\n\n### Bug Fixes\n\n* Improve compatibility with Sysdig Cloud Agent build [[#148](https://github.com/draios/falco/pull/148)]\n\n### Rule Changes\n\n* Add DNF as non-alerting for RPM and package management. Thanks @djcross for the fix. [[#153](https://github.com/draios/falco/pull/153)]\n* Make `google_containers/kube-proxy` a trusted image, affecting the File Open by Privileged Container/Sensitive Mount by Container rules. [[#159](https://github.com/draios",
                    "rendered": {
                      "text": "ios/falco/pull/155)]\n* New configuration option `log_level` controls the verbosity of falco's logging. [[#160](https://github.com/draios/falco/pull/160)]\n\n\n### Bug Fixes\n\n* Improve compatibility with Sysdig Cloud Agent build [[#148](https://github.com/draios/falco/pull/148)]\n\n### Rule Changes\n\n* Add DNF as non-alerting for RPM and package management. Thanks @djcross for the fix. [[#153](https://github.com/draios/falco/pull/153)]\n* Make `google_containers/kube-proxy` a trusted image, affecting the File Open by Privileged Container/Sensitive Mount by Container rules. [[#159](https://github.com/draios",
                      "markdown": "`ios/falco/pull/155)]\n* New configuration option `log_level` controls the verbosity of falco's logging. [[#160](https://github.com/draios/falco/pull/160)]\n\n\n### Bug Fixes\n\n* Improve compatibility with Sysdig Cloud Agent build [[#148](https://github.com/draios/falco/pull/148)]\n\n### Rule Changes\n\n* Add DNF as non-alerting for RPM and package management. Thanks @djcross for the fix. [[#153](https://github.com/draios/falco/pull/153)]\n* Make `google_containers/kube-proxy` a trusted image, affecting the File Open by Privileged Container/Sensitive Mount by Container rules. [[#159](https://github.com/draios`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2716,
                  "startColumn": 44,
                  "endLine": 2716,
                  "endColumn": 52,
                  "snippet": {
                    "text": "### Minor Changes\n* Several changes to [falco-event-generator](https://github.com/draios/falco/wiki/Generating-Sample-Events) to improve usability. [[#205](https://github.com/draios/falco/pull/205)]\n* Switch to a formatter cache provided by sysdig code instead of using our own. [[#212](https://github.com/draios/falco/pull/212)]\n* Add automated tests that use locally-built docker images. [[#188](https://github.com/draios/falco/issues/188)]\n\n### Bug Fixes\n\n",
                    "rendered": {
                      "text": "### Minor Changes\n* Several changes to [falco-event-generator](https://github.com/draios/falco/wiki/Generating-Sample-Events) to improve usability. [[#205](https://github.com/draios/falco/pull/205)]\n* Switch to a formatter cache provided by sysdig code instead of using our own. [[#212](https://github.com/draios/falco/pull/212)]\n* Add automated tests that use locally-built docker images. [[#188](https://github.com/draios/falco/issues/188)]\n\n### Bug Fixes\n\n",
                      "markdown": "`### Minor Changes\n* Several changes to [falco-event-generator](https://github.com/draios/falco/wiki/Generating-Sample-Events) to improve usability. [[#205](https://github.com/draios/falco/pull/205)]\n* Switch to a formatter cache provided by sysdig code instead of using our own. [[#212](https://github.com/draios/falco/pull/212)]\n* Add automated tests that use locally-built docker images. [[#188](https://github.com/draios/falco/issues/188)]\n\n### Bug Fixes\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2654,
                  "startColumn": 24,
                  "endLine": 2654,
                  "endColumn": 32,
                  "snippet": {
                    "text": "### Rule Changes\n\n* Significant changes to default ruleset to address FPs. These changes resulted from hundreds of hours of use in actual customer environments. [[#247](https://github.com/draios/falco/pull/247)] [[#259](https://github.com/draios/falco/pull/259)]\n* Add official gitlab EE docker image to list of known shell spawning images. Thanks @dkerwin! [[#270](https://github.com/draios/falco/pull/270)]\n* Add keepalived to list of shell spawning binaries. Thanks @dkerwin! [[#269](https://github.com/draios/falco/pull/269)]\n\n## v0.7.0\n",
                    "rendered": {
                      "text": "### Rule Changes\n\n* Significant changes to default ruleset to address FPs. These changes resulted from hundreds of hours of use in actual customer environments. [[#247](https://github.com/draios/falco/pull/247)] [[#259](https://github.com/draios/falco/pull/259)]\n* Add official gitlab EE docker image to list of known shell spawning images. Thanks @dkerwin! [[#270](https://github.com/draios/falco/pull/270)]\n* Add keepalived to list of shell spawning binaries. Thanks @dkerwin! [[#269](https://github.com/draios/falco/pull/269)]\n\n## v0.7.0\n",
                      "markdown": "`### Rule Changes\n\n* Significant changes to default ruleset to address FPs. These changes resulted from hundreds of hours of use in actual customer environments. [[#247](https://github.com/draios/falco/pull/247)] [[#259](https://github.com/draios/falco/pull/259)]\n* Add official gitlab EE docker image to list of known shell spawning images. Thanks @dkerwin! [[#270](https://github.com/draios/falco/pull/270)]\n* Add keepalived to list of shell spawning binaries. Thanks @dkerwin! [[#269](https://github.com/draios/falco/pull/269)]\n\n## v0.7.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2645,
                  "startColumn": 53,
                  "endLine": 2645,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n### Bug Fixes\n\n* Fix installation of falco on OSX [[#252](https://github.com/draios/falco/pull/252)]\n* Fix a bug that caused the trailing whitespace of a quoted string to be accidentally removed [[#254](https://github.com/draios/falco/pull/254)]\n* When multiple sets of kernel headers are installed, find the one for the running kernel [[#260](https://github.com/draios/falco/pull/260)]\n* Allow pathnames in rule/macro conditions to contain '.' characters [[#262](https://github.com/draios/falco/pull/262)]\n* Fix a bug where a list named \"foo\" would be substituted even if it were a substring of a longer ",
                    "rendered": {
                      "text": "\n### Bug Fixes\n\n* Fix installation of falco on OSX [[#252](https://github.com/draios/falco/pull/252)]\n* Fix a bug that caused the trailing whitespace of a quoted string to be accidentally removed [[#254](https://github.com/draios/falco/pull/254)]\n* When multiple sets of kernel headers are installed, find the one for the running kernel [[#260](https://github.com/draios/falco/pull/260)]\n* Allow pathnames in rule/macro conditions to contain '.' characters [[#262](https://github.com/draios/falco/pull/262)]\n* Fix a bug where a list named \"foo\" would be substituted even if it were a substring of a longer ",
                      "markdown": "`\n### Bug Fixes\n\n* Fix installation of falco on OSX [[#252](https://github.com/draios/falco/pull/252)]\n* Fix a bug that caused the trailing whitespace of a quoted string to be accidentally removed [[#254](https://github.com/draios/falco/pull/254)]\n* When multiple sets of kernel headers are installed, find the one for the running kernel [[#260](https://github.com/draios/falco/pull/260)]\n* Allow pathnames in rule/macro conditions to contain '.' characters [[#262](https://github.com/draios/falco/pull/262)]\n* Fix a bug where a list named \"foo\" would be substituted even if it were a substring of a longer `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2585,
                  "startColumn": 55,
                  "endLine": 2585,
                  "endColumn": 60,
                  "snippet": {
                    "text": "ull/324)]\n* Various FP fixes from users. [[#321](https://github.com/draios/falco/pull/321)] [[#326](https://github.com/draios/falco/pull/326)] [[#344](https://github.com/draios/falco/pull/344)] [[#350](https://github.com/draios/falco/pull/350)]\n* New rule `Disallowed SSH Connection` detects attempts ssh connection attempts to hosts outside of an expected set. In order to be effective, you need to override the macro `allowed_ssh_hosts` in a user rules file. [[#321](https://github.com/draios/falco/pull/321)]\n* New rule `Unexpected K8s NodePort Connection` detects attempts to contact the K8s NodePort ",
                    "rendered": {
                      "text": "ull/324)]\n* Various FP fixes from users. [[#321](https://github.com/draios/falco/pull/321)] [[#326](https://github.com/draios/falco/pull/326)] [[#344](https://github.com/draios/falco/pull/344)] [[#350](https://github.com/draios/falco/pull/350)]\n* New rule `Disallowed SSH Connection` detects attempts ssh connection attempts to hosts outside of an expected set. In order to be effective, you need to override the macro `allowed_ssh_hosts` in a user rules file. [[#321](https://github.com/draios/falco/pull/321)]\n* New rule `Unexpected K8s NodePort Connection` detects attempts to contact the K8s NodePort ",
                      "markdown": "`ull/324)]\n* Various FP fixes from users. [[#321](https://github.com/draios/falco/pull/321)] [[#326](https://github.com/draios/falco/pull/326)] [[#344](https://github.com/draios/falco/pull/344)] [[#350](https://github.com/draios/falco/pull/350)]\n* New rule `Disallowed SSH Connection` detects attempts ssh connection attempts to hosts outside of an expected set. In order to be effective, you need to override the macro `allowed_ssh_hosts` in a user rules file. [[#321](https://github.com/draios/falco/pull/321)]\n* New rule `Unexpected K8s NodePort Connection` detects attempts to contact the K8s NodePort `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2585,
                  "startColumn": 22,
                  "endLine": 2585,
                  "endColumn": 27,
                  "snippet": {
                    "text": "https://github.com/draios/falco/pull/324)]\n* Various FP fixes from users. [[#321](https://github.com/draios/falco/pull/321)] [[#326](https://github.com/draios/falco/pull/326)] [[#344](https://github.com/draios/falco/pull/344)] [[#350](https://github.com/draios/falco/pull/350)]\n* New rule `Disallowed SSH Connection` detects attempts ssh connection attempts to hosts outside of an expected set. In order to be effective, you need to override the macro `allowed_ssh_hosts` in a user rules file. [[#321](https://github.com/draios/falco/pull/321)]\n* New rule `Unexpected K8s NodePort Connection` detects atte",
                    "rendered": {
                      "text": "https://github.com/draios/falco/pull/324)]\n* Various FP fixes from users. [[#321](https://github.com/draios/falco/pull/321)] [[#326](https://github.com/draios/falco/pull/326)] [[#344](https://github.com/draios/falco/pull/344)] [[#350](https://github.com/draios/falco/pull/350)]\n* New rule `Disallowed SSH Connection` detects attempts ssh connection attempts to hosts outside of an expected set. In order to be effective, you need to override the macro `allowed_ssh_hosts` in a user rules file. [[#321](https://github.com/draios/falco/pull/321)]\n* New rule `Unexpected K8s NodePort Connection` detects atte",
                      "markdown": "`https://github.com/draios/falco/pull/324)]\n* Various FP fixes from users. [[#321](https://github.com/draios/falco/pull/321)] [[#326](https://github.com/draios/falco/pull/326)] [[#344](https://github.com/draios/falco/pull/344)] [[#350](https://github.com/draios/falco/pull/350)]\n* New rule `Disallowed SSH Connection` detects attempts ssh connection attempts to hosts outside of an expected set. In order to be effective, you need to override the macro `allowed_ssh_hosts` in a user rules file. [[#321](https://github.com/draios/falco/pull/321)]\n* New rule `Unexpected K8s NodePort Connection` detects atte`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2566,
                  "startColumn": 72,
                  "endLine": 2566,
                  "endColumn": 80,
                  "snippet": {
                    "text": " multiple rules files at once. [[#329](https://github.com/draios/falco/pull/329)]\n* When run with `-v`, falco will print *dangling* macros/lists that are not used by any rules. [[#329](https://github.com/draios/falco/pull/329)]\n* Add an example demonstrating cryptomining attack that exploits an open docker daemon using host mounts. [[#336](https://github.com/draios/falco/pull/336)]\n* New falco.yaml option `json_include_output_property` controls whether the formatted string \"output\" is included in the json object when json output is enabled. [[#342](https://github.com/draios/falco/pull/342)]\n* Centrali",
                    "rendered": {
                      "text": " multiple rules files at once. [[#329](https://github.com/draios/falco/pull/329)]\n* When run with `-v`, falco will print *dangling* macros/lists that are not used by any rules. [[#329](https://github.com/draios/falco/pull/329)]\n* Add an example demonstrating cryptomining attack that exploits an open docker daemon using host mounts. [[#336](https://github.com/draios/falco/pull/336)]\n* New falco.yaml option `json_include_output_property` controls whether the formatted string \"output\" is included in the json object when json output is enabled. [[#342](https://github.com/draios/falco/pull/342)]\n* Centrali",
                      "markdown": "` multiple rules files at once. [[#329](https://github.com/draios/falco/pull/329)]\n* When run with `-v`, falco will print *dangling* macros/lists that are not used by any rules. [[#329](https://github.com/draios/falco/pull/329)]\n* Add an example demonstrating cryptomining attack that exploits an open docker daemon using host mounts. [[#336](https://github.com/draios/falco/pull/336)]\n* New falco.yaml option `json_include_output_property` controls whether the formatted string \"output\" is included in the json object when json output is enabled. [[#342](https://github.com/draios/falco/pull/342)]\n* Centrali`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2563,
                  "startColumn": 28,
                  "endLine": 2563,
                  "endColumn": 36,
                  "snippet": {
                    "text": "https://github.com/draios/falco/issues/266)]\n* To improve resource usage, further restrict the set of system calls available to falco [[#351](https://github.com/draios/falco/pull/351)] [[draios/sysdig#1105](https://github.com/draios/sysdig/pull/1105)]\n\n### Minor Changes\n\n* Add gdb to the development Docker image (sysdig/falco:dev) to aid in debugging. [[#323](https://github.com/draios/falco/pull/323)]\n* You can now specify -V multiple times on the command line to validate multiple rules files at once. [[#329](https://github.com/draios/falco/pull/329)]\n* When run with `-v`, falco will print *dangling* ",
                    "rendered": {
                      "text": "https://github.com/draios/falco/issues/266)]\n* To improve resource usage, further restrict the set of system calls available to falco [[#351](https://github.com/draios/falco/pull/351)] [[draios/sysdig#1105](https://github.com/draios/sysdig/pull/1105)]\n\n### Minor Changes\n\n* Add gdb to the development Docker image (sysdig/falco:dev) to aid in debugging. [[#323](https://github.com/draios/falco/pull/323)]\n* You can now specify -V multiple times on the command line to validate multiple rules files at once. [[#329](https://github.com/draios/falco/pull/329)]\n* When run with `-v`, falco will print *dangling* ",
                      "markdown": "`https://github.com/draios/falco/issues/266)]\n* To improve resource usage, further restrict the set of system calls available to falco [[#351](https://github.com/draios/falco/pull/351)] [[draios/sysdig#1105](https://github.com/draios/sysdig/pull/1105)]\n\n### Minor Changes\n\n* Add gdb to the development Docker image (sysdig/falco:dev) to aid in debugging. [[#323](https://github.com/draios/falco/pull/323)]\n* You can now specify -V multiple times on the command line to validate multiple rules files at once. [[#329](https://github.com/draios/falco/pull/329)]\n* When run with `-v`, falco will print *dangling* `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2563,
                  "startColumn": 5,
                  "endLine": 2563,
                  "endColumn": 10,
                  "snippet": {
                    "text": "lco/pull/347)] [[#266](https://github.com/draios/falco/issues/266)]\n* To improve resource usage, further restrict the set of system calls available to falco [[#351](https://github.com/draios/falco/pull/351)] [[draios/sysdig#1105](https://github.com/draios/sysdig/pull/1105)]\n\n### Minor Changes\n\n* Add gdb to the development Docker image (sysdig/falco:dev) to aid in debugging. [[#323](https://github.com/draios/falco/pull/323)]\n* You can now specify -V multiple times on the command line to validate multiple rules files at once. [[#329](https://github.com/draios/falco/pull/329)]\n* When run with `-v`, fa",
                    "rendered": {
                      "text": "lco/pull/347)] [[#266](https://github.com/draios/falco/issues/266)]\n* To improve resource usage, further restrict the set of system calls available to falco [[#351](https://github.com/draios/falco/pull/351)] [[draios/sysdig#1105](https://github.com/draios/sysdig/pull/1105)]\n\n### Minor Changes\n\n* Add gdb to the development Docker image (sysdig/falco:dev) to aid in debugging. [[#323](https://github.com/draios/falco/pull/323)]\n* You can now specify -V multiple times on the command line to validate multiple rules files at once. [[#329](https://github.com/draios/falco/pull/329)]\n* When run with `-v`, fa",
                      "markdown": "`lco/pull/347)] [[#266](https://github.com/draios/falco/issues/266)]\n* To improve resource usage, further restrict the set of system calls available to falco [[#351](https://github.com/draios/falco/pull/351)] [[draios/sysdig#1105](https://github.com/draios/sysdig/pull/1105)]\n\n### Minor Changes\n\n* Add gdb to the development Docker image (sysdig/falco:dev) to aid in debugging. [[#323](https://github.com/draios/falco/pull/323)]\n* You can now specify -V multiple times on the command line to validate multiple rules files at once. [[#329](https://github.com/draios/falco/pull/329)]\n* When run with `-v`, fa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2557,
                  "startColumn": 13,
                  "endLine": 2557,
                  "endColumn": 21,
                  "snippet": {
                    "text": "rnel module) in falco conditions, so they can be included in `evt.type=<name>` conditions. [[#352](https://github.com/draios/falco/pull/352)]\n* When packaged as a container, start building kernel module with gcc 5.0 instead of gcc 4.9. [[#331](https://github.com/draios/falco/pull/331)]\n* New example puppet module for falco. [[#341](https://github.com/draios/falco/pull/341)] [[#115](https://github.com/draios/falco/issues/115)]\n* When signaled with `USR1`, falco will close/reopen log files. Include a [logrotate](https://github.com/logrotate/logrotate) example that shows how to use this feature for log r",
                    "rendered": {
                      "text": "rnel module) in falco conditions, so they can be included in `evt.type=<name>` conditions. [[#352](https://github.com/draios/falco/pull/352)]\n* When packaged as a container, start building kernel module with gcc 5.0 instead of gcc 4.9. [[#331](https://github.com/draios/falco/pull/331)]\n* New example puppet module for falco. [[#341](https://github.com/draios/falco/pull/341)] [[#115](https://github.com/draios/falco/issues/115)]\n* When signaled with `USR1`, falco will close/reopen log files. Include a [logrotate](https://github.com/logrotate/logrotate) example that shows how to use this feature for log r",
                      "markdown": "`rnel module) in falco conditions, so they can be included in `evt.type=<name>` conditions. [[#352](https://github.com/draios/falco/pull/352)]\n* When packaged as a container, start building kernel module with gcc 5.0 instead of gcc 4.9. [[#331](https://github.com/draios/falco/pull/331)]\n* New example puppet module for falco. [[#341](https://github.com/draios/falco/pull/341)] [[#115](https://github.com/draios/falco/issues/115)]\n* When signaled with `USR1`, falco will close/reopen log files. Include a [logrotate](https://github.com/logrotate/logrotate) example that shows how to use this feature for log r`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2543,
                  "startColumn": 16,
                  "endLine": 2543,
                  "endColumn": 23,
                  "snippet": {
                    "text": "sh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/falco/pull/366)]\n* Let program `id` open network connections [[#366](https://github.com/draios/falco/pull/366)]\n* Opt-in rule for protecting tomcat shell spawns [[#366](https://github.com/draios/falco/pull/366)]\n* New rule `Write below monitored",
                    "rendered": {
                      "text": "sh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/falco/pull/366)]\n* Let program `id` open network connections [[#366](https://github.com/draios/falco/pull/366)]\n* Opt-in rule for protecting tomcat shell spawns [[#366](https://github.com/draios/falco/pull/366)]\n* New rule `Write below monitored",
                      "markdown": "`sh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/falco/pull/366)]\n* Let program `id` open network connections [[#366](https://github.com/draios/falco/pull/366)]\n* Opt-in rule for protecting tomcat shell spawns [[#366](https://github.com/draios/falco/pull/366)]\n* New rule `Write below monitored`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2542,
                  "startColumn": 1,
                  "endLine": 2542,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ogspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/falco/pull/366)]\n* Let program `id` open network connections [[#366](https://github.com/draios/falco/pull/366)]\n* Opt-in rule for protec",
                    "rendered": {
                      "text": "ogspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/falco/pull/366)]\n* Let program `id` open network connections [[#366](https://github.com/draios/falco/pull/366)]\n* Opt-in rule for protec",
                      "markdown": "`ogspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/falco/pull/366)]\n* Let program `id` open network connections [[#366](https://github.com/draios/falco/pull/366)]\n* Opt-in rule for protec`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2541,
                  "startColumn": 1,
                  "endLine": 2541,
                  "endColumn": 9,
                  "snippet": {
                    "text": "388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp agent, gliderlabs logspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/f",
                    "rendered": {
                      "text": "388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp agent, gliderlabs logspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/f",
                      "markdown": "`388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp agent, gliderlabs logspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/draios/falco/issues/387)]\n* Expand the set of shell spawning programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional mysql programs/directories [[#366](https://github.com/draios/f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2539,
                  "startColumn": 56,
                  "endLine": 2539,
                  "endColumn": 64,
                  "snippet": {
                    "text": "388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp agent, gliderlabs logspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/drai",
                    "rendered": {
                      "text": "388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp agent, gliderlabs logspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/drai",
                      "markdown": "`388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp agent, gliderlabs logspout [[#388](https://github.com/draios/falco/pull/388)]\n* Let coreos update-ssh-keys write to /home/core/.ssh [[#388](https://github.com/draios/falco/pull/388)]\n* Expand coverage for MS OMS [[#388](https://github.com/draios/falco/issues/388)] [[#387](https://github.com/drai`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2537,
                  "startColumn": 1,
                  "endLine": 2537,
                  "endColumn": 9,
                  "snippet": {
                    "text": "hub.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp age",
                    "rendered": {
                      "text": "hub.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp age",
                      "markdown": "`hub.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https://github.com/draios/falco/pull/388)]\n* Add additional trusted containers: openshift, datadog, docker ucp age`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2536,
                  "startColumn": 1,
                  "endLine": 2536,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ditional package management programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https:/",
                    "rendered": {
                      "text": "ditional package management programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https:/",
                      "markdown": "`ditional package management programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/files [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Let pam-config read sensitive files [[#388](https:/`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2535,
                  "startColumn": 1,
                  "endLine": 2535,
                  "endColumn": 9,
                  "snippet": {
                    "text": "s://github.com/draios/falco/issues/392)]\n\n### Rule Changes\n\n* Add additional binary writing programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional package management programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/f",
                    "rendered": {
                      "text": "s://github.com/draios/falco/issues/392)]\n\n### Rule Changes\n\n* Add additional binary writing programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional package management programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/f",
                      "markdown": "`s://github.com/draios/falco/issues/392)]\n\n### Rule Changes\n\n* Add additional binary writing programs [[#366](https://github.com/draios/falco/pull/366)]\n* Add additional package management programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand write_below_etc handling for additional programs [[#388](https://github.com/draios/falco/pull/388)] [[#366](https://github.com/draios/falco/pull/366)]\n* Expand set of programs allowed to write to `/etc/pki` [[#388](https://github.com/draios/falco/pull/388)]\n* Expand set of root written directories/f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2528,
                  "startColumn": 14,
                  "endLine": 2528,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n* Ensure all rules are enabled by default [[#379](https://github.com/draios/falco/pull/379)]\n* Fix libcurl compilation problems [[#374](https://github.com/draios/falco/pull/374)]\n* Add gcc-6 to docker container, which improves compatibility when building kernel module [[#382](https://github.com/draios/falco/pull/382)] [[#371](https://github.com/draios/falco/issues/371)]\n* Ensure the /lib/modules symlink to /host/lib/modules is set correctly [[#392](https://github.com/draios/falco/issues/392)]\n\n### Rule Changes\n",
                    "rendered": {
                      "text": "\n* Ensure all rules are enabled by default [[#379](https://github.com/draios/falco/pull/379)]\n* Fix libcurl compilation problems [[#374](https://github.com/draios/falco/pull/374)]\n* Add gcc-6 to docker container, which improves compatibility when building kernel module [[#382](https://github.com/draios/falco/pull/382)] [[#371](https://github.com/draios/falco/issues/371)]\n* Ensure the /lib/modules symlink to /host/lib/modules is set correctly [[#392](https://github.com/draios/falco/issues/392)]\n\n### Rule Changes\n",
                      "markdown": "`\n* Ensure all rules are enabled by default [[#379](https://github.com/draios/falco/pull/379)]\n* Fix libcurl compilation problems [[#374](https://github.com/draios/falco/pull/374)]\n* Add gcc-6 to docker container, which improves compatibility when building kernel module [[#382](https://github.com/draios/falco/pull/382)] [[#371](https://github.com/draios/falco/issues/371)]\n* Ensure the /lib/modules symlink to /host/lib/modules is set correctly [[#392](https://github.com/draios/falco/issues/392)]\n\n### Rule Changes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2495,
                  "startColumn": 42,
                  "endLine": 2495,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n### Bug Fixes\n\n* Better control of specifying location of lua source code [[#406](https://github.com/draios/falco/pull/406)]\n\n### Rule Changes\n\n",
                    "rendered": {
                      "text": "\n### Bug Fixes\n\n* Better control of specifying location of lua source code [[#406](https://github.com/draios/falco/pull/406)]\n\n### Rule Changes\n\n",
                      "markdown": "`\n### Bug Fixes\n\n* Better control of specifying location of lua source code [[#406](https://github.com/draios/falco/pull/406)]\n\n### Rule Changes\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2490,
                  "startColumn": 25,
                  "endLine": 2490,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n### Minor Changes\n\n* Upgrade zlib to 1.2.11, openssl to 1.0.2n, and libcurl to 7.60.0 to address software vulnerabilities [[#402](https://github.com/draios/falco/pull/402)]\n* New `endswith` operator can be used for suffix matching on strings [[#sysdig/1209](https://github.com/draios/sysdig/pull/1209)]\n\n### Bug Fixes\n",
                    "rendered": {
                      "text": "\n### Minor Changes\n\n* Upgrade zlib to 1.2.11, openssl to 1.0.2n, and libcurl to 7.60.0 to address software vulnerabilities [[#402](https://github.com/draios/falco/pull/402)]\n* New `endswith` operator can be used for suffix matching on strings [[#sysdig/1209](https://github.com/draios/sysdig/pull/1209)]\n\n### Bug Fixes\n",
                      "markdown": "`\n### Minor Changes\n\n* Upgrade zlib to 1.2.11, openssl to 1.0.2n, and libcurl to 7.60.0 to address software vulnerabilities [[#402](https://github.com/draios/falco/pull/402)]\n* New `endswith` operator can be used for suffix matching on strings [[#sysdig/1209](https://github.com/draios/sysdig/pull/1209)]\n\n### Bug Fixes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2486,
                  "startColumn": 150,
                  "endLine": 2486,
                  "endColumn": 156,
                  "snippet": {
                    "text": "connect and fd.sip.name=github.com`. [[#412](https://github.com/draios/falco/pull/412)] [[#sysdig/1213](https://github.com/draios/sysdig/pull/1213)]\n\n* New filterchecks `user.loginuid` and `user.loginname` can be used to match the login uid, which stays consistent across sudo/su. This can be used to find the actual user running a given process [[#sysdig/1189](https://github.com/draios/sysdig/pull/1189)]\n\n### Minor Changes\n\n* Upgrade zlib to 1.2.11, openssl to 1.0.2n, and libcurl to 7.60.0 to address software vulnerabilities [[#402](https://github.com/draios/falco/pull/402)]\n* New `endswith` operator",
                    "rendered": {
                      "text": "connect and fd.sip.name=github.com`. [[#412](https://github.com/draios/falco/pull/412)] [[#sysdig/1213](https://github.com/draios/sysdig/pull/1213)]\n\n* New filterchecks `user.loginuid` and `user.loginname` can be used to match the login uid, which stays consistent across sudo/su. This can be used to find the actual user running a given process [[#sysdig/1189](https://github.com/draios/sysdig/pull/1189)]\n\n### Minor Changes\n\n* Upgrade zlib to 1.2.11, openssl to 1.0.2n, and libcurl to 7.60.0 to address software vulnerabilities [[#402](https://github.com/draios/falco/pull/402)]\n* New `endswith` operator",
                      "markdown": "`connect and fd.sip.name=github.com`. [[#412](https://github.com/draios/falco/pull/412)] [[#sysdig/1213](https://github.com/draios/sysdig/pull/1213)]\n\n* New filterchecks `user.loginuid` and `user.loginname` can be used to match the login uid, which stays consistent across sudo/su. This can be used to find the actual user running a given process [[#sysdig/1189](https://github.com/draios/sysdig/pull/1189)]\n\n### Minor Changes\n\n* Upgrade zlib to 1.2.11, openssl to 1.0.2n, and libcurl to 7.60.0 to address software vulnerabilities [[#402](https://github.com/draios/falco/pull/402)]\n* New `endswith` operator`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2484,
                  "startColumn": 130,
                  "endLine": 2484,
                  "endColumn": 134,
                  "snippet": {
                    "text": " Changes\n\n* Improved IPv6 Support to fully support use of IPv6 addresses in events, connections and filters [[#sysdig/1204](https://github.com/draios/sysdig/pull/1204)]\n\n* Ability to associate connections with dns names: new filterchecks `fd.*ip.name` allow looking up the DNS name for a connection's IP address. This can be used to identify or restrict connections by dns names e.g. `evt.type=connect and fd.sip.name=github.com`. [[#412](https://github.com/draios/falco/pull/412)] [[#sysdig/1213](https://github.com/draios/sysdig/pull/1213)]\n\n* New filterchecks `user.loginuid` and `user.loginname` can ",
                    "rendered": {
                      "text": " Changes\n\n* Improved IPv6 Support to fully support use of IPv6 addresses in events, connections and filters [[#sysdig/1204](https://github.com/draios/sysdig/pull/1204)]\n\n* Ability to associate connections with dns names: new filterchecks `fd.*ip.name` allow looking up the DNS name for a connection's IP address. This can be used to identify or restrict connections by dns names e.g. `evt.type=connect and fd.sip.name=github.com`. [[#412](https://github.com/draios/falco/pull/412)] [[#sysdig/1213](https://github.com/draios/sysdig/pull/1213)]\n\n* New filterchecks `user.loginuid` and `user.loginname` can ",
                      "markdown": "` Changes\n\n* Improved IPv6 Support to fully support use of IPv6 addresses in events, connections and filters [[#sysdig/1204](https://github.com/draios/sysdig/pull/1204)]\n\n* Ability to associate connections with dns names: new filterchecks `fd.*ip.name` allow looking up the DNS name for a connection's IP address. This can be used to identify or restrict connections by dns names e.g. `evt.type=connect and fd.sip.name=github.com`. [[#412](https://github.com/draios/falco/pull/412)] [[#sysdig/1213](https://github.com/draios/sysdig/pull/1213)]\n\n* New filterchecks `user.loginuid` and `user.loginname` can `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2474,
                  "startColumn": 37,
                  "endLine": 2474,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n### Bug Fixes\n\n* Fig regression in libcurl configure script [[#416](https://github.com/draios/falco/pull/416)]\n\n## v0.12.0\n\n",
                    "rendered": {
                      "text": "\n### Bug Fixes\n\n* Fig regression in libcurl configure script [[#416](https://github.com/draios/falco/pull/416)]\n\n## v0.12.0\n\n",
                      "markdown": "`\n### Bug Fixes\n\n* Fig regression in libcurl configure script [[#416](https://github.com/draios/falco/pull/416)]\n\n## v0.12.0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2458,
                  "startColumn": 51,
                  "endLine": 2458,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n* Links cleanup related to the draios/falco -> falcosecurity/falco move [[#447](https://github.com/falcosecurity/falco/pull/447)]\n\n* Properly load/unload kernel module when the falco service is started/stopped [[#459](https://github.com/falcosecurity/falco/pull/459)] [[#418](https://github.com/falcosecurity/falco/issues/418)]\n\n### Rule Changes\n\n",
                    "rendered": {
                      "text": "\n* Links cleanup related to the draios/falco -> falcosecurity/falco move [[#447](https://github.com/falcosecurity/falco/pull/447)]\n\n* Properly load/unload kernel module when the falco service is started/stopped [[#459](https://github.com/falcosecurity/falco/pull/459)] [[#418](https://github.com/falcosecurity/falco/issues/418)]\n\n### Rule Changes\n\n",
                      "markdown": "`\n* Links cleanup related to the draios/falco -> falcosecurity/falco move [[#447](https://github.com/falcosecurity/falco/pull/447)]\n\n* Properly load/unload kernel module when the falco service is started/stopped [[#459](https://github.com/falcosecurity/falco/pull/459)] [[#418](https://github.com/falcosecurity/falco/issues/418)]\n\n### Rule Changes\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2452,
                  "startColumn": 21,
                  "endLine": 2452,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n* The reference integration of falco into a action engine now supports aws actions like lambda, etc. [[#460](https://github.com/falcosecurity/falco/pull/460)]\n\n* Add netcat to falco docker images, which allows easier integration of program outputs to external servers [[#456](https://github.com/falcosecurity/falco/pull/456)] [[#433](https://github.com/falcosecurity/falco/issues/433)]\n\n### Bug Fixes\n\n",
                    "rendered": {
                      "text": "\n* The reference integration of falco into a action engine now supports aws actions like lambda, etc. [[#460](https://github.com/falcosecurity/falco/pull/460)]\n\n* Add netcat to falco docker images, which allows easier integration of program outputs to external servers [[#456](https://github.com/falcosecurity/falco/pull/456)] [[#433](https://github.com/falcosecurity/falco/issues/433)]\n\n### Bug Fixes\n\n",
                      "markdown": "`\n* The reference integration of falco into a action engine now supports aws actions like lambda, etc. [[#460](https://github.com/falcosecurity/falco/pull/460)]\n\n* Add netcat to falco docker images, which allows easier integration of program outputs to external servers [[#456](https://github.com/falcosecurity/falco/pull/456)] [[#433](https://github.com/falcosecurity/falco/issues/433)]\n\n### Bug Fixes\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2394,
                  "startColumn": 194,
                  "endLine": 2394,
                  "endColumn": 202,
                  "snippet": {
                    "text": "\n* Remove FPs for `Launch Sensitive Mount Container` rule [[#509](https://github.com/falcosecurity/falco/pull/509/files)]\n\n* Update Container rules/macros to use the more reliable `container.image.{repository,tag}` that always return the repository/tag of an image instead of `container.image`, which may not for some docker daemon versions. [[#513](https://github.com/falcosecurity/falco/pull/513)]\n\n## v0.13.1\n\n",
                    "rendered": {
                      "text": "\n* Remove FPs for `Launch Sensitive Mount Container` rule [[#509](https://github.com/falcosecurity/falco/pull/509/files)]\n\n* Update Container rules/macros to use the more reliable `container.image.{repository,tag}` that always return the repository/tag of an image instead of `container.image`, which may not for some docker daemon versions. [[#513](https://github.com/falcosecurity/falco/pull/513)]\n\n## v0.13.1\n\n",
                      "markdown": "`\n* Remove FPs for `Launch Sensitive Mount Container` rule [[#509](https://github.com/falcosecurity/falco/pull/509/files)]\n\n* Update Container rules/macros to use the more reliable `container.image.{repository,tag}` that always return the repository/tag of an image instead of `container.image`, which may not for some docker daemon versions. [[#513](https://github.com/falcosecurity/falco/pull/513)]\n\n## v0.13.1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2392,
                  "startColumn": 34,
                  "endLine": 2392,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n### Rule Changes\n\n* Remove FPs for `Launch Sensitive Mount Container` rule [[#509](https://github.com/falcosecurity/falco/pull/509/files)]\n\n* Update Container rules/macros to use the more reliable `container.image.{repository,tag}` that always return the repository/tag of an image instead of `container.image`, which may not for some docker daemon versions. [[#513](https://github.com/falcosecurity/falco/pull/513)]\n\n",
                    "rendered": {
                      "text": "\n### Rule Changes\n\n* Remove FPs for `Launch Sensitive Mount Container` rule [[#509](https://github.com/falcosecurity/falco/pull/509/files)]\n\n* Update Container rules/macros to use the more reliable `container.image.{repository,tag}` that always return the repository/tag of an image instead of `container.image`, which may not for some docker daemon versions. [[#513](https://github.com/falcosecurity/falco/pull/513)]\n\n",
                      "markdown": "`\n### Rule Changes\n\n* Remove FPs for `Launch Sensitive Mount Container` rule [[#509](https://github.com/falcosecurity/falco/pull/509/files)]\n\n* Update Container rules/macros to use the more reliable `container.image.{repository,tag}` that always return the repository/tag of an image instead of `container.image`, which may not for some docker daemon versions. [[#513](https://github.com/falcosecurity/falco/pull/513)]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2378,
                  "startColumn": 1,
                  "endLine": 2378,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n* Fix kernel module builds when running on centos as a container by installing gcc 5 by hand instead of directly from debian/unstable. [[#501](https://github.com/falcosecurity/falco/pull/501)]\n\n* Mount `/etc` when running as a container, which allows container to build kernel module/ebpf program on COS/Minikube. [[#475](https://github.com/falcosecurity/falco/pull/475)]\n\n* Improved way to specify the source of generic event objects [[#480](https://github.com/falcosecurity/falco/pull/480)]\n\n",
                    "rendered": {
                      "text": "\n* Fix kernel module builds when running on centos as a container by installing gcc 5 by hand instead of directly from debian/unstable. [[#501](https://github.com/falcosecurity/falco/pull/501)]\n\n* Mount `/etc` when running as a container, which allows container to build kernel module/ebpf program on COS/Minikube. [[#475](https://github.com/falcosecurity/falco/pull/475)]\n\n* Improved way to specify the source of generic event objects [[#480](https://github.com/falcosecurity/falco/pull/480)]\n\n",
                      "markdown": "`\n* Fix kernel module builds when running on centos as a container by installing gcc 5 by hand instead of directly from debian/unstable. [[#501](https://github.com/falcosecurity/falco/pull/501)]\n\n* Mount `/etc` when running as a container, which allows container to build kernel module/ebpf program on COS/Minikube. [[#475](https://github.com/falcosecurity/falco/pull/475)]\n\n* Improved way to specify the source of generic event objects [[#480](https://github.com/falcosecurity/falco/pull/480)]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2362,
                  "startColumn": 384,
                  "endLine": 2362,
                  "endColumn": 390,
                  "snippet": {
                    "text": "ion* that represents the fields they support. Similarly, rules files have an optional *required_engine_version: NNN* object that names the minimum engine version required to read that rules file. Any time the engine adds new fields, event sources, etc, the engine version will be incremented, and any time a rules file starts using new fields, event sources, etc, the required engine version will be incremented. [[#492](https://github.com/falcosecurity/falco/pull/492)]\n\n* Allow SSL for K8s audit endpoint/embedded webserver [[#471](https://github.com/falcosecurity/falco/pull/471)]\n\n* Add stale issues bo",
                    "rendered": {
                      "text": "ion* that represents the fields they support. Similarly, rules files have an optional *required_engine_version: NNN* object that names the minimum engine version required to read that rules file. Any time the engine adds new fields, event sources, etc, the engine version will be incremented, and any time a rules file starts using new fields, event sources, etc, the required engine version will be incremented. [[#492](https://github.com/falcosecurity/falco/pull/492)]\n\n* Allow SSL for K8s audit endpoint/embedded webserver [[#471](https://github.com/falcosecurity/falco/pull/471)]\n\n* Add stale issues bo",
                      "markdown": "`ion* that represents the fields they support. Similarly, rules files have an optional *required_engine_version: NNN* object that names the minimum engine version required to read that rules file. Any time the engine adds new fields, event sources, etc, the engine version will be incremented, and any time a rules file starts using new fields, event sources, etc, the required engine version will be incremented. [[#492](https://github.com/falcosecurity/falco/pull/492)]\n\n* Allow SSL for K8s audit endpoint/embedded webserver [[#471](https://github.com/falcosecurity/falco/pull/471)]\n\n* Add stale issues bo`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2362,
                  "startColumn": 283,
                  "endLine": 2362,
                  "endColumn": 289,
                  "snippet": {
                    "text": "# Major Changes\n\n* Rules versioning support: The falco engine and executable now have an *engine version* that represents the fields they support. Similarly, rules files have an optional *required_engine_version: NNN* object that names the minimum engine version required to read that rules file. Any time the engine adds new fields, event sources, etc, the engine version will be incremented, and any time a rules file starts using new fields, event sources, etc, the required engine version will be incremented. [[#492](https://github.com/falcosecurity/falco/pull/492)]\n\n* Allow SSL for K8s audit endpoin",
                    "rendered": {
                      "text": "# Major Changes\n\n* Rules versioning support: The falco engine and executable now have an *engine version* that represents the fields they support. Similarly, rules files have an optional *required_engine_version: NNN* object that names the minimum engine version required to read that rules file. Any time the engine adds new fields, event sources, etc, the engine version will be incremented, and any time a rules file starts using new fields, event sources, etc, the required engine version will be incremented. [[#492](https://github.com/falcosecurity/falco/pull/492)]\n\n* Allow SSL for K8s audit endpoin",
                      "markdown": "`# Major Changes\n\n* Rules versioning support: The falco engine and executable now have an *engine version* that represents the fields they support. Similarly, rules files have an optional *required_engine_version: NNN* object that names the minimum engine version required to read that rules file. Any time the engine adds new fields, event sources, etc, the engine version will be incremented, and any time a rules file starts using new fields, event sources, etc, the required engine version will be incremented. [[#492](https://github.com/falcosecurity/falco/pull/492)]\n\n* Allow SSL for K8s audit endpoin`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2338,
                  "startColumn": 5,
                  "endLine": 2338,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n* Allow docker's \"exe\" (usually part of docker save/load) to write to many filesystem locations [[#552](https://github.com/falcosecurity/falco/pull/552)]\n\n* Let puppet write below /etc [[#563](https://github.com/falcosecurity/falco/pull/563)\n\n* Add new `user_known_write_root_conditions`, `user_known_non_sudo_setuid_conditions`, and `user_known_write_monitored_dir_conditions` macros to allow those rules to be easily customized in user rules files [[#563](https://github.com/falcosecurity/falco/pull/563)] [[#566](https://github.com/falcosecurity/falco/pull/566)]\n\n",
                    "rendered": {
                      "text": "\n* Allow docker's \"exe\" (usually part of docker save/load) to write to many filesystem locations [[#552](https://github.com/falcosecurity/falco/pull/552)]\n\n* Let puppet write below /etc [[#563](https://github.com/falcosecurity/falco/pull/563)\n\n* Add new `user_known_write_root_conditions`, `user_known_non_sudo_setuid_conditions`, and `user_known_write_monitored_dir_conditions` macros to allow those rules to be easily customized in user rules files [[#563](https://github.com/falcosecurity/falco/pull/563)] [[#566](https://github.com/falcosecurity/falco/pull/566)]\n\n",
                      "markdown": "`\n* Allow docker's \"exe\" (usually part of docker save/load) to write to many filesystem locations [[#552](https://github.com/falcosecurity/falco/pull/552)]\n\n* Let puppet write below /etc [[#563](https://github.com/falcosecurity/falco/pull/563)\n\n* Add new `user_known_write_root_conditions`, `user_known_non_sudo_setuid_conditions`, and `user_known_write_monitored_dir_conditions` macros to allow those rules to be easily customized in user rules files [[#563](https://github.com/falcosecurity/falco/pull/563)] [[#566](https://github.com/falcosecurity/falco/pull/566)]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2336,
                  "startColumn": 39,
                  "endLine": 2336,
                  "endColumn": 47,
                  "snippet": {
                    "text": "tect bash history deletion`, `Create Hidden Files or Directories` look for additional common follow-on activity you might see from an attacker. [[#578](https://github.com/falcosecurity/falco/pull/578)] [[#580](https://github.com/falcosecurity/falco/pull/580)]\n\n* Allow docker's \"exe\" (usually part of docker save/load) to write to many filesystem locations [[#552](https://github.com/falcosecurity/falco/pull/552)]\n\n* Let puppet write below /etc [[#563](https://github.com/falcosecurity/falco/pull/563)\n\n* Add new `user_known_write_root_conditions`, `user_known_non_sudo_setuid_conditions`, and `user_known_w",
                    "rendered": {
                      "text": "tect bash history deletion`, `Create Hidden Files or Directories` look for additional common follow-on activity you might see from an attacker. [[#578](https://github.com/falcosecurity/falco/pull/578)] [[#580](https://github.com/falcosecurity/falco/pull/580)]\n\n* Allow docker's \"exe\" (usually part of docker save/load) to write to many filesystem locations [[#552](https://github.com/falcosecurity/falco/pull/552)]\n\n* Let puppet write below /etc [[#563](https://github.com/falcosecurity/falco/pull/563)\n\n* Add new `user_known_write_root_conditions`, `user_known_non_sudo_setuid_conditions`, and `user_known_w",
                      "markdown": "`tect bash history deletion`, `Create Hidden Files or Directories` look for additional common follow-on activity you might see from an attacker. [[#578](https://github.com/falcosecurity/falco/pull/578)] [[#580](https://github.com/falcosecurity/falco/pull/580)]\n\n* Allow docker's \"exe\" (usually part of docker save/load) to write to many filesystem locations [[#552](https://github.com/falcosecurity/falco/pull/552)]\n\n* Let puppet write below /etc [[#563](https://github.com/falcosecurity/falco/pull/563)\n\n* Add new `user_known_write_root_conditions`, `user_known_non_sudo_setuid_conditions`, and `user_known_w`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2334,
                  "startColumn": 164,
                  "endLine": 2334,
                  "endColumn": 170,
                  "snippet": {
                    "text": "th-sysdig-falco/). [[#575](https://github.com/falcosecurity/falco/pull/575)] [[#578](https://github.com/falcosecurity/falco/pull/578)]\n\n* New rules for additional use cases: New rules `Schedule Cron Jobs`, `Update Package Repository`, `Remove Bulk Data from Disk`, `Set Setuid or Setgid bit`, `Detect bash history deletion`, `Create Hidden Files or Directories` look for additional common follow-on activity you might see from an attacker. [[#578](https://github.com/falcosecurity/falco/pull/578)] [[#580](https://github.com/falcosecurity/falco/pull/580)]\n\n* Allow docker's \"exe\" (usually part of docker sa",
                    "rendered": {
                      "text": "th-sysdig-falco/). [[#575](https://github.com/falcosecurity/falco/pull/575)] [[#578](https://github.com/falcosecurity/falco/pull/578)]\n\n* New rules for additional use cases: New rules `Schedule Cron Jobs`, `Update Package Repository`, `Remove Bulk Data from Disk`, `Set Setuid or Setgid bit`, `Detect bash history deletion`, `Create Hidden Files or Directories` look for additional common follow-on activity you might see from an attacker. [[#578](https://github.com/falcosecurity/falco/pull/578)] [[#580](https://github.com/falcosecurity/falco/pull/580)]\n\n* Allow docker's \"exe\" (usually part of docker sa",
                      "markdown": "`th-sysdig-falco/). [[#575](https://github.com/falcosecurity/falco/pull/575)] [[#578](https://github.com/falcosecurity/falco/pull/578)]\n\n* New rules for additional use cases: New rules `Schedule Cron Jobs`, `Update Package Repository`, `Remove Bulk Data from Disk`, `Set Setuid or Setgid bit`, `Detect bash history deletion`, `Create Hidden Files or Directories` look for additional common follow-on activity you might see from an attacker. [[#578](https://github.com/falcosecurity/falco/pull/578)] [[#580](https://github.com/falcosecurity/falco/pull/580)]\n\n* Allow docker's \"exe\" (usually part of docker sa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2328,
                  "startColumn": 30,
                  "endLine": 2328,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n* Fix regression that broke json output [[#581](https://github.com/falcosecurity/falco/pull/581)]\n\n* Fix errors when building via docker from MacOS [[#582](https://github.com/falcosecurity/falco/pull/582)]\n\n### Rule Changes\n\n",
                    "rendered": {
                      "text": "\n* Fix regression that broke json output [[#581](https://github.com/falcosecurity/falco/pull/581)]\n\n* Fix errors when building via docker from MacOS [[#582](https://github.com/falcosecurity/falco/pull/582)]\n\n### Rule Changes\n\n",
                      "markdown": "`\n* Fix regression that broke json output [[#581](https://github.com/falcosecurity/falco/pull/581)]\n\n* Fix errors when building via docker from MacOS [[#582](https://github.com/falcosecurity/falco/pull/582)]\n\n### Rule Changes\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2314,
                  "startColumn": 278,
                  "endLine": 2314,
                  "endColumn": 286,
                  "snippet": {
                    "text": "ity/falco/pull/518)]\n\n* Docker-based builder/tester: You can now build Falco using the [falco-builder](https://falco.org/docs/source/#build-using-falco-builder-container) docker image, and run regression tests using the [falco-tester](https://falco.org/docs/source/#test-using-falco-tester-container) docker image. [[#522](https://github.com/falcosecurity/falco/pull/522)] [[#584](https://github.com/falcosecurity/falco/pull/584)]\n\n* Several small docs changes to improve clarity and readability [[#524](https://github.com/falcosecurity/falco/pull/524)] [[#540](https://github.com/falcosecurity/falco/pull/54",
                    "rendered": {
                      "text": "ity/falco/pull/518)]\n\n* Docker-based builder/tester: You can now build Falco using the [falco-builder](https://falco.org/docs/source/#build-using-falco-builder-container) docker image, and run regression tests using the [falco-tester](https://falco.org/docs/source/#test-using-falco-tester-container) docker image. [[#522](https://github.com/falcosecurity/falco/pull/522)] [[#584](https://github.com/falcosecurity/falco/pull/584)]\n\n* Several small docs changes to improve clarity and readability [[#524](https://github.com/falcosecurity/falco/pull/524)] [[#540](https://github.com/falcosecurity/falco/pull/54",
                      "markdown": "`ity/falco/pull/518)]\n\n* Docker-based builder/tester: You can now build Falco using the [falco-builder](https://falco.org/docs/source/#build-using-falco-builder-container) docker image, and run regression tests using the [falco-tester](https://falco.org/docs/source/#test-using-falco-tester-container) docker image. [[#522](https://github.com/falcosecurity/falco/pull/522)] [[#584](https://github.com/falcosecurity/falco/pull/584)]\n\n* Several small docs changes to improve clarity and readability [[#524](https://github.com/falcosecurity/falco/pull/524)] [[#540](https://github.com/falcosecurity/falco/pull/54`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2314,
                  "startColumn": 148,
                  "endLine": 2314,
                  "endColumn": 156,
                  "snippet": {
                    "text": "estamps in ISO-8601 w/ UTC, and use this format by default when running falco in a container [[#518](https://github.com/falcosecurity/falco/pull/518)]\n\n* Docker-based builder/tester: You can now build Falco using the [falco-builder](https://falco.org/docs/source/#build-using-falco-builder-container) docker image, and run regression tests using the [falco-tester](https://falco.org/docs/source/#test-using-falco-tester-container) docker image. [[#522](https://github.com/falcosecurity/falco/pull/522)] [[#584](https://github.com/falcosecurity/falco/pull/584)]\n\n* Several small docs changes to improve clarit",
                    "rendered": {
                      "text": "estamps in ISO-8601 w/ UTC, and use this format by default when running falco in a container [[#518](https://github.com/falcosecurity/falco/pull/518)]\n\n* Docker-based builder/tester: You can now build Falco using the [falco-builder](https://falco.org/docs/source/#build-using-falco-builder-container) docker image, and run regression tests using the [falco-tester](https://falco.org/docs/source/#test-using-falco-tester-container) docker image. [[#522](https://github.com/falcosecurity/falco/pull/522)] [[#584](https://github.com/falcosecurity/falco/pull/584)]\n\n* Several small docs changes to improve clarit",
                      "markdown": "`estamps in ISO-8601 w/ UTC, and use this format by default when running falco in a container [[#518](https://github.com/falcosecurity/falco/pull/518)]\n\n* Docker-based builder/tester: You can now build Falco using the [falco-builder](https://falco.org/docs/source/#build-using-falco-builder-container) docker image, and run regression tests using the [falco-tester](https://falco.org/docs/source/#test-using-falco-tester-container) docker image. [[#522](https://github.com/falcosecurity/falco/pull/522)] [[#584](https://github.com/falcosecurity/falco/pull/584)]\n\n* Several small docs changes to improve clarit`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2305,
                  "startColumn": 65,
                  "endLine": 2305,
                  "endColumn": 73,
                  "snippet": {
                    "text": "Move Kubernetes Response Engine to own repo: The Kubernetes Response Engine is now in its [own github repository](https://github.com/falcosecurity/kubernetes-response-engine). [[#539](https://github.com/falcosecurity/falco/pull/539)]\n\n* Updated Puppet Module: An all-new puppet module compatible with puppet 4 with a smoother installation process and updated package links. [[#537](https://github.com/falcosecurity/falco/pull/537)] [[#543](https://github.com/falcosecurity/falco/pull/543)] [[#546](https://github.com/falcosecurity/falco/pull/546)]\n\n* RHEL-based falco image: Provide dockerfiles that use RHEL",
                    "rendered": {
                      "text": "Move Kubernetes Response Engine to own repo: The Kubernetes Response Engine is now in its [own github repository](https://github.com/falcosecurity/kubernetes-response-engine). [[#539](https://github.com/falcosecurity/falco/pull/539)]\n\n* Updated Puppet Module: An all-new puppet module compatible with puppet 4 with a smoother installation process and updated package links. [[#537](https://github.com/falcosecurity/falco/pull/537)] [[#543](https://github.com/falcosecurity/falco/pull/543)] [[#546](https://github.com/falcosecurity/falco/pull/546)]\n\n* RHEL-based falco image: Provide dockerfiles that use RHEL",
                      "markdown": "`Move Kubernetes Response Engine to own repo: The Kubernetes Response Engine is now in its [own github repository](https://github.com/falcosecurity/kubernetes-response-engine). [[#539](https://github.com/falcosecurity/falco/pull/539)]\n\n* Updated Puppet Module: An all-new puppet module compatible with puppet 4 with a smoother installation process and updated package links. [[#537](https://github.com/falcosecurity/falco/pull/537)] [[#543](https://github.com/falcosecurity/falco/pull/543)] [[#546](https://github.com/falcosecurity/falco/pull/546)]\n\n* RHEL-based falco image: Provide dockerfiles that use RHEL`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2305,
                  "startColumn": 35,
                  "endLine": 2305,
                  "endColumn": 43,
                  "snippet": {
                    "text": "osecurity/falco/pull/523)]\n\n* Move Kubernetes Response Engine to own repo: The Kubernetes Response Engine is now in its [own github repository](https://github.com/falcosecurity/kubernetes-response-engine). [[#539](https://github.com/falcosecurity/falco/pull/539)]\n\n* Updated Puppet Module: An all-new puppet module compatible with puppet 4 with a smoother installation process and updated package links. [[#537](https://github.com/falcosecurity/falco/pull/537)] [[#543](https://github.com/falcosecurity/falco/pull/543)] [[#546](https://github.com/falcosecurity/falco/pull/546)]\n\n* RHEL-based falco image: Pro",
                    "rendered": {
                      "text": "osecurity/falco/pull/523)]\n\n* Move Kubernetes Response Engine to own repo: The Kubernetes Response Engine is now in its [own github repository](https://github.com/falcosecurity/kubernetes-response-engine). [[#539](https://github.com/falcosecurity/falco/pull/539)]\n\n* Updated Puppet Module: An all-new puppet module compatible with puppet 4 with a smoother installation process and updated package links. [[#537](https://github.com/falcosecurity/falco/pull/537)] [[#543](https://github.com/falcosecurity/falco/pull/543)] [[#546](https://github.com/falcosecurity/falco/pull/546)]\n\n* RHEL-based falco image: Pro",
                      "markdown": "`osecurity/falco/pull/523)]\n\n* Move Kubernetes Response Engine to own repo: The Kubernetes Response Engine is now in its [own github repository](https://github.com/falcosecurity/kubernetes-response-engine). [[#539](https://github.com/falcosecurity/falco/pull/539)]\n\n* Updated Puppet Module: An all-new puppet module compatible with puppet 4 with a smoother installation process and updated package links. [[#537](https://github.com/falcosecurity/falco/pull/537)] [[#543](https://github.com/falcosecurity/falco/pull/543)] [[#546](https://github.com/falcosecurity/falco/pull/546)]\n\n* RHEL-based falco image: Pro`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2305,
                  "startColumn": 9,
                  "endLine": 2305,
                  "endColumn": 17,
                  "snippet": {
                    "text": "3](https://github.com/falcosecurity/falco/pull/523)]\n\n* Move Kubernetes Response Engine to own repo: The Kubernetes Response Engine is now in its [own github repository](https://github.com/falcosecurity/kubernetes-response-engine). [[#539](https://github.com/falcosecurity/falco/pull/539)]\n\n* Updated Puppet Module: An all-new puppet module compatible with puppet 4 with a smoother installation process and updated package links. [[#537](https://github.com/falcosecurity/falco/pull/537)] [[#543](https://github.com/falcosecurity/falco/pull/543)] [[#546](https://github.com/falcosecurity/falco/pull/546)]\n\n* R",
                    "rendered": {
                      "text": "3](https://github.com/falcosecurity/falco/pull/523)]\n\n* Move Kubernetes Response Engine to own repo: The Kubernetes Response Engine is now in its [own github repository](https://github.com/falcosecurity/kubernetes-response-engine). [[#539](https://github.com/falcosecurity/falco/pull/539)]\n\n* Updated Puppet Module: An all-new puppet module compatible with puppet 4 with a smoother installation process and updated package links. [[#537](https://github.com/falcosecurity/falco/pull/537)] [[#543](https://github.com/falcosecurity/falco/pull/543)] [[#546](https://github.com/falcosecurity/falco/pull/546)]\n\n* R",
                      "markdown": "`3](https://github.com/falcosecurity/falco/pull/523)]\n\n* Move Kubernetes Response Engine to own repo: The Kubernetes Response Engine is now in its [own github repository](https://github.com/falcosecurity/kubernetes-response-engine). [[#539](https://github.com/falcosecurity/falco/pull/539)]\n\n* Updated Puppet Module: An all-new puppet module compatible with puppet 4 with a smoother installation process and updated package links. [[#537](https://github.com/falcosecurity/falco/pull/537)] [[#543](https://github.com/falcosecurity/falco/pull/543)] [[#546](https://github.com/falcosecurity/falco/pull/546)]\n\n* R`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2297,
                  "startColumn": 11,
                  "endLine": 2297,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ps://github.com/falcosecurity/falco/pull/591)] [[#599](https://github.com/falcosecurity/falco/pull/599)] [[#sysdig/1376](https://github.com/draios/sysdig/pull/1376)] [[#sysdig/1310](https://github.com/draios/sysdig/pull/1310)] [[#sysdig/1399](https://github.com/draios/sysdig/pull/1399)]\n\n* **Perform docker metadata fetches asynchronously**: When new containers are discovered, fetch metadata about the container asynchronously, which should significantly reduce the likelihood of dropped system call events. [[#sysdig/1326](https://github.com/draios/sysdig/pull/1326)] [[#550](https://github.com/falcosecur",
                    "rendered": {
                      "text": "ps://github.com/falcosecurity/falco/pull/591)] [[#599](https://github.com/falcosecurity/falco/pull/599)] [[#sysdig/1376](https://github.com/draios/sysdig/pull/1376)] [[#sysdig/1310](https://github.com/draios/sysdig/pull/1310)] [[#sysdig/1399](https://github.com/draios/sysdig/pull/1399)]\n\n* **Perform docker metadata fetches asynchronously**: When new containers are discovered, fetch metadata about the container asynchronously, which should significantly reduce the likelihood of dropped system call events. [[#sysdig/1326](https://github.com/draios/sysdig/pull/1326)] [[#550](https://github.com/falcosecur",
                      "markdown": "`ps://github.com/falcosecurity/falco/pull/591)] [[#599](https://github.com/falcosecurity/falco/pull/599)] [[#sysdig/1376](https://github.com/draios/sysdig/pull/1376)] [[#sysdig/1310](https://github.com/draios/sysdig/pull/1310)] [[#sysdig/1399](https://github.com/draios/sysdig/pull/1399)]\n\n* **Perform docker metadata fetches asynchronously**: When new containers are discovered, fetch metadata about the container asynchronously, which should significantly reduce the likelihood of dropped system call events. [[#sysdig/1326](https://github.com/draios/sysdig/pull/1326)] [[#550](https://github.com/falcosecur`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2285,
                  "startColumn": 49,
                  "endLine": 2285,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n* Additional `Write below etc` exceptions for nginx, rancher [[#637](https://github.com/falcosecurity/falco/pull/637)] [[#648](https://github.com/falcosecurity/falco/pull/648)] [[#652](https://github.com/falcosecurity/falco/pull/652)]\n\n* Add rules for running with IBM Cloud Kubernetes Service [[#634](https://github.com/falcosecurity/falco/pull/634)]\n\n## v0.15.0\n\n",
                    "rendered": {
                      "text": "\n* Additional `Write below etc` exceptions for nginx, rancher [[#637](https://github.com/falcosecurity/falco/pull/637)] [[#648](https://github.com/falcosecurity/falco/pull/648)] [[#652](https://github.com/falcosecurity/falco/pull/652)]\n\n* Add rules for running with IBM Cloud Kubernetes Service [[#634](https://github.com/falcosecurity/falco/pull/634)]\n\n## v0.15.0\n\n",
                      "markdown": "`\n* Additional `Write below etc` exceptions for nginx, rancher [[#637](https://github.com/falcosecurity/falco/pull/637)] [[#648](https://github.com/falcosecurity/falco/pull/648)] [[#652](https://github.com/falcosecurity/falco/pull/652)]\n\n* Add rules for running with IBM Cloud Kubernetes Service [[#634](https://github.com/falcosecurity/falco/pull/634)]\n\n## v0.15.0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2239,
                  "startColumn": 102,
                  "endLine": 2239,
                  "endColumn": 109,
                  "snippet": {
                    "text": "\n### Rule Changes\n\n* Rework exceptions lists for `Create Privileged Pod`, `Create Sensitive Mount Pod`, `Launch Sensitive Mount Container`, `Launch Privileged Container` rules to use separate specific lists rather than a single \"Trusted Containers\" list. [[#651](https://github.com/falcosecurity/falco/pull/651)]\n\n## v0.15.1\n\n",
                    "rendered": {
                      "text": "\n### Rule Changes\n\n* Rework exceptions lists for `Create Privileged Pod`, `Create Sensitive Mount Pod`, `Launch Sensitive Mount Container`, `Launch Privileged Container` rules to use separate specific lists rather than a single \"Trusted Containers\" list. [[#651](https://github.com/falcosecurity/falco/pull/651)]\n\n## v0.15.1\n\n",
                      "markdown": "`\n### Rule Changes\n\n* Rework exceptions lists for `Create Privileged Pod`, `Create Sensitive Mount Pod`, `Launch Sensitive Mount Container`, `Launch Privileged Container` rules to use separate specific lists rather than a single \"Trusted Containers\" list. [[#651](https://github.com/falcosecurity/falco/pull/651)]\n\n## v0.15.1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2239,
                  "startColumn": 72,
                  "endLine": 2239,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n### Rule Changes\n\n* Rework exceptions lists for `Create Privileged Pod`, `Create Sensitive Mount Pod`, `Launch Sensitive Mount Container`, `Launch Privileged Container` rules to use separate specific lists rather than a single \"Trusted Containers\" list. [[#651](https://github.com/falcosecurity/falco/pull/651)]\n\n## v0.15.1\n\n",
                    "rendered": {
                      "text": "\n### Rule Changes\n\n* Rework exceptions lists for `Create Privileged Pod`, `Create Sensitive Mount Pod`, `Launch Sensitive Mount Container`, `Launch Privileged Container` rules to use separate specific lists rather than a single \"Trusted Containers\" list. [[#651](https://github.com/falcosecurity/falco/pull/651)]\n\n## v0.15.1\n\n",
                      "markdown": "`\n### Rule Changes\n\n* Rework exceptions lists for `Create Privileged Pod`, `Create Sensitive Mount Pod`, `Launch Sensitive Mount Container`, `Launch Privileged Container` rules to use separate specific lists rather than a single \"Trusted Containers\" list. [[#651](https://github.com/falcosecurity/falco/pull/651)]\n\n## v0.15.1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2155,
                  "startColumn": 25,
                  "endLine": 2155,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n* Add clang formatter for C++ syntax formatting. [[#701](https://github.com/falcosecurity/falco/pull/701)] [[#689](https://github.com/falcosecurity/falco/pull/689)]\n\n* Partial changes towards lua syntax formatting. No particular formatting enforced yet, though. [[#718](https://github.com/falcosecurity/falco/pull/718)]\n\n* Partial changes towards yaml syntax formatting. No particular formatting enforced yet, though. [[#714](https://github.com/falcosecurity/falco/pull/714)]\n\n",
                    "rendered": {
                      "text": "\n* Add clang formatter for C++ syntax formatting. [[#701](https://github.com/falcosecurity/falco/pull/701)] [[#689](https://github.com/falcosecurity/falco/pull/689)]\n\n* Partial changes towards lua syntax formatting. No particular formatting enforced yet, though. [[#718](https://github.com/falcosecurity/falco/pull/718)]\n\n* Partial changes towards yaml syntax formatting. No particular formatting enforced yet, though. [[#714](https://github.com/falcosecurity/falco/pull/714)]\n\n",
                      "markdown": "`\n* Add clang formatter for C++ syntax formatting. [[#701](https://github.com/falcosecurity/falco/pull/701)] [[#689](https://github.com/falcosecurity/falco/pull/689)]\n\n* Partial changes towards lua syntax formatting. No particular formatting enforced yet, though. [[#718](https://github.com/falcosecurity/falco/pull/718)]\n\n* Partial changes towards yaml syntax formatting. No particular formatting enforced yet, though. [[#714](https://github.com/falcosecurity/falco/pull/714)]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2145,
                  "startColumn": 78,
                  "endLine": 2145,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\n* Bump falco engine version to 4 to reflect new fields `ka.useragent`, others. [[#710](https://github.com/falcosecurity/falco/pull/710)] [[#681](https://github.com/falcosecurity/falco/pull/681)]\n\n* Add Catch2 as a unit testing framework. This will add additional coverage on top of the regression tests using Avocado. [[#687](https://github.com/falcosecurity/falco/pull/687)]\n\n### Minor Changes\n\n",
                    "rendered": {
                      "text": "\n* Bump falco engine version to 4 to reflect new fields `ka.useragent`, others. [[#710](https://github.com/falcosecurity/falco/pull/710)] [[#681](https://github.com/falcosecurity/falco/pull/681)]\n\n* Add Catch2 as a unit testing framework. This will add additional coverage on top of the regression tests using Avocado. [[#687](https://github.com/falcosecurity/falco/pull/687)]\n\n### Minor Changes\n\n",
                      "markdown": "`\n* Bump falco engine version to 4 to reflect new fields `ka.useragent`, others. [[#710](https://github.com/falcosecurity/falco/pull/710)] [[#681](https://github.com/falcosecurity/falco/pull/681)]\n\n* Add Catch2 as a unit testing framework. This will add additional coverage on top of the regression tests using Avocado. [[#687](https://github.com/falcosecurity/falco/pull/687)]\n\n### Minor Changes\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2141,
                  "startColumn": 48,
                  "endLine": 2141,
                  "endColumn": 53,
                  "snippet": {
                    "text": "ting to provide more meaningful error messages along with context when loading rules files. When run with -V, the results of the validation (\"OK\" or error message) are sent to standard output. [[#708](https://github.com/falcosecurity/falco/pull/708)]\n\n* Improve rule loading performance by optimizing lua parsing paths to avoid expensive pattern matches. [[#694](https://github.com/falcosecurity/falco/pull/694)]\n\n* Bump falco engine version to 4 to reflect new fields `ka.useragent`, others. [[#710](https://github.com/falcosecurity/falco/pull/710)] [[#681](https://github.com/falcosecurity/falco/pull/68",
                    "rendered": {
                      "text": "ting to provide more meaningful error messages along with context when loading rules files. When run with -V, the results of the validation (\"OK\" or error message) are sent to standard output. [[#708](https://github.com/falcosecurity/falco/pull/708)]\n\n* Improve rule loading performance by optimizing lua parsing paths to avoid expensive pattern matches. [[#694](https://github.com/falcosecurity/falco/pull/694)]\n\n* Bump falco engine version to 4 to reflect new fields `ka.useragent`, others. [[#710](https://github.com/falcosecurity/falco/pull/710)] [[#681](https://github.com/falcosecurity/falco/pull/68",
                      "markdown": "`ting to provide more meaningful error messages along with context when loading rules files. When run with -V, the results of the validation (\"OK\" or error message) are sent to standard output. [[#708](https://github.com/falcosecurity/falco/pull/708)]\n\n* Improve rule loading performance by optimizing lua parsing paths to avoid expensive pattern matches. [[#694](https://github.com/falcosecurity/falco/pull/694)]\n\n* Bump falco engine version to 4 to reflect new fields `ka.useragent`, others. [[#710](https://github.com/falcosecurity/falco/pull/710)] [[#681](https://github.com/falcosecurity/falco/pull/68`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2127,
                  "startColumn": 32,
                  "endLine": 2127,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n* Fix a parentheses bug with the `shell_procs` macro [[#728](https://github.com/falcosecurity/falco/pull/728)]\n\n* Allow additional containers to mount sensitive host paths [[#733](https://github.com/falcosecurity/falco/pull/733)] [[#736](https://github.com/falcosecurity/falco/pull/736)]\n\n* Allow additional containers to truncate log files [[#733](https://github.com/falcosecurity/falco/pull/733)]\n\n",
                    "rendered": {
                      "text": "\n* Fix a parentheses bug with the `shell_procs` macro [[#728](https://github.com/falcosecurity/falco/pull/728)]\n\n* Allow additional containers to mount sensitive host paths [[#733](https://github.com/falcosecurity/falco/pull/733)] [[#736](https://github.com/falcosecurity/falco/pull/736)]\n\n* Allow additional containers to truncate log files [[#733](https://github.com/falcosecurity/falco/pull/733)]\n\n",
                      "markdown": "`\n* Fix a parentheses bug with the `shell_procs` macro [[#728](https://github.com/falcosecurity/falco/pull/728)]\n\n* Allow additional containers to mount sensitive host paths [[#733](https://github.com/falcosecurity/falco/pull/733)] [[#736](https://github.com/falcosecurity/falco/pull/736)]\n\n* Allow additional containers to truncate log files [[#733](https://github.com/falcosecurity/falco/pull/733)]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2079,
                  "startColumn": 98,
                  "endLine": 2079,
                  "endColumn": 104,
                  "snippet": {
                    "text": "name shell history: when deleting a shell history file now the syscalls are taken into account rather than just the commands deleting the files [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: delete or rename shell history: history deletion now supports fish and zsh in addition to bash [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: \"create hidden files or directories\" and \"update package repository\" now trigger also if the files are moved and not just if modified or created. [[#766](https://github.com/falcosecurity/falco/pull/766)]\n\n## v0.17.1\n\nReleased 2019-09",
                    "rendered": {
                      "text": "name shell history: when deleting a shell history file now the syscalls are taken into account rather than just the commands deleting the files [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: delete or rename shell history: history deletion now supports fish and zsh in addition to bash [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: \"create hidden files or directories\" and \"update package repository\" now trigger also if the files are moved and not just if modified or created. [[#766](https://github.com/falcosecurity/falco/pull/766)]\n\n## v0.17.1\n\nReleased 2019-09",
                      "markdown": "`name shell history: when deleting a shell history file now the syscalls are taken into account rather than just the commands deleting the files [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: delete or rename shell history: history deletion now supports fish and zsh in addition to bash [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: \"create hidden files or directories\" and \"update package repository\" now trigger also if the files are moved and not just if modified or created. [[#766](https://github.com/falcosecurity/falco/pull/766)]\n\n## v0.17.1\n\nReleased 2019-09`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2079,
                  "startColumn": 79,
                  "endLine": 2079,
                  "endColumn": 84,
                  "snippet": {
                    "text": "rules: delete or rename shell history: when deleting a shell history file now the syscalls are taken into account rather than just the commands deleting the files [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: delete or rename shell history: history deletion now supports fish and zsh in addition to bash [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: \"create hidden files or directories\" and \"update package repository\" now trigger also if the files are moved and not just if modified or created. [[#766](https://github.com/falcosecurity/falco/pull/766)]\n\n## v0.17",
                    "rendered": {
                      "text": "rules: delete or rename shell history: when deleting a shell history file now the syscalls are taken into account rather than just the commands deleting the files [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: delete or rename shell history: history deletion now supports fish and zsh in addition to bash [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: \"create hidden files or directories\" and \"update package repository\" now trigger also if the files are moved and not just if modified or created. [[#766](https://github.com/falcosecurity/falco/pull/766)]\n\n## v0.17",
                      "markdown": "`rules: delete or rename shell history: when deleting a shell history file now the syscalls are taken into account rather than just the commands deleting the files [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: delete or rename shell history: history deletion now supports fish and zsh in addition to bash [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: \"create hidden files or directories\" and \"update package repository\" now trigger also if the files are moved and not just if modified or created. [[#766](https://github.com/falcosecurity/falco/pull/766)]\n\n## v0.17`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2075,
                  "startColumn": 15,
                  "endLine": 2075,
                  "endColumn": 21,
                  "snippet": {
                    "text": "ttps://github.com/falcosecurity/falco/pull/763)]\n* rules: add back rule delete bash history for backport compatibility [[#864](https://github.com/falcosecurity/falco/pull/864)]\n* rule: syscalls are used to detect suid and sgid [[#765](https://github.com/falcosecurity/falco/pull/765)]\n* rules: delete bash history is renamed to delete or rename shell history [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: add image fluent/fluentd-kubernetes-daemonset to clear log trusted images [[#852](https://github.com/falcosecurity/falco/pull/852)]\n* rules: include default users created by `kops`",
                    "rendered": {
                      "text": "ttps://github.com/falcosecurity/falco/pull/763)]\n* rules: add back rule delete bash history for backport compatibility [[#864](https://github.com/falcosecurity/falco/pull/864)]\n* rule: syscalls are used to detect suid and sgid [[#765](https://github.com/falcosecurity/falco/pull/765)]\n* rules: delete bash history is renamed to delete or rename shell history [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: add image fluent/fluentd-kubernetes-daemonset to clear log trusted images [[#852](https://github.com/falcosecurity/falco/pull/852)]\n* rules: include default users created by `kops`",
                      "markdown": "`ttps://github.com/falcosecurity/falco/pull/763)]\n* rules: add back rule delete bash history for backport compatibility [[#864](https://github.com/falcosecurity/falco/pull/864)]\n* rule: syscalls are used to detect suid and sgid [[#765](https://github.com/falcosecurity/falco/pull/765)]\n* rules: delete bash history is renamed to delete or rename shell history [[#762](https://github.com/falcosecurity/falco/pull/762)]\n* rules: add image fluent/fluentd-kubernetes-daemonset to clear log trusted images [[#852](https://github.com/falcosecurity/falco/pull/852)]\n* rules: include default users created by `kops``"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2073,
                  "startColumn": 29,
                  "endLine": 2073,
                  "endColumn": 35,
                  "snippet": {
                    "text": "ttps://github.com/falcosecurity/falco/pull/755)]\n* rules: ignore sensitive mounts from the ecs-agent [[#881](https://github.com/falcosecurity/falco/pull/881)]\n* rules: add rules to detect crypto mining activities [[#763](https://github.com/falcosecurity/falco/pull/763)]\n* rules: add back rule delete bash history for backport compatibility [[#864](https://github.com/falcosecurity/falco/pull/864)]\n* rule: syscalls are used to detect suid and sgid [[#765](https://github.com/falcosecurity/falco/pull/765)]\n* rules: delete bash history is renamed to delete or rename shell history [[#762](https://github.co",
                    "rendered": {
                      "text": "ttps://github.com/falcosecurity/falco/pull/755)]\n* rules: ignore sensitive mounts from the ecs-agent [[#881](https://github.com/falcosecurity/falco/pull/881)]\n* rules: add rules to detect crypto mining activities [[#763](https://github.com/falcosecurity/falco/pull/763)]\n* rules: add back rule delete bash history for backport compatibility [[#864](https://github.com/falcosecurity/falco/pull/864)]\n* rule: syscalls are used to detect suid and sgid [[#765](https://github.com/falcosecurity/falco/pull/765)]\n* rules: delete bash history is renamed to delete or rename shell history [[#762](https://github.co",
                      "markdown": "`ttps://github.com/falcosecurity/falco/pull/755)]\n* rules: ignore sensitive mounts from the ecs-agent [[#881](https://github.com/falcosecurity/falco/pull/881)]\n* rules: add rules to detect crypto mining activities [[#763](https://github.com/falcosecurity/falco/pull/763)]\n* rules: add back rule delete bash history for backport compatibility [[#864](https://github.com/falcosecurity/falco/pull/864)]\n* rule: syscalls are used to detect suid and sgid [[#765](https://github.com/falcosecurity/falco/pull/765)]\n* rules: delete bash history is renamed to delete or rename shell history [[#762](https://github.co`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2059,
                  "startColumn": 11,
                  "endLine": 2059,
                  "endColumn": 16,
                  "snippet": {
                    "text": "cosecurity/falco/pull/899)]\n\n### Bug Fixes\n\n* handle multi-document yaml files when reading rules files. [[#760](https://github.com/falcosecurity/falco/pull/760)]\n* improvements to how the webserver handles incoming invalid inputs [[#759](https://github.com/falcosecurity/falco/pull/759)]\n* fix: make lua state access thread-safe [[#867](https://github.com/falcosecurity/falco/pull/867)]\n* fix compilation on gcc 5.4 by working around gcc bug https://gcc.gnu.org/bugzilla/show_bug.cgi?id=56480 [[#873](https://github.com/falcosecurity/falco/pull/873)]\n* add explicit dependency between tests and catch2 he",
                    "rendered": {
                      "text": "cosecurity/falco/pull/899)]\n\n### Bug Fixes\n\n* handle multi-document yaml files when reading rules files. [[#760](https://github.com/falcosecurity/falco/pull/760)]\n* improvements to how the webserver handles incoming invalid inputs [[#759](https://github.com/falcosecurity/falco/pull/759)]\n* fix: make lua state access thread-safe [[#867](https://github.com/falcosecurity/falco/pull/867)]\n* fix compilation on gcc 5.4 by working around gcc bug https://gcc.gnu.org/bugzilla/show_bug.cgi?id=56480 [[#873](https://github.com/falcosecurity/falco/pull/873)]\n* add explicit dependency between tests and catch2 he",
                      "markdown": "`cosecurity/falco/pull/899)]\n\n### Bug Fixes\n\n* handle multi-document yaml files when reading rules files. [[#760](https://github.com/falcosecurity/falco/pull/760)]\n* improvements to how the webserver handles incoming invalid inputs [[#759](https://github.com/falcosecurity/falco/pull/759)]\n* fix: make lua state access thread-safe [[#867](https://github.com/falcosecurity/falco/pull/867)]\n* fix compilation on gcc 5.4 by working around gcc bug https://gcc.gnu.org/bugzilla/show_bug.cgi?id=56480 [[#873](https://github.com/falcosecurity/falco/pull/873)]\n* add explicit dependency between tests and catch2 he`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2051,
                  "startColumn": 83,
                  "endLine": 2051,
                  "endColumn": 91,
                  "snippet": {
                    "text": "### Minor Changes\n\n* allow for unique names for psp converted rules/macros/lists/rule names as generated by falcoctl 0.0.3 [[#895](https://github.com/falcosecurity/falco/pull/895)]\n* make it easier to run regression tests without necessarily using the falco-tester docker image. [[#808](https://github.com/falcosecurity/falco/pull/808)]\n* fix falco engine compatibility with older k8s audit rules files. [[#893](https://github.com/falcosecurity/falco/pull/893)]\n* add tests for psp conversions with names containing spaces/dashes. [[#899](https://github.com/falcosecurity/falco/pull/899)]\n\n",
                    "rendered": {
                      "text": "### Minor Changes\n\n* allow for unique names for psp converted rules/macros/lists/rule names as generated by falcoctl 0.0.3 [[#895](https://github.com/falcosecurity/falco/pull/895)]\n* make it easier to run regression tests without necessarily using the falco-tester docker image. [[#808](https://github.com/falcosecurity/falco/pull/808)]\n* fix falco engine compatibility with older k8s audit rules files. [[#893](https://github.com/falcosecurity/falco/pull/893)]\n* add tests for psp conversions with names containing spaces/dashes. [[#899](https://github.com/falcosecurity/falco/pull/899)]\n\n",
                      "markdown": "`### Minor Changes\n\n* allow for unique names for psp converted rules/macros/lists/rule names as generated by falcoctl 0.0.3 [[#895](https://github.com/falcosecurity/falco/pull/895)]\n* make it easier to run regression tests without necessarily using the falco-tester docker image. [[#808](https://github.com/falcosecurity/falco/pull/808)]\n* fix falco engine compatibility with older k8s audit rules files. [[#893](https://github.com/falcosecurity/falco/pull/893)]\n* add tests for psp conversions with names containing spaces/dashes. [[#899](https://github.com/falcosecurity/falco/pull/899)]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2032,
                  "startColumn": 73,
                  "endLine": 2032,
                  "endColumn": 81,
                  "snippet": {
                    "text": "ocker_save\" [[#949](https://github.com/falcosecurity/falco/pull/949)]\n* rules(update package repository): fixed a false positive by excluding \"exe_running_docker_save\". [[#948](https://github.com/falcosecurity/falco/pull/948)]\n* rules(the docker client is executed in a container): when executing the docker client, exclude containers running in the `kube-system` namespace to avoid false positives [[#955](https://github.com/falcosecurity/falco/pull/955)]\n* rules(list user_known_chmod_applications): add kubelet [[#944](https://github.com/falcosecurity/falco/pull/944)]\n* rules(set setuid or setgid bit): f",
                    "rendered": {
                      "text": "ocker_save\" [[#949](https://github.com/falcosecurity/falco/pull/949)]\n* rules(update package repository): fixed a false positive by excluding \"exe_running_docker_save\". [[#948](https://github.com/falcosecurity/falco/pull/948)]\n* rules(the docker client is executed in a container): when executing the docker client, exclude containers running in the `kube-system` namespace to avoid false positives [[#955](https://github.com/falcosecurity/falco/pull/955)]\n* rules(list user_known_chmod_applications): add kubelet [[#944](https://github.com/falcosecurity/falco/pull/944)]\n* rules(set setuid or setgid bit): f",
                      "markdown": "`ocker_save\" [[#949](https://github.com/falcosecurity/falco/pull/949)]\n* rules(update package repository): fixed a false positive by excluding \"exe_running_docker_save\". [[#948](https://github.com/falcosecurity/falco/pull/948)]\n* rules(the docker client is executed in a container): when executing the docker client, exclude containers running in the `kube-system` namespace to avoid false positives [[#955](https://github.com/falcosecurity/falco/pull/955)]\n* rules(list user_known_chmod_applications): add kubelet [[#944](https://github.com/falcosecurity/falco/pull/944)]\n* rules(set setuid or setgid bit): f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2032,
                  "startColumn": 11,
                  "endLine": 2032,
                  "endColumn": 19,
                  "snippet": {
                    "text": "tion file): fixed a false positive by excluding \"exe_running_docker_save\" [[#949](https://github.com/falcosecurity/falco/pull/949)]\n* rules(update package repository): fixed a false positive by excluding \"exe_running_docker_save\". [[#948](https://github.com/falcosecurity/falco/pull/948)]\n* rules(the docker client is executed in a container): when executing the docker client, exclude containers running in the `kube-system` namespace to avoid false positives [[#955](https://github.com/falcosecurity/falco/pull/955)]\n* rules(list user_known_chmod_applications): add kubelet [[#944](https://github.com/falco",
                    "rendered": {
                      "text": "tion file): fixed a false positive by excluding \"exe_running_docker_save\" [[#949](https://github.com/falcosecurity/falco/pull/949)]\n* rules(update package repository): fixed a false positive by excluding \"exe_running_docker_save\". [[#948](https://github.com/falcosecurity/falco/pull/948)]\n* rules(the docker client is executed in a container): when executing the docker client, exclude containers running in the `kube-system` namespace to avoid false positives [[#955](https://github.com/falcosecurity/falco/pull/955)]\n* rules(list user_known_chmod_applications): add kubelet [[#944](https://github.com/falco",
                      "markdown": "`tion file): fixed a false positive by excluding \"exe_running_docker_save\" [[#949](https://github.com/falcosecurity/falco/pull/949)]\n* rules(update package repository): fixed a false positive by excluding \"exe_running_docker_save\". [[#948](https://github.com/falcosecurity/falco/pull/948)]\n* rules(the docker client is executed in a container): when executing the docker client, exclude containers running in the `kube-system` namespace to avoid false positives [[#955](https://github.com/falcosecurity/falco/pull/955)]\n* rules(list user_known_chmod_applications): add kubelet [[#944](https://github.com/falco`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2029,
                  "startColumn": 120,
                  "endLine": 2029,
                  "endColumn": 128,
                  "snippet": {
                    "text": "ithub.com/falcosecurity/falco/pull/945)]\n* rules(packet socket created in container): rule to detect raw packets creation [[#945](https://github.com/falcosecurity/falco/pull/945)]\n* rules(macro exe_running_docker_save): fixed false positives in multiple rules that were caused by the use of docker in docker [[#951](https://github.com/falcosecurity/falco/pull/951)]\n* rules(modify shell configuration file): fixed a false positive by excluding \"exe_running_docker_save\" [[#949](https://github.com/falcosecurity/falco/pull/949)]\n* rules(update package repository): fixed a false positive by excluding \"exe_run",
                    "rendered": {
                      "text": "ithub.com/falcosecurity/falco/pull/945)]\n* rules(packet socket created in container): rule to detect raw packets creation [[#945](https://github.com/falcosecurity/falco/pull/945)]\n* rules(macro exe_running_docker_save): fixed false positives in multiple rules that were caused by the use of docker in docker [[#951](https://github.com/falcosecurity/falco/pull/951)]\n* rules(modify shell configuration file): fixed a false positive by excluding \"exe_running_docker_save\" [[#949](https://github.com/falcosecurity/falco/pull/949)]\n* rules(update package repository): fixed a false positive by excluding \"exe_run",
                      "markdown": "`ithub.com/falcosecurity/falco/pull/945)]\n* rules(packet socket created in container): rule to detect raw packets creation [[#945](https://github.com/falcosecurity/falco/pull/945)]\n* rules(macro exe_running_docker_save): fixed false positives in multiple rules that were caused by the use of docker in docker [[#951](https://github.com/falcosecurity/falco/pull/951)]\n* rules(modify shell configuration file): fixed a false positive by excluding \"exe_running_docker_save\" [[#949](https://github.com/falcosecurity/falco/pull/949)]\n* rules(update package repository): fixed a false positive by excluding \"exe_run`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2029,
                  "startColumn": 110,
                  "endLine": 2029,
                  "endColumn": 118,
                  "snippet": {
                    "text": "(https://github.com/falcosecurity/falco/pull/945)]\n* rules(packet socket created in container): rule to detect raw packets creation [[#945](https://github.com/falcosecurity/falco/pull/945)]\n* rules(macro exe_running_docker_save): fixed false positives in multiple rules that were caused by the use of docker in docker [[#951](https://github.com/falcosecurity/falco/pull/951)]\n* rules(modify shell configuration file): fixed a false positive by excluding \"exe_running_docker_save\" [[#949](https://github.com/falcosecurity/falco/pull/949)]\n* rules(update package repository): fixed a false positive by excludin",
                    "rendered": {
                      "text": "(https://github.com/falcosecurity/falco/pull/945)]\n* rules(packet socket created in container): rule to detect raw packets creation [[#945](https://github.com/falcosecurity/falco/pull/945)]\n* rules(macro exe_running_docker_save): fixed false positives in multiple rules that were caused by the use of docker in docker [[#951](https://github.com/falcosecurity/falco/pull/951)]\n* rules(modify shell configuration file): fixed a false positive by excluding \"exe_running_docker_save\" [[#949](https://github.com/falcosecurity/falco/pull/949)]\n* rules(update package repository): fixed a false positive by excludin",
                      "markdown": "`(https://github.com/falcosecurity/falco/pull/945)]\n* rules(packet socket created in container): rule to detect raw packets creation [[#945](https://github.com/falcosecurity/falco/pull/945)]\n* rules(macro exe_running_docker_save): fixed false positives in multiple rules that were caused by the use of docker in docker [[#951](https://github.com/falcosecurity/falco/pull/951)]\n* rules(modify shell configuration file): fixed a false positive by excluding \"exe_running_docker_save\" [[#949](https://github.com/falcosecurity/falco/pull/949)]\n* rules(update package repository): fixed a false positive by excludin`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2025,
                  "startColumn": 30,
                  "endLine": 2025,
                  "endColumn": 39,
                  "snippet": {
                    "text": " sensitive_mount): add more sensitive paths [[#929](https://github.com/falcosecurity/falco/pull/929)]\n* rules(macro consider_metadata_access): macro to decide whether to consider metadata or not (off by default) [[#943](https://github.com/falcosecurity/falco/pull/943)]\n* rules(contact cloud metadata service from container): add rules to detect access to gce instance metadata [[#943](https://github.com/falcosecurity/falco/pull/943)]\n* rules(macro sensitive_vol_mount): align sensitive mounts macro between k8s audit rules and syscall rules [[#950](https://github.com/falcosecurity/falco/pull/950)]\n* rules(",
                    "rendered": {
                      "text": " sensitive_mount): add more sensitive paths [[#929](https://github.com/falcosecurity/falco/pull/929)]\n* rules(macro consider_metadata_access): macro to decide whether to consider metadata or not (off by default) [[#943](https://github.com/falcosecurity/falco/pull/943)]\n* rules(contact cloud metadata service from container): add rules to detect access to gce instance metadata [[#943](https://github.com/falcosecurity/falco/pull/943)]\n* rules(macro sensitive_vol_mount): align sensitive mounts macro between k8s audit rules and syscall rules [[#950](https://github.com/falcosecurity/falco/pull/950)]\n* rules(",
                      "markdown": "` sensitive_mount): add more sensitive paths [[#929](https://github.com/falcosecurity/falco/pull/929)]\n* rules(macro consider_metadata_access): macro to decide whether to consider metadata or not (off by default) [[#943](https://github.com/falcosecurity/falco/pull/943)]\n* rules(contact cloud metadata service from container): add rules to detect access to gce instance metadata [[#943](https://github.com/falcosecurity/falco/pull/943)]\n* rules(macro sensitive_vol_mount): align sensitive mounts macro between k8s audit rules and syscall rules [[#950](https://github.com/falcosecurity/falco/pull/950)]\n* rules(`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2020,
                  "startColumn": 92,
                  "endLine": 2020,
                  "endColumn": 96,
                  "snippet": {
                    "text": "ivity. [[#975](https://github.com/falcosecurity/falco/pull/975)]\n* rules(macro user_known_k8s_client_container): macro to match kube-system namespace [[#955](https://github.com/falcosecurity/falco/pull/955)]\n* rules(contact k8s api server from container): now it can automatically resolve the cluster ip address  [[#952](https://github.com/falcosecurity/falco/pull/952)]\n* rules(macro k8s_api_server): new macro to match the default k8s api server [[#952](https://github.com/falcosecurity/falco/pull/952)]\n* rules(macro sensitive_vol_mount): add more sensitive host paths [[#929](https://github.com/falco",
                    "rendered": {
                      "text": "ivity. [[#975](https://github.com/falcosecurity/falco/pull/975)]\n* rules(macro user_known_k8s_client_container): macro to match kube-system namespace [[#955](https://github.com/falcosecurity/falco/pull/955)]\n* rules(contact k8s api server from container): now it can automatically resolve the cluster ip address  [[#952](https://github.com/falcosecurity/falco/pull/952)]\n* rules(macro k8s_api_server): new macro to match the default k8s api server [[#952](https://github.com/falcosecurity/falco/pull/952)]\n* rules(macro sensitive_vol_mount): add more sensitive host paths [[#929](https://github.com/falco",
                      "markdown": "`ivity. [[#975](https://github.com/falcosecurity/falco/pull/975)]\n* rules(macro user_known_k8s_client_container): macro to match kube-system namespace [[#955](https://github.com/falcosecurity/falco/pull/955)]\n* rules(contact k8s api server from container): now it can automatically resolve the cluster ip address  [[#952](https://github.com/falcosecurity/falco/pull/952)]\n* rules(macro k8s_api_server): new macro to match the default k8s api server [[#952](https://github.com/falcosecurity/falco/pull/952)]\n* rules(macro sensitive_vol_mount): add more sensitive host paths [[#929](https://github.com/falco`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2014,
                  "startColumn": 82,
                  "endLine": 2014,
                  "endColumn": 90,
                  "snippet": {
                    "text": "n_k8s_client_container): when executing the docker client, exclude fluentd-gcp-scaler container running in the `kube-system` namespace to avoid false positives [[#962](https://github.com/falcosecurity/falco/pull/962)]\n* rules(the docker client is executed in a container): detect the execution of the docker client in a container and logs it with warning priority.  [[#915](https://github.com/falcosecurity/falco/pull/915)]\n* rules(list k8s_client_binaries): create and add docker, kubectl, crictl [[#915](https://github.com/falcosecurity/falco/pull/915)]\n* rules(macro container_entrypoint): add docker-runc",
                    "rendered": {
                      "text": "n_k8s_client_container): when executing the docker client, exclude fluentd-gcp-scaler container running in the `kube-system` namespace to avoid false positives [[#962](https://github.com/falcosecurity/falco/pull/962)]\n* rules(the docker client is executed in a container): detect the execution of the docker client in a container and logs it with warning priority.  [[#915](https://github.com/falcosecurity/falco/pull/915)]\n* rules(list k8s_client_binaries): create and add docker, kubectl, crictl [[#915](https://github.com/falcosecurity/falco/pull/915)]\n* rules(macro container_entrypoint): add docker-runc",
                      "markdown": "`n_k8s_client_container): when executing the docker client, exclude fluentd-gcp-scaler container running in the `kube-system` namespace to avoid false positives [[#962](https://github.com/falcosecurity/falco/pull/962)]\n* rules(the docker client is executed in a container): detect the execution of the docker client in a container and logs it with warning priority.  [[#915](https://github.com/falcosecurity/falco/pull/915)]\n* rules(list k8s_client_binaries): create and add docker, kubectl, crictl [[#915](https://github.com/falcosecurity/falco/pull/915)]\n* rules(macro container_entrypoint): add docker-runc`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2014,
                  "startColumn": 11,
                  "endLine": 2014,
                  "endColumn": 19,
                  "snippet": {
                    "text": "tps://github.com/falcosecurity/falco/pull/957)]\n* rules(macro user_known_k8s_client_container): when executing the docker client, exclude fluentd-gcp-scaler container running in the `kube-system` namespace to avoid false positives [[#962](https://github.com/falcosecurity/falco/pull/962)]\n* rules(the docker client is executed in a container): detect the execution of the docker client in a container and logs it with warning priority.  [[#915](https://github.com/falcosecurity/falco/pull/915)]\n* rules(list k8s_client_binaries): create and add docker, kubectl, crictl [[#915](https://github.com/falcosecurit",
                    "rendered": {
                      "text": "tps://github.com/falcosecurity/falco/pull/957)]\n* rules(macro user_known_k8s_client_container): when executing the docker client, exclude fluentd-gcp-scaler container running in the `kube-system` namespace to avoid false positives [[#962](https://github.com/falcosecurity/falco/pull/962)]\n* rules(the docker client is executed in a container): detect the execution of the docker client in a container and logs it with warning priority.  [[#915](https://github.com/falcosecurity/falco/pull/915)]\n* rules(list k8s_client_binaries): create and add docker, kubectl, crictl [[#915](https://github.com/falcosecurit",
                      "markdown": "`tps://github.com/falcosecurity/falco/pull/957)]\n* rules(macro user_known_k8s_client_container): when executing the docker client, exclude fluentd-gcp-scaler container running in the `kube-system` namespace to avoid false positives [[#962](https://github.com/falcosecurity/falco/pull/962)]\n* rules(the docker client is executed in a container): detect the execution of the docker client in a container and logs it with warning priority.  [[#915](https://github.com/falcosecurity/falco/pull/915)]\n* rules(list k8s_client_binaries): create and add docker, kubectl, crictl [[#915](https://github.com/falcosecurit`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2013,
                  "startColumn": 66,
                  "endLine": 2013,
                  "endColumn": 74,
                  "snippet": {
                    "text": " network tools to detect suspicious network activity. [[#973](https://github.com/falcosecurity/falco/pull/973)]\n* rules(write below etc): allow automount to write to /etc/mtab [[#957](https://github.com/falcosecurity/falco/pull/957)]\n* rules(macro user_known_k8s_client_container): when executing the docker client, exclude fluentd-gcp-scaler container running in the `kube-system` namespace to avoid false positives [[#962](https://github.com/falcosecurity/falco/pull/962)]\n* rules(the docker client is executed in a container): detect the execution of the docker client in a container and logs it with warn",
                    "rendered": {
                      "text": " network tools to detect suspicious network activity. [[#973](https://github.com/falcosecurity/falco/pull/973)]\n* rules(write below etc): allow automount to write to /etc/mtab [[#957](https://github.com/falcosecurity/falco/pull/957)]\n* rules(macro user_known_k8s_client_container): when executing the docker client, exclude fluentd-gcp-scaler container running in the `kube-system` namespace to avoid false positives [[#962](https://github.com/falcosecurity/falco/pull/962)]\n* rules(the docker client is executed in a container): detect the execution of the docker client in a container and logs it with warn",
                      "markdown": "` network tools to detect suspicious network activity. [[#973](https://github.com/falcosecurity/falco/pull/973)]\n* rules(write below etc): allow automount to write to /etc/mtab [[#957](https://github.com/falcosecurity/falco/pull/957)]\n* rules(macro user_known_k8s_client_container): when executing the docker client, exclude fluentd-gcp-scaler container running in the `kube-system` namespace to avoid false positives [[#962](https://github.com/falcosecurity/falco/pull/962)]\n* rules(the docker client is executed in a container): detect the execution of the docker client in a container and logs it with warn`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1996,
                  "startColumn": 9,
                  "endLine": 1996,
                  "endColumn": 17,
                  "snippet": {
                    "text": "https://github.com/falcosecurity/falco/pull/968)]\n* build: bundle openssl into falco-builder docker image [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](https://github.com/falcosecurity/falco/pull/922)]\n* update: adds a hostname field to grpc output [[#927](https://github.com/falcosecurity/falco/pull/927)]\n* build: download grpc from their github repo [[#933](https://github.com/falcosecu",
                    "rendered": {
                      "text": "https://github.com/falcosecurity/falco/pull/968)]\n* build: bundle openssl into falco-builder docker image [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](https://github.com/falcosecurity/falco/pull/922)]\n* update: adds a hostname field to grpc output [[#927](https://github.com/falcosecurity/falco/pull/927)]\n* build: download grpc from their github repo [[#933](https://github.com/falcosecu",
                      "markdown": "`https://github.com/falcosecurity/falco/pull/968)]\n* build: bundle openssl into falco-builder docker image [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](https://github.com/falcosecurity/falco/pull/922)]\n* update: adds a hostname field to grpc output [[#927](https://github.com/falcosecurity/falco/pull/927)]\n* build: download grpc from their github repo [[#933](https://github.com/falcosecu`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1995,
                  "startColumn": 22,
                  "endLine": 1995,
                  "endColumn": 30,
                  "snippet": {
                    "text": " is fedora:31 now [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: switch to circleci [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: bundle openssl into falco-builder docker image [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](https://github.com/falcosecurity/falco/pull/922)]\n* update: adds a hostname field to grpc output [[#927](https://github.com/f",
                    "rendered": {
                      "text": " is fedora:31 now [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: switch to circleci [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: bundle openssl into falco-builder docker image [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](https://github.com/falcosecurity/falco/pull/922)]\n* update: adds a hostname field to grpc output [[#927](https://github.com/f",
                      "markdown": "` is fedora:31 now [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: switch to circleci [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: bundle openssl into falco-builder docker image [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](https://github.com/falcosecurity/falco/pull/922)]\n* update: adds a hostname field to grpc output [[#927](https://github.com/f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1994,
                  "startColumn": 42,
                  "endLine": 1994,
                  "endColumn": 50,
                  "snippet": {
                    "text": "ner. [[#997](https://github.com/falcosecurity/falco/pull/997)]\n* update: falco-tester base image is fedora:31 now [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: switch to circleci [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: bundle openssl into falco-builder docker image [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](https://github.com/falcosecur",
                    "rendered": {
                      "text": "ner. [[#997](https://github.com/falcosecurity/falco/pull/997)]\n* update: falco-tester base image is fedora:31 now [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: switch to circleci [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: bundle openssl into falco-builder docker image [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](https://github.com/falcosecur",
                      "markdown": "`ner. [[#997](https://github.com/falcosecurity/falco/pull/997)]\n* update: falco-tester base image is fedora:31 now [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: switch to circleci [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: bundle openssl into falco-builder docker image [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](https://github.com/falcosecur`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1994,
                  "startColumn": 15,
                  "endLine": 1994,
                  "endColumn": 24,
                  "snippet": {
                    "text": "alco-event-generator container. [[#997](https://github.com/falcosecurity/falco/pull/997)]\n* update: falco-tester base image is fedora:31 now [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: switch to circleci [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: bundle openssl into falco-builder docker image [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](htt",
                    "rendered": {
                      "text": "alco-event-generator container. [[#997](https://github.com/falcosecurity/falco/pull/997)]\n* update: falco-tester base image is fedora:31 now [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: switch to circleci [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: bundle openssl into falco-builder docker image [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](htt",
                      "markdown": "`alco-event-generator container. [[#997](https://github.com/falcosecurity/falco/pull/997)]\n* update: falco-tester base image is fedora:31 now [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: switch to circleci [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* build: bundle openssl into falco-builder docker image [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* build: falco-builder docker image revamp (centos:7 base image) [[#1004](https://github.com/falcosecurity/falco/pull/1004)]\n* update: puppet module had been renamed from \"sysdig-falco\" to \"falco\" [[#922](htt`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1985,
                  "startColumn": 137,
                  "endLine": 1985,
                  "endColumn": 142,
                  "snippet": {
                    "text": ".com/falcosecurity/falco/pull/939)]\n* build: (most of) dependencies are bundled dynamically (by default) [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* test: integration tests now can run on different distributions via docker containers, for now CentOS 7 and Ubuntu 18.04 with respective rpm and deb packages [[#1012](https://github.com/falcosecurity/falco/pull/1012)]\n\n### Minor Changes\n\n* proposal: rules naming convention [[#980](https://github.com/falcosecurity/falco/pull/980)]\n* update: also allow posting json arrays containing k8s audit events to the k8s_audit endpoint. [[#967](https",
                    "rendered": {
                      "text": ".com/falcosecurity/falco/pull/939)]\n* build: (most of) dependencies are bundled dynamically (by default) [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* test: integration tests now can run on different distributions via docker containers, for now CentOS 7 and Ubuntu 18.04 with respective rpm and deb packages [[#1012](https://github.com/falcosecurity/falco/pull/1012)]\n\n### Minor Changes\n\n* proposal: rules naming convention [[#980](https://github.com/falcosecurity/falco/pull/980)]\n* update: also allow posting json arrays containing k8s audit events to the k8s_audit endpoint. [[#967](https",
                      "markdown": "`.com/falcosecurity/falco/pull/939)]\n* build: (most of) dependencies are bundled dynamically (by default) [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* test: integration tests now can run on different distributions via docker containers, for now CentOS 7 and Ubuntu 18.04 with respective rpm and deb packages [[#1012](https://github.com/falcosecurity/falco/pull/1012)]\n\n### Minor Changes\n\n* proposal: rules naming convention [[#980](https://github.com/falcosecurity/falco/pull/980)]\n* update: also allow posting json arrays containing k8s audit events to the k8s_audit endpoint. [[#967](https`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1985,
                  "startColumn": 68,
                  "endLine": 1985,
                  "endColumn": 76,
                  "snippet": {
                    "text": "/falco/pull/746)]\n* build: bump grpc to 1.25.0 [[#939](https://github.com/falcosecurity/falco/pull/939)]\n* build: (most of) dependencies are bundled dynamically (by default) [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* test: integration tests now can run on different distributions via docker containers, for now CentOS 7 and Ubuntu 18.04 with respective rpm and deb packages [[#1012](https://github.com/falcosecurity/falco/pull/1012)]\n\n### Minor Changes\n\n* proposal: rules naming convention [[#980](https://github.com/falcosecurity/falco/pull/980)]\n* update: also allow posting json arrays co",
                    "rendered": {
                      "text": "/falco/pull/746)]\n* build: bump grpc to 1.25.0 [[#939](https://github.com/falcosecurity/falco/pull/939)]\n* build: (most of) dependencies are bundled dynamically (by default) [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* test: integration tests now can run on different distributions via docker containers, for now CentOS 7 and Ubuntu 18.04 with respective rpm and deb packages [[#1012](https://github.com/falcosecurity/falco/pull/1012)]\n\n### Minor Changes\n\n* proposal: rules naming convention [[#980](https://github.com/falcosecurity/falco/pull/980)]\n* update: also allow posting json arrays co",
                      "markdown": "`/falco/pull/746)]\n* build: bump grpc to 1.25.0 [[#939](https://github.com/falcosecurity/falco/pull/939)]\n* build: (most of) dependencies are bundled dynamically (by default) [[#968](https://github.com/falcosecurity/falco/pull/968)]\n* test: integration tests now can run on different distributions via docker containers, for now CentOS 7 and Ubuntu 18.04 with respective rpm and deb packages [[#1012](https://github.com/falcosecurity/falco/pull/1012)]\n\n### Minor Changes\n\n* proposal: rules naming convention [[#980](https://github.com/falcosecurity/falco/pull/980)]\n* update: also allow posting json arrays co`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1968,
                  "startColumn": 62,
                  "endLine": 1968,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n* rule(write below etc): add \"dsc_host\" as a ms oms program [[#1028](https://github.com/falcosecurity/falco/pull/1028)]\n* rule(write below etc): let mcafee write to /etc/cma.d  [[#1028](https://github.com/falcosecurity/falco/pull/1028)]\n* rule(write below etc): let avinetworks supervisor write some ssh cfg [[#1028](https://github.com/falcosecurity/falco/pull/1028)]\n* rule(write below etc): allow writes to /etc/pki from openshift secrets dir [[#1028](https://github.com/falcosecurity/falco/pull/1028)]\n* rule(write below root): let runc write to /exec.fifo [[#1028](https://github.com/falcosecurity/fa",
                    "rendered": {
                      "text": "\n* rule(write below etc): add \"dsc_host\" as a ms oms program [[#1028](https://github.com/falcosecurity/falco/pull/1028)]\n* rule(write below etc): let mcafee write to /etc/cma.d  [[#1028](https://github.com/falcosecurity/falco/pull/1028)]\n* rule(write below etc): let avinetworks supervisor write some ssh cfg [[#1028](https://github.com/falcosecurity/falco/pull/1028)]\n* rule(write below etc): allow writes to /etc/pki from openshift secrets dir [[#1028](https://github.com/falcosecurity/falco/pull/1028)]\n* rule(write below root): let runc write to /exec.fifo [[#1028](https://github.com/falcosecurity/fa",
                      "markdown": "`\n* rule(write below etc): add \"dsc_host\" as a ms oms program [[#1028](https://github.com/falcosecurity/falco/pull/1028)]\n* rule(write below etc): let mcafee write to /etc/cma.d  [[#1028](https://github.com/falcosecurity/falco/pull/1028)]\n* rule(write below etc): let avinetworks supervisor write some ssh cfg [[#1028](https://github.com/falcosecurity/falco/pull/1028)]\n* rule(write below etc): allow writes to /etc/pki from openshift secrets dir [[#1028](https://github.com/falcosecurity/falco/pull/1028)]\n* rule(write below root): let runc write to /exec.fifo [[#1028](https://github.com/falcosecurity/fa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1961,
                  "startColumn": 10,
                  "endLine": 1961,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n### Bug Fixes\n\n* fix: the base64 output format (-b) now works with both json and normal output. [[#1033](https://github.com/falcosecurity/falco/pull/1033)]\n* fix: version follows semver 2 bnf [[#872](https://github.com/falcosecurity/falco/pull/872)]\n\n### Rule Changes\n",
                    "rendered": {
                      "text": "\n### Bug Fixes\n\n* fix: the base64 output format (-b) now works with both json and normal output. [[#1033](https://github.com/falcosecurity/falco/pull/1033)]\n* fix: version follows semver 2 bnf [[#872](https://github.com/falcosecurity/falco/pull/872)]\n\n### Rule Changes\n",
                      "markdown": "`\n### Bug Fixes\n\n* fix: the base64 output format (-b) now works with both json and normal output. [[#1033](https://github.com/falcosecurity/falco/pull/1033)]\n* fix: version follows semver 2 bnf [[#872](https://github.com/falcosecurity/falco/pull/872)]\n\n### Rule Changes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1932,
                  "startColumn": 9,
                  "endLine": 1932,
                  "endColumn": 17,
                  "snippet": {
                    "text": "/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binutils-2.30) from a new open repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Bug Fixes\n\n* fix(docker): updating `stable` and `local` images to run from `debian:stable` [[#1018](https://github.com/falcosecurity/falco/pu",
                    "rendered": {
                      "text": "/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binutils-2.30) from a new open repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Bug Fixes\n\n* fix(docker): updating `stable` and `local` images to run from `debian:stable` [[#1018](https://github.com/falcosecurity/falco/pu",
                      "markdown": "`/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binutils-2.30) from a new open repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Bug Fixes\n\n* fix(docker): updating `stable` and `local` images to run from `debian:stable` [[#1018](https://github.com/falcosecurity/falco/pu`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1931,
                  "startColumn": 9,
                  "endLine": 1931,
                  "endColumn": 17,
                  "snippet": {
                    "text": "rator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binutils-2.30) from a new open repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Bug Fixes\n\n* fix(d",
                    "rendered": {
                      "text": "rator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binutils-2.30) from a new open repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Bug Fixes\n\n* fix(d",
                      "markdown": "`rator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binutils-2.30) from a new open repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Bug Fixes\n\n* fix(d`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1930,
                  "startColumn": 69,
                  "endLine": 1930,
                  "endColumn": 75,
                  "snippet": {
                    "text": "(https://github.com/falcosecurity/falco/pull/1074)]\n* new(docker/event-generator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binutils-2.30) from a new open repository [[#105",
                    "rendered": {
                      "text": "(https://github.com/falcosecurity/falco/pull/1074)]\n* new(docker/event-generator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binutils-2.30) from a new open repository [[#105",
                      "markdown": "`(https://github.com/falcosecurity/falco/pull/1074)]\n* new(docker/event-generator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binutils-2.30) from a new open repository [[#105`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1930,
                  "startColumn": 24,
                  "endLine": 1930,
                  "endColumn": 32,
                  "snippet": {
                    "text": "/pull/1086)]\n* docs: update branding [[#1074](https://github.com/falcosecurity/falco/pull/1074)]\n* new(docker/event-generator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binut",
                    "rendered": {
                      "text": "/pull/1086)]\n* docs: update branding [[#1074](https://github.com/falcosecurity/falco/pull/1074)]\n* new(docker/event-generator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binut",
                      "markdown": "`/pull/1086)]\n* docs: update branding [[#1074](https://github.com/falcosecurity/falco/pull/1074)]\n* new(docker/event-generator): add example k8s resource files that allow running the event generator in a k8s cluster. [[#1088](https://github.com/falcosecurity/falco/pull/1088)]\n* update: creating *-dev docker images using build arguments at build time [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker images use packages from the new repositories [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* update: docker image downloads old deb dependencies (gcc-6, gcc-5, binut`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1922,
                  "startColumn": 47,
                  "endLine": 1922,
                  "endColumn": 52,
                  "snippet": {
                    "text": "es (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from git tag (tag, tag-slim, tag-master, latest, latest-slim, latest-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: sign packages with falcosecurity gpg key [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Minor Changes\n\n* new: falco_version_prerelease contains th",
                    "rendered": {
                      "text": "es (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from git tag (tag, tag-slim, tag-master, latest, latest-slim, latest-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: sign packages with falcosecurity gpg key [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Minor Changes\n\n* new: falco_version_prerelease contains th",
                      "markdown": "`es (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from git tag (tag, tag-slim, tag-master, latest, latest-slim, latest-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: sign packages with falcosecurity gpg key [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Minor Changes\n\n* new: falco_version_prerelease contains th`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1922,
                  "startColumn": 28,
                  "endLine": 1922,
                  "endColumn": 36,
                  "snippet": {
                    "text": " release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from git tag (tag, tag-slim, tag-master, latest, latest-slim, latest-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: sign packages with falcosecurity gpg key [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Minor Changes\n\n* new: falco_version_prerel",
                    "rendered": {
                      "text": " release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from git tag (tag, tag-slim, tag-master, latest, latest-slim, latest-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: sign packages with falcosecurity gpg key [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Minor Changes\n\n* new: falco_version_prerel",
                      "markdown": "` release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from git tag (tag, tag-slim, tag-master, latest, latest-slim, latest-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: sign packages with falcosecurity gpg key [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n\n### Minor Changes\n\n* new: falco_version_prerel`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1921,
                  "startColumn": 28,
                  "endLine": 1921,
                  "endColumn": 36,
                  "snippet": {
                    "text": " automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from git tag (tag, tag-slim, tag-master, latest, latest-slim, latest-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* ",
                    "rendered": {
                      "text": " automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from git tag (tag, tag-slim, tag-master, latest, latest-slim, latest-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* ",
                      "markdown": "` automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from git tag (tag, tag-slim, tag-master, latest, latest-slim, latest-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1920,
                  "startColumn": 47,
                  "endLine": 1920,
                  "endColumn": 52,
                  "snippet": {
                    "text": "ges (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from git tag (tag",
                    "rendered": {
                      "text": "ges (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from git tag (tag",
                      "markdown": "`ges (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from git tag (tag`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1920,
                  "startColumn": 28,
                  "endLine": 1920,
                  "endColumn": 33,
                  "snippet": {
                    "text": "y publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker image",
                    "rendered": {
                      "text": "y publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker image",
                      "markdown": "`y publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-slim, master-minimal) [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker image`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1919,
                  "startColumn": 47,
                  "endLine": 1919,
                  "endColumn": 52,
                  "snippet": {
                    "text": " master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-sli",
                    "rendered": {
                      "text": " master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-sli",
                      "markdown": "` master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish docker images from master (master, master-sli`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1918,
                  "startColumn": 47,
                  "endLine": 1918,
                  "endColumn": 52,
                  "snippet": {
                    "text": "stemd scripts or kubernetes deployments. [[#1050](https://github.com/falcosecurity/falco/pull/1050)]\n* new: automatically publish deb packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to ",
                    "rendered": {
                      "text": "stemd scripts or kubernetes deployments. [[#1050](https://github.com/falcosecurity/falco/pull/1050)]\n* new: automatically publish deb packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to ",
                      "markdown": "`stemd scripts or kubernetes deployments. [[#1050](https://github.com/falcosecurity/falco/pull/1050)]\n* new: automatically publish deb packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages (from git tags) to `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1918,
                  "startColumn": 28,
                  "endLine": 1918,
                  "endColumn": 33,
                  "snippet": {
                    "text": "ease update your systemd scripts or kubernetes deployments. [[#1050](https://github.com/falcosecurity/falco/pull/1050)]\n* new: automatically publish deb packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages ",
                    "rendered": {
                      "text": "ease update your systemd scripts or kubernetes deployments. [[#1050](https://github.com/falcosecurity/falco/pull/1050)]\n* new: automatically publish deb packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages ",
                      "markdown": "`ease update your systemd scripts or kubernetes deployments. [[#1050](https://github.com/falcosecurity/falco/pull/1050)]\n* new: automatically publish deb packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from git tags) to public repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release rpm packages `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1917,
                  "startColumn": 47,
                  "endLine": 1917,
                  "endColumn": 52,
                  "snippet": {
                    "text": "leased on 2020-03-17\n\n### Major Changes\n\n* BREAKING CHANGE: the SYSDIG_BPF_PROBE environment variable is now just FALCO_BPF_PROBE (please update your systemd scripts or kubernetes deployments. [[#1050](https://github.com/falcosecurity/falco/pull/1050)]\n* new: automatically publish deb packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from ",
                    "rendered": {
                      "text": "leased on 2020-03-17\n\n### Major Changes\n\n* BREAKING CHANGE: the SYSDIG_BPF_PROBE environment variable is now just FALCO_BPF_PROBE (please update your systemd scripts or kubernetes deployments. [[#1050](https://github.com/falcosecurity/falco/pull/1050)]\n* new: automatically publish deb packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from ",
                      "markdown": "`leased on 2020-03-17\n\n### Major Changes\n\n* BREAKING CHANGE: the SYSDIG_BPF_PROBE environment variable is now just FALCO_BPF_PROBE (please update your systemd scripts or kubernetes deployments. [[#1050](https://github.com/falcosecurity/falco/pull/1050)]\n* new: automatically publish deb packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically publish rpm packages (from git master branch) to public dev repository [[#1059](https://github.com/falcosecurity/falco/pull/1059)]\n* new: automatically release deb packages (from `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1905,
                  "startColumn": 13,
                  "endLine": 1905,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ect traffic that is not to authorized server process and port [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Delete or rename shell history): \"mitre_defense_evation\" tag corrected to \"mitre_defense_evasion\" [[#1143](https://github.com/falcosecurity/falco/pull/1143)]\n* rule(Delete Bash History): \"mitre_defense_evation\" tag corrected to \"mitre_defense_evasion\" [[#1143](https://github.com/falcosecurity/falco/pull/1143)]\n* rule(Write below root): use pmatch to check against known root directories [[#1137](https://github.com/falcosecurity/falco/pull/1137)]\n* rule(Detect outbound conne",
                    "rendered": {
                      "text": "ect traffic that is not to authorized server process and port [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Delete or rename shell history): \"mitre_defense_evation\" tag corrected to \"mitre_defense_evasion\" [[#1143](https://github.com/falcosecurity/falco/pull/1143)]\n* rule(Delete Bash History): \"mitre_defense_evation\" tag corrected to \"mitre_defense_evasion\" [[#1143](https://github.com/falcosecurity/falco/pull/1143)]\n* rule(Write below root): use pmatch to check against known root directories [[#1137](https://github.com/falcosecurity/falco/pull/1137)]\n* rule(Detect outbound conne",
                      "markdown": "`ect traffic that is not to authorized server process and port [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Delete or rename shell history): \"mitre_defense_evation\" tag corrected to \"mitre_defense_evasion\" [[#1143](https://github.com/falcosecurity/falco/pull/1143)]\n* rule(Delete Bash History): \"mitre_defense_evation\" tag corrected to \"mitre_defense_evasion\" [[#1143](https://github.com/falcosecurity/falco/pull/1143)]\n* rule(Write below root): use pmatch to check against known root directories [[#1137](https://github.com/falcosecurity/falco/pull/1137)]\n* rule(Detect outbound conne`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 121,
                  "endLine": 1901,
                  "endColumn": 127,
                  "snippet": {
                    "text": "e Successfully Joined the Cluster): detect a node successfully joined the cluster outside of the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Unsuccessfully Tried to Join the Cluster): detect an unsuccessful attempt to join the cluster for a node not in the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Network Connection outside Local Subnet): detect traffic to image outside local subnet [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Outbound or Inbound Traffic not to Authorized ",
                    "rendered": {
                      "text": "e Successfully Joined the Cluster): detect a node successfully joined the cluster outside of the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Unsuccessfully Tried to Join the Cluster): detect an unsuccessful attempt to join the cluster for a node not in the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Network Connection outside Local Subnet): detect traffic to image outside local subnet [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Outbound or Inbound Traffic not to Authorized ",
                      "markdown": "`e Successfully Joined the Cluster): detect a node successfully joined the cluster outside of the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Unsuccessfully Tried to Join the Cluster): detect an unsuccessful attempt to join the cluster for a node not in the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Network Connection outside Local Subnet): detect traffic to image outside local subnet [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Outbound or Inbound Traffic not to Authorized `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 16,
                  "endLine": 1901,
                  "endColumn": 22,
                  "snippet": {
                    "text": "rule enabled by default) [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Successfully Joined the Cluster): detect a node successfully joined the cluster outside of the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Unsuccessfully Tried to Join the Cluster): detect an unsuccessful attempt to join the cluster for a node not in the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Network Connection outside Local Subnet): detect traffic to image outside local subnet [[#1122]",
                    "rendered": {
                      "text": "rule enabled by default) [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Successfully Joined the Cluster): detect a node successfully joined the cluster outside of the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Unsuccessfully Tried to Join the Cluster): detect an unsuccessful attempt to join the cluster for a node not in the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Network Connection outside Local Subnet): detect traffic to image outside local subnet [[#1122]",
                      "markdown": "`rule enabled by default) [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Successfully Joined the Cluster): detect a node successfully joined the cluster outside of the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Unsuccessfully Tried to Join the Cluster): detect an unsuccessful attempt to join the cluster for a node not in the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Network Connection outside Local Subnet): detect traffic to image outside local subnet [[#1122]`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1900,
                  "startColumn": 64,
                  "endLine": 1900,
                  "endColumn": 70,
                  "snippet": {
                    "text": "osecurity/falco/pull/1122)]\n* rule(Ingress Object without TLS Certificate Created): detect any attempt to create an ingress without TLS certification (rule enabled by default) [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Successfully Joined the Cluster): detect a node successfully joined the cluster outside of the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Unsuccessfully Tried to Join the Cluster): detect an unsuccessful attempt to join the cluster for a node not in the list of allowed nodes [[#1122](ht",
                    "rendered": {
                      "text": "osecurity/falco/pull/1122)]\n* rule(Ingress Object without TLS Certificate Created): detect any attempt to create an ingress without TLS certification (rule enabled by default) [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Successfully Joined the Cluster): detect a node successfully joined the cluster outside of the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Unsuccessfully Tried to Join the Cluster): detect an unsuccessful attempt to join the cluster for a node not in the list of allowed nodes [[#1122](ht",
                      "markdown": "`osecurity/falco/pull/1122)]\n* rule(Ingress Object without TLS Certificate Created): detect any attempt to create an ingress without TLS certification (rule enabled by default) [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Successfully Joined the Cluster): detect a node successfully joined the cluster outside of the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Unsuccessfully Tried to Join the Cluster): detect an unsuccessful attempt to join the cluster for a node not in the list of allowed nodes [[#1122](ht`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1900,
                  "startColumn": 16,
                  "endLine": 1900,
                  "endColumn": 22,
                  "snippet": {
                    "text": "ith full access [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Ingress Object without TLS Certificate Created): detect any attempt to create an ingress without TLS certification (rule enabled by default) [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Successfully Joined the Cluster): detect a node successfully joined the cluster outside of the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Unsuccessfully Tried to Join the Cluster): detect an unsuccessful attempt to join the cluster for a n",
                    "rendered": {
                      "text": "ith full access [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Ingress Object without TLS Certificate Created): detect any attempt to create an ingress without TLS certification (rule enabled by default) [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Successfully Joined the Cluster): detect a node successfully joined the cluster outside of the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Unsuccessfully Tried to Join the Cluster): detect an unsuccessful attempt to join the cluster for a n",
                      "markdown": "`ith full access [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Ingress Object without TLS Certificate Created): detect any attempt to create an ingress without TLS certification (rule enabled by default) [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Successfully Joined the Cluster): detect a node successfully joined the cluster outside of the list of allowed nodes [[#1122](https://github.com/falcosecurity/falco/pull/1122)]\n* rule(Untrusted Node Unsuccessfully Tried to Join the Cluster): detect an unsuccessful attempt to join the cluster for a n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1892,
                  "startColumn": 97,
                  "endLine": 1892,
                  "endColumn": 105,
                  "snippet": {
                    "text": "* fix: HOST_ROOT environment variable detection [[#1133](https://github.com/falcosecurity/falco/pull/1133)]\n* fix(driver/bpf): stricter conditionals while dealing with strings [[#1131](https://github.com/falcosecurity/falco/pull/1131)]\n* fix: `/usr/bin/falco-${DRIVER_VERSION}` driver directory [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n* fix: FALCO_VERSION env variable inside Falco containers contains the Falco version now (not the docker image tag) [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n\n\n### Rule Changes\n",
                    "rendered": {
                      "text": "* fix: HOST_ROOT environment variable detection [[#1133](https://github.com/falcosecurity/falco/pull/1133)]\n* fix(driver/bpf): stricter conditionals while dealing with strings [[#1131](https://github.com/falcosecurity/falco/pull/1131)]\n* fix: `/usr/bin/falco-${DRIVER_VERSION}` driver directory [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n* fix: FALCO_VERSION env variable inside Falco containers contains the Falco version now (not the docker image tag) [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n\n\n### Rule Changes\n",
                      "markdown": "`* fix: HOST_ROOT environment variable detection [[#1133](https://github.com/falcosecurity/falco/pull/1133)]\n* fix(driver/bpf): stricter conditionals while dealing with strings [[#1131](https://github.com/falcosecurity/falco/pull/1131)]\n* fix: `/usr/bin/falco-${DRIVER_VERSION}` driver directory [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n* fix: FALCO_VERSION env variable inside Falco containers contains the Falco version now (not the docker image tag) [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n\n\n### Rule Changes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1892,
                  "startColumn": 20,
                  "endLine": 1892,
                  "endColumn": 25,
                  "snippet": {
                    "text": "* fix: HOST_ROOT environment variable detection [[#1133](https://github.com/falcosecurity/falco/pull/1133)]\n* fix(driver/bpf): stricter conditionals while dealing with strings [[#1131](https://github.com/falcosecurity/falco/pull/1131)]\n* fix: `/usr/bin/falco-${DRIVER_VERSION}` driver directory [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n* fix: FALCO_VERSION env variable inside Falco containers contains the Falco version now (not the docker image tag) [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n\n\n### Rule Changes\n",
                    "rendered": {
                      "text": "* fix: HOST_ROOT environment variable detection [[#1133](https://github.com/falcosecurity/falco/pull/1133)]\n* fix(driver/bpf): stricter conditionals while dealing with strings [[#1131](https://github.com/falcosecurity/falco/pull/1131)]\n* fix: `/usr/bin/falco-${DRIVER_VERSION}` driver directory [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n* fix: FALCO_VERSION env variable inside Falco containers contains the Falco version now (not the docker image tag) [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n\n\n### Rule Changes\n",
                      "markdown": "`* fix: HOST_ROOT environment variable detection [[#1133](https://github.com/falcosecurity/falco/pull/1133)]\n* fix(driver/bpf): stricter conditionals while dealing with strings [[#1131](https://github.com/falcosecurity/falco/pull/1131)]\n* fix: `/usr/bin/falco-${DRIVER_VERSION}` driver directory [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n* fix: FALCO_VERSION env variable inside Falco containers contains the Falco version now (not the docker image tag) [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n\n\n### Rule Changes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1888,
                  "startColumn": 17,
                  "endLine": 1888,
                  "endColumn": 25,
                  "snippet": {
                    "text": "ies [[#1118](https://github.com/falcosecurity/falco/pull/1118)]\n\n\n### Bug Fixes\n\n* fix(integrations/k8s-using-daemonset): added missing privileges for the apps Kubernetes API group in the falco-cluster-role when using RBAC [[#1136](https://github.com/falcosecurity/falco/pull/1136)]\n* fix: connect to docker works also with libcurl >= 7.69.0 [[#1138](https://github.com/falcosecurity/falco/pull/1138)]\n* fix: HOST_ROOT environment variable detection [[#1133](https://github.com/falcosecurity/falco/pull/1133)]\n* fix(driver/bpf): stricter conditionals while dealing with strings [[#1131](https://github.com/fa",
                    "rendered": {
                      "text": "ies [[#1118](https://github.com/falcosecurity/falco/pull/1118)]\n\n\n### Bug Fixes\n\n* fix(integrations/k8s-using-daemonset): added missing privileges for the apps Kubernetes API group in the falco-cluster-role when using RBAC [[#1136](https://github.com/falcosecurity/falco/pull/1136)]\n* fix: connect to docker works also with libcurl >= 7.69.0 [[#1138](https://github.com/falcosecurity/falco/pull/1138)]\n* fix: HOST_ROOT environment variable detection [[#1133](https://github.com/falcosecurity/falco/pull/1133)]\n* fix(driver/bpf): stricter conditionals while dealing with strings [[#1131](https://github.com/fa",
                      "markdown": "`ies [[#1118](https://github.com/falcosecurity/falco/pull/1118)]\n\n\n### Bug Fixes\n\n* fix(integrations/k8s-using-daemonset): added missing privileges for the apps Kubernetes API group in the falco-cluster-role when using RBAC [[#1136](https://github.com/falcosecurity/falco/pull/1136)]\n* fix: connect to docker works also with libcurl >= 7.69.0 [[#1138](https://github.com/falcosecurity/falco/pull/1138)]\n* fix: HOST_ROOT environment variable detection [[#1133](https://github.com/falcosecurity/falco/pull/1133)]\n* fix(driver/bpf): stricter conditionals while dealing with strings [[#1131](https://github.com/fa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1881,
                  "startColumn": 28,
                  "endLine": 1881,
                  "endColumn": 36,
                  "snippet": {
                    "text": "lcosecurity/falco/pull/1140)]\n* update: bump driver version to cd3d10123e [[#1131](https://github.com/falcosecurity/falco/pull/1131)]\n* update(docker): remove RHEL, kernel/linuxkit, and kernel/probeloader images [[#1124](https://github.com/falcosecurity/falco/pull/1124)]\n* update: falco-probe-loader script is falco-driver-loader now [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n* update: using only sha256 hashes when pulling build dependencies [[#1118](https://github.com/falcosecurity/falco/pull/1118)]\n\n\n### Bug Fixes\n\n* fix(integrations/k8s-using-daemonset): added missing privileges for",
                    "rendered": {
                      "text": "lcosecurity/falco/pull/1140)]\n* update: bump driver version to cd3d10123e [[#1131](https://github.com/falcosecurity/falco/pull/1131)]\n* update(docker): remove RHEL, kernel/linuxkit, and kernel/probeloader images [[#1124](https://github.com/falcosecurity/falco/pull/1124)]\n* update: falco-probe-loader script is falco-driver-loader now [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n* update: using only sha256 hashes when pulling build dependencies [[#1118](https://github.com/falcosecurity/falco/pull/1118)]\n\n\n### Bug Fixes\n\n* fix(integrations/k8s-using-daemonset): added missing privileges for",
                      "markdown": "`lcosecurity/falco/pull/1140)]\n* update: bump driver version to cd3d10123e [[#1131](https://github.com/falcosecurity/falco/pull/1131)]\n* update(docker): remove RHEL, kernel/linuxkit, and kernel/probeloader images [[#1124](https://github.com/falcosecurity/falco/pull/1124)]\n* update: falco-probe-loader script is falco-driver-loader now [[#1111](https://github.com/falcosecurity/falco/pull/1111)]\n* update: using only sha256 hashes when pulling build dependencies [[#1118](https://github.com/falcosecurity/falco/pull/1118)]\n\n\n### Bug Fixes\n\n* fix(integrations/k8s-using-daemonset): added missing privileges for`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1857,
                  "startColumn": 64,
                  "endLine": 1857,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\n### Bug Fixes\n\n* fix: correct driver path (/usr/src/falco-%driver_version%) for RPM package [[#1148](https://github.com/falcosecurity/falco/pull/1148)]\n\n### Rule Changes\n\n",
                    "rendered": {
                      "text": "\n### Bug Fixes\n\n* fix: correct driver path (/usr/src/falco-%driver_version%) for RPM package [[#1148](https://github.com/falcosecurity/falco/pull/1148)]\n\n### Rule Changes\n\n",
                      "markdown": "`\n### Bug Fixes\n\n* fix: correct driver path (/usr/src/falco-%driver_version%) for RPM package [[#1148](https://github.com/falcosecurity/falco/pull/1148)]\n\n### Rule Changes\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1841,
                  "startColumn": 107,
                  "endLine": 1841,
                  "endColumn": 116,
                  "snippet": {
                    "text": "* rule(K8s Secret Created): new rule to track the creation of Kubernetes secrets (excluding kube-system and service account secrets) [[#1151](https://github.com/falcosecurity/falco/pull/1151)]\n* rule(K8s Secret Deleted): new rule to track the deletion of Kubernetes secrets (excluding kube-system and service account secrets) [[#1151](https://github.com/falcosecurity/falco/pull/1151)]\n\n## v0.22.1\n\nReleased on 2020-04-17\n\n### Major Changes\n\n* Same as v0.22.0\n\n### Minor Changes\n\n* Same as v0.22.0\n\n### Bug Fixes\n\n* fix: correct driver path (/usr/src/falco-%driver_version%) for RPM package [[#1148](https://g",
                    "rendered": {
                      "text": "* rule(K8s Secret Created): new rule to track the creation of Kubernetes secrets (excluding kube-system and service account secrets) [[#1151](https://github.com/falcosecurity/falco/pull/1151)]\n* rule(K8s Secret Deleted): new rule to track the deletion of Kubernetes secrets (excluding kube-system and service account secrets) [[#1151](https://github.com/falcosecurity/falco/pull/1151)]\n\n## v0.22.1\n\nReleased on 2020-04-17\n\n### Major Changes\n\n* Same as v0.22.0\n\n### Minor Changes\n\n* Same as v0.22.0\n\n### Bug Fixes\n\n* fix: correct driver path (/usr/src/falco-%driver_version%) for RPM package [[#1148](https://g",
                      "markdown": "`* rule(K8s Secret Created): new rule to track the creation of Kubernetes secrets (excluding kube-system and service account secrets) [[#1151](https://github.com/falcosecurity/falco/pull/1151)]\n* rule(K8s Secret Deleted): new rule to track the deletion of Kubernetes secrets (excluding kube-system and service account secrets) [[#1151](https://github.com/falcosecurity/falco/pull/1151)]\n\n## v0.22.1\n\nReleased on 2020-04-17\n\n### Major Changes\n\n* Same as v0.22.0\n\n### Minor Changes\n\n* Same as v0.22.0\n\n### Bug Fixes\n\n* fix: correct driver path (/usr/src/falco-%driver_version%) for RPM package [[#1148](https://g`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1840,
                  "startColumn": 107,
                  "endLine": 1840,
                  "endColumn": 116,
                  "snippet": {
                    "text": "direct STDOUT/STDIN to Network Connection in Container): new rule to detect Redirect stdout/stdin to network connection in container [[#1152](https://github.com/falcosecurity/falco/pull/1152)]\n* rule(K8s Secret Created): new rule to track the creation of Kubernetes secrets (excluding kube-system and service account secrets) [[#1151](https://github.com/falcosecurity/falco/pull/1151)]\n* rule(K8s Secret Deleted): new rule to track the deletion of Kubernetes secrets (excluding kube-system and service account secrets) [[#1151](https://github.com/falcosecurity/falco/pull/1151)]\n\n## v0.22.1\n\nReleased on 2020-",
                    "rendered": {
                      "text": "direct STDOUT/STDIN to Network Connection in Container): new rule to detect Redirect stdout/stdin to network connection in container [[#1152](https://github.com/falcosecurity/falco/pull/1152)]\n* rule(K8s Secret Created): new rule to track the creation of Kubernetes secrets (excluding kube-system and service account secrets) [[#1151](https://github.com/falcosecurity/falco/pull/1151)]\n* rule(K8s Secret Deleted): new rule to track the deletion of Kubernetes secrets (excluding kube-system and service account secrets) [[#1151](https://github.com/falcosecurity/falco/pull/1151)]\n\n## v0.22.1\n\nReleased on 2020-",
                      "markdown": "`direct STDOUT/STDIN to Network Connection in Container): new rule to detect Redirect stdout/stdin to network connection in container [[#1152](https://github.com/falcosecurity/falco/pull/1152)]\n* rule(K8s Secret Created): new rule to track the creation of Kubernetes secrets (excluding kube-system and service account secrets) [[#1151](https://github.com/falcosecurity/falco/pull/1151)]\n* rule(K8s Secret Deleted): new rule to track the deletion of Kubernetes secrets (excluding kube-system and service account secrets) [[#1151](https://github.com/falcosecurity/falco/pull/1151)]\n\n## v0.22.1\n\nReleased on 2020-`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1808,
                  "startColumn": 44,
                  "endLine": 1808,
                  "endColumn": 52,
                  "snippet": {
                    "text": "ll/1213)]\n\n## v0.23.0\n\nReleased on 2020-05-18\n\n### Major Changes\n\n* BREAKING CHANGE: the falco-driver-loader script now references `falco-probe.o` and `falco-probe.ko` as `falco.o` and `falco.ko` [[#1158](https://github.com/falcosecurity/falco/pull/1158)]\n* BREAKING CHANGE: the `falco-driver-loader` script environment variable to use a custom repository to download drivers now uses the `DRIVERS_REPO` environment variable instead of `DRIVER_LOOKUP_URL`. This variable must contain the parent URI containing the following directory structure `/$driver_version$/falco_$target$_$kernelrelease$_$kernelversion",
                    "rendered": {
                      "text": "ll/1213)]\n\n## v0.23.0\n\nReleased on 2020-05-18\n\n### Major Changes\n\n* BREAKING CHANGE: the falco-driver-loader script now references `falco-probe.o` and `falco-probe.ko` as `falco.o` and `falco.ko` [[#1158](https://github.com/falcosecurity/falco/pull/1158)]\n* BREAKING CHANGE: the `falco-driver-loader` script environment variable to use a custom repository to download drivers now uses the `DRIVERS_REPO` environment variable instead of `DRIVER_LOOKUP_URL`. This variable must contain the parent URI containing the following directory structure `/$driver_version$/falco_$target$_$kernelrelease$_$kernelversion",
                      "markdown": "`ll/1213)]\n\n## v0.23.0\n\nReleased on 2020-05-18\n\n### Major Changes\n\n* BREAKING CHANGE: the falco-driver-loader script now references `falco-probe.o` and `falco-probe.ko` as `falco.o` and `falco.ko` [[#1158](https://github.com/falcosecurity/falco/pull/1158)]\n* BREAKING CHANGE: the `falco-driver-loader` script environment variable to use a custom repository to download drivers now uses the `DRIVERS_REPO` environment variable instead of `DRIVER_LOOKUP_URL`. This variable must contain the parent URI containing the following directory structure `/$driver_version$/falco_$target$_$kernelrelease$_$kernelversion`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1807,
                  "startColumn": 42,
                  "endLine": 1807,
                  "endColumn": 50,
                  "snippet": {
                    "text": "yscall [[#1250](https://github.com/falcosecurity/falco/pull/1250)]\n* rule(macro user_known_set_setuid_or_setgid_bit_conditions): create macro [[#1213](https://github.com/falcosecurity/falco/pull/1213)]\n\n## v0.23.0\n\nReleased on 2020-05-18\n\n### Major Changes\n\n* BREAKING CHANGE: the falco-driver-loader script now references `falco-probe.o` and `falco-probe.ko` as `falco.o` and `falco.ko` [[#1158](https://github.com/falcosecurity/falco/pull/1158)]\n* BREAKING CHANGE: the `falco-driver-loader` script environment variable to use a custom repository to download drivers now uses the `DRIVERS_REPO` environment ",
                    "rendered": {
                      "text": "yscall [[#1250](https://github.com/falcosecurity/falco/pull/1250)]\n* rule(macro user_known_set_setuid_or_setgid_bit_conditions): create macro [[#1213](https://github.com/falcosecurity/falco/pull/1213)]\n\n## v0.23.0\n\nReleased on 2020-05-18\n\n### Major Changes\n\n* BREAKING CHANGE: the falco-driver-loader script now references `falco-probe.o` and `falco-probe.ko` as `falco.o` and `falco.ko` [[#1158](https://github.com/falcosecurity/falco/pull/1158)]\n* BREAKING CHANGE: the `falco-driver-loader` script environment variable to use a custom repository to download drivers now uses the `DRIVERS_REPO` environment ",
                      "markdown": "`yscall [[#1250](https://github.com/falcosecurity/falco/pull/1250)]\n* rule(macro user_known_set_setuid_or_setgid_bit_conditions): create macro [[#1213](https://github.com/falcosecurity/falco/pull/1213)]\n\n## v0.23.0\n\nReleased on 2020-05-18\n\n### Major Changes\n\n* BREAKING CHANGE: the falco-driver-loader script now references `falco-probe.o` and `falco-probe.ko` as `falco.o` and `falco.ko` [[#1158](https://github.com/falcosecurity/falco/pull/1158)]\n* BREAKING CHANGE: the `falco-driver-loader` script environment variable to use a custom repository to download drivers now uses the `DRIVERS_REPO` environment `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1777,
                  "startColumn": 89,
                  "endLine": 1777,
                  "endColumn": 98,
                  "snippet": {
                    "text": "alcosecurity/falco/pull/1294)]\n* rule(macro user_known_node_port_service): do not throw for services known to start with a NopePort service type (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Create NodePort Service): do not throw for services known to start with a NopePort service type (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_exec_pod_activities): do not throw for activities known to attach/exec to a pod (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Attach/Exec Pod): do not throw for activities known ",
                    "rendered": {
                      "text": "alcosecurity/falco/pull/1294)]\n* rule(macro user_known_node_port_service): do not throw for services known to start with a NopePort service type (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Create NodePort Service): do not throw for services known to start with a NopePort service type (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_exec_pod_activities): do not throw for activities known to attach/exec to a pod (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Attach/Exec Pod): do not throw for activities known ",
                      "markdown": "`alcosecurity/falco/pull/1294)]\n* rule(macro user_known_node_port_service): do not throw for services known to start with a NopePort service type (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Create NodePort Service): do not throw for services known to start with a NopePort service type (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_exec_pod_activities): do not throw for activities known to attach/exec to a pod (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Attach/Exec Pod): do not throw for activities known `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1776,
                  "startColumn": 100,
                  "endLine": 1776,
                  "endColumn": 109,
                  "snippet": {
                    "text": "ity/falco/pull/1294)]\n* rule(Container Drift Detected (open+create)): do not throw for activities known to create executables in containers [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_node_port_service): do not throw for services known to start with a NopePort service type (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Create NodePort Service): do not throw for services known to start with a NopePort service type (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_exec_pod_activities): do not throw f",
                    "rendered": {
                      "text": "ity/falco/pull/1294)]\n* rule(Container Drift Detected (open+create)): do not throw for activities known to create executables in containers [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_node_port_service): do not throw for services known to start with a NopePort service type (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Create NodePort Service): do not throw for services known to start with a NopePort service type (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_exec_pod_activities): do not throw f",
                      "markdown": "`ity/falco/pull/1294)]\n* rule(Container Drift Detected (open+create)): do not throw for activities known to create executables in containers [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_node_port_service): do not throw for services known to start with a NopePort service type (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Create NodePort Service): do not throw for services known to start with a NopePort service type (k8s) [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_exec_pod_activities): do not throw f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1750,
                  "startColumn": 76,
                  "endLine": 1750,
                  "endColumn": 81,
                  "snippet": {
                    "text": "m/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_write_rpm_database_activities): new macro to be overridden to list activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Write below rpm database): do not throw for activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_db_spawned_processes): new macro to be overridden to list processes known to spawn DB [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(DB program spawned process): do not throw for processe",
                    "rendered": {
                      "text": "m/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_write_rpm_database_activities): new macro to be overridden to list activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Write below rpm database): do not throw for activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_db_spawned_processes): new macro to be overridden to list processes known to spawn DB [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(DB program spawned process): do not throw for processe",
                      "markdown": "`m/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_write_rpm_database_activities): new macro to be overridden to list activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Write below rpm database): do not throw for activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_db_spawned_processes): new macro to be overridden to list processes known to spawn DB [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(DB program spawned process): do not throw for processe`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1750,
                  "startColumn": 18,
                  "endLine": 1750,
                  "endColumn": 23,
                  "snippet": {
                    "text": "s known to read sensitive files [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_write_rpm_database_activities): new macro to be overridden to list activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Write below rpm database): do not throw for activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_db_spawned_processes): new macro to be overridden to list processes known to spawn DB [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* r",
                    "rendered": {
                      "text": "s known to read sensitive files [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_write_rpm_database_activities): new macro to be overridden to list activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Write below rpm database): do not throw for activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_db_spawned_processes): new macro to be overridden to list processes known to spawn DB [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* r",
                      "markdown": "`s known to read sensitive files [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_write_rpm_database_activities): new macro to be overridden to list activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Write below rpm database): do not throw for activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_db_spawned_processes): new macro to be overridden to list processes known to spawn DB [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* r`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1749,
                  "startColumn": 116,
                  "endLine": 1749,
                  "endColumn": 121,
                  "snippet": {
                    "text": "security/falco/pull/1294)]\n* rule(Read sensitive file untrusted): do not throw for activities known to read sensitive files [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_write_rpm_database_activities): new macro to be overridden to list activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Write below rpm database): do not throw for activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_db_spawned_processes): new macro to be overridden to list",
                    "rendered": {
                      "text": "security/falco/pull/1294)]\n* rule(Read sensitive file untrusted): do not throw for activities known to read sensitive files [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_write_rpm_database_activities): new macro to be overridden to list activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Write below rpm database): do not throw for activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_db_spawned_processes): new macro to be overridden to list",
                      "markdown": "`security/falco/pull/1294)]\n* rule(Read sensitive file untrusted): do not throw for activities known to read sensitive files [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_write_rpm_database_activities): new macro to be overridden to list activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Write below rpm database): do not throw for activities known to write RPM database [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_db_spawned_processes): new macro to be overridden to list`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1745,
                  "startColumn": 71,
                  "endLine": 1745,
                  "endColumn": 76,
                  "snippet": {
                    "text": "ub.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activities that read SSH info  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read ssh information): do not throw for activities known to read SSH info [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_sensitive_files_activities): new macro to be overridden to list activities known to read sensitive files [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read sensitive file trusted after ",
                    "rendered": {
                      "text": "ub.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activities that read SSH info  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read ssh information): do not throw for activities known to read SSH info [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_sensitive_files_activities): new macro to be overridden to list activities known to read sensitive files [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read sensitive file trusted after ",
                      "markdown": "`ub.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activities that read SSH info  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read ssh information): do not throw for activities known to read SSH info [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_sensitive_files_activities): new macro to be overridden to list activities known to read sensitive files [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read sensitive file trusted after `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1745,
                  "startColumn": 11,
                  "endLine": 1745,
                  "endColumn": 16,
                  "snippet": {
                    "text": " exclude known package registry update [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activities that read SSH info  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read ssh information): do not throw for activities known to read SSH info [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_sensitive_files_activities): new macro to be overridden to list activities known to read sensitive files [[#1294](https://github.com/falcosecurity",
                    "rendered": {
                      "text": " exclude known package registry update [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activities that read SSH info  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read ssh information): do not throw for activities known to read SSH info [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_sensitive_files_activities): new macro to be overridden to list activities known to read sensitive files [[#1294](https://github.com/falcosecurity",
                      "markdown": "` exclude known package registry update [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activities that read SSH info  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read ssh information): do not throw for activities known to read SSH info [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_sensitive_files_activities): new macro to be overridden to list activities known to read sensitive files [[#1294](https://github.com/falcosecurity`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1744,
                  "startColumn": 119,
                  "endLine": 1744,
                  "endColumn": 124,
                  "snippet": {
                    "text": "ttps://github.com/falcosecurity/falco/pull/1294)]\n* rule(Update Package Registry): exclude known package registry update [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activities that read SSH info  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read ssh information): do not throw for activities known to read SSH info [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_sensitive_files_activities): new macro to be overridden to list ",
                    "rendered": {
                      "text": "ttps://github.com/falcosecurity/falco/pull/1294)]\n* rule(Update Package Registry): exclude known package registry update [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activities that read SSH info  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read ssh information): do not throw for activities known to read SSH info [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_sensitive_files_activities): new macro to be overridden to list ",
                      "markdown": "`ttps://github.com/falcosecurity/falco/pull/1294)]\n* rule(Update Package Registry): exclude known package registry update [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_ssh_information_activities): new macro to be overridden to list known activities that read SSH info  [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(Read ssh information): do not throw for activities known to read SSH info [[#1294](https://github.com/falcosecurity/falco/pull/1294)]\n* rule(macro user_known_read_sensitive_files_activities): new macro to be overridden to list `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1674,
                  "startColumn": 27,
                  "endLine": 1674,
                  "endColumn": 35,
                  "snippet": {
                    "text": "### Bug Fixes\n\n* fix(userspace/falco): correct the fallback mechanism for loading the kernel module [[#1366](https://github.com/falcosecurity/falco/pull/1366)] - [@leogr](https://github.com/leogr)\n* fix(falco-driver-loader): script crashing when using arguments [[#1330](https://github.com/falcosecurity/falco/pull/1330)] - [@antoinedeschenes](https://github.com/antoinedeschenes)\n\n\n### Rule Changes\n",
                    "rendered": {
                      "text": "### Bug Fixes\n\n* fix(userspace/falco): correct the fallback mechanism for loading the kernel module [[#1366](https://github.com/falcosecurity/falco/pull/1366)] - [@leogr](https://github.com/leogr)\n* fix(falco-driver-loader): script crashing when using arguments [[#1330](https://github.com/falcosecurity/falco/pull/1330)] - [@antoinedeschenes](https://github.com/antoinedeschenes)\n\n\n### Rule Changes\n",
                      "markdown": "`### Bug Fixes\n\n* fix(userspace/falco): correct the fallback mechanism for loading the kernel module [[#1366](https://github.com/falcosecurity/falco/pull/1366)] - [@leogr](https://github.com/leogr)\n* fix(falco-driver-loader): script crashing when using arguments [[#1330](https://github.com/falcosecurity/falco/pull/1330)] - [@antoinedeschenes](https://github.com/antoinedeschenes)\n\n\n### Rule Changes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1649,
                  "startColumn": 88,
                  "endLine": 1649,
                  "endColumn": 94,
                  "snippet": {
                    "text": "io)\n* rule(macro consider_packet_socket_communication): enable \"Packet socket created in container\" rule by default. [[#1402](https://github.com/falcosecurity/falco/pull/1402)] - [@rung](https://github.com/rung)\n* rule(Delete or rename shell history): skip docker overlay filesystems when considering bash history [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(Disallowed K8s User): quote colons in user names [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(macro falco_sensitive_mount_con",
                    "rendered": {
                      "text": "io)\n* rule(macro consider_packet_socket_communication): enable \"Packet socket created in container\" rule by default. [[#1402](https://github.com/falcosecurity/falco/pull/1402)] - [@rung](https://github.com/rung)\n* rule(Delete or rename shell history): skip docker overlay filesystems when considering bash history [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(Disallowed K8s User): quote colons in user names [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(macro falco_sensitive_mount_con",
                      "markdown": "`io)\n* rule(macro consider_packet_socket_communication): enable \"Packet socket created in container\" rule by default. [[#1402](https://github.com/falcosecurity/falco/pull/1402)] - [@rung](https://github.com/rung)\n* rule(Delete or rename shell history): skip docker overlay filesystems when considering bash history [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(Disallowed K8s User): quote colons in user names [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(macro falco_sensitive_mount_con`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1649,
                  "startColumn": 44,
                  "endLine": 1649,
                  "endColumn": 52,
                  "snippet": {
                    "text": "l/1373)] - [@ldegio](https://github.com/ldegio)\n* rule(macro consider_packet_socket_communication): enable \"Packet socket created in container\" rule by default. [[#1402](https://github.com/falcosecurity/falco/pull/1402)] - [@rung](https://github.com/rung)\n* rule(Delete or rename shell history): skip docker overlay filesystems when considering bash history [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(Disallowed K8s User): quote colons in user names [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mste",
                    "rendered": {
                      "text": "l/1373)] - [@ldegio](https://github.com/ldegio)\n* rule(macro consider_packet_socket_communication): enable \"Packet socket created in container\" rule by default. [[#1402](https://github.com/falcosecurity/falco/pull/1402)] - [@rung](https://github.com/rung)\n* rule(Delete or rename shell history): skip docker overlay filesystems when considering bash history [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(Disallowed K8s User): quote colons in user names [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mste",
                      "markdown": "`l/1373)] - [@ldegio](https://github.com/ldegio)\n* rule(macro consider_packet_socket_communication): enable \"Packet socket created in container\" rule by default. [[#1402](https://github.com/falcosecurity/falco/pull/1402)] - [@rung](https://github.com/rung)\n* rule(Delete or rename shell history): skip docker overlay filesystems when considering bash history [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mstemm)\n* rule(Disallowed K8s User): quote colons in user names [[#1393](https://github.com/falcosecurity/falco/pull/1393)] - [@mstemm](https://github.com/mste`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1613,
                  "startColumn": 45,
                  "endLine": 1613,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n### Major Changes\n\n* new: CLI flag `--alternate-lua-dir` to load Lua files from arbitrary paths [[#1419](https://github.com/falcosecurity/falco/pull/1419)] - [@admiral0](https://github.com/admiral0)\n\n\n### Rule Changes\n",
                    "rendered": {
                      "text": "\n### Major Changes\n\n* new: CLI flag `--alternate-lua-dir` to load Lua files from arbitrary paths [[#1419](https://github.com/falcosecurity/falco/pull/1419)] - [@admiral0](https://github.com/admiral0)\n\n\n### Rule Changes\n",
                      "markdown": "`\n### Major Changes\n\n* new: CLI flag `--alternate-lua-dir` to load Lua files from arbitrary paths [[#1419](https://github.com/falcosecurity/falco/pull/1419)] - [@admiral0](https://github.com/admiral0)\n\n\n### Rule Changes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1539,
                  "startColumn": 49,
                  "endLine": 1539,
                  "endColumn": 58,
                  "snippet": {
                    "text": "](https://github.com/leogr)\n* ci: fix missing infra context to publish stable Falco packages [[#1615](https://github.com/falcosecurity/falco/pull/1615)] - [@leodido](https://github.com/leodido)\n\n\n## v0.27.0\n\nReleased on 2021-01-18\n\n### Major Changes\n\n* new: Added falco engine version to grpc version service [[#1507](https://github.com/falcosecurity/falco/pull/1507)] - [@nibalizer](https://github.com/nibalizer)\n* BREAKING CHANGE: Users who run Falco without a config file will be unable to do that any more, Falco now expects a configuration file to be passed all the times. Developers may need to adjust t",
                    "rendered": {
                      "text": "](https://github.com/leogr)\n* ci: fix missing infra context to publish stable Falco packages [[#1615](https://github.com/falcosecurity/falco/pull/1615)] - [@leodido](https://github.com/leodido)\n\n\n## v0.27.0\n\nReleased on 2021-01-18\n\n### Major Changes\n\n* new: Added falco engine version to grpc version service [[#1507](https://github.com/falcosecurity/falco/pull/1507)] - [@nibalizer](https://github.com/nibalizer)\n* BREAKING CHANGE: Users who run Falco without a config file will be unable to do that any more, Falco now expects a configuration file to be passed all the times. Developers may need to adjust t",
                      "markdown": "`](https://github.com/leogr)\n* ci: fix missing infra context to publish stable Falco packages [[#1615](https://github.com/falcosecurity/falco/pull/1615)] - [@leodido](https://github.com/leodido)\n\n\n## v0.27.0\n\nReleased on 2021-01-18\n\n### Major Changes\n\n* new: Added falco engine version to grpc version service [[#1507](https://github.com/falcosecurity/falco/pull/1507)] - [@nibalizer](https://github.com/nibalizer)\n* BREAKING CHANGE: Users who run Falco without a config file will be unable to do that any more, Falco now expects a configuration file to be passed all the times. Developers may need to adjust t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1526,
                  "startColumn": 13,
                  "endLine": 1526,
                  "endColumn": 18,
                  "snippet": {
                    "text": "build: fetch build deps from download.falco.org [[#1572](https://github.com/falcosecurity/falco/pull/1572)] - [@leogr](https://github.com/leogr)\n* adding shapesecurity to adopters [[#1566](https://github.com/falcosecurity/falco/pull/1566)] - [@irivera007](https://github.com/irivera007)\n* Use default pip version to get avocado version [[#1565](https://github.com/falcosecurity/falco/pull/1565)] - [@shane-lawrence](https://github.com/shane-lawrence)\n* Added Swissblock to list of adopters [[#1551](https://github.com/falcosecurity/falco/pull/1551)] - [@bygui86](https://github.com/bygui86)\n* Fix various ",
                    "rendered": {
                      "text": "build: fetch build deps from download.falco.org [[#1572](https://github.com/falcosecurity/falco/pull/1572)] - [@leogr](https://github.com/leogr)\n* adding shapesecurity to adopters [[#1566](https://github.com/falcosecurity/falco/pull/1566)] - [@irivera007](https://github.com/irivera007)\n* Use default pip version to get avocado version [[#1565](https://github.com/falcosecurity/falco/pull/1565)] - [@shane-lawrence](https://github.com/shane-lawrence)\n* Added Swissblock to list of adopters [[#1551](https://github.com/falcosecurity/falco/pull/1551)] - [@bygui86](https://github.com/bygui86)\n* Fix various ",
                      "markdown": "`build: fetch build deps from download.falco.org [[#1572](https://github.com/falcosecurity/falco/pull/1572)] - [@leogr](https://github.com/leogr)\n* adding shapesecurity to adopters [[#1566](https://github.com/falcosecurity/falco/pull/1566)] - [@irivera007](https://github.com/irivera007)\n* Use default pip version to get avocado version [[#1565](https://github.com/falcosecurity/falco/pull/1565)] - [@shane-lawrence](https://github.com/shane-lawrence)\n* Added Swissblock to list of adopters [[#1551](https://github.com/falcosecurity/falco/pull/1551)] - [@bygui86](https://github.com/bygui86)\n* Fix various `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1521,
                  "startColumn": 17,
                  "endLine": 1521,
                  "endColumn": 22,
                  "snippet": {
                    "text": "om/leogr)\n* cleanup publishing jobs [[#1596](https://github.com/falcosecurity/falco/pull/1596)] - [@leogr](https://github.com/leogr)\n* fix(falco/test): bump pyyaml from 5.3.1 to 5.4 [[#1595](https://github.com/falcosecurity/falco/pull/1595)] - [@leodido](https://github.com/leodido)\n* fix(.circleci): tar must be present in the image [[#1594](https://github.com/falcosecurity/falco/pull/1594)] - [@leogr](https://github.com/leogr)\n* fix: publishing jobs [[#1591](https://github.com/falcosecurity/falco/pull/1591)] - [@leogr](https://github.com/leogr)\n* Pocteo as an adopter [[#1574](https://github.com/fal",
                    "rendered": {
                      "text": "om/leogr)\n* cleanup publishing jobs [[#1596](https://github.com/falcosecurity/falco/pull/1596)] - [@leogr](https://github.com/leogr)\n* fix(falco/test): bump pyyaml from 5.3.1 to 5.4 [[#1595](https://github.com/falcosecurity/falco/pull/1595)] - [@leodido](https://github.com/leodido)\n* fix(.circleci): tar must be present in the image [[#1594](https://github.com/falcosecurity/falco/pull/1594)] - [@leogr](https://github.com/leogr)\n* fix: publishing jobs [[#1591](https://github.com/falcosecurity/falco/pull/1591)] - [@leogr](https://github.com/leogr)\n* Pocteo as an adopter [[#1574](https://github.com/fal",
                      "markdown": "`om/leogr)\n* cleanup publishing jobs [[#1596](https://github.com/falcosecurity/falco/pull/1596)] - [@leogr](https://github.com/leogr)\n* fix(falco/test): bump pyyaml from 5.3.1 to 5.4 [[#1595](https://github.com/falcosecurity/falco/pull/1595)] - [@leodido](https://github.com/leodido)\n* fix(.circleci): tar must be present in the image [[#1594](https://github.com/falcosecurity/falco/pull/1594)] - [@leogr](https://github.com/leogr)\n* fix: publishing jobs [[#1591](https://github.com/falcosecurity/falco/pull/1591)] - [@leogr](https://github.com/leogr)\n* Pocteo as an adopter [[#1574](https://github.com/fal`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1481,
                  "startColumn": 23,
                  "endLine": 1481,
                  "endColumn": 30,
                  "snippet": {
                    "text": "(https://github.com/falcosecurity/falco/pull/1555)] - [@ismailyenigul](https://github.com/ismailyenigul)\n* rule(Launch Privileged Container): exclude aws_eks_image [[#1555](https://github.com/falcosecurity/falco/pull/1555)] - [@ismailyenigul](https://github.com/ismailyenigul)\n* rule(Launch Sensitive Mount Container): exclude aws_eks_image_sensitive_mount [[#1555](https://github.com/falcosecurity/falco/pull/1555)] - [@ismailyenigul](https://github.com/ismailyenigul)\n* rule(Debugfs Launched in Privileged Container): new rule [[#1583](https://github.com/falcosecurity/falco/pull/1583)] - [@Kaizhe](https:",
                    "rendered": {
                      "text": "(https://github.com/falcosecurity/falco/pull/1555)] - [@ismailyenigul](https://github.com/ismailyenigul)\n* rule(Launch Privileged Container): exclude aws_eks_image [[#1555](https://github.com/falcosecurity/falco/pull/1555)] - [@ismailyenigul](https://github.com/ismailyenigul)\n* rule(Launch Sensitive Mount Container): exclude aws_eks_image_sensitive_mount [[#1555](https://github.com/falcosecurity/falco/pull/1555)] - [@ismailyenigul](https://github.com/ismailyenigul)\n* rule(Debugfs Launched in Privileged Container): new rule [[#1583](https://github.com/falcosecurity/falco/pull/1583)] - [@Kaizhe](https:",
                      "markdown": "`(https://github.com/falcosecurity/falco/pull/1555)] - [@ismailyenigul](https://github.com/ismailyenigul)\n* rule(Launch Privileged Container): exclude aws_eks_image [[#1555](https://github.com/falcosecurity/falco/pull/1555)] - [@ismailyenigul](https://github.com/ismailyenigul)\n* rule(Launch Sensitive Mount Container): exclude aws_eks_image_sensitive_mount [[#1555](https://github.com/falcosecurity/falco/pull/1555)] - [@ismailyenigul](https://github.com/ismailyenigul)\n* rule(Debugfs Launched in Privileged Container): new rule [[#1583](https://github.com/falcosecurity/falco/pull/1583)] - [@Kaizhe](https:`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1449,
                  "startColumn": 79,
                  "endLine": 1449,
                  "endColumn": 84,
                  "snippet": {
                    "text": "thub.com/cpanato)\n* new: introduce a new configuration field `syscall_event_drops.threshold` to tune the drop noisiness [[#1586](https://github.com/falcosecurity/falco/pull/1586)] - [@leodido](https://github.com/leodido)\n* new: falco-driver-loader script can get a custom driver name from DRIVER_NAME env variable [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.com/leodido)\n* new: falco-driver-loader know the Falco version [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.com/leodido)\n\n\n### Minor Changes\n\n* docs(proposals):",
                    "rendered": {
                      "text": "thub.com/cpanato)\n* new: introduce a new configuration field `syscall_event_drops.threshold` to tune the drop noisiness [[#1586](https://github.com/falcosecurity/falco/pull/1586)] - [@leodido](https://github.com/leodido)\n* new: falco-driver-loader script can get a custom driver name from DRIVER_NAME env variable [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.com/leodido)\n* new: falco-driver-loader know the Falco version [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.com/leodido)\n\n\n### Minor Changes\n\n* docs(proposals):",
                      "markdown": "`thub.com/cpanato)\n* new: introduce a new configuration field `syscall_event_drops.threshold` to tune the drop noisiness [[#1586](https://github.com/falcosecurity/falco/pull/1586)] - [@leodido](https://github.com/leodido)\n* new: falco-driver-loader script can get a custom driver name from DRIVER_NAME env variable [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.com/leodido)\n* new: falco-driver-loader know the Falco version [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.com/leodido)\n\n\n### Minor Changes\n\n* docs(proposals):`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1449,
                  "startColumn": 26,
                  "endLine": 1449,
                  "endColumn": 34,
                  "snippet": {
                    "text": "lcosecurity/falco/pull/1546)] - [@cpanato](https://github.com/cpanato)\n* new: introduce a new configuration field `syscall_event_drops.threshold` to tune the drop noisiness [[#1586](https://github.com/falcosecurity/falco/pull/1586)] - [@leodido](https://github.com/leodido)\n* new: falco-driver-loader script can get a custom driver name from DRIVER_NAME env variable [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.com/leodido)\n* new: falco-driver-loader know the Falco version [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.co",
                    "rendered": {
                      "text": "lcosecurity/falco/pull/1546)] - [@cpanato](https://github.com/cpanato)\n* new: introduce a new configuration field `syscall_event_drops.threshold` to tune the drop noisiness [[#1586](https://github.com/falcosecurity/falco/pull/1586)] - [@leodido](https://github.com/leodido)\n* new: falco-driver-loader script can get a custom driver name from DRIVER_NAME env variable [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.com/leodido)\n* new: falco-driver-loader know the Falco version [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.co",
                      "markdown": "`lcosecurity/falco/pull/1546)] - [@cpanato](https://github.com/cpanato)\n* new: introduce a new configuration field `syscall_event_drops.threshold` to tune the drop noisiness [[#1586](https://github.com/falcosecurity/falco/pull/1586)] - [@leodido](https://github.com/leodido)\n* new: falco-driver-loader script can get a custom driver name from DRIVER_NAME env variable [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.com/leodido)\n* new: falco-driver-loader know the Falco version [[#1488](https://github.com/falcosecurity/falco/pull/1488)] - [@leodido](https://github.co`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1443,
                  "startColumn": 107,
                  "endLine": 1443,
                  "endColumn": 116,
                  "snippet": {
                    "text": " disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://github.com/falcosecurity/falco/pull/1599)] - [@leodido](https://github.com/leodido)\n* BREAKING CHANGE: the init.d service unit is not shipped anymore in deb/rpm packages in favor of a systemd service file [[#1448](https://github.com/falcosecurity/falco/pull/1448)] - [@jenting](https://github.com/jenting)\n* new: add support for exceptions as rule attributes to provide a compact way to add exceptions to Falco rules [[#1427](https://github.com/falcosecurity/falco/pull/1427)] - [@mstemm](https://git",
                    "rendered": {
                      "text": " disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://github.com/falcosecurity/falco/pull/1599)] - [@leodido](https://github.com/leodido)\n* BREAKING CHANGE: the init.d service unit is not shipped anymore in deb/rpm packages in favor of a systemd service file [[#1448](https://github.com/falcosecurity/falco/pull/1448)] - [@jenting](https://github.com/jenting)\n* new: add support for exceptions as rule attributes to provide a compact way to add exceptions to Falco rules [[#1427](https://github.com/falcosecurity/falco/pull/1427)] - [@mstemm](https://git",
                      "markdown": "` disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://github.com/falcosecurity/falco/pull/1599)] - [@leodido](https://github.com/leodido)\n* BREAKING CHANGE: the init.d service unit is not shipped anymore in deb/rpm packages in favor of a systemd service file [[#1448](https://github.com/falcosecurity/falco/pull/1448)] - [@jenting](https://github.com/jenting)\n* new: add support for exceptions as rule attributes to provide a compact way to add exceptions to Falco rules [[#1427](https://github.com/falcosecurity/falco/pull/1427)] - [@mstemm](https://git`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1443,
                  "startColumn": 29,
                  "endLine": 1443,
                  "endColumn": 38,
                  "snippet": {
                    "text": "s://github.com/leogr)\n* BREAKING CHANGE: SKIP_MODULE_LOAD env variable no more disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://github.com/falcosecurity/falco/pull/1599)] - [@leodido](https://github.com/leodido)\n* BREAKING CHANGE: the init.d service unit is not shipped anymore in deb/rpm packages in favor of a systemd service file [[#1448](https://github.com/falcosecurity/falco/pull/1448)] - [@jenting](https://github.com/jenting)\n* new: add support for exceptions as rule attributes to provide a compact way to add exceptions to Falco rules [[#14",
                    "rendered": {
                      "text": "s://github.com/leogr)\n* BREAKING CHANGE: SKIP_MODULE_LOAD env variable no more disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://github.com/falcosecurity/falco/pull/1599)] - [@leodido](https://github.com/leodido)\n* BREAKING CHANGE: the init.d service unit is not shipped anymore in deb/rpm packages in favor of a systemd service file [[#1448](https://github.com/falcosecurity/falco/pull/1448)] - [@jenting](https://github.com/jenting)\n* new: add support for exceptions as rule attributes to provide a compact way to add exceptions to Falco rules [[#14",
                      "markdown": "`s://github.com/leogr)\n* BREAKING CHANGE: SKIP_MODULE_LOAD env variable no more disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://github.com/falcosecurity/falco/pull/1599)] - [@leodido](https://github.com/leodido)\n* BREAKING CHANGE: the init.d service unit is not shipped anymore in deb/rpm packages in favor of a systemd service file [[#1448](https://github.com/falcosecurity/falco/pull/1448)] - [@jenting](https://github.com/jenting)\n* new: add support for exceptions as rule attributes to provide a compact way to add exceptions to Falco rules [[#14`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1442,
                  "startColumn": 108,
                  "endLine": 1442,
                  "endColumn": 113,
                  "snippet": {
                    "text": "tray is deprecated, no new packages will be published at https://dl.bintray.com/falcosecurity/ [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://github.com/leogr)\n* BREAKING CHANGE: SKIP_MODULE_LOAD env variable no more disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://github.com/falcosecurity/falco/pull/1599)] - [@leodido](https://github.com/leodido)\n* BREAKING CHANGE: the init.d service unit is not shipped anymore in deb/rpm packages in favor of a systemd service file [[#1448](https://github.com/falcosecurity/f",
                    "rendered": {
                      "text": "tray is deprecated, no new packages will be published at https://dl.bintray.com/falcosecurity/ [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://github.com/leogr)\n* BREAKING CHANGE: SKIP_MODULE_LOAD env variable no more disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://github.com/falcosecurity/falco/pull/1599)] - [@leodido](https://github.com/leodido)\n* BREAKING CHANGE: the init.d service unit is not shipped anymore in deb/rpm packages in favor of a systemd service file [[#1448](https://github.com/falcosecurity/f",
                      "markdown": "`tray is deprecated, no new packages will be published at https://dl.bintray.com/falcosecurity/ [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://github.com/leogr)\n* BREAKING CHANGE: SKIP_MODULE_LOAD env variable no more disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://github.com/falcosecurity/falco/pull/1599)] - [@leodido](https://github.com/leodido)\n* BREAKING CHANGE: the init.d service unit is not shipped anymore in deb/rpm packages in favor of a systemd service file [[#1448](https://github.com/falcosecurity/f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1442,
                  "startColumn": 35,
                  "endLine": 1442,
                  "endColumn": 40,
                  "snippet": {
                    "text": "0.28.0\n\nReleased on 2021-04-12\n\n### Major Changes\n\n* BREAKING CHANGE: Bintray is deprecated, no new packages will be published at https://dl.bintray.com/falcosecurity/ [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://github.com/leogr)\n* BREAKING CHANGE: SKIP_MODULE_LOAD env variable no more disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://github.com/falcosecurity/falco/pull/1599)] - [@leodido](https://github.com/leodido)\n* BREAKING CHANGE: the init.d service unit is not shipped anymore in deb/rpm packages in fa",
                    "rendered": {
                      "text": "0.28.0\n\nReleased on 2021-04-12\n\n### Major Changes\n\n* BREAKING CHANGE: Bintray is deprecated, no new packages will be published at https://dl.bintray.com/falcosecurity/ [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://github.com/leogr)\n* BREAKING CHANGE: SKIP_MODULE_LOAD env variable no more disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://github.com/falcosecurity/falco/pull/1599)] - [@leodido](https://github.com/leodido)\n* BREAKING CHANGE: the init.d service unit is not shipped anymore in deb/rpm packages in fa",
                      "markdown": "`0.28.0\n\nReleased on 2021-04-12\n\n### Major Changes\n\n* BREAKING CHANGE: Bintray is deprecated, no new packages will be published at https://dl.bintray.com/falcosecurity/ [[#1577](https://github.com/falcosecurity/falco/pull/1577)] - [@leogr](https://github.com/leogr)\n* BREAKING CHANGE: SKIP_MODULE_LOAD env variable no more disables the driver loading (use SKIP_DRIVER_LOADER env variable introduced in Falco 0.24) [[#1599](https://github.com/falcosecurity/falco/pull/1599)] - [@leodido](https://github.com/leodido)\n* BREAKING CHANGE: the init.d service unit is not shipped anymore in deb/rpm packages in fa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1379,
                  "startColumn": 182,
                  "endLine": 1379,
                  "endColumn": 191,
                  "snippet": {
                    "text": "disable by default [[#1632](https://github.com/falcosecurity/falco/pull/1632)] - [@Kaizhe](https://github.com/Kaizhe)\n* rule(list known_sa_list): add namespace-controller, statefulset-controller, disruption-controller, job-controller, horizontal-pod-autoscaler and persistent-volume-binder as allowed service accounts in the kube-system namespace [[#1659](https://github.com/falcosecurity/falco/pull/1659)] - [@sboschman](https://github.com/sboschman)\n* rule(Non sudo setuid): check user id as well in case user name info is not available [[#1665](https://github.com/falcosecurity/falco/pull/1665)] - [@Kaizhe",
                    "rendered": {
                      "text": "disable by default [[#1632](https://github.com/falcosecurity/falco/pull/1632)] - [@Kaizhe](https://github.com/Kaizhe)\n* rule(list known_sa_list): add namespace-controller, statefulset-controller, disruption-controller, job-controller, horizontal-pod-autoscaler and persistent-volume-binder as allowed service accounts in the kube-system namespace [[#1659](https://github.com/falcosecurity/falco/pull/1659)] - [@sboschman](https://github.com/sboschman)\n* rule(Non sudo setuid): check user id as well in case user name info is not available [[#1665](https://github.com/falcosecurity/falco/pull/1665)] - [@Kaizhe",
                      "markdown": "`disable by default [[#1632](https://github.com/falcosecurity/falco/pull/1632)] - [@Kaizhe](https://github.com/Kaizhe)\n* rule(list known_sa_list): add namespace-controller, statefulset-controller, disruption-controller, job-controller, horizontal-pod-autoscaler and persistent-volume-binder as allowed service accounts in the kube-system namespace [[#1659](https://github.com/falcosecurity/falco/pull/1659)] - [@sboschman](https://github.com/sboschman)\n* rule(Non sudo setuid): check user id as well in case user name info is not available [[#1665](https://github.com/falcosecurity/falco/pull/1665)] - [@Kaizhe`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1326,
                  "startColumn": 101,
                  "endLine": 1326,
                  "endColumn": 109,
                  "snippet": {
                    "text": "### Bug Fixes\n\n* fix(scripts): correct standard output redirection in systemd config (DEB and RPM packages) [[#1697](https://github.com/falcosecurity/falco/pull/1697)] - [@chirabino](https://github.com/chirabino)\n* fix(scripts): correct lookup order when trying multiple `gcc` versions in the `falco-driver-loader` script [[#1716](https://github.com/falcosecurity/falco/pull/1716)] - [@Spartan-65](https://github.com/Spartan-65)\n\n\n### Rule Changes\n",
                    "rendered": {
                      "text": "### Bug Fixes\n\n* fix(scripts): correct standard output redirection in systemd config (DEB and RPM packages) [[#1697](https://github.com/falcosecurity/falco/pull/1697)] - [@chirabino](https://github.com/chirabino)\n* fix(scripts): correct lookup order when trying multiple `gcc` versions in the `falco-driver-loader` script [[#1716](https://github.com/falcosecurity/falco/pull/1716)] - [@Spartan-65](https://github.com/Spartan-65)\n\n\n### Rule Changes\n",
                      "markdown": "`### Bug Fixes\n\n* fix(scripts): correct standard output redirection in systemd config (DEB and RPM packages) [[#1697](https://github.com/falcosecurity/falco/pull/1697)] - [@chirabino](https://github.com/chirabino)\n* fix(scripts): correct lookup order when trying multiple `gcc` versions in the `falco-driver-loader` script [[#1716](https://github.com/falcosecurity/falco/pull/1716)] - [@Spartan-65](https://github.com/Spartan-65)\n\n\n### Rule Changes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1325,
                  "startColumn": 78,
                  "endLine": 1325,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\n### Bug Fixes\n\n* fix(scripts): correct standard output redirection in systemd config (DEB and RPM packages) [[#1697](https://github.com/falcosecurity/falco/pull/1697)] - [@chirabino](https://github.com/chirabino)\n* fix(scripts): correct lookup order when trying multiple `gcc` versions in the `falco-driver-loader` script [[#1716](https://github.com/falcosecurity/falco/pull/1716)] - [@Spartan-65](https://github.com/Spartan-65)\n\n\n",
                    "rendered": {
                      "text": "\n### Bug Fixes\n\n* fix(scripts): correct standard output redirection in systemd config (DEB and RPM packages) [[#1697](https://github.com/falcosecurity/falco/pull/1697)] - [@chirabino](https://github.com/chirabino)\n* fix(scripts): correct lookup order when trying multiple `gcc` versions in the `falco-driver-loader` script [[#1716](https://github.com/falcosecurity/falco/pull/1716)] - [@Spartan-65](https://github.com/Spartan-65)\n\n\n",
                      "markdown": "`\n### Bug Fixes\n\n* fix(scripts): correct standard output redirection in systemd config (DEB and RPM packages) [[#1697](https://github.com/falcosecurity/falco/pull/1697)] - [@chirabino](https://github.com/chirabino)\n* fix(scripts): correct lookup order when trying multiple `gcc` versions in the `falco-driver-loader` script [[#1716](https://github.com/falcosecurity/falco/pull/1716)] - [@Spartan-65](https://github.com/Spartan-65)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1311,
                  "startColumn": 73,
                  "endLine": 1311,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n### Major Changes\n\n* new: add `--k8s-node` command-line options, which allows filtering by a node when requesting metadata of pods to the K8s API server [[#1671](https://github.com/falcosecurity/falco/pull/1671)] - [@leogr](https://github.com/leogr)\n* new(outputs): expose rule tags and event source in gRPC and json outputs [[#1714](https://github.com/falcosecurity/falco/pull/1714)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* new(userspace/falco): add customizable metadata fetching params [[#1667](https://github.com/falcosecurity/falco/pull/1667)] - [@zuc](https://github.com/zuc)\n\n",
                    "rendered": {
                      "text": "\n### Major Changes\n\n* new: add `--k8s-node` command-line options, which allows filtering by a node when requesting metadata of pods to the K8s API server [[#1671](https://github.com/falcosecurity/falco/pull/1671)] - [@leogr](https://github.com/leogr)\n* new(outputs): expose rule tags and event source in gRPC and json outputs [[#1714](https://github.com/falcosecurity/falco/pull/1714)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* new(userspace/falco): add customizable metadata fetching params [[#1667](https://github.com/falcosecurity/falco/pull/1667)] - [@zuc](https://github.com/zuc)\n\n",
                      "markdown": "`\n### Major Changes\n\n* new: add `--k8s-node` command-line options, which allows filtering by a node when requesting metadata of pods to the K8s API server [[#1671](https://github.com/falcosecurity/falco/pull/1671)] - [@leogr](https://github.com/leogr)\n* new(outputs): expose rule tags and event source in gRPC and json outputs [[#1714](https://github.com/falcosecurity/falco/pull/1714)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* new(userspace/falco): add customizable metadata fetching params [[#1667](https://github.com/falcosecurity/falco/pull/1667)] - [@zuc](https://github.com/zuc)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1282,
                  "startColumn": 53,
                  "endLine": 1282,
                  "endColumn": 58,
                  "snippet": {
                    "text": "ty/falco/pull/1760)] - [@sboschman](https://github.com/sboschman)\n\n\n### Non user-facing changes\n\n* fix: force-set evt.type for plugin source events [[#1878](https://github.com/falcosecurity/falco/pull/1878)] - [@FedeDP](https://github.com/FedeDP)\n* fix: updated some warning strings; properly refresh lua files embedded in falco [[#1864](https://github.com/falcosecurity/falco/pull/1864)] - [@FedeDP](https://github.com/FedeDP)\n* style(userspace/engine): avoid creating multiple versions of methods only to assume default ruleset. Use a default argument instead. [[#1754](https://github.com/falcosecurity/",
                    "rendered": {
                      "text": "ty/falco/pull/1760)] - [@sboschman](https://github.com/sboschman)\n\n\n### Non user-facing changes\n\n* fix: force-set evt.type for plugin source events [[#1878](https://github.com/falcosecurity/falco/pull/1878)] - [@FedeDP](https://github.com/FedeDP)\n* fix: updated some warning strings; properly refresh lua files embedded in falco [[#1864](https://github.com/falcosecurity/falco/pull/1864)] - [@FedeDP](https://github.com/FedeDP)\n* style(userspace/engine): avoid creating multiple versions of methods only to assume default ruleset. Use a default argument instead. [[#1754](https://github.com/falcosecurity/",
                      "markdown": "`ty/falco/pull/1760)] - [@sboschman](https://github.com/sboschman)\n\n\n### Non user-facing changes\n\n* fix: force-set evt.type for plugin source events [[#1878](https://github.com/falcosecurity/falco/pull/1878)] - [@FedeDP](https://github.com/FedeDP)\n* fix: updated some warning strings; properly refresh lua files embedded in falco [[#1864](https://github.com/falcosecurity/falco/pull/1864)] - [@FedeDP](https://github.com/FedeDP)\n* style(userspace/engine): avoid creating multiple versions of methods only to assume default ruleset. Use a default argument instead. [[#1754](https://github.com/falcosecurity/`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1276,
                  "startColumn": 315,
                  "endLine": 1276,
                  "endColumn": 324,
                  "snippet": {
                    "text": "wn_sa_list): add coredns, coredns-autoscaler, endpointslicemirroring-controller, horizontal-pod-autoscaler, job-controller, node-controller (nodelifecycle), persistent-volume-binder, pv-protection-controller, pvc-protection-controller, root-ca-cert-publisher and service-account-controller as allowed service accounts in the kube-system namespace [[#1760](https://github.com/falcosecurity/falco/pull/1760)] - [@sboschman](https://github.com/sboschman)\n\n\n### Non user-facing changes\n\n* fix: force-set evt.type for plugin source events [[#1878](https://github.com/falcosecurity/falco/pull/1878)] - [@FedeDP](htt",
                    "rendered": {
                      "text": "wn_sa_list): add coredns, coredns-autoscaler, endpointslicemirroring-controller, horizontal-pod-autoscaler, job-controller, node-controller (nodelifecycle), persistent-volume-binder, pv-protection-controller, pvc-protection-controller, root-ca-cert-publisher and service-account-controller as allowed service accounts in the kube-system namespace [[#1760](https://github.com/falcosecurity/falco/pull/1760)] - [@sboschman](https://github.com/sboschman)\n\n\n### Non user-facing changes\n\n* fix: force-set evt.type for plugin source events [[#1878](https://github.com/falcosecurity/falco/pull/1878)] - [@FedeDP](htt",
                      "markdown": "`wn_sa_list): add coredns, coredns-autoscaler, endpointslicemirroring-controller, horizontal-pod-autoscaler, job-controller, node-controller (nodelifecycle), persistent-volume-binder, pv-protection-controller, pvc-protection-controller, root-ca-cert-publisher and service-account-controller as allowed service accounts in the kube-system namespace [[#1760](https://github.com/falcosecurity/falco/pull/1760)] - [@sboschman](https://github.com/sboschman)\n\n\n### Non user-facing changes\n\n* fix: force-set evt.type for plugin source events [[#1878](https://github.com/falcosecurity/falco/pull/1878)] - [@FedeDP](htt`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1275,
                  "startColumn": 76,
                  "endLine": 1275,
                  "endColumn": 82,
                  "snippet": {
                    "text": "security/falco/pull/1681)] - [@leodido](https://github.com/leodido)\n* rule(list deb_binaries): remove `apt-config` [[#1860](https://github.com/falcosecurity/falco/pull/1860)] - [@Andreagit97](https://github.com/Andreagit97)\n* rule(Launch Remote File Copy Tools in Container): add additional binaries: curl and wget. [[#1771](https://github.com/falcosecurity/falco/pull/1771)] - [@ec4n6](https://github.com/ec4n6)\n* rule(list known_sa_list): add coredns, coredns-autoscaler, endpointslicemirroring-controller, horizontal-pod-autoscaler, job-controller, node-controller (nodelifecycle), persistent-volume-bin",
                    "rendered": {
                      "text": "security/falco/pull/1681)] - [@leodido](https://github.com/leodido)\n* rule(list deb_binaries): remove `apt-config` [[#1860](https://github.com/falcosecurity/falco/pull/1860)] - [@Andreagit97](https://github.com/Andreagit97)\n* rule(Launch Remote File Copy Tools in Container): add additional binaries: curl and wget. [[#1771](https://github.com/falcosecurity/falco/pull/1771)] - [@ec4n6](https://github.com/ec4n6)\n* rule(list known_sa_list): add coredns, coredns-autoscaler, endpointslicemirroring-controller, horizontal-pod-autoscaler, job-controller, node-controller (nodelifecycle), persistent-volume-bin",
                      "markdown": "`security/falco/pull/1681)] - [@leodido](https://github.com/leodido)\n* rule(list deb_binaries): remove `apt-config` [[#1860](https://github.com/falcosecurity/falco/pull/1860)] - [@Andreagit97](https://github.com/Andreagit97)\n* rule(Launch Remote File Copy Tools in Container): add additional binaries: curl and wget. [[#1771](https://github.com/falcosecurity/falco/pull/1771)] - [@ec4n6](https://github.com/ec4n6)\n* rule(list known_sa_list): add coredns, coredns-autoscaler, endpointslicemirroring-controller, horizontal-pod-autoscaler, job-controller, node-controller (nodelifecycle), persistent-volume-bin`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1238,
                  "startColumn": 62,
                  "endLine": 1238,
                  "endColumn": 71,
                  "snippet": {
                    "text": "b.com/mstemm)\n* update: embed .lua files used to load/compile rules into the main falco executable, for simplicity and to avoid tampering. [[#1843](https://github.com/falcosecurity/falco/pull/1843)] - [@mstemm](https://github.com/mstemm)\n* update: support non-enumerable event sources in gRPC outputs service [[#1840](https://github.com/falcosecurity/falco/pull/1840)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* docs: add jasondellaluce to OWNERS [[#1818](https://github.com/falcosecurity/falco/pull/1818)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* chore: --list option can be use",
                    "rendered": {
                      "text": "b.com/mstemm)\n* update: embed .lua files used to load/compile rules into the main falco executable, for simplicity and to avoid tampering. [[#1843](https://github.com/falcosecurity/falco/pull/1843)] - [@mstemm](https://github.com/mstemm)\n* update: support non-enumerable event sources in gRPC outputs service [[#1840](https://github.com/falcosecurity/falco/pull/1840)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* docs: add jasondellaluce to OWNERS [[#1818](https://github.com/falcosecurity/falco/pull/1818)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* chore: --list option can be use",
                      "markdown": "`b.com/mstemm)\n* update: embed .lua files used to load/compile rules into the main falco executable, for simplicity and to avoid tampering. [[#1843](https://github.com/falcosecurity/falco/pull/1843)] - [@mstemm](https://github.com/mstemm)\n* update: support non-enumerable event sources in gRPC outputs service [[#1840](https://github.com/falcosecurity/falco/pull/1840)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* docs: add jasondellaluce to OWNERS [[#1818](https://github.com/falcosecurity/falco/pull/1818)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* chore: --list option can be use`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1232,
                  "startColumn": 58,
                  "endLine": 1232,
                  "endColumn": 63,
                  "snippet": {
                    "text": "dellaluce](https://github.com/jasondellaluce)\n* build: the statically linked binary package is now published with the `-static` suffix [[#1873](https://github.com/falcosecurity/falco/pull/1873)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update!: removed \"--alternate-lua-dir\" cmdline option as lua scripts are now embedded in Falco executable. [[#1872](https://github.com/falcosecurity/falco/pull/1872)] - [@FedeDP](https://github.com/FedeDP)\n* build: switch to dynamic build for the binary package (`.tar.gz`) [[#1853](https://github.com/falcosecurity/falco/pull/1853)] - [@LucaGuerra](https://git",
                    "rendered": {
                      "text": "dellaluce](https://github.com/jasondellaluce)\n* build: the statically linked binary package is now published with the `-static` suffix [[#1873](https://github.com/falcosecurity/falco/pull/1873)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update!: removed \"--alternate-lua-dir\" cmdline option as lua scripts are now embedded in Falco executable. [[#1872](https://github.com/falcosecurity/falco/pull/1872)] - [@FedeDP](https://github.com/FedeDP)\n* build: switch to dynamic build for the binary package (`.tar.gz`) [[#1853](https://github.com/falcosecurity/falco/pull/1853)] - [@LucaGuerra](https://git",
                      "markdown": "`dellaluce](https://github.com/jasondellaluce)\n* build: the statically linked binary package is now published with the `-static` suffix [[#1873](https://github.com/falcosecurity/falco/pull/1873)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* update!: removed \"--alternate-lua-dir\" cmdline option as lua scripts are now embedded in Falco executable. [[#1872](https://github.com/falcosecurity/falco/pull/1872)] - [@FedeDP](https://github.com/FedeDP)\n* build: switch to dynamic build for the binary package (`.tar.gz`) [[#1853](https://github.com/falcosecurity/falco/pull/1853)] - [@LucaGuerra](https://git`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1203,
                  "startColumn": 40,
                  "endLine": 1203,
                  "endColumn": 45,
                  "snippet": {
                    "text": "ecurity/falco/pull/1888)] - [@pabloopez](https://github.com/pabloopez)\n\n\n### Non user-facing changes\n\n* fix(build): fix civetweb linking in cmake module [[#1919](https://github.com/falcosecurity/falco/pull/1919)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(userspace/engine): remove unused lua functions and state vars [[#1908](https://github.com/falcosecurity/falco/pull/1908)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix(userspace/falco): applies FALCO_INSTALL_CONF_FILE as the default … [[#1900](https://github.com/falcosecurity/falco/pull/1900)] - [@andreabonanno](https://",
                    "rendered": {
                      "text": "ecurity/falco/pull/1888)] - [@pabloopez](https://github.com/pabloopez)\n\n\n### Non user-facing changes\n\n* fix(build): fix civetweb linking in cmake module [[#1919](https://github.com/falcosecurity/falco/pull/1919)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(userspace/engine): remove unused lua functions and state vars [[#1908](https://github.com/falcosecurity/falco/pull/1908)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix(userspace/falco): applies FALCO_INSTALL_CONF_FILE as the default … [[#1900](https://github.com/falcosecurity/falco/pull/1900)] - [@andreabonanno](https://",
                      "markdown": "`ecurity/falco/pull/1888)] - [@pabloopez](https://github.com/pabloopez)\n\n\n### Non user-facing changes\n\n* fix(build): fix civetweb linking in cmake module [[#1919](https://github.com/falcosecurity/falco/pull/1919)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(userspace/engine): remove unused lua functions and state vars [[#1908](https://github.com/falcosecurity/falco/pull/1908)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix(userspace/falco): applies FALCO_INSTALL_CONF_FILE as the default … [[#1900](https://github.com/falcosecurity/falco/pull/1900)] - [@andreabonanno](https://`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1099,
                  "startColumn": 36,
                  "endLine": 1099,
                  "endColumn": 41,
                  "snippet": {
                    "text": "ub.com/falcosecurity/falco/pull/1977)] - [@leogr](https://github.com/leogr)\n* refactor(userspace/engine): reduce memory usage for resolving evttypes [[#1965](https://github.com/falcosecurity/falco/pull/1965)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor(userspace/engine): remove Lua from Falco and re-implement the rule loader [[#1966](https://github.com/falcosecurity/falco/pull/1966)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor(userspace/engine): decoupling ruleset reading, parsing, and compilation steps [[#1970](https://github.com/falcosecurity/falco/pull",
                    "rendered": {
                      "text": "ub.com/falcosecurity/falco/pull/1977)] - [@leogr](https://github.com/leogr)\n* refactor(userspace/engine): reduce memory usage for resolving evttypes [[#1965](https://github.com/falcosecurity/falco/pull/1965)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor(userspace/engine): remove Lua from Falco and re-implement the rule loader [[#1966](https://github.com/falcosecurity/falco/pull/1966)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor(userspace/engine): decoupling ruleset reading, parsing, and compilation steps [[#1970](https://github.com/falcosecurity/falco/pull",
                      "markdown": "`ub.com/falcosecurity/falco/pull/1977)] - [@leogr](https://github.com/leogr)\n* refactor(userspace/engine): reduce memory usage for resolving evttypes [[#1965](https://github.com/falcosecurity/falco/pull/1965)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor(userspace/engine): remove Lua from Falco and re-implement the rule loader [[#1966](https://github.com/falcosecurity/falco/pull/1966)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* refactor(userspace/engine): decoupling ruleset reading, parsing, and compilation steps [[#1970](https://github.com/falcosecurity/falco/pull`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1066,
                  "startColumn": 38,
                  "endLine": 1066,
                  "endColumn": 46,
                  "snippet": {
                    "text": "ws ecr publish [[#2047](https://github.com/falcosecurity/falco/pull/2047)] - [@FedeDP](https://github.com/FedeDP)\n* fix(build): try to use root user for cimg/base [[#2045](https://github.com/falcosecurity/falco/pull/2045)] - [@FedeDP](https://github.com/FedeDP)\n* update(build): avoid double build of docker images when pushing to aws ecr [[#2046](https://github.com/falcosecurity/falco/pull/2046)] - [@FedeDP](https://github.com/FedeDP)\n* chore(k8s_audit_plugin): bump k8s audit plugin version [[#2042](https://github.com/falcosecurity/falco/pull/2042)] - [@Andreagit97](https://github.com/Andreagit97)\n* fi",
                    "rendered": {
                      "text": "ws ecr publish [[#2047](https://github.com/falcosecurity/falco/pull/2047)] - [@FedeDP](https://github.com/FedeDP)\n* fix(build): try to use root user for cimg/base [[#2045](https://github.com/falcosecurity/falco/pull/2045)] - [@FedeDP](https://github.com/FedeDP)\n* update(build): avoid double build of docker images when pushing to aws ecr [[#2046](https://github.com/falcosecurity/falco/pull/2046)] - [@FedeDP](https://github.com/FedeDP)\n* chore(k8s_audit_plugin): bump k8s audit plugin version [[#2042](https://github.com/falcosecurity/falco/pull/2042)] - [@Andreagit97](https://github.com/Andreagit97)\n* fi",
                      "markdown": "`ws ecr publish [[#2047](https://github.com/falcosecurity/falco/pull/2047)] - [@FedeDP](https://github.com/FedeDP)\n* fix(build): try to use root user for cimg/base [[#2045](https://github.com/falcosecurity/falco/pull/2045)] - [@FedeDP](https://github.com/FedeDP)\n* update(build): avoid double build of docker images when pushing to aws ecr [[#2046](https://github.com/falcosecurity/falco/pull/2046)] - [@FedeDP](https://github.com/FedeDP)\n* chore(k8s_audit_plugin): bump k8s audit plugin version [[#2042](https://github.com/falcosecurity/falco/pull/2042)] - [@Andreagit97](https://github.com/Andreagit97)\n* fi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1064,
                  "startColumn": 17,
                  "endLine": 1064,
                  "endColumn": 22,
                  "snippet": {
                    "text": "publish for arm64. [[#2051](https://github.com/falcosecurity/falco/pull/2051)] - [@FedeDP](https://github.com/FedeDP)\n* update(docker): updated falco-builder to fix multiarch support. [[#2049](https://github.com/falcosecurity/falco/pull/2049)] - [@FedeDP](https://github.com/FedeDP)\n* fix(build): use apt instead of apk when installing deps for aws ecr publish [[#2047](https://github.com/falcosecurity/falco/pull/2047)] - [@FedeDP](https://github.com/FedeDP)\n* fix(build): try to use root user for cimg/base [[#2045](https://github.com/falcosecurity/falco/pull/2045)] - [@FedeDP](https://github.com/FedeD",
                    "rendered": {
                      "text": "publish for arm64. [[#2051](https://github.com/falcosecurity/falco/pull/2051)] - [@FedeDP](https://github.com/FedeDP)\n* update(docker): updated falco-builder to fix multiarch support. [[#2049](https://github.com/falcosecurity/falco/pull/2049)] - [@FedeDP](https://github.com/FedeDP)\n* fix(build): use apt instead of apk when installing deps for aws ecr publish [[#2047](https://github.com/falcosecurity/falco/pull/2047)] - [@FedeDP](https://github.com/FedeDP)\n* fix(build): try to use root user for cimg/base [[#2045](https://github.com/falcosecurity/falco/pull/2045)] - [@FedeDP](https://github.com/FedeD",
                      "markdown": "`publish for arm64. [[#2051](https://github.com/falcosecurity/falco/pull/2051)] - [@FedeDP](https://github.com/FedeDP)\n* update(docker): updated falco-builder to fix multiarch support. [[#2049](https://github.com/falcosecurity/falco/pull/2049)] - [@FedeDP](https://github.com/FedeDP)\n* fix(build): use apt instead of apk when installing deps for aws ecr publish [[#2047](https://github.com/falcosecurity/falco/pull/2047)] - [@FedeDP](https://github.com/FedeDP)\n* fix(build): try to use root user for cimg/base [[#2045](https://github.com/falcosecurity/falco/pull/2045)] - [@FedeDP](https://github.com/FedeD`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1053,
                  "startColumn": 21,
                  "endLine": 1053,
                  "endColumn": 26,
                  "snippet": {
                    "text": "sts run locally (take 2) [[#2089](https://github.com/falcosecurity/falco/pull/2089)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(ci): creates ~/sign instead of ./sign [[#2072](https://github.com/falcosecurity/falco/pull/2072)] - [@vjjmiras](https://github.com/vjjmiras)\n* fix(ci): sign arm64 rpm packages. [[#2069](https://github.com/falcosecurity/falco/pull/2069)] - [@FedeDP](https://github.com/FedeDP)\n* update(falco_scripts): Change Flatcar dynlinker path [[#2066](https://github.com/falcosecurity/falco/pull/2066)] - [@jepio](https://github.com/jepio)\n* fix(scripts): fixed path in publish-d",
                    "rendered": {
                      "text": "sts run locally (take 2) [[#2089](https://github.com/falcosecurity/falco/pull/2089)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(ci): creates ~/sign instead of ./sign [[#2072](https://github.com/falcosecurity/falco/pull/2072)] - [@vjjmiras](https://github.com/vjjmiras)\n* fix(ci): sign arm64 rpm packages. [[#2069](https://github.com/falcosecurity/falco/pull/2069)] - [@FedeDP](https://github.com/FedeDP)\n* update(falco_scripts): Change Flatcar dynlinker path [[#2066](https://github.com/falcosecurity/falco/pull/2066)] - [@jepio](https://github.com/jepio)\n* fix(scripts): fixed path in publish-d",
                      "markdown": "`sts run locally (take 2) [[#2089](https://github.com/falcosecurity/falco/pull/2089)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(ci): creates ~/sign instead of ./sign [[#2072](https://github.com/falcosecurity/falco/pull/2072)] - [@vjjmiras](https://github.com/vjjmiras)\n* fix(ci): sign arm64 rpm packages. [[#2069](https://github.com/falcosecurity/falco/pull/2069)] - [@FedeDP](https://github.com/FedeDP)\n* update(falco_scripts): Change Flatcar dynlinker path [[#2066](https://github.com/falcosecurity/falco/pull/2066)] - [@jepio](https://github.com/jepio)\n* fix(scripts): fixed path in publish-d`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1050,
                  "startColumn": 19,
                  "endLine": 1050,
                  "endColumn": 27,
                  "snippet": {
                    "text": "cmake): bump plugins versions [[#2102](https://github.com/falcosecurity/falco/pull/2102)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(docker): fixed deb tester sub image. [[#2100](https://github.com/falcosecurity/falco/pull/2100)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): fix sign script - avoid interpreting '{*}$argv' too soon [[#2075](https://github.com/falcosecurity/falco/pull/2075)] - [@vjjmiras](https://github.com/vjjmiras)\n* fix(tests): make tests run locally (take 2) [[#2089](https://github.com/falcosecurity/falco/pull/2089)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* f",
                    "rendered": {
                      "text": "cmake): bump plugins versions [[#2102](https://github.com/falcosecurity/falco/pull/2102)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(docker): fixed deb tester sub image. [[#2100](https://github.com/falcosecurity/falco/pull/2100)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): fix sign script - avoid interpreting '{*}$argv' too soon [[#2075](https://github.com/falcosecurity/falco/pull/2075)] - [@vjjmiras](https://github.com/vjjmiras)\n* fix(tests): make tests run locally (take 2) [[#2089](https://github.com/falcosecurity/falco/pull/2089)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* f",
                      "markdown": "`cmake): bump plugins versions [[#2102](https://github.com/falcosecurity/falco/pull/2102)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(docker): fixed deb tester sub image. [[#2100](https://github.com/falcosecurity/falco/pull/2100)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): fix sign script - avoid interpreting '{*}$argv' too soon [[#2075](https://github.com/falcosecurity/falco/pull/2075)] - [@vjjmiras](https://github.com/vjjmiras)\n* fix(tests): make tests run locally (take 2) [[#2089](https://github.com/falcosecurity/falco/pull/2089)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1033,
                  "startColumn": 35,
                  "endLine": 1033,
                  "endColumn": 43,
                  "snippet": {
                    "text": "es. [[#2088](https://github.com/falcosecurity/falco/pull/2088)] - [@mstemm](https://github.com/mstemm)\n* fix(rules): use exit event in reverse shell detection rule [[#2076](https://github.com/falcosecurity/falco/pull/2076)] - [@alacuku](https://github.com/alacuku)\n* fix(scripts): falco-driver-loader script will now seek for drivers in driver/${ARCH}/ for x86_64 too. [[#2057](https://github.com/falcosecurity/falco/pull/2057)] - [@FedeDP](https://github.com/FedeDP)\n* fix(falco-driver-loader): building falco module with DKMS on Flatcar and supporting fetching pre-built module/eBPF probe [[#2043](https://",
                    "rendered": {
                      "text": "es. [[#2088](https://github.com/falcosecurity/falco/pull/2088)] - [@mstemm](https://github.com/mstemm)\n* fix(rules): use exit event in reverse shell detection rule [[#2076](https://github.com/falcosecurity/falco/pull/2076)] - [@alacuku](https://github.com/alacuku)\n* fix(scripts): falco-driver-loader script will now seek for drivers in driver/${ARCH}/ for x86_64 too. [[#2057](https://github.com/falcosecurity/falco/pull/2057)] - [@FedeDP](https://github.com/FedeDP)\n* fix(falco-driver-loader): building falco module with DKMS on Flatcar and supporting fetching pre-built module/eBPF probe [[#2043](https://",
                      "markdown": "`es. [[#2088](https://github.com/falcosecurity/falco/pull/2088)] - [@mstemm](https://github.com/mstemm)\n* fix(rules): use exit event in reverse shell detection rule [[#2076](https://github.com/falcosecurity/falco/pull/2076)] - [@alacuku](https://github.com/alacuku)\n* fix(scripts): falco-driver-loader script will now seek for drivers in driver/${ARCH}/ for x86_64 too. [[#2057](https://github.com/falcosecurity/falco/pull/2057)] - [@FedeDP](https://github.com/FedeDP)\n* fix(falco-driver-loader): building falco module with DKMS on Flatcar and supporting fetching pre-built module/eBPF probe [[#2043](https://`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1020,
                  "startColumn": 68,
                  "endLine": 1020,
                  "endColumn": 73,
                  "snippet": {
                    "text": "] - [@LucaGuerra](https://github.com/LucaGuerra)\n* new(docker,scripts): add multiarch images and ARM64 packages [[#1990](https://github.com/falcosecurity/falco/pull/1990)] - [@FedeDP](https://github.com/FedeDP)\n\n\n### Minor Changes\n\n* update(build): Switch from RSA/SHA1 to RSA/SHA256 signature in the RPM package [[#2044](https://github.com/falcosecurity/falco/pull/2044)] - [@vjjmiras](https://github.com/vjjmiras)\n* refactor(userspace/engine): drop macro source field in rules and rule loader [[#2094](https://github.com/falcosecurity/falco/pull/2094)] - [@jasondellaluce](https://github.com/jasondellal",
                    "rendered": {
                      "text": "] - [@LucaGuerra](https://github.com/LucaGuerra)\n* new(docker,scripts): add multiarch images and ARM64 packages [[#1990](https://github.com/falcosecurity/falco/pull/1990)] - [@FedeDP](https://github.com/FedeDP)\n\n\n### Minor Changes\n\n* update(build): Switch from RSA/SHA1 to RSA/SHA256 signature in the RPM package [[#2044](https://github.com/falcosecurity/falco/pull/2044)] - [@vjjmiras](https://github.com/vjjmiras)\n* refactor(userspace/engine): drop macro source field in rules and rule loader [[#2094](https://github.com/falcosecurity/falco/pull/2094)] - [@jasondellaluce](https://github.com/jasondellal",
                      "markdown": "`] - [@LucaGuerra](https://github.com/LucaGuerra)\n* new(docker,scripts): add multiarch images and ARM64 packages [[#1990](https://github.com/falcosecurity/falco/pull/1990)] - [@FedeDP](https://github.com/FedeDP)\n\n\n### Minor Changes\n\n* update(build): Switch from RSA/SHA1 to RSA/SHA256 signature in the RPM package [[#2044](https://github.com/falcosecurity/falco/pull/2044)] - [@vjjmiras](https://github.com/vjjmiras)\n* refactor(userspace/engine): drop macro source field in rules and rule loader [[#2094](https://github.com/falcosecurity/falco/pull/2094)] - [@jasondellaluce](https://github.com/jasondellal`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 972,
                  "startColumn": 27,
                  "endLine": 972,
                  "endColumn": 35,
                  "snippet": {
                    "text": "/falco/pull/2256)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(userspace/falco): avoid using CPU when main thread waits for parallel event sources [[#2255](https://github.com/falcosecurity/falco/pull/2255)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix(scripts): inject kmod script fails with some systemd versions [[#2250](https://github.com/falcosecurity/falco/pull/2250)] - [@Andreagit97](https://github.com/Andreagit97)\n* chore(userspace/falco): make logging optional when terminating, restarting, and reopening outputs [[#2249](https://github.com/falcosecurity/falco/pull/2249)",
                    "rendered": {
                      "text": "/falco/pull/2256)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(userspace/falco): avoid using CPU when main thread waits for parallel event sources [[#2255](https://github.com/falcosecurity/falco/pull/2255)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix(scripts): inject kmod script fails with some systemd versions [[#2250](https://github.com/falcosecurity/falco/pull/2250)] - [@Andreagit97](https://github.com/Andreagit97)\n* chore(userspace/falco): make logging optional when terminating, restarting, and reopening outputs [[#2249](https://github.com/falcosecurity/falco/pull/2249)",
                      "markdown": "`/falco/pull/2256)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(userspace/falco): avoid using CPU when main thread waits for parallel event sources [[#2255](https://github.com/falcosecurity/falco/pull/2255)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* fix(scripts): inject kmod script fails with some systemd versions [[#2250](https://github.com/falcosecurity/falco/pull/2250)] - [@Andreagit97](https://github.com/Andreagit97)\n* chore(userspace/falco): make logging optional when terminating, restarting, and reopening outputs [[#2249](https://github.com/falcosecurity/falco/pull/2249)`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 966,
                  "startColumn": 34,
                  "endLine": 966,
                  "endColumn": 42,
                  "snippet": {
                    "text": "rity/falco/pull/2168)] - [@incertum](https://github.com/incertum)\n\n\n### Non user-facing changes\n\n* new(userspace): support `SCAP_FILTERED_EVENT` return code [[#2148](https://github.com/falcosecurity/falco/pull/2148)] - [@Andreagit97](https://github.com/Andreagit97)\n* chore(test/utils): remove unused script [[#2157](https://github.com/falcosecurity/falco/pull/2157)] - [@Andreagit97](https://github.com/Andreagit97)\n* Enrich pull request template [[#2162](https://github.com/falcosecurity/falco/pull/2162)] - [@Andreagit97](https://github.com/Andreagit97)\n* vote: update(OWNERS): add Andrea Terzolo to owner",
                    "rendered": {
                      "text": "rity/falco/pull/2168)] - [@incertum](https://github.com/incertum)\n\n\n### Non user-facing changes\n\n* new(userspace): support `SCAP_FILTERED_EVENT` return code [[#2148](https://github.com/falcosecurity/falco/pull/2148)] - [@Andreagit97](https://github.com/Andreagit97)\n* chore(test/utils): remove unused script [[#2157](https://github.com/falcosecurity/falco/pull/2157)] - [@Andreagit97](https://github.com/Andreagit97)\n* Enrich pull request template [[#2162](https://github.com/falcosecurity/falco/pull/2162)] - [@Andreagit97](https://github.com/Andreagit97)\n* vote: update(OWNERS): add Andrea Terzolo to owner",
                      "markdown": "`rity/falco/pull/2168)] - [@incertum](https://github.com/incertum)\n\n\n### Non user-facing changes\n\n* new(userspace): support `SCAP_FILTERED_EVENT` return code [[#2148](https://github.com/falcosecurity/falco/pull/2148)] - [@Andreagit97](https://github.com/Andreagit97)\n* chore(test/utils): remove unused script [[#2157](https://github.com/falcosecurity/falco/pull/2157)] - [@Andreagit97](https://github.com/Andreagit97)\n* Enrich pull request template [[#2162](https://github.com/falcosecurity/falco/pull/2162)] - [@Andreagit97](https://github.com/Andreagit97)\n* vote: update(OWNERS): add Andrea Terzolo to owner`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 936,
                  "startColumn": 29,
                  "endLine": 936,
                  "endColumn": 38,
                  "snippet": {
                    "text": "(https://github.com/falcosecurity/falco/pull/2166)] - [@incertum](https://github.com/incertum)\n* rule(Interpreted procs inbound network activity)!: disabled by default [[#2166](https://github.com/falcosecurity/falco/pull/2166)] - [@incertum](https://github.com/incertum)\n* rule(Contact cloud metadata service from container)!: disabled by default [[#2166](https://github.com/falcosecurity/falco/pull/2166)] - [@incertum](https://github.com/incertum)\n* rule(macro: consider_interpreted_outbound)!: remove unused macro [[#2166](https://github.com/falcosecurity/falco/pull/2166)] - [@incertum](https://github.com",
                    "rendered": {
                      "text": "(https://github.com/falcosecurity/falco/pull/2166)] - [@incertum](https://github.com/incertum)\n* rule(Interpreted procs inbound network activity)!: disabled by default [[#2166](https://github.com/falcosecurity/falco/pull/2166)] - [@incertum](https://github.com/incertum)\n* rule(Contact cloud metadata service from container)!: disabled by default [[#2166](https://github.com/falcosecurity/falco/pull/2166)] - [@incertum](https://github.com/incertum)\n* rule(macro: consider_interpreted_outbound)!: remove unused macro [[#2166](https://github.com/falcosecurity/falco/pull/2166)] - [@incertum](https://github.com",
                      "markdown": "`(https://github.com/falcosecurity/falco/pull/2166)] - [@incertum](https://github.com/incertum)\n* rule(Interpreted procs inbound network activity)!: disabled by default [[#2166](https://github.com/falcosecurity/falco/pull/2166)] - [@incertum](https://github.com/incertum)\n* rule(Contact cloud metadata service from container)!: disabled by default [[#2166](https://github.com/falcosecurity/falco/pull/2166)] - [@incertum](https://github.com/incertum)\n* rule(macro: consider_interpreted_outbound)!: remove unused macro [[#2166](https://github.com/falcosecurity/falco/pull/2166)] - [@incertum](https://github.com`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 921,
                  "startColumn": 85,
                  "endLine": 921,
                  "endColumn": 92,
                  "snippet": {
                    "text": "ps://github.com/leogr)\n\n\n### Rule Changes\n\n* rule(macro: known_gke_mount_in_privileged_containers): add new macro [[#2198](https://github.com/falcosecurity/falco/pull/2198)] - [@hi120ki](https://github.com/hi120ki)\n* rule(Mount Launched in Privileged Container): add GKE default pod into allowlist in Mount Launched of Privileged Container rule [[#2198](https://github.com/falcosecurity/falco/pull/2198)] - [@hi120ki](https://github.com/hi120ki)\n* rule(list: known_binaries_to_read_environment_variables_from_proc_files): add new list [[#2193](https://github.com/falcosecurity/falco/pull/2193)] - [@hi120ki]",
                    "rendered": {
                      "text": "ps://github.com/leogr)\n\n\n### Rule Changes\n\n* rule(macro: known_gke_mount_in_privileged_containers): add new macro [[#2198](https://github.com/falcosecurity/falco/pull/2198)] - [@hi120ki](https://github.com/hi120ki)\n* rule(Mount Launched in Privileged Container): add GKE default pod into allowlist in Mount Launched of Privileged Container rule [[#2198](https://github.com/falcosecurity/falco/pull/2198)] - [@hi120ki](https://github.com/hi120ki)\n* rule(list: known_binaries_to_read_environment_variables_from_proc_files): add new list [[#2193](https://github.com/falcosecurity/falco/pull/2193)] - [@hi120ki]",
                      "markdown": "`ps://github.com/leogr)\n\n\n### Rule Changes\n\n* rule(macro: known_gke_mount_in_privileged_containers): add new macro [[#2198](https://github.com/falcosecurity/falco/pull/2198)] - [@hi120ki](https://github.com/hi120ki)\n* rule(Mount Launched in Privileged Container): add GKE default pod into allowlist in Mount Launched of Privileged Container rule [[#2198](https://github.com/falcosecurity/falco/pull/2198)] - [@hi120ki](https://github.com/hi120ki)\n* rule(list: known_binaries_to_read_environment_variables_from_proc_files): add new list [[#2193](https://github.com/falcosecurity/falco/pull/2193)] - [@hi120ki]`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 910,
                  "startColumn": 27,
                  "endLine": 910,
                  "endColumn": 36,
                  "snippet": {
                    "text": "github.com/falcosecurity/falco/pull/2139)] - [@jasondellaluce](https://github.com/jasondellaluce)\n\n\n### Bug Fixes\n\n* fix: compute the `drop ratio` in the right way [[#2128](https://github.com/falcosecurity/falco/pull/2128)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(falco_service): falco service needs to write under /sys/module/falco [[#2238](https://github.com/falcosecurity/falco/pull/2238)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(userspace): cleanup output of ruleset validation result [[#2248](https://github.com/falcosecurity/falco/pull/2248)] - [@jasondellaluce](https://gi",
                    "rendered": {
                      "text": "github.com/falcosecurity/falco/pull/2139)] - [@jasondellaluce](https://github.com/jasondellaluce)\n\n\n### Bug Fixes\n\n* fix: compute the `drop ratio` in the right way [[#2128](https://github.com/falcosecurity/falco/pull/2128)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(falco_service): falco service needs to write under /sys/module/falco [[#2238](https://github.com/falcosecurity/falco/pull/2238)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(userspace): cleanup output of ruleset validation result [[#2248](https://github.com/falcosecurity/falco/pull/2248)] - [@jasondellaluce](https://gi",
                      "markdown": "`github.com/falcosecurity/falco/pull/2139)] - [@jasondellaluce](https://github.com/jasondellaluce)\n\n\n### Bug Fixes\n\n* fix: compute the `drop ratio` in the right way [[#2128](https://github.com/falcosecurity/falco/pull/2128)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(falco_service): falco service needs to write under /sys/module/falco [[#2238](https://github.com/falcosecurity/falco/pull/2238)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(userspace): cleanup output of ruleset validation result [[#2248](https://github.com/falcosecurity/falco/pull/2248)] - [@jasondellaluce](https://gi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 901,
                  "startColumn": 30,
                  "endLine": 901,
                  "endColumn": 35,
                  "snippet": {
                    "text": "b.com/falcosecurity/falco/pull/2097)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(userspace/falco): use move semantics in falco logger [[#2095](https://github.com/falcosecurity/falco/pull/2095)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update: use `FALCO_HOSTNAME` env var to override the hostname value [[#2174](https://github.com/falcosecurity/falco/pull/2174)] - [@leogr](https://github.com/leogr)\n* update: bump libs and driver versions to 6599e2efebce30a95f27739d655d53f0d5f686e4 [[#2177](https://github.com/falcosecurity/falco/pull/2177)] - [@jasondellaluce](http",
                    "rendered": {
                      "text": "b.com/falcosecurity/falco/pull/2097)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(userspace/falco): use move semantics in falco logger [[#2095](https://github.com/falcosecurity/falco/pull/2095)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update: use `FALCO_HOSTNAME` env var to override the hostname value [[#2174](https://github.com/falcosecurity/falco/pull/2174)] - [@leogr](https://github.com/leogr)\n* update: bump libs and driver versions to 6599e2efebce30a95f27739d655d53f0d5f686e4 [[#2177](https://github.com/falcosecurity/falco/pull/2177)] - [@jasondellaluce](http",
                      "markdown": "`b.com/falcosecurity/falco/pull/2097)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(userspace/falco): use move semantics in falco logger [[#2095](https://github.com/falcosecurity/falco/pull/2095)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update: use `FALCO_HOSTNAME` env var to override the hostname value [[#2174](https://github.com/falcosecurity/falco/pull/2174)] - [@leogr](https://github.com/leogr)\n* update: bump libs and driver versions to 6599e2efebce30a95f27739d655d53f0d5f686e4 [[#2177](https://github.com/falcosecurity/falco/pull/2177)] - [@jasondellaluce](http`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 886,
                  "startColumn": 117,
                  "endLine": 886,
                  "endColumn": 122,
                  "snippet": {
                    "text": "m](https://github.com/mstemm)\n* rules: added process IDs to default rules [[#2211](https://github.com/falcosecurity/falco/pull/2211)] - [@spyder-kyle](https://github.com/spyder-kyle)\n* update(scripts/debian): falco.service systemd unit is now cleaned-up during (re)install and removal via the DEB and RPM packages [[#2138](https://github.com/falcosecurity/falco/pull/2138)] - [@Happy-Dude](https://github.com/Happy-Dude)\n* update(userspace/falco): move on from deprecated libs API for printing event list [[#2253](https://github.com/falcosecurity/falco/pull/2253)] - [@jasondellaluce](https://github.com/j",
                    "rendered": {
                      "text": "m](https://github.com/mstemm)\n* rules: added process IDs to default rules [[#2211](https://github.com/falcosecurity/falco/pull/2211)] - [@spyder-kyle](https://github.com/spyder-kyle)\n* update(scripts/debian): falco.service systemd unit is now cleaned-up during (re)install and removal via the DEB and RPM packages [[#2138](https://github.com/falcosecurity/falco/pull/2138)] - [@Happy-Dude](https://github.com/Happy-Dude)\n* update(userspace/falco): move on from deprecated libs API for printing event list [[#2253](https://github.com/falcosecurity/falco/pull/2253)] - [@jasondellaluce](https://github.com/j",
                      "markdown": "`m](https://github.com/mstemm)\n* rules: added process IDs to default rules [[#2211](https://github.com/falcosecurity/falco/pull/2211)] - [@spyder-kyle](https://github.com/spyder-kyle)\n* update(scripts/debian): falco.service systemd unit is now cleaned-up during (re)install and removal via the DEB and RPM packages [[#2138](https://github.com/falcosecurity/falco/pull/2138)] - [@Happy-Dude](https://github.com/Happy-Dude)\n* update(userspace/falco): move on from deprecated libs API for printing event list [[#2253](https://github.com/falcosecurity/falco/pull/2253)] - [@jasondellaluce](https://github.com/j`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 842,
                  "startColumn": 41,
                  "endLine": 842,
                  "endColumn": 49,
                  "snippet": {
                    "text": "#2283](https://github.com/falcosecurity/falco/pull/2283)] - [@alacuku](https://github.com/alacuku)\n* fix(engine): fix warning about redundant std::move [[#2286](https://github.com/falcosecurity/falco/pull/2286)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(scripts): force falco-driver-loader script to try to compile the driver anyway even on unsupported platforms [[#2219](https://github.com/falcosecurity/falco/pull/2219)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): fixed version bucket for release jobs. [[#2266](https://github.com/falcosecurity/falco/pull/2266)] - [@FedeDP](https://githu",
                    "rendered": {
                      "text": "#2283](https://github.com/falcosecurity/falco/pull/2283)] - [@alacuku](https://github.com/alacuku)\n* fix(engine): fix warning about redundant std::move [[#2286](https://github.com/falcosecurity/falco/pull/2286)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(scripts): force falco-driver-loader script to try to compile the driver anyway even on unsupported platforms [[#2219](https://github.com/falcosecurity/falco/pull/2219)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): fixed version bucket for release jobs. [[#2266](https://github.com/falcosecurity/falco/pull/2266)] - [@FedeDP](https://githu",
                      "markdown": "`#2283](https://github.com/falcosecurity/falco/pull/2283)] - [@alacuku](https://github.com/alacuku)\n* fix(engine): fix warning about redundant std::move [[#2286](https://github.com/falcosecurity/falco/pull/2286)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(scripts): force falco-driver-loader script to try to compile the driver anyway even on unsupported platforms [[#2219](https://github.com/falcosecurity/falco/pull/2219)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): fixed version bucket for release jobs. [[#2266](https://github.com/falcosecurity/falco/pull/2266)] - [@FedeDP](https://githu`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 826,
                  "startColumn": 31,
                  "endLine": 826,
                  "endColumn": 37,
                  "snippet": {
                    "text": "osecurity/falco/pull/2375)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(userspace): use the right path for the `cpus_for_each_syscall_buffer` config [[#2378](https://github.com/falcosecurity/falco/pull/2378)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(scripts): fixed incorrect bash var expansion [[#2367](https://github.com/falcosecurity/falco/pull/2367)] - [@therealbobo](https://github.com/therealbobo)\n* update(CI): upgrade toolchain in modern falco builder dockerfile [[#2337](https://github.com/falcosecurity/falco/pull/2337)] - [@Andreagit97](https://github.com/Andreagit97)\n*",
                    "rendered": {
                      "text": "osecurity/falco/pull/2375)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(userspace): use the right path for the `cpus_for_each_syscall_buffer` config [[#2378](https://github.com/falcosecurity/falco/pull/2378)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(scripts): fixed incorrect bash var expansion [[#2367](https://github.com/falcosecurity/falco/pull/2367)] - [@therealbobo](https://github.com/therealbobo)\n* update(CI): upgrade toolchain in modern falco builder dockerfile [[#2337](https://github.com/falcosecurity/falco/pull/2337)] - [@Andreagit97](https://github.com/Andreagit97)\n*",
                      "markdown": "`osecurity/falco/pull/2375)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(userspace): use the right path for the `cpus_for_each_syscall_buffer` config [[#2378](https://github.com/falcosecurity/falco/pull/2378)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(scripts): fixed incorrect bash var expansion [[#2367](https://github.com/falcosecurity/falco/pull/2367)] - [@therealbobo](https://github.com/therealbobo)\n* update(CI): upgrade toolchain in modern falco builder dockerfile [[#2337](https://github.com/falcosecurity/falco/pull/2337)] - [@Andreagit97](https://github.com/Andreagit97)\n*`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 817,
                  "startColumn": 37,
                  "endLine": 817,
                  "endColumn": 45,
                  "snippet": {
                    "text": "urity/falco/pull/2324)] - [@cappellinsamuele](https://github.com/cappellinsamuele)\n* chore(userspace): add `njson` lib as a dependency for `falco_engine` [[#2316](https://github.com/falcosecurity/falco/pull/2316)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(scripts): force rpm postinstall script to always show dialog, even on upgrade [[#2405](https://github.com/falcosecurity/falco/pull/2405)] - [@FedeDP](https://github.com/FedeDP)\n* fix(scripts): fixed falcoctl config install dir. [[#2399](https://github.com/falcosecurity/falco/pull/2399)] - [@FedeDP](https://github.com/FedeDP)\n* fix(script",
                    "rendered": {
                      "text": "urity/falco/pull/2324)] - [@cappellinsamuele](https://github.com/cappellinsamuele)\n* chore(userspace): add `njson` lib as a dependency for `falco_engine` [[#2316](https://github.com/falcosecurity/falco/pull/2316)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(scripts): force rpm postinstall script to always show dialog, even on upgrade [[#2405](https://github.com/falcosecurity/falco/pull/2405)] - [@FedeDP](https://github.com/FedeDP)\n* fix(scripts): fixed falcoctl config install dir. [[#2399](https://github.com/falcosecurity/falco/pull/2399)] - [@FedeDP](https://github.com/FedeDP)\n* fix(script",
                      "markdown": "`urity/falco/pull/2324)] - [@cappellinsamuele](https://github.com/cappellinsamuele)\n* chore(userspace): add `njson` lib as a dependency for `falco_engine` [[#2316](https://github.com/falcosecurity/falco/pull/2316)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(scripts): force rpm postinstall script to always show dialog, even on upgrade [[#2405](https://github.com/falcosecurity/falco/pull/2405)] - [@FedeDP](https://github.com/FedeDP)\n* fix(scripts): fixed falcoctl config install dir. [[#2399](https://github.com/falcosecurity/falco/pull/2399)] - [@FedeDP](https://github.com/FedeDP)\n* fix(script`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 817,
                  "startColumn": 21,
                  "endLine": 817,
                  "endColumn": 26,
                  "snippet": {
                    "text": "hub.com/falcosecurity/falco/pull/2324)] - [@cappellinsamuele](https://github.com/cappellinsamuele)\n* chore(userspace): add `njson` lib as a dependency for `falco_engine` [[#2316](https://github.com/falcosecurity/falco/pull/2316)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(scripts): force rpm postinstall script to always show dialog, even on upgrade [[#2405](https://github.com/falcosecurity/falco/pull/2405)] - [@FedeDP](https://github.com/FedeDP)\n* fix(scripts): fixed falcoctl config install dir. [[#2399](https://github.com/falcosecurity/falco/pull/2399)] - [@FedeDP](https://github.com/F",
                    "rendered": {
                      "text": "hub.com/falcosecurity/falco/pull/2324)] - [@cappellinsamuele](https://github.com/cappellinsamuele)\n* chore(userspace): add `njson` lib as a dependency for `falco_engine` [[#2316](https://github.com/falcosecurity/falco/pull/2316)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(scripts): force rpm postinstall script to always show dialog, even on upgrade [[#2405](https://github.com/falcosecurity/falco/pull/2405)] - [@FedeDP](https://github.com/FedeDP)\n* fix(scripts): fixed falcoctl config install dir. [[#2399](https://github.com/falcosecurity/falco/pull/2399)] - [@FedeDP](https://github.com/F",
                      "markdown": "`hub.com/falcosecurity/falco/pull/2324)] - [@cappellinsamuele](https://github.com/cappellinsamuele)\n* chore(userspace): add `njson` lib as a dependency for `falco_engine` [[#2316](https://github.com/falcosecurity/falco/pull/2316)] - [@Andreagit97](https://github.com/Andreagit97)\n* fix(scripts): force rpm postinstall script to always show dialog, even on upgrade [[#2405](https://github.com/falcosecurity/falco/pull/2405)] - [@FedeDP](https://github.com/FedeDP)\n* fix(scripts): fixed falcoctl config install dir. [[#2399](https://github.com/falcosecurity/falco/pull/2399)] - [@FedeDP](https://github.com/F`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 815,
                  "startColumn": 14,
                  "endLine": 815,
                  "endColumn": 19,
                  "snippet": {
                    "text": "[#2291](https://github.com/falcosecurity/falco/pull/2291)] - [@vin01](https://github.com/vin01)\n* rule(macro: rpm_procs): let salt-call write to rpm database [[#2291](https://github.com/falcosecurity/falco/pull/2291)] - [@vin01](https://github.com/vin01)\n\n\n### Non user-facing changes\n\n* fix(ci): fix rpm sign job dependencies [[#2324](https://github.com/falcosecurity/falco/pull/2324)] - [@cappellinsamuele](https://github.com/cappellinsamuele)\n* chore(userspace): add `njson` lib as a dependency for `falco_engine` [[#2316](https://github.com/falcosecurity/falco/pull/2316)] - [@Andreagit97](https://git",
                    "rendered": {
                      "text": "[#2291](https://github.com/falcosecurity/falco/pull/2291)] - [@vin01](https://github.com/vin01)\n* rule(macro: rpm_procs): let salt-call write to rpm database [[#2291](https://github.com/falcosecurity/falco/pull/2291)] - [@vin01](https://github.com/vin01)\n\n\n### Non user-facing changes\n\n* fix(ci): fix rpm sign job dependencies [[#2324](https://github.com/falcosecurity/falco/pull/2324)] - [@cappellinsamuele](https://github.com/cappellinsamuele)\n* chore(userspace): add `njson` lib as a dependency for `falco_engine` [[#2316](https://github.com/falcosecurity/falco/pull/2316)] - [@Andreagit97](https://git",
                      "markdown": "`[#2291](https://github.com/falcosecurity/falco/pull/2291)] - [@vin01](https://github.com/vin01)\n* rule(macro: rpm_procs): let salt-call write to rpm database [[#2291](https://github.com/falcosecurity/falco/pull/2291)] - [@vin01](https://github.com/vin01)\n\n\n### Non user-facing changes\n\n* fix(ci): fix rpm sign job dependencies [[#2324](https://github.com/falcosecurity/falco/pull/2324)] - [@cappellinsamuele](https://github.com/cappellinsamuele)\n* chore(userspace): add `njson` lib as a dependency for `falco_engine` [[#2316](https://github.com/falcosecurity/falco/pull/2316)] - [@Andreagit97](https://git`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 810,
                  "startColumn": 48,
                  "endLine": 810,
                  "endColumn": 53,
                  "snippet": {
                    "text": "b.com/falcosecurity/falco/pull/2305)] - [@loresuso](https://github.com/loresuso)\n* rule(Read sensitive file untrusted): let salt-call read sensitive files [[#2291](https://github.com/falcosecurity/falco/pull/2291)] - [@vin01](https://github.com/vin01)\n* rule(macro: rpm_procs): let salt-call write to rpm database [[#2291](https://github.com/falcosecurity/falco/pull/2291)] - [@vin01](https://github.com/vin01)\n\n\n### Non user-facing changes\n\n* fix(ci): fix rpm sign job dependencies [[#2324](https://github.com/falcosecurity/falco/pull/2324)] - [@cappellinsamuele](https://github.com/cappellinsamuele)\n* c",
                    "rendered": {
                      "text": "b.com/falcosecurity/falco/pull/2305)] - [@loresuso](https://github.com/loresuso)\n* rule(Read sensitive file untrusted): let salt-call read sensitive files [[#2291](https://github.com/falcosecurity/falco/pull/2291)] - [@vin01](https://github.com/vin01)\n* rule(macro: rpm_procs): let salt-call write to rpm database [[#2291](https://github.com/falcosecurity/falco/pull/2291)] - [@vin01](https://github.com/vin01)\n\n\n### Non user-facing changes\n\n* fix(ci): fix rpm sign job dependencies [[#2324](https://github.com/falcosecurity/falco/pull/2324)] - [@cappellinsamuele](https://github.com/cappellinsamuele)\n* c",
                      "markdown": "`b.com/falcosecurity/falco/pull/2305)] - [@loresuso](https://github.com/loresuso)\n* rule(Read sensitive file untrusted): let salt-call read sensitive files [[#2291](https://github.com/falcosecurity/falco/pull/2291)] - [@vin01](https://github.com/vin01)\n* rule(macro: rpm_procs): let salt-call write to rpm database [[#2291](https://github.com/falcosecurity/falco/pull/2291)] - [@vin01](https://github.com/vin01)\n\n\n### Non user-facing changes\n\n* fix(ci): fix rpm sign job dependencies [[#2324](https://github.com/falcosecurity/falco/pull/2324)] - [@cappellinsamuele](https://github.com/cappellinsamuele)\n* c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 805,
                  "startColumn": 173,
                  "endLine": 805,
                  "endColumn": 177,
                  "snippet": {
                    "text": "ntory / threat modeling [[#2167](https://github.com/falcosecurity/falco/pull/2167)] - [@incertum](https://github.com/incertum)\n* rule(Outbound Connection to C2 Server): Update the \"Outbound connection to C2 server\" rule to match both FQDN and IP addresses. Prior to this change, the rule only matched IP addresses and not FQDN. [[#2241](https://github.com/falcosecurity/falco/pull/2241)] - [@Nicolas-Peiffer](https://github.com/Nicolas-Peiffer)\n* rule(Execution from /dev/shm): new rule to detect execution from /dev/shm [[#2225](https://github.com/falcosecurity/falco/pull/2225)] - [@AlbertoPellitteri](",
                    "rendered": {
                      "text": "ntory / threat modeling [[#2167](https://github.com/falcosecurity/falco/pull/2167)] - [@incertum](https://github.com/incertum)\n* rule(Outbound Connection to C2 Server): Update the \"Outbound connection to C2 server\" rule to match both FQDN and IP addresses. Prior to this change, the rule only matched IP addresses and not FQDN. [[#2241](https://github.com/falcosecurity/falco/pull/2241)] - [@Nicolas-Peiffer](https://github.com/Nicolas-Peiffer)\n* rule(Execution from /dev/shm): new rule to detect execution from /dev/shm [[#2225](https://github.com/falcosecurity/falco/pull/2225)] - [@AlbertoPellitteri](",
                      "markdown": "`ntory / threat modeling [[#2167](https://github.com/falcosecurity/falco/pull/2167)] - [@incertum](https://github.com/incertum)\n* rule(Outbound Connection to C2 Server): Update the \"Outbound connection to C2 server\" rule to match both FQDN and IP addresses. Prior to this change, the rule only matched IP addresses and not FQDN. [[#2241](https://github.com/falcosecurity/falco/pull/2241)] - [@Nicolas-Peiffer](https://github.com/Nicolas-Peiffer)\n* rule(Execution from /dev/shm): new rule to detect execution from /dev/shm [[#2225](https://github.com/falcosecurity/falco/pull/2225)] - [@AlbertoPellitteri](`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 805,
                  "startColumn": 115,
                  "endLine": 805,
                  "endColumn": 119,
                  "snippet": {
                    "text": "Changes\n\n* rules(tagging): enhanced rules tagging for inventory / threat modeling [[#2167](https://github.com/falcosecurity/falco/pull/2167)] - [@incertum](https://github.com/incertum)\n* rule(Outbound Connection to C2 Server): Update the \"Outbound connection to C2 server\" rule to match both FQDN and IP addresses. Prior to this change, the rule only matched IP addresses and not FQDN. [[#2241](https://github.com/falcosecurity/falco/pull/2241)] - [@Nicolas-Peiffer](https://github.com/Nicolas-Peiffer)\n* rule(Execution from /dev/shm): new rule to detect execution from /dev/shm [[#2225](https://github.c",
                    "rendered": {
                      "text": "Changes\n\n* rules(tagging): enhanced rules tagging for inventory / threat modeling [[#2167](https://github.com/falcosecurity/falco/pull/2167)] - [@incertum](https://github.com/incertum)\n* rule(Outbound Connection to C2 Server): Update the \"Outbound connection to C2 server\" rule to match both FQDN and IP addresses. Prior to this change, the rule only matched IP addresses and not FQDN. [[#2241](https://github.com/falcosecurity/falco/pull/2241)] - [@Nicolas-Peiffer](https://github.com/Nicolas-Peiffer)\n* rule(Execution from /dev/shm): new rule to detect execution from /dev/shm [[#2225](https://github.c",
                      "markdown": "`Changes\n\n* rules(tagging): enhanced rules tagging for inventory / threat modeling [[#2167](https://github.com/falcosecurity/falco/pull/2167)] - [@incertum](https://github.com/incertum)\n* rule(Outbound Connection to C2 Server): Update the \"Outbound connection to C2 server\" rule to match both FQDN and IP addresses. Prior to this change, the rule only matched IP addresses and not FQDN. [[#2241](https://github.com/falcosecurity/falco/pull/2241)] - [@Nicolas-Peiffer](https://github.com/Nicolas-Peiffer)\n* rule(Execution from /dev/shm): new rule to detect execution from /dev/shm [[#2225](https://github.c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 778,
                  "startColumn": 81,
                  "endLine": 778,
                  "endColumn": 89,
                  "snippet": {
                    "text": "] - [@Issif](https://github.com/Issif)\n* update: Mesos support is now deprecated and will be removed in the next version. [[#2328](https://github.com/falcosecurity/falco/pull/2328)] - [@leogr](https://github.com/leogr)\n* update(scripts/falco-driver-loader): optimize the resiliency of module download script for air-gapped environments [[#2336](https://github.com/falcosecurity/falco/pull/2336)] - [@Dentrax](https://github.com/Dentrax)\n* doc(userspace): provide users with a correct message when some syscalls are not defined [[#2329](https://github.com/falcosecurity/falco/pull/2329)] - [@Andreagit97](http",
                    "rendered": {
                      "text": "] - [@Issif](https://github.com/Issif)\n* update: Mesos support is now deprecated and will be removed in the next version. [[#2328](https://github.com/falcosecurity/falco/pull/2328)] - [@leogr](https://github.com/leogr)\n* update(scripts/falco-driver-loader): optimize the resiliency of module download script for air-gapped environments [[#2336](https://github.com/falcosecurity/falco/pull/2336)] - [@Dentrax](https://github.com/Dentrax)\n* doc(userspace): provide users with a correct message when some syscalls are not defined [[#2329](https://github.com/falcosecurity/falco/pull/2329)] - [@Andreagit97](http",
                      "markdown": "`] - [@Issif](https://github.com/Issif)\n* update: Mesos support is now deprecated and will be removed in the next version. [[#2328](https://github.com/falcosecurity/falco/pull/2328)] - [@leogr](https://github.com/leogr)\n* update(scripts/falco-driver-loader): optimize the resiliency of module download script for air-gapped environments [[#2336](https://github.com/falcosecurity/falco/pull/2336)] - [@Dentrax](https://github.com/Dentrax)\n* doc(userspace): provide users with a correct message when some syscalls are not defined [[#2329](https://github.com/falcosecurity/falco/pull/2329)] - [@Andreagit97](http`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 776,
                  "startColumn": 60,
                  "endLine": 776,
                  "endColumn": 68,
                  "snippet": {
                    "text": "thub.com/falcosecurity/falco/pull/2351)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(cmake): updated libs to 0.10.1 tag. [[#2362](https://github.com/falcosecurity/falco/pull/2362)] - [@FedeDP](https://github.com/FedeDP)\n* Install the certificates of authorities in falco:no-driver docker image [[#2355](https://github.com/falcosecurity/falco/pull/2355)] - [@Issif](https://github.com/Issif)\n* update: Mesos support is now deprecated and will be removed in the next version. [[#2328](https://github.com/falcosecurity/falco/pull/2328)] - [@leogr](https://github.com/leogr)\n* update(scripts/",
                    "rendered": {
                      "text": "thub.com/falcosecurity/falco/pull/2351)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(cmake): updated libs to 0.10.1 tag. [[#2362](https://github.com/falcosecurity/falco/pull/2362)] - [@FedeDP](https://github.com/FedeDP)\n* Install the certificates of authorities in falco:no-driver docker image [[#2355](https://github.com/falcosecurity/falco/pull/2355)] - [@Issif](https://github.com/Issif)\n* update: Mesos support is now deprecated and will be removed in the next version. [[#2328](https://github.com/falcosecurity/falco/pull/2328)] - [@leogr](https://github.com/leogr)\n* update(scripts/",
                      "markdown": "`thub.com/falcosecurity/falco/pull/2351)] - [@jasondellaluce](https://github.com/jasondellaluce)\n* update(cmake): updated libs to 0.10.1 tag. [[#2362](https://github.com/falcosecurity/falco/pull/2362)] - [@FedeDP](https://github.com/FedeDP)\n* Install the certificates of authorities in falco:no-driver docker image [[#2355](https://github.com/falcosecurity/falco/pull/2355)] - [@Issif](https://github.com/Issif)\n* update: Mesos support is now deprecated and will be removed in the next version. [[#2328](https://github.com/falcosecurity/falco/pull/2328)] - [@leogr](https://github.com/leogr)\n* update(scripts/`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 749,
                  "startColumn": 65,
                  "endLine": 749,
                  "endColumn": 73,
                  "snippet": {
                    "text": "ucedh](https://github.com/Brucedh)\n* new(engine): Also include exact locations for rule condition compile errors (missing macros, etc). [[#2216](https://github.com/falcosecurity/falco/pull/2216)] - [@mstemm](https://github.com/mstemm)\n* new(scripts): Support older RHEL distros in falco-driver-loader script [[#2312](https://github.com/falcosecurity/falco/pull/2312)] - [@gentooise](https://github.com/gentooise)\n* new(scripts): add `falcoctl` config into Falco package [[#2390](https://github.com/falcosecurity/falco/pull/2390)] - [@Andreagit97](https://github.com/Andreagit97)\n* new(userspace/falco): [EXPE",
                    "rendered": {
                      "text": "ucedh](https://github.com/Brucedh)\n* new(engine): Also include exact locations for rule condition compile errors (missing macros, etc). [[#2216](https://github.com/falcosecurity/falco/pull/2216)] - [@mstemm](https://github.com/mstemm)\n* new(scripts): Support older RHEL distros in falco-driver-loader script [[#2312](https://github.com/falcosecurity/falco/pull/2312)] - [@gentooise](https://github.com/gentooise)\n* new(scripts): add `falcoctl` config into Falco package [[#2390](https://github.com/falcosecurity/falco/pull/2390)] - [@Andreagit97](https://github.com/Andreagit97)\n* new(userspace/falco): [EXPE",
                      "markdown": "`ucedh](https://github.com/Brucedh)\n* new(engine): Also include exact locations for rule condition compile errors (missing macros, etc). [[#2216](https://github.com/falcosecurity/falco/pull/2216)] - [@mstemm](https://github.com/mstemm)\n* new(scripts): Support older RHEL distros in falco-driver-loader script [[#2312](https://github.com/falcosecurity/falco/pull/2312)] - [@gentooise](https://github.com/gentooise)\n* new(scripts): add `falcoctl` config into Falco package [[#2390](https://github.com/falcosecurity/falco/pull/2390)] - [@Andreagit97](https://github.com/Andreagit97)\n* new(userspace/falco): [EXPE`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 719,
                  "startColumn": 29,
                  "endLine": 719,
                  "endColumn": 33,
                  "snippet": {
                    "text": "kout action) [[#2514](https://github.com/falcosecurity/falco/pull/2514)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): enable toolset before every make command [[#2513](https://github.com/falcosecurity/falco/pull/2513)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(ci): remove unnecessary mv [[#2512](https://github.com/falcosecurity/falco/pull/2512)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(ci): bucket -> bucket_suffix [[#2511](https://github.com/falcosecurity/falco/pull/2511)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* build(deps): Bump submodules/falcosecurity-rules ",
                    "rendered": {
                      "text": "kout action) [[#2514](https://github.com/falcosecurity/falco/pull/2514)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): enable toolset before every make command [[#2513](https://github.com/falcosecurity/falco/pull/2513)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(ci): remove unnecessary mv [[#2512](https://github.com/falcosecurity/falco/pull/2512)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(ci): bucket -> bucket_suffix [[#2511](https://github.com/falcosecurity/falco/pull/2511)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* build(deps): Bump submodules/falcosecurity-rules ",
                      "markdown": "`kout action) [[#2514](https://github.com/falcosecurity/falco/pull/2514)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): enable toolset before every make command [[#2513](https://github.com/falcosecurity/falco/pull/2513)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(ci): remove unnecessary mv [[#2512](https://github.com/falcosecurity/falco/pull/2512)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(ci): bucket -> bucket_suffix [[#2511](https://github.com/falcosecurity/falco/pull/2511)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* build(deps): Bump submodules/falcosecurity-rules `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 717,
                  "startColumn": 47,
                  "endLine": 717,
                  "endColumn": 52,
                  "snippet": {
                    "text": "github.com/falcosecurity/falco/pull/2516)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): fetch version step, download rpms/debs, minor change [[#2519](https://github.com/falcosecurity/falco/pull/2519)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(ci): properly install recent version of git (needed >= 2.18 by checkout action) [[#2514](https://github.com/falcosecurity/falco/pull/2514)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): enable toolset before every make command [[#2513](https://github.com/falcosecurity/falco/pull/2513)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(",
                    "rendered": {
                      "text": "github.com/falcosecurity/falco/pull/2516)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): fetch version step, download rpms/debs, minor change [[#2519](https://github.com/falcosecurity/falco/pull/2519)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(ci): properly install recent version of git (needed >= 2.18 by checkout action) [[#2514](https://github.com/falcosecurity/falco/pull/2514)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): enable toolset before every make command [[#2513](https://github.com/falcosecurity/falco/pull/2513)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(",
                      "markdown": "`github.com/falcosecurity/falco/pull/2516)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): fetch version step, download rpms/debs, minor change [[#2519](https://github.com/falcosecurity/falco/pull/2519)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(ci): properly install recent version of git (needed >= 2.18 by checkout action) [[#2514](https://github.com/falcosecurity/falco/pull/2514)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): enable toolset before every make command [[#2513](https://github.com/falcosecurity/falco/pull/2513)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 700,
                  "startColumn": 37,
                  "endLine": 700,
                  "endColumn": 45,
                  "snippet": {
                    "text": "ker arg is named `TARGETARCH`. [[#2558](https://github.com/falcosecurity/falco/pull/2558)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): set docker TARGET_ARCH [[#2557](https://github.com/falcosecurity/falco/pull/2557)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): use normal docker to build docker images, instead of buildx. [[#2556](https://github.com/falcosecurity/falco/pull/2556)] - [@FedeDP](https://github.com/FedeDP)\n* docs: improve documentation and description of base_syscalls option [[#2515](https://github.com/falcosecurity/falco/pull/2515)] - [@Happy-Dude](https://github.com/Happy-Dud",
                    "rendered": {
                      "text": "ker arg is named `TARGETARCH`. [[#2558](https://github.com/falcosecurity/falco/pull/2558)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): set docker TARGET_ARCH [[#2557](https://github.com/falcosecurity/falco/pull/2557)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): use normal docker to build docker images, instead of buildx. [[#2556](https://github.com/falcosecurity/falco/pull/2556)] - [@FedeDP](https://github.com/FedeDP)\n* docs: improve documentation and description of base_syscalls option [[#2515](https://github.com/falcosecurity/falco/pull/2515)] - [@Happy-Dude](https://github.com/Happy-Dud",
                      "markdown": "`ker arg is named `TARGETARCH`. [[#2558](https://github.com/falcosecurity/falco/pull/2558)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): set docker TARGET_ARCH [[#2557](https://github.com/falcosecurity/falco/pull/2557)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): use normal docker to build docker images, instead of buildx. [[#2556](https://github.com/falcosecurity/falco/pull/2556)] - [@FedeDP](https://github.com/FedeDP)\n* docs: improve documentation and description of base_syscalls option [[#2515](https://github.com/falcosecurity/falco/pull/2515)] - [@Happy-Dude](https://github.com/Happy-Dud`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 700,
                  "startColumn": 21,
                  "endLine": 700,
                  "endColumn": 29,
                  "snippet": {
                    "text": ")\n* fix(ci): docker arg is named `TARGETARCH`. [[#2558](https://github.com/falcosecurity/falco/pull/2558)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): set docker TARGET_ARCH [[#2557](https://github.com/falcosecurity/falco/pull/2557)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): use normal docker to build docker images, instead of buildx. [[#2556](https://github.com/falcosecurity/falco/pull/2556)] - [@FedeDP](https://github.com/FedeDP)\n* docs: improve documentation and description of base_syscalls option [[#2515](https://github.com/falcosecurity/falco/pull/2515)] - [@Happy-Dude](https://gith",
                    "rendered": {
                      "text": ")\n* fix(ci): docker arg is named `TARGETARCH`. [[#2558](https://github.com/falcosecurity/falco/pull/2558)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): set docker TARGET_ARCH [[#2557](https://github.com/falcosecurity/falco/pull/2557)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): use normal docker to build docker images, instead of buildx. [[#2556](https://github.com/falcosecurity/falco/pull/2556)] - [@FedeDP](https://github.com/FedeDP)\n* docs: improve documentation and description of base_syscalls option [[#2515](https://github.com/falcosecurity/falco/pull/2515)] - [@Happy-Dude](https://gith",
                      "markdown": "`)\n* fix(ci): docker arg is named `TARGETARCH`. [[#2558](https://github.com/falcosecurity/falco/pull/2558)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): set docker TARGET_ARCH [[#2557](https://github.com/falcosecurity/falco/pull/2557)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): use normal docker to build docker images, instead of buildx. [[#2556](https://github.com/falcosecurity/falco/pull/2556)] - [@FedeDP](https://github.com/FedeDP)\n* docs: improve documentation and description of base_syscalls option [[#2515](https://github.com/falcosecurity/falco/pull/2515)] - [@Happy-Dude](https://gith`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 699,
                  "startColumn": 14,
                  "endLine": 699,
                  "endColumn": 22,
                  "snippet": {
                    "text": "roperly use `docker save` to store images. [[#2560](https://github.com/falcosecurity/falco/pull/2560)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): docker arg is named `TARGETARCH`. [[#2558](https://github.com/falcosecurity/falco/pull/2558)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): set docker TARGET_ARCH [[#2557](https://github.com/falcosecurity/falco/pull/2557)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): use normal docker to build docker images, instead of buildx. [[#2556](https://github.com/falcosecurity/falco/pull/2556)] - [@FedeDP](https://github.com/FedeDP)\n* docs: improve do",
                    "rendered": {
                      "text": "roperly use `docker save` to store images. [[#2560](https://github.com/falcosecurity/falco/pull/2560)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): docker arg is named `TARGETARCH`. [[#2558](https://github.com/falcosecurity/falco/pull/2558)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): set docker TARGET_ARCH [[#2557](https://github.com/falcosecurity/falco/pull/2557)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): use normal docker to build docker images, instead of buildx. [[#2556](https://github.com/falcosecurity/falco/pull/2556)] - [@FedeDP](https://github.com/FedeDP)\n* docs: improve do",
                      "markdown": "`roperly use `docker save` to store images. [[#2560](https://github.com/falcosecurity/falco/pull/2560)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): docker arg is named `TARGETARCH`. [[#2558](https://github.com/falcosecurity/falco/pull/2558)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): set docker TARGET_ARCH [[#2557](https://github.com/falcosecurity/falco/pull/2557)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): use normal docker to build docker images, instead of buildx. [[#2556](https://github.com/falcosecurity/falco/pull/2556)] - [@FedeDP](https://github.com/FedeDP)\n* docs: improve do`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 698,
                  "startColumn": 10,
                  "endLine": 698,
                  "endColumn": 18,
                  "snippet": {
                    "text": "2480` to `6da15ae` [[#2559](https://github.com/falcosecurity/falco/pull/2559)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* fix(ci): properly use `docker save` to store images. [[#2560](https://github.com/falcosecurity/falco/pull/2560)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): docker arg is named `TARGETARCH`. [[#2558](https://github.com/falcosecurity/falco/pull/2558)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): set docker TARGET_ARCH [[#2557](https://github.com/falcosecurity/falco/pull/2557)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): use normal docker to build doc",
                    "rendered": {
                      "text": "2480` to `6da15ae` [[#2559](https://github.com/falcosecurity/falco/pull/2559)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* fix(ci): properly use `docker save` to store images. [[#2560](https://github.com/falcosecurity/falco/pull/2560)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): docker arg is named `TARGETARCH`. [[#2558](https://github.com/falcosecurity/falco/pull/2558)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): set docker TARGET_ARCH [[#2557](https://github.com/falcosecurity/falco/pull/2557)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): use normal docker to build doc",
                      "markdown": "`2480` to `6da15ae` [[#2559](https://github.com/falcosecurity/falco/pull/2559)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* fix(ci): properly use `docker save` to store images. [[#2560](https://github.com/falcosecurity/falco/pull/2560)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): docker arg is named `TARGETARCH`. [[#2558](https://github.com/falcosecurity/falco/pull/2558)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): set docker TARGET_ARCH [[#2557](https://github.com/falcosecurity/falco/pull/2557)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): use normal docker to build doc`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 650,
                  "startColumn": 37,
                  "endLine": 650,
                  "endColumn": 45,
                  "snippet": {
                    "text": "81)] - [@therealdwright](https://github.com/therealdwright)\n* update: add missing exception, required_engine_version, required_plugin_version to -L json output [[#2584](https://github.com/falcosecurity/falco/pull/2584)] - [@loresuso](https://github.com/loresuso)\n* feat: add image source OCI label to docker images [[#2592](https://github.com/falcosecurity/falco/pull/2592)] - [@therealdwright](https://github.com/therealdwright)\n* cleanup(config): improve falco config [[#2571](https://github.com/falcosecurity/falco/pull/2571)] - [@incertum](https://github.com/incertum)\n* update(cmake): bump libs and plug",
                    "rendered": {
                      "text": "81)] - [@therealdwright](https://github.com/therealdwright)\n* update: add missing exception, required_engine_version, required_plugin_version to -L json output [[#2584](https://github.com/falcosecurity/falco/pull/2584)] - [@loresuso](https://github.com/loresuso)\n* feat: add image source OCI label to docker images [[#2592](https://github.com/falcosecurity/falco/pull/2592)] - [@therealdwright](https://github.com/therealdwright)\n* cleanup(config): improve falco config [[#2571](https://github.com/falcosecurity/falco/pull/2571)] - [@incertum](https://github.com/incertum)\n* update(cmake): bump libs and plug",
                      "markdown": "`81)] - [@therealdwright](https://github.com/therealdwright)\n* update: add missing exception, required_engine_version, required_plugin_version to -L json output [[#2584](https://github.com/falcosecurity/falco/pull/2584)] - [@loresuso](https://github.com/loresuso)\n* feat: add image source OCI label to docker images [[#2592](https://github.com/falcosecurity/falco/pull/2592)] - [@therealdwright](https://github.com/therealdwright)\n* cleanup(config): improve falco config [[#2571](https://github.com/falcosecurity/falco/pull/2571)] - [@incertum](https://github.com/incertum)\n* update(cmake): bump libs and plug`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 648,
                  "startColumn": 59,
                  "endLine": 648,
                  "endColumn": 67,
                  "snippet": {
                    "text": "/pull/2594)] - [@incertum](https://github.com/incertum)\n* cleanup(userspace, config): improve metrics UX, add include_empty_values option [[#2593](https://github.com/falcosecurity/falco/pull/2593)] - [@incertum](https://github.com/incertum)\n* feat: add the curl and jq packages to the falco-no-driver docker image [[#2581](https://github.com/falcosecurity/falco/pull/2581)] - [@therealdwright](https://github.com/therealdwright)\n* update: add missing exception, required_engine_version, required_plugin_version to -L json output [[#2584](https://github.com/falcosecurity/falco/pull/2584)] - [@loresuso](https",
                    "rendered": {
                      "text": "/pull/2594)] - [@incertum](https://github.com/incertum)\n* cleanup(userspace, config): improve metrics UX, add include_empty_values option [[#2593](https://github.com/falcosecurity/falco/pull/2593)] - [@incertum](https://github.com/incertum)\n* feat: add the curl and jq packages to the falco-no-driver docker image [[#2581](https://github.com/falcosecurity/falco/pull/2581)] - [@therealdwright](https://github.com/therealdwright)\n* update: add missing exception, required_engine_version, required_plugin_version to -L json output [[#2584](https://github.com/falcosecurity/falco/pull/2584)] - [@loresuso](https",
                      "markdown": "`/pull/2594)] - [@incertum](https://github.com/incertum)\n* cleanup(userspace, config): improve metrics UX, add include_empty_values option [[#2593](https://github.com/falcosecurity/falco/pull/2593)] - [@incertum](https://github.com/incertum)\n* feat: add the curl and jq packages to the falco-no-driver docker image [[#2581](https://github.com/falcosecurity/falco/pull/2581)] - [@therealdwright](https://github.com/therealdwright)\n* update: add missing exception, required_engine_version, required_plugin_version to -L json output [[#2584](https://github.com/falcosecurity/falco/pull/2584)] - [@loresuso](https`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 648,
                  "startColumn": 15,
                  "endLine": 648,
                  "endColumn": 21,
                  "snippet": {
                    "text": "2594](https://github.com/falcosecurity/falco/pull/2594)] - [@incertum](https://github.com/incertum)\n* cleanup(userspace, config): improve metrics UX, add include_empty_values option [[#2593](https://github.com/falcosecurity/falco/pull/2593)] - [@incertum](https://github.com/incertum)\n* feat: add the curl and jq packages to the falco-no-driver docker image [[#2581](https://github.com/falcosecurity/falco/pull/2581)] - [@therealdwright](https://github.com/therealdwright)\n* update: add missing exception, required_engine_version, required_plugin_version to -L json output [[#2584](https://github.com/falco",
                    "rendered": {
                      "text": "2594](https://github.com/falcosecurity/falco/pull/2594)] - [@incertum](https://github.com/incertum)\n* cleanup(userspace, config): improve metrics UX, add include_empty_values option [[#2593](https://github.com/falcosecurity/falco/pull/2593)] - [@incertum](https://github.com/incertum)\n* feat: add the curl and jq packages to the falco-no-driver docker image [[#2581](https://github.com/falcosecurity/falco/pull/2581)] - [@therealdwright](https://github.com/therealdwright)\n* update: add missing exception, required_engine_version, required_plugin_version to -L json output [[#2584](https://github.com/falco",
                      "markdown": "`2594](https://github.com/falcosecurity/falco/pull/2594)] - [@incertum](https://github.com/incertum)\n* cleanup(userspace, config): improve metrics UX, add include_empty_values option [[#2593](https://github.com/falcosecurity/falco/pull/2593)] - [@incertum](https://github.com/incertum)\n* feat: add the curl and jq packages to the falco-no-driver docker image [[#2581](https://github.com/falcosecurity/falco/pull/2581)] - [@therealdwright](https://github.com/therealdwright)\n* update: add missing exception, required_engine_version, required_plugin_version to -L json output [[#2584](https://github.com/falco`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 489,
                  "startColumn": 14,
                  "endLine": 489,
                  "endColumn": 25,
                  "snippet": {
                    "text": "ity/falco/pull/2718)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* new: added option to enable/disable echoing of server answer to stdout (disabled by default) when using HTTP output [[#2602](https://github.com/falcosecurity/falco/pull/2602)] - [@FedeDP](https://github.com/FedeDP)\n* new: support systemctl reload for Falco services [[#2588](https://github.com/falcosecurity/falco/pull/2588)] - [@jabdr](https://github.com/jabdr)\n* new(falco/config): add new configurations for http_output that allow mTLS [[#2633](https://github.com/falcosecurity/falco/pull/2633)] - [@annadorottya](https://github.com/anna",
                    "rendered": {
                      "text": "ity/falco/pull/2718)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* new: added option to enable/disable echoing of server answer to stdout (disabled by default) when using HTTP output [[#2602](https://github.com/falcosecurity/falco/pull/2602)] - [@FedeDP](https://github.com/FedeDP)\n* new: support systemctl reload for Falco services [[#2588](https://github.com/falcosecurity/falco/pull/2588)] - [@jabdr](https://github.com/jabdr)\n* new(falco/config): add new configurations for http_output that allow mTLS [[#2633](https://github.com/falcosecurity/falco/pull/2633)] - [@annadorottya](https://github.com/anna",
                      "markdown": "`ity/falco/pull/2718)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* new: added option to enable/disable echoing of server answer to stdout (disabled by default) when using HTTP output [[#2602](https://github.com/falcosecurity/falco/pull/2602)] - [@FedeDP](https://github.com/FedeDP)\n* new: support systemctl reload for Falco services [[#2588](https://github.com/falcosecurity/falco/pull/2588)] - [@jabdr](https://github.com/jabdr)\n* new(falco/config): add new configurations for http_output that allow mTLS [[#2633](https://github.com/falcosecurity/falco/pull/2633)] - [@annadorottya](https://github.com/anna`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 484,
                  "startColumn": 66,
                  "endLine": 484,
                  "endColumn": 71,
                  "snippet": {
                    "text": "tainer.image.repository container_image_tag=%container.image.tag container_name=%container.name`\n    - when `-pk` is set it will print as above, but with `k8s_ns=%k8s.ns.name k8s_pod_name=%k8s.pod.name` appended\n\n\n### Major Changes\n\n\n* new(falco-driver-loader): --source-only now prints the values as env vars [[#2353](https://github.com/falcosecurity/falco/pull/2353)] - [@steakunderscore](https://github.com/steakunderscore)\n* new(docker): allow passing options to falco-driver-loader from the driver loader container [[#2781](https://github.com/falcosecurity/falco/pull/2781)] - [@LucaGuerra](https://g",
                    "rendered": {
                      "text": "tainer.image.repository container_image_tag=%container.image.tag container_name=%container.name`\n    - when `-pk` is set it will print as above, but with `k8s_ns=%k8s.ns.name k8s_pod_name=%k8s.pod.name` appended\n\n\n### Major Changes\n\n\n* new(falco-driver-loader): --source-only now prints the values as env vars [[#2353](https://github.com/falcosecurity/falco/pull/2353)] - [@steakunderscore](https://github.com/steakunderscore)\n* new(docker): allow passing options to falco-driver-loader from the driver loader container [[#2781](https://github.com/falcosecurity/falco/pull/2781)] - [@LucaGuerra](https://g",
                      "markdown": "`tainer.image.repository container_image_tag=%container.image.tag container_name=%container.name`\n    - when `-pk` is set it will print as above, but with `k8s_ns=%k8s.ns.name k8s_pod_name=%k8s.pod.name` appended\n\n\n### Major Changes\n\n\n* new(falco-driver-loader): --source-only now prints the values as env vars [[#2353](https://github.com/falcosecurity/falco/pull/2353)] - [@steakunderscore](https://github.com/steakunderscore)\n* new(docker): allow passing options to falco-driver-loader from the driver loader container [[#2781](https://github.com/falcosecurity/falco/pull/2781)] - [@LucaGuerra](https://g`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 417,
                  "startColumn": 50,
                  "endLine": 417,
                  "endColumn": 58,
                  "snippet": {
                    "text": "om/falcosecurity/falco/pull/2945)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup: fix several warnings from a Clang build [[#2948](https://github.com/falcosecurity/falco/pull/2948)] - [@federico-sysdig](https://github.com/federico-sysdig)\n* chore(docker/falco): add back some deps to falco docker image. [[#2932](https://github.com/falcosecurity/falco/pull/2932)] - [@FedeDP](https://github.com/FedeDP)\n* build(deps): Bump submodules/falcosecurity-testing from `92c313f` to `5248e6d` [[#2937](https://github.com/falcosecurity/falco/pull/2937)] - [@dependabot[bot]](https://github.com/apps/dependab",
                    "rendered": {
                      "text": "om/falcosecurity/falco/pull/2945)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup: fix several warnings from a Clang build [[#2948](https://github.com/falcosecurity/falco/pull/2948)] - [@federico-sysdig](https://github.com/federico-sysdig)\n* chore(docker/falco): add back some deps to falco docker image. [[#2932](https://github.com/falcosecurity/falco/pull/2932)] - [@FedeDP](https://github.com/FedeDP)\n* build(deps): Bump submodules/falcosecurity-testing from `92c313f` to `5248e6d` [[#2937](https://github.com/falcosecurity/falco/pull/2937)] - [@dependabot[bot]](https://github.com/apps/dependab",
                      "markdown": "`om/falcosecurity/falco/pull/2945)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup: fix several warnings from a Clang build [[#2948](https://github.com/falcosecurity/falco/pull/2948)] - [@federico-sysdig](https://github.com/federico-sysdig)\n* chore(docker/falco): add back some deps to falco docker image. [[#2932](https://github.com/falcosecurity/falco/pull/2932)] - [@FedeDP](https://github.com/FedeDP)\n* build(deps): Bump submodules/falcosecurity-testing from `92c313f` to `5248e6d` [[#2937](https://github.com/falcosecurity/falco/pull/2937)] - [@dependabot[bot]](https://github.com/apps/dependab`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 413,
                  "startColumn": 29,
                  "endLine": 413,
                  "endColumn": 37,
                  "snippet": {
                    "text": "com/falcosecurity/falco/pull/2968)] - [@FedeDP](https://github.com/FedeDP)\n* build(deps): Bump submodules/falcosecurity-rules from `64e2adb` to `dd38952` [[#2959](https://github.com/falcosecurity/falco/pull/2959)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* fix(docker): small fixes in docker entrypoints for new driver loader. [[#2966](https://github.com/falcosecurity/falco/pull/2966)] - [@FedeDP](https://github.com/FedeDP)\n* chore(build): allow usage of non-bundled nlohmann-json [[#2947](https://github.com/falcosecurity/falco/pull/2947)] - [@federico-sysdig](https://github.com/federico-",
                    "rendered": {
                      "text": "com/falcosecurity/falco/pull/2968)] - [@FedeDP](https://github.com/FedeDP)\n* build(deps): Bump submodules/falcosecurity-rules from `64e2adb` to `dd38952` [[#2959](https://github.com/falcosecurity/falco/pull/2959)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* fix(docker): small fixes in docker entrypoints for new driver loader. [[#2966](https://github.com/falcosecurity/falco/pull/2966)] - [@FedeDP](https://github.com/FedeDP)\n* chore(build): allow usage of non-bundled nlohmann-json [[#2947](https://github.com/falcosecurity/falco/pull/2947)] - [@federico-sysdig](https://github.com/federico-",
                      "markdown": "`com/falcosecurity/falco/pull/2968)] - [@FedeDP](https://github.com/FedeDP)\n* build(deps): Bump submodules/falcosecurity-rules from `64e2adb` to `dd38952` [[#2959](https://github.com/falcosecurity/falco/pull/2959)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* fix(docker): small fixes in docker entrypoints for new driver loader. [[#2966](https://github.com/falcosecurity/falco/pull/2966)] - [@FedeDP](https://github.com/FedeDP)\n* chore(build): allow usage of non-bundled nlohmann-json [[#2947](https://github.com/falcosecurity/falco/pull/2947)] - [@federico-sysdig](https://github.com/federico-`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 29,
                  "endLine": 407,
                  "endColumn": 34,
                  "snippet": {
                    "text": "ests. [[#2961](https://github.com/falcosecurity/falco/pull/2961)] - [@FedeDP](https://github.com/FedeDP)\n* chore(unit_tests): added more tests for yaml env vars expansion. [[#2972](https://github.com/falcosecurity/falco/pull/2972)] - [@FedeDP](https://github.com/FedeDP)\n* chore(falco.yaml): use HOME env var for ebpf probe path. [[#2971](https://github.com/falcosecurity/falco/pull/2971)] - [@FedeDP](https://github.com/FedeDP)\n* chore: bump falco to latest libs [[#2970](https://github.com/falcosecurity/falco/pull/2970)] - [@Andreagit97](https://github.com/Andreagit97)\n* build(deps): Bump submodules/f",
                    "rendered": {
                      "text": "ests. [[#2961](https://github.com/falcosecurity/falco/pull/2961)] - [@FedeDP](https://github.com/FedeDP)\n* chore(unit_tests): added more tests for yaml env vars expansion. [[#2972](https://github.com/falcosecurity/falco/pull/2972)] - [@FedeDP](https://github.com/FedeDP)\n* chore(falco.yaml): use HOME env var for ebpf probe path. [[#2971](https://github.com/falcosecurity/falco/pull/2971)] - [@FedeDP](https://github.com/FedeDP)\n* chore: bump falco to latest libs [[#2970](https://github.com/falcosecurity/falco/pull/2970)] - [@Andreagit97](https://github.com/Andreagit97)\n* build(deps): Bump submodules/f",
                      "markdown": "`ests. [[#2961](https://github.com/falcosecurity/falco/pull/2961)] - [@FedeDP](https://github.com/FedeDP)\n* chore(unit_tests): added more tests for yaml env vars expansion. [[#2972](https://github.com/falcosecurity/falco/pull/2972)] - [@FedeDP](https://github.com/FedeDP)\n* chore(falco.yaml): use HOME env var for ebpf probe path. [[#2971](https://github.com/falcosecurity/falco/pull/2971)] - [@FedeDP](https://github.com/FedeDP)\n* chore: bump falco to latest libs [[#2970](https://github.com/falcosecurity/falco/pull/2970)] - [@Andreagit97](https://github.com/Andreagit97)\n* build(deps): Bump submodules/f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 406,
                  "startColumn": 46,
                  "endLine": 406,
                  "endColumn": 51,
                  "snippet": {
                    "text": " [[#2920](https://github.com/falcosecurity/falco/pull/2920)] - [@mstemm](https://github.com/mstemm)\n* chore(ci): enable aarch64 falco driver loader tests. [[#2961](https://github.com/falcosecurity/falco/pull/2961)] - [@FedeDP](https://github.com/FedeDP)\n* chore(unit_tests): added more tests for yaml env vars expansion. [[#2972](https://github.com/falcosecurity/falco/pull/2972)] - [@FedeDP](https://github.com/FedeDP)\n* chore(falco.yaml): use HOME env var for ebpf probe path. [[#2971](https://github.com/falcosecurity/falco/pull/2971)] - [@FedeDP](https://github.com/FedeDP)\n* chore: bump falco to late",
                    "rendered": {
                      "text": " [[#2920](https://github.com/falcosecurity/falco/pull/2920)] - [@mstemm](https://github.com/mstemm)\n* chore(ci): enable aarch64 falco driver loader tests. [[#2961](https://github.com/falcosecurity/falco/pull/2961)] - [@FedeDP](https://github.com/FedeDP)\n* chore(unit_tests): added more tests for yaml env vars expansion. [[#2972](https://github.com/falcosecurity/falco/pull/2972)] - [@FedeDP](https://github.com/FedeDP)\n* chore(falco.yaml): use HOME env var for ebpf probe path. [[#2971](https://github.com/falcosecurity/falco/pull/2971)] - [@FedeDP](https://github.com/FedeDP)\n* chore: bump falco to late",
                      "markdown": "` [[#2920](https://github.com/falcosecurity/falco/pull/2920)] - [@mstemm](https://github.com/mstemm)\n* chore(ci): enable aarch64 falco driver loader tests. [[#2961](https://github.com/falcosecurity/falco/pull/2961)] - [@FedeDP](https://github.com/FedeDP)\n* chore(unit_tests): added more tests for yaml env vars expansion. [[#2972](https://github.com/falcosecurity/falco/pull/2972)] - [@FedeDP](https://github.com/FedeDP)\n* chore(falco.yaml): use HOME env var for ebpf probe path. [[#2971](https://github.com/falcosecurity/falco/pull/2971)] - [@FedeDP](https://github.com/FedeDP)\n* chore: bump falco to late`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 362,
                  "startColumn": 56,
                  "endLine": 362,
                  "endColumn": 61,
                  "snippet": {
                    "text": "s://github.com/falcosecurity/falco/pull/2992)] - [@Andreagit97](https://github.com/Andreagit97)\n* cleanup!(cmake): drop bundled plugins in Falco [[#2997](https://github.com/falcosecurity/falco/pull/2997)] - [@FedeDP](https://github.com/FedeDP)\n* update(config): clarify deprecation notices + list all env vars [[#2988](https://github.com/falcosecurity/falco/pull/2988)] - [@incertum](https://github.com/incertum)\n* update: now the `watch_config_files` config option monitors file/directory moving and deletion, too [[#2965](https://github.com/falcosecurity/falco/pull/2965)] - [@NitroCao](https://github.c",
                    "rendered": {
                      "text": "s://github.com/falcosecurity/falco/pull/2992)] - [@Andreagit97](https://github.com/Andreagit97)\n* cleanup!(cmake): drop bundled plugins in Falco [[#2997](https://github.com/falcosecurity/falco/pull/2997)] - [@FedeDP](https://github.com/FedeDP)\n* update(config): clarify deprecation notices + list all env vars [[#2988](https://github.com/falcosecurity/falco/pull/2988)] - [@incertum](https://github.com/incertum)\n* update: now the `watch_config_files` config option monitors file/directory moving and deletion, too [[#2965](https://github.com/falcosecurity/falco/pull/2965)] - [@NitroCao](https://github.c",
                      "markdown": "`s://github.com/falcosecurity/falco/pull/2992)] - [@Andreagit97](https://github.com/Andreagit97)\n* cleanup!(cmake): drop bundled plugins in Falco [[#2997](https://github.com/falcosecurity/falco/pull/2997)] - [@FedeDP](https://github.com/FedeDP)\n* update(config): clarify deprecation notices + list all env vars [[#2988](https://github.com/falcosecurity/falco/pull/2988)] - [@incertum](https://github.com/incertum)\n* update: now the `watch_config_files` config option monitors file/directory moving and deletion, too [[#2965](https://github.com/falcosecurity/falco/pull/2965)] - [@NitroCao](https://github.c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 25,
                  "endLine": 347,
                  "endColumn": 30,
                  "snippet": {
                    "text": " the connection. Two new fields (compress_uploads and keep_alive) in the http_output block of the `falco.yaml` file can be used for that purpose. Both are disabled by default. [[#2974](https://github.com/falcosecurity/falco/pull/2974)] - [@sgaist](https://github.com/sgaist)\n* new(userspace): support env variable expansion in all yaml, even inside strings. [[#2918](https://github.com/falcosecurity/falco/pull/2918)] - [@FedeDP](https://github.com/FedeDP)\n* new(scripts): add a way to enforce driver kind and falcoctl enablement when installing Falco from packages and dialog is not present. [[#2773](htt",
                    "rendered": {
                      "text": " the connection. Two new fields (compress_uploads and keep_alive) in the http_output block of the `falco.yaml` file can be used for that purpose. Both are disabled by default. [[#2974](https://github.com/falcosecurity/falco/pull/2974)] - [@sgaist](https://github.com/sgaist)\n* new(userspace): support env variable expansion in all yaml, even inside strings. [[#2918](https://github.com/falcosecurity/falco/pull/2918)] - [@FedeDP](https://github.com/FedeDP)\n* new(scripts): add a way to enforce driver kind and falcoctl enablement when installing Falco from packages and dialog is not present. [[#2773](htt",
                      "markdown": "` the connection. Two new fields (compress_uploads and keep_alive) in the http_output block of the `falco.yaml` file can be used for that purpose. Both are disabled by default. [[#2974](https://github.com/falcosecurity/falco/pull/2974)] - [@sgaist](https://github.com/sgaist)\n* new(userspace): support env variable expansion in all yaml, even inside strings. [[#2918](https://github.com/falcosecurity/falco/pull/2918)] - [@FedeDP](https://github.com/FedeDP)\n* new(scripts): add a way to enforce driver kind and falcoctl enablement when installing Falco from packages and dialog is not present. [[#2773](htt`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 35,
                  "endLine": 341,
                  "endColumn": 43,
                  "snippet": {
                    "text": "ll expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in favor of new falcoctl driver command [[#2905](https://github.com/falcosecurity/falco/pull/2905)] - [@FedeDP](https://github.com/FedeDP)\n* update!: bump libs to latest and deprecation of k8s metadata options and configs [[#2914](https://github.com/falcosecurity/falco/pull/2914)] - [@jasondellaluce",
                    "rendered": {
                      "text": "ll expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in favor of new falcoctl driver command [[#2905](https://github.com/falcosecurity/falco/pull/2905)] - [@FedeDP](https://github.com/FedeDP)\n* update!: bump libs to latest and deprecation of k8s metadata options and configs [[#2914](https://github.com/falcosecurity/falco/pull/2914)] - [@jasondellaluce",
                      "markdown": "`ll expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in favor of new falcoctl driver command [[#2905](https://github.com/falcosecurity/falco/pull/2905)] - [@FedeDP](https://github.com/FedeDP)\n* update!: bump libs to latest and deprecation of k8s metadata options and configs [[#2914](https://github.com/falcosecurity/falco/pull/2914)] - [@jasondellaluce`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 341,
                  "endLine": 337,
                  "endColumn": 346,
                  "snippet": {
                    "text": "expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in favor of new falcoctl driver command [[#2905](https://github.com/falcosecurity/falco/pull/2905)] - [@FedeDP](https://github.com/FedeDP)\n* update!: bump libs to latest and deprecation of k8s metadata options and configs [[#2",
                    "rendered": {
                      "text": "expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in favor of new falcoctl driver command [[#2905](https://github.com/falcosecurity/falco/pull/2905)] - [@FedeDP](https://github.com/FedeDP)\n* update!: bump libs to latest and deprecation of k8s metadata options and configs [[#2",
                      "markdown": "`expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in favor of new falcoctl driver command [[#2905](https://github.com/falcosecurity/falco/pull/2905)] - [@FedeDP](https://github.com/FedeDP)\n* update!: bump libs to latest and deprecation of k8s metadata options and configs [[#2`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 225,
                  "endLine": 337,
                  "endColumn": 230,
                  "snippet": {
                    "text": " will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in favor of new falcoctl driver command [[#2905](https://github.com/falcosecurity/falco/pull/2905)] - [@FedeDP",
                    "rendered": {
                      "text": " will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in favor of new falcoctl driver command [[#2905](https://github.com/falcosecurity/falco/pull/2905)] - [@FedeDP",
                      "markdown": "` will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in favor of new falcoctl driver command [[#2905](https://github.com/falcosecurity/falco/pull/2905)] - [@FedeDP`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 114,
                  "endLine": 337,
                  "endColumn": 122,
                  "snippet": {
                    "text": "e node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in",
                    "rendered": {
                      "text": "e node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in",
                      "markdown": "`e node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breaking change even if no behavioral change is expected. Also, you can avoid env var expansion by using `${{FOO}}` instead of `${FOO}`. It will resolve to `${FOO}` and won't be resolved to the env var value.\n\n### Major Changes\n\n* new!: dropped falco-driver-loader script in`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 279,
                  "endLine": 335,
                  "endColumn": 284,
                  "snippet": {
                    "text": "ll breaking changes:\n  - Previously, environment variables used in YAML that were empty or defined as `“”` would be expanded to the default value. This was not consistent with the way YAML was handled in other cases, where we only returned the default values if the node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breakin",
                    "rendered": {
                      "text": "ll breaking changes:\n  - Previously, environment variables used in YAML that were empty or defined as `“”` would be expanded to the default value. This was not consistent with the way YAML was handled in other cases, where we only returned the default values if the node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breakin",
                      "markdown": "`ll breaking changes:\n  - Previously, environment variables used in YAML that were empty or defined as `“”` would be expanded to the default value. This was not consistent with the way YAML was handled in other cases, where we only returned the default values if the node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand it. This is technically a breakin`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 244,
                  "endLine": 335,
                  "endColumn": 250,
                  "snippet": {
                    "text": "rt of a string. This introduces small breaking changes:\n  - Previously, environment variables used in YAML that were empty or defined as `“”` would be expanded to the default value. This was not consistent with the way YAML was handled in other cases, where we only returned the default values if the node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand",
                    "rendered": {
                      "text": "rt of a string. This introduces small breaking changes:\n  - Previously, environment variables used in YAML that were empty or defined as `“”` would be expanded to the default value. This was not consistent with the way YAML was handled in other cases, where we only returned the default values if the node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand",
                      "markdown": "`rt of a string. This introduces small breaking changes:\n  - Previously, environment variables used in YAML that were empty or defined as `“”` would be expanded to the default value. This was not consistent with the way YAML was handled in other cases, where we only returned the default values if the node was not defined. Now expanded env vars retain the same behavior of all other variables.\n  - Falco 0.37.0 will return default value for nodes that cannot be parsed to chosen type.\n  - `program_output` command will be env-expanded at init time, instead of letting `popen` and thus the `sh` shell expand`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 30,
                  "endLine": 331,
                  "endColumn": 35,
                  "snippet": {
                    "text": "R_KERNEL_RELEASE` env variable has been replaced by `--kernelrelease` command line argument for `falcoctl driver install` command\n  - `DRIVER_KERNEL_VERSION` env variable has been replaced by `--kernelversion` command line argument for `falcoctl driver install` command\n  - `DRIVER_INSECURE_DOWNLOAD` env variable has been replaced by `--http-insecure` command line argument for `falcoctl driver install` command\n- Remove `-K/-k` options from Falco in favor of the new `k8smeta` plugin.\n- Drop plugins shipped with Falco since plugins are now be managed by falcoctl.\n- Falco 0.37.0 allows environment vari",
                    "rendered": {
                      "text": "R_KERNEL_RELEASE` env variable has been replaced by `--kernelrelease` command line argument for `falcoctl driver install` command\n  - `DRIVER_KERNEL_VERSION` env variable has been replaced by `--kernelversion` command line argument for `falcoctl driver install` command\n  - `DRIVER_INSECURE_DOWNLOAD` env variable has been replaced by `--http-insecure` command line argument for `falcoctl driver install` command\n- Remove `-K/-k` options from Falco in favor of the new `k8smeta` plugin.\n- Drop plugins shipped with Falco since plugins are now be managed by falcoctl.\n- Falco 0.37.0 allows environment vari",
                      "markdown": "`R_KERNEL_RELEASE` env variable has been replaced by `--kernelrelease` command line argument for `falcoctl driver install` command\n  - `DRIVER_KERNEL_VERSION` env variable has been replaced by `--kernelversion` command line argument for `falcoctl driver install` command\n  - `DRIVER_INSECURE_DOWNLOAD` env variable has been replaced by `--http-insecure` command line argument for `falcoctl driver install` command\n- Remove `-K/-k` options from Falco in favor of the new `k8smeta` plugin.\n- Drop plugins shipped with Falco since plugins are now be managed by falcoctl.\n- Falco 0.37.0 allows environment vari`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 27,
                  "endLine": 330,
                  "endColumn": 32,
                  "snippet": {
                    "text": "ERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` command\n  - `DRIVER_KERNEL_RELEASE` env variable has been replaced by `--kernelrelease` command line argument for `falcoctl driver install` command\n  - `DRIVER_KERNEL_VERSION` env variable has been replaced by `--kernelversion` command line argument for `falcoctl driver install` command\n  - `DRIVER_INSECURE_DOWNLOAD` env variable has been replaced by `--http-insecure` command line argument for `falcoctl driver install` command\n- Remove `-K/-k` options from Falco in favor of t",
                    "rendered": {
                      "text": "ERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` command\n  - `DRIVER_KERNEL_RELEASE` env variable has been replaced by `--kernelrelease` command line argument for `falcoctl driver install` command\n  - `DRIVER_KERNEL_VERSION` env variable has been replaced by `--kernelversion` command line argument for `falcoctl driver install` command\n  - `DRIVER_INSECURE_DOWNLOAD` env variable has been replaced by `--http-insecure` command line argument for `falcoctl driver install` command\n- Remove `-K/-k` options from Falco in favor of t",
                      "markdown": "`ERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` command\n  - `DRIVER_KERNEL_RELEASE` env variable has been replaced by `--kernelrelease` command line argument for `falcoctl driver install` command\n  - `DRIVER_KERNEL_VERSION` env variable has been replaced by `--kernelversion` command line argument for `falcoctl driver install` command\n  - `DRIVER_INSECURE_DOWNLOAD` env variable has been replaced by `--http-insecure` command line argument for `falcoctl driver install` command\n- Remove `-K/-k` options from Falco in favor of t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 27,
                  "endLine": 329,
                  "endColumn": 32,
                  "snippet": {
                    "text": "RS_REPO` env variable has been replaced by `FALCOCTL_DRIVER_NAME`  or `--name` command line argument for `falcoctl driver` command\n  - `DRIVERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` command\n  - `DRIVER_KERNEL_RELEASE` env variable has been replaced by `--kernelrelease` command line argument for `falcoctl driver install` command\n  - `DRIVER_KERNEL_VERSION` env variable has been replaced by `--kernelversion` command line argument for `falcoctl driver install` command\n  - `DRIVER_INSECURE_DOWNLOAD` env variable has been",
                    "rendered": {
                      "text": "RS_REPO` env variable has been replaced by `FALCOCTL_DRIVER_NAME`  or `--name` command line argument for `falcoctl driver` command\n  - `DRIVERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` command\n  - `DRIVER_KERNEL_RELEASE` env variable has been replaced by `--kernelrelease` command line argument for `falcoctl driver install` command\n  - `DRIVER_KERNEL_VERSION` env variable has been replaced by `--kernelversion` command line argument for `falcoctl driver install` command\n  - `DRIVER_INSECURE_DOWNLOAD` env variable has been",
                      "markdown": "`RS_REPO` env variable has been replaced by `FALCOCTL_DRIVER_NAME`  or `--name` command line argument for `falcoctl driver` command\n  - `DRIVERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` command\n  - `DRIVER_KERNEL_RELEASE` env variable has been replaced by `--kernelrelease` command line argument for `falcoctl driver install` command\n  - `DRIVER_KERNEL_VERSION` env variable has been replaced by `--kernelversion` command line argument for `falcoctl driver install` command\n  - `DRIVER_INSECURE_DOWNLOAD` env variable has been`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 18,
                  "endLine": 328,
                  "endColumn": 23,
                  "snippet": {
                    "text": "e new falcoctl driver loader, since it is already deprecated and will be removed in the next major version.\n  \n  Some env vars were renamed:\n  - `DRIVERS_REPO` env variable has been replaced by `FALCOCTL_DRIVER_NAME`  or `--name` command line argument for `falcoctl driver` command\n  - `DRIVERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` command\n  - `DRIVER_KERNEL_RELEASE` env variable has been replaced by `--kernelrelease` command line argument for `falcoctl driver install` command\n  - `DRIVER_KERNEL_VERSION` env variable ",
                    "rendered": {
                      "text": "e new falcoctl driver loader, since it is already deprecated and will be removed in the next major version.\n  \n  Some env vars were renamed:\n  - `DRIVERS_REPO` env variable has been replaced by `FALCOCTL_DRIVER_NAME`  or `--name` command line argument for `falcoctl driver` command\n  - `DRIVERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` command\n  - `DRIVER_KERNEL_RELEASE` env variable has been replaced by `--kernelrelease` command line argument for `falcoctl driver install` command\n  - `DRIVER_KERNEL_VERSION` env variable ",
                      "markdown": "`e new falcoctl driver loader, since it is already deprecated and will be removed in the next major version.\n  \n  Some env vars were renamed:\n  - `DRIVERS_REPO` env variable has been replaced by `FALCOCTL_DRIVER_NAME`  or `--name` command line argument for `falcoctl driver` command\n  - `DRIVERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` command\n  - `DRIVER_KERNEL_RELEASE` env variable has been replaced by `--kernelrelease` command line argument for `falcoctl driver install` command\n  - `DRIVER_KERNEL_VERSION` env variable `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 18,
                  "endLine": 327,
                  "endColumn": 23,
                  "snippet": {
                    "text": "L_SOURCES` environment variable.\n  - `DRIVER_CURL_OPTIONS` environment variable.\n  - `FALCO_BPF_PROBE` environment variable is not used by the new falcoctl driver loader, since it is already deprecated and will be removed in the next major version.\n  \n  Some env vars were renamed:\n  - `DRIVERS_REPO` env variable has been replaced by `FALCOCTL_DRIVER_NAME`  or `--name` command line argument for `falcoctl driver` command\n  - `DRIVERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` command\n  - `DRIVER_KERNEL_RELEASE` env variable",
                    "rendered": {
                      "text": "L_SOURCES` environment variable.\n  - `DRIVER_CURL_OPTIONS` environment variable.\n  - `FALCO_BPF_PROBE` environment variable is not used by the new falcoctl driver loader, since it is already deprecated and will be removed in the next major version.\n  \n  Some env vars were renamed:\n  - `DRIVERS_REPO` env variable has been replaced by `FALCOCTL_DRIVER_NAME`  or `--name` command line argument for `falcoctl driver` command\n  - `DRIVERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` command\n  - `DRIVER_KERNEL_RELEASE` env variable",
                      "markdown": "`L_SOURCES` environment variable.\n  - `DRIVER_CURL_OPTIONS` environment variable.\n  - `FALCO_BPF_PROBE` environment variable is not used by the new falcoctl driver loader, since it is already deprecated and will be removed in the next major version.\n  \n  Some env vars were renamed:\n  - `DRIVERS_REPO` env variable has been replaced by `FALCOCTL_DRIVER_NAME`  or `--name` command line argument for `falcoctl driver` command\n  - `DRIVERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` command\n  - `DRIVER_KERNEL_RELEASE` env variable`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 6,
                  "endLine": 326,
                  "endColumn": 11,
                  "snippet": {
                    "text": "only` CLI option.\n  - `BPF_USE_LOCAL_KERNEL_SOURCES` environment variable.\n  - `DRIVER_CURL_OPTIONS` environment variable.\n  - `FALCO_BPF_PROBE` environment variable is not used by the new falcoctl driver loader, since it is already deprecated and will be removed in the next major version.\n  \n  Some env vars were renamed:\n  - `DRIVERS_REPO` env variable has been replaced by `FALCOCTL_DRIVER_NAME`  or `--name` command line argument for `falcoctl driver` command\n  - `DRIVERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` comman",
                    "rendered": {
                      "text": "only` CLI option.\n  - `BPF_USE_LOCAL_KERNEL_SOURCES` environment variable.\n  - `DRIVER_CURL_OPTIONS` environment variable.\n  - `FALCO_BPF_PROBE` environment variable is not used by the new falcoctl driver loader, since it is already deprecated and will be removed in the next major version.\n  \n  Some env vars were renamed:\n  - `DRIVERS_REPO` env variable has been replaced by `FALCOCTL_DRIVER_NAME`  or `--name` command line argument for `falcoctl driver` command\n  - `DRIVERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` comman",
                      "markdown": "`only` CLI option.\n  - `BPF_USE_LOCAL_KERNEL_SOURCES` environment variable.\n  - `DRIVER_CURL_OPTIONS` environment variable.\n  - `FALCO_BPF_PROBE` environment variable is not used by the new falcoctl driver loader, since it is already deprecated and will be removed in the next major version.\n  \n  Some env vars were renamed:\n  - `DRIVERS_REPO` env variable has been replaced by `FALCOCTL_DRIVER_NAME`  or `--name` command line argument for `falcoctl driver` command\n  - `DRIVERS_NAME` env variable has been replaced by `FALCOCTL_DRIVER_REPOS`, or `--repo` command line argument for `falcoctl driver` comman`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 27,
                  "endLine": 320,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  - the deprecated `outputs.rate` Falco config is removed.\n  - the deprecated `outputs.max_burst` Falco config is removed.\n- The deprecated `--userspace` CLI option is removed as it is no longer used.\n- The `falco-driver-loader` script will be removed and embedded into falcoctl. The new falcoctl driven implementation will drop:\n  - `--source-only` CLI option.\n  - `BPF_USE_LOCAL_KERNEL_SOURCES` environment variable.\n  - `DRIVER_CURL_OPTIONS` environment variable.\n",
                    "rendered": {
                      "text": "  - the deprecated `outputs.rate` Falco config is removed.\n  - the deprecated `outputs.max_burst` Falco config is removed.\n- The deprecated `--userspace` CLI option is removed as it is no longer used.\n- The `falco-driver-loader` script will be removed and embedded into falcoctl. The new falcoctl driven implementation will drop:\n  - `--source-only` CLI option.\n  - `BPF_USE_LOCAL_KERNEL_SOURCES` environment variable.\n  - `DRIVER_CURL_OPTIONS` environment variable.\n",
                      "markdown": "`  - the deprecated `outputs.rate` Falco config is removed.\n  - the deprecated `outputs.max_burst` Falco config is removed.\n- The deprecated `--userspace` CLI option is removed as it is no longer used.\n- The `falco-driver-loader` script will be removed and embedded into falcoctl. The new falcoctl driven implementation will drop:\n  - `--source-only` CLI option.\n  - `BPF_USE_LOCAL_KERNEL_SOURCES` environment variable.\n  - `DRIVER_CURL_OPTIONS` environment variable.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 50,
                  "endLine": 307,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n### Non user-facing changes\n\n* Added http headers option for driver download in docker images [[#3075](https://github.com/falcosecurity/falco/pull/3075)] - [@toamto94](https://github.com/toamto94)\n* fix(build): install libstdc++ in the Wolfi image [[#3053](https://github.com/falcosecurity/falco/pull/3053)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n## v0.37.0\n",
                    "rendered": {
                      "text": "\n### Non user-facing changes\n\n* Added http headers option for driver download in docker images [[#3075](https://github.com/falcosecurity/falco/pull/3075)] - [@toamto94](https://github.com/toamto94)\n* fix(build): install libstdc++ in the Wolfi image [[#3053](https://github.com/falcosecurity/falco/pull/3053)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n## v0.37.0\n",
                      "markdown": "`\n### Non user-facing changes\n\n* Added http headers option for driver download in docker images [[#3075](https://github.com/falcosecurity/falco/pull/3075)] - [@toamto94](https://github.com/toamto94)\n* fix(build): install libstdc++ in the Wolfi image [[#3053](https://github.com/falcosecurity/falco/pull/3053)] - [@LucaGuerra](https://github.com/LucaGuerra)\n\n## v0.37.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 33,
                  "endLine": 267,
                  "endColumn": 38,
                  "snippet": {
                    "text": "com/FedeDP)\n* Improve const correctness [[#3083](https://github.com/falcosecurity/falco/pull/3083)] - [@sgaist](https://github.com/sgaist)\n* Improve exception throwing [[#3085](https://github.com/falcosecurity/falco/pull/3085)] - [@sgaist](https://github.com/sgaist)\n* fix(ci): update sync in deb and rpm scripts with acl [[#3062](https://github.com/falcosecurity/falco/pull/3062)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(tests): consolidate Falco engine and rule loader tests [[#3066](https://github.com/falcosecurity/falco/pull/3066)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cl",
                    "rendered": {
                      "text": "com/FedeDP)\n* Improve const correctness [[#3083](https://github.com/falcosecurity/falco/pull/3083)] - [@sgaist](https://github.com/sgaist)\n* Improve exception throwing [[#3085](https://github.com/falcosecurity/falco/pull/3085)] - [@sgaist](https://github.com/sgaist)\n* fix(ci): update sync in deb and rpm scripts with acl [[#3062](https://github.com/falcosecurity/falco/pull/3062)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(tests): consolidate Falco engine and rule loader tests [[#3066](https://github.com/falcosecurity/falco/pull/3066)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cl",
                      "markdown": "`com/FedeDP)\n* Improve const correctness [[#3083](https://github.com/falcosecurity/falco/pull/3083)] - [@sgaist](https://github.com/sgaist)\n* Improve exception throwing [[#3085](https://github.com/falcosecurity/falco/pull/3085)] - [@sgaist](https://github.com/sgaist)\n* fix(ci): update sync in deb and rpm scripts with acl [[#3062](https://github.com/falcosecurity/falco/pull/3062)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(tests): consolidate Falco engine and rule loader tests [[#3066](https://github.com/falcosecurity/falco/pull/3066)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cl`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 25,
                  "endLine": 237,
                  "endColumn": 32,
                  "snippet": {
                    "text": "in docker images [[#3166](https://github.com/falcosecurity/falco/pull/3166)] - [@FedeDP](https://github.com/FedeDP)\n* update(ci): build both release and debug versions [[#3161](https://github.com/falcosecurity/falco/pull/3161)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(userspace/falco): watch all configs files. [[#3160](https://github.com/falcosecurity/falco/pull/3160)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): update scorecard-action to v2.3.1 [[#3153](https://github.com/falcosecurity/falco/pull/3153)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(falco): consolidate ",
                    "rendered": {
                      "text": "in docker images [[#3166](https://github.com/falcosecurity/falco/pull/3166)] - [@FedeDP](https://github.com/FedeDP)\n* update(ci): build both release and debug versions [[#3161](https://github.com/falcosecurity/falco/pull/3161)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(userspace/falco): watch all configs files. [[#3160](https://github.com/falcosecurity/falco/pull/3160)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): update scorecard-action to v2.3.1 [[#3153](https://github.com/falcosecurity/falco/pull/3153)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(falco): consolidate ",
                      "markdown": "`in docker images [[#3166](https://github.com/falcosecurity/falco/pull/3166)] - [@FedeDP](https://github.com/FedeDP)\n* update(ci): build both release and debug versions [[#3161](https://github.com/falcosecurity/falco/pull/3161)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(userspace/falco): watch all configs files. [[#3160](https://github.com/falcosecurity/falco/pull/3160)] - [@FedeDP](https://github.com/FedeDP)\n* fix(ci): update scorecard-action to v2.3.1 [[#3153](https://github.com/falcosecurity/falco/pull/3153)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* cleanup(falco): consolidate `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 94,
                  "endLine": 235,
                  "endColumn": 102,
                  "snippet": {
                    "text": "- [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(docker): fixed docker entrypoints for driver loading. [[#3168](https://github.com/falcosecurity/falco/pull/3168)] - [@FedeDP](https://github.com/FedeDP)\n* fix(docker,scripts): do not load falcoctl driver loader when installing Falco deb package in docker images [[#3166](https://github.com/falcosecurity/falco/pull/3166)] - [@FedeDP](https://github.com/FedeDP)\n* update(ci): build both release and debug versions [[#3161](https://github.com/falcosecurity/falco/pull/3161)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(userspace/falco): watch all",
                    "rendered": {
                      "text": "- [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(docker): fixed docker entrypoints for driver loading. [[#3168](https://github.com/falcosecurity/falco/pull/3168)] - [@FedeDP](https://github.com/FedeDP)\n* fix(docker,scripts): do not load falcoctl driver loader when installing Falco deb package in docker images [[#3166](https://github.com/falcosecurity/falco/pull/3166)] - [@FedeDP](https://github.com/FedeDP)\n* update(ci): build both release and debug versions [[#3161](https://github.com/falcosecurity/falco/pull/3161)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(userspace/falco): watch all",
                      "markdown": "`- [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(docker): fixed docker entrypoints for driver loading. [[#3168](https://github.com/falcosecurity/falco/pull/3168)] - [@FedeDP](https://github.com/FedeDP)\n* fix(docker,scripts): do not load falcoctl driver loader when installing Falco deb package in docker images [[#3166](https://github.com/falcosecurity/falco/pull/3166)] - [@FedeDP](https://github.com/FedeDP)\n* update(ci): build both release and debug versions [[#3161](https://github.com/falcosecurity/falco/pull/3161)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* chore(userspace/falco): watch all`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 20,
                  "endLine": 234,
                  "endColumn": 28,
                  "snippet": {
                    "text": "255e6` [[#3170](https://github.com/falcosecurity/falco/pull/3170)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* update(app): close inspectors at teardown time [[#3169](https://github.com/falcosecurity/falco/pull/3169)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(docker): fixed docker entrypoints for driver loading. [[#3168](https://github.com/falcosecurity/falco/pull/3168)] - [@FedeDP](https://github.com/FedeDP)\n* fix(docker,scripts): do not load falcoctl driver loader when installing Falco deb package in docker images [[#3166](https://github.com/falcosecurity/falco/pull/3166)] ",
                    "rendered": {
                      "text": "255e6` [[#3170](https://github.com/falcosecurity/falco/pull/3170)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* update(app): close inspectors at teardown time [[#3169](https://github.com/falcosecurity/falco/pull/3169)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(docker): fixed docker entrypoints for driver loading. [[#3168](https://github.com/falcosecurity/falco/pull/3168)] - [@FedeDP](https://github.com/FedeDP)\n* fix(docker,scripts): do not load falcoctl driver loader when installing Falco deb package in docker images [[#3166](https://github.com/falcosecurity/falco/pull/3166)] ",
                      "markdown": "`255e6` [[#3170](https://github.com/falcosecurity/falco/pull/3170)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* update(app): close inspectors at teardown time [[#3169](https://github.com/falcosecurity/falco/pull/3169)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(docker): fixed docker entrypoints for driver loading. [[#3168](https://github.com/falcosecurity/falco/pull/3168)] - [@FedeDP](https://github.com/FedeDP)\n* fix(docker,scripts): do not load falcoctl driver loader when installing Falco deb package in docker images [[#3166](https://github.com/falcosecurity/falco/pull/3166)] `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 43,
                  "endLine": 233,
                  "endColumn": 49,
                  "snippet": {
                    "text": "ity/falco/pull/3173)] - [@FedeDP](https://github.com/FedeDP)\n* build(deps): Bump submodules/falcosecurity-rules from `869c9a7` to `ec255e6` [[#3170](https://github.com/falcosecurity/falco/pull/3170)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* update(app): close inspectors at teardown time [[#3169](https://github.com/falcosecurity/falco/pull/3169)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(docker): fixed docker entrypoints for driver loading. [[#3168](https://github.com/falcosecurity/falco/pull/3168)] - [@FedeDP](https://github.com/FedeDP)\n* fix(docker,scripts): do not load",
                    "rendered": {
                      "text": "ity/falco/pull/3173)] - [@FedeDP](https://github.com/FedeDP)\n* build(deps): Bump submodules/falcosecurity-rules from `869c9a7` to `ec255e6` [[#3170](https://github.com/falcosecurity/falco/pull/3170)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* update(app): close inspectors at teardown time [[#3169](https://github.com/falcosecurity/falco/pull/3169)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(docker): fixed docker entrypoints for driver loading. [[#3168](https://github.com/falcosecurity/falco/pull/3168)] - [@FedeDP](https://github.com/FedeDP)\n* fix(docker,scripts): do not load",
                      "markdown": "`ity/falco/pull/3173)] - [@FedeDP](https://github.com/FedeDP)\n* build(deps): Bump submodules/falcosecurity-rules from `869c9a7` to `ec255e6` [[#3170](https://github.com/falcosecurity/falco/pull/3170)] - [@dependabot[bot]](https://github.com/apps/dependabot)\n* update(app): close inspectors at teardown time [[#3169](https://github.com/falcosecurity/falco/pull/3169)] - [@LucaGuerra](https://github.com/LucaGuerra)\n* fix(docker): fixed docker entrypoints for driver loading. [[#3168](https://github.com/falcosecurity/falco/pull/3168)] - [@FedeDP](https://github.com/FedeDP)\n* fix(docker,scripts): do not load`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 79,
                  "endLine": 158,
                  "endColumn": 87,
                  "snippet": {
                    "text": "stics\n\n|   MERGED PRS    | NUMBER |\n|-----------------|--------|\n| Not user-facing |      0 |\n| Release note    |      6 |\n| Total           |      6 |\n\n## v0.38.0\n\nReleased on 2024-05-30\n\n### Breaking Changes :warning:\n\n* new(scripts,docker)!: enable automatic driver selection logic in packages and docker images. Modern eBPF is now also the default driver and the highest priority one in the new driver selection logic. [[#3154](https://github.com/falcosecurity/falco/pull/3154)] - [@FedeDP](https://github.com/FedeDP)\n* cleanup(falco.yaml)!: remove some deprecated configs [[#3087](https://github.com/fal",
                    "rendered": {
                      "text": "stics\n\n|   MERGED PRS    | NUMBER |\n|-----------------|--------|\n| Not user-facing |      0 |\n| Release note    |      6 |\n| Total           |      6 |\n\n## v0.38.0\n\nReleased on 2024-05-30\n\n### Breaking Changes :warning:\n\n* new(scripts,docker)!: enable automatic driver selection logic in packages and docker images. Modern eBPF is now also the default driver and the highest priority one in the new driver selection logic. [[#3154](https://github.com/falcosecurity/falco/pull/3154)] - [@FedeDP](https://github.com/FedeDP)\n* cleanup(falco.yaml)!: remove some deprecated configs [[#3087](https://github.com/fal",
                      "markdown": "`stics\n\n|   MERGED PRS    | NUMBER |\n|-----------------|--------|\n| Not user-facing |      0 |\n| Release note    |      6 |\n| Total           |      6 |\n\n## v0.38.0\n\nReleased on 2024-05-30\n\n### Breaking Changes :warning:\n\n* new(scripts,docker)!: enable automatic driver selection logic in packages and docker images. Modern eBPF is now also the default driver and the highest priority one in the new driver selection logic. [[#3154](https://github.com/falcosecurity/falco/pull/3154)] - [@FedeDP](https://github.com/FedeDP)\n* cleanup(falco.yaml)!: remove some deprecated configs [[#3087](https://github.com/fal`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 34,
                  "endLine": 81,
                  "endColumn": 42,
                  "snippet": {
                    "text": "ies issue [[#3299](https://github.com/falcosecurity/falco/pull/3299)] - [@harshitasao](https://github.com/harshitasao)\n* update(cmake): bump falcoctl to v0.10.0-rc1 [[#3316](https://github.com/falcosecurity/falco/pull/3316)] - [@alacuku](https://github.com/alacuku)\n* ci(insecure-api): update semgrep docker image [[#3315](https://github.com/falcosecurity/falco/pull/3315)] - [@francesco-furlan](https://github.com/francesco-furlan)\n* Add demo environment instructions and docker-config files [[#3295](https://github.com/falcosecurity/falco/pull/3295)] - [@bbl232](https://github.com/bbl232)\n* chore(deps): B",
                    "rendered": {
                      "text": "ies issue [[#3299](https://github.com/falcosecurity/falco/pull/3299)] - [@harshitasao](https://github.com/harshitasao)\n* update(cmake): bump falcoctl to v0.10.0-rc1 [[#3316](https://github.com/falcosecurity/falco/pull/3316)] - [@alacuku](https://github.com/alacuku)\n* ci(insecure-api): update semgrep docker image [[#3315](https://github.com/falcosecurity/falco/pull/3315)] - [@francesco-furlan](https://github.com/francesco-furlan)\n* Add demo environment instructions and docker-config files [[#3295](https://github.com/falcosecurity/falco/pull/3295)] - [@bbl232](https://github.com/bbl232)\n* chore(deps): B",
                      "markdown": "`ies issue [[#3299](https://github.com/falcosecurity/falco/pull/3299)] - [@harshitasao](https://github.com/harshitasao)\n* update(cmake): bump falcoctl to v0.10.0-rc1 [[#3316](https://github.com/falcosecurity/falco/pull/3316)] - [@alacuku](https://github.com/alacuku)\n* ci(insecure-api): update semgrep docker image [[#3315](https://github.com/falcosecurity/falco/pull/3315)] - [@francesco-furlan](https://github.com/francesco-furlan)\n* Add demo environment instructions and docker-config files [[#3295](https://github.com/falcosecurity/falco/pull/3295)] - [@bbl232](https://github.com/bbl232)\n* chore(deps): B`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200818-artifacts-storage.md"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 135,
                  "endLine": 45,
                  "endColumn": 141,
                  "snippet": {
                    "text": "\nEach of these files represents a prebuilt driver (eventually two: kernel module and eBPF probe, when possible) that will be published on [bintray](https://bintray.com/falcosecurity) if it builds correctly.\n\nEvery time the `driverkit/config` directory on the master branch has some changes from the previous commit the CI system, which you can find defined in the [.circleci/config.yml](https://github.com/falcosecurity/test-infra/blob/master/.circleci/config.yml) file, takes care of building and publishing all the drivers.\n\nThe driver versions we ship prebuilt drivers for are:\n\n",
                    "rendered": {
                      "text": "\nEach of these files represents a prebuilt driver (eventually two: kernel module and eBPF probe, when possible) that will be published on [bintray](https://bintray.com/falcosecurity) if it builds correctly.\n\nEvery time the `driverkit/config` directory on the master branch has some changes from the previous commit the CI system, which you can find defined in the [.circleci/config.yml](https://github.com/falcosecurity/test-infra/blob/master/.circleci/config.yml) file, takes care of building and publishing all the drivers.\n\nThe driver versions we ship prebuilt drivers for are:\n\n",
                      "markdown": "`\nEach of these files represents a prebuilt driver (eventually two: kernel module and eBPF probe, when possible) that will be published on [bintray](https://bintray.com/falcosecurity) if it builds correctly.\n\nEvery time the `driverkit/config` directory on the master branch has some changes from the previous commit the CI system, which you can find defined in the [.circleci/config.yml](https://github.com/falcosecurity/test-infra/blob/master/.circleci/config.yml) file, takes care of building and publishing all the drivers.\n\nThe driver versions we ship prebuilt drivers for are:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200818-artifacts-storage.md"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 5,
                  "endLine": 45,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nEach of these files represents a prebuilt driver (eventually two: kernel module and eBPF probe, when possible) that will be published on [bintray](https://bintray.com/falcosecurity) if it builds correctly.\n\nEvery time the `driverkit/config` directory on the master branch has some changes from the previous commit the CI system, which you can find defined in the [.circleci/config.yml](https://github.com/falcosecurity/test-infra/blob/master/.circleci/config.yml) file, takes care of building and publishing all the drivers.\n\nThe driver versions we ship prebuilt drivers for are:\n\n",
                    "rendered": {
                      "text": "\nEach of these files represents a prebuilt driver (eventually two: kernel module and eBPF probe, when possible) that will be published on [bintray](https://bintray.com/falcosecurity) if it builds correctly.\n\nEvery time the `driverkit/config` directory on the master branch has some changes from the previous commit the CI system, which you can find defined in the [.circleci/config.yml](https://github.com/falcosecurity/test-infra/blob/master/.circleci/config.yml) file, takes care of building and publishing all the drivers.\n\nThe driver versions we ship prebuilt drivers for are:\n\n",
                      "markdown": "`\nEach of these files represents a prebuilt driver (eventually two: kernel module and eBPF probe, when possible) that will be published on [bintray](https://bintray.com/falcosecurity) if it builds correctly.\n\nEvery time the `driverkit/config` directory on the master branch has some changes from the previous commit the CI system, which you can find defined in the [.circleci/config.yml](https://github.com/falcosecurity/test-infra/blob/master/.circleci/config.yml) file, takes care of building and publishing all the drivers.\n\nThe driver versions we ship prebuilt drivers for are:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200818-artifacts-storage.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 1,
                  "endLine": 23,
                  "snippet": {
                    "text": "As per [Falco Artifacts Scope (#1)](./20200506-artifacts-scope-part-1.md) proposal we provide three kind of Falco packages:\n\n- DEB\n- RPM\n- Tarball\n\nThus, we have three repositories for the Falco stable releases:\n\n",
                    "rendered": {
                      "text": "As per [Falco Artifacts Scope (#1)](./20200506-artifacts-scope-part-1.md) proposal we provide three kind of Falco packages:\n\n- DEB\n- RPM\n- Tarball\n\nThus, we have three repositories for the Falco stable releases:\n\n",
                      "markdown": "`As per [Falco Artifacts Scope (#1)](./20200506-artifacts-scope-part-1.md) proposal we provide three kind of Falco packages:\n\n- DEB\n- RPM\n- Tarball\n\nThus, we have three repositories for the Falco stable releases:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200818-artifacts-storage.md"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 73,
                  "endLine": 83,
                  "endColumn": 77,
                  "snippet": {
                    "text": "- a pull request gets merged into the master branch (**Falco development releases**)\n- a new Falco release (git tag) happens (**Falco stable releases**)\n\nFor a detailed explanation of the container images we build and ship look at the following [documentation](https://github.com/falcosecurity/falco/blob/master/docker/README.md).\n",
                    "rendered": {
                      "text": "- a pull request gets merged into the master branch (**Falco development releases**)\n- a new Falco release (git tag) happens (**Falco stable releases**)\n\nFor a detailed explanation of the container images we build and ship look at the following [documentation](https://github.com/falcosecurity/falco/blob/master/docker/README.md).\n",
                      "markdown": "`- a pull request gets merged into the master branch (**Falco development releases**)\n- a new Falco release (git tag) happens (**Falco stable releases**)\n\nFor a detailed explanation of the container images we build and ship look at the following [documentation](https://github.com/falcosecurity/falco/blob/master/docker/README.md).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200818-artifacts-storage.md"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 31,
                  "endLine": 66,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\nSo, by sending a pull-request towards [test-infra](https://github.com/falcosecurity/test-infra) repository containing the configuration YAML files you can help the Falco community stay on track.\n\nSome pull-requests you can look at to create your own are:\n\n- https://github.com/falcosecurity/test-infra/pull/165\n- https://github.com/falcosecurity/test-infra/pull/163\n",
                    "rendered": {
                      "text": "\nSo, by sending a pull-request towards [test-infra](https://github.com/falcosecurity/test-infra) repository containing the configuration YAML files you can help the Falco community stay on track.\n\nSome pull-requests you can look at to create your own are:\n\n- https://github.com/falcosecurity/test-infra/pull/165\n- https://github.com/falcosecurity/test-infra/pull/163\n",
                      "markdown": "`\nSo, by sending a pull-request towards [test-infra](https://github.com/falcosecurity/test-infra) repository containing the configuration YAML files you can help the Falco community stay on track.\n\nSome pull-requests you can look at to create your own are:\n\n- https://github.com/falcosecurity/test-infra/pull/165\n- https://github.com/falcosecurity/test-infra/pull/163\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230620-anomaly-detection-framework.md"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 635,
                  "endLine": 81,
                  "endColumn": 643,
                  "snippet": {
                    "text": "the existing primary syscalls event source, deviating from its original purpose of processing new data sources. This improvement allows for more intuitive functionality, as demonstrated by the new `k8smeta` plugin. Now is the opportune time to further enhance proven threat detection capabilities and expand the plugins system even more. \n\n*Initial community feedback concerning the KubeCon NA 2023 Full Talk*\n\n- Overall, the feedback for [A Wind of Change for Threat Detection](https://kccncna2023.sched.com/event/1R2mX/a-wind-of-change-for-threat-detection-melissa-kilby-apple) was very positive and apprec",
                    "rendered": {
                      "text": "the existing primary syscalls event source, deviating from its original purpose of processing new data sources. This improvement allows for more intuitive functionality, as demonstrated by the new `k8smeta` plugin. Now is the opportune time to further enhance proven threat detection capabilities and expand the plugins system even more. \n\n*Initial community feedback concerning the KubeCon NA 2023 Full Talk*\n\n- Overall, the feedback for [A Wind of Change for Threat Detection](https://kccncna2023.sched.com/event/1R2mX/a-wind-of-change-for-threat-detection-melissa-kilby-apple) was very positive and apprec",
                      "markdown": "`the existing primary syscalls event source, deviating from its original purpose of processing new data sources. This improvement allows for more intuitive functionality, as demonstrated by the new `k8smeta` plugin. Now is the opportune time to further enhance proven threat detection capabilities and expand the plugins system even more. \n\n*Initial community feedback concerning the KubeCon NA 2023 Full Talk*\n\n- Overall, the feedback for [A Wind of Change for Threat Detection](https://kccncna2023.sched.com/event/1R2mX/a-wind-of-change-for-threat-detection-melissa-kilby-apple) was very positive and apprec`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230620-anomaly-detection-framework.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 546,
                  "endLine": 31,
                  "endColumn": 554,
                  "snippet": {
                    "text": "linked to a file descriptor existing exclusively in memory or improving the efficient and reliable resolution of symlinks for executable paths. Therefore, the proposed anomaly detection framework operates under the assumption of having the *correct* data, thereby complementing the ongoing efforts to expand logging coverage and improve its quality. In summary, the primary focus of the framework is to derive increased value from the existing *right* data that is currently available.\n\nThere is a common perception that attacks on running cloud applications, as well as their indicators of compromise, are t",
                    "rendered": {
                      "text": "linked to a file descriptor existing exclusively in memory or improving the efficient and reliable resolution of symlinks for executable paths. Therefore, the proposed anomaly detection framework operates under the assumption of having the *correct* data, thereby complementing the ongoing efforts to expand logging coverage and improve its quality. In summary, the primary focus of the framework is to derive increased value from the existing *right* data that is currently available.\n\nThere is a common perception that attacks on running cloud applications, as well as their indicators of compromise, are t",
                      "markdown": "`linked to a file descriptor existing exclusively in memory or improving the efficient and reliable resolution of symlinks for executable paths. Therefore, the proposed anomaly detection framework operates under the assumption of having the *correct* data, thereby complementing the ongoing efforts to expand logging coverage and improve its quality. In summary, the primary focus of the framework is to derive increased value from the existing *right* data that is currently available.\n\nThere is a common perception that attacks on running cloud applications, as well as their indicators of compromise, are t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230620-anomaly-detection-framework.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 110,
                  "endLine": 21,
                  "endColumn": 118,
                  "snippet": {
                    "text": "gets to create more rich and actionable alerts so we can catch them earlier and more often - regardless if it's behavior we know about, or something we haven't seen yet.\n\n## Elevator Pitch\n\nWhen Falco processes events in userspace, its rules engine filters the events while the parsers simultaneously update and maintain an internal state. This state includes a process tree cache that enhances Falco alerts by providing contextual information derived from previous events. The goal is to enhance the \"state engine\" even further and provide an option for monitoring the behavior of applications over time.\n\nT",
                    "rendered": {
                      "text": "gets to create more rich and actionable alerts so we can catch them earlier and more often - regardless if it's behavior we know about, or something we haven't seen yet.\n\n## Elevator Pitch\n\nWhen Falco processes events in userspace, its rules engine filters the events while the parsers simultaneously update and maintain an internal state. This state includes a process tree cache that enhances Falco alerts by providing contextual information derived from previous events. The goal is to enhance the \"state engine\" even further and provide an option for monitoring the behavior of applications over time.\n\nT",
                      "markdown": "`gets to create more rich and actionable alerts so we can catch them earlier and more often - regardless if it's behavior we know about, or something we haven't seen yet.\n\n## Elevator Pitch\n\nWhen Falco processes events in userspace, its rules engine filters the events while the parsers simultaneously update and maintain an internal state. This state includes a process tree cache that enhances Falco alerts by providing contextual information derived from previous events. The goal is to enhance the \"state engine\" even further and provide an option for monitoring the behavior of applications over time.\n\nT`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230620-anomaly-detection-framework.md"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 348,
                  "endLine": 92,
                  "endColumn": 354,
                  "snippet": {
                    "text": "an alpha dev version, there's feedback from @jasondellaluce that plugins cannot access the existing `libsinsp` filtercheck. It would be advantageous to enable this access to avoid reimplementing them and the constant risk of falling out of sync with `libs`. @leogr mentioned that supporting this over time should be possible.\n- We have discussed the plugins config and are currently undecided on whether the definition of the behavior profile per sketch, meaning the fields that are string concatenated together and counted, should reside in the plugins config or in the rules files. The latter would poten",
                    "rendered": {
                      "text": "an alpha dev version, there's feedback from @jasondellaluce that plugins cannot access the existing `libsinsp` filtercheck. It would be advantageous to enable this access to avoid reimplementing them and the constant risk of falling out of sync with `libs`. @leogr mentioned that supporting this over time should be possible.\n- We have discussed the plugins config and are currently undecided on whether the definition of the behavior profile per sketch, meaning the fields that are string concatenated together and counted, should reside in the plugins config or in the rules files. The latter would poten",
                      "markdown": "`an alpha dev version, there's feedback from @jasondellaluce that plugins cannot access the existing `libsinsp` filtercheck. It would be advantageous to enable this access to avoid reimplementing them and the constant risk of falling out of sync with `libs`. @leogr mentioned that supporting this over time should be possible.\n- We have discussed the plugins config and are currently undecided on whether the definition of the behavior profile per sketch, meaning the fields that are string concatenated together and counted, should reside in the plugins config or in the rules files. The latter would poten`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230620-anomaly-detection-framework.md"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 635,
                  "endLine": 81,
                  "endColumn": 643,
                  "snippet": {
                    "text": "the existing primary syscalls event source, deviating from its original purpose of processing new data sources. This improvement allows for more intuitive functionality, as demonstrated by the new `k8smeta` plugin. Now is the opportune time to further enhance proven threat detection capabilities and expand the plugins system even more. \n\n*Initial community feedback concerning the KubeCon NA 2023 Full Talk*\n\n- Overall, the feedback for [A Wind of Change for Threat Detection](https://kccncna2023.sched.com/event/1R2mX/a-wind-of-change-for-threat-detection-melissa-kilby-apple) was very positive and apprec",
                    "rendered": {
                      "text": "the existing primary syscalls event source, deviating from its original purpose of processing new data sources. This improvement allows for more intuitive functionality, as demonstrated by the new `k8smeta` plugin. Now is the opportune time to further enhance proven threat detection capabilities and expand the plugins system even more. \n\n*Initial community feedback concerning the KubeCon NA 2023 Full Talk*\n\n- Overall, the feedback for [A Wind of Change for Threat Detection](https://kccncna2023.sched.com/event/1R2mX/a-wind-of-change-for-threat-detection-melissa-kilby-apple) was very positive and apprec",
                      "markdown": "`the existing primary syscalls event source, deviating from its original purpose of processing new data sources. This improvement allows for more intuitive functionality, as demonstrated by the new `k8smeta` plugin. Now is the opportune time to further enhance proven threat detection capabilities and expand the plugins system even more. \n\n*Initial community feedback concerning the KubeCon NA 2023 Full Talk*\n\n- Overall, the feedback for [A Wind of Change for Threat Detection](https://kccncna2023.sched.com/event/1R2mX/a-wind-of-change-for-threat-detection-melissa-kilby-apple) was very positive and apprec`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230620-anomaly-detection-framework.md"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 570,
                  "endLine": 81,
                  "endColumn": 576,
                  "snippet": {
                    "text": "roved CPP SDK. Additionally, it now seamlessly collaborates with the existing primary syscalls event source, deviating from its original purpose of processing new data sources. This improvement allows for more intuitive functionality, as demonstrated by the new `k8smeta` plugin. Now is the opportune time to further enhance proven threat detection capabilities and expand the plugins system even more. \n\n*Initial community feedback concerning the KubeCon NA 2023 Full Talk*\n\n- Overall, the feedback for [A Wind of Change for Threat Detection](https://kccncna2023.sched.com/event/1R2mX/a-wind-of-change-for",
                    "rendered": {
                      "text": "roved CPP SDK. Additionally, it now seamlessly collaborates with the existing primary syscalls event source, deviating from its original purpose of processing new data sources. This improvement allows for more intuitive functionality, as demonstrated by the new `k8smeta` plugin. Now is the opportune time to further enhance proven threat detection capabilities and expand the plugins system even more. \n\n*Initial community feedback concerning the KubeCon NA 2023 Full Talk*\n\n- Overall, the feedback for [A Wind of Change for Threat Detection](https://kccncna2023.sched.com/event/1R2mX/a-wind-of-change-for",
                      "markdown": "`roved CPP SDK. Additionally, it now seamlessly collaborates with the existing primary syscalls event source, deviating from its original purpose of processing new data sources. This improvement allows for more intuitive functionality, as demonstrated by the new `k8smeta` plugin. Now is the opportune time to further enhance proven threat detection capabilities and expand the plugins system even more. \n\n*Initial community feedback concerning the KubeCon NA 2023 Full Talk*\n\n- Overall, the feedback for [A Wind of Change for Threat Detection](https://kccncna2023.sched.com/event/1R2mX/a-wind-of-change-for`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230620-anomaly-detection-framework.md"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 376,
                  "endLine": 37,
                  "endColumn": 382,
                  "snippet": {
                    "text": "sarily in the nature of attacks but rather in identifying the right signals and their appropriate combinations for robust analytics to distinguish between normal and anomalous behavior. This challenge becomes particularly evident when considering the natural fluctuations in application behavior over time and the occurrence of ad-hoc legitimate debugging activities. Such fluctuations can arise from various factors, including routine deployment updates. Moreover, certain applications may produce random file names or execute arbitrary executable paths as part of their regular operations, adding to the ",
                    "rendered": {
                      "text": "sarily in the nature of attacks but rather in identifying the right signals and their appropriate combinations for robust analytics to distinguish between normal and anomalous behavior. This challenge becomes particularly evident when considering the natural fluctuations in application behavior over time and the occurrence of ad-hoc legitimate debugging activities. Such fluctuations can arise from various factors, including routine deployment updates. Moreover, certain applications may produce random file names or execute arbitrary executable paths as part of their regular operations, adding to the ",
                      "markdown": "`sarily in the nature of attacks but rather in identifying the right signals and their appropriate combinations for robust analytics to distinguish between normal and anomalous behavior. This challenge becomes particularly evident when considering the natural fluctuations in application behavior over time and the occurrence of ad-hoc legitimate debugging activities. Such fluctuations can arise from various factors, including routine deployment updates. Moreover, certain applications may produce random file names or execute arbitrary executable paths as part of their regular operations, adding to the `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230620-anomaly-detection-framework.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 546,
                  "endLine": 31,
                  "endColumn": 554,
                  "snippet": {
                    "text": "linked to a file descriptor existing exclusively in memory or improving the efficient and reliable resolution of symlinks for executable paths. Therefore, the proposed anomaly detection framework operates under the assumption of having the *correct* data, thereby complementing the ongoing efforts to expand logging coverage and improve its quality. In summary, the primary focus of the framework is to derive increased value from the existing *right* data that is currently available.\n\nThere is a common perception that attacks on running cloud applications, as well as their indicators of compromise, are t",
                    "rendered": {
                      "text": "linked to a file descriptor existing exclusively in memory or improving the efficient and reliable resolution of symlinks for executable paths. Therefore, the proposed anomaly detection framework operates under the assumption of having the *correct* data, thereby complementing the ongoing efforts to expand logging coverage and improve its quality. In summary, the primary focus of the framework is to derive increased value from the existing *right* data that is currently available.\n\nThere is a common perception that attacks on running cloud applications, as well as their indicators of compromise, are t",
                      "markdown": "`linked to a file descriptor existing exclusively in memory or improving the efficient and reliable resolution of symlinks for executable paths. Therefore, the proposed anomaly detection framework operates under the assumption of having the *correct* data, thereby complementing the ongoing efforts to expand logging coverage and improve its quality. In summary, the primary focus of the framework is to derive increased value from the existing *right* data that is currently available.\n\nThere is a common perception that attacks on running cloud applications, as well as their indicators of compromise, are t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20230620-anomaly-detection-framework.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 405,
                  "endLine": 23,
                  "endColumn": 411,
                  "snippet": {
                    "text": "ields such as process name, file descriptor (fd), executable path, parent lineage, cmdline, and others. During event parsing on the hot path, Falco compresses and stores this information in a \"filter\" - an efficient probabilistic data structure that optimizes space, time, robustness and accuracy. As time progresses, Falco provides more accurate estimates of application behavior counts and identifies events as rare or heavy hitters. Instead of analyzing the original event stream, you can write Falco rules based on pre-filtered data. \n\nThis approach introduces a novel threat detection framework that a",
                    "rendered": {
                      "text": "ields such as process name, file descriptor (fd), executable path, parent lineage, cmdline, and others. During event parsing on the hot path, Falco compresses and stores this information in a \"filter\" - an efficient probabilistic data structure that optimizes space, time, robustness and accuracy. As time progresses, Falco provides more accurate estimates of application behavior counts and identifies events as rare or heavy hitters. Instead of analyzing the original event stream, you can write Falco rules based on pre-filtered data. \n\nThis approach introduces a novel threat detection framework that a",
                      "markdown": "`ields such as process name, file descriptor (fd), executable path, parent lineage, cmdline, and others. During event parsing on the hot path, Falco compresses and stores this information in a \"filter\" - an efficient probabilistic data structure that optimizes space, time, robustness and accuracy. As time progresses, Falco provides more accurate estimates of application behavior counts and identifies events as rare or heavy hitters. Instead of analyzing the original event stream, you can write Falco rules based on pre-filtered data. \n\nThis approach introduces a novel threat detection framework that a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20191217-rules-naming-convention.md"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 117,
                  "endLine": 49,
                  "endColumn": 125,
                  "snippet": {
                    "text": "\n#### Rule\n- Rule Name: Use phrases with capitalizing every word except preposition (e.g. `Search Private Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n\n",
                    "rendered": {
                      "text": "\n#### Rule\n- Rule Name: Use phrases with capitalizing every word except preposition (e.g. `Search Private Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n\n",
                      "markdown": "`\n#### Rule\n- Rule Name: Use phrases with capitalizing every word except preposition (e.g. `Search Private Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20191217-rules-naming-convention.md"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 103,
                  "endLine": 48,
                  "endColumn": 111,
                  "snippet": {
                    "text": "### Design Details\n\n#### Rule\n- Rule Name: Use phrases with capitalizing every word except preposition (e.g. `Search Private Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n",
                    "rendered": {
                      "text": "### Design Details\n\n#### Rule\n- Rule Name: Use phrases with capitalizing every word except preposition (e.g. `Search Private Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n",
                      "markdown": "`### Design Details\n\n#### Rule\n- Rule Name: Use phrases with capitalizing every word except preposition (e.g. `Search Private Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20191217-rules-naming-convention.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 11,
                  "endLine": 51,
                  "endColumn": 15,
                  "snippet": {
                    "text": "te Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n\n#### Macro\n- Macro Name: Use lowercase_separated_by_underscores (e.g. `parent_java_running_zookeeper`)\n\n#### List\n- List Name: Use lowercase_separated_by_underscores (e.g. `protected_shell_s",
                    "rendered": {
                      "text": "te Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n\n#### Macro\n- Macro Name: Use lowercase_separated_by_underscores (e.g. `parent_java_running_zookeeper`)\n\n#### List\n- List Name: Use lowercase_separated_by_underscores (e.g. `protected_shell_s",
                      "markdown": "`te Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n\n#### Macro\n- Macro Name: Use lowercase_separated_by_underscores (e.g. `parent_java_running_zookeeper`)\n\n#### List\n- List Name: Use lowercase_separated_by_underscores (e.g. `protected_shell_s`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20191217-rules-naming-convention.md"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 28,
                  "endLine": 50,
                  "endColumn": 32,
                  "snippet": {
                    "text": "#### Rule\n- Rule Name: Use phrases with capitalizing every word except preposition (e.g. `Search Private Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n\n#### Macro\n",
                    "rendered": {
                      "text": "#### Rule\n- Rule Name: Use phrases with capitalizing every word except preposition (e.g. `Search Private Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n\n#### Macro\n",
                      "markdown": "`#### Rule\n- Rule Name: Use phrases with capitalizing every word except preposition (e.g. `Search Private Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n\n#### Macro\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20191217-rules-naming-convention.md"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 95,
                  "endLine": 49,
                  "endColumn": 101,
                  "snippet": {
                    "text": "\n#### Rule\n- Rule Name: Use phrases with capitalizing every word except preposition (e.g. `Search Private Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n\n",
                    "rendered": {
                      "text": "\n#### Rule\n- Rule Name: Use phrases with capitalizing every word except preposition (e.g. `Search Private Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n\n",
                      "markdown": "`\n#### Rule\n- Rule Name: Use phrases with capitalizing every word except preposition (e.g. `Search Private Keys or Passwords`)\n- Description: Use sentence always starting with \"Detect\" and ending with period. (e.g. `Detect grep private keys or passwords activity.`)\n- Output: Use sentence. Must at least include output fields (user=%user.name command=%proc.cmdline container_id=%container.id)\n- Tags: Use at least one of the following: [network, process, filesystem]. Also encourage to use mitre_* tags if applicable\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 111,
                  "endLine": 112,
                  "endColumn": 3,
                  "snippet": {
                    "text": "This job will be triggered after the `drivers/publish` completed successfully on the master branch.\n\n#### Notice\n\nAt the moment of writing (2021 09 28) the `drivers/cleanup` job is no more in place.\n\nPragmatically, this means that the older Falco drivers will remain available in their [S3 bucket](https://download.falco.org/?prefix=driver/).\n",
                    "rendered": {
                      "text": "This job will be triggered after the `drivers/publish` completed successfully on the master branch.\n\n#### Notice\n\nAt the moment of writing (2021 09 28) the `drivers/cleanup` job is no more in place.\n\nPragmatically, this means that the older Falco drivers will remain available in their [S3 bucket](https://download.falco.org/?prefix=driver/).\n",
                      "markdown": "`This job will be triggered after the `drivers/publish` completed successfully on the master branch.\n\n#### Notice\n\nAt the moment of writing (2021 09 28) the `drivers/cleanup` job is no more in place.\n\nPragmatically, this means that the older Falco drivers will remain available in their [S3 bucket](https://download.falco.org/?prefix=driver/).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 83,
                  "endColumn": 3,
                  "snippet": {
                    "text": "*.\nThen, we store those drivers into a [generic bintray repository](https://bintray.com/falcosecurity/driver) from which the installation process automatically downloads them, if suitable.\n\nThis document proposes to implement a cleanup mechanism that deletes all the other driver versions available.\n\nAt the moment of writing, considering only the last two driver versions (**ae104eb**, **85c8895**) associated with the latest Falco stable releases, we ship ~340 eBPF drivers, each accounting for ~3.1MB of storage space, and 1512 kernel modules (~3.1MB size each, too).\n\nThus, we obtain an estimate of a",
                    "rendered": {
                      "text": "*.\nThen, we store those drivers into a [generic bintray repository](https://bintray.com/falcosecurity/driver) from which the installation process automatically downloads them, if suitable.\n\nThis document proposes to implement a cleanup mechanism that deletes all the other driver versions available.\n\nAt the moment of writing, considering only the last two driver versions (**ae104eb**, **85c8895**) associated with the latest Falco stable releases, we ship ~340 eBPF drivers, each accounting for ~3.1MB of storage space, and 1512 kernel modules (~3.1MB size each, too).\n\nThus, we obtain an estimate of a",
                      "markdown": "`*.\nThen, we store those drivers into a [generic bintray repository](https://bintray.com/falcosecurity/driver) from which the installation process automatically downloads them, if suitable.\n\nThis document proposes to implement a cleanup mechanism that deletes all the other driver versions available.\n\nAt the moment of writing, considering only the last two driver versions (**ae104eb**, **85c8895**) associated with the latest Falco stable releases, we ship ~340 eBPF drivers, each accounting for ~3.1MB of storage space, and 1512 kernel modules (~3.1MB size each, too).\n\nThus, we obtain an estimate of a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 36,
                  "endLine": 68,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\nAssuming the size of the packages does not surpass the numbers listed in the above sections, the **Falco development releases** will always take less that 1GB of artifacts storage space.\n\nAssuming 12 stable releases at year, at the current size of packages, the **Falco stable releases** will take approx. 720MB of storage space every year.\n\n### Implementation\n\n",
                    "rendered": {
                      "text": "\nAssuming the size of the packages does not surpass the numbers listed in the above sections, the **Falco development releases** will always take less that 1GB of artifacts storage space.\n\nAssuming 12 stable releases at year, at the current size of packages, the **Falco stable releases** will take approx. 720MB of storage space every year.\n\n### Implementation\n\n",
                      "markdown": "`\nAssuming the size of the packages does not surpass the numbers listed in the above sections, the **Falco development releases** will always take less that 1GB of artifacts storage space.\n\nAssuming 12 stable releases at year, at the current size of packages, the **Falco stable releases** will take approx. 720MB of storage space every year.\n\n### Implementation\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 27,
                  "endLine": 68,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\nAssuming the size of the packages does not surpass the numbers listed in the above sections, the **Falco development releases** will always take less that 1GB of artifacts storage space.\n\nAssuming 12 stable releases at year, at the current size of packages, the **Falco stable releases** will take approx. 720MB of storage space every year.\n\n### Implementation\n\n",
                    "rendered": {
                      "text": "\nAssuming the size of the packages does not surpass the numbers listed in the above sections, the **Falco development releases** will always take less that 1GB of artifacts storage space.\n\nAssuming 12 stable releases at year, at the current size of packages, the **Falco stable releases** will take approx. 720MB of storage space every year.\n\n### Implementation\n\n",
                      "markdown": "`\nAssuming the size of the packages does not surpass the numbers listed in the above sections, the **Falco development releases** will always take less that 1GB of artifacts storage space.\n\nAssuming 12 stable releases at year, at the current size of packages, the **Falco stable releases** will take approx. 720MB of storage space every year.\n\n### Implementation\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 93,
                  "endLine": 47,
                  "endColumn": 97,
                  "snippet": {
                    "text": "\nFor the same exact reasons explained above this document proposes to keep the last 50 Falco RPM packages.\n\nThis means that the [rpm-dev](https://bintray.com/falcosecurity/rpm-dev) repository will take at maximum 215MB of storage space.\n\n### Stable releases\n\n",
                    "rendered": {
                      "text": "\nFor the same exact reasons explained above this document proposes to keep the last 50 Falco RPM packages.\n\nThis means that the [rpm-dev](https://bintray.com/falcosecurity/rpm-dev) repository will take at maximum 215MB of storage space.\n\n### Stable releases\n\n",
                      "markdown": "`\nFor the same exact reasons explained above this document proposes to keep the last 50 Falco RPM packages.\n\nThis means that the [rpm-dev](https://bintray.com/falcosecurity/rpm-dev) repository will take at maximum 215MB of storage space.\n\n### Stable releases\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 43,
                  "endColumn": 3,
                  "snippet": {
                    "text": "This means that the [deb-dev](https://bintray.com/falcosecurity/deb-dev) repository will take at maximum 255MB of storage space.\n\n### RPM from Falco master\n\nAt the moment of writing this document, this kind of Falco package requires approx. 4.3MB (maximum detected size) of storage space.\n\nFor the same exact reasons explained above this document proposes to keep the last 50 Falco RPM packages.\n\n",
                    "rendered": {
                      "text": "This means that the [deb-dev](https://bintray.com/falcosecurity/deb-dev) repository will take at maximum 255MB of storage space.\n\n### RPM from Falco master\n\nAt the moment of writing this document, this kind of Falco package requires approx. 4.3MB (maximum detected size) of storage space.\n\nFor the same exact reasons explained above this document proposes to keep the last 50 Falco RPM packages.\n\n",
                      "markdown": "`This means that the [deb-dev](https://bintray.com/falcosecurity/deb-dev) repository will take at maximum 255MB of storage space.\n\n### RPM from Falco master\n\nAt the moment of writing this document, this kind of Falco package requires approx. 4.3MB (maximum detected size) of storage space.\n\nFor the same exact reasons explained above this document proposes to keep the last 50 Falco RPM packages.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 93,
                  "endLine": 39,
                  "endColumn": 97,
                  "snippet": {
                    "text": "\nSo, to theoretically retain all the **Falco development releases** that led to a Falco stable release, this document proposes to keep the last 50 Falco DEB packages.\n\nThis means that the [deb-dev](https://bintray.com/falcosecurity/deb-dev) repository will take at maximum 255MB of storage space.\n\n### RPM from Falco master\n\n",
                    "rendered": {
                      "text": "\nSo, to theoretically retain all the **Falco development releases** that led to a Falco stable release, this document proposes to keep the last 50 Falco DEB packages.\n\nThis means that the [deb-dev](https://bintray.com/falcosecurity/deb-dev) repository will take at maximum 255MB of storage space.\n\n### RPM from Falco master\n\n",
                      "markdown": "`\nSo, to theoretically retain all the **Falco development releases** that led to a Falco stable release, this document proposes to keep the last 50 Falco DEB packages.\n\nThis means that the [deb-dev](https://bintray.com/falcosecurity/deb-dev) repository will take at maximum 255MB of storage space.\n\n### RPM from Falco master\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 33,
                  "endColumn": 3,
                  "snippet": {
                    "text": "This means that the [bin-dev](https://bintray.com/falcosecurity/bin-dev) repository will take at maximum 500MB of storage space.\n\n### DEB from Falco master\n\nAt the moment of writing this document, this kind of Falco package requires approx. 5.1MB (maximum detected size) of storage space.\n\nHistorically, every Falco release is composed by less than 50 merges (upper limit).\n\n",
                    "rendered": {
                      "text": "This means that the [bin-dev](https://bintray.com/falcosecurity/bin-dev) repository will take at maximum 500MB of storage space.\n\n### DEB from Falco master\n\nAt the moment of writing this document, this kind of Falco package requires approx. 5.1MB (maximum detected size) of storage space.\n\nHistorically, every Falco release is composed by less than 50 merges (upper limit).\n\n",
                      "markdown": "`This means that the [bin-dev](https://bintray.com/falcosecurity/bin-dev) repository will take at maximum 500MB of storage space.\n\n### DEB from Falco master\n\nAt the moment of writing this document, this kind of Falco package requires approx. 5.1MB (maximum detected size) of storage space.\n\nHistorically, every Falco release is composed by less than 50 merges (upper limit).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 93,
                  "endLine": 29,
                  "endColumn": 97,
                  "snippet": {
                    "text": "\nSince, historically, the [bin-dev](https://bintray.com/falcosecurity/bin-dev) repository is the less used one, this document proposes to keep only the last 10 **Falco development releases** it contains.\n\nThis means that the [bin-dev](https://bintray.com/falcosecurity/bin-dev) repository will take at maximum 500MB of storage space.\n\n### DEB from Falco master\n\n",
                    "rendered": {
                      "text": "\nSince, historically, the [bin-dev](https://bintray.com/falcosecurity/bin-dev) repository is the less used one, this document proposes to keep only the last 10 **Falco development releases** it contains.\n\nThis means that the [bin-dev](https://bintray.com/falcosecurity/bin-dev) repository will take at maximum 500MB of storage space.\n\n### DEB from Falco master\n\n",
                      "markdown": "`\nSince, historically, the [bin-dev](https://bintray.com/falcosecurity/bin-dev) repository is the less used one, this document proposes to keep only the last 10 **Falco development releases** it contains.\n\nThis means that the [bin-dev](https://bintray.com/falcosecurity/bin-dev) repository will take at maximum 500MB of storage space.\n\n### DEB from Falco master\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 25,
                  "endColumn": 3,
                  "snippet": {
                    "text": "## Packages\n\n### Tarballs from Falco master\n\nAt the moment of writing this document, this kind of Falco package requires approx. 50MB (maximum detected size) of storage space.\n\nSince, historically, the [bin-dev](https://bintray.com/falcosecurity/bin-dev) repository is the less used one, this document proposes to keep only the last 10 **Falco development releases** it contains.\n\n",
                    "rendered": {
                      "text": "## Packages\n\n### Tarballs from Falco master\n\nAt the moment of writing this document, this kind of Falco package requires approx. 50MB (maximum detected size) of storage space.\n\nSince, historically, the [bin-dev](https://bintray.com/falcosecurity/bin-dev) repository is the less used one, this document proposes to keep only the last 10 **Falco development releases** it contains.\n\n",
                      "markdown": "`## Packages\n\n### Tarballs from Falco master\n\nAt the moment of writing this document, this kind of Falco package requires approx. 50MB (maximum detected size) of storage space.\n\nSince, historically, the [bin-dev](https://bintray.com/falcosecurity/bin-dev) repository is the less used one, this document proposes to keep only the last 10 **Falco development releases** it contains.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 147,
                  "endLine": 105,
                  "endColumn": 153,
                  "snippet": {
                    "text": "\n### Implementation\n\nThe [test-infra](https://github.com/falcosecurity/test-infra) CI, specifically its part dedicated to run the **Drivers Build Grid** that runs every time it detects changes into the `driverkit` directory of the [test-infra](https://github.com/falcosecurity/test-infra) repository,\nwill have a new job - called `drivers/cleanup` - responsible for removing all the Falco driver versions except the last two.\n\nThis job will be triggered after the `drivers/publish` completed successfully on the master branch.\n",
                    "rendered": {
                      "text": "\n### Implementation\n\nThe [test-infra](https://github.com/falcosecurity/test-infra) CI, specifically its part dedicated to run the **Drivers Build Grid** that runs every time it detects changes into the `driverkit` directory of the [test-infra](https://github.com/falcosecurity/test-infra) repository,\nwill have a new job - called `drivers/cleanup` - responsible for removing all the Falco driver versions except the last two.\n\nThis job will be triggered after the `drivers/publish` completed successfully on the master branch.\n",
                      "markdown": "`\n### Implementation\n\nThe [test-infra](https://github.com/falcosecurity/test-infra) CI, specifically its part dedicated to run the **Drivers Build Grid** that runs every time it detects changes into the `driverkit` directory of the [test-infra](https://github.com/falcosecurity/test-infra) repository,\nwill have a new job - called `drivers/cleanup` - responsible for removing all the Falco driver versions except the last two.\n\nThis job will be triggered after the `drivers/publish` completed successfully on the master branch.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 40,
                  "endLine": 95,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n### Archiving\n\nSince the process of building drivers is time and resource consuming, this document also proposes to move the driver versions in other storage facilities.\n\nThe candidate is an AWS S3 bucket responsible for holding the deleted driver version files.\n\n",
                    "rendered": {
                      "text": "\n### Archiving\n\nSince the process of building drivers is time and resource consuming, this document also proposes to move the driver versions in other storage facilities.\n\nThe candidate is an AWS S3 bucket responsible for holding the deleted driver version files.\n\n",
                      "markdown": "`\n### Archiving\n\nSince the process of building drivers is time and resource consuming, this document also proposes to move the driver versions in other storage facilities.\n\nThe candidate is an AWS S3 bucket responsible for holding the deleted driver version files.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 76,
                  "endLine": 61,
                  "endColumn": 81,
                  "snippet": {
                    "text": "The [deb](https://bintray.com/falcosecurity/deb) repository contains a Falco DEB package for every release.\nThis means it grows in space of ~5MB each month.\n\nThe [rpm](https://bintray.com/falcosecurity/rpm) repository contains a Falco RPM package for every release.\nThis means it grows in space of ~4.3MB each month.\n\n### Considerations\n",
                    "rendered": {
                      "text": "The [deb](https://bintray.com/falcosecurity/deb) repository contains a Falco DEB package for every release.\nThis means it grows in space of ~5MB each month.\n\nThe [rpm](https://bintray.com/falcosecurity/rpm) repository contains a Falco RPM package for every release.\nThis means it grows in space of ~4.3MB each month.\n\n### Considerations\n",
                      "markdown": "`The [deb](https://bintray.com/falcosecurity/deb) repository contains a Falco DEB package for every release.\nThis means it grows in space of ~5MB each month.\n\nThe [rpm](https://bintray.com/falcosecurity/rpm) repository contains a Falco RPM package for every release.\nThis means it grows in space of ~4.3MB each month.\n\n### Considerations\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 91,
                  "endLine": 45,
                  "endColumn": 96,
                  "snippet": {
                    "text": "\nAt the moment of writing this document, this kind of Falco package requires approx. 4.3MB (maximum detected size) of storage space.\n\nFor the same exact reasons explained above this document proposes to keep the last 50 Falco RPM packages.\n\nThis means that the [rpm-dev](https://bintray.com/falcosecurity/rpm-dev) repository will take at maximum 215MB of storage space.\n\n",
                    "rendered": {
                      "text": "\nAt the moment of writing this document, this kind of Falco package requires approx. 4.3MB (maximum detected size) of storage space.\n\nFor the same exact reasons explained above this document proposes to keep the last 50 Falco RPM packages.\n\nThis means that the [rpm-dev](https://bintray.com/falcosecurity/rpm-dev) repository will take at maximum 215MB of storage space.\n\n",
                      "markdown": "`\nAt the moment of writing this document, this kind of Falco package requires approx. 4.3MB (maximum detected size) of storage space.\n\nFor the same exact reasons explained above this document proposes to keep the last 50 Falco RPM packages.\n\nThis means that the [rpm-dev](https://bintray.com/falcosecurity/rpm-dev) repository will take at maximum 215MB of storage space.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20200901-artifacts-cleanup.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 3,
                  "endLine": 41,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nThis means that the [deb-dev](https://bintray.com/falcosecurity/deb-dev) repository will take at maximum 255MB of storage space.\n\n### RPM from Falco master\n\nAt the moment of writing this document, this kind of Falco package requires approx. 4.3MB (maximum detected size) of storage space.\n\n",
                    "rendered": {
                      "text": "\nThis means that the [deb-dev](https://bintray.com/falcosecurity/deb-dev) repository will take at maximum 255MB of storage space.\n\n### RPM from Falco master\n\nAt the moment of writing this document, this kind of Falco package requires approx. 4.3MB (maximum detected size) of storage space.\n\n",
                      "markdown": "`\nThis means that the [deb-dev](https://bintray.com/falcosecurity/deb-dev) repository will take at maximum 255MB of storage space.\n\n### RPM from Falco master\n\nAt the moment of writing this document, this kind of Falco package requires approx. 4.3MB (maximum detected size) of storage space.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20201025-drivers-storage-s3.md"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 120,
                  "endLine": 108,
                  "endColumn": 124,
                  "snippet": {
                    "text": "\n* **Users that can’t wait but don’t want to setup a webserver themselves**: the falco-driver-loader script can also compile the module for you. Make sure to install the kernel-headers on your nodes.\n\n* **Users that can wait** we will approve this document and act on the plan described here by providing the DRIVERS_REPO at  [https://download.falco.org/driver](https://download.falco.org/driver) that then you can use\n\n### How to use an alternative DRIVERS_REPO ?\n\n",
                    "rendered": {
                      "text": "\n* **Users that can’t wait but don’t want to setup a webserver themselves**: the falco-driver-loader script can also compile the module for you. Make sure to install the kernel-headers on your nodes.\n\n* **Users that can wait** we will approve this document and act on the plan described here by providing the DRIVERS_REPO at  [https://download.falco.org/driver](https://download.falco.org/driver) that then you can use\n\n### How to use an alternative DRIVERS_REPO ?\n\n",
                      "markdown": "`\n* **Users that can’t wait but don’t want to setup a webserver themselves**: the falco-driver-loader script can also compile the module for you. Make sure to install the kernel-headers on your nodes.\n\n* **Users that can wait** we will approve this document and act on the plan described here by providing the DRIVERS_REPO at  [https://download.falco.org/driver](https://download.falco.org/driver) that then you can use\n\n### How to use an alternative DRIVERS_REPO ?\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20201025-drivers-storage-s3.md"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n* We change the Falco Dockerfiles and driver loader script accordingly\n\n* We update test-infra to push the drivers to S3\n\n* Once we have the drivers in S3, we can ask bintray to relax the limits for this month so that our users are able to download the other packages we keep there. Otherwise they will have to wait until November 1st. We only want to do that after the moving because otherwise we will hit the limits pretty quickly.\n\n",
                    "rendered": {
                      "text": "\n* We change the Falco Dockerfiles and driver loader script accordingly\n\n* We update test-infra to push the drivers to S3\n\n* Once we have the drivers in S3, we can ask bintray to relax the limits for this month so that our users are able to download the other packages we keep there. Otherwise they will have to wait until November 1st. We only want to do that after the moving because otherwise we will hit the limits pretty quickly.\n\n",
                      "markdown": "`\n* We change the Falco Dockerfiles and driver loader script accordingly\n\n* We update test-infra to push the drivers to S3\n\n* Once we have the drivers in S3, we can ask bintray to relax the limits for this month so that our users are able to download the other packages we keep there. Otherwise they will have to wait until November 1st. We only want to do that after the moving because otherwise we will hit the limits pretty quickly.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20201025-drivers-storage-s3.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 33,
                  "endLine": 41,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n### Motivations to go to S3 instead of Bintray for the Drivers\n\nBintray does an excellent service at building the rpm/deb structures for us, however we also use them for S3-like storage for the drivers. We have ten thousand files hosted there and the combinations are infinite.\n\n\nBefore today, we had many issues with storage even without the spike in users we are seeing since the last ten days.\n",
                    "rendered": {
                      "text": "\n### Motivations to go to S3 instead of Bintray for the Drivers\n\nBintray does an excellent service at building the rpm/deb structures for us, however we also use them for S3-like storage for the drivers. We have ten thousand files hosted there and the combinations are infinite.\n\n\nBefore today, we had many issues with storage even without the spike in users we are seeing since the last ten days.\n",
                      "markdown": "`\n### Motivations to go to S3 instead of Bintray for the Drivers\n\nBintray does an excellent service at building the rpm/deb structures for us, however we also use them for S3-like storage for the drivers. We have ten thousand files hosted there and the combinations are infinite.\n\n\nBefore today, we had many issues with storage even without the spike in users we are seeing since the last ten days.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20201025-drivers-storage-s3.md"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 106,
                  "endLine": 136,
                  "endColumn": 114,
                  "snippet": {
                    "text": "\n## Release\n\nNext release is on December 1st, we want to rollout a hotfix 0.26.2 release that only contains the updated script before that date so that users don’t get confused and we can just tell them \"update Falco\" to get the thing working again.\n\n",
                    "rendered": {
                      "text": "\n## Release\n\nNext release is on December 1st, we want to rollout a hotfix 0.26.2 release that only contains the updated script before that date so that users don’t get confused and we can just tell them \"update Falco\" to get the thing working again.\n\n",
                      "markdown": "`\n## Release\n\nNext release is on December 1st, we want to rollout a hotfix 0.26.2 release that only contains the updated script before that date so that users don’t get confused and we can just tell them \"update Falco\" to get the thing working again.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20201025-drivers-storage-s3.md"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 120,
                  "endColumn": 7,
                  "snippet": {
                    "text": "**Docker**\n\nPass it as environment variable using the docker run flag -e - for example:\n\ndocker run -e DRIVERS_REPO=[https://your-url-here](https://your-url-here)\n\n**Kubernetes**\n\n",
                    "rendered": {
                      "text": "**Docker**\n\nPass it as environment variable using the docker run flag -e - for example:\n\ndocker run -e DRIVERS_REPO=[https://your-url-here](https://your-url-here)\n\n**Kubernetes**\n\n",
                      "markdown": "`**Docker**\n\nPass it as environment variable using the docker run flag -e - for example:\n\ndocker run -e DRIVERS_REPO=[https://your-url-here](https://your-url-here)\n\n**Kubernetes**\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20201025-drivers-storage-s3.md"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 41,
                  "endLine": 118,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n**Docker**\n\nPass it as environment variable using the docker run flag -e - for example:\n\ndocker run -e DRIVERS_REPO=[https://your-url-here](https://your-url-here)\n\n",
                    "rendered": {
                      "text": "\n**Docker**\n\nPass it as environment variable using the docker run flag -e - for example:\n\ndocker run -e DRIVERS_REPO=[https://your-url-here](https://your-url-here)\n\n",
                      "markdown": "`\n**Docker**\n\nPass it as environment variable using the docker run flag -e - for example:\n\ndocker run -e DRIVERS_REPO=[https://your-url-here](https://your-url-here)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20201025-drivers-storage-s3.md"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 99,
                  "endLine": 106,
                  "endColumn": 107,
                  "snippet": {
                    "text": "em (they can use [Driverkit](https://github.com/falcosecurity/driverkit) for that) Instructions on how to setup the S3 directory structure [here](https://falco.org/docs/installation/#install-driver).\n\n* **Users that can’t wait but don’t want to setup a webserver themselves**: the falco-driver-loader script can also compile the module for you. Make sure to install the kernel-headers on your nodes.\n\n* **Users that can wait** we will approve this document and act on the plan described here by providing the DRIVERS_REPO at  [https://download.falco.org/driver](https://download.falco.org/driver) that then y",
                    "rendered": {
                      "text": "em (they can use [Driverkit](https://github.com/falcosecurity/driverkit) for that) Instructions on how to setup the S3 directory structure [here](https://falco.org/docs/installation/#install-driver).\n\n* **Users that can’t wait but don’t want to setup a webserver themselves**: the falco-driver-loader script can also compile the module for you. Make sure to install the kernel-headers on your nodes.\n\n* **Users that can wait** we will approve this document and act on the plan described here by providing the DRIVERS_REPO at  [https://download.falco.org/driver](https://download.falco.org/driver) that then y",
                      "markdown": "`em (they can use [Driverkit](https://github.com/falcosecurity/driverkit) for that) Instructions on how to setup the S3 directory structure [here](https://falco.org/docs/installation/#install-driver).\n\n* **Users that can’t wait but don’t want to setup a webserver themselves**: the falco-driver-loader script can also compile the module for you. Make sure to install the kernel-headers on your nodes.\n\n* **Users that can wait** we will approve this document and act on the plan described here by providing the DRIVERS_REPO at  [https://download.falco.org/driver](https://download.falco.org/driver) that then y`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20201025-drivers-storage-s3.md"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 131,
                  "endLine": 98,
                  "endColumn": 139,
                  "snippet": {
                    "text": "\n#### Changes to Falco website\n\n* Changes should not be necessary, we are not updating the way people install Falco but only the driver. The driver is managed by a script we can change.\n\n## Mitigation and next steps for the users\n\n",
                    "rendered": {
                      "text": "\n#### Changes to Falco website\n\n* Changes should not be necessary, we are not updating the way people install Falco but only the driver. The driver is managed by a script we can change.\n\n## Mitigation and next steps for the users\n\n",
                      "markdown": "`\n#### Changes to Falco website\n\n* Changes should not be necessary, we are not updating the way people install Falco but only the driver. The driver is managed by a script we can change.\n\n## Mitigation and next steps for the users\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20201025-drivers-storage-s3.md"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 139,
                  "endLine": 82,
                  "endColumn": 147,
                  "snippet": {
                    "text": "\n#### Changes in Falco\n\n* [Search for bintray ](https://github.com/falcosecurity/falco/search?p=2&q=bintray)on the Falco repo and replace the URL for the CMake and Docker files.\n\n* It’s very important to change the DRIVERS_REPO environment variable [here](https://github.com/falcosecurity/falco/blob/0a33f555eb8e019806b46fea8b80a6302a935421/CMakeLists.txt#L86) - this is what updates the falco-driver-loader scripts that the users and container images use to fetch the module\n\n",
                    "rendered": {
                      "text": "\n#### Changes in Falco\n\n* [Search for bintray ](https://github.com/falcosecurity/falco/search?p=2&q=bintray)on the Falco repo and replace the URL for the CMake and Docker files.\n\n* It’s very important to change the DRIVERS_REPO environment variable [here](https://github.com/falcosecurity/falco/blob/0a33f555eb8e019806b46fea8b80a6302a935421/CMakeLists.txt#L86) - this is what updates the falco-driver-loader scripts that the users and container images use to fetch the module\n\n",
                      "markdown": "`\n#### Changes in Falco\n\n* [Search for bintray ](https://github.com/falcosecurity/falco/search?p=2&q=bintray)on the Falco repo and replace the URL for the CMake and Docker files.\n\n* It’s very important to change the DRIVERS_REPO environment variable [here](https://github.com/falcosecurity/falco/blob/0a33f555eb8e019806b46fea8b80a6302a935421/CMakeLists.txt#L86) - this is what updates the falco-driver-loader scripts that the users and container images use to fetch the module\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20201025-drivers-storage-s3.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 51,
                  "endLine": 68,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n* We move the current content keeping the same web server directory structure\n\n* We change the Falco Dockerfiles and driver loader script accordingly\n\n* We update test-infra to push the drivers to S3\n\n",
                    "rendered": {
                      "text": "\n* We move the current content keeping the same web server directory structure\n\n* We change the Falco Dockerfiles and driver loader script accordingly\n\n* We update test-infra to push the drivers to S3\n\n",
                      "markdown": "`\n* We move the current content keeping the same web server directory structure\n\n* We change the Falco Dockerfiles and driver loader script accordingly\n\n* We update test-infra to push the drivers to S3\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20201025-drivers-storage-s3.md"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 24,
                  "endLine": 54,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n* The setup on the AWS account side already done, this is all technical work.\n\n* We need to open a CNCF service account ticket for the download.falco.org subdomain to point to the S3 bucket we want to use\n\n## The Plan\n\n",
                    "rendered": {
                      "text": "\n* The setup on the AWS account side already done, this is all technical work.\n\n* We need to open a CNCF service account ticket for the download.falco.org subdomain to point to the S3 bucket we want to use\n\n## The Plan\n\n",
                      "markdown": "`\n* The setup on the AWS account side already done, this is all technical work.\n\n* We need to open a CNCF service account ticket for the download.falco.org subdomain to point to the S3 bucket we want to use\n\n## The Plan\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20201025-drivers-storage-s3.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 25,
                  "endLine": 41,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n### Motivations to go to S3 instead of Bintray for the Drivers\n\nBintray does an excellent service at building the rpm/deb structures for us, however we also use them for S3-like storage for the drivers. We have ten thousand files hosted there and the combinations are infinite.\n\n\nBefore today, we had many issues with storage even without the spike in users we are seeing since the last ten days.\n",
                    "rendered": {
                      "text": "\n### Motivations to go to S3 instead of Bintray for the Drivers\n\nBintray does an excellent service at building the rpm/deb structures for us, however we also use them for S3-like storage for the drivers. We have ten thousand files hosted there and the combinations are infinite.\n\n\nBefore today, we had many issues with storage even without the spike in users we are seeing since the last ten days.\n",
                      "markdown": "`\n### Motivations to go to S3 instead of Bintray for the Drivers\n\nBintray does an excellent service at building the rpm/deb structures for us, however we also use them for S3-like storage for the drivers. We have ten thousand files hosted there and the combinations are infinite.\n\n\nBefore today, we had many issues with storage even without the spike in users we are seeing since the last ten days.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20201025-drivers-storage-s3.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n### What do we host on Bintray?\n\n* RPM packages: high traffic but very manageable ~90k downloads a month\n\n* Deb packages:low traffic ~5k downloads a month\n\n",
                    "rendered": {
                      "text": "\n### What do we host on Bintray?\n\n* RPM packages: high traffic but very manageable ~90k downloads a month\n\n* Deb packages:low traffic ~5k downloads a month\n\n",
                      "markdown": "`\n### What do we host on Bintray?\n\n* RPM packages: high traffic but very manageable ~90k downloads a month\n\n* Deb packages:low traffic ~5k downloads a month\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/filter_details_resolver.cpp"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 33,
                  "endLine": 102,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tm_last_node_field_name.clear();\n\te->left->accept(this);\n\tif(m_last_node_field_name.empty()) {\n\t\tthrow std::runtime_error(\"can't find field info in unary check expression\");\n\t}\n\tm_details.fields.insert(m_last_node_field_name);\n\tm_details.operators.insert(e->op);\n",
                    "rendered": {
                      "text": "\tm_last_node_field_name.clear();\n\te->left->accept(this);\n\tif(m_last_node_field_name.empty()) {\n\t\tthrow std::runtime_error(\"can't find field info in unary check expression\");\n\t}\n\tm_details.fields.insert(m_last_node_field_name);\n\tm_details.operators.insert(e->op);\n",
                      "markdown": "`\tm_last_node_field_name.clear();\n\te->left->accept(this);\n\tif(m_last_node_field_name.empty()) {\n\t\tthrow std::runtime_error(\"can't find field info in unary check expression\");\n\t}\n\tm_details.fields.insert(m_last_node_field_name);\n\tm_details.operators.insert(e->op);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/filter_details_resolver.cpp"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 33,
                  "endLine": 85,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tm_expect_list = false;\n\te->left->accept(this);\n\tif(m_last_node_field_name.empty()) {\n\t\tthrow std::runtime_error(\"can't find field info in binary check expression\");\n\t}\n\n\tm_details.operators.insert(e->op);\n",
                    "rendered": {
                      "text": "\tm_expect_list = false;\n\te->left->accept(this);\n\tif(m_last_node_field_name.empty()) {\n\t\tthrow std::runtime_error(\"can't find field info in binary check expression\");\n\t}\n\n\tm_details.operators.insert(e->op);\n",
                      "markdown": "`\tm_expect_list = false;\n\te->left->accept(this);\n\tif(m_last_node_field_name.empty()) {\n\t\tthrow std::runtime_error(\"can't find field info in binary check expression\");\n\t}\n\n\tm_details.operators.insert(e->op);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader_reader.cpp"
                },
                "region": {
                  "startLine": 845,
                  "startColumn": 70,
                  "endLine": 845,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\t\t}\n\t} else {\n\t\trule_loader::context ctx(item, rule_loader::context::RULES_CONTENT_ITEM, \"\", parent);\n\t\tcfg.res->add_warning(falco::load_result::LOAD_UNKNOWN_ITEM, \"Unknown top level item\", ctx);\n\t}\n}\n\n",
                    "rendered": {
                      "text": "\t\t}\n\t} else {\n\t\trule_loader::context ctx(item, rule_loader::context::RULES_CONTENT_ITEM, \"\", parent);\n\t\tcfg.res->add_warning(falco::load_result::LOAD_UNKNOWN_ITEM, \"Unknown top level item\", ctx);\n\t}\n}\n\n",
                      "markdown": "`\t\t}\n\t} else {\n\t\trule_loader::context ctx(item, rule_loader::context::RULES_CONTENT_ITEM, \"\", parent);\n\t\tcfg.res->add_warning(falco::load_result::LOAD_UNKNOWN_ITEM, \"Unknown top level item\", ctx);\n\t}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/formats.h"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 45,
                  "endLine": 39,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t                         const std::string &level,\n\t                         const std::string &format,\n\t                         const std::set<std::string> &tags,\n\t                         const std::string &hostname,\n\t                         const extra_output_field_t &extra_fields) const;\n\n\tstd::string format_string(sinsp_evt *evt,\n",
                    "rendered": {
                      "text": "\t                         const std::string &level,\n\t                         const std::string &format,\n\t                         const std::set<std::string> &tags,\n\t                         const std::string &hostname,\n\t                         const extra_output_field_t &extra_fields) const;\n\n\tstd::string format_string(sinsp_evt *evt,\n",
                      "markdown": "`\t                         const std::string &level,\n\t                         const std::string &format,\n\t                         const std::set<std::string> &tags,\n\t                         const std::string &hostname,\n\t                         const extra_output_field_t &extra_fields) const;\n\n\tstd::string format_string(sinsp_evt *evt,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.cpp"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 17,
                  "endLine": 298,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tfor(const auto &o : m_outputs) {\n\t\t\twd.set_timeout(timeout, o->get_name());\n\t\t\ttry {\n\t\t\t\tprocess_msg(o.get(), cmsg);\n\t\t\t} catch(const std::exception &e) {\n\t\t\t\tfalco_logger::log(falco_logger::level::ERR,\n\t\t\t\t                  o->get_name() + \": \" + std::string(e.what()) + \"\\n\");\n",
                    "rendered": {
                      "text": "\t\tfor(const auto &o : m_outputs) {\n\t\t\twd.set_timeout(timeout, o->get_name());\n\t\t\ttry {\n\t\t\t\tprocess_msg(o.get(), cmsg);\n\t\t\t} catch(const std::exception &e) {\n\t\t\t\tfalco_logger::log(falco_logger::level::ERR,\n\t\t\t\t                  o->get_name() + \": \" + std::string(e.what()) + \"\\n\");\n",
                      "markdown": "`\t\tfor(const auto &o : m_outputs) {\n\t\t\twd.set_timeout(timeout, o->get_name());\n\t\t\ttry {\n\t\t\t\tprocess_msg(o.get(), cmsg);\n\t\t\t} catch(const std::exception &e) {\n\t\t\t\tfalco_logger::log(falco_logger::level::ERR,\n\t\t\t\t                  o->get_name() + \": \" + std::string(e.what()) + \"\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.cpp"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 15,
                  "endLine": 271,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t}\n#else\n\tfor(const auto &o : m_outputs) {\n\t\tprocess_msg(o.get(), cmsg);\n\t}\n#endif\n}\n",
                    "rendered": {
                      "text": "\t}\n#else\n\tfor(const auto &o : m_outputs) {\n\t\tprocess_msg(o.get(), cmsg);\n\t}\n#endif\n}\n",
                      "markdown": "`\t}\n#else\n\tfor(const auto &o : m_outputs) {\n\t\tprocess_msg(o.get(), cmsg);\n\t}\n#endif\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.cpp"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 23,
                  "endLine": 199,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\tjmsg[\"rule\"] = rule;\n\t\tjmsg[\"time\"] = iso8601evttime;\n\t\tjmsg[\"output_fields\"] = output_fields;\n\t\tjmsg[\"hostname\"] = m_hostname;\n\t\tjmsg[\"source\"] = s_internal_source;\n\n\t\tcmsg.msg = jmsg.dump();\n",
                    "rendered": {
                      "text": "\t\tjmsg[\"rule\"] = rule;\n\t\tjmsg[\"time\"] = iso8601evttime;\n\t\tjmsg[\"output_fields\"] = output_fields;\n\t\tjmsg[\"hostname\"] = m_hostname;\n\t\tjmsg[\"source\"] = s_internal_source;\n\n\t\tcmsg.msg = jmsg.dump();\n",
                      "markdown": "`\t\tjmsg[\"rule\"] = rule;\n\t\tjmsg[\"time\"] = iso8601evttime;\n\t\tjmsg[\"output_fields\"] = output_fields;\n\t\tjmsg[\"hostname\"] = m_hostname;\n\t\tjmsg[\"source\"] = s_internal_source;\n\n\t\tcmsg.msg = jmsg.dump();\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.cpp"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 8,
                  "endLine": 199,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\tjmsg[\"rule\"] = rule;\n\t\tjmsg[\"time\"] = iso8601evttime;\n\t\tjmsg[\"output_fields\"] = output_fields;\n\t\tjmsg[\"hostname\"] = m_hostname;\n\t\tjmsg[\"source\"] = s_internal_source;\n\n\t\tcmsg.msg = jmsg.dump();\n",
                    "rendered": {
                      "text": "\t\tjmsg[\"rule\"] = rule;\n\t\tjmsg[\"time\"] = iso8601evttime;\n\t\tjmsg[\"output_fields\"] = output_fields;\n\t\tjmsg[\"hostname\"] = m_hostname;\n\t\tjmsg[\"source\"] = s_internal_source;\n\n\t\tcmsg.msg = jmsg.dump();\n",
                      "markdown": "`\t\tjmsg[\"rule\"] = rule;\n\t\tjmsg[\"time\"] = iso8601evttime;\n\t\tjmsg[\"output_fields\"] = output_fields;\n\t\tjmsg[\"hostname\"] = m_hostname;\n\t\tjmsg[\"source\"] = s_internal_source;\n\n\t\tcmsg.msg = jmsg.dump();\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.cpp"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 38,
                  "endLine": 137,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t                                   falco_common::format_priority(priority),\n\t                                   format,\n\t                                   tags,\n\t                                   m_hostname,\n\t                                   extra_fields);\n\n\tauto fields = m_formats->get_field_values(evt, source, format);\n",
                    "rendered": {
                      "text": "\t                                   falco_common::format_priority(priority),\n\t                                   format,\n\t                                   tags,\n\t                                   m_hostname,\n\t                                   extra_fields);\n\n\tauto fields = m_formats->get_field_values(evt, source, format);\n",
                      "markdown": "`\t                                   falco_common::format_priority(priority),\n\t                                   format,\n\t                                   tags,\n\t                                   m_hostname,\n\t                                   extra_fields);\n\n\tauto fields = m_formats->get_field_values(evt, source, format);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.cpp"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 31,
                  "endLine": 111,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t}\n\n\tstd::string init_err;\n\tif(oo->init(oc, m_buffered, m_hostname, m_json_output, init_err)) {\n\t\tm_outputs.push_back(std::move(oo));\n\t} else {\n\t\tfalco_logger::log(falco_logger::level::ERR, \"Failed to init output: \" + init_err);\n",
                    "rendered": {
                      "text": "\t}\n\n\tstd::string init_err;\n\tif(oo->init(oc, m_buffered, m_hostname, m_json_output, init_err)) {\n\t\tm_outputs.push_back(std::move(oo));\n\t} else {\n\t\tfalco_logger::log(falco_logger::level::ERR, \"Failed to init output: \" + init_err);\n",
                      "markdown": "`\t}\n\n\tstd::string init_err;\n\tif(oo->init(oc, m_buffered, m_hostname, m_json_output, init_err)) {\n\t\tm_outputs.push_back(std::move(oo));\n\t} else {\n\t\tfalco_logger::log(falco_logger::level::ERR, \"Failed to init output: \" + init_err);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.cpp"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 19,
                  "endLine": 62,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        m_json_output(json_output),\n        m_time_format_iso_8601(time_format_iso_8601),\n        m_timeout(std::chrono::milliseconds(timeout)),\n        m_hostname(hostname) {\n\tfor(const auto &output : outputs) {\n\t\tadd_output(output);\n\t}\n",
                    "rendered": {
                      "text": "        m_json_output(json_output),\n        m_time_format_iso_8601(time_format_iso_8601),\n        m_timeout(std::chrono::milliseconds(timeout)),\n        m_hostname(hostname) {\n\tfor(const auto &output : outputs) {\n\t\tadd_output(output);\n\t}\n",
                      "markdown": "`        m_json_output(json_output),\n        m_time_format_iso_8601(time_format_iso_8601),\n        m_timeout(std::chrono::milliseconds(timeout)),\n        m_hostname(hostname) {\n\tfor(const auto &output : outputs) {\n\t\tadd_output(output);\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.cpp"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 10,
                  "endLine": 62,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        m_json_output(json_output),\n        m_time_format_iso_8601(time_format_iso_8601),\n        m_timeout(std::chrono::milliseconds(timeout)),\n        m_hostname(hostname) {\n\tfor(const auto &output : outputs) {\n\t\tadd_output(output);\n\t}\n",
                    "rendered": {
                      "text": "        m_json_output(json_output),\n        m_time_format_iso_8601(time_format_iso_8601),\n        m_timeout(std::chrono::milliseconds(timeout)),\n        m_hostname(hostname) {\n\tfor(const auto &output : outputs) {\n\t\tadd_output(output);\n\t}\n",
                      "markdown": "`        m_json_output(json_output),\n        m_time_format_iso_8601(time_format_iso_8601),\n        m_timeout(std::chrono::milliseconds(timeout)),\n        m_hostname(hostname) {\n\tfor(const auto &output : outputs) {\n\t\tadd_output(output);\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.cpp"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 48,
                  "endLine": 52,
                  "endColumn": 56,
                  "snippet": {
                    "text": "                             bool buffered,\n                             size_t outputs_queue_capacity,\n                             bool time_format_iso_8601,\n                             const std::string &hostname):\n        m_formats(std::make_unique<falco_formats>(engine,\n                                                  json_include_output_property,\n                                                  json_include_tags_property,\n",
                    "rendered": {
                      "text": "                             bool buffered,\n                             size_t outputs_queue_capacity,\n                             bool time_format_iso_8601,\n                             const std::string &hostname):\n        m_formats(std::make_unique<falco_formats>(engine,\n                                                  json_include_output_property,\n                                                  json_include_tags_property,\n",
                      "markdown": "`                             bool buffered,\n                             size_t outputs_queue_capacity,\n                             bool time_format_iso_8601,\n                             const std::string &hostname):\n        m_formats(std::make_unique<falco_formats>(engine,\n                                                  json_include_output_property,\n                                                  json_include_tags_property,\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.cpp"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 28,
                  "endLine": 142,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n\tauto fields = m_formats->get_field_values(evt, source, format);\n\tfor(auto const &ef : extra_fields) {\n\t\t// when formatting for the control message we always want strings,\n\t\t// so we can simply format raw fields as string\n\t\tstd::string fformat = ef.second.first;\n\t\tif(fformat.size() == 0) {\n",
                    "rendered": {
                      "text": "\n\tauto fields = m_formats->get_field_values(evt, source, format);\n\tfor(auto const &ef : extra_fields) {\n\t\t// when formatting for the control message we always want strings,\n\t\t// so we can simply format raw fields as string\n\t\tstd::string fformat = ef.second.first;\n\t\tif(fformat.size() == 0) {\n",
                      "markdown": "`\n\tauto fields = m_formats->get_field_values(evt, source, format);\n\tfor(auto const &ef : extra_fields) {\n\t\t// when formatting for the control message we always want strings,\n\t\t// so we can simply format raw fields as string\n\t\tstd::string fformat = ef.second.first;\n\t\tif(fformat.size() == 0) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.cpp"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 31,
                  "endLine": 79,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#endif\n}\n\n// This function is called only at initialization-time by the constructor\nvoid falco_outputs::add_output(const falco::outputs::config &oc) {\n\tstd::unique_ptr<falco::outputs::abstract_output> oo;\n\n",
                    "rendered": {
                      "text": "#endif\n}\n\n// This function is called only at initialization-time by the constructor\nvoid falco_outputs::add_output(const falco::outputs::config &oc) {\n\tstd::unique_ptr<falco::outputs::abstract_output> oo;\n\n",
                      "markdown": "`#endif\n}\n\n// This function is called only at initialization-time by the constructor\nvoid falco_outputs::add_output(const falco::outputs::config &oc) {\n\tstd::unique_ptr<falco::outputs::abstract_output> oo;\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.cpp"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 5,
                  "endLine": 286,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\t                  \"\\\"\" + payload + \"\\\" output timeout, all output channels are blocked\\n\");\n\t});\n\n\tauto timeout = m_timeout;\n\n\tfalco_outputs::ctrl_msg cmsg;\n\tdo {\n",
                    "rendered": {
                      "text": "\t\t                  \"\\\"\" + payload + \"\\\" output timeout, all output channels are blocked\\n\");\n\t});\n\n\tauto timeout = m_timeout;\n\n\tfalco_outputs::ctrl_msg cmsg;\n\tdo {\n",
                      "markdown": "`\t\t                  \"\\\"\" + payload + \"\\\" output timeout, all output channels are blocked\\n\");\n\t});\n\n\tauto timeout = m_timeout;\n\n\tfalco_outputs::ctrl_msg cmsg;\n\tdo {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/stats_writer.cpp"
                },
                "region": {
                  "startLine": 586,
                  "startColumn": 76,
                  "endLine": 586,
                  "endColumn": 81,
                  "snippet": {
                    "text": "\t\t\t\t           METRICS_V2_STATE_COUNTERS | METRICS_V2_LIBBPF_STATS);\n\t\t\t}\n\t\t\tm_writer->m_libs_metrics_collector =\n\t\t\t        std::make_unique<libs::metrics::libs_metrics_collector>(inspector.get(), flags);\n\t\t}\n\n\t\tif(!m_writer->m_output_rule_metrics_converter) {\n",
                    "rendered": {
                      "text": "\t\t\t\t           METRICS_V2_STATE_COUNTERS | METRICS_V2_LIBBPF_STATS);\n\t\t\t}\n\t\t\tm_writer->m_libs_metrics_collector =\n\t\t\t        std::make_unique<libs::metrics::libs_metrics_collector>(inspector.get(), flags);\n\t\t}\n\n\t\tif(!m_writer->m_output_rule_metrics_converter) {\n",
                      "markdown": "`\t\t\t\t           METRICS_V2_STATE_COUNTERS | METRICS_V2_LIBBPF_STATS);\n\t\t\t}\n\t\t\tm_writer->m_libs_metrics_collector =\n\t\t\t        std::make_unique<libs::metrics::libs_metrics_collector>(inspector.get(), flags);\n\t\t}\n\n\t\tif(!m_writer->m_output_rule_metrics_converter) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/stats_writer.cpp"
                },
                "region": {
                  "startLine": 361,
                  "startColumn": 24,
                  "endLine": 361,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t}\n\tif(machine_info) {\n\t\toutput_fields[\"evt.hostname\"] =\n\t\t        machine_info->hostname; /* Explicitly add hostname to log msg in case hostname rule\n\t\t                                   output field is disabled. */\n\t\t// This line generates a SIGTRAP in zig debug builds if the casting is removed.\n\t\t// It seems caused by the pragma pack for the scap_machine_info structure.\n",
                    "rendered": {
                      "text": "\t}\n\tif(machine_info) {\n\t\toutput_fields[\"evt.hostname\"] =\n\t\t        machine_info->hostname; /* Explicitly add hostname to log msg in case hostname rule\n\t\t                                   output field is disabled. */\n\t\t// This line generates a SIGTRAP in zig debug builds if the casting is removed.\n\t\t// It seems caused by the pragma pack for the scap_machine_info structure.\n",
                      "markdown": "`\t}\n\tif(machine_info) {\n\t\toutput_fields[\"evt.hostname\"] =\n\t\t        machine_info->hostname; /* Explicitly add hostname to log msg in case hostname rule\n\t\t                                   output field is disabled. */\n\t\t// This line generates a SIGTRAP in zig debug builds if the casting is removed.\n\t\t// It seems caused by the pragma pack for the scap_machine_info structure.\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/stats_writer.cpp"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 21,
                  "endLine": 360,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\toutput_fields[\"falco.kernel_release\"] = agent_info->uname_r;\n\t}\n\tif(machine_info) {\n\t\toutput_fields[\"evt.hostname\"] =\n\t\t        machine_info->hostname; /* Explicitly add hostname to log msg in case hostname rule\n\t\t                                   output field is disabled. */\n\t\t// This line generates a SIGTRAP in zig debug builds if the casting is removed.\n",
                    "rendered": {
                      "text": "\t\toutput_fields[\"falco.kernel_release\"] = agent_info->uname_r;\n\t}\n\tif(machine_info) {\n\t\toutput_fields[\"evt.hostname\"] =\n\t\t        machine_info->hostname; /* Explicitly add hostname to log msg in case hostname rule\n\t\t                                   output field is disabled. */\n\t\t// This line generates a SIGTRAP in zig debug builds if the casting is removed.\n",
                      "markdown": "`\t\toutput_fields[\"falco.kernel_release\"] = agent_info->uname_r;\n\t}\n\tif(machine_info) {\n\t\toutput_fields[\"evt.hostname\"] =\n\t\t        machine_info->hostname; /* Explicitly add hostname to log msg in case hostname rule\n\t\t                                   output field is disabled. */\n\t\t// This line generates a SIGTRAP in zig debug builds if the casting is removed.\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs.proto"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 9,
                  "endLine": 53,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  string rule = 4;\n  string output = 5;\n  map<string, string> output_fields = 6;\n  string hostname = 7;\n  repeated string tags = 8;\n  string source = 9;\n}\n",
                    "rendered": {
                      "text": "  string rule = 4;\n  string output = 5;\n  map<string, string> output_fields = 6;\n  string hostname = 7;\n  repeated string tags = 8;\n  string source = 9;\n}\n",
                      "markdown": "`  string rule = 4;\n  string output = 5;\n  map<string, string> output_fields = 6;\n  string hostname = 7;\n  repeated string tags = 8;\n  string source = 9;\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs.proto"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 36,
                  "endLine": 8,
                  "snippet": {
                    "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs.proto"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 27,
                  "endLine": 47,
                  "endColumn": 33,
                  "snippet": {
                    "text": "// It contains all the elements that Falco emits in an output along with the\n// definitions for priorities and source.\nmessage response {\n  google.protobuf.Timestamp time = 1;\n  falco.schema.priority priority = 2;\n  falco.schema.source source_deprecated = 3 [deprecated=true];\n  string rule = 4;\n",
                    "rendered": {
                      "text": "// It contains all the elements that Falco emits in an output along with the\n// definitions for priorities and source.\nmessage response {\n  google.protobuf.Timestamp time = 1;\n  falco.schema.priority priority = 2;\n  falco.schema.source source_deprecated = 3 [deprecated=true];\n  string rule = 4;\n",
                      "markdown": "`// It contains all the elements that Falco emits in an output along with the\n// definitions for priorities and source.\nmessage response {\n  google.protobuf.Timestamp time = 1;\n  falco.schema.priority priority = 2;\n  falco.schema.source source_deprecated = 3 [deprecated=true];\n  string rule = 4;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs.proto"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 47,
                  "endLine": 29,
                  "endColumn": 8,
                  "snippet": {
                    "text": "option go_package = \"github.com/falcosecurity/client-go/pkg/api/outputs\";\n\n// This service defines the RPC methods\n// to `request` a stream of output `response`s.\nservice service {\n  // Subscribe to a stream of Falco outputs by sending a stream of requests.\n  rpc sub(stream request) returns (stream response);\n  // Get all the Falco outputs present in the system up to this call.\n",
                    "rendered": {
                      "text": "option go_package = \"github.com/falcosecurity/client-go/pkg/api/outputs\";\n\n// This service defines the RPC methods\n// to `request` a stream of output `response`s.\nservice service {\n  // Subscribe to a stream of Falco outputs by sending a stream of requests.\n  rpc sub(stream request) returns (stream response);\n  // Get all the Falco outputs present in the system up to this call.\n",
                      "markdown": "`option go_package = \"github.com/falcosecurity/client-go/pkg/api/outputs\";\n\n// This service defines the RPC methods\n// to `request` a stream of output `response`s.\nservice service {\n  // Subscribe to a stream of Falco outputs by sending a stream of requests.\n  rpc sub(stream request) returns (stream response);\n  // Get all the Falco outputs present in the system up to this call.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs.proto"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 7,
                  "endLine": 27,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\noption go_package = \"github.com/falcosecurity/client-go/pkg/api/outputs\";\n\n// This service defines the RPC methods\n// to `request` a stream of output `response`s.\nservice service {\n  // Subscribe to a stream of Falco outputs by sending a stream of requests.\n",
                    "rendered": {
                      "text": "\noption go_package = \"github.com/falcosecurity/client-go/pkg/api/outputs\";\n\n// This service defines the RPC methods\n// to `request` a stream of output `response`s.\nservice service {\n  // Subscribe to a stream of Falco outputs by sending a stream of requests.\n",
                      "markdown": "`\noption go_package = \"github.com/falcosecurity/client-go/pkg/api/outputs\";\n\n// This service defines the RPC methods\n// to `request` a stream of output `response`s.\nservice service {\n  // Subscribe to a stream of Falco outputs by sending a stream of requests.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.cpp"
                },
                "region": {
                  "startLine": 457,
                  "startColumn": 48,
                  "endLine": 457,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t}\n\t// todo > else limit threadiness to avoid oversubscription?\n\tm_grpc_private_key =\n\t        m_config.get_scalar<std::string>(\"grpc.private_key\", \"/etc/falco/certs/server.key\");\n\tm_grpc_cert_chain =\n\t        m_config.get_scalar<std::string>(\"grpc.cert_chain\", \"/etc/falco/certs/server.crt\");\n\tm_grpc_root_certs =\n",
                    "rendered": {
                      "text": "\t}\n\t// todo > else limit threadiness to avoid oversubscription?\n\tm_grpc_private_key =\n\t        m_config.get_scalar<std::string>(\"grpc.private_key\", \"/etc/falco/certs/server.key\");\n\tm_grpc_cert_chain =\n\t        m_config.get_scalar<std::string>(\"grpc.cert_chain\", \"/etc/falco/certs/server.crt\");\n\tm_grpc_root_certs =\n",
                      "markdown": "`\t}\n\t// todo > else limit threadiness to avoid oversubscription?\n\tm_grpc_private_key =\n\t        m_config.get_scalar<std::string>(\"grpc.private_key\", \"/etc/falco/certs/server.key\");\n\tm_grpc_cert_chain =\n\t        m_config.get_scalar<std::string>(\"grpc.cert_chain\", \"/etc/falco/certs/server.crt\");\n\tm_grpc_root_certs =\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.cpp"
                },
                "region": {
                  "startLine": 456,
                  "startColumn": 8,
                  "endLine": 456,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\tm_grpc_threadiness = falco::utils::hardware_concurrency();\n\t}\n\t// todo > else limit threadiness to avoid oversubscription?\n\tm_grpc_private_key =\n\t        m_config.get_scalar<std::string>(\"grpc.private_key\", \"/etc/falco/certs/server.key\");\n\tm_grpc_cert_chain =\n\t        m_config.get_scalar<std::string>(\"grpc.cert_chain\", \"/etc/falco/certs/server.crt\");\n",
                    "rendered": {
                      "text": "\t\tm_grpc_threadiness = falco::utils::hardware_concurrency();\n\t}\n\t// todo > else limit threadiness to avoid oversubscription?\n\tm_grpc_private_key =\n\t        m_config.get_scalar<std::string>(\"grpc.private_key\", \"/etc/falco/certs/server.key\");\n\tm_grpc_cert_chain =\n\t        m_config.get_scalar<std::string>(\"grpc.cert_chain\", \"/etc/falco/certs/server.crt\");\n",
                      "markdown": "`\t\tm_grpc_threadiness = falco::utils::hardware_concurrency();\n\t}\n\t// todo > else limit threadiness to avoid oversubscription?\n\tm_grpc_private_key =\n\t        m_config.get_scalar<std::string>(\"grpc.private_key\", \"/etc/falco/certs/server.key\");\n\tm_grpc_cert_chain =\n\t        m_config.get_scalar<std::string>(\"grpc.cert_chain\", \"/etc/falco/certs/server.crt\");\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.cpp"
                },
                "region": {
                  "startLine": 778,
                  "startColumn": 12,
                  "endLine": 778,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t}\n\n\tif(keyval.second[0] == '{' && keyval.second[keyval.second.size() - 1] == '}') {\n\t\tYAML::Node node = YAML::Load(keyval.second);\n\t\tm_config.set_object(keyval.first, node);\n\t} else {\n\t\tm_config.set_scalar(keyval.first, keyval.second);\n",
                    "rendered": {
                      "text": "\t}\n\n\tif(keyval.second[0] == '{' && keyval.second[keyval.second.size() - 1] == '}') {\n\t\tYAML::Node node = YAML::Load(keyval.second);\n\t\tm_config.set_object(keyval.first, node);\n\t} else {\n\t\tm_config.set_scalar(keyval.first, keyval.second);\n",
                      "markdown": "`\t}\n\n\tif(keyval.second[0] == '{' && keyval.second[keyval.second.size() - 1] == '}') {\n\t\tYAML::Node node = YAML::Load(keyval.second);\n\t\tm_config.set_object(keyval.first, node);\n\t} else {\n\t\tm_config.set_scalar(keyval.first, keyval.second);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.cpp"
                },
                "region": {
                  "startLine": 505,
                  "startColumn": 66,
                  "endLine": 505,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\tif(!re2::RE2::FullMatch(m_webserver_config.m_listen_address, ip_address_re)) {\n\t\tthrow std::logic_error(\n\t\t        \"Error reading config file (\" + config_name + \"): webserver listen address \\\"\" +\n\t\t        m_webserver_config.m_listen_address + \"\\\" is not a valid IP address\");\n\t}\n\n\tm_webserver_config.m_k8s_healthz_endpoint =\n",
                    "rendered": {
                      "text": "\tif(!re2::RE2::FullMatch(m_webserver_config.m_listen_address, ip_address_re)) {\n\t\tthrow std::logic_error(\n\t\t        \"Error reading config file (\" + config_name + \"): webserver listen address \\\"\" +\n\t\t        m_webserver_config.m_listen_address + \"\\\" is not a valid IP address\");\n\t}\n\n\tm_webserver_config.m_k8s_healthz_endpoint =\n",
                      "markdown": "`\tif(!re2::RE2::FullMatch(m_webserver_config.m_listen_address, ip_address_re)) {\n\t\tthrow std::logic_error(\n\t\t        \"Error reading config file (\" + config_name + \"): webserver listen address \\\"\" +\n\t\t        m_webserver_config.m_listen_address + \"\\\" is not a valid IP address\");\n\t}\n\n\tm_webserver_config.m_k8s_healthz_endpoint =\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.cpp"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 41,
                  "endLine": 250,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\tchar full_path[PATH_MAX];\n\t\tconst char *home = std::getenv(\"HOME\");\n\t\tif(!home) {\n\t\t\tthrow std::logic_error(\"Cannot get the env variable 'HOME'\");\n\t\t}\n\t\tsnprintf(full_path, PATH_MAX, \"%s/%s\", home, FALCO_PROBE_BPF_FILEPATH);\n\t\tm_ebpf.m_probe_path =\n",
                    "rendered": {
                      "text": "\t\tchar full_path[PATH_MAX];\n\t\tconst char *home = std::getenv(\"HOME\");\n\t\tif(!home) {\n\t\t\tthrow std::logic_error(\"Cannot get the env variable 'HOME'\");\n\t\t}\n\t\tsnprintf(full_path, PATH_MAX, \"%s/%s\", home, FALCO_PROBE_BPF_FILEPATH);\n\t\tm_ebpf.m_probe_path =\n",
                      "markdown": "`\t\tchar full_path[PATH_MAX];\n\t\tconst char *home = std::getenv(\"HOME\");\n\t\tif(!home) {\n\t\t\tthrow std::logic_error(\"Cannot get the env variable 'HOME'\");\n\t\t}\n\t\tsnprintf(full_path, PATH_MAX, \"%s/%s\", home, FALCO_PROBE_BPF_FILEPATH);\n\t\tm_ebpf.m_probe_path =\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.cpp"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 18,
                  "endLine": 194,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t\tstd::sort(v.begin(), v.end());\n\t\t\tfor(const auto &f : v) {\n\t\t\t\tm_config.include_config_file(f, m_config_schema, &validation_status);\n\t\t\t\t// Only report top most schema validation status\n\t\t\t\tres[f] = validation_status[0];\n\t\t\t}\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tstd::sort(v.begin(), v.end());\n\t\t\tfor(const auto &f : v) {\n\t\t\t\tm_config.include_config_file(f, m_config_schema, &validation_status);\n\t\t\t\t// Only report top most schema validation status\n\t\t\t\tres[f] = validation_status[0];\n\t\t\t}\n\t\t}\n",
                      "markdown": "`\t\t\tstd::sort(v.begin(), v.end());\n\t\t\tfor(const auto &f : v) {\n\t\t\t\tm_config.include_config_file(f, m_config_schema, &validation_status);\n\t\t\t\t// Only report top most schema validation status\n\t\t\t\tres[f] = validation_status[0];\n\t\t\t}\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.cpp"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 17,
                  "endLine": 178,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\tm_config.include_config_file(include_file_path.string(),\n\t\t\t                             m_config_schema,\n\t\t\t                             &validation_status);\n\t\t\t// Only report top most schema validation status\n\t\t\tres[include_file_path.string()] = validation_status[0];\n\t\t} else if(std::filesystem::is_directory(include_file_path)) {\n\t\t\tm_loaded_configs_folders.push_back(include_file);\n",
                    "rendered": {
                      "text": "\t\t\tm_config.include_config_file(include_file_path.string(),\n\t\t\t                             m_config_schema,\n\t\t\t                             &validation_status);\n\t\t\t// Only report top most schema validation status\n\t\t\tres[include_file_path.string()] = validation_status[0];\n\t\t} else if(std::filesystem::is_directory(include_file_path)) {\n\t\t\tm_loaded_configs_folders.push_back(include_file);\n",
                      "markdown": "`\t\t\tm_config.include_config_file(include_file_path.string(),\n\t\t\t                             m_config_schema,\n\t\t\t                             &validation_status);\n\t\t\t// Only report top most schema validation status\n\t\t\tres[include_file_path.string()] = validation_status[0];\n\t\t} else if(std::filesystem::is_directory(include_file_path)) {\n\t\t\tm_loaded_configs_folders.push_back(include_file);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.cpp"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 15,
                  "endLine": 137,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t}\n\tinit_cmdline_options(cmdline_options);\n\n\t// Only report top most schema validation status\n\tres[conf_filename] = validation_status[0];\n\n\tmerge_config_files(conf_filename, res);\n",
                    "rendered": {
                      "text": "\t}\n\tinit_cmdline_options(cmdline_options);\n\n\t// Only report top most schema validation status\n\tres[conf_filename] = validation_status[0];\n\n\tmerge_config_files(conf_filename, res);\n",
                      "markdown": "`\t}\n\tinit_cmdline_options(cmdline_options);\n\n\t// Only report top most schema validation status\n\tres[conf_filename] = validation_status[0];\n\n\tmerge_config_files(conf_filename, res);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.cpp"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 15,
                  "endLine": 117,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tm_config.load_from_string(config_content, m_config_schema, &validation_status);\n\tinit_cmdline_options(cmdline_options);\n\n\t// Only report top most schema validation status\n\tres[filename] = validation_status[0];\n\n\tload_yaml(filename);\n",
                    "rendered": {
                      "text": "\tm_config.load_from_string(config_content, m_config_schema, &validation_status);\n\tinit_cmdline_options(cmdline_options);\n\n\t// Only report top most schema validation status\n\tres[filename] = validation_status[0];\n\n\tload_yaml(filename);\n",
                      "markdown": "`\tm_config.load_from_string(config_content, m_config_schema, &validation_status);\n\tinit_cmdline_options(cmdline_options);\n\n\t// Only report top most schema validation status\n\tres[filename] = validation_status[0];\n\n\tload_yaml(filename);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_server.cpp"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 63,
                  "endLine": 170,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\tfalco::utils::readfile(m_cert_chain, cert_chain);\n\tfalco::utils::readfile(m_private_key, private_key);\n\tfalco::utils::readfile(m_root_certs, root_certs);\n\t::grpc::SslServerCredentialsOptions::PemKeyCertPair cert_pair{private_key, cert_chain};\n\t::grpc::SslServerCredentialsOptions ssl_opts(\n\t        GRPC_SSL_REQUEST_AND_REQUIRE_CLIENT_CERTIFICATE_AND_VERIFY);\n\tssl_opts.pem_root_certs = root_certs;\n",
                    "rendered": {
                      "text": "\tfalco::utils::readfile(m_cert_chain, cert_chain);\n\tfalco::utils::readfile(m_private_key, private_key);\n\tfalco::utils::readfile(m_root_certs, root_certs);\n\t::grpc::SslServerCredentialsOptions::PemKeyCertPair cert_pair{private_key, cert_chain};\n\t::grpc::SslServerCredentialsOptions ssl_opts(\n\t        GRPC_SSL_REQUEST_AND_REQUIRE_CLIENT_CERTIFICATE_AND_VERIFY);\n\tssl_opts.pem_root_certs = root_certs;\n",
                      "markdown": "`\tfalco::utils::readfile(m_cert_chain, cert_chain);\n\tfalco::utils::readfile(m_private_key, private_key);\n\tfalco::utils::readfile(m_root_certs, root_certs);\n\t::grpc::SslServerCredentialsOptions::PemKeyCertPair cert_pair{private_key, cert_chain};\n\t::grpc::SslServerCredentialsOptions ssl_opts(\n\t        GRPC_SSL_REQUEST_AND_REQUIRE_CLIENT_CERTIFICATE_AND_VERIFY);\n\tssl_opts.pem_root_certs = root_certs;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_server.cpp"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 39,
                  "endLine": 168,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\tstd::string cert_chain;\n\tstd::string root_certs;\n\tfalco::utils::readfile(m_cert_chain, cert_chain);\n\tfalco::utils::readfile(m_private_key, private_key);\n\tfalco::utils::readfile(m_root_certs, root_certs);\n\t::grpc::SslServerCredentialsOptions::PemKeyCertPair cert_pair{private_key, cert_chain};\n\t::grpc::SslServerCredentialsOptions ssl_opts(\n",
                    "rendered": {
                      "text": "\tstd::string cert_chain;\n\tstd::string root_certs;\n\tfalco::utils::readfile(m_cert_chain, cert_chain);\n\tfalco::utils::readfile(m_private_key, private_key);\n\tfalco::utils::readfile(m_root_certs, root_certs);\n\t::grpc::SslServerCredentialsOptions::PemKeyCertPair cert_pair{private_key, cert_chain};\n\t::grpc::SslServerCredentialsOptions ssl_opts(\n",
                      "markdown": "`\tstd::string cert_chain;\n\tstd::string root_certs;\n\tfalco::utils::readfile(m_cert_chain, cert_chain);\n\tfalco::utils::readfile(m_private_key, private_key);\n\tfalco::utils::readfile(m_root_certs, root_certs);\n\t::grpc::SslServerCredentialsOptions::PemKeyCertPair cert_pair{private_key, cert_chain};\n\t::grpc::SslServerCredentialsOptions ssl_opts(\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_server.cpp"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 26,
                  "endLine": 168,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tstd::string cert_chain;\n\tstd::string root_certs;\n\tfalco::utils::readfile(m_cert_chain, cert_chain);\n\tfalco::utils::readfile(m_private_key, private_key);\n\tfalco::utils::readfile(m_root_certs, root_certs);\n\t::grpc::SslServerCredentialsOptions::PemKeyCertPair cert_pair{private_key, cert_chain};\n\t::grpc::SslServerCredentialsOptions ssl_opts(\n",
                    "rendered": {
                      "text": "\tstd::string cert_chain;\n\tstd::string root_certs;\n\tfalco::utils::readfile(m_cert_chain, cert_chain);\n\tfalco::utils::readfile(m_private_key, private_key);\n\tfalco::utils::readfile(m_root_certs, root_certs);\n\t::grpc::SslServerCredentialsOptions::PemKeyCertPair cert_pair{private_key, cert_chain};\n\t::grpc::SslServerCredentialsOptions ssl_opts(\n",
                      "markdown": "`\tstd::string cert_chain;\n\tstd::string root_certs;\n\tfalco::utils::readfile(m_cert_chain, cert_chain);\n\tfalco::utils::readfile(m_private_key, private_key);\n\tfalco::utils::readfile(m_root_certs, root_certs);\n\t::grpc::SslServerCredentialsOptions::PemKeyCertPair cert_pair{private_key, cert_chain};\n\t::grpc::SslServerCredentialsOptions ssl_opts(\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_server.cpp"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 13,
                  "endLine": 164,
                  "endColumn": 24,
                  "snippet": {
                    "text": "}\n\nvoid falco::grpc::server::init_mtls_server_builder() {\n\tstd::string private_key;\n\tstd::string cert_chain;\n\tstd::string root_certs;\n\tfalco::utils::readfile(m_cert_chain, cert_chain);\n",
                    "rendered": {
                      "text": "}\n\nvoid falco::grpc::server::init_mtls_server_builder() {\n\tstd::string private_key;\n\tstd::string cert_chain;\n\tstd::string root_certs;\n\tfalco::utils::readfile(m_cert_chain, cert_chain);\n",
                      "markdown": "`}\n\nvoid falco::grpc::server::init_mtls_server_builder() {\n\tstd::string private_key;\n\tstd::string cert_chain;\n\tstd::string root_certs;\n\tfalco::utils::readfile(m_cert_chain, cert_chain);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_server.cpp"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 17,
                  "endLine": 133,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                               const std::string& log_level) {\n\tm_server_addr = server_addr;\n\tm_threadiness = threadiness;\n\tm_private_key = private_key;\n\tm_cert_chain = cert_chain;\n\tm_root_certs = root_certs;\n\n",
                    "rendered": {
                      "text": "                               const std::string& log_level) {\n\tm_server_addr = server_addr;\n\tm_threadiness = threadiness;\n\tm_private_key = private_key;\n\tm_cert_chain = cert_chain;\n\tm_root_certs = root_certs;\n\n",
                      "markdown": "`                               const std::string& log_level) {\n\tm_server_addr = server_addr;\n\tm_threadiness = threadiness;\n\tm_private_key = private_key;\n\tm_cert_chain = cert_chain;\n\tm_root_certs = root_certs;\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_server.cpp"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 3,
                  "endLine": 133,
                  "endColumn": 14,
                  "snippet": {
                    "text": "                               const std::string& log_level) {\n\tm_server_addr = server_addr;\n\tm_threadiness = threadiness;\n\tm_private_key = private_key;\n\tm_cert_chain = cert_chain;\n\tm_root_certs = root_certs;\n\n",
                    "rendered": {
                      "text": "                               const std::string& log_level) {\n\tm_server_addr = server_addr;\n\tm_threadiness = threadiness;\n\tm_private_key = private_key;\n\tm_cert_chain = cert_chain;\n\tm_root_certs = root_certs;\n\n",
                      "markdown": "`                               const std::string& log_level) {\n\tm_server_addr = server_addr;\n\tm_threadiness = threadiness;\n\tm_private_key = private_key;\n\tm_cert_chain = cert_chain;\n\tm_root_certs = root_certs;\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_server.cpp"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 50,
                  "endLine": 127,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\nvoid falco::grpc::server::init(const std::string& server_addr,\n                               int threadiness,\n                               const std::string& private_key,\n                               const std::string& cert_chain,\n                               const std::string& root_certs,\n                               const std::string& log_level) {\n",
                    "rendered": {
                      "text": "\nvoid falco::grpc::server::init(const std::string& server_addr,\n                               int threadiness,\n                               const std::string& private_key,\n                               const std::string& cert_chain,\n                               const std::string& root_certs,\n                               const std::string& log_level) {\n",
                      "markdown": "`\nvoid falco::grpc::server::init(const std::string& server_addr,\n                               int threadiness,\n                               const std::string& private_key,\n                               const std::string& cert_chain,\n                               const std::string& root_certs,\n                               const std::string& log_level) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_server.cpp"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 67,
                  "endLine": 193,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\t\tfalco_logger::log(falco_logger::level::EMERG, \"Error starting gRPC server\\n\");\n\t\treturn;\n\t}\n\tfalco_logger::log(falco_logger::level::INFO, \"Starting gRPC server at \" + m_server_addr + \"\\n\");\n\n\t// The number of contexts is multiple of the number of threads\n\t// This defines the number of simultaneous completion queue requests of the same type\n",
                    "rendered": {
                      "text": "\t\tfalco_logger::log(falco_logger::level::EMERG, \"Error starting gRPC server\\n\");\n\t\treturn;\n\t}\n\tfalco_logger::log(falco_logger::level::INFO, \"Starting gRPC server at \" + m_server_addr + \"\\n\");\n\n\t// The number of contexts is multiple of the number of threads\n\t// This defines the number of simultaneous completion queue requests of the same type\n",
                      "markdown": "`\t\tfalco_logger::log(falco_logger::level::EMERG, \"Error starting gRPC server\\n\");\n\t\treturn;\n\t}\n\tfalco_logger::log(falco_logger::level::INFO, \"Starting gRPC server at \" + m_server_addr + \"\\n\");\n\n\t// The number of contexts is multiple of the number of threads\n\t// This defines the number of simultaneous completion queue requests of the same type\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.h"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 20,
                  "endLine": 162,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\tbool m_grpc_enabled;\n\tuint32_t m_grpc_threadiness;\n\tstd::string m_grpc_bind_address;\n\tstd::string m_grpc_private_key;\n\tstd::string m_grpc_cert_chain;\n\tstd::string m_grpc_root_certs;\n\n",
                    "rendered": {
                      "text": "\tbool m_grpc_enabled;\n\tuint32_t m_grpc_threadiness;\n\tstd::string m_grpc_bind_address;\n\tstd::string m_grpc_private_key;\n\tstd::string m_grpc_cert_chain;\n\tstd::string m_grpc_root_certs;\n\n",
                      "markdown": "`\tbool m_grpc_enabled;\n\tuint32_t m_grpc_threadiness;\n\tstd::string m_grpc_bind_address;\n\tstd::string m_grpc_private_key;\n\tstd::string m_grpc_cert_chain;\n\tstd::string m_grpc_root_certs;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.h"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 1,
                  "endLine": 369,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t// Note that this loses the distinction between init configs\n\t// defined as YAML maps or as opaque strings.\n\tstatic Node encode(const falco_configuration::plugin_config& rhs) {\n\t\tNode node;\n\t\tnode[\"name\"] = rhs.m_name;\n\t\tnode[\"library_path\"] = rhs.m_library_path;\n\t\tnode[\"init_config\"] = rhs.m_init_config;\n",
                    "rendered": {
                      "text": "\t// Note that this loses the distinction between init configs\n\t// defined as YAML maps or as opaque strings.\n\tstatic Node encode(const falco_configuration::plugin_config& rhs) {\n\t\tNode node;\n\t\tnode[\"name\"] = rhs.m_name;\n\t\tnode[\"library_path\"] = rhs.m_library_path;\n\t\tnode[\"init_config\"] = rhs.m_init_config;\n",
                      "markdown": "`\t// Note that this loses the distinction between init configs\n\t// defined as YAML maps or as opaque strings.\n\tstatic Node encode(const falco_configuration::plugin_config& rhs) {\n\t\tNode node;\n\t\tnode[\"name\"] = rhs.m_name;\n\t\tnode[\"library_path\"] = rhs.m_library_path;\n\t\tnode[\"init_config\"] = rhs.m_init_config;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.h"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 7,
                  "endLine": 368,
                  "endColumn": 13,
                  "snippet": {
                    "text": "struct convert<falco_configuration::plugin_config> {\n\t// Note that this loses the distinction between init configs\n\t// defined as YAML maps or as opaque strings.\n\tstatic Node encode(const falco_configuration::plugin_config& rhs) {\n\t\tNode node;\n\t\tnode[\"name\"] = rhs.m_name;\n\t\tnode[\"library_path\"] = rhs.m_library_path;\n",
                    "rendered": {
                      "text": "struct convert<falco_configuration::plugin_config> {\n\t// Note that this loses the distinction between init configs\n\t// defined as YAML maps or as opaque strings.\n\tstatic Node encode(const falco_configuration::plugin_config& rhs) {\n\t\tNode node;\n\t\tnode[\"name\"] = rhs.m_name;\n\t\tnode[\"library_path\"] = rhs.m_library_path;\n",
                      "markdown": "`struct convert<falco_configuration::plugin_config> {\n\t// Note that this loses the distinction between init configs\n\t// defined as YAML maps or as opaque strings.\n\tstatic Node encode(const falco_configuration::plugin_config& rhs) {\n\t\tNode node;\n\t\tnode[\"name\"] = rhs.m_name;\n\t\tnode[\"library_path\"] = rhs.m_library_path;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.h"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 1,
                  "endLine": 301,
                  "endColumn": 7,
                  "snippet": {
                    "text": "struct convert<falco_configuration::rule_selection_config> {\n\tstatic Node encode(const falco_configuration::rule_selection_config& rhs) {\n\t\tNode node;\n\t\tNode subnode;\n\t\tif(rhs.m_rule != \"\") {\n\t\t\tsubnode[\"rule\"] = rhs.m_rule;\n\t\t}\n",
                    "rendered": {
                      "text": "struct convert<falco_configuration::rule_selection_config> {\n\tstatic Node encode(const falco_configuration::rule_selection_config& rhs) {\n\t\tNode node;\n\t\tNode subnode;\n\t\tif(rhs.m_rule != \"\") {\n\t\t\tsubnode[\"rule\"] = rhs.m_rule;\n\t\t}\n",
                      "markdown": "`struct convert<falco_configuration::rule_selection_config> {\n\tstatic Node encode(const falco_configuration::rule_selection_config& rhs) {\n\t\tNode node;\n\t\tNode subnode;\n\t\tif(rhs.m_rule != \"\") {\n\t\t\tsubnode[\"rule\"] = rhs.m_rule;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.h"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 1,
                  "endLine": 300,
                  "endColumn": 7,
                  "snippet": {
                    "text": "template<>\nstruct convert<falco_configuration::rule_selection_config> {\n\tstatic Node encode(const falco_configuration::rule_selection_config& rhs) {\n\t\tNode node;\n\t\tNode subnode;\n\t\tif(rhs.m_rule != \"\") {\n\t\t\tsubnode[\"rule\"] = rhs.m_rule;\n",
                    "rendered": {
                      "text": "template<>\nstruct convert<falco_configuration::rule_selection_config> {\n\tstatic Node encode(const falco_configuration::rule_selection_config& rhs) {\n\t\tNode node;\n\t\tNode subnode;\n\t\tif(rhs.m_rule != \"\") {\n\t\t\tsubnode[\"rule\"] = rhs.m_rule;\n",
                      "markdown": "`template<>\nstruct convert<falco_configuration::rule_selection_config> {\n\tstatic Node encode(const falco_configuration::rule_selection_config& rhs) {\n\t\tNode node;\n\t\tNode subnode;\n\t\tif(rhs.m_rule != \"\") {\n\t\t\tsubnode[\"rule\"] = rhs.m_rule;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/configuration.h"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 7,
                  "endLine": 299,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\ntemplate<>\nstruct convert<falco_configuration::rule_selection_config> {\n\tstatic Node encode(const falco_configuration::rule_selection_config& rhs) {\n\t\tNode node;\n\t\tNode subnode;\n\t\tif(rhs.m_rule != \"\") {\n",
                    "rendered": {
                      "text": "\ntemplate<>\nstruct convert<falco_configuration::rule_selection_config> {\n\tstatic Node encode(const falco_configuration::rule_selection_config& rhs) {\n\t\tNode node;\n\t\tNode subnode;\n\t\tif(rhs.m_rule != \"\") {\n",
                      "markdown": "`\ntemplate<>\nstruct convert<falco_configuration::rule_selection_config> {\n\tstatic Node encode(const falco_configuration::rule_selection_config& rhs) {\n\t\tNode node;\n\t\tNode subnode;\n\t\tif(rhs.m_rule != \"\") {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs_http.h"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 30,
                  "endLine": 28,
                  "endColumn": 38,
                  "snippet": {
                    "text": "class output_http : public abstract_output {\n\tbool init(const config &oc,\n\t          bool buffered,\n\t          const std::string &hostname,\n\t          bool json_output,\n\t          std::string &err) override;\n\tvoid output(const message *msg) override;\n",
                    "rendered": {
                      "text": "class output_http : public abstract_output {\n\tbool init(const config &oc,\n\t          bool buffered,\n\t          const std::string &hostname,\n\t          bool json_output,\n\t          std::string &err) override;\n\tvoid output(const message *msg) override;\n",
                      "markdown": "`class output_http : public abstract_output {\n\tbool init(const config &oc,\n\t          bool buffered,\n\t          const std::string &hostname,\n\t          bool json_output,\n\t          std::string &err) override;\n\tvoid output(const message *msg) override;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs_http.h"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tvoid cleanup() override;\n\nprivate:\n\tCURL *m_curl;\n\tstruct curl_slist *m_http_headers;\n};\n\n",
                    "rendered": {
                      "text": "\tvoid cleanup() override;\n\nprivate:\n\tCURL *m_curl;\n\tstruct curl_slist *m_http_headers;\n};\n\n",
                      "markdown": "`\tvoid cleanup() override;\n\nprivate:\n\tCURL *m_curl;\n\tstruct curl_slist *m_http_headers;\n};\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 11,
                  "endLine": 95,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n",
                    "rendered": {
                      "text": "\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n",
                      "markdown": "`\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 11,
                  "endLine": 20,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbash-completion \\\n\tbc \\\n",
                    "rendered": {
                      "text": "\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbash-completion \\\n\tbc \\\n",
                      "markdown": "`\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbash-completion \\\n\tbc \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 3,
                  "endLine": 124,
                  "endColumn": 9,
                  "snippet": {
                    "text": "RUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o libbinutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/libbinutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o binutils-common_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-common_2.30-22_${TARGETARCH}.deb \\\n\t&& dpkg -i *binutils*.deb \\\n\t&& rm -f *binutils*.deb\n\nCOPY ./docker-entrypoint.sh /\n",
                    "rendered": {
                      "text": "RUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o libbinutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/libbinutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o binutils-common_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-common_2.30-22_${TARGETARCH}.deb \\\n\t&& dpkg -i *binutils*.deb \\\n\t&& rm -f *binutils*.deb\n\nCOPY ./docker-entrypoint.sh /\n",
                      "markdown": "`RUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o libbinutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/libbinutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o binutils-common_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-common_2.30-22_${TARGETARCH}.deb \\\n\t&& dpkg -i *binutils*.deb \\\n\t&& rm -f *binutils*.deb\n\nCOPY ./docker-entrypoint.sh /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 3,
                  "endLine": 123,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nRUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o libbinutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/libbinutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o binutils-common_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-common_2.30-22_${TARGETARCH}.deb \\\n\t&& dpkg -i *binutils*.deb \\\n\t&& rm -f *binutils*.deb\n\n",
                    "rendered": {
                      "text": "\nRUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o libbinutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/libbinutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o binutils-common_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-common_2.30-22_${TARGETARCH}.deb \\\n\t&& dpkg -i *binutils*.deb \\\n\t&& rm -f *binutils*.deb\n\n",
                      "markdown": "`\nRUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o libbinutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/libbinutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o binutils-common_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-common_2.30-22_${TARGETARCH}.deb \\\n\t&& dpkg -i *binutils*.deb \\\n\t&& rm -f *binutils*.deb\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 3,
                  "endLine": 122,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    fi\n\nRUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o libbinutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/libbinutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o binutils-common_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-common_2.30-22_${TARGETARCH}.deb \\\n\t&& dpkg -i *binutils*.deb \\\n\t&& rm -f *binutils*.deb\n",
                    "rendered": {
                      "text": "    fi\n\nRUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o libbinutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/libbinutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o binutils-common_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-common_2.30-22_${TARGETARCH}.deb \\\n\t&& dpkg -i *binutils*.deb \\\n\t&& rm -f *binutils*.deb\n",
                      "markdown": "`    fi\n\nRUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o libbinutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/libbinutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o binutils-common_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-common_2.30-22_${TARGETARCH}.deb \\\n\t&& dpkg -i *binutils*.deb \\\n\t&& rm -f *binutils*.deb\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 3,
                  "endLine": 121,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    curl -L -o  binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    fi\n\nRUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o libbinutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/libbinutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o binutils-common_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-common_2.30-22_${TARGETARCH}.deb \\\n\t&& dpkg -i *binutils*.deb \\\n",
                    "rendered": {
                      "text": "    curl -L -o  binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    fi\n\nRUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o libbinutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/libbinutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o binutils-common_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-common_2.30-22_${TARGETARCH}.deb \\\n\t&& dpkg -i *binutils*.deb \\\n",
                      "markdown": "`    curl -L -o  binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    fi\n\nRUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o libbinutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/libbinutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -L -o binutils-common_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-common_2.30-22_${TARGETARCH}.deb \\\n\t&& dpkg -i *binutils*.deb \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 3,
                  "endLine": 118,
                  "endColumn": 9,
                  "snippet": {
                    "text": "RUN if [ \"$TARGETARCH\" = \"amd64\" ] ; then \\\n    curl -L -o binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    else  \\\n    curl -L -o  binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    fi\n\nRUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n",
                    "rendered": {
                      "text": "RUN if [ \"$TARGETARCH\" = \"amd64\" ] ; then \\\n    curl -L -o binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    else  \\\n    curl -L -o  binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    fi\n\nRUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n",
                      "markdown": "`RUN if [ \"$TARGETARCH\" = \"amd64\" ] ; then \\\n    curl -L -o binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    else  \\\n    curl -L -o  binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    fi\n\nRUN curl -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 3,
                  "endLine": 116,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# forcibly install binutils 2.30-22 instead.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ] ; then \\\n    curl -L -o binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    else  \\\n    curl -L -o  binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    fi\n",
                    "rendered": {
                      "text": "# forcibly install binutils 2.30-22 instead.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ] ; then \\\n    curl -L -o binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    else  \\\n    curl -L -o  binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    fi\n",
                      "markdown": "`# forcibly install binutils 2.30-22 instead.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ] ; then \\\n    curl -L -o binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    else  \\\n    curl -L -o  binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 15,
                  "endLine": 111,
                  "endColumn": 21,
                  "snippet": {
                    "text": "RUN rm -df /lib/modules \\\n\t&& ln -s $HOST_ROOT/lib/modules /lib/modules\n\n# debian:stable head contains binutils 2.31, which generates\n# binaries that are incompatible with kernels < 4.16. So manually\n# forcibly install binutils 2.30-22 instead.\n\n",
                    "rendered": {
                      "text": "RUN rm -df /lib/modules \\\n\t&& ln -s $HOST_ROOT/lib/modules /lib/modules\n\n# debian:stable head contains binutils 2.31, which generates\n# binaries that are incompatible with kernels < 4.16. So manually\n# forcibly install binutils 2.30-22 instead.\n\n",
                      "markdown": "`RUN rm -df /lib/modules \\\n\t&& ln -s $HOST_ROOT/lib/modules /lib/modules\n\n# debian:stable head contains binutils 2.31, which generates\n# binaries that are incompatible with kernels < 4.16. So manually\n# forcibly install binutils 2.30-22 instead.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 20,
                  "endLine": 106,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n# silently overwriting the existing directory\nRUN rm -df /lib/modules \\\n\t&& ln -s $HOST_ROOT/lib/modules /lib/modules\n",
                    "rendered": {
                      "text": "\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n# silently overwriting the existing directory\nRUN rm -df /lib/modules \\\n\t&& ln -s $HOST_ROOT/lib/modules /lib/modules\n",
                      "markdown": "`\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n# silently overwriting the existing directory\nRUN rm -df /lib/modules \\\n\t&& ln -s $HOST_ROOT/lib/modules /lib/modules\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 3,
                  "endLine": 103,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n",
                    "rendered": {
                      "text": "# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n",
                      "markdown": "`# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 3,
                  "endLine": 102,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n",
                    "rendered": {
                      "text": "\n# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n",
                      "markdown": "`\n# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 3,
                  "endLine": 97,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Change the falco config within the container to enable ISO 8601\n",
                    "rendered": {
                      "text": "\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Change the falco config within the container to enable ISO 8601\n",
                      "markdown": "`\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Change the falco config within the container to enable ISO 8601\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 149,
                  "endLine": 96,
                  "endColumn": 158,
                  "snippet": {
                    "text": "RUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n",
                    "rendered": {
                      "text": "RUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n",
                      "markdown": "`RUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 69,
                  "endLine": 96,
                  "endColumn": 78,
                  "snippet": {
                    "text": "RUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n",
                    "rendered": {
                      "text": "RUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n",
                      "markdown": "`RUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 3,
                  "endLine": 95,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n",
                    "rendered": {
                      "text": "\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n",
                      "markdown": "`\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 82,
                  "endLine": 94,
                  "endColumn": 87,
                  "snippet": {
                    "text": "\t&& ln -s /usr/bin/llc-7 /usr/bin/llc\n\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n",
                    "rendered": {
                      "text": "\t&& ln -s /usr/bin/llc-7 /usr/bin/llc\n\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n",
                      "markdown": "`\t&& ln -s /usr/bin/llc-7 /usr/bin/llc\n\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 3,
                  "endLine": 93,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t&& ln -s /usr/bin/clang-7 /usr/bin/clang \\\n\t&& ln -s /usr/bin/llc-7 /usr/bin/llc\n\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n",
                    "rendered": {
                      "text": "\t&& ln -s /usr/bin/clang-7 /usr/bin/clang \\\n\t&& ln -s /usr/bin/llc-7 /usr/bin/llc\n\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n",
                      "markdown": "`\t&& ln -s /usr/bin/clang-7 /usr/bin/clang \\\n\t&& ln -s /usr/bin/llc-7 /usr/bin/llc\n\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 3,
                  "endLine": 81,
                  "endColumn": 9,
                  "snippet": {
                    "text": "g/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& rm -f cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.18-4_${TARGETARCH}.d",
                    "rendered": {
                      "text": "g/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& rm -f cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.18-4_${TARGETARCH}.d",
                      "markdown": "`g/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& rm -f cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.18-4_${TARGETARCH}.d`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 40,
                  "endLine": 80,
                  "endColumn": 46,
                  "snippet": {
                    "text": "l15_0.18-4_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& rm -f cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb libgcc-5-dev_5.5.",
                    "rendered": {
                      "text": "l15_0.18-4_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& rm -f cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb libgcc-5-dev_5.5.",
                      "markdown": "`l15_0.18-4_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& rm -f cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb libgcc-5-dev_5.5.`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 3,
                  "endLine": 79,
                  "endColumn": 9,
                  "snippet": {
                    "text": "asan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-4_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.",
                    "rendered": {
                      "text": "asan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-4_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.",
                      "markdown": "`asan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-4_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 3,
                  "endLine": 78,
                  "endColumn": 9,
                  "snippet": {
                    "text": "5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\thttps://download.falco.org/dependencies/libasan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-4_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd",
                    "rendered": {
                      "text": "5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\thttps://download.falco.org/dependencies/libasan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-4_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd",
                      "markdown": "`5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\thttps://download.falco.org/dependencies/libasan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-4_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 3,
                  "endLine": 77,
                  "endColumn": 9,
                  "snippet": {
                    "text": "cies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\thttps://download.falco.org/dependencies/libasan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-4_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gc",
                    "rendered": {
                      "text": "cies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\thttps://download.falco.org/dependencies/libasan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-4_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gc",
                      "markdown": "`cies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\thttps://download.falco.org/dependencies/libasan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-4_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gc`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 3,
                  "endLine": 76,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ncies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\thttps://download.falco.org/dependencies/libasan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-4_${TARGETARCH",
                    "rendered": {
                      "text": "ncies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\thttps://download.falco.org/dependencies/libasan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-4_${TARGETARCH",
                      "markdown": "`ncies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\thttps://download.falco.org/dependencies/libasan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-4_${TARGETARCH`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 3,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ibmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\thttps://download.falco.org/dependencies/libasan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb ht",
                    "rendered": {
                      "text": "ibmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\thttps://download.falco.org/dependencies/libasan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb ht",
                      "markdown": "`ibmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\thttps://download.falco.org/dependencies/libasan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb ht`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 3,
                  "endLine": 74,
                  "endColumn": 9,
                  "snippet": {
                    "text": "0Z.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libmpx0_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\tht",
                    "rendered": {
                      "text": "0Z.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libmpx0_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\tht",
                      "markdown": "`0Z.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libmpx0_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan2_5.5.0-12_${TARGETARCH}.deb\tht`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 3,
                  "endLine": 73,
                  "endColumn": 9,
                  "snippet": {
                    "text": "o grab copies we've saved from debian\n# snapshots with the prefix https://snapshot.debian.org/archive/debian/20190122T000000Z.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libmpx0_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https",
                    "rendered": {
                      "text": "o grab copies we've saved from debian\n# snapshots with the prefix https://snapshot.debian.org/archive/debian/20190122T000000Z.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libmpx0_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https",
                      "markdown": "`o grab copies we've saved from debian\n# snapshots with the prefix https://snapshot.debian.org/archive/debian/20190122T000000Z.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libmpx0_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 40,
                  "endLine": 72,
                  "endColumn": 46,
                  "snippet": {
                    "text": "ian stable, but we need it to\n# build centos kernels, which are 3.x based and explicitly want a gcc\n# version 3, 4, or 5 compiler. So grab copies we've saved from debian\n# snapshots with the prefix https://snapshot.debian.org/archive/debian/20190122T000000Z.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libmpx0_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb h",
                    "rendered": {
                      "text": "ian stable, but we need it to\n# build centos kernels, which are 3.x based and explicitly want a gcc\n# version 3, 4, or 5 compiler. So grab copies we've saved from debian\n# snapshots with the prefix https://snapshot.debian.org/archive/debian/20190122T000000Z.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libmpx0_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb h",
                      "markdown": "`ian stable, but we need it to\n# build centos kernels, which are 3.x based and explicitly want a gcc\n# version 3, 4, or 5 compiler. So grab copies we've saved from debian\n# snapshots with the prefix https://snapshot.debian.org/archive/debian/20190122T000000Z.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libmpx0_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb h`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 3,
                  "endLine": 64,
                  "endColumn": 9,
                  "snippet": {
                    "text": "pendencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb libubsan0_6.3.0-18_${TARGETARCH}.deb libmpfr4_3.1.3-2_${TARGETARCH}.deb libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& rm -f cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb",
                    "rendered": {
                      "text": "pendencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb libubsan0_6.3.0-18_${TARGETARCH}.deb libmpfr4_3.1.3-2_${TARGETARCH}.deb libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& rm -f cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb",
                      "markdown": "`pendencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb libubsan0_6.3.0-18_${TARGETARCH}.deb libmpfr4_3.1.3-2_${TARGETARCH}.deb libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& rm -f cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 40,
                  "endLine": 63,
                  "endColumn": 46,
                  "snippet": {
                    "text": "l15_0.18-1_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb libubsan0_6.3.0-18_${TARGETARCH}.deb libmpfr4_3.1.3-2_${TARGETARCH}.deb libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& rm -f cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.",
                    "rendered": {
                      "text": "l15_0.18-1_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb libubsan0_6.3.0-18_${TARGETARCH}.deb libmpfr4_3.1.3-2_${TARGETARCH}.deb libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& rm -f cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.",
                      "markdown": "`l15_0.18-1_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb libubsan0_6.3.0-18_${TARGETARCH}.deb libmpfr4_3.1.3-2_${TARGETARCH}.deb libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& rm -f cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 3,
                  "endLine": 62,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ncies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpfr4_3.1.3-2_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-1_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb libubsa",
                    "rendered": {
                      "text": "ncies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpfr4_3.1.3-2_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-1_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb libubsa",
                      "markdown": "`ncies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpfr4_3.1.3-2_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-1_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb libubsa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 3,
                  "endLine": 61,
                  "endColumn": 9,
                  "snippet": {
                    "text": "gcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpfr4_3.1.3-2_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-1_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd",
                    "rendered": {
                      "text": "gcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpfr4_3.1.3-2_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-1_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd",
                      "markdown": "`gcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpfr4_3.1.3-2_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-1_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 3,
                  "endLine": 60,
                  "endColumn": 9,
                  "snippet": {
                    "text": "6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpfr4_3.1.3-2_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-1_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6",
                    "rendered": {
                      "text": "6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpfr4_3.1.3-2_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-1_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6",
                      "markdown": "`6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpfr4_3.1.3-2_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-1_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 3,
                  "endLine": 59,
                  "endColumn": 9,
                  "snippet": {
                    "text": "6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan3_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpfr4_3.1.3-2_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-1_${TARGETARCH}.deb ht",
                    "rendered": {
                      "text": "6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan3_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpfr4_3.1.3-2_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-1_${TARGETARCH}.deb ht",
                      "markdown": "`6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan3_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpfr4_3.1.3-2_${TARGETARCH}.deb \\\n\t&& curl -L -o libisl15_0.18-1_${TARGETARCH}.deb ht`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 3,
                  "endLine": 58,
                  "endColumn": 9,
                  "snippet": {
                    "text": "cies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan3_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETA",
                    "rendered": {
                      "text": "cies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan3_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETA",
                      "markdown": "`cies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan3_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libmpfr4_3.1.3-2_${TARGETA`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 3,
                  "endLine": 57,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ncies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan3_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETA",
                    "rendered": {
                      "text": "ncies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan3_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETA",
                      "markdown": "`ncies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan3_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libubsan0_6.3.0-18_${TARGETA`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 3,
                  "endLine": 56,
                  "endColumn": 9,
                  "snippet": {
                    "text": "lkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan3_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb ht",
                    "rendered": {
                      "text": "lkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan3_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb ht",
                      "markdown": "`lkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan3_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb ht`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 3,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": " if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libcilkrts5_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb ht",
                    "rendered": {
                      "text": " if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libcilkrts5_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb ht",
                      "markdown": "` if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libcilkrts5_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o libasan3_6.3.0-18_${TARGETARCH}.deb ht`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 3,
                  "endLine": 54,
                  "endColumn": 9,
                  "snippet": {
                    "text": "'ve saved from debian snapshots with the\n# prefix https://snapshot.debian.org/archive/debian/20170517T033514Z\n# or so.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libcilkrts5_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https",
                    "rendered": {
                      "text": "'ve saved from debian snapshots with the\n# prefix https://snapshot.debian.org/archive/debian/20170517T033514Z\n# or so.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libcilkrts5_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https",
                      "markdown": "`'ve saved from debian snapshots with the\n# prefix https://snapshot.debian.org/archive/debian/20170517T033514Z\n# or so.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libcilkrts5_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 40,
                  "endLine": 53,
                  "endColumn": 46,
                  "snippet": {
                    "text": "longer included in debian stable, but we need it to\n# build kernel modules on the default debian-based ami used by\n# kops. So grab copies we've saved from debian snapshots with the\n# prefix https://snapshot.debian.org/archive/debian/20170517T033514Z\n# or so.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libcilkrts5_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARC",
                    "rendered": {
                      "text": "longer included in debian stable, but we need it to\n# build kernel modules on the default debian-based ami used by\n# kops. So grab copies we've saved from debian snapshots with the\n# prefix https://snapshot.debian.org/archive/debian/20170517T033514Z\n# or so.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libcilkrts5_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARC",
                      "markdown": "`longer included in debian stable, but we need it to\n# build kernel modules on the default debian-based ami used by\n# kops. So grab copies we've saved from debian snapshots with the\n# prefix https://snapshot.debian.org/archive/debian/20170517T033514Z\n# or so.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then curl -L -o libcilkrts5_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    curl -L -o cpp-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -L -o gcc-6-base_6.3.0-18_${TARGETARC`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 8,
                  "endLine": 44,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t&& rm -rf /var/lib/apt/lists/*\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; \\\n    then apt-get install -y --no-install-recommends libmpx2; \\\n    fi\n\n# gcc 6 is no longer included in debian stable, but we need it to\n",
                    "rendered": {
                      "text": "\t&& rm -rf /var/lib/apt/lists/*\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; \\\n    then apt-get install -y --no-install-recommends libmpx2; \\\n    fi\n\n# gcc 6 is no longer included in debian stable, but we need it to\n",
                      "markdown": "`\t&& rm -rf /var/lib/apt/lists/*\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; \\\n    then apt-get install -y --no-install-recommends libmpx2; \\\n    fi\n\n# gcc 6 is no longer included in debian stable, but we need it to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tbison \\\n\tclang-7 \\\n\tca-certificates \\\n\tcurl \\\n\tdkms \\\n\tflex \\\n\tgnupg2 \\\n",
                    "rendered": {
                      "text": "\tbison \\\n\tclang-7 \\\n\tca-certificates \\\n\tcurl \\\n\tdkms \\\n\tflex \\\n\tgnupg2 \\\n",
                      "markdown": "`\tbison \\\n\tclang-7 \\\n\tca-certificates \\\n\tcurl \\\n\tdkms \\\n\tflex \\\n\tgnupg2 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 12,
                  "snippet": {
                    "text": "RUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbash-completion \\\n\tbc \\\n\tbison \\\n",
                    "rendered": {
                      "text": "RUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbash-completion \\\n\tbc \\\n\tbison \\\n",
                      "markdown": "`RUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbash-completion \\\n\tbc \\\n\tbison \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 20,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbash-completion \\\n\tbc \\\n",
                    "rendered": {
                      "text": "\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbash-completion \\\n\tbc \\\n",
                      "markdown": "`\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbash-completion \\\n\tbc \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 33,
                  "endLine": 18,
                  "endColumn": 37,
                  "snippet": {
                    "text": "ENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n",
                    "rendered": {
                      "text": "ENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n",
                      "markdown": "`ENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 7,
                  "snippet": {
                    "text": "ENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n",
                    "rendered": {
                      "text": "ENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n",
                      "markdown": "`ENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 19,
                  "endLine": 16,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\n",
                    "rendered": {
                      "text": "ENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\n",
                      "markdown": "`ENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n",
                    "rendered": {
                      "text": "ARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n",
                      "markdown": "`ARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 14,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG FALCO_VERSION=latest\nARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\n",
                    "rendered": {
                      "text": "ARG FALCO_VERSION=latest\nARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\n",
                      "markdown": "`ARG FALCO_VERSION=latest\nARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 22,
                  "endLine": 12,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG TARGETARCH\n\nARG FALCO_VERSION=latest\nARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\n",
                    "rendered": {
                      "text": "ARG TARGETARCH\n\nARG FALCO_VERSION=latest\nARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\n",
                      "markdown": "`ARG TARGETARCH\n\nARG FALCO_VERSION=latest\nARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                      "markdown": "`#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 50,
                  "endLine": 38,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\techo \"  --compile        try to compile the driver locally (default true)\"\n\techo \"  --download       try to download a prebuilt driver (default true)\"\n \techo \"  --http-insecure\t enable insecure downloads\"\n\techo \"  --print-env      skip execution and print env variables for other tools to consume\"\n\techo \"\"\n\techo \"Environment variables:\"\n\techo \"  FALCOCTL_DRIVER_REPOS         specify different URL(s) where to look for prebuilt Falco drivers (comma separated)\"\n",
                    "rendered": {
                      "text": "\techo \"  --compile        try to compile the driver locally (default true)\"\n\techo \"  --download       try to download a prebuilt driver (default true)\"\n \techo \"  --http-insecure\t enable insecure downloads\"\n\techo \"  --print-env      skip execution and print env variables for other tools to consume\"\n\techo \"\"\n\techo \"Environment variables:\"\n\techo \"  FALCOCTL_DRIVER_REPOS         specify different URL(s) where to look for prebuilt Falco drivers (comma separated)\"\n",
                      "markdown": "`\techo \"  --compile        try to compile the driver locally (default true)\"\n\techo \"  --download       try to download a prebuilt driver (default true)\"\n \techo \"  --http-insecure\t enable insecure downloads\"\n\techo \"  --print-env      skip execution and print env variables for other tools to consume\"\n\techo \"\"\n\techo \"Environment variables:\"\n\techo \"  FALCOCTL_DRIVER_REPOS         specify different URL(s) where to look for prebuilt Falco drivers (comma separated)\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 8,
                  "endLine": 24,
                  "endColumn": 16,
                  "snippet": {
                    "text": "print_usage() {\n\techo \"\"\n\techo \"Usage:\"\n\techo \"  docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro falcosecurity/falco-driver-loader-legacy:latest [driver] [options]\"\n\techo \"\"\n\techo \"Available drivers:\"\n\techo \"  auto\t       leverage automatic driver selection logic (default)\"\n",
                    "rendered": {
                      "text": "print_usage() {\n\techo \"\"\n\techo \"Usage:\"\n\techo \"  docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro falcosecurity/falco-driver-loader-legacy:latest [driver] [options]\"\n\techo \"\"\n\techo \"Available drivers:\"\n\techo \"  auto\t       leverage automatic driver selection logic (default)\"\n",
                      "markdown": "`print_usage() {\n\techo \"\"\n\techo \"Usage:\"\n\techo \"  docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro falcosecurity/falco-driver-loader-legacy:latest [driver] [options]\"\n\techo \"\"\n\techo \"Available drivers:\"\n\techo \"  auto\t       leverage automatic driver selection logic (default)\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader-legacy/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                      "markdown": "`#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader/Dockerfile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 19,
                  "endLine": 10,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nLABEL usage=\"docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro --name NAME IMAGE\"\n\nENV HOST_ROOT /host\nENV HOME /root\n\nCOPY ./docker-entrypoint.sh /\n\n",
                    "rendered": {
                      "text": "\nLABEL usage=\"docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro --name NAME IMAGE\"\n\nENV HOST_ROOT /host\nENV HOME /root\n\nCOPY ./docker-entrypoint.sh /\n\n",
                      "markdown": "`\nLABEL usage=\"docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro --name NAME IMAGE\"\n\nENV HOST_ROOT /host\nENV HOME /root\n\nCOPY ./docker-entrypoint.sh /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader/Dockerfile"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 9,
                  "endColumn": 4,
                  "snippet": {
                    "text": "LABEL org.opencontainers.image.source=\"https://github.com/falcosecurity/falco\"\n\nLABEL usage=\"docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro --name NAME IMAGE\"\n\nENV HOST_ROOT /host\nENV HOME /root\n\nCOPY ./docker-entrypoint.sh /\n",
                    "rendered": {
                      "text": "LABEL org.opencontainers.image.source=\"https://github.com/falcosecurity/falco\"\n\nLABEL usage=\"docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro --name NAME IMAGE\"\n\nENV HOST_ROOT /host\nENV HOME /root\n\nCOPY ./docker-entrypoint.sh /\n",
                      "markdown": "`LABEL org.opencontainers.image.source=\"https://github.com/falcosecurity/falco\"\n\nLABEL usage=\"docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro --name NAME IMAGE\"\n\nENV HOST_ROOT /host\nENV HOME /root\n\nCOPY ./docker-entrypoint.sh /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 12,
                  "endLine": 159,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          output: ./notes.md\n        \n      - name: Merge release notes to pre existent body\n        run: cat notes.md >> release-body.md\n        \n      - name: Attach release creator to release body\n        run: |\n",
                    "rendered": {
                      "text": "          output: ./notes.md\n        \n      - name: Merge release notes to pre existent body\n        run: cat notes.md >> release-body.md\n        \n      - name: Attach release creator to release body\n        run: |\n",
                      "markdown": "`          output: ./notes.md\n        \n      - name: Merge release notes to pre existent body\n        run: cat notes.md >> release-body.md\n        \n      - name: Attach release creator to release body\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 9,
                  "endLine": 150,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: Append release matrixes\n        run: |\n          sed -i s/FALCOBUCKET/${{ needs.release-settings.outputs.bucket_suffix }}/g release-body.md\n          sed -i s/FALCOVER/${{ github.event.release.tag_name }}/g release-body.md\n          \n      - name: Generate release notes\n        uses: leodido/rn2md@9c351d81278644c0e17b1ca68edbdba305276c73\n",
                    "rendered": {
                      "text": "      - name: Append release matrixes\n        run: |\n          sed -i s/FALCOBUCKET/${{ needs.release-settings.outputs.bucket_suffix }}/g release-body.md\n          sed -i s/FALCOVER/${{ github.event.release.tag_name }}/g release-body.md\n          \n      - name: Generate release notes\n        uses: leodido/rn2md@9c351d81278644c0e17b1ca68edbdba305276c73\n",
                      "markdown": "`      - name: Append release matrixes\n        run: |\n          sed -i s/FALCOBUCKET/${{ needs.release-settings.outputs.bucket_suffix }}/g release-body.md\n          sed -i s/FALCOVER/${{ github.event.release.tag_name }}/g release-body.md\n          \n      - name: Generate release notes\n        uses: leodido/rn2md@9c351d81278644c0e17b1ca68edbdba305276c73\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 9,
                  "endLine": 149,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          \n      - name: Append release matrixes\n        run: |\n          sed -i s/FALCOBUCKET/${{ needs.release-settings.outputs.bucket_suffix }}/g release-body.md\n          sed -i s/FALCOVER/${{ github.event.release.tag_name }}/g release-body.md\n          \n      - name: Generate release notes\n",
                    "rendered": {
                      "text": "          \n      - name: Append release matrixes\n        run: |\n          sed -i s/FALCOBUCKET/${{ needs.release-settings.outputs.bucket_suffix }}/g release-body.md\n          sed -i s/FALCOVER/${{ github.event.release.tag_name }}/g release-body.md\n          \n      - name: Generate release notes\n",
                      "markdown": "`          \n      - name: Append release matrixes\n        run: |\n          sed -i s/FALCOBUCKET/${{ needs.release-settings.outputs.bucket_suffix }}/g release-body.md\n          sed -i s/FALCOVER/${{ github.event.release.tag_name }}/g release-body.md\n          \n      - name: Generate release notes\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 9,
                  "endLine": 145,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n      - name: Append release matrixes\n        run: |\n",
                    "rendered": {
                      "text": "          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n      - name: Append release matrixes\n        run: |\n",
                      "markdown": "`          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n      - name: Append release matrixes\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 9,
                  "endLine": 144,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n      - name: Append release matrixes\n",
                    "rendered": {
                      "text": "          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n      - name: Append release matrixes\n",
                      "markdown": "`          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n      - name: Append release matrixes\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 95,
                  "endLine": 143,
                  "endColumn": 101,
                  "snippet": {
                    "text": "        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n",
                    "rendered": {
                      "text": "        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n",
                      "markdown": "`        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 84,
                  "endLine": 143,
                  "endColumn": 90,
                  "snippet": {
                    "text": "        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n",
                    "rendered": {
                      "text": "        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n",
                      "markdown": "`        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 56,
                  "endLine": 143,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n",
                    "rendered": {
                      "text": "        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n",
                      "markdown": "`        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n          \n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 117,
                  "endLine": 142,
                  "endColumn": 123,
                  "snippet": {
                    "text": "      - name: Extract LIBS and DRIVER versions\n        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n",
                    "rendered": {
                      "text": "      - name: Extract LIBS and DRIVER versions\n        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n",
                      "markdown": "`      - name: Extract LIBS and DRIVER versions\n        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 106,
                  "endLine": 142,
                  "endColumn": 112,
                  "snippet": {
                    "text": "      - name: Extract LIBS and DRIVER versions\n        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n",
                    "rendered": {
                      "text": "      - name: Extract LIBS and DRIVER versions\n        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n",
                      "markdown": "`      - name: Extract LIBS and DRIVER versions\n        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 66,
                  "endLine": 142,
                  "endColumn": 72,
                  "snippet": {
                    "text": "      - name: Extract LIBS and DRIVER versions\n        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n",
                    "rendered": {
                      "text": "      - name: Extract LIBS and DRIVER versions\n        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n",
                      "markdown": "`      - name: Extract LIBS and DRIVER versions\n        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n          sed -i s/DRIVERVER/$DRIVER_VERS/g release-body.md\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 9,
                  "endLine": 141,
                  "endColumn": 13,
                  "snippet": {
                    "text": "          \n      - name: Extract LIBS and DRIVER versions\n        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n",
                    "rendered": {
                      "text": "          \n      - name: Extract LIBS and DRIVER versions\n        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n",
                      "markdown": "`          \n      - name: Extract LIBS and DRIVER versions\n        run: |\n          cp .github/release_template.md release-body.md\n          LIBS_VERS=$(cat cmake/modules/falcosecurity-libs.cmake | grep 'set(FALCOSECURITY_LIBS_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*')\n          DRIVER_VERS=$(cat cmake/modules/driver.cmake | grep 'set(DRIVER_VERSION' | tail -n1 | grep -o '[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*+driver')\n          sed -i s/LIBSVER/$LIBS_VERS/g release-body.md\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 26,
                  "endLine": 1,
                  "endColumn": 34,
                  "snippet": {
                    "text": "name: Release Packages and Docker images\non:\n  release:\n    types: [published]\n",
                    "rendered": {
                      "text": "name: Release Packages and Docker images\non:\n  release:\n    types: [published]\n",
                      "markdown": "`name: Release Packages and Docker images\non:\n  release:\n    types: [published]\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_fetch_version.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 18,
                  "endLine": 32,
                  "snippet": {
                    "text": "\n      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo apt install -y cmake build-essential\n\n      - name: Configure project\n        run: |\n",
                    "rendered": {
                      "text": "\n      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo apt install -y cmake build-essential\n\n      - name: Configure project\n        run: |\n",
                      "markdown": "`\n      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo apt install -y cmake build-essential\n\n      - name: Configure project\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_fetch_version.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 108,
                  "endLine": 41,
                  "endColumn": 113,
                  "snippet": {
                    "text": "      - name: Load and store Falco version output\n        id: store_version\n        run: |\n          FALCO_VERSION=$(cat build/userspace/falco/config_falco.h | grep 'FALCO_VERSION ' | cut -d' ' -f3 | sed -e 's/^\"//' -e 's/\"$//')\n          echo \"version=${FALCO_VERSION}\" >> $GITHUB_OUTPUT\n",
                    "rendered": {
                      "text": "      - name: Load and store Falco version output\n        id: store_version\n        run: |\n          FALCO_VERSION=$(cat build/userspace/falco/config_falco.h | grep 'FALCO_VERSION ' | cut -d' ' -f3 | sed -e 's/^\"//' -e 's/\"$//')\n          echo \"version=${FALCO_VERSION}\" >> $GITHUB_OUTPUT\n",
                      "markdown": "`      - name: Load and store Falco version output\n        id: store_version\n        run: |\n          FALCO_VERSION=$(cat build/userspace/falco/config_falco.h | grep 'FALCO_VERSION ' | cut -d' ' -f3 | sed -e 's/^\"//' -e 's/\"$//')\n          echo \"version=${FALCO_VERSION}\" >> $GITHUB_OUTPUT\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_fetch_version.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 92,
                  "endLine": 41,
                  "endColumn": 97,
                  "snippet": {
                    "text": "      - name: Load and store Falco version output\n        id: store_version\n        run: |\n          FALCO_VERSION=$(cat build/userspace/falco/config_falco.h | grep 'FALCO_VERSION ' | cut -d' ' -f3 | sed -e 's/^\"//' -e 's/\"$//')\n          echo \"version=${FALCO_VERSION}\" >> $GITHUB_OUTPUT\n",
                    "rendered": {
                      "text": "      - name: Load and store Falco version output\n        id: store_version\n        run: |\n          FALCO_VERSION=$(cat build/userspace/falco/config_falco.h | grep 'FALCO_VERSION ' | cut -d' ' -f3 | sed -e 's/^\"//' -e 's/\"$//')\n          echo \"version=${FALCO_VERSION}\" >> $GITHUB_OUTPUT\n",
                      "markdown": "`      - name: Load and store Falco version output\n        id: store_version\n        run: |\n          FALCO_VERSION=$(cat build/userspace/falco/config_falco.h | grep 'FALCO_VERSION ' | cut -d' ' -f3 | sed -e 's/^\"//' -e 's/\"$//')\n          echo \"version=${FALCO_VERSION}\" >> $GITHUB_OUTPUT\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_fetch_version.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 68,
                  "endLine": 41,
                  "endColumn": 74,
                  "snippet": {
                    "text": "      - name: Load and store Falco version output\n        id: store_version\n        run: |\n          FALCO_VERSION=$(cat build/userspace/falco/config_falco.h | grep 'FALCO_VERSION ' | cut -d' ' -f3 | sed -e 's/^\"//' -e 's/\"$//')\n          echo \"version=${FALCO_VERSION}\" >> $GITHUB_OUTPUT\n",
                    "rendered": {
                      "text": "      - name: Load and store Falco version output\n        id: store_version\n        run: |\n          FALCO_VERSION=$(cat build/userspace/falco/config_falco.h | grep 'FALCO_VERSION ' | cut -d' ' -f3 | sed -e 's/^\"//' -e 's/\"$//')\n          echo \"version=${FALCO_VERSION}\" >> $GITHUB_OUTPUT\n",
                      "markdown": "`      - name: Load and store Falco version output\n        id: store_version\n        run: |\n          FALCO_VERSION=$(cat build/userspace/falco/config_falco.h | grep 'FALCO_VERSION ' | cut -d' ' -f3 | sed -e 's/^\"//' -e 's/\"$//')\n          echo \"version=${FALCO_VERSION}\" >> $GITHUB_OUTPUT\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_fetch_version.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 14,
                  "endLine": 32,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo apt install -y cmake build-essential\n\n      - name: Configure project\n        run: |\n",
                    "rendered": {
                      "text": "      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo apt install -y cmake build-essential\n\n      - name: Configure project\n        run: |\n",
                      "markdown": "`      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo apt install -y cmake build-essential\n\n      - name: Configure project\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_fetch_version.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 14,
                  "endLine": 31,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo apt install -y cmake build-essential\n\n      - name: Configure project\n",
                    "rendered": {
                      "text": "\n      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo apt install -y cmake build-essential\n\n      - name: Configure project\n",
                      "markdown": "`\n      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo apt install -y cmake build-essential\n\n      - name: Configure project\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_fetch_version.yaml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 27,
                  "endLine": 16,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  # We need to use an ubuntu-latest to fetch Falco version because\n  # Falco version is computed by some cmake scripts that do git sorceries\n  # to get the current version.\n  # But centos7 jobs have a git version too old and actions/checkout does not\n  # fully clone the repo, but uses http rest api instead.\n  fetch-version:\n    runs-on: ubuntu-latest\n",
                    "rendered": {
                      "text": "  # We need to use an ubuntu-latest to fetch Falco version because\n  # Falco version is computed by some cmake scripts that do git sorceries\n  # to get the current version.\n  # But centos7 jobs have a git version too old and actions/checkout does not\n  # fully clone the repo, but uses http rest api instead.\n  fetch-version:\n    runs-on: ubuntu-latest\n",
                      "markdown": "`  # We need to use an ubuntu-latest to fetch Falco version because\n  # Falco version is computed by some cmake scripts that do git sorceries\n  # to get the current version.\n  # But centos7 jobs have a git version too old and actions/checkout does not\n  # fully clone the repo, but uses http rest api instead.\n  fetch-version:\n    runs-on: ubuntu-latest\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_fetch_version.yaml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 59,
                  "endLine": 14,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\njobs:\n  # We need to use an ubuntu-latest to fetch Falco version because\n  # Falco version is computed by some cmake scripts that do git sorceries\n  # to get the current version.\n  # But centos7 jobs have a git version too old and actions/checkout does not\n  # fully clone the repo, but uses http rest api instead.\n",
                    "rendered": {
                      "text": "\njobs:\n  # We need to use an ubuntu-latest to fetch Falco version because\n  # Falco version is computed by some cmake scripts that do git sorceries\n  # to get the current version.\n  # But centos7 jobs have a git version too old and actions/checkout does not\n  # fully clone the repo, but uses http rest api instead.\n",
                      "markdown": "`\njobs:\n  # We need to use an ubuntu-latest to fetch Falco version because\n  # Falco version is computed by some cmake scripts that do git sorceries\n  # to get the current version.\n  # But centos7 jobs have a git version too old and actions/checkout does not\n  # fully clone the repo, but uses http rest api instead.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_dev.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 21,
                  "endLine": 53,
                  "endColumn": 29,
                  "snippet": {
                    "text": "          ref: ${{ inputs.git_ref }}\n\n      - name: Update base image\n        run: sudo apt update -y\n\n      - name: Install build dependencies\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libelf-dev libyaml-cpp-dev cmake build-essential git -y\n",
                    "rendered": {
                      "text": "          ref: ${{ inputs.git_ref }}\n\n      - name: Update base image\n        run: sudo apt update -y\n\n      - name: Install build dependencies\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libelf-dev libyaml-cpp-dev cmake build-essential git -y\n",
                      "markdown": "`          ref: ${{ inputs.git_ref }}\n\n      - name: Update base image\n        run: sudo apt update -y\n\n      - name: Install build dependencies\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libelf-dev libyaml-cpp-dev cmake build-essential git -y\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_dev.yaml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 13,
                  "endLine": 52,
                  "endColumn": 21,
                  "snippet": {
                    "text": "          fetch-depth: 0\n          ref: ${{ inputs.git_ref }}\n\n      - name: Update base image\n        run: sudo apt update -y\n\n      - name: Install build dependencies\n",
                    "rendered": {
                      "text": "          fetch-depth: 0\n          ref: ${{ inputs.git_ref }}\n\n      - name: Update base image\n        run: sudo apt update -y\n\n      - name: Install build dependencies\n",
                      "markdown": "`          fetch-depth: 0\n          ref: ${{ inputs.git_ref }}\n\n      - name: Update base image\n        run: sudo apt update -y\n\n      - name: Install build dependencies\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_dev.yaml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 156,
                  "endLine": 60,
                  "endColumn": 161,
                  "snippet": {
                    "text": "\n      - name: Install build dependencies (non-minimal)\n        if: inputs.minimal != true\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libgrpc++-dev protobuf-compiler-grpc rpm libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm -y\n\n      - name: Prepare project\n        run: |\n",
                    "rendered": {
                      "text": "\n      - name: Install build dependencies (non-minimal)\n        if: inputs.minimal != true\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libgrpc++-dev protobuf-compiler-grpc rpm libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm -y\n\n      - name: Prepare project\n        run: |\n",
                      "markdown": "`\n      - name: Install build dependencies (non-minimal)\n        if: inputs.minimal != true\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libgrpc++-dev protobuf-compiler-grpc rpm libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm -y\n\n      - name: Prepare project\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_dev.yaml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 48,
                  "endLine": 60,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n      - name: Install build dependencies (non-minimal)\n        if: inputs.minimal != true\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libgrpc++-dev protobuf-compiler-grpc rpm libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm -y\n\n      - name: Prepare project\n        run: |\n",
                    "rendered": {
                      "text": "\n      - name: Install build dependencies (non-minimal)\n        if: inputs.minimal != true\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libgrpc++-dev protobuf-compiler-grpc rpm libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm -y\n\n      - name: Prepare project\n        run: |\n",
                      "markdown": "`\n      - name: Install build dependencies (non-minimal)\n        if: inputs.minimal != true\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libgrpc++-dev protobuf-compiler-grpc rpm libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm -y\n\n      - name: Prepare project\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_dev.yaml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 109,
                  "endLine": 56,
                  "endColumn": 114,
                  "snippet": {
                    "text": "        run: sudo apt update -y\n\n      - name: Install build dependencies\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libelf-dev libyaml-cpp-dev cmake build-essential git -y\n\n      - name: Install build dependencies (non-minimal)\n        if: inputs.minimal != true\n",
                    "rendered": {
                      "text": "        run: sudo apt update -y\n\n      - name: Install build dependencies\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libelf-dev libyaml-cpp-dev cmake build-essential git -y\n\n      - name: Install build dependencies (non-minimal)\n        if: inputs.minimal != true\n",
                      "markdown": "`        run: sudo apt update -y\n\n      - name: Install build dependencies\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libelf-dev libyaml-cpp-dev cmake build-essential git -y\n\n      - name: Install build dependencies (non-minimal)\n        if: inputs.minimal != true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_dev.yaml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 48,
                  "endLine": 56,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        run: sudo apt update -y\n\n      - name: Install build dependencies\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libelf-dev libyaml-cpp-dev cmake build-essential git -y\n\n      - name: Install build dependencies (non-minimal)\n        if: inputs.minimal != true\n",
                    "rendered": {
                      "text": "        run: sudo apt update -y\n\n      - name: Install build dependencies\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libelf-dev libyaml-cpp-dev cmake build-essential git -y\n\n      - name: Install build dependencies (non-minimal)\n        if: inputs.minimal != true\n",
                      "markdown": "`        run: sudo apt update -y\n\n      - name: Install build dependencies\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libelf-dev libyaml-cpp-dev cmake build-essential git -y\n\n      - name: Install build dependencies (non-minimal)\n        if: inputs.minimal != true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_dev.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 17,
                  "endLine": 53,
                  "endColumn": 22,
                  "snippet": {
                    "text": "          ref: ${{ inputs.git_ref }}\n\n      - name: Update base image\n        run: sudo apt update -y\n\n      - name: Install build dependencies\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libelf-dev libyaml-cpp-dev cmake build-essential git -y\n",
                    "rendered": {
                      "text": "          ref: ${{ inputs.git_ref }}\n\n      - name: Update base image\n        run: sudo apt update -y\n\n      - name: Install build dependencies\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libelf-dev libyaml-cpp-dev cmake build-essential git -y\n",
                      "markdown": "`          ref: ${{ inputs.git_ref }}\n\n      - name: Update base image\n        run: sudo apt update -y\n\n      - name: Install build dependencies\n        run: sudo DEBIAN_FRONTEND=noninteractive apt install libelf-dev libyaml-cpp-dev cmake build-essential git -y\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_dev.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 20,
                  "endLine": 27,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        required: true\n        type: string\n      git_ref:\n        description: Git ref used for checking out the code\n        required: true\n        type: string\n      cmd:\n",
                    "rendered": {
                      "text": "        required: true\n        type: string\n      git_ref:\n        description: Git ref used for checking out the code\n        required: true\n        type: string\n      cmd:\n",
                      "markdown": "`        required: true\n        type: string\n      git_ref:\n        description: Git ref used for checking out the code\n        required: true\n        type: string\n      cmd:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/engine-version-weakcheck.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 39,
                  "endLine": 1,
                  "endColumn": 47,
                  "snippet": {
                    "text": "# NOTE: it is UNSAFE to run ANY kind of script when using the pull_request_target trigger!\n# DO NOT TOUCH THIS FILE UNLESS THE TRIGGER IS CHANGED.\n# See warning in https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request_target.\n\n",
                    "rendered": {
                      "text": "# NOTE: it is UNSAFE to run ANY kind of script when using the pull_request_target trigger!\n# DO NOT TOUCH THIS FILE UNLESS THE TRIGGER IS CHANGED.\n# See warning in https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request_target.\n\n",
                      "markdown": "`# NOTE: it is UNSAFE to run ANY kind of script when using the pull_request_target trigger!\n# DO NOT TOUCH THIS FILE UNLESS THE TRIGGER IS CHANGED.\n# See warning in https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request_target.\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/prerm.in"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/prerm.in"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 5,
                  "endLine": 32,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n      systemctl --system stop 'falcoctl-artifact-follow.service' || true\n\n      echo \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\n      falcoctl driver cleanup\n",
                    "rendered": {
                      "text": "      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n      systemctl --system stop 'falcoctl-artifact-follow.service' || true\n\n      echo \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\n      falcoctl driver cleanup\n",
                      "markdown": "`      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n      systemctl --system stop 'falcoctl-artifact-follow.service' || true\n\n      echo \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\n      falcoctl driver cleanup\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/prerm.in"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 5,
                  "endLine": 31,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      systemctl --system stop 'falco-kmod.service' || true\n      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n      systemctl --system stop 'falcoctl-artifact-follow.service' || true\n\n      echo \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\n",
                    "rendered": {
                      "text": "      systemctl --system stop 'falco-kmod.service' || true\n      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n      systemctl --system stop 'falcoctl-artifact-follow.service' || true\n\n      echo \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\n",
                      "markdown": "`      systemctl --system stop 'falco-kmod.service' || true\n      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n      systemctl --system stop 'falcoctl-artifact-follow.service' || true\n\n      echo \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/prerm.in"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 5,
                  "endLine": 30,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      echo \"[PRE-REMOVE] Stop all Falco services:\"\n      systemctl --system stop 'falco-kmod.service' || true\n      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n      systemctl --system stop 'falcoctl-artifact-follow.service' || true\n\n",
                    "rendered": {
                      "text": "      echo \"[PRE-REMOVE] Stop all Falco services:\"\n      systemctl --system stop 'falco-kmod.service' || true\n      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n      systemctl --system stop 'falcoctl-artifact-follow.service' || true\n\n",
                      "markdown": "`      echo \"[PRE-REMOVE] Stop all Falco services:\"\n      systemctl --system stop 'falco-kmod.service' || true\n      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n      systemctl --system stop 'falcoctl-artifact-follow.service' || true\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/prerm.in"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 5,
                  "endLine": 29,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    remove|upgrade|deconfigure)\n      echo \"[PRE-REMOVE] Stop all Falco services:\"\n      systemctl --system stop 'falco-kmod.service' || true\n      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n      systemctl --system stop 'falcoctl-artifact-follow.service' || true\n",
                    "rendered": {
                      "text": "    remove|upgrade|deconfigure)\n      echo \"[PRE-REMOVE] Stop all Falco services:\"\n      systemctl --system stop 'falco-kmod.service' || true\n      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n      systemctl --system stop 'falcoctl-artifact-follow.service' || true\n",
                      "markdown": "`    remove|upgrade|deconfigure)\n      echo \"[PRE-REMOVE] Stop all Falco services:\"\n      systemctl --system stop 'falco-kmod.service' || true\n      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n      systemctl --system stop 'falcoctl-artifact-follow.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/prerm.in"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 5,
                  "endLine": 28,
                  "endColumn": 16,
                  "snippet": {
                    "text": "case \"$1\" in\n    remove|upgrade|deconfigure)\n      echo \"[PRE-REMOVE] Stop all Falco services:\"\n      systemctl --system stop 'falco-kmod.service' || true\n      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n",
                    "rendered": {
                      "text": "case \"$1\" in\n    remove|upgrade|deconfigure)\n      echo \"[PRE-REMOVE] Stop all Falco services:\"\n      systemctl --system stop 'falco-kmod.service' || true\n      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n",
                      "markdown": "`case \"$1\" in\n    remove|upgrade|deconfigure)\n      echo \"[PRE-REMOVE] Stop all Falco services:\"\n      systemctl --system stop 'falco-kmod.service' || true\n      systemctl --system stop 'falco-bpf.service' || true\n      systemctl --system stop 'falco-modern-bpf.service' || true\n      systemctl --system stop 'falco-custom.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/prerm.in"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 25,
                  "endLine": 23,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n# Based off what debhelper dh_systemd_enable/13.3.4 would have added\n# ref: https://www.debian.org/doc/manuals/debmake-doc/ch05.en.html#debhelper\n# Currently running falco service uses the driver, so stop it before driver cleanup\n\ncase \"$1\" in\n    remove|upgrade|deconfigure)\n",
                    "rendered": {
                      "text": "\n# Based off what debhelper dh_systemd_enable/13.3.4 would have added\n# ref: https://www.debian.org/doc/manuals/debmake-doc/ch05.en.html#debhelper\n# Currently running falco service uses the driver, so stop it before driver cleanup\n\ncase \"$1\" in\n    remove|upgrade|deconfigure)\n",
                      "markdown": "`\n# Based off what debhelper dh_systemd_enable/13.3.4 would have added\n# ref: https://www.debian.org/doc/manuals/debmake-doc/ch05.en.html#debhelper\n# Currently running falco service uses the driver, so stop it before driver cleanup\n\ncase \"$1\" in\n    remove|upgrade|deconfigure)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postrm.in"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postrm.in"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 7,
                  "endLine": 34,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n        systemctl --system daemon-reload || true\nfi\n",
                    "rendered": {
                      "text": "        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n        systemctl --system daemon-reload || true\nfi\n",
                      "markdown": "`        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n        systemctl --system daemon-reload || true\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postrm.in"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 7,
                  "endLine": 31,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n        systemctl --system daemon-reload || true\n",
                    "rendered": {
                      "text": "        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n        systemctl --system daemon-reload || true\n",
                      "markdown": "`        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n        systemctl --system daemon-reload || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postrm.in"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 7,
                  "endLine": 30,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        systemctl --system disable 'falco-kmod.service' || true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n",
                    "rendered": {
                      "text": "        systemctl --system disable 'falco-kmod.service' || true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n",
                      "markdown": "`        systemctl --system disable 'falco-kmod.service' || true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postrm.in"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7,
                  "endLine": 29,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service' || true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n",
                    "rendered": {
                      "text": "        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service' || true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n",
                      "markdown": "`        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service' || true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postrm.in"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 7,
                  "endLine": 28,
                  "endColumn": 18,
                  "snippet": {
                    "text": "if [ -d /run/systemd/system ] && [ \"$1\" = remove ]; then\n        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service' || true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n",
                    "rendered": {
                      "text": "if [ -d /run/systemd/system ] && [ \"$1\" = remove ]; then\n        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service' || true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n",
                      "markdown": "`if [ -d /run/systemd/system ] && [ \"$1\" = remove ]; then\n        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service' || true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postrm.in"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 7,
                  "endLine": 27,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nif [ -d /run/systemd/system ] && [ \"$1\" = remove ]; then\n        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service' || true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n",
                    "rendered": {
                      "text": "\nif [ -d /run/systemd/system ] && [ \"$1\" = remove ]; then\n        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service' || true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n",
                      "markdown": "`\nif [ -d /run/systemd/system ] && [ \"$1\" = remove ]; then\n        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service' || true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/preuninstall.in"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 38,
                  "endLine": 9,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/preuninstall.in"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 6,
                  "snippet": {
                    "text": "falcoctl driver cleanup\n\n# validate rpm macros by `rpm -qp --scripts <rpm>`\n# RPM scriptlets: https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_systemd\n#                 https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_syntax\n\n# systemd_preun macro expands to\n",
                    "rendered": {
                      "text": "falcoctl driver cleanup\n\n# validate rpm macros by `rpm -qp --scripts <rpm>`\n# RPM scriptlets: https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_systemd\n#                 https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_syntax\n\n# systemd_preun macro expands to\n",
                      "markdown": "`falcoctl driver cleanup\n\n# validate rpm macros by `rpm -qp --scripts <rpm>`\n# RPM scriptlets: https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_systemd\n#                 https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_syntax\n\n# systemd_preun macro expands to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/preuninstall.in"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 10,
                  "endLine": 31,
                  "endColumn": 15,
                  "snippet": {
                    "text": "echo \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\nfalcoctl driver cleanup\n\n# validate rpm macros by `rpm -qp --scripts <rpm>`\n# RPM scriptlets: https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_systemd\n#                 https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_syntax\n\n",
                    "rendered": {
                      "text": "echo \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\nfalcoctl driver cleanup\n\n# validate rpm macros by `rpm -qp --scripts <rpm>`\n# RPM scriptlets: https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_systemd\n#                 https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_syntax\n\n",
                      "markdown": "`echo \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\nfalcoctl driver cleanup\n\n# validate rpm macros by `rpm -qp --scripts <rpm>`\n# RPM scriptlets: https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_systemd\n#                 https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_syntax\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/preuninstall.in"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 54,
                  "endLine": 26,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n\necho \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\nfalcoctl driver cleanup\n",
                    "rendered": {
                      "text": "systemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n\necho \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\nfalcoctl driver cleanup\n",
                      "markdown": "`systemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n\necho \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\nfalcoctl driver cleanup\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/preuninstall.in"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 58,
                  "endLine": 25,
                  "endColumn": 10,
                  "snippet": {
                    "text": "echo \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n\necho \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\n",
                    "rendered": {
                      "text": "echo \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n\necho \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\n",
                      "markdown": "`echo \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n\necho \"[PRE-REMOVE] Call 'falcoctl driver cleanup:'\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/preuninstall.in"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 51,
                  "endLine": 24,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# Currently running falco service uses the driver, so stop it before driver cleanup\necho \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n\n",
                    "rendered": {
                      "text": "# Currently running falco service uses the driver, so stop it before driver cleanup\necho \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n\n",
                      "markdown": "`# Currently running falco service uses the driver, so stop it before driver cleanup\necho \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/preuninstall.in"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 52,
                  "endLine": 23,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n# Currently running falco service uses the driver, so stop it before driver cleanup\necho \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n",
                    "rendered": {
                      "text": "\n# Currently running falco service uses the driver, so stop it before driver cleanup\necho \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n",
                      "markdown": "`\n# Currently running falco service uses the driver, so stop it before driver cleanup\necho \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/preuninstall.in"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 44,
                  "endLine": 22,
                  "endColumn": 10,
                  "snippet": {
                    "text": "set -e\n\n# Currently running falco service uses the driver, so stop it before driver cleanup\necho \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\n",
                    "rendered": {
                      "text": "set -e\n\n# Currently running falco service uses the driver, so stop it before driver cleanup\necho \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\n",
                      "markdown": "`set -e\n\n# Currently running falco service uses the driver, so stop it before driver cleanup\necho \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/preuninstall.in"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 25,
                  "endLine": 20,
                  "endColumn": 34,
                  "snippet": {
                    "text": "#\nset -e\n\n# Currently running falco service uses the driver, so stop it before driver cleanup\necho \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n",
                    "rendered": {
                      "text": "#\nset -e\n\n# Currently running falco service uses the driver, so stop it before driver cleanup\necho \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n",
                      "markdown": "`#\nset -e\n\n# Currently running falco service uses the driver, so stop it before driver cleanup\necho \"[PRE-REMOVE] Stop all Falco services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 38,
                  "endLine": 9,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 11,
                  "endLine": 151,
                  "endColumn": 22,
                  "snippet": {
                    "text": "            echo \"[POST-INSTALL] Enable 'falco-$chosen_unit.service':\"\n            systemctl --system enable \"falco-$chosen_unit.service\" || true\n            echo \"[POST-INSTALL] Start 'falco-$chosen_unit.service':\"\n            systemctl --system start \"falco-$chosen_unit.service\" || true\n        fi\nfi\n",
                    "rendered": {
                      "text": "            echo \"[POST-INSTALL] Enable 'falco-$chosen_unit.service':\"\n            systemctl --system enable \"falco-$chosen_unit.service\" || true\n            echo \"[POST-INSTALL] Start 'falco-$chosen_unit.service':\"\n            systemctl --system start \"falco-$chosen_unit.service\" || true\n        fi\nfi\n",
                      "markdown": "`            echo \"[POST-INSTALL] Enable 'falco-$chosen_unit.service':\"\n            systemctl --system enable \"falco-$chosen_unit.service\" || true\n            echo \"[POST-INSTALL] Start 'falco-$chosen_unit.service':\"\n            systemctl --system start \"falco-$chosen_unit.service\" || true\n        fi\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 11,
                  "endLine": 149,
                  "endColumn": 22,
                  "snippet": {
                    "text": "if [ $1 -ge 1 ]; then\n        if [ -n \"$chosen_unit\" ]; then\n            echo \"[POST-INSTALL] Enable 'falco-$chosen_unit.service':\"\n            systemctl --system enable \"falco-$chosen_unit.service\" || true\n            echo \"[POST-INSTALL] Start 'falco-$chosen_unit.service':\"\n            systemctl --system start \"falco-$chosen_unit.service\" || true\n        fi\n",
                    "rendered": {
                      "text": "if [ $1 -ge 1 ]; then\n        if [ -n \"$chosen_unit\" ]; then\n            echo \"[POST-INSTALL] Enable 'falco-$chosen_unit.service':\"\n            systemctl --system enable \"falco-$chosen_unit.service\" || true\n            echo \"[POST-INSTALL] Start 'falco-$chosen_unit.service':\"\n            systemctl --system start \"falco-$chosen_unit.service\" || true\n        fi\n",
                      "markdown": "`if [ $1 -ge 1 ]; then\n        if [ -n \"$chosen_unit\" ]; then\n            echo \"[POST-INSTALL] Enable 'falco-$chosen_unit.service':\"\n            systemctl --system enable \"falco-$chosen_unit.service\" || true\n            echo \"[POST-INSTALL] Start 'falco-$chosen_unit.service':\"\n            systemctl --system start \"falco-$chosen_unit.service\" || true\n        fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 1,
                  "endLine": 137,
                  "endColumn": 6,
                  "snippet": {
                    "text": "esac\n\n# validate rpm macros by `rpm -qp --scripts <rpm>`\n# RPM scriptlets: https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_systemd\n#                 https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_syntax\n\n# systemd_post macro expands to\n",
                    "rendered": {
                      "text": "esac\n\n# validate rpm macros by `rpm -qp --scripts <rpm>`\n# RPM scriptlets: https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_systemd\n#                 https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_syntax\n\n# systemd_post macro expands to\n",
                      "markdown": "`esac\n\n# validate rpm macros by `rpm -qp --scripts <rpm>`\n# RPM scriptlets: https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_systemd\n#                 https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_syntax\n\n# systemd_post macro expands to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 10,
                  "endLine": 136,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      ;;\nesac\n\n# validate rpm macros by `rpm -qp --scripts <rpm>`\n# RPM scriptlets: https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_systemd\n#                 https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_syntax\n\n",
                    "rendered": {
                      "text": "      ;;\nesac\n\n# validate rpm macros by `rpm -qp --scripts <rpm>`\n# RPM scriptlets: https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_systemd\n#                 https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_syntax\n\n",
                      "markdown": "`      ;;\nesac\n\n# validate rpm macros by `rpm -qp --scripts <rpm>`\n# RPM scriptlets: https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_systemd\n#                 https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_syntax\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 44,
                  "endLine": 116,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nset -e\n\necho \"[POST-INSTALL] Trigger deamon-reload:\"\nsystemctl --system daemon-reload || true\n\n# If needed, try to load/compile the driver through falcoctl\ncase \"$chosen_driver\" in\n",
                    "rendered": {
                      "text": "\nset -e\n\necho \"[POST-INSTALL] Trigger deamon-reload:\"\nsystemctl --system daemon-reload || true\n\n# If needed, try to load/compile the driver through falcoctl\ncase \"$chosen_driver\" in\n",
                      "markdown": "`\nset -e\n\necho \"[POST-INSTALL] Trigger deamon-reload:\"\nsystemctl --system daemon-reload || true\n\n# If needed, try to load/compile the driver through falcoctl\ncase \"$chosen_driver\" in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 19,
                  "endLine": 106,
                  "endColumn": 30,
                  "snippet": {
                    "text": "            case $CHOICE in\n                2)\n                    # we don't want falcoctl enabled, we mask it\n                    systemctl --system mask falcoctl-artifact-follow.service || true\n                ;;\n            esac\n        fi    \n",
                    "rendered": {
                      "text": "            case $CHOICE in\n                2)\n                    # we don't want falcoctl enabled, we mask it\n                    systemctl --system mask falcoctl-artifact-follow.service || true\n                ;;\n            esac\n        fi    \n",
                      "markdown": "`            case $CHOICE in\n                2)\n                    # we don't want falcoctl enabled, we mask it\n                    systemctl --system mask falcoctl-artifact-follow.service || true\n                ;;\n            esac\n        fi    \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 73,
                  "endLine": 87,
                  "endColumn": 78,
                  "snippet": {
                    "text": "                # Configure falcoctl to enable all drivers\n                falcoctl driver config --type \"modern_ebpf\" --type \"kmod\" --type \"ebpf\"\n                # Load the actually automatic chosen driver\n                chosen_driver=$(falcoctl driver printenv | grep DRIVER= | cut -d'\"' -f2)\n            else\n                falcoctl driver config --type \"$chosen_driver\"\n            fi\n",
                    "rendered": {
                      "text": "                # Configure falcoctl to enable all drivers\n                falcoctl driver config --type \"modern_ebpf\" --type \"kmod\" --type \"ebpf\"\n                # Load the actually automatic chosen driver\n                chosen_driver=$(falcoctl driver printenv | grep DRIVER= | cut -d'\"' -f2)\n            else\n                falcoctl driver config --type \"$chosen_driver\"\n            fi\n",
                      "markdown": "`                # Configure falcoctl to enable all drivers\n                falcoctl driver config --type \"modern_ebpf\" --type \"kmod\" --type \"ebpf\"\n                # Load the actually automatic chosen driver\n                chosen_driver=$(falcoctl driver printenv | grep DRIVER= | cut -d'\"' -f2)\n            else\n                falcoctl driver config --type \"$chosen_driver\"\n            fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 58,
                  "endLine": 87,
                  "endColumn": 64,
                  "snippet": {
                    "text": "                # Configure falcoctl to enable all drivers\n                falcoctl driver config --type \"modern_ebpf\" --type \"kmod\" --type \"ebpf\"\n                # Load the actually automatic chosen driver\n                chosen_driver=$(falcoctl driver printenv | grep DRIVER= | cut -d'\"' -f2)\n            else\n                falcoctl driver config --type \"$chosen_driver\"\n            fi\n",
                    "rendered": {
                      "text": "                # Configure falcoctl to enable all drivers\n                falcoctl driver config --type \"modern_ebpf\" --type \"kmod\" --type \"ebpf\"\n                # Load the actually automatic chosen driver\n                chosen_driver=$(falcoctl driver printenv | grep DRIVER= | cut -d'\"' -f2)\n            else\n                falcoctl driver config --type \"$chosen_driver\"\n            fi\n",
                      "markdown": "`                # Configure falcoctl to enable all drivers\n                falcoctl driver config --type \"modern_ebpf\" --type \"kmod\" --type \"ebpf\"\n                # Load the actually automatic chosen driver\n                chosen_driver=$(falcoctl driver printenv | grep DRIVER= | cut -d'\"' -f2)\n            else\n                falcoctl driver config --type \"$chosen_driver\"\n            fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 34,
                  "endLine": 38,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\nsystemctl --system unmask falcoctl-artifact-follow.service || true\n\nif [ $1 -ge 1 ]; then\n\t# \"auto\" case is not managed here since it is already the default, so no CHOICE=2\n",
                    "rendered": {
                      "text": "systemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\nsystemctl --system unmask falcoctl-artifact-follow.service || true\n\nif [ $1 -ge 1 ]; then\n\t# \"auto\" case is not managed here since it is already the default, so no CHOICE=2\n",
                      "markdown": "`systemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\nsystemctl --system unmask falcoctl-artifact-follow.service || true\n\nif [ $1 -ge 1 ]; then\n\t# \"auto\" case is not managed here since it is already the default, so no CHOICE=2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 57,
                  "endLine": 35,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\nsystemctl --system unmask falcoctl-artifact-follow.service || true\n",
                    "rendered": {
                      "text": "systemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\nsystemctl --system unmask falcoctl-artifact-follow.service || true\n",
                      "markdown": "`systemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\nsystemctl --system unmask falcoctl-artifact-follow.service || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 61,
                  "endLine": 34,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\n",
                    "rendered": {
                      "text": "systemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\n",
                      "markdown": "`systemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 54,
                  "endLine": 33,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n",
                    "rendered": {
                      "text": "systemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n",
                      "markdown": "`systemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 55,
                  "endLine": 32,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n",
                    "rendered": {
                      "text": "systemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n",
                      "markdown": "`systemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 66,
                  "endLine": 31,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\n",
                    "rendered": {
                      "text": "systemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\n",
                      "markdown": "`systemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 54,
                  "endLine": 30,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\n",
                    "rendered": {
                      "text": "systemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\n",
                      "markdown": "`systemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 58,
                  "endLine": 29,
                  "endColumn": 10,
                  "snippet": {
                    "text": "echo \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\n",
                    "rendered": {
                      "text": "echo \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\n",
                      "markdown": "`echo \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 51,
                  "endLine": 28,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\n",
                    "rendered": {
                      "text": "# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\n",
                      "markdown": "`# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 52,
                  "endLine": 27,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n",
                    "rendered": {
                      "text": "\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n",
                      "markdown": "`\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 67,
                  "endLine": 26,
                  "endColumn": 10,
                  "snippet": {
                    "text": "CHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\n",
                    "rendered": {
                      "text": "CHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\n",
                      "markdown": "`CHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 25,
                  "endLine": 24,
                  "endColumn": 33,
                  "snippet": {
                    "text": "chosen_unit=\nCHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n",
                    "rendered": {
                      "text": "chosen_unit=\nCHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n",
                      "markdown": "`chosen_unit=\nCHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postinstall.in"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 7,
                  "endLine": 24,
                  "endColumn": 13,
                  "snippet": {
                    "text": "chosen_unit=\nCHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n",
                    "rendered": {
                      "text": "chosen_unit=\nCHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n",
                      "markdown": "`chosen_unit=\nCHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible enabled 'falco' service:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-bin"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package.tar.gz> -r <bin|bin-dev> -a <arch>\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package.tar.gz> -r <bin|bin-dev> -a <arch>\"\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package.tar.gz> -r <bin|bin-dev> -a <arch>\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-bin"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 6,
                  "endLine": 50,
                  "endColumn": 10,
                  "snippet": {
                    "text": "package=$(basename -- ${file})\necho \"Publishing ${package} to ${s3_bucket_repo}...\"\naws s3 cp ${file} ${s3_bucket_repo}/${package} --acl public-read\naws s3 cp ${file}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n\naws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}\naws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}.asc\n",
                    "rendered": {
                      "text": "package=$(basename -- ${file})\necho \"Publishing ${package} to ${s3_bucket_repo}...\"\naws s3 cp ${file} ${s3_bucket_repo}/${package} --acl public-read\naws s3 cp ${file}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n\naws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}\naws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}.asc\n",
                      "markdown": "`package=$(basename -- ${file})\necho \"Publishing ${package} to ${s3_bucket_repo}...\"\naws s3 cp ${file} ${s3_bucket_repo}/${package} --acl public-read\naws s3 cp ${file}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n\naws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}\naws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}.asc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-bin"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 6,
                  "endLine": 49,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# publish\npackage=$(basename -- ${file})\necho \"Publishing ${package} to ${s3_bucket_repo}...\"\naws s3 cp ${file} ${s3_bucket_repo}/${package} --acl public-read\naws s3 cp ${file}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n\naws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}\n",
                    "rendered": {
                      "text": "# publish\npackage=$(basename -- ${file})\necho \"Publishing ${package} to ${s3_bucket_repo}...\"\naws s3 cp ${file} ${s3_bucket_repo}/${package} --acl public-read\naws s3 cp ${file}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n\naws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}\n",
                      "markdown": "`# publish\npackage=$(basename -- ${file})\necho \"Publishing ${package} to ${s3_bucket_repo}...\"\naws s3 cp ${file} ${s3_bucket_repo}/${package} --acl public-read\naws s3 cp ${file}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n\naws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-bin"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package.tar.gz> -r <bin|bin-dev> -a <arch>\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package.tar.gz> -r <bin|bin-dev> -a <arch>\"\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package.tar.gz> -r <bin|bin-dev> -a <arch>\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                      "markdown": "`#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 84,
                  "endLine": 25,
                  "endColumn": 90,
                  "snippet": {
                    "text": "cat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                    "rendered": {
                      "text": "cat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                      "markdown": "`cat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 77,
                  "endLine": 25,
                  "endColumn": 83,
                  "snippet": {
                    "text": "cat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                    "rendered": {
                      "text": "cat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                      "markdown": "`cat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 25,
                  "endColumn": 4,
                  "snippet": {
                    "text": "libsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                    "rendered": {
                      "text": "libsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                      "markdown": "`libsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 113,
                  "endLine": 23,
                  "endColumn": 119,
                  "snippet": {
                    "text": "parentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                    "rendered": {
                      "text": "parentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                      "markdown": "`parentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 106,
                  "endLine": 23,
                  "endColumn": 112,
                  "snippet": {
                    "text": "parentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                    "rendered": {
                      "text": "parentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                      "markdown": "`parentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 66,
                  "endLine": 23,
                  "endColumn": 71,
                  "snippet": {
                    "text": "parentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                    "rendered": {
                      "text": "parentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                      "markdown": "`parentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 39,
                  "endLine": 23,
                  "endColumn": 45,
                  "snippet": {
                    "text": "parentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                    "rendered": {
                      "text": "parentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                      "markdown": "`parentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 160,
                  "endLine": 23,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                    "rendered": {
                      "text": "\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n",
                      "markdown": "`\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 117,
                  "endLine": 22,
                  "endColumn": 123,
                  "snippet": {
                    "text": "ASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '",
                    "rendered": {
                      "text": "ASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '",
                      "markdown": "`ASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_table.txt | sort | uniq | tr '\\n' ', '`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 84,
                  "endLine": 22,
                  "endColumn": 89,
                  "snippet": {
                    "text": "scriptdir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_tabl",
                    "rendered": {
                      "text": "scriptdir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_tabl",
                      "markdown": "`scriptdir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp/ignored_syscall_info_tabl`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 57,
                  "endLine": 22,
                  "endColumn": 63,
                  "snippet": {
                    "text": "tions under the License.\n#\nscriptdir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp",
                    "rendered": {
                      "text": "tions under the License.\n#\nscriptdir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp",
                      "markdown": "`tions under the License.\n#\nscriptdir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_event_table.txt\n\ncat /tmp/ignored_driver_event_table.txt /tmp`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 101,
                  "endLine": 22,
                  "endColumn": 4,
                  "snippet": {
                    "text": "r the specific language governing permissions and\n# limitations under the License.\n#\nscriptdir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_ev",
                    "rendered": {
                      "text": "r the specific language governing permissions and\n# limitations under the License.\n#\nscriptdir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_ev",
                      "markdown": "`r the specific language governing permissions and\n# limitations under the License.\n#\nscriptdir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\nparentdir=\"$(dirname \"$scriptdir\")\"\nlibsdir=\"${parentdir}/build/falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs\"\ncat \"${libsdir}/userspace/libscap/syscall_info_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/.*\\\"\\(.*\\)\\\".*/\\1/'  | sort > /tmp/ignored_syscall_info_table.txt\ncat \"${libsdir}/driver/event_table.c\" | grep EF_DROP_SIMPLE_CONS | sed -e 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\".*/\\1/' | sort | uniq > /tmp/ignored_driver_ev`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/ignored-calls.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                      "markdown": "`#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-wasm"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package.tar.gz>\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package.tar.gz>\"\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package.tar.gz>\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-wasm"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# publish\npackage=$(basename -- ${file})\necho \"Publishing ${package} to ${s3_bucket_repo}...\"\naws s3 cp ${file} ${s3_bucket_repo}/${package} --acl public-read\n\naws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}",
                    "rendered": {
                      "text": "# publish\npackage=$(basename -- ${file})\necho \"Publishing ${package} to ${s3_bucket_repo}...\"\naws s3 cp ${file} ${s3_bucket_repo}/${package} --acl public-read\n\naws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}",
                      "markdown": "`# publish\npackage=$(basename -- ${file})\necho \"Publishing ${package} to ${s3_bucket_repo}...\"\naws s3 cp ${file} ${s3_bucket_repo}/${package} --acl public-read\n\naws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-wasm"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package.tar.gz>\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package.tar.gz>\"\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package.tar.gz>\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 1,
                  "endLine": 164,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  reduce_dir_size ${tmp_repo_path} 10 rpm\nfi\n\n# update the repo by adding new packages\nif ! [ ${#files[@]} -eq 0 ]; then\n  for file in \"${files[@]}\"; do\n    echo \"Adding ${file}...\"\n",
                    "rendered": {
                      "text": "  reduce_dir_size ${tmp_repo_path} 10 rpm\nfi\n\n# update the repo by adding new packages\nif ! [ ${#files[@]} -eq 0 ]; then\n  for file in \"${files[@]}\"; do\n    echo \"Adding ${file}...\"\n",
                      "markdown": "`  reduce_dir_size ${tmp_repo_path} 10 rpm\nfi\n\n# update the repo by adding new packages\nif ! [ ${#files[@]} -eq 0 ]; then\n  for file in \"${files[@]}\"; do\n    echo \"Adding ${file}...\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 1,
                  "endLine": 141,
                  "endColumn": 9,
                  "snippet": {
                    "text": "mkdir -p ${tmp_repo_path}\naws s3 cp ${s3_bucket_repo} ${tmp_repo_path} --recursive\n\n# update signatures for all existing packages\nif [ \"${sign_all}\" ]; then\n  for file in ${tmp_repo_path}/*; do\n    if [ -f \"$file\" ]; then # exclude directories, symlinks, etc...\n",
                    "rendered": {
                      "text": "mkdir -p ${tmp_repo_path}\naws s3 cp ${s3_bucket_repo} ${tmp_repo_path} --recursive\n\n# update signatures for all existing packages\nif [ \"${sign_all}\" ]; then\n  for file in ${tmp_repo_path}/*; do\n    if [ -f \"$file\" ]; then # exclude directories, symlinks, etc...\n",
                      "markdown": "`mkdir -p ${tmp_repo_path}\naws s3 cp ${s3_bucket_repo} ${tmp_repo_path} --recursive\n\n# update signatures for all existing packages\nif [ \"${sign_all}\" ]; then\n  for file in ${tmp_repo_path}/*; do\n    if [ -f \"$file\" ]; then # exclude directories, symlinks, etc...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 1,
                  "endLine": 47,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    popd > /dev/null\n}\n\n# Update the local RPM repository\n#\n# $1: path of the repository.\nupdate_repo() {\n",
                    "rendered": {
                      "text": "    popd > /dev/null\n}\n\n# Update the local RPM repository\n#\n# $1: path of the repository.\nupdate_repo() {\n",
                      "markdown": "`    popd > /dev/null\n}\n\n# Update the local RPM repository\n#\n# $1: path of the repository.\nupdate_repo() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package_x86_64.rpm> -f <package_aarch64.rpm> -r <rpm|rpm-dev> [-s]\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package_x86_64.rpm> -f <package_aarch64.rpm> -r <rpm|rpm-dev> [-s]\"\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package_x86_64.rpm> -f <package_aarch64.rpm> -r <rpm|rpm-dev> [-s]\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 10,
                  "endLine": 178,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    package=$(basename -- ${file})\n    echo \"Publishing ${package} to ${s3_bucket_repo}...\"\n    aws s3 cp ${tmp_repo_path}/${package} ${s3_bucket_repo}/${package} --acl public-read\n    aws s3 cp ${tmp_repo_path}/${package}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}.asc\n",
                    "rendered": {
                      "text": "    package=$(basename -- ${file})\n    echo \"Publishing ${package} to ${s3_bucket_repo}...\"\n    aws s3 cp ${tmp_repo_path}/${package} ${s3_bucket_repo}/${package} --acl public-read\n    aws s3 cp ${tmp_repo_path}/${package}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}.asc\n",
                      "markdown": "`    package=$(basename -- ${file})\n    echo \"Publishing ${package} to ${s3_bucket_repo}...\"\n    aws s3 cp ${tmp_repo_path}/${package} ${s3_bucket_repo}/${package} --acl public-read\n    aws s3 cp ${tmp_repo_path}/${package}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}.asc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 10,
                  "endLine": 177,
                  "endColumn": 14,
                  "snippet": {
                    "text": "  for file in \"${files[@]}\"; do\n    package=$(basename -- ${file})\n    echo \"Publishing ${package} to ${s3_bucket_repo}...\"\n    aws s3 cp ${tmp_repo_path}/${package} ${s3_bucket_repo}/${package} --acl public-read\n    aws s3 cp ${tmp_repo_path}/${package}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}\n",
                    "rendered": {
                      "text": "  for file in \"${files[@]}\"; do\n    package=$(basename -- ${file})\n    echo \"Publishing ${package} to ${s3_bucket_repo}...\"\n    aws s3 cp ${tmp_repo_path}/${package} ${s3_bucket_repo}/${package} --acl public-read\n    aws s3 cp ${tmp_repo_path}/${package}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}\n",
                      "markdown": "`  for file in \"${files[@]}\"; do\n    package=$(basename -- ${file})\n    echo \"Publishing ${package} to ${s3_bucket_repo}...\"\n    aws s3 cp ${tmp_repo_path}/${package} ${s3_bucket_repo}/${package} --acl public-read\n    aws s3 cp ${tmp_repo_path}/${package}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${package}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 37,
                  "endLine": 162,
                  "snippet": {
                    "text": "\n# remove old dev packages if necessary\nif [[ ${repo} == \"rpm-dev\" ]]; then\n  reduce_dir_size ${tmp_repo_path} 10 rpm\nfi\n\n# update the repo by adding new packages\nif ! [ ${#files[@]} -eq 0 ]; then\n",
                    "rendered": {
                      "text": "\n# remove old dev packages if necessary\nif [[ ${repo} == \"rpm-dev\" ]]; then\n  reduce_dir_size ${tmp_repo_path} 10 rpm\nfi\n\n# update the repo by adding new packages\nif ! [ ${#files[@]} -eq 0 ]; then\n",
                      "markdown": "`\n# remove old dev packages if necessary\nif [[ ${repo} == \"rpm-dev\" ]]; then\n  reduce_dir_size ${tmp_repo_path} 10 rpm\nfi\n\n# update the repo by adding new packages\nif ! [ ${#files[@]} -eq 0 ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 14,
                  "endLine": 151,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        sign_rpm ${tmp_repo_path} ${file}\n\n        echo \"Syncing ${package}.asc to ${s3_bucket_repo}...\"\n        aws s3 cp ${tmp_repo_path}/${package}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n      fi\n    fi\n  done\n",
                    "rendered": {
                      "text": "        sign_rpm ${tmp_repo_path} ${file}\n\n        echo \"Syncing ${package}.asc to ${s3_bucket_repo}...\"\n        aws s3 cp ${tmp_repo_path}/${package}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n      fi\n    fi\n  done\n",
                      "markdown": "`        sign_rpm ${tmp_repo_path} ${file}\n\n        echo \"Syncing ${package}.asc to ${s3_bucket_repo}...\"\n        aws s3 cp ${tmp_repo_path}/${package}.asc ${s3_bucket_repo}/${package}.asc --acl public-read\n      fi\n    fi\n  done\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 6,
                  "endLine": 139,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# prepare repository local copy\necho \"Fetching ${s3_bucket_repo}...\"\nmkdir -p ${tmp_repo_path}\naws s3 cp ${s3_bucket_repo} ${tmp_repo_path} --recursive\n\n# update signatures for all existing packages\nif [ \"${sign_all}\" ]; then\n",
                    "rendered": {
                      "text": "# prepare repository local copy\necho \"Fetching ${s3_bucket_repo}...\"\nmkdir -p ${tmp_repo_path}\naws s3 cp ${s3_bucket_repo} ${tmp_repo_path} --recursive\n\n# update signatures for all existing packages\nif [ \"${sign_all}\" ]; then\n",
                      "markdown": "`# prepare repository local copy\necho \"Fetching ${s3_bucket_repo}...\"\nmkdir -p ${tmp_repo_path}\naws s3 cp ${s3_bucket_repo} ${tmp_repo_path} --recursive\n\n# update signatures for all existing packages\nif [ \"${sign_all}\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 80,
                  "endLine": 80,
                  "endColumn": 86,
                  "snippet": {
                    "text": "    local DEL_SIZE=$(( (CUR_SIZE - MAX_SIZE) * 1024 ))\n\n    local ACC_SIZE=0\n    find \"$DIR\" -maxdepth 1 -type f -name \"*.$EXTENSION\" -printf \"%T+ %s %p\\n\" | sort | while read -r date size file; do\n        if ((ACC_SIZE + size < DEL_SIZE)); then\n            rm \"$file\"\n            ACC_SIZE=$((ACC_SIZE + size))\n",
                    "rendered": {
                      "text": "    local DEL_SIZE=$(( (CUR_SIZE - MAX_SIZE) * 1024 ))\n\n    local ACC_SIZE=0\n    find \"$DIR\" -maxdepth 1 -type f -name \"*.$EXTENSION\" -printf \"%T+ %s %p\\n\" | sort | while read -r date size file; do\n        if ((ACC_SIZE + size < DEL_SIZE)); then\n            rm \"$file\"\n            ACC_SIZE=$((ACC_SIZE + size))\n",
                      "markdown": "`    local DEL_SIZE=$(( (CUR_SIZE - MAX_SIZE) * 1024 ))\n\n    local ACC_SIZE=0\n    find \"$DIR\" -maxdepth 1 -type f -name \"*.$EXTENSION\" -printf \"%T+ %s %p\\n\" | sort | while read -r date size file; do\n        if ((ACC_SIZE + size < DEL_SIZE)); then\n            rm \"$file\"\n            ACC_SIZE=$((ACC_SIZE + size))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 3,
                  "endLine": 80,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    local DEL_SIZE=$(( (CUR_SIZE - MAX_SIZE) * 1024 ))\n\n    local ACC_SIZE=0\n    find \"$DIR\" -maxdepth 1 -type f -name \"*.$EXTENSION\" -printf \"%T+ %s %p\\n\" | sort | while read -r date size file; do\n        if ((ACC_SIZE + size < DEL_SIZE)); then\n            rm \"$file\"\n            ACC_SIZE=$((ACC_SIZE + size))\n",
                    "rendered": {
                      "text": "    local DEL_SIZE=$(( (CUR_SIZE - MAX_SIZE) * 1024 ))\n\n    local ACC_SIZE=0\n    find \"$DIR\" -maxdepth 1 -type f -name \"*.$EXTENSION\" -printf \"%T+ %s %p\\n\" | sort | while read -r date size file; do\n        if ((ACC_SIZE + size < DEL_SIZE)); then\n            rm \"$file\"\n            ACC_SIZE=$((ACC_SIZE + size))\n",
                      "markdown": "`    local DEL_SIZE=$(( (CUR_SIZE - MAX_SIZE) * 1024 ))\n\n    local ACC_SIZE=0\n    find \"$DIR\" -maxdepth 1 -type f -name \"*.$EXTENSION\" -printf \"%T+ %s %p\\n\" | sort | while read -r date size file; do\n        if ((ACC_SIZE + size < DEL_SIZE)); then\n            rm \"$file\"\n            ACC_SIZE=$((ACC_SIZE + size))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 36,
                  "endLine": 69,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    fi\n\n    # Calculate current directory size in KB\n    local CUR_SIZE=$(du -sk \"$DIR\" | cut -f1)\n\n    # Check if we need to delete any files\n    if ((CUR_SIZE <= MAX_SIZE)); then\n",
                    "rendered": {
                      "text": "    fi\n\n    # Calculate current directory size in KB\n    local CUR_SIZE=$(du -sk \"$DIR\" | cut -f1)\n\n    # Check if we need to delete any files\n    if ((CUR_SIZE <= MAX_SIZE)); then\n",
                      "markdown": "`    fi\n\n    # Calculate current directory size in KB\n    local CUR_SIZE=$(du -sk \"$DIR\" | cut -f1)\n\n    # Check if we need to delete any files\n    if ((CUR_SIZE <= MAX_SIZE)); then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 18,
                  "endLine": 47,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    popd > /dev/null\n}\n\n# Update the local RPM repository\n#\n# $1: path of the repository.\nupdate_repo() {\n",
                    "rendered": {
                      "text": "    popd > /dev/null\n}\n\n# Update the local RPM repository\n#\n# $1: path of the repository.\nupdate_repo() {\n",
                      "markdown": "`    popd > /dev/null\n}\n\n# Update the local RPM repository\n#\n# $1: path of the repository.\nupdate_repo() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 16,
                  "endLine": 37,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    sign_rpm $1 $2\n}\n\n# Sign the local RPM repository\n#\n# $1: path of the repository.\nsign_repo() {\n",
                    "rendered": {
                      "text": "    sign_rpm $1 $2\n}\n\n# Sign the local RPM repository\n#\n# $1: path of the repository.\nsign_repo() {\n",
                      "markdown": "`    sign_rpm $1 $2\n}\n\n# Sign the local RPM repository\n#\n# $1: path of the repository.\nsign_repo() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 3,
                  "endLine": 33,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# $1: path of the repository.\n# $2: path of the RPM file.\nadd_rpm() {\n    cp -f $2 $1\n    sign_rpm $1 $2\n}\n\n",
                    "rendered": {
                      "text": "# $1: path of the repository.\n# $2: path of the RPM file.\nadd_rpm() {\n    cp -f $2 $1\n    sign_rpm $1 $2\n}\n\n",
                      "markdown": "`# $1: path of the repository.\n# $2: path of the RPM file.\nadd_rpm() {\n    cp -f $2 $1\n    sign_rpm $1 $2\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 17,
                  "endLine": 31,
                  "endColumn": 22,
                  "snippet": {
                    "text": "# Add a package to the local RPM repository\n#\n# $1: path of the repository.\n# $2: path of the RPM file.\nadd_rpm() {\n    cp -f $2 $1\n    sign_rpm $1 $2\n",
                    "rendered": {
                      "text": "# Add a package to the local RPM repository\n#\n# $1: path of the repository.\n# $2: path of the RPM file.\nadd_rpm() {\n    cp -f $2 $1\n    sign_rpm $1 $2\n",
                      "markdown": "`# Add a package to the local RPM repository\n#\n# $1: path of the repository.\n# $2: path of the RPM file.\nadd_rpm() {\n    cp -f $2 $1\n    sign_rpm $1 $2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 28,
                  "endLine": 28,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    popd > /dev/null\n}\n\n# Add a package to the local RPM repository\n#\n# $1: path of the repository.\n# $2: path of the RPM file.\n",
                    "rendered": {
                      "text": "    popd > /dev/null\n}\n\n# Add a package to the local RPM repository\n#\n# $1: path of the repository.\n# $2: path of the RPM file.\n",
                      "markdown": "`    popd > /dev/null\n}\n\n# Add a package to the local RPM repository\n#\n# $1: path of the repository.\n# $2: path of the RPM file.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 17,
                  "endLine": 20,
                  "endColumn": 22,
                  "snippet": {
                    "text": "# Updates the signature of a RPM package in the local repository\n#\n# $1: path of the repository.\n# $2: path of the RPM file.\nsign_rpm() {\n    pushd $1 > /dev/null\n    rm -f $(basename -- $2).asc\n",
                    "rendered": {
                      "text": "# Updates the signature of a RPM package in the local repository\n#\n# $1: path of the repository.\n# $2: path of the RPM file.\nsign_rpm() {\n    pushd $1 > /dev/null\n    rm -f $(basename -- $2).asc\n",
                      "markdown": "`# Updates the signature of a RPM package in the local repository\n#\n# $1: path of the repository.\n# $2: path of the RPM file.\nsign_rpm() {\n    pushd $1 > /dev/null\n    rm -f $(basename -- $2).asc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 28,
                  "endLine": 17,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  fi\n}\n\n# Updates the signature of a RPM package in the local repository\n#\n# $1: path of the repository.\n# $2: path of the RPM file.\n",
                    "rendered": {
                      "text": "  fi\n}\n\n# Updates the signature of a RPM package in the local repository\n#\n# $1: path of the repository.\n# $2: path of the RPM file.\n",
                      "markdown": "`  fi\n}\n\n# Updates the signature of a RPM package in the local repository\n#\n# $1: path of the repository.\n# $2: path of the RPM file.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-rpm"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package_x86_64.rpm> -f <package_aarch64.rpm> -r <rpm|rpm-dev> [-s]\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package_x86_64.rpm> -f <package_aarch64.rpm> -r <rpm|rpm-dev> [-s]\"\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package_x86_64.rpm> -f <package_aarch64.rpm> -r <rpm|rpm-dev> [-s]\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.cmake-format.json"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 11,
                  "endLine": 241,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t],\n\t\t\"max_conditionals_custom_parser\": 2,\n\t\t\"_help_min_statement_spacing\": [\n\t\t\t\"Require at least this many newlines between statements\"\n\t\t],\n\t\t\"min_statement_spacing\": 1,\n\t\t\"_help_max_statement_spacing\": [\n",
                    "rendered": {
                      "text": "\t\t],\n\t\t\"max_conditionals_custom_parser\": 2,\n\t\t\"_help_min_statement_spacing\": [\n\t\t\t\"Require at least this many newlines between statements\"\n\t\t],\n\t\t\"min_statement_spacing\": 1,\n\t\t\"_help_max_statement_spacing\": [\n",
                      "markdown": "`\t\t],\n\t\t\"max_conditionals_custom_parser\": 2,\n\t\t\"_help_min_statement_spacing\": [\n\t\t\t\"Require at least this many newlines between statements\"\n\t\t],\n\t\t\"min_statement_spacing\": 1,\n\t\t\"_help_max_statement_spacing\": [\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.cmake-format.json"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 33,
                  "endLine": 169,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\t],\n\t\t\"explicit_trailing_pattern\": \"#<\",\n\t\t\"_help_hashruler_min_length\": [\n\t\t\t\"If a comment line starts with at least this many consecutive\",\n\t\t\t\"hash characters, then don't lstrip() them off. This allows\",\n\t\t\t\"for lazy hash rulers where the first hash char is not\",\n\t\t\t\"separated by space\"\n",
                    "rendered": {
                      "text": "\t\t],\n\t\t\"explicit_trailing_pattern\": \"#<\",\n\t\t\"_help_hashruler_min_length\": [\n\t\t\t\"If a comment line starts with at least this many consecutive\",\n\t\t\t\"hash characters, then don't lstrip() them off. This allows\",\n\t\t\t\"for lazy hash rulers where the first hash char is not\",\n\t\t\t\"separated by space\"\n",
                      "markdown": "`\t\t],\n\t\t\"explicit_trailing_pattern\": \"#<\",\n\t\t\"_help_hashruler_min_length\": [\n\t\t\t\"If a comment line starts with at least this many consecutive\",\n\t\t\t\"hash characters, then don't lstrip() them off. This allows\",\n\t\t\t\"for lazy hash rulers where the first hash char is not\",\n\t\t\t\"separated by space\"\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.cmake-format.json"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 26,
                  "endLine": 50,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\t],\n\t\t\"max_rows_cmdline\": 2,\n\t\t\"_help_separate_ctrl_name_with_space\": [\n\t\t\t\"If true, separate flow control names from their parentheses\",\n\t\t\t\"with a space\"\n\t\t],\n\t\t\"separate_ctrl_name_with_space\": false,\n",
                    "rendered": {
                      "text": "\t\t],\n\t\t\"max_rows_cmdline\": 2,\n\t\t\"_help_separate_ctrl_name_with_space\": [\n\t\t\t\"If true, separate flow control names from their parentheses\",\n\t\t\t\"with a space\"\n\t\t],\n\t\t\"separate_ctrl_name_with_space\": false,\n",
                      "markdown": "`\t\t],\n\t\t\"max_rows_cmdline\": 2,\n\t\t\"_help_separate_ctrl_name_with_space\": [\n\t\t\t\"If true, separate flow control names from their parentheses\",\n\t\t\t\"with a space\"\n\t\t],\n\t\t\"separate_ctrl_name_with_space\": false,\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_alt_rule_loader.cpp"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 86,
                  "endLine": 350,
                  "endColumn": 91,
                  "snippet": {
                    "text": "\t        dynamic_cast<const test_compile_output&>(*(compile_output.get()));\n\n\tstd::unique_ptr<rule_loader::compile_output> copy = compile_output->clone();\n\tconst test_compile_output& copy_ref = dynamic_cast<const test_compile_output&>(*(copy.get()));\n\n\tEXPECT_EQ(copy_ref.lists, original_ref.lists);\n\tEXPECT_EQ(copy_ref.macros, original_ref.macros);\n",
                    "rendered": {
                      "text": "\t        dynamic_cast<const test_compile_output&>(*(compile_output.get()));\n\n\tstd::unique_ptr<rule_loader::compile_output> copy = compile_output->clone();\n\tconst test_compile_output& copy_ref = dynamic_cast<const test_compile_output&>(*(copy.get()));\n\n\tEXPECT_EQ(copy_ref.lists, original_ref.lists);\n\tEXPECT_EQ(copy_ref.macros, original_ref.macros);\n",
                      "markdown": "`\t        dynamic_cast<const test_compile_output&>(*(compile_output.get()));\n\n\tstd::unique_ptr<rule_loader::compile_output> copy = compile_output->clone();\n\tconst test_compile_output& copy_ref = dynamic_cast<const test_compile_output&>(*(copy.get()));\n\n\tEXPECT_EQ(copy_ref.lists, original_ref.lists);\n\tEXPECT_EQ(copy_ref.macros, original_ref.macros);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_alt_rule_loader.cpp"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 66,
                  "endLine": 347,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\tcompiler.compile(*cfg, collector, *compile_output);\n\n\tconst test_compile_output& original_ref =\n\t        dynamic_cast<const test_compile_output&>(*(compile_output.get()));\n\n\tstd::unique_ptr<rule_loader::compile_output> copy = compile_output->clone();\n\tconst test_compile_output& copy_ref = dynamic_cast<const test_compile_output&>(*(copy.get()));\n",
                    "rendered": {
                      "text": "\tcompiler.compile(*cfg, collector, *compile_output);\n\n\tconst test_compile_output& original_ref =\n\t        dynamic_cast<const test_compile_output&>(*(compile_output.get()));\n\n\tstd::unique_ptr<rule_loader::compile_output> copy = compile_output->clone();\n\tconst test_compile_output& copy_ref = dynamic_cast<const test_compile_output&>(*(copy.get()));\n",
                      "markdown": "`\tcompiler.compile(*cfg, collector, *compile_output);\n\n\tconst test_compile_output& original_ref =\n\t        dynamic_cast<const test_compile_output&>(*(compile_output.get()));\n\n\tstd::unique_ptr<rule_loader::compile_output> copy = compile_output->clone();\n\tconst test_compile_output& copy_ref = dynamic_cast<const test_compile_output&>(*(copy.get()));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_alt_rule_loader.cpp"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 25,
                  "endLine": 127,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n\t\tstd::shared_ptr<filter_ruleset> ruleset;\n\t\tget_engine_state().get_ruleset(source, ruleset);\n\t\tEXPECT_EQ(this, ruleset.get());\n\n\t\tconst test_compile_output& test_output =\n\t\t        dynamic_cast<const test_compile_output&>(compile_output);\n",
                    "rendered": {
                      "text": "\n\t\tstd::shared_ptr<filter_ruleset> ruleset;\n\t\tget_engine_state().get_ruleset(source, ruleset);\n\t\tEXPECT_EQ(this, ruleset.get());\n\n\t\tconst test_compile_output& test_output =\n\t\t        dynamic_cast<const test_compile_output&>(compile_output);\n",
                      "markdown": "`\n\t\tstd::shared_ptr<filter_ruleset> ruleset;\n\t\tget_engine_state().get_ruleset(source, ruleset);\n\t\tEXPECT_EQ(this, ruleset.get());\n\n\t\tconst test_compile_output& test_output =\n\t\t        dynamic_cast<const test_compile_output&>(compile_output);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_details_resolver.cpp"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 17,
                  "endLine": 30,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tdetails.known_macros.insert(\"spawned_process\");\n\tdetails.known_lists.insert(\"known_procs\");\n\tfilter_details_resolver resolver;\n\tresolver.run(ast.get(), details);\n\n\t// Assert fields\n\tASSERT_EQ(details.fields.size(), 2);\n",
                    "rendered": {
                      "text": "\tdetails.known_macros.insert(\"spawned_process\");\n\tdetails.known_lists.insert(\"known_procs\");\n\tfilter_details_resolver resolver;\n\tresolver.run(ast.get(), details);\n\n\t// Assert fields\n\tASSERT_EQ(details.fields.size(), 2);\n",
                      "markdown": "`\tdetails.known_macros.insert(\"spawned_process\");\n\tdetails.known_lists.insert(\"known_procs\");\n\tfilter_details_resolver resolver;\n\tresolver.run(ast.get(), details);\n\n\t// Assert fields\n\tASSERT_EQ(details.fields.size(), 2);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/engine/test_filter_details_resolver.cpp"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 71,
                  "endLine": 23,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\nTEST(DetailsResolver, resolve_ast) {\n\tstd::string cond =\n\t        \"(spawned_process or evt.type = open) and (proc.name icontains cat or proc.name in \"\n\t        \"(known_procs, ps))\";\n\tauto ast = libsinsp::filter::parser(cond).parse();\n\tfilter_details details;\n",
                    "rendered": {
                      "text": "\nTEST(DetailsResolver, resolve_ast) {\n\tstd::string cond =\n\t        \"(spawned_process or evt.type = open) and (proc.name icontains cat or proc.name in \"\n\t        \"(known_procs, ps))\";\n\tauto ast = libsinsp::filter::parser(cond).parse();\n\tfilter_details details;\n",
                      "markdown": "`\nTEST(DetailsResolver, resolve_ast) {\n\tstd::string cond =\n\t        \"(spawned_process or evt.type = open) and (proc.name icontains cat or proc.name in \"\n\t        \"(known_procs, ps))\";\n\tauto ast = libsinsp::filter::parser(cond).parse();\n\tfilter_details details;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/evttype_index_ruleset.cpp"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 73,
                  "endLine": 38,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\t\twrap->m_filter = filter;\n\t\tif(rule.source == falco_common::syscall_source) {\n\t\t\twrap->m_sc_codes = libsinsp::filter::ast::ppm_sc_codes(condition.get());\n\t\t\twrap->m_event_codes = libsinsp::filter::ast::ppm_event_codes(condition.get());\n\t\t} else {\n\t\t\twrap->m_sc_codes = {};\n\t\t\twrap->m_event_codes = {ppm_event_code::PPME_PLUGINEVENT_E};\n",
                    "rendered": {
                      "text": "\t\twrap->m_filter = filter;\n\t\tif(rule.source == falco_common::syscall_source) {\n\t\t\twrap->m_sc_codes = libsinsp::filter::ast::ppm_sc_codes(condition.get());\n\t\t\twrap->m_event_codes = libsinsp::filter::ast::ppm_event_codes(condition.get());\n\t\t} else {\n\t\t\twrap->m_sc_codes = {};\n\t\t\twrap->m_event_codes = {ppm_event_code::PPME_PLUGINEVENT_E};\n",
                      "markdown": "`\t\twrap->m_filter = filter;\n\t\tif(rule.source == falco_common::syscall_source) {\n\t\t\twrap->m_sc_codes = libsinsp::filter::ast::ppm_sc_codes(condition.get());\n\t\t\twrap->m_event_codes = libsinsp::filter::ast::ppm_event_codes(condition.get());\n\t\t} else {\n\t\t\twrap->m_sc_codes = {};\n\t\t\twrap->m_event_codes = {ppm_event_code::PPME_PLUGINEVENT_E};\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/evttype_index_ruleset.cpp"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 67,
                  "endLine": 37,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t\twrap->m_rule = rule;\n\t\twrap->m_filter = filter;\n\t\tif(rule.source == falco_common::syscall_source) {\n\t\t\twrap->m_sc_codes = libsinsp::filter::ast::ppm_sc_codes(condition.get());\n\t\t\twrap->m_event_codes = libsinsp::filter::ast::ppm_event_codes(condition.get());\n\t\t} else {\n\t\t\twrap->m_sc_codes = {};\n",
                    "rendered": {
                      "text": "\t\twrap->m_rule = rule;\n\t\twrap->m_filter = filter;\n\t\tif(rule.source == falco_common::syscall_source) {\n\t\t\twrap->m_sc_codes = libsinsp::filter::ast::ppm_sc_codes(condition.get());\n\t\t\twrap->m_event_codes = libsinsp::filter::ast::ppm_event_codes(condition.get());\n\t\t} else {\n\t\t\twrap->m_sc_codes = {};\n",
                      "markdown": "`\t\twrap->m_rule = rule;\n\t\twrap->m_filter = filter;\n\t\tif(rule.source == falco_common::syscall_source) {\n\t\t\twrap->m_sc_codes = libsinsp::filter::ast::ppm_sc_codes(condition.get());\n\t\t\twrap->m_event_codes = libsinsp::filter::ast::ppm_event_codes(condition.get());\n\t\t} else {\n\t\t\twrap->m_sc_codes = {};\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/select_event_sources.cpp"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 39,
                  "endLine": 56,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t}\n\n\tif(s.enabled_sources.empty()) {\n\t\treturn run_result::fatal(\"Must enable at least one event source\");\n\t}\n\n\treturn run_result::ok();\n",
                    "rendered": {
                      "text": "\t}\n\n\tif(s.enabled_sources.empty()) {\n\t\treturn run_result::fatal(\"Must enable at least one event source\");\n\t}\n\n\treturn run_result::ok();\n",
                      "markdown": "`\t}\n\n\tif(s.enabled_sources.empty()) {\n\t\treturn run_result::fatal(\"Must enable at least one event source\");\n\t}\n\n\treturn run_result::ok();\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/version.proto"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 36,
                  "endLine": 8,
                  "snippet": {
                    "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/version.proto"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 32,
                  "endLine": 26,
                  "endColumn": 8,
                  "snippet": {
                    "text": "option go_package = \"github.com/falcosecurity/client-go/pkg/api/version\";\n\n// This service defines a RPC call\n// to request the Falco version.\nservice service {\n  rpc version(request) returns (response);\n}\n\n",
                    "rendered": {
                      "text": "option go_package = \"github.com/falcosecurity/client-go/pkg/api/version\";\n\n// This service defines a RPC call\n// to request the Falco version.\nservice service {\n  rpc version(request) returns (response);\n}\n\n",
                      "markdown": "`option go_package = \"github.com/falcosecurity/client-go/pkg/api/version\";\n\n// This service defines a RPC call\n// to request the Falco version.\nservice service {\n  rpc version(request) returns (response);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/version.proto"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 7,
                  "endLine": 24,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\noption go_package = \"github.com/falcosecurity/client-go/pkg/api/version\";\n\n// This service defines a RPC call\n// to request the Falco version.\nservice service {\n  rpc version(request) returns (response);\n",
                    "rendered": {
                      "text": "\noption go_package = \"github.com/falcosecurity/client-go/pkg/api/version\";\n\n// This service defines a RPC call\n// to request the Falco version.\nservice service {\n  rpc version(request) returns (response);\n",
                      "markdown": "`\noption go_package = \"github.com/falcosecurity/client-go/pkg/api/version\";\n\n// This service defines a RPC call\n// to request the Falco version.\nservice service {\n  rpc version(request) returns (response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs_grpc.cpp"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 11,
                  "endLine": 90,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n\t// hostname\n\tauto host = grpc_res.mutable_hostname();\n\t*host = m_hostname;\n\n\t// tags\n\tauto tags = grpc_res.mutable_tags();\n",
                    "rendered": {
                      "text": "\n\t// hostname\n\tauto host = grpc_res.mutable_hostname();\n\t*host = m_hostname;\n\n\t// tags\n\tauto tags = grpc_res.mutable_tags();\n",
                      "markdown": "`\n\t// hostname\n\tauto host = grpc_res.mutable_hostname();\n\t*host = m_hostname;\n\n\t// tags\n\tauto tags = grpc_res.mutable_tags();\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs_grpc.cpp"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 30,
                  "endLine": 89,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t}\n\n\t// hostname\n\tauto host = grpc_res.mutable_hostname();\n\t*host = m_hostname;\n\n\t// tags\n",
                    "rendered": {
                      "text": "\t}\n\n\t// hostname\n\tauto host = grpc_res.mutable_hostname();\n\t*host = m_hostname;\n\n\t// tags\n",
                      "markdown": "`\t}\n\n\t// hostname\n\tauto host = grpc_res.mutable_hostname();\n\t*host = m_hostname;\n\n\t// tags\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_metrics.cpp"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 37,
                  "endLine": 122,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\t\t        {{\"file_name\", fs_path.filename()}, {\"sha256\", item.second}});\n\t\t}\n\n\t\tfor(const auto& item : state.config.get()->m_loaded_configs_filenames_sha256sum) {\n\t\t\tfs::path fs_path = item.first;\n\t\t\tprometheus_text += prometheus_metrics_converter.convert_metric_to_text_prometheus(\n\t\t\t        \"sha256_config_files\",\n",
                    "rendered": {
                      "text": "\t\t\t        {{\"file_name\", fs_path.filename()}, {\"sha256\", item.second}});\n\t\t}\n\n\t\tfor(const auto& item : state.config.get()->m_loaded_configs_filenames_sha256sum) {\n\t\t\tfs::path fs_path = item.first;\n\t\t\tprometheus_text += prometheus_metrics_converter.convert_metric_to_text_prometheus(\n\t\t\t        \"sha256_config_files\",\n",
                      "markdown": "`\t\t\t        {{\"file_name\", fs_path.filename()}, {\"sha256\", item.second}});\n\t\t}\n\n\t\tfor(const auto& item : state.config.get()->m_loaded_configs_filenames_sha256sum) {\n\t\t\tfs::path fs_path = item.first;\n\t\t\tprometheus_text += prometheus_metrics_converter.convert_metric_to_text_prometheus(\n\t\t\t        \"sha256_config_files\",\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_metrics.cpp"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 37,
                  "endLine": 113,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#if defined(__linux__) and !defined(MINIMAL_BUILD) and !defined(__EMSCRIPTEN__)\n\t\t// Distinguish between config and rules files using labels, following Prometheus best\n\t\t// practices: https://prometheus.io/docs/practices/naming/#labels\n\t\tfor(const auto& item : state.config.get()->m_loaded_rules_filenames_sha256sum) {\n\t\t\tfs::path fs_path = item.first;\n\t\t\tprometheus_text += prometheus_metrics_converter.convert_metric_to_text_prometheus(\n\t\t\t        \"sha256_rules_files\",\n",
                    "rendered": {
                      "text": "#if defined(__linux__) and !defined(MINIMAL_BUILD) and !defined(__EMSCRIPTEN__)\n\t\t// Distinguish between config and rules files using labels, following Prometheus best\n\t\t// practices: https://prometheus.io/docs/practices/naming/#labels\n\t\tfor(const auto& item : state.config.get()->m_loaded_rules_filenames_sha256sum) {\n\t\t\tfs::path fs_path = item.first;\n\t\t\tprometheus_text += prometheus_metrics_converter.convert_metric_to_text_prometheus(\n\t\t\t        \"sha256_rules_files\",\n",
                      "markdown": "`#if defined(__linux__) and !defined(MINIMAL_BUILD) and !defined(__EMSCRIPTEN__)\n\t\t// Distinguish between config and rules files using labels, following Prometheus best\n\t\t// practices: https://prometheus.io/docs/practices/naming/#labels\n\t\tfor(const auto& item : state.config.get()->m_loaded_rules_filenames_sha256sum) {\n\t\t\tfs::path fs_path = item.first;\n\t\t\tprometheus_text += prometheus_metrics_converter.convert_metric_to_text_prometheus(\n\t\t\t        \"sha256_rules_files\",\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_metrics.cpp"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 72,
                  "endLine": 87,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\n\t\tconst scap_agent_info* agent_info = inspector->get_agent_info();\n\t\tconst scap_machine_info* machine_info = inspector->get_machine_info();\n\t\tlibs::metrics::libs_metrics_collector libs_metrics_collector(inspector.get(), 0);\n\t\tprometheus_text += prometheus_metrics_converter.convert_metric_to_text_prometheus(\n\t\t        \"version\",\n\t\t        \"falcosecurity\",\n",
                    "rendered": {
                      "text": "\n\t\tconst scap_agent_info* agent_info = inspector->get_agent_info();\n\t\tconst scap_machine_info* machine_info = inspector->get_machine_info();\n\t\tlibs::metrics::libs_metrics_collector libs_metrics_collector(inspector.get(), 0);\n\t\tprometheus_text += prometheus_metrics_converter.convert_metric_to_text_prometheus(\n\t\t        \"version\",\n\t\t        \"falcosecurity\",\n",
                      "markdown": "`\n\t\tconst scap_agent_info* agent_info = inspector->get_agent_info();\n\t\tconst scap_machine_info* machine_info = inspector->get_machine_info();\n\t\tlibs::metrics::libs_metrics_collector libs_metrics_collector(inspector.get(), 0);\n\t\tprometheus_text += prometheus_metrics_converter.convert_metric_to_text_prometheus(\n\t\t        \"version\",\n\t\t        \"falcosecurity\",\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_metrics.cpp"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 64,
                  "endLine": 65,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\t\tauto source_inspector = source_info->inspector;\n\t\tinspectors.emplace_back(source_inspector);\n\t\tmetrics_collectors.emplace_back(\n\t\t        libs::metrics::libs_metrics_collector(source_inspector.get(),\n\t\t                                              state.config->m_metrics_flags));\n\t}\n\tlibs::metrics::prometheus_metrics_converter prometheus_metrics_converter;\n",
                    "rendered": {
                      "text": "\t\tauto source_inspector = source_info->inspector;\n\t\tinspectors.emplace_back(source_inspector);\n\t\tmetrics_collectors.emplace_back(\n\t\t        libs::metrics::libs_metrics_collector(source_inspector.get(),\n\t\t                                              state.config->m_metrics_flags));\n\t}\n\tlibs::metrics::prometheus_metrics_converter prometheus_metrics_converter;\n",
                      "markdown": "`\t\tauto source_inspector = source_info->inspector;\n\t\tinspectors.emplace_back(source_inspector);\n\t\tmetrics_collectors.emplace_back(\n\t\t        libs::metrics::libs_metrics_collector(source_inspector.get(),\n\t\t                                              state.config->m_metrics_flags));\n\t}\n\tlibs::metrics::prometheus_metrics_converter prometheus_metrics_converter;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_metrics.cpp"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 39,
                  "endLine": 107,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\t\t        \"hostname\",\n\t\t\t        \"falcosecurity\",\n\t\t\t        \"evt\",\n\t\t\t        {{\"hostname\", machine_info->hostname}});\n\t\t}\n\n#if defined(__linux__) and !defined(MINIMAL_BUILD) and !defined(__EMSCRIPTEN__)\n",
                    "rendered": {
                      "text": "\t\t\t        \"hostname\",\n\t\t\t        \"falcosecurity\",\n\t\t\t        \"evt\",\n\t\t\t        {{\"hostname\", machine_info->hostname}});\n\t\t}\n\n#if defined(__linux__) and !defined(MINIMAL_BUILD) and !defined(__EMSCRIPTEN__)\n",
                      "markdown": "`\t\t\t        \"hostname\",\n\t\t\t        \"falcosecurity\",\n\t\t\t        \"evt\",\n\t\t\t        {{\"hostname\", machine_info->hostname}});\n\t\t}\n\n#if defined(__linux__) and !defined(MINIMAL_BUILD) and !defined(__EMSCRIPTEN__)\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_metrics.cpp"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 14,
                  "endLine": 107,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\t        \"hostname\",\n\t\t\t        \"falcosecurity\",\n\t\t\t        \"evt\",\n\t\t\t        {{\"hostname\", machine_info->hostname}});\n\t\t}\n\n#if defined(__linux__) and !defined(MINIMAL_BUILD) and !defined(__EMSCRIPTEN__)\n",
                    "rendered": {
                      "text": "\t\t\t        \"hostname\",\n\t\t\t        \"falcosecurity\",\n\t\t\t        \"evt\",\n\t\t\t        {{\"hostname\", machine_info->hostname}});\n\t\t}\n\n#if defined(__linux__) and !defined(MINIMAL_BUILD) and !defined(__EMSCRIPTEN__)\n",
                      "markdown": "`\t\t\t        \"hostname\",\n\t\t\t        \"falcosecurity\",\n\t\t\t        \"evt\",\n\t\t\t        {{\"hostname\", machine_info->hostname}});\n\t\t}\n\n#if defined(__linux__) and !defined(MINIMAL_BUILD) and !defined(__EMSCRIPTEN__)\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_metrics.cpp"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 12,
                  "endLine": 104,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t}\n\t\tif(machine_info) {\n\t\t\tprometheus_text += prometheus_metrics_converter.convert_metric_to_text_prometheus(\n\t\t\t        \"hostname\",\n\t\t\t        \"falcosecurity\",\n\t\t\t        \"evt\",\n\t\t\t        {{\"hostname\", machine_info->hostname}});\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tif(machine_info) {\n\t\t\tprometheus_text += prometheus_metrics_converter.convert_metric_to_text_prometheus(\n\t\t\t        \"hostname\",\n\t\t\t        \"falcosecurity\",\n\t\t\t        \"evt\",\n\t\t\t        {{\"hostname\", machine_info->hostname}});\n",
                      "markdown": "`\t\t}\n\t\tif(machine_info) {\n\t\t\tprometheus_text += prometheus_metrics_converter.convert_metric_to_text_prometheus(\n\t\t\t        \"hostname\",\n\t\t\t        \"falcosecurity\",\n\t\t\t        \"evt\",\n\t\t\t        {{\"hostname\", machine_info->hostname}});\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/config_falco.h.in"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 36,
                  "endLine": 8,
                  "snippet": {
                    "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile.distroless"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nUSER root\nCOPY --from=builder /falco /\n\nCMD [\"/usr/bin/falco\", \"-o\", \"time_format_iso_8601=true\"]\n",
                    "rendered": {
                      "text": "\nUSER root\nCOPY --from=builder /falco /\n\nCMD [\"/usr/bin/falco\", \"-o\", \"time_format_iso_8601=true\"]\n",
                      "markdown": "`\nUSER root\nCOPY --from=builder /falco /\n\nCMD [\"/usr/bin/falco\", \"-o\", \"time_format_iso_8601=true\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile.distroless"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 7,
                  "endLine": 32,
                  "endColumn": 15,
                  "snippet": {
                    "text": "LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apk update && apk add libelf libstdc++\n\nENV HOST_ROOT /host\nENV HOME /root\n",
                    "rendered": {
                      "text": "LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apk update && apk add libelf libstdc++\n\nENV HOST_ROOT /host\nENV HOME /root\n",
                      "markdown": "`LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apk update && apk add libelf libstdc++\n\nENV HOST_ROOT /host\nENV HOME /root\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile.distroless"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 7,
                  "endLine": 9,
                  "endColumn": 15,
                  "snippet": {
                    "text": "ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apk update && apk add build-base gcc curl ca-certificates jq elfutils\n\nWORKDIR /\n\n",
                    "rendered": {
                      "text": "ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apk update && apk add build-base gcc curl ca-certificates jq elfutils\n\nWORKDIR /\n\n",
                      "markdown": "`ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apk update && apk add build-base gcc curl ca-certificates jq elfutils\n\nWORKDIR /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile.distroless"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 19,
                  "endLine": 35,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nRUN apk update && apk add libelf libstdc++\n\nENV HOST_ROOT /host\nENV HOME /root\n\nUSER root\nCOPY --from=builder /falco /\n",
                    "rendered": {
                      "text": "\nRUN apk update && apk add libelf libstdc++\n\nENV HOST_ROOT /host\nENV HOME /root\n\nUSER root\nCOPY --from=builder /falco /\n",
                      "markdown": "`\nRUN apk update && apk add libelf libstdc++\n\nENV HOST_ROOT /host\nENV HOME /root\n\nUSER root\nCOPY --from=builder /falco /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile.distroless"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 34,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apk update && apk add libelf libstdc++\n\nENV HOST_ROOT /host\nENV HOME /root\n\nUSER root\n",
                    "rendered": {
                      "text": "# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apk update && apk add libelf libstdc++\n\nENV HOST_ROOT /host\nENV HOME /root\n\nUSER root\n",
                      "markdown": "`# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apk update && apk add libelf libstdc++\n\nENV HOST_ROOT /host\nENV HOME /root\n\nUSER root\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile.distroless"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6,
                  "endLine": 22,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n    && mv /falco/etc/falco/falco.yaml.new /falco/etc/falco/falco.yaml\n\nFROM cgr.dev/chainguard/wolfi-base\n\n",
                    "rendered": {
                      "text": "    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n    && mv /falco/etc/falco/falco.yaml.new /falco/etc/falco/falco.yaml\n\nFROM cgr.dev/chainguard/wolfi-base\n\n",
                      "markdown": "`    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n    && mv /falco/etc/falco/falco.yaml.new /falco/etc/falco/falco.yaml\n\nFROM cgr.dev/chainguard/wolfi-base\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile.distroless"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n    && mv /falco/etc/falco/falco.yaml.new /falco/etc/falco/falco.yaml\n\nFROM cgr.dev/chainguard/wolfi-base\n",
                    "rendered": {
                      "text": "    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n    && mv /falco/etc/falco/falco.yaml.new /falco/etc/falco/falco.yaml\n\nFROM cgr.dev/chainguard/wolfi-base\n",
                      "markdown": "`    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n    && mv /falco/etc/falco/falco.yaml.new /falco/etc/falco/falco.yaml\n\nFROM cgr.dev/chainguard/wolfi-base\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile.distroless"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-${FALCO_VERSION_URLENCODED}-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n",
                    "rendered": {
                      "text": "    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-${FALCO_VERSION_URLENCODED}-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n",
                      "markdown": "`    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-${FALCO_VERSION_URLENCODED}-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile.distroless"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "endLine": 16,
                  "endColumn": 8,
                  "snippet": {
                    "text": "RUN FALCO_VERSION_URLENCODED=$(echo -n ${FALCO_VERSION}|jq -sRr @uri) && \\\n    curl -L -o falco.tar.gz \\\n    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-${FALCO_VERSION_URLENCODED}-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n",
                    "rendered": {
                      "text": "RUN FALCO_VERSION_URLENCODED=$(echo -n ${FALCO_VERSION}|jq -sRr @uri) && \\\n    curl -L -o falco.tar.gz \\\n    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-${FALCO_VERSION_URLENCODED}-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n",
                      "markdown": "`RUN FALCO_VERSION_URLENCODED=$(echo -n ${FALCO_VERSION}|jq -sRr @uri) && \\\n    curl -L -o falco.tar.gz \\\n    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-${FALCO_VERSION_URLENCODED}-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile.distroless"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 3,
                  "endLine": 14,
                  "endColumn": 9,
                  "snippet": {
                    "text": "WORKDIR /\n\nRUN FALCO_VERSION_URLENCODED=$(echo -n ${FALCO_VERSION}|jq -sRr @uri) && \\\n    curl -L -o falco.tar.gz \\\n    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-${FALCO_VERSION_URLENCODED}-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n",
                    "rendered": {
                      "text": "WORKDIR /\n\nRUN FALCO_VERSION_URLENCODED=$(echo -n ${FALCO_VERSION}|jq -sRr @uri) && \\\n    curl -L -o falco.tar.gz \\\n    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-${FALCO_VERSION_URLENCODED}-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n",
                      "markdown": "`WORKDIR /\n\nRUN FALCO_VERSION_URLENCODED=$(echo -n ${FALCO_VERSION}|jq -sRr @uri) && \\\n    curl -L -o falco.tar.gz \\\n    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-${FALCO_VERSION_URLENCODED}-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile.distroless"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 40,
                  "endLine": 9,
                  "endColumn": 46,
                  "snippet": {
                    "text": "ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apk update && apk add build-base gcc curl ca-certificates jq elfutils\n\nWORKDIR /\n\n",
                    "rendered": {
                      "text": "ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apk update && apk add build-base gcc curl ca-certificates jq elfutils\n\nWORKDIR /\n\n",
                      "markdown": "`ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apk update && apk add build-base gcc curl ca-certificates jq elfutils\n\nWORKDIR /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile.distroless"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 34,
                  "endLine": 7,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG FALCO_VERSION\nARG VERSION_BUCKET=bin\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apk update && apk add build-base gcc curl ca-certificates jq elfutils\n\n",
                    "rendered": {
                      "text": "ARG FALCO_VERSION\nARG VERSION_BUCKET=bin\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apk update && apk add build-base gcc curl ca-certificates jq elfutils\n\n",
                      "markdown": "`ARG FALCO_VERSION\nARG VERSION_BUCKET=bin\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apk update && apk add build-base gcc curl ca-certificates jq elfutils\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile.distroless"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 6,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nARG FALCO_VERSION\nARG VERSION_BUCKET=bin\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apk update && apk add build-base gcc curl ca-certificates jq elfutils\n",
                    "rendered": {
                      "text": "\nARG FALCO_VERSION\nARG VERSION_BUCKET=bin\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apk update && apk add build-base gcc curl ca-certificates jq elfutils\n",
                      "markdown": "`\nARG FALCO_VERSION\nARG VERSION_BUCKET=bin\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apk update && apk add build-base gcc curl ca-certificates jq elfutils\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 67,
                  "endColumn": 4,
                  "snippet": {
                    "text": "COPY ./docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nCMD [\"/usr/bin/falco\"]\n",
                    "rendered": {
                      "text": "COPY ./docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nCMD [\"/usr/bin/falco\"]\n",
                      "markdown": "`COPY ./docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nCMD [\"/usr/bin/falco\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 11,
                  "endLine": 47,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n",
                    "rendered": {
                      "text": "\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n",
                      "markdown": "`\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 11,
                  "endLine": 20,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbc \\\n\tbison \\\n",
                    "rendered": {
                      "text": "\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbc \\\n\tbison \\\n",
                      "markdown": "`\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbc \\\n\tbison \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 20,
                  "endLine": 58,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n# silently overwriting the existing directory\nRUN rm -df /lib/modules \\\n\t&& ln -s $HOST_ROOT/lib/modules /lib/modules\n",
                    "rendered": {
                      "text": "\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n# silently overwriting the existing directory\nRUN rm -df /lib/modules \\\n\t&& ln -s $HOST_ROOT/lib/modules /lib/modules\n",
                      "markdown": "`\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n# silently overwriting the existing directory\nRUN rm -df /lib/modules \\\n\t&& ln -s $HOST_ROOT/lib/modules /lib/modules\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 3,
                  "endLine": 55,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n",
                    "rendered": {
                      "text": "# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n",
                      "markdown": "`# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 3,
                  "endLine": 54,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n",
                    "rendered": {
                      "text": "\n# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n",
                      "markdown": "`\n# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 3,
                  "endLine": 49,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Change the falco config within the container to enable ISO 8601\n",
                    "rendered": {
                      "text": "\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Change the falco config within the container to enable ISO 8601\n",
                      "markdown": "`\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Change the falco config within the container to enable ISO 8601\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 149,
                  "endLine": 48,
                  "endColumn": 158,
                  "snippet": {
                    "text": "RUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n",
                    "rendered": {
                      "text": "RUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n",
                      "markdown": "`RUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 69,
                  "endLine": 48,
                  "endColumn": 78,
                  "snippet": {
                    "text": "RUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n",
                    "rendered": {
                      "text": "RUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n",
                      "markdown": "`RUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 3,
                  "endLine": 47,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n",
                    "rendered": {
                      "text": "\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n",
                      "markdown": "`\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 82,
                  "endLine": 46,
                  "endColumn": 87,
                  "snippet": {
                    "text": "\t&& rm -rf /var/lib/apt/lists/*\n\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n",
                    "rendered": {
                      "text": "\t&& rm -rf /var/lib/apt/lists/*\n\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n",
                      "markdown": "`\t&& rm -rf /var/lib/apt/lists/*\n\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 3,
                  "endLine": 45,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tzstd \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n",
                    "rendered": {
                      "text": "\tzstd \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n",
                      "markdown": "`\tzstd \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco; else FALCO_DRIVER_CHOICE=none apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tbison \\\n\tca-certificates \\\n\tclang \\\n\tcurl \\\n\tdkms \\\n\tdwarves \\\n\tflex \\\n",
                    "rendered": {
                      "text": "\tbison \\\n\tca-certificates \\\n\tclang \\\n\tcurl \\\n\tdkms \\\n\tdwarves \\\n\tflex \\\n",
                      "markdown": "`\tbison \\\n\tca-certificates \\\n\tclang \\\n\tcurl \\\n\tdkms \\\n\tdwarves \\\n\tflex \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 12,
                  "snippet": {
                    "text": "RUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbc \\\n\tbison \\\n\tca-certificates \\\n",
                    "rendered": {
                      "text": "RUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbc \\\n\tbison \\\n\tca-certificates \\\n",
                      "markdown": "`RUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbc \\\n\tbison \\\n\tca-certificates \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 20,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbc \\\n\tbison \\\n",
                    "rendered": {
                      "text": "\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbc \\\n\tbison \\\n",
                      "markdown": "`\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbc \\\n\tbison \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 33,
                  "endLine": 18,
                  "endColumn": 37,
                  "snippet": {
                    "text": "ENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n",
                    "rendered": {
                      "text": "ENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n",
                      "markdown": "`ENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 7,
                  "snippet": {
                    "text": "ENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n",
                    "rendered": {
                      "text": "ENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n",
                      "markdown": "`ENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 19,
                  "endLine": 16,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\n",
                    "rendered": {
                      "text": "ENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\n",
                      "markdown": "`ENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n",
                    "rendered": {
                      "text": "ARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n",
                      "markdown": "`ARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 14,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG FALCO_VERSION=latest\nARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\n",
                    "rendered": {
                      "text": "ARG FALCO_VERSION=latest\nARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\n",
                      "markdown": "`ARG FALCO_VERSION=latest\nARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\nENV HOME /root\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 22,
                  "endLine": 12,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG TARGETARCH\n\nARG FALCO_VERSION=latest\nARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\n",
                    "rendered": {
                      "text": "ARG TARGETARCH\n\nARG FALCO_VERSION=latest\nARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\n",
                      "markdown": "`ARG TARGETARCH\n\nARG FALCO_VERSION=latest\nARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV HOST_ROOT /host\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                      "markdown": "`#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 42,
                  "endLine": 58,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        ln -s \"$i\" \"/usr/src/$base\"\n    done\n\n    # convert the optional space-separated env variable FALCO_DRIVER_LOADER_OPTIONS to array, prevent \n    # shell expansion and use it as argument list for falcoctl\n    read -a falco_driver_loader_option_arr <<< $FALCO_DRIVER_LOADER_OPTIONS\n\n",
                    "rendered": {
                      "text": "        ln -s \"$i\" \"/usr/src/$base\"\n    done\n\n    # convert the optional space-separated env variable FALCO_DRIVER_LOADER_OPTIONS to array, prevent \n    # shell expansion and use it as argument list for falcoctl\n    read -a falco_driver_loader_option_arr <<< $FALCO_DRIVER_LOADER_OPTIONS\n\n",
                      "markdown": "`        ln -s \"$i\" \"/usr/src/$base\"\n    done\n\n    # convert the optional space-separated env variable FALCO_DRIVER_LOADER_OPTIONS to array, prevent \n    # shell expansion and use it as argument list for falcoctl\n    read -a falco_driver_loader_option_arr <<< $FALCO_DRIVER_LOADER_OPTIONS\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 50,
                  "endLine": 38,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\techo \"  --compile        try to compile the driver locally (default true)\"\n\techo \"  --download       try to download a prebuilt driver (default true)\"\n \techo \"  --http-insecure\t enable insecure downloads\"\n\techo \"  --print-env      skip execution and print env variables for other tools to consume\"\n\techo \"\"\n\techo \"Environment variables:\"\n\techo \"  FALCOCTL_DRIVER_REPOS         specify different URL(s) where to look for prebuilt Falco drivers (comma separated)\"\n",
                    "rendered": {
                      "text": "\techo \"  --compile        try to compile the driver locally (default true)\"\n\techo \"  --download       try to download a prebuilt driver (default true)\"\n \techo \"  --http-insecure\t enable insecure downloads\"\n\techo \"  --print-env      skip execution and print env variables for other tools to consume\"\n\techo \"\"\n\techo \"Environment variables:\"\n\techo \"  FALCOCTL_DRIVER_REPOS         specify different URL(s) where to look for prebuilt Falco drivers (comma separated)\"\n",
                      "markdown": "`\techo \"  --compile        try to compile the driver locally (default true)\"\n\techo \"  --download       try to download a prebuilt driver (default true)\"\n \techo \"  --http-insecure\t enable insecure downloads\"\n\techo \"  --print-env      skip execution and print env variables for other tools to consume\"\n\techo \"\"\n\techo \"Environment variables:\"\n\techo \"  FALCOCTL_DRIVER_REPOS         specify different URL(s) where to look for prebuilt Falco drivers (comma separated)\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 8,
                  "endLine": 24,
                  "endColumn": 16,
                  "snippet": {
                    "text": "print_usage() {\n\techo \"\"\n\techo \"Usage:\"\n\techo \"  docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro -e 'FALCO_DRIVER_LOADER_OPTIONS=[driver] [options]' falcosecurity/falco:latest\"\n\techo \"\"\n\techo \"Available FALCO_DRIVER_LOADER_OPTIONS drivers:\"\n\techo \"  auto\t       leverage automatic driver selection logic (default)\"\n",
                    "rendered": {
                      "text": "print_usage() {\n\techo \"\"\n\techo \"Usage:\"\n\techo \"  docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro -e 'FALCO_DRIVER_LOADER_OPTIONS=[driver] [options]' falcosecurity/falco:latest\"\n\techo \"\"\n\techo \"Available FALCO_DRIVER_LOADER_OPTIONS drivers:\"\n\techo \"  auto\t       leverage automatic driver selection logic (default)\"\n",
                      "markdown": "`print_usage() {\n\techo \"\"\n\techo \"Usage:\"\n\techo \"  docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro -e 'FALCO_DRIVER_LOADER_OPTIONS=[driver] [options]' falcosecurity/falco:latest\"\n\techo \"\"\n\techo \"Available FALCO_DRIVER_LOADER_OPTIONS drivers:\"\n\techo \"  auto\t       leverage automatic driver selection logic (default)\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/falco/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                      "markdown": "`#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/README.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 377,
                  "endLine": 11,
                  "endColumn": 382,
                  "snippet": {
                    "text": "cker/falcosecurity/falco-no-driver), [falcosecurity/falco-no-driver:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco-no-driver),[falcosecurity/falco-no-driver:master](https://hub.docker.com/repository/docker/falcosecurity/falco-no-driver) | docker/no-driver | Falco (TGZ built from git tag or from the master) without the building toolchain. |\n| [falcosecurity/falco-driver-loader-legacy:latest](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader-legacy), [falcosecurity/falco-driver-loader-legacy:_tag_](https://hub.docker.com/repository/docker/falcosecurity/fa",
                    "rendered": {
                      "text": "cker/falcosecurity/falco-no-driver), [falcosecurity/falco-no-driver:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco-no-driver),[falcosecurity/falco-no-driver:master](https://hub.docker.com/repository/docker/falcosecurity/falco-no-driver) | docker/no-driver | Falco (TGZ built from git tag or from the master) without the building toolchain. |\n| [falcosecurity/falco-driver-loader-legacy:latest](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader-legacy), [falcosecurity/falco-driver-loader-legacy:_tag_](https://hub.docker.com/repository/docker/falcosecurity/fa",
                      "markdown": "`cker/falcosecurity/falco-no-driver), [falcosecurity/falco-no-driver:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco-no-driver),[falcosecurity/falco-no-driver:master](https://hub.docker.com/repository/docker/falcosecurity/falco-no-driver) | docker/no-driver | Falco (TGZ built from git tag or from the master) without the building toolchain. |\n| [falcosecurity/falco-driver-loader-legacy:latest](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader-legacy), [falcosecurity/falco-driver-loader-legacy:_tag_](https://hub.docker.com/repository/docker/falcosecurity/fa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/README.md"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 314,
                  "endLine": 9,
                  "endColumn": 319,
                  "snippet": {
                    "text": "ty/falco:latest](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:master](https://hub.docker.com/repository/docker/falcosecurity/falco) | docker/falco | Falco (DEB built from git tag or from the master) with all the building toolchain. |\n| [falcosecurity/falco-driver-loader:latest](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader), [falcosecurity/falco-driver-loader:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader), ",
                    "rendered": {
                      "text": "ty/falco:latest](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:master](https://hub.docker.com/repository/docker/falcosecurity/falco) | docker/falco | Falco (DEB built from git tag or from the master) with all the building toolchain. |\n| [falcosecurity/falco-driver-loader:latest](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader), [falcosecurity/falco-driver-loader:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader), ",
                      "markdown": "`ty/falco:latest](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco), [falcosecurity/falco:master](https://hub.docker.com/repository/docker/falcosecurity/falco) | docker/falco | Falco (DEB built from git tag or from the master) with all the building toolchain. |\n| [falcosecurity/falco-driver-loader:latest](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader), [falcosecurity/falco-driver-loader:_tag_](https://hub.docker.com/repository/docker/falcosecurity/falco-driver-loader), `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/cpp-httplib.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/yaml-cpp.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/driver.cmake"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 21,
                  "endLine": 38,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t# FALCOSECURITY_LIBS_VERSION. In case you want to test against another driver version (or\n\t# branch, or commit) just pass the variable - ie., `cmake -DDRIVER_VERSION=dev ..`\n\tif(NOT DRIVER_VERSION)\n\t\tset(DRIVER_VERSION \"aeb87935dcdd6b3bffb50302269353f2468f612c\")\n\t\tset(DRIVER_CHECKSUM\n\t\t\t\"SHA256=fc2f18ed2f9e4bdcb93f32eee326a813a3614af50b82d30a7ccf96ac2a7cfbf0\"\n\t\t)\n",
                    "rendered": {
                      "text": "\t# FALCOSECURITY_LIBS_VERSION. In case you want to test against another driver version (or\n\t# branch, or commit) just pass the variable - ie., `cmake -DDRIVER_VERSION=dev ..`\n\tif(NOT DRIVER_VERSION)\n\t\tset(DRIVER_VERSION \"aeb87935dcdd6b3bffb50302269353f2468f612c\")\n\t\tset(DRIVER_CHECKSUM\n\t\t\t\"SHA256=fc2f18ed2f9e4bdcb93f32eee326a813a3614af50b82d30a7ccf96ac2a7cfbf0\"\n\t\t)\n",
                      "markdown": "`\t# FALCOSECURITY_LIBS_VERSION. In case you want to test against another driver version (or\n\t# branch, or commit) just pass the variable - ie., `cmake -DDRIVER_VERSION=dev ..`\n\tif(NOT DRIVER_VERSION)\n\t\tset(DRIVER_VERSION \"aeb87935dcdd6b3bffb50302269353f2468f612c\")\n\t\tset(DRIVER_CHECKSUM\n\t\t\t\"SHA256=fc2f18ed2f9e4bdcb93f32eee326a813a3614af50b82d30a7ccf96ac2a7cfbf0\"\n\t\t)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/driver.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/driver.cmake"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 27,
                  "endLine": 32,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\tset(DRIVER_REPO \"falcosecurity/libs\")\n\tendif()\n\n\t# DRIVER_VERSION accepts a git reference (branch name, commit hash, or tag) to the\n\t# falcosecurity/libs repository which contains the driver source code under the `/driver`\n\t# directory. The chosen driver version must be compatible with the given\n\t# FALCOSECURITY_LIBS_VERSION. In case you want to test against another driver version (or\n",
                    "rendered": {
                      "text": "\t\tset(DRIVER_REPO \"falcosecurity/libs\")\n\tendif()\n\n\t# DRIVER_VERSION accepts a git reference (branch name, commit hash, or tag) to the\n\t# falcosecurity/libs repository which contains the driver source code under the `/driver`\n\t# directory. The chosen driver version must be compatible with the given\n\t# FALCOSECURITY_LIBS_VERSION. In case you want to test against another driver version (or\n",
                      "markdown": "`\t\tset(DRIVER_REPO \"falcosecurity/libs\")\n\tendif()\n\n\t# DRIVER_VERSION accepts a git reference (branch name, commit hash, or tag) to the\n\t# falcosecurity/libs repository which contains the driver source code under the `/driver`\n\t# directory. The chosen driver version must be compatible with the given\n\t# FALCOSECURITY_LIBS_VERSION. In case you want to test against another driver version (or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/CPackConfig.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/CPackConfig.cmake"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 25,
                  "endLine": 54,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nif(NOT CPACK_GENERATOR)\n\tif(CMAKE_SYSTEM_NAME MATCHES \"Linux\")\n\t\tset(CPACK_GENERATOR DEB RPM TGZ)\n\telse()\n\t\tset(CPACK_GENERATOR TGZ)\n\tendif()\n",
                    "rendered": {
                      "text": "\nif(NOT CPACK_GENERATOR)\n\tif(CMAKE_SYSTEM_NAME MATCHES \"Linux\")\n\t\tset(CPACK_GENERATOR DEB RPM TGZ)\n\telse()\n\t\tset(CPACK_GENERATOR TGZ)\n\tendif()\n",
                      "markdown": "`\nif(NOT CPACK_GENERATOR)\n\tif(CMAKE_SYSTEM_NAME MATCHES \"Linux\")\n\t\tset(CPACK_GENERATOR DEB RPM TGZ)\n\telse()\n\t\tset(CPACK_GENERATOR TGZ)\n\tendif()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/Coverage.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/static-analysis.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/cpack/CMakeCPackOptions.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 73,
                  "endLine": 150,
                  "endColumn": 78,
                  "snippet": {
                    "text": "          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 1)\n\n          echo \"baseref checksum: $base_hash\"\n          echo \"baseref engine version: $base_engine_ver\"\n",
                    "rendered": {
                      "text": "          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 1)\n\n          echo \"baseref checksum: $base_hash\"\n          echo \"baseref engine version: $base_engine_ver\"\n",
                      "markdown": "`          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 1)\n\n          echo \"baseref checksum: $base_hash\"\n          echo \"baseref engine version: $base_engine_ver\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 67,
                  "endLine": 149,
                  "endColumn": 72,
                  "snippet": {
                    "text": "          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 1)\n\n          echo \"baseref checksum: $base_hash\"\n",
                    "rendered": {
                      "text": "          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 1)\n\n          echo \"baseref checksum: $base_hash\"\n",
                      "markdown": "`          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 1)\n\n          echo \"baseref checksum: $base_hash\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 136,
                  "endLine": 146,
                  "endColumn": 141,
                  "snippet": {
                    "text": "        base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -",
                    "rendered": {
                      "text": "        base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -",
                      "markdown": "`        base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 117,
                  "endLine": 146,
                  "endColumn": 122,
                  "snippet": {
                    "text": "/g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.outputs.cmdout",
                    "rendered": {
                      "text": "/g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.outputs.cmdout",
                      "markdown": "`/g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.outputs.cmdout`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 105,
                  "endLine": 146,
                  "endColumn": 111,
                  "snippet": {
                    "text": "sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.out",
                    "rendered": {
                      "text": "sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.out",
                      "markdown": "`sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          cur_engine_ver=$(echo \"${{ needs.build-dev.out`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 136,
                  "endLine": 145,
                  "endColumn": 141,
                  "snippet": {
                    "text": "        base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n     ",
                    "rendered": {
                      "text": "        base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n     ",
                      "markdown": "`        base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine_ver_patch}\"\n\n     `"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 117,
                  "endLine": 145,
                  "endColumn": 122,
                  "snippet": {
                    "text": "sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine",
                    "rendered": {
                      "text": "sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine",
                      "markdown": "`sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${base_engine`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 105,
                  "endLine": 145,
                  "endColumn": 111,
                  "snippet": {
                    "text": "rint $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${",
                    "rendered": {
                      "text": "rint $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${",
                      "markdown": "`rint $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver=\"${base_engine_ver_major}.${base_engine_ver_minor}.${`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 136,
                  "endLine": 144,
                  "endColumn": 141,
                  "snippet": {
                    "text": "  - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | hea",
                    "rendered": {
                      "text": "  - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | hea",
                      "markdown": "`  - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engine_version.h\" | hea`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 117,
                  "endLine": 144,
                  "endColumn": 122,
                  "snippet": {
                    "text": "b.base_ref }}\n\n      - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engi",
                    "rendered": {
                      "text": "b.base_ref }}\n\n      - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engi",
                      "markdown": "`b.base_ref }}\n\n      - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine/falco_engi`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 105,
                  "endLine": 144,
                  "endColumn": 111,
                  "snippet": {
                    "text": "f: ${{ github.base_ref }}\n\n      - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine",
                    "rendered": {
                      "text": "f: ${{ github.base_ref }}\n\n      - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine",
                      "markdown": "`f: ${{ github.base_ref }}\n\n      - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_patch=$(grep ENGINE_VERSION_PATCH \"./userspace/engine`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 100,
                  "endLine": 143,
                  "endColumn": 105,
                  "snippet": {
                    "text": "ses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n        with:\n          fetch-depth: 0\n          ref: ${{ github.base_ref }}\n\n      - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk",
                    "rendered": {
                      "text": "ses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n        with:\n          fetch-depth: 0\n          ref: ${{ github.base_ref }}\n\n      - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk",
                      "markdown": "`ses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n        with:\n          fetch-depth: 0\n          ref: ${{ github.base_ref }}\n\n      - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 81,
                  "endLine": 143,
                  "endColumn": 86,
                  "snippet": {
                    "text": " base ref\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n        with:\n          fetch-depth: 0\n          ref: ${{ github.base_ref }}\n\n      - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h",
                    "rendered": {
                      "text": " base ref\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n        with:\n          fetch-depth: 0\n          ref: ${{ github.base_ref }}\n\n      - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h",
                      "markdown": "` base ref\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n        with:\n          fetch-depth: 0\n          ref: ${{ github.base_ref }}\n\n      - name: Check Engine version\n        run: |\n          base_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          base_engine_ver_major=$(grep ENGINE_VERSION_MAJOR \"./userspace/engine/falco_engine_version.h\" | head -n 1 | awk '{print $3}' | sed -e 's/(//g' -e 's/)//g')\n          base_engine_ver_minor=$(grep ENGINE_VERSION_MINOR \"./userspace/engine/falco_engine_version.h`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 67,
                  "endLine": 119,
                  "endColumn": 72,
                  "snippet": {
                    "text": "      - name: Check Engine checksum\n        run: |\n          prev_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          \n          echo \"encoded checksum: $prev_hash\"\n          echo \"current checksum: $cur_hash\"\n",
                    "rendered": {
                      "text": "      - name: Check Engine checksum\n        run: |\n          prev_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          \n          echo \"encoded checksum: $prev_hash\"\n          echo \"current checksum: $cur_hash\"\n",
                      "markdown": "`      - name: Check Engine checksum\n        run: |\n          prev_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          \n          echo \"encoded checksum: $prev_hash\"\n          echo \"current checksum: $cur_hash\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 100,
                  "endLine": 118,
                  "endColumn": 105,
                  "snippet": {
                    "text": "\n      - name: Check Engine checksum\n        run: |\n          prev_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          \n          echo \"encoded checksum: $prev_hash\"\n",
                    "rendered": {
                      "text": "\n      - name: Check Engine checksum\n        run: |\n          prev_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          \n          echo \"encoded checksum: $prev_hash\"\n",
                      "markdown": "`\n      - name: Check Engine checksum\n        run: |\n          prev_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          \n          echo \"encoded checksum: $prev_hash\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 81,
                  "endLine": 118,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\n      - name: Check Engine checksum\n        run: |\n          prev_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          \n          echo \"encoded checksum: $prev_hash\"\n",
                    "rendered": {
                      "text": "\n      - name: Check Engine checksum\n        run: |\n          prev_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          \n          echo \"encoded checksum: $prev_hash\"\n",
                      "markdown": "`\n      - name: Check Engine checksum\n        run: |\n          prev_hash=$(grep CHECKSUM \"./userspace/engine/falco_engine_version.h\" | awk '{print $3}' | sed -e 's/\"//g')\n          cur_hash=$(echo \"${{ needs.build-dev.outputs.cmdout }}\" | cut -d ' ' -f 2)\n          \n          echo \"encoded checksum: $prev_hash\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 25,
                  "endLine": 110,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    runs-on: ubuntu-latest\n    needs: [build-dev]\n    steps:    \n      - name: Checkout PR head ref\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n        with:\n          fetch-depth: 0\n",
                    "rendered": {
                      "text": "    runs-on: ubuntu-latest\n    needs: [build-dev]\n    steps:    \n      - name: Checkout PR head ref\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n        with:\n          fetch-depth: 0\n",
                      "markdown": "`    runs-on: ubuntu-latest\n    needs: [build-dev]\n    steps:    \n      - name: Checkout PR head ref\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n        with:\n          fetch-depth: 0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 283,
                  "endLine": 103,
                  "endColumn": 289,
                  "snippet": {
                    "text": "      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n",
                    "rendered": {
                      "text": "      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n",
                      "markdown": "`      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 199,
                  "endLine": 103,
                  "endColumn": 204,
                  "snippet": {
                    "text": "      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n",
                    "rendered": {
                      "text": "      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n",
                      "markdown": "`      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 174,
                  "endLine": 103,
                  "endColumn": 180,
                  "snippet": {
                    "text": "      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n",
                    "rendered": {
                      "text": "      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n",
                      "markdown": "`      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 91,
                  "endLine": 103,
                  "endColumn": 96,
                  "snippet": {
                    "text": "      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n",
                    "rendered": {
                      "text": "      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n",
                      "markdown": "`      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 74,
                  "endLine": 103,
                  "endColumn": 80,
                  "snippet": {
                    "text": "      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n",
                    "rendered": {
                      "text": "      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n",
                      "markdown": "`      minimal: false\n      sanitizers: true\n      build_type: Debug\n      cmd: \"echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Engine:' | awk '{print $2}') $(echo $(build/userspace/falco/falco -c ./falco.yaml --version | grep 'Schema version:' | awk '{print $3}') $(build/userspace/falco/falco -c ./falco.yaml --list --markdown | grep '^`' | sort) $(build/userspace/falco/falco -c ./falco.yaml --list-events | sort) | sha256sum)\"\n\n  # checks the falco engine checksum for consistency\n  check-engine-checksum:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/scorecard.yaml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 6,
                  "endLine": 14,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    - cron: '0 0 * * 1'\n\n  # The OSSF recommendation encourages to enable branch protection rules trigger\n  # to update the scorecard\n  # (https://github.com/ossf/scorecard/blob/main/docs/checks.md#branch-protection)\n  # but due to our GitHub org management this check is triggered too often and is\n  # therefore disabled.\n",
                    "rendered": {
                      "text": "    - cron: '0 0 * * 1'\n\n  # The OSSF recommendation encourages to enable branch protection rules trigger\n  # to update the scorecard\n  # (https://github.com/ossf/scorecard/blob/main/docs/checks.md#branch-protection)\n  # but due to our GitHub org management this check is triggered too often and is\n  # therefore disabled.\n",
                      "markdown": "`    - cron: '0 0 * * 1'\n\n  # The OSSF recommendation encourages to enable branch protection rules trigger\n  # to update the scorecard\n  # (https://github.com/ossf/scorecard/blob/main/docs/checks.md#branch-protection)\n  # but due to our GitHub org management this check is triggered too often and is\n  # therefore disabled.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/scorecard.yaml"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 23,
                  "endLine": 10,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  # To guarantee Maintained check is occasionally updated. See\n  # https://github.com/ossf/scorecard/blob/main/docs/checks.md#maintained\n  schedule:\n    # Weekly on Mondays at 00:00.\n    - cron: '0 0 * * 1'\n\n  # The OSSF recommendation encourages to enable branch protection rules trigger\n",
                    "rendered": {
                      "text": "  # To guarantee Maintained check is occasionally updated. See\n  # https://github.com/ossf/scorecard/blob/main/docs/checks.md#maintained\n  schedule:\n    # Weekly on Mondays at 00:00.\n    - cron: '0 0 * * 1'\n\n  # The OSSF recommendation encourages to enable branch protection rules trigger\n",
                      "markdown": "`  # To guarantee Maintained check is occasionally updated. See\n  # https://github.com/ossf/scorecard/blob/main/docs/checks.md#maintained\n  schedule:\n    # Weekly on Mondays at 00:00.\n    - cron: '0 0 * * 1'\n\n  # The OSSF recommendation encourages to enable branch protection rules trigger\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_packages.yaml"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 13,
                  "endLine": 122,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    \n      - name: Install dependencies\n        run: |\n          apt update -y\n          apt-get install apt-utils bzip2 gpg awscli -y\n      \n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n",
                    "rendered": {
                      "text": "    \n      - name: Install dependencies\n        run: |\n          apt update -y\n          apt-get install apt-utils bzip2 gpg awscli -y\n      \n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n",
                      "markdown": "`    \n      - name: Install dependencies\n        run: |\n          apt update -y\n          apt-get install apt-utils bzip2 gpg awscli -y\n      \n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_packages.yaml"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 9,
                  "endLine": 123,
                  "endColumn": 18,
                  "snippet": {
                    "text": "      - name: Install dependencies\n        run: |\n          apt update -y\n          apt-get install apt-utils bzip2 gpg awscli -y\n      \n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n      # Note: master CI can only push dev packages as we have 2 different roles for master and release.\n",
                    "rendered": {
                      "text": "      - name: Install dependencies\n        run: |\n          apt update -y\n          apt-get install apt-utils bzip2 gpg awscli -y\n      \n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n      # Note: master CI can only push dev packages as we have 2 different roles for master and release.\n",
                      "markdown": "`      - name: Install dependencies\n        run: |\n          apt update -y\n          apt-get install apt-utils bzip2 gpg awscli -y\n      \n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n      # Note: master CI can only push dev packages as we have 2 different roles for master and release.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_packages.yaml"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 9,
                  "endLine": 122,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    \n      - name: Install dependencies\n        run: |\n          apt update -y\n          apt-get install apt-utils bzip2 gpg awscli -y\n      \n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n",
                    "rendered": {
                      "text": "    \n      - name: Install dependencies\n        run: |\n          apt update -y\n          apt-get install apt-utils bzip2 gpg awscli -y\n      \n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n",
                      "markdown": "`    \n      - name: Install dependencies\n        run: |\n          apt update -y\n          apt-get install apt-utils bzip2 gpg awscli -y\n      \n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_packages.yaml"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 21,
                  "endLine": 98,
                  "snippet": {
                    "text": "        run: |\n          ./scripts/publish-wasm -f /tmp/falco-wasm/falco-${{ inputs.version }}-wasm.tar.gz\n          \n      - name: Publish rpm\n        run: |\n          ./scripts/publish-rpm -f /tmp/falco-build-rpm/falco-${{ inputs.version }}-x86_64.rpm -f /tmp/falco-build-rpm/falco-${{ inputs.version }}-aarch64.rpm -r rpm${{ inputs.bucket_suffix }}\n      \n      - name: Publish bin\n",
                    "rendered": {
                      "text": "        run: |\n          ./scripts/publish-wasm -f /tmp/falco-wasm/falco-${{ inputs.version }}-wasm.tar.gz\n          \n      - name: Publish rpm\n        run: |\n          ./scripts/publish-rpm -f /tmp/falco-build-rpm/falco-${{ inputs.version }}-x86_64.rpm -f /tmp/falco-build-rpm/falco-${{ inputs.version }}-aarch64.rpm -r rpm${{ inputs.bucket_suffix }}\n      \n      - name: Publish bin\n",
                      "markdown": "`        run: |\n          ./scripts/publish-wasm -f /tmp/falco-wasm/falco-${{ inputs.version }}-wasm.tar.gz\n          \n      - name: Publish rpm\n        run: |\n          ./scripts/publish-rpm -f /tmp/falco-build-rpm/falco-${{ inputs.version }}-x86_64.rpm -f /tmp/falco-build-rpm/falco-${{ inputs.version }}-aarch64.rpm -r rpm${{ inputs.bucket_suffix }}\n      \n      - name: Publish bin\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_packages.yaml"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 9,
                  "endLine": 91,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: Sign rpms\n        run: |\n          rpmsign --define '_gpg_name Falcosecurity Package Signing' --addsign /tmp/falco-build-rpm/falco-*.rpm\n          rpm -qp --qf '%|DSAHEADER?{%{DSAHEADER:pgpsig}}:{%|RSAHEADER?{%{RSAHEADER:pgpsig}}:{(none)}|}|\\n' /tmp/falco-build-rpm/falco-*.rpm\n\n      - name: Publish wasm\n        run: |\n",
                    "rendered": {
                      "text": "      - name: Sign rpms\n        run: |\n          rpmsign --define '_gpg_name Falcosecurity Package Signing' --addsign /tmp/falco-build-rpm/falco-*.rpm\n          rpm -qp --qf '%|DSAHEADER?{%{DSAHEADER:pgpsig}}:{%|RSAHEADER?{%{RSAHEADER:pgpsig}}:{(none)}|}|\\n' /tmp/falco-build-rpm/falco-*.rpm\n\n      - name: Publish wasm\n        run: |\n",
                      "markdown": "`      - name: Sign rpms\n        run: |\n          rpmsign --define '_gpg_name Falcosecurity Package Signing' --addsign /tmp/falco-build-rpm/falco-*.rpm\n          rpm -qp --qf '%|DSAHEADER?{%{DSAHEADER:pgpsig}}:{%|RSAHEADER?{%{RSAHEADER:pgpsig}}:{(none)}|}|\\n' /tmp/falco-build-rpm/falco-*.rpm\n\n      - name: Publish wasm\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_packages.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 22,
                  "endLine": 50,
                  "endColumn": 27,
                  "snippet": {
                    "text": "          name: falco-${{ inputs.version }}-x86_64.rpm\n          path: /tmp/falco-build-rpm\n\n      - name: Download RPM aarch64\n        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n        with:\n          name: falco-${{ inputs.version }}-aarch64.rpm\n",
                    "rendered": {
                      "text": "          name: falco-${{ inputs.version }}-x86_64.rpm\n          path: /tmp/falco-build-rpm\n\n      - name: Download RPM aarch64\n        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n        with:\n          name: falco-${{ inputs.version }}-aarch64.rpm\n",
                      "markdown": "`          name: falco-${{ inputs.version }}-x86_64.rpm\n          path: /tmp/falco-build-rpm\n\n      - name: Download RPM aarch64\n        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n        with:\n          name: falco-${{ inputs.version }}-aarch64.rpm\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_packages.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 22,
                  "endLine": 44,
                  "endColumn": 27,
                  "snippet": {
                    "text": "          role-to-assume: \"arn:aws:iam::292999226676:role/github_actions-falco${{ inputs.bucket_suffix }}-s3\"\n          aws-region: ${{ env.AWS_S3_REGION }}    \n          \n      - name: Download RPM x86_64\n        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n        with:\n          name: falco-${{ inputs.version }}-x86_64.rpm\n",
                    "rendered": {
                      "text": "          role-to-assume: \"arn:aws:iam::292999226676:role/github_actions-falco${{ inputs.bucket_suffix }}-s3\"\n          aws-region: ${{ env.AWS_S3_REGION }}    \n          \n      - name: Download RPM x86_64\n        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n        with:\n          name: falco-${{ inputs.version }}-x86_64.rpm\n",
                      "markdown": "`          role-to-assume: \"arn:aws:iam::292999226676:role/github_actions-falco${{ inputs.bucket_suffix }}-s3\"\n          aws-region: ${{ env.AWS_S3_REGION }}    \n          \n      - name: Download RPM x86_64\n        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n        with:\n          name: falco-${{ inputs.version }}-x86_64.rpm\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_packages.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 9,
                  "endLine": 34,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: Install dependencies\n        run: |\n          dnf install rpm-sign expect which createrepo gpg python python-pip -y\n          pip install awscli==1.29.60\n\n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n      # Note: master CI can only push dev packages as we have 2 different roles for master and release.\n",
                    "rendered": {
                      "text": "      - name: Install dependencies\n        run: |\n          dnf install rpm-sign expect which createrepo gpg python python-pip -y\n          pip install awscli==1.29.60\n\n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n      # Note: master CI can only push dev packages as we have 2 different roles for master and release.\n",
                      "markdown": "`      - name: Install dependencies\n        run: |\n          dnf install rpm-sign expect which createrepo gpg python python-pip -y\n          pip install awscli==1.29.60\n\n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n      # Note: master CI can only push dev packages as we have 2 different roles for master and release.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_packages.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 30,
                  "endLine": 33,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    \n      - name: Install dependencies\n        run: |\n          dnf install rpm-sign expect which createrepo gpg python python-pip -y\n          pip install awscli==1.29.60\n\n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n",
                    "rendered": {
                      "text": "    \n      - name: Install dependencies\n        run: |\n          dnf install rpm-sign expect which createrepo gpg python python-pip -y\n          pip install awscli==1.29.60\n\n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n",
                      "markdown": "`    \n      - name: Install dependencies\n        run: |\n          dnf install rpm-sign expect which createrepo gpg python python-pip -y\n          pip install awscli==1.29.60\n\n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_packages.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 9,
                  "endLine": 33,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    \n      - name: Install dependencies\n        run: |\n          dnf install rpm-sign expect which createrepo gpg python python-pip -y\n          pip install awscli==1.29.60\n\n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n",
                    "rendered": {
                      "text": "    \n      - name: Install dependencies\n        run: |\n          dnf install rpm-sign expect which createrepo gpg python python-pip -y\n          pip install awscli==1.29.60\n\n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n",
                      "markdown": "`    \n      - name: Install dependencies\n        run: |\n          dnf install rpm-sign expect which createrepo gpg python python-pip -y\n          pip install awscli==1.29.60\n\n      # Configure AWS role; see https://github.com/falcosecurity/test-infra/pull/1102\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/codeql.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 19,
                  "endLine": 59,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        # queries: security-extended,security-and-quality\n\n    - name: Update base image\n      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n",
                    "rendered": {
                      "text": "        # queries: security-extended,security-and-quality\n\n    - name: Update base image\n      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n",
                      "markdown": "`        # queries: security-extended,security-and-quality\n\n    - name: Update base image\n      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/codeql.yaml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 11,
                  "endLine": 58,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs\n        # queries: security-extended,security-and-quality\n\n    - name: Update base image\n      run: sudo apt update -y\n\n    - name: Install build dependencies\n",
                    "rendered": {
                      "text": "        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs\n        # queries: security-extended,security-and-quality\n\n    - name: Update base image\n      run: sudo apt update -y\n\n    - name: Install build dependencies\n",
                      "markdown": "`        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs\n        # queries: security-extended,security-and-quality\n\n    - name: Update base image\n      run: sudo apt update -y\n\n    - name: Install build dependencies\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/codeql.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 50,
                  "endLine": 38,
                  "endColumn": 54,
                  "snippet": {
                    "text": "      matrix:\n        language: [ 'cpp' ]\n        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]\n        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support\n\n    steps:\n    - name: Checkout repository\n",
                    "rendered": {
                      "text": "      matrix:\n        language: [ 'cpp' ]\n        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]\n        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support\n\n    steps:\n    - name: Checkout repository\n",
                      "markdown": "`      matrix:\n        language: [ 'cpp' ]\n        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]\n        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support\n\n    steps:\n    - name: Checkout repository\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/codeql.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 265,
                  "endLine": 62,
                  "endColumn": 270,
                  "snippet": {
                    "text": "      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n\n    - name: Prepare project\n      run: |\n",
                    "rendered": {
                      "text": "      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n\n    - name: Prepare project\n      run: |\n",
                      "markdown": "`      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n\n    - name: Prepare project\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/codeql.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 170,
                  "endLine": 62,
                  "endColumn": 175,
                  "snippet": {
                    "text": "      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n\n    - name: Prepare project\n      run: |\n",
                    "rendered": {
                      "text": "      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n\n    - name: Prepare project\n      run: |\n",
                      "markdown": "`      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n\n    - name: Prepare project\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/codeql.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 46,
                  "endLine": 62,
                  "endColumn": 51,
                  "snippet": {
                    "text": "      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n\n    - name: Prepare project\n      run: |\n",
                    "rendered": {
                      "text": "      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n\n    - name: Prepare project\n      run: |\n",
                      "markdown": "`      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n\n    - name: Prepare project\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/codeql.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 15,
                  "endLine": 59,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        # queries: security-extended,security-and-quality\n\n    - name: Update base image\n      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n",
                    "rendered": {
                      "text": "        # queries: security-extended,security-and-quality\n\n    - name: Update base image\n      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n",
                      "markdown": "`        # queries: security-extended,security-and-quality\n\n    - name: Update base image\n      run: sudo apt update -y\n\n    - name: Install build dependencies\n      run: sudo DEBIAN_FRONTEND=noninteractive apt install libssl-dev libc-ares-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev libgrpc++-dev protobuf-compiler-grpc rpm libelf-dev cmake build-essential libcurl4-openssl-dev linux-headers-$(uname -r) clang llvm git -y\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/codeql.yaml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 16,
                  "endLine": 51,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      uses: github/codeql-action/init@47b3d888fe66b639e431abf22ebca059152f1eea # v3.24.5\n      with:\n        languages: ${{ matrix.language }}\n        # If you wish to specify custom queries, you can do so here or in a config file.\n        # By default, queries listed here will override any specified in a config file.\n        # Prefix the list here with \"+\" to use these queries and those in the config file.\n\n",
                    "rendered": {
                      "text": "      uses: github/codeql-action/init@47b3d888fe66b639e431abf22ebca059152f1eea # v3.24.5\n      with:\n        languages: ${{ matrix.language }}\n        # If you wish to specify custom queries, you can do so here or in a config file.\n        # By default, queries listed here will override any specified in a config file.\n        # Prefix the list here with \"+\" to use these queries and those in the config file.\n\n",
                      "markdown": "`      uses: github/codeql-action/init@47b3d888fe66b639e431abf22ebca059152f1eea # v3.24.5\n      with:\n        languages: ${{ matrix.language }}\n        # If you wish to specify custom queries, you can do so here or in a config file.\n        # By default, queries listed here will override any specified in a config file.\n        # Prefix the list here with \"+\" to use these queries and those in the config file.\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/codeql.yaml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 9,
                  "endLine": 4,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# For most projects, this workflow file will not need changing; you simply need\n# to commit it to your repository.\n#\n# You may wish to alter this file to override the set of languages analyzed,\n# or to provide custom queries or build logic.\n#\n# ******** NOTE ********\n",
                    "rendered": {
                      "text": "# For most projects, this workflow file will not need changing; you simply need\n# to commit it to your repository.\n#\n# You may wish to alter this file to override the set of languages analyzed,\n# or to provide custom queries or build logic.\n#\n# ******** NOTE ********\n",
                      "markdown": "`# For most projects, this workflow file will not need changing; you simply need\n# to commit it to your repository.\n#\n# You may wish to alter this file to override the set of languages analyzed,\n# or to provide custom queries or build logic.\n#\n# ******** NOTE ********\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/dependabot.yml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 38,
                  "endLine": 8,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 11,
                  "endLine": 143,
                  "endColumn": 22,
                  "snippet": {
                    "text": "            echo \"[POST-INSTALL] Enable 'falco-$chosen_unit.service':\"\n            systemctl --system enable \"falco-$chosen_unit.service\" || true\n            echo \"[POST-INSTALL] Start 'falco-$chosen_unit.service':\"\n            systemctl --system start \"falco-$chosen_unit.service\" || true\n        fi\nfi\n",
                    "rendered": {
                      "text": "            echo \"[POST-INSTALL] Enable 'falco-$chosen_unit.service':\"\n            systemctl --system enable \"falco-$chosen_unit.service\" || true\n            echo \"[POST-INSTALL] Start 'falco-$chosen_unit.service':\"\n            systemctl --system start \"falco-$chosen_unit.service\" || true\n        fi\nfi\n",
                      "markdown": "`            echo \"[POST-INSTALL] Enable 'falco-$chosen_unit.service':\"\n            systemctl --system enable \"falco-$chosen_unit.service\" || true\n            echo \"[POST-INSTALL] Start 'falco-$chosen_unit.service':\"\n            systemctl --system start \"falco-$chosen_unit.service\" || true\n        fi\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 11,
                  "endLine": 141,
                  "endColumn": 22,
                  "snippet": {
                    "text": "        if [ -n \"$chosen_unit\" ]; then\n            # we do this in 2 steps because `enable --now` is not always supported\n            echo \"[POST-INSTALL] Enable 'falco-$chosen_unit.service':\"\n            systemctl --system enable \"falco-$chosen_unit.service\" || true\n            echo \"[POST-INSTALL] Start 'falco-$chosen_unit.service':\"\n            systemctl --system start \"falco-$chosen_unit.service\" || true\n        fi\n",
                    "rendered": {
                      "text": "        if [ -n \"$chosen_unit\" ]; then\n            # we do this in 2 steps because `enable --now` is not always supported\n            echo \"[POST-INSTALL] Enable 'falco-$chosen_unit.service':\"\n            systemctl --system enable \"falco-$chosen_unit.service\" || true\n            echo \"[POST-INSTALL] Start 'falco-$chosen_unit.service':\"\n            systemctl --system start \"falco-$chosen_unit.service\" || true\n        fi\n",
                      "markdown": "`        if [ -n \"$chosen_unit\" ]; then\n            # we do this in 2 steps because `enable --now` is not always supported\n            echo \"[POST-INSTALL] Enable 'falco-$chosen_unit.service':\"\n            systemctl --system enable \"falco-$chosen_unit.service\" || true\n            echo \"[POST-INSTALL] Start 'falco-$chosen_unit.service':\"\n            systemctl --system start \"falco-$chosen_unit.service\" || true\n        fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 44,
                  "endLine": 117,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nset -e\n\necho \"[POST-INSTALL] Trigger deamon-reload:\"\nsystemctl --system daemon-reload || true\n\n# If needed, try to load/compile the driver through falcoctl\ncase \"$chosen_driver\" in\n",
                    "rendered": {
                      "text": "\nset -e\n\necho \"[POST-INSTALL] Trigger deamon-reload:\"\nsystemctl --system daemon-reload || true\n\n# If needed, try to load/compile the driver through falcoctl\ncase \"$chosen_driver\" in\n",
                      "markdown": "`\nset -e\n\necho \"[POST-INSTALL] Trigger deamon-reload:\"\nsystemctl --system daemon-reload || true\n\n# If needed, try to load/compile the driver through falcoctl\ncase \"$chosen_driver\" in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 19,
                  "endLine": 107,
                  "endColumn": 30,
                  "snippet": {
                    "text": "            case $CHOICE in\n                2)\n                    # we don't want falcoctl enabled, we mask it\n                    systemctl --system mask falcoctl-artifact-follow.service || true\n                ;;\n            esac\n        fi    \n",
                    "rendered": {
                      "text": "            case $CHOICE in\n                2)\n                    # we don't want falcoctl enabled, we mask it\n                    systemctl --system mask falcoctl-artifact-follow.service || true\n                ;;\n            esac\n        fi    \n",
                      "markdown": "`            case $CHOICE in\n                2)\n                    # we don't want falcoctl enabled, we mask it\n                    systemctl --system mask falcoctl-artifact-follow.service || true\n                ;;\n            esac\n        fi    \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 73,
                  "endLine": 88,
                  "endColumn": 78,
                  "snippet": {
                    "text": "                # Configure falcoctl to enable all drivers\n                falcoctl driver config --type \"modern_ebpf\" --type \"kmod\" --type \"ebpf\"\n                # Load the actually automatic chosen driver\n                chosen_driver=$(falcoctl driver printenv | grep DRIVER= | cut -d'\"' -f2)\n            else\n                falcoctl driver config --type \"$chosen_driver\"\n            fi\n",
                    "rendered": {
                      "text": "                # Configure falcoctl to enable all drivers\n                falcoctl driver config --type \"modern_ebpf\" --type \"kmod\" --type \"ebpf\"\n                # Load the actually automatic chosen driver\n                chosen_driver=$(falcoctl driver printenv | grep DRIVER= | cut -d'\"' -f2)\n            else\n                falcoctl driver config --type \"$chosen_driver\"\n            fi\n",
                      "markdown": "`                # Configure falcoctl to enable all drivers\n                falcoctl driver config --type \"modern_ebpf\" --type \"kmod\" --type \"ebpf\"\n                # Load the actually automatic chosen driver\n                chosen_driver=$(falcoctl driver printenv | grep DRIVER= | cut -d'\"' -f2)\n            else\n                falcoctl driver config --type \"$chosen_driver\"\n            fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 58,
                  "endLine": 88,
                  "endColumn": 64,
                  "snippet": {
                    "text": "                # Configure falcoctl to enable all drivers\n                falcoctl driver config --type \"modern_ebpf\" --type \"kmod\" --type \"ebpf\"\n                # Load the actually automatic chosen driver\n                chosen_driver=$(falcoctl driver printenv | grep DRIVER= | cut -d'\"' -f2)\n            else\n                falcoctl driver config --type \"$chosen_driver\"\n            fi\n",
                    "rendered": {
                      "text": "                # Configure falcoctl to enable all drivers\n                falcoctl driver config --type \"modern_ebpf\" --type \"kmod\" --type \"ebpf\"\n                # Load the actually automatic chosen driver\n                chosen_driver=$(falcoctl driver printenv | grep DRIVER= | cut -d'\"' -f2)\n            else\n                falcoctl driver config --type \"$chosen_driver\"\n            fi\n",
                      "markdown": "`                # Configure falcoctl to enable all drivers\n                falcoctl driver config --type \"modern_ebpf\" --type \"kmod\" --type \"ebpf\"\n                # Load the actually automatic chosen driver\n                chosen_driver=$(falcoctl driver printenv | grep DRIVER= | cut -d'\"' -f2)\n            else\n                falcoctl driver config --type \"$chosen_driver\"\n            fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 34,
                  "endLine": 39,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\nsystemctl --system unmask falcoctl-artifact-follow.service || true\n\nif [ \"$1\" = \"configure\" ]; then\n\t# \"auto\" case is not managed here since it is already the default, so no CHOICE=2\n",
                    "rendered": {
                      "text": "systemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\nsystemctl --system unmask falcoctl-artifact-follow.service || true\n\nif [ \"$1\" = \"configure\" ]; then\n\t# \"auto\" case is not managed here since it is already the default, so no CHOICE=2\n",
                      "markdown": "`systemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\nsystemctl --system unmask falcoctl-artifact-follow.service || true\n\nif [ \"$1\" = \"configure\" ]; then\n\t# \"auto\" case is not managed here since it is already the default, so no CHOICE=2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 57,
                  "endLine": 36,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\nsystemctl --system unmask falcoctl-artifact-follow.service || true\n",
                    "rendered": {
                      "text": "systemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\nsystemctl --system unmask falcoctl-artifact-follow.service || true\n",
                      "markdown": "`systemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\nsystemctl --system unmask falcoctl-artifact-follow.service || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 61,
                  "endLine": 35,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\n",
                    "rendered": {
                      "text": "systemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\n",
                      "markdown": "`systemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n# unmask falcoctl if it was masked\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 54,
                  "endLine": 34,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n",
                    "rendered": {
                      "text": "systemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n",
                      "markdown": "`systemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 55,
                  "endLine": 33,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n",
                    "rendered": {
                      "text": "systemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n",
                      "markdown": "`systemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\nsystemctl --system disable 'falcoctl-artifact-follow.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 66,
                  "endLine": 32,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\n",
                    "rendered": {
                      "text": "systemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\n",
                      "markdown": "`systemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\nsystemctl --system disable 'falco-custom.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 54,
                  "endLine": 31,
                  "endColumn": 10,
                  "snippet": {
                    "text": "systemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\n",
                    "rendered": {
                      "text": "systemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\n",
                      "markdown": "`systemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\nsystemctl --system disable 'falco-modern-bpf.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 58,
                  "endLine": 30,
                  "endColumn": 10,
                  "snippet": {
                    "text": "echo \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\n",
                    "rendered": {
                      "text": "echo \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\n",
                      "markdown": "`echo \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\nsystemctl --system disable 'falco-bpf.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 51,
                  "endLine": 29,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\n",
                    "rendered": {
                      "text": "# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\n",
                      "markdown": "`# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\nsystemctl --system disable 'falco-kmod.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 52,
                  "endLine": 28,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n",
                    "rendered": {
                      "text": "\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n",
                      "markdown": "`\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\nsystemctl --system stop 'falcoctl-artifact-follow.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 60,
                  "endLine": 27,
                  "endColumn": 10,
                  "snippet": {
                    "text": "CHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\n",
                    "rendered": {
                      "text": "CHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\n",
                      "markdown": "`CHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\nsystemctl --system stop 'falco-modern-bpf.service' || true\nsystemctl --system stop 'falco-custom.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 25,
                  "endLine": 25,
                  "endColumn": 33,
                  "snippet": {
                    "text": "chosen_unit=\nCHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n",
                    "rendered": {
                      "text": "chosen_unit=\nCHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n",
                      "markdown": "`chosen_unit=\nCHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/debian/postinst.in"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 7,
                  "endLine": 25,
                  "endColumn": 13,
                  "snippet": {
                    "text": "chosen_unit=\nCHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n",
                    "rendered": {
                      "text": "chosen_unit=\nCHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n",
                      "markdown": "`chosen_unit=\nCHOICE=\n\n# Every time we call this script we want to stat from a clean state.\necho \"[POST-INSTALL] Disable all possible 'falco' services:\"\nsystemctl --system stop 'falco-kmod.service' || true\nsystemctl --system stop 'falco-bpf.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postuninstall.in"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 38,
                  "endLine": 9,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postuninstall.in"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 7,
                  "endLine": 30,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n        systemctl --system daemon-reload || true\nfi\n",
                    "rendered": {
                      "text": "        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n        systemctl --system daemon-reload || true\nfi\n",
                      "markdown": "`        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n        systemctl --system daemon-reload || true\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postuninstall.in"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 7,
                  "endLine": 27,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n        systemctl --system daemon-reload || true\n",
                    "rendered": {
                      "text": "        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n        systemctl --system daemon-reload || true\n",
                      "markdown": "`        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n        systemctl --system daemon-reload || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postuninstall.in"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 7,
                  "endLine": 26,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        systemctl --system disable 'falco-kmod.service'|| true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n",
                    "rendered": {
                      "text": "        systemctl --system disable 'falco-kmod.service'|| true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n",
                      "markdown": "`        systemctl --system disable 'falco-kmod.service'|| true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n        echo \"[POST-REMOVE] Trigger deamon-reload:\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postuninstall.in"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 7,
                  "endLine": 25,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service'|| true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n",
                    "rendered": {
                      "text": "        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service'|| true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n",
                      "markdown": "`        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service'|| true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postuninstall.in"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 7,
                  "endLine": 24,
                  "endColumn": 18,
                  "snippet": {
                    "text": "if [ -d /run/systemd/system ] && [ $1 -eq 0 ]; then\n        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service'|| true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n",
                    "rendered": {
                      "text": "if [ -d /run/systemd/system ] && [ $1 -eq 0 ]; then\n        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service'|| true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n",
                      "markdown": "`if [ -d /run/systemd/system ] && [ $1 -eq 0 ]; then\n        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service'|| true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n        systemctl --system disable 'falcoctl-artifact-follow.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/rpm/postuninstall.in"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 7,
                  "endLine": 23,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nif [ -d /run/systemd/system ] && [ $1 -eq 0 ]; then\n        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service'|| true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n",
                    "rendered": {
                      "text": "\nif [ -d /run/systemd/system ] && [ $1 -eq 0 ]; then\n        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service'|| true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n",
                      "markdown": "`\nif [ -d /run/systemd/system ] && [ $1 -eq 0 ]; then\n        echo \"[POST-REMOVE] Disable all Falco services:\"\n        systemctl --system disable 'falco-kmod.service'|| true\n        systemctl --system disable 'falco-bpf.service' || true\n        systemctl --system disable 'falco-modern-bpf.service' || true\n        systemctl --system disable 'falco-custom.service' || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/systemd/falcoctl-artifact-follow.service"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 57,
                  "endLine": 2,
                  "endColumn": 65,
                  "snippet": {
                    "text": "[Unit]\nDescription=Falcoctl Artifact Follow: automatic artifacts update service\nDocumentation=https://falco.org/docs/\nPartOf=falco-bpf.service falco-kmod.service falco-modern-bpf.service falco-custom.service\n\n",
                    "rendered": {
                      "text": "[Unit]\nDescription=Falcoctl Artifact Follow: automatic artifacts update service\nDocumentation=https://falco.org/docs/\nPartOf=falco-bpf.service falco-kmod.service falco-modern-bpf.service falco-custom.service\n\n",
                      "markdown": "`[Unit]\nDescription=Falcoctl Artifact Follow: automatic artifacts update service\nDocumentation=https://falco.org/docs/\nPartOf=falco-bpf.service falco-kmod.service falco-modern-bpf.service falco-custom.service\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/systemd/falcoctl-artifact-follow.service"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 64,
                  "endLine": 3,
                  "snippet": {
                    "text": "[Unit]\nDescription=Falcoctl Artifact Follow: automatic artifacts update service\nDocumentation=https://falco.org/docs/\nPartOf=falco-bpf.service falco-kmod.service falco-modern-bpf.service falco-custom.service\n\n[Service]\n",
                    "rendered": {
                      "text": "[Unit]\nDescription=Falcoctl Artifact Follow: automatic artifacts update service\nDocumentation=https://falco.org/docs/\nPartOf=falco-bpf.service falco-kmod.service falco-modern-bpf.service falco-custom.service\n\n[Service]\n",
                      "markdown": "`[Unit]\nDescription=Falcoctl Artifact Follow: automatic artifacts update service\nDocumentation=https://falco.org/docs/\nPartOf=falco-bpf.service falco-kmod.service falco-modern-bpf.service falco-custom.service\n\n[Service]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 1,
                  "endLine": 237,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  reduce_dir_size \"${tmp_repo_path}/${debSuite}\" 10 deb\nfi\n\n# update the repo by adding new packages\nif ! [ ${#files[@]} -eq 0 ]; then\n  for file in \"${files[@]}\"; do\n    echo \"Adding ${file}...\"\n",
                    "rendered": {
                      "text": "  reduce_dir_size \"${tmp_repo_path}/${debSuite}\" 10 deb\nfi\n\n# update the repo by adding new packages\nif ! [ ${#files[@]} -eq 0 ]; then\n  for file in \"${files[@]}\"; do\n    echo \"Adding ${file}...\"\n",
                      "markdown": "`  reduce_dir_size \"${tmp_repo_path}/${debSuite}\" 10 deb\nfi\n\n# update the repo by adding new packages\nif ! [ ${#files[@]} -eq 0 ]; then\n  for file in \"${files[@]}\"; do\n    echo \"Adding ${file}...\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 1,
                  "endLine": 214,
                  "endColumn": 9,
                  "snippet": {
                    "text": "mkdir -p ${tmp_repo_path}\naws s3 cp ${s3_bucket_repo} ${tmp_repo_path} --recursive\n\n# update signatures for all existing packages\nif [ \"${sign_all}\" ]; then\n  for file in ${tmp_repo_path}/${debSuite}/*; do\n    if [ -f \"$file\" ]; then # exclude directories, symlinks, etc...\n",
                    "rendered": {
                      "text": "mkdir -p ${tmp_repo_path}\naws s3 cp ${s3_bucket_repo} ${tmp_repo_path} --recursive\n\n# update signatures for all existing packages\nif [ \"${sign_all}\" ]; then\n  for file in ${tmp_repo_path}/${debSuite}/*; do\n    if [ -f \"$file\" ]; then # exclude directories, symlinks, etc...\n",
                      "markdown": "`mkdir -p ${tmp_repo_path}\naws s3 cp ${s3_bucket_repo} ${tmp_repo_path} --recursive\n\n# update signatures for all existing packages\nif [ \"${sign_all}\" ]; then\n  for file in ${tmp_repo_path}/${debSuite}/*; do\n    if [ -f \"$file\" ]; then # exclude directories, symlinks, etc...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 1,
                  "endLine": 87,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    popd > /dev/null\n}\n\n# Update the local DEB repository\n#\n# $1: path of the repository\n# $2: suite (eg. \"stable\")\n",
                    "rendered": {
                      "text": "    popd > /dev/null\n}\n\n# Update the local DEB repository\n#\n# $1: path of the repository\n# $2: suite (eg. \"stable\")\n",
                      "markdown": "`    popd > /dev/null\n}\n\n# Update the local DEB repository\n#\n# $1: path of the repository\n# $2: suite (eg. \"stable\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package_x86_64.deb> -f <package_aarch64.deb> -r <deb|deb-dev> [-s]\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package_x86_64.deb> -f <package_aarch64.deb> -r <deb|deb-dev> [-s]\"\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package_x86_64.deb> -f <package_aarch64.deb> -r <deb|deb-dev> [-s]\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 10,
                  "endLine": 251,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    package=$(basename -- ${file})\n    echo \"Publishing ${package} to ${s3_bucket_repo}...\"\n    aws s3 cp ${tmp_repo_path}/${debSuite}/${package} ${s3_bucket_repo}/${debSuite}/${package} --acl public-read\n    aws s3 cp ${tmp_repo_path}/${debSuite}/${package}.asc ${s3_bucket_repo}/${debSuite}/${package}.asc --acl public-read\n\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${debSuite}/${package}\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${debSuite}/${package}.asc\n",
                    "rendered": {
                      "text": "    package=$(basename -- ${file})\n    echo \"Publishing ${package} to ${s3_bucket_repo}...\"\n    aws s3 cp ${tmp_repo_path}/${debSuite}/${package} ${s3_bucket_repo}/${debSuite}/${package} --acl public-read\n    aws s3 cp ${tmp_repo_path}/${debSuite}/${package}.asc ${s3_bucket_repo}/${debSuite}/${package}.asc --acl public-read\n\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${debSuite}/${package}\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${debSuite}/${package}.asc\n",
                      "markdown": "`    package=$(basename -- ${file})\n    echo \"Publishing ${package} to ${s3_bucket_repo}...\"\n    aws s3 cp ${tmp_repo_path}/${debSuite}/${package} ${s3_bucket_repo}/${debSuite}/${package} --acl public-read\n    aws s3 cp ${tmp_repo_path}/${debSuite}/${package}.asc ${s3_bucket_repo}/${debSuite}/${package}.asc --acl public-read\n\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${debSuite}/${package}\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${debSuite}/${package}.asc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 10,
                  "endLine": 250,
                  "endColumn": 14,
                  "snippet": {
                    "text": "  for file in \"${files[@]}\"; do\n    package=$(basename -- ${file})\n    echo \"Publishing ${package} to ${s3_bucket_repo}...\"\n    aws s3 cp ${tmp_repo_path}/${debSuite}/${package} ${s3_bucket_repo}/${debSuite}/${package} --acl public-read\n    aws s3 cp ${tmp_repo_path}/${debSuite}/${package}.asc ${s3_bucket_repo}/${debSuite}/${package}.asc --acl public-read\n\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${debSuite}/${package}\n",
                    "rendered": {
                      "text": "  for file in \"${files[@]}\"; do\n    package=$(basename -- ${file})\n    echo \"Publishing ${package} to ${s3_bucket_repo}...\"\n    aws s3 cp ${tmp_repo_path}/${debSuite}/${package} ${s3_bucket_repo}/${debSuite}/${package} --acl public-read\n    aws s3 cp ${tmp_repo_path}/${debSuite}/${package}.asc ${s3_bucket_repo}/${debSuite}/${package}.asc --acl public-read\n\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${debSuite}/${package}\n",
                      "markdown": "`  for file in \"${files[@]}\"; do\n    package=$(basename -- ${file})\n    echo \"Publishing ${package} to ${s3_bucket_repo}...\"\n    aws s3 cp ${tmp_repo_path}/${debSuite}/${package} ${s3_bucket_repo}/${debSuite}/${package} --acl public-read\n    aws s3 cp ${tmp_repo_path}/${debSuite}/${package}.asc ${s3_bucket_repo}/${debSuite}/${package}.asc --acl public-read\n\n    aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DIST_ID} --paths ${cloudfront_path}/${debSuite}/${package}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 14,
                  "endLine": 224,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        sign_deb ${tmp_repo_path} ${debSuite} ${file}\n\n        echo \"Syncing ${package}.asc to ${s3_bucket_repo}...\"\n        aws s3 cp ${tmp_repo_path}/${debSuite}/${package}.asc ${s3_bucket_repo}/${debSuite}/${package}.asc --acl public-read\n      fi\n    fi\n  done\n",
                    "rendered": {
                      "text": "        sign_deb ${tmp_repo_path} ${debSuite} ${file}\n\n        echo \"Syncing ${package}.asc to ${s3_bucket_repo}...\"\n        aws s3 cp ${tmp_repo_path}/${debSuite}/${package}.asc ${s3_bucket_repo}/${debSuite}/${package}.asc --acl public-read\n      fi\n    fi\n  done\n",
                      "markdown": "`        sign_deb ${tmp_repo_path} ${debSuite} ${file}\n\n        echo \"Syncing ${package}.asc to ${s3_bucket_repo}...\"\n        aws s3 cp ${tmp_repo_path}/${debSuite}/${package}.asc ${s3_bucket_repo}/${debSuite}/${package}.asc --acl public-read\n      fi\n    fi\n  done\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 6,
                  "endLine": 212,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# prepare repository local copy\necho \"Fetching ${s3_bucket_repo}...\"\nmkdir -p ${tmp_repo_path}\naws s3 cp ${s3_bucket_repo} ${tmp_repo_path} --recursive\n\n# update signatures for all existing packages\nif [ \"${sign_all}\" ]; then\n",
                    "rendered": {
                      "text": "# prepare repository local copy\necho \"Fetching ${s3_bucket_repo}...\"\nmkdir -p ${tmp_repo_path}\naws s3 cp ${s3_bucket_repo} ${tmp_repo_path} --recursive\n\n# update signatures for all existing packages\nif [ \"${sign_all}\" ]; then\n",
                      "markdown": "`# prepare repository local copy\necho \"Fetching ${s3_bucket_repo}...\"\nmkdir -p ${tmp_repo_path}\naws s3 cp ${s3_bucket_repo} ${tmp_repo_path} --recursive\n\n# update signatures for all existing packages\nif [ \"${sign_all}\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 13,
                  "endLine": 202,
                  "snippet": {
                    "text": "check_program bzip2\ncheck_program gpg\ncheck_program aws\ncheck_program dpkg\n\n# settings\ndebSuite=stable\ns3_bucket_repo=\"s3://falco-distribution/packages/${repo}\"\n",
                    "rendered": {
                      "text": "check_program bzip2\ncheck_program gpg\ncheck_program aws\ncheck_program dpkg\n\n# settings\ndebSuite=stable\ns3_bucket_repo=\"s3://falco-distribution/packages/${repo}\"\n",
                      "markdown": "`check_program bzip2\ncheck_program gpg\ncheck_program aws\ncheck_program dpkg\n\n# settings\ndebSuite=stable\ns3_bucket_repo=\"s3://falco-distribution/packages/${repo}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 80,
                  "endLine": 148,
                  "endColumn": 86,
                  "snippet": {
                    "text": "    local DEL_SIZE=$(( (CUR_SIZE - MAX_SIZE) * 1024 ))\n\n    local ACC_SIZE=0\n    find \"$DIR\" -maxdepth 1 -type f -name \"*.$EXTENSION\" -printf \"%T+ %s %p\\n\" | sort | while read -r date size file; do\n        if ((ACC_SIZE + size < DEL_SIZE)); then\n            rm \"$file\"\n            ACC_SIZE=$((ACC_SIZE + size))\n",
                    "rendered": {
                      "text": "    local DEL_SIZE=$(( (CUR_SIZE - MAX_SIZE) * 1024 ))\n\n    local ACC_SIZE=0\n    find \"$DIR\" -maxdepth 1 -type f -name \"*.$EXTENSION\" -printf \"%T+ %s %p\\n\" | sort | while read -r date size file; do\n        if ((ACC_SIZE + size < DEL_SIZE)); then\n            rm \"$file\"\n            ACC_SIZE=$((ACC_SIZE + size))\n",
                      "markdown": "`    local DEL_SIZE=$(( (CUR_SIZE - MAX_SIZE) * 1024 ))\n\n    local ACC_SIZE=0\n    find \"$DIR\" -maxdepth 1 -type f -name \"*.$EXTENSION\" -printf \"%T+ %s %p\\n\" | sort | while read -r date size file; do\n        if ((ACC_SIZE + size < DEL_SIZE)); then\n            rm \"$file\"\n            ACC_SIZE=$((ACC_SIZE + size))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 3,
                  "endLine": 148,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    local DEL_SIZE=$(( (CUR_SIZE - MAX_SIZE) * 1024 ))\n\n    local ACC_SIZE=0\n    find \"$DIR\" -maxdepth 1 -type f -name \"*.$EXTENSION\" -printf \"%T+ %s %p\\n\" | sort | while read -r date size file; do\n        if ((ACC_SIZE + size < DEL_SIZE)); then\n            rm \"$file\"\n            ACC_SIZE=$((ACC_SIZE + size))\n",
                    "rendered": {
                      "text": "    local DEL_SIZE=$(( (CUR_SIZE - MAX_SIZE) * 1024 ))\n\n    local ACC_SIZE=0\n    find \"$DIR\" -maxdepth 1 -type f -name \"*.$EXTENSION\" -printf \"%T+ %s %p\\n\" | sort | while read -r date size file; do\n        if ((ACC_SIZE + size < DEL_SIZE)); then\n            rm \"$file\"\n            ACC_SIZE=$((ACC_SIZE + size))\n",
                      "markdown": "`    local DEL_SIZE=$(( (CUR_SIZE - MAX_SIZE) * 1024 ))\n\n    local ACC_SIZE=0\n    find \"$DIR\" -maxdepth 1 -type f -name \"*.$EXTENSION\" -printf \"%T+ %s %p\\n\" | sort | while read -r date size file; do\n        if ((ACC_SIZE + size < DEL_SIZE)); then\n            rm \"$file\"\n            ACC_SIZE=$((ACC_SIZE + size))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 36,
                  "endLine": 137,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    fi\n\n    # Calculate current directory size in KB\n    local CUR_SIZE=$(du -sk \"$DIR\" | cut -f1)\n\n    # Check if we need to delete any files\n    if ((CUR_SIZE <= MAX_SIZE)); then\n",
                    "rendered": {
                      "text": "    fi\n\n    # Calculate current directory size in KB\n    local CUR_SIZE=$(du -sk \"$DIR\" | cut -f1)\n\n    # Check if we need to delete any files\n    if ((CUR_SIZE <= MAX_SIZE)); then\n",
                      "markdown": "`    fi\n\n    # Calculate current directory size in KB\n    local CUR_SIZE=$(du -sk \"$DIR\" | cut -f1)\n\n    # Check if we need to delete any files\n    if ((CUR_SIZE <= MAX_SIZE)); then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 5,
                  "endLine": 106,
                  "endColumn": 11,
                  "snippet": {
                    "text": "      # Find all ${arch} deb files.\n      # Note that debian uses {arm64,amd64}, while \n      # Falco packages use {x86_64,aarch64}.\n      find ${debs_dir} -name \"falco-*-$(falco_arch_from_deb_arch ${arch}).deb\" -exec apt-ftparchive packages {} \\; >> ${packages_dir}/Packages\n      gzip -c ${packages_dir}/Packages > ${packages_dir}/Packages.gz\n      bzip2 -z -c ${packages_dir}/Packages > ${packages_dir}/Packages.bz2\n    done\n",
                    "rendered": {
                      "text": "      # Find all ${arch} deb files.\n      # Note that debian uses {arm64,amd64}, while \n      # Falco packages use {x86_64,aarch64}.\n      find ${debs_dir} -name \"falco-*-$(falco_arch_from_deb_arch ${arch}).deb\" -exec apt-ftparchive packages {} \\; >> ${packages_dir}/Packages\n      gzip -c ${packages_dir}/Packages > ${packages_dir}/Packages.gz\n      bzip2 -z -c ${packages_dir}/Packages > ${packages_dir}/Packages.bz2\n    done\n",
                      "markdown": "`      # Find all ${arch} deb files.\n      # Note that debian uses {arm64,amd64}, while \n      # Falco packages use {x86_64,aarch64}.\n      find ${debs_dir} -name \"falco-*-$(falco_arch_from_deb_arch ${arch}).deb\" -exec apt-ftparchive packages {} \\; >> ${packages_dir}/Packages\n      gzip -c ${packages_dir}/Packages > ${packages_dir}/Packages.gz\n      bzip2 -z -c ${packages_dir}/Packages > ${packages_dir}/Packages.bz2\n    done\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 7,
                  "endLine": 103,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      local packages_dir=${release_dir}/${component}/binary-${arch}\n      mkdir -p ${packages_dir}\n      truncate -s 0 ${packages_dir}/Packages\n      # Find all ${arch} deb files.\n      # Note that debian uses {arm64,amd64}, while \n      # Falco packages use {x86_64,aarch64}.\n      find ${debs_dir} -name \"falco-*-$(falco_arch_from_deb_arch ${arch}).deb\" -exec apt-ftparchive packages {} \\; >> ${packages_dir}/Packages\n",
                    "rendered": {
                      "text": "      local packages_dir=${release_dir}/${component}/binary-${arch}\n      mkdir -p ${packages_dir}\n      truncate -s 0 ${packages_dir}/Packages\n      # Find all ${arch} deb files.\n      # Note that debian uses {arm64,amd64}, while \n      # Falco packages use {x86_64,aarch64}.\n      find ${debs_dir} -name \"falco-*-$(falco_arch_from_deb_arch ${arch}).deb\" -exec apt-ftparchive packages {} \\; >> ${packages_dir}/Packages\n",
                      "markdown": "`      local packages_dir=${release_dir}/${component}/binary-${arch}\n      mkdir -p ${packages_dir}\n      truncate -s 0 ${packages_dir}/Packages\n      # Find all ${arch} deb files.\n      # Note that debian uses {arm64,amd64}, while \n      # Falco packages use {x86_64,aarch64}.\n      find ${debs_dir} -name \"falco-*-$(falco_arch_from_deb_arch ${arch}).deb\" -exec apt-ftparchive packages {} \\; >> ${packages_dir}/Packages\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 3,
                  "endLine": 82,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    # release signature - InRelease file\n    gpg --armor --sign --clearsign --digest-algo SHA256 ${release_dir}/Release\n    rm -f ${release_dir}/InRelease\n    mv ${release_dir}/Release.asc ${release_dir}/InRelease\n\n    popd > /dev/null\n}\n",
                    "rendered": {
                      "text": "    # release signature - InRelease file\n    gpg --armor --sign --clearsign --digest-algo SHA256 ${release_dir}/Release\n    rm -f ${release_dir}/InRelease\n    mv ${release_dir}/Release.asc ${release_dir}/InRelease\n\n    popd > /dev/null\n}\n",
                      "markdown": "`    # release signature - InRelease file\n    gpg --armor --sign --clearsign --digest-algo SHA256 ${release_dir}/Release\n    rm -f ${release_dir}/InRelease\n    mv ${release_dir}/Release.asc ${release_dir}/InRelease\n\n    popd > /dev/null\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 3,
                  "endLine": 77,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    # release signature - Release.gpg file\n    gpg --detach-sign --digest-algo SHA256 --armor ${release_dir}/Release\n    rm -f ${release_dir}/Release.gpg\n    mv ${release_dir}/Release.asc ${release_dir}/Release.gpg\n    \n    # release signature - InRelease file\n    gpg --armor --sign --clearsign --digest-algo SHA256 ${release_dir}/Release\n",
                    "rendered": {
                      "text": "    # release signature - Release.gpg file\n    gpg --detach-sign --digest-algo SHA256 --armor ${release_dir}/Release\n    rm -f ${release_dir}/Release.gpg\n    mv ${release_dir}/Release.asc ${release_dir}/Release.gpg\n    \n    # release signature - InRelease file\n    gpg --armor --sign --clearsign --digest-algo SHA256 ${release_dir}/Release\n",
                      "markdown": "`    # release signature - Release.gpg file\n    gpg --detach-sign --digest-algo SHA256 --armor ${release_dir}/Release\n    rm -f ${release_dir}/Release.gpg\n    mv ${release_dir}/Release.asc ${release_dir}/Release.gpg\n    \n    # release signature - InRelease file\n    gpg --armor --sign --clearsign --digest-algo SHA256 ${release_dir}/Release\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 34,
                  "endLine": 46,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    sign_deb $1 $2 $3\n\n    # Get package architecture from dpkg\n    local arch=$(dpkg --info $3 |  awk '/Architecture/ {printf \"%s\", $2}')\n    # Store architecture in array\n    architectures+=(\"${arch}\")\n}\n",
                    "rendered": {
                      "text": "    sign_deb $1 $2 $3\n\n    # Get package architecture from dpkg\n    local arch=$(dpkg --info $3 |  awk '/Architecture/ {printf \"%s\", $2}')\n    # Store architecture in array\n    architectures+=(\"${arch}\")\n}\n",
                      "markdown": "`    sign_deb $1 $2 $3\n\n    # Get package architecture from dpkg\n    local arch=$(dpkg --info $3 |  awk '/Architecture/ {printf \"%s\", $2}')\n    # Store architecture in array\n    architectures+=(\"${arch}\")\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 35,
                  "endLine": 46,
                  "snippet": {
                    "text": "    cp -f $3 $1/$2\n    sign_deb $1 $2 $3\n\n    # Get package architecture from dpkg\n    local arch=$(dpkg --info $3 |  awk '/Architecture/ {printf \"%s\", $2}')\n    # Store architecture in array\n    architectures+=(\"${arch}\")\n}\n",
                    "rendered": {
                      "text": "    cp -f $3 $1/$2\n    sign_deb $1 $2 $3\n\n    # Get package architecture from dpkg\n    local arch=$(dpkg --info $3 |  awk '/Architecture/ {printf \"%s\", $2}')\n    # Store architecture in array\n    architectures+=(\"${arch}\")\n}\n",
                      "markdown": "`    cp -f $3 $1/$2\n    sign_deb $1 $2 $3\n\n    # Get package architecture from dpkg\n    local arch=$(dpkg --info $3 |  awk '/Architecture/ {printf \"%s\", $2}')\n    # Store architecture in array\n    architectures+=(\"${arch}\")\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 3,
                  "endLine": 42,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# $2: suite (eg. \"stable\")\n# $3: path of the DEB file.\nadd_deb() {\n    cp -f $3 $1/$2\n    sign_deb $1 $2 $3\n\n    # Get package architecture from dpkg\n",
                    "rendered": {
                      "text": "# $2: suite (eg. \"stable\")\n# $3: path of the DEB file.\nadd_deb() {\n    cp -f $3 $1/$2\n    sign_deb $1 $2 $3\n\n    # Get package architecture from dpkg\n",
                      "markdown": "`# $2: suite (eg. \"stable\")\n# $3: path of the DEB file.\nadd_deb() {\n    cp -f $3 $1/$2\n    sign_deb $1 $2 $3\n\n    # Get package architecture from dpkg\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/scripts/publish-deb"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package_x86_64.deb> -f <package_aarch64.deb> -r <deb|deb-dev> [-s]\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package_x86_64.deb> -f <package_aarch64.deb> -r <deb|deb-dev> [-s]\"\n",
                      "markdown": "`#!/usr/bin/env bash\nset -e\n\nusage() {\n    echo \"usage: $0 -f <package_x86_64.deb> -f <package_aarch64.deb> -r <deb|deb-dev> [-s]\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/tools/local_hooks/dco-pre-commit-msg.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 31,
                  "endLine": 9,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\nMESSAGE_FILE=\"$1\"\nGIT_AUTHOR=$(git var GIT_AUTHOR_IDENT)\nSIGNOFF_BY=$(echo $GIT_AUTHOR | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n\n# Verify if a DCO signoff message exists.\n# Append a DCO signoff message if one doesn't exist.\n",
                    "rendered": {
                      "text": "\nMESSAGE_FILE=\"$1\"\nGIT_AUTHOR=$(git var GIT_AUTHOR_IDENT)\nSIGNOFF_BY=$(echo $GIT_AUTHOR | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n\n# Verify if a DCO signoff message exists.\n# Append a DCO signoff message if one doesn't exist.\n",
                      "markdown": "`\nMESSAGE_FILE=\"$1\"\nGIT_AUTHOR=$(git var GIT_AUTHOR_IDENT)\nSIGNOFF_BY=$(echo $GIT_AUTHOR | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n\n# Verify if a DCO signoff message exists.\n# Append a DCO signoff message if one doesn't exist.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/tools/local_hooks/dco-pre-commit-msg.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 11,
                  "endLine": 3,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#!/bin/bash\n#\n# This is a git pre-commit-msg hook which automatically add a \n# DCO signed-off message if one is missing.\n#\n\n",
                    "rendered": {
                      "text": "#!/bin/bash\n#\n# This is a git pre-commit-msg hook which automatically add a \n# DCO signed-off message if one is missing.\n#\n\n",
                      "markdown": "`#!/bin/bash\n#\n# This is a git pre-commit-msg hook which automatically add a \n# DCO signed-off message if one is missing.\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 670,
                  "endLine": 15,
                  "endColumn": 687,
                  "snippet": {
                    "text": "el version >= 5.8. For the older `kmod` and `bpf` drivers, separate artifacts are released for the kernel space. This is because these drivers need to be explicitly compiled for the specific kernel release, using the exact kernel headers. This approach ensures that Falco can support a wide range of environments, including multiple kernel versions, distributions, and architectures.  (see `libs` [driver - kernel version support matrix](https://github.com/falcosecurity/libs#drivers-officially-supported-architectures)).\n\nThe Falco Project manages the release of both the Falco userspace binary and pre-compiled Falc",
                    "rendered": {
                      "text": "el version >= 5.8. For the older `kmod` and `bpf` drivers, separate artifacts are released for the kernel space. This is because these drivers need to be explicitly compiled for the specific kernel release, using the exact kernel headers. This approach ensures that Falco can support a wide range of environments, including multiple kernel versions, distributions, and architectures.  (see `libs` [driver - kernel version support matrix](https://github.com/falcosecurity/libs#drivers-officially-supported-architectures)).\n\nThe Falco Project manages the release of both the Falco userspace binary and pre-compiled Falc",
                      "markdown": "`el version >= 5.8. For the older `kmod` and `bpf` drivers, separate artifacts are released for the kernel space. This is because these drivers need to be explicitly compiled for the specific kernel release, using the exact kernel headers. This approach ensures that Falco can support a wide range of environments, including multiple kernel versions, distributions, and architectures.  (see `libs` [driver - kernel version support matrix](https://github.com/falcosecurity/libs#drivers-officially-supported-architectures)).\n\nThe Falco Project manages the release of both the Falco userspace binary and pre-compiled Falc`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 1,
                  "endLine": 185,
                  "endColumn": 5,
                  "snippet": {
                    "text": "ON` flag that references the stable libs version is used (read below).\n- Similarly, Falco plugins versions are bumped in Falco's cmake setup ([plugins cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/plugins.cmake)) and those versions are the ones used for the Falco release.\n- At release time Plugin, Libs and Driver versions are compatible with Falco.\n- If you use the standard Falco setup leveraging driver-loader, [driver-loader script](https://github.com/falcosecurity/falco/blob/master/scripts/falco-driver-loader) will fetch the kernel space artifact (object file) correspon",
                    "rendered": {
                      "text": "ON` flag that references the stable libs version is used (read below).\n- Similarly, Falco plugins versions are bumped in Falco's cmake setup ([plugins cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/plugins.cmake)) and those versions are the ones used for the Falco release.\n- At release time Plugin, Libs and Driver versions are compatible with Falco.\n- If you use the standard Falco setup leveraging driver-loader, [driver-loader script](https://github.com/falcosecurity/falco/blob/master/scripts/falco-driver-loader) will fetch the kernel space artifact (object file) correspon",
                      "markdown": "`ON` flag that references the stable libs version is used (read below).\n- Similarly, Falco plugins versions are bumped in Falco's cmake setup ([plugins cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/plugins.cmake)) and those versions are the ones used for the Falco release.\n- At release time Plugin, Libs and Driver versions are compatible with Falco.\n- If you use the standard Falco setup leveraging driver-loader, [driver-loader script](https://github.com/falcosecurity/falco/blob/master/scripts/falco-driver-loader) will fetch the kernel space artifact (object file) correspon`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 419,
                  "endLine": 183,
                  "endColumn": 423,
                  "snippet": {
                    "text": " ([falcosecurity-libs cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/falcosecurity-libs.cmake#L30) and [driver cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/driver.cmake#L29)) in order to merge new Falco features. In practice, they are mostly bumped at the same time referencing the same `libs` commit. However, for the official Falco build `FALCOSECURITY_LIBS_VERSION` flag that references the stable libs version is used (read below).\n- Similarly, Falco plugins versions are bumped in Falco's cmake setup ([plugins cmake](https://github.com/falcosecur",
                    "rendered": {
                      "text": " ([falcosecurity-libs cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/falcosecurity-libs.cmake#L30) and [driver cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/driver.cmake#L29)) in order to merge new Falco features. In practice, they are mostly bumped at the same time referencing the same `libs` commit. However, for the official Falco build `FALCOSECURITY_LIBS_VERSION` flag that references the stable libs version is used (read below).\n- Similarly, Falco plugins versions are bumped in Falco's cmake setup ([plugins cmake](https://github.com/falcosecur",
                      "markdown": "` ([falcosecurity-libs cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/falcosecurity-libs.cmake#L30) and [driver cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/driver.cmake#L29)) in order to merge new Falco features. In practice, they are mostly bumped at the same time referencing the same `libs` commit. However, for the official Falco build `FALCOSECURITY_LIBS_VERSION` flag that references the stable libs version is used (read below).\n- Similarly, Falco plugins versions are bumped in Falco's cmake setup ([plugins cmake](https://github.com/falcosecur`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 6,
                  "endLine": 155,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\nIn order to check the status of the release pipeline click on the [GitHub Actions tab](https://github.com/falcosecurity/falco/actions?query=event%3Arelease) in the Falco repository and filter by release.\n\n### 2. Update the meeting notes\n\nFor each release we archive the meeting notes in git for historical purposes.\n\n",
                    "rendered": {
                      "text": "\nIn order to check the status of the release pipeline click on the [GitHub Actions tab](https://github.com/falcosecurity/falco/actions?query=event%3Arelease) in the Falco repository and filter by release.\n\n### 2. Update the meeting notes\n\nFor each release we archive the meeting notes in git for historical purposes.\n\n",
                      "markdown": "`\nIn order to check the status of the release pipeline click on the [GitHub Actions tab](https://github.com/falcosecurity/falco/actions?query=event%3Arelease) in the Falco repository and filter by release.\n\n### 2. Update the meeting notes\n\nFor each release we archive the meeting notes in git for historical purposes.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 78,
                  "endLine": 125,
                  "endColumn": 82,
                  "snippet": {
                    "text": "\n## Publishing Pre-Releases (RCs and tagged development versions)\n\nCore maintainers and/or the release manager can decide to publish pre-releases at any time before the final release\nis live for development and testing purposes.\n\nThe prerelease tag must be formatted as `M.m.p-r`where `r` is the prerelease version information (e.g. `0.35.0-rc1`.)\n",
                    "rendered": {
                      "text": "\n## Publishing Pre-Releases (RCs and tagged development versions)\n\nCore maintainers and/or the release manager can decide to publish pre-releases at any time before the final release\nis live for development and testing purposes.\n\nThe prerelease tag must be formatted as `M.m.p-r`where `r` is the prerelease version information (e.g. `0.35.0-rc1`.)\n",
                      "markdown": "`\n## Publishing Pre-Releases (RCs and tagged development versions)\n\nCore maintainers and/or the release manager can decide to publish pre-releases at any time before the final release\nis live for development and testing purposes.\n\nThe prerelease tag must be formatted as `M.m.p-r`where `r` is the prerelease version information (e.g. `0.35.0-rc1`.)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 269,
                  "endLine": 91,
                  "endColumn": 277,
                  "snippet": {
                    "text": "e currently undergoing release\n- Double-check that there are no more merged PRs without the target milestone assigned with the `is:pr is:merged no:milestone closed:>YYYY-MM-DD` [filter](https://github.com/falcosecurity/falco/pulls?q=is%3Apr+is%3Amerged+no%3Amilestone+closed%3A%3EYYYY-MM-DD), if any, update those missing\n\n### 2. Milestones\n\n- Move the [tasks not completed](https://github.com/falcosecurity/falco/pulls?q=is%3Apr+is%3Aopen) to a new minor milestone\n\n\n### 3. Release branch\n\nAssuming we are releasing a non-patch version (like: Falco 0.34.0), a new release branch needs to be created.  \nIts n",
                    "rendered": {
                      "text": "e currently undergoing release\n- Double-check that there are no more merged PRs without the target milestone assigned with the `is:pr is:merged no:milestone closed:>YYYY-MM-DD` [filter](https://github.com/falcosecurity/falco/pulls?q=is%3Apr+is%3Amerged+no%3Amilestone+closed%3A%3EYYYY-MM-DD), if any, update those missing\n\n### 2. Milestones\n\n- Move the [tasks not completed](https://github.com/falcosecurity/falco/pulls?q=is%3Apr+is%3Aopen) to a new minor milestone\n\n\n### 3. Release branch\n\nAssuming we are releasing a non-patch version (like: Falco 0.34.0), a new release branch needs to be created.  \nIts n",
                      "markdown": "`e currently undergoing release\n- Double-check that there are no more merged PRs without the target milestone assigned with the `is:pr is:merged no:milestone closed:>YYYY-MM-DD` [filter](https://github.com/falcosecurity/falco/pulls?q=is%3Apr+is%3Amerged+no%3Amilestone+closed%3A%3EYYYY-MM-DD), if any, update those missing\n\n### 2. Milestones\n\n- Move the [tasks not completed](https://github.com/falcosecurity/falco/pulls?q=is%3Apr+is%3Aopen) to a new minor milestone\n\n\n### 3. Release branch\n\nAssuming we are releasing a non-patch version (like: Falco 0.34.0), a new release branch needs to be created.  \nIts n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 58,
                  "endLine": 86,
                  "endColumn": 62,
                  "snippet": {
                    "text": "g release proceed with the processes described below.  \n\n## Pre-Release Checklist\n\nBefore proceeding with the release, make sure to complete the following preparatory steps, which can be easily done using the GitHub UI:\n\n### 1. Release notes\n- Find the previous release date (`YYYY-MM-DD`) by looking at the [Falco releases](https://github.com/falcosecurity/falco/releases)\n- Check the release note block of every PR matching the `is:pr is:merged closed:>YYYY-MM-DD` [filter](https://github.com/falcosecurity/falco/pulls?q=is%3Apr+is%3Amerged+closed%3A%3EYYYY-MM-DD)\n    - Ensure the release note block f",
                    "rendered": {
                      "text": "g release proceed with the processes described below.  \n\n## Pre-Release Checklist\n\nBefore proceeding with the release, make sure to complete the following preparatory steps, which can be easily done using the GitHub UI:\n\n### 1. Release notes\n- Find the previous release date (`YYYY-MM-DD`) by looking at the [Falco releases](https://github.com/falcosecurity/falco/releases)\n- Check the release note block of every PR matching the `is:pr is:merged closed:>YYYY-MM-DD` [filter](https://github.com/falcosecurity/falco/pulls?q=is%3Apr+is%3Amerged+closed%3A%3EYYYY-MM-DD)\n    - Ensure the release note block f",
                      "markdown": "`g release proceed with the processes described below.  \n\n## Pre-Release Checklist\n\nBefore proceeding with the release, make sure to complete the following preparatory steps, which can be easily done using the GitHub UI:\n\n### 1. Release notes\n- Find the previous release date (`YYYY-MM-DD`) by looking at the [Falco releases](https://github.com/falcosecurity/falco/releases)\n- Check the release note block of every PR matching the `is:pr is:merged closed:>YYYY-MM-DD` [filter](https://github.com/falcosecurity/falco/pulls?q=is%3Apr+is%3Amerged+closed%3A%3EYYYY-MM-DD)\n    - Ensure the release note block f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 71,
                  "endColumn": 3,
                  "snippet": {
                    "text": "The release process is mostly automated, requiring only a few manual steps to initiate and complete.\n\nMoreover, we assign owners for each release (typically pairing a new person with an experienced one). Assignees and due dates for releases are proposed during the [weekly community call](https://github.com/falcosecurity/community).\n\nAt a high level each Falco release needs to follow a pre-determined sequencing of releases and build order:\n\n- [1 - 3] `libs` (+ `driver`) and `plugins` components releases\n- [4] Falco driver pre-compiled object files push to Falco's Artifacts repo\n",
                    "rendered": {
                      "text": "The release process is mostly automated, requiring only a few manual steps to initiate and complete.\n\nMoreover, we assign owners for each release (typically pairing a new person with an experienced one). Assignees and due dates for releases are proposed during the [weekly community call](https://github.com/falcosecurity/community).\n\nAt a high level each Falco release needs to follow a pre-determined sequencing of releases and build order:\n\n- [1 - 3] `libs` (+ `driver`) and `plugins` components releases\n- [4] Falco driver pre-compiled object files push to Falco's Artifacts repo\n",
                      "markdown": "`The release process is mostly automated, requiring only a few manual steps to initiate and complete.\n\nMoreover, we assign owners for each release (typically pairing a new person with an experienced one). Assignees and due dates for releases are proposed during the [weekly community call](https://github.com/falcosecurity/community).\n\nAt a high level each Falco release needs to follow a pre-determined sequencing of releases and build order:\n\n- [1 - 3] `libs` (+ `driver`) and `plugins` components releases\n- [4] Falco driver pre-compiled object files push to Falco's Artifacts repo\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 80,
                  "endLine": 60,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\n### Timeline\n\nFalco follows a release schedule of three times per year, with releases expected at the end of January, May, and September. Hotfix releases are issued as needed.\n\nChanges and new features are organized into [milestones](https://github.com/falcosecurity/falco/milestones). The milestone corresponding to the next version represents the content that will be included in the upcoming release.\n\n",
                    "rendered": {
                      "text": "\n### Timeline\n\nFalco follows a release schedule of three times per year, with releases expected at the end of January, May, and September. Hotfix releases are issued as needed.\n\nChanges and new features are organized into [milestones](https://github.com/falcosecurity/falco/milestones). The milestone corresponding to the next version represents the content that will be included in the upcoming release.\n\n",
                      "markdown": "`\n### Timeline\n\nFalco follows a release schedule of three times per year, with releases expected at the end of January, May, and September. Hotfix releases are issued as needed.\n\nChanges and new features are organized into [milestones](https://github.com/falcosecurity/falco/milestones). The milestone corresponding to the next version represents the content that will be included in the upcoming release.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 148,
                  "endLine": 6,
                  "endColumn": 152,
                  "snippet": {
                    "text": "\n## Overview\n\nThis document provides the process to create a new Falco release. In addition, it provides information about the versioning of the Falco components. At a high level each Falco release consists of the following main components:\n\n- Falco binary (userspace), includes `modern_bpf` driver object code (kernel space) starting with Falco 0.34.x releases\n- Falco kernel driver object files, separate artifacts for `kmod` and `bpf` drivers, not applicable for `modern_bpf` driver (kernel space)\n",
                    "rendered": {
                      "text": "\n## Overview\n\nThis document provides the process to create a new Falco release. In addition, it provides information about the versioning of the Falco components. At a high level each Falco release consists of the following main components:\n\n- Falco binary (userspace), includes `modern_bpf` driver object code (kernel space) starting with Falco 0.34.x releases\n- Falco kernel driver object files, separate artifacts for `kmod` and `bpf` drivers, not applicable for `modern_bpf` driver (kernel space)\n",
                      "markdown": "`\n## Overview\n\nThis document provides the process to create a new Falco release. In addition, it provides information about the versioning of the Falco components. At a high level each Falco release consists of the following main components:\n\n- Falco binary (userspace), includes `modern_bpf` driver object code (kernel space) starting with Falco 0.34.x releases\n- Falco kernel driver object files, separate artifacts for `kmod` and `bpf` drivers, not applicable for `modern_bpf` driver (kernel space)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 45,
                  "endLine": 212,
                  "endColumn": 50,
                  "snippet": {
                    "text": "- See [plugins release doc](https://github.com/falcosecurity/plugins/blob/master/release.md) for more information.\n\n### Rules repo\n- Rulesets are versioned individually through git tags\n- See [rules release doc](https://github.com/falcosecurity/rules/blob/main/RELEASE.md) for more information.\n- See [plugins release doc](https://github.com/falcosecurity/plugins/blob/master/release.md) for more information about plugins rulesets.\n",
                    "rendered": {
                      "text": "- See [plugins release doc](https://github.com/falcosecurity/plugins/blob/master/release.md) for more information.\n\n### Rules repo\n- Rulesets are versioned individually through git tags\n- See [rules release doc](https://github.com/falcosecurity/rules/blob/main/RELEASE.md) for more information.\n- See [plugins release doc](https://github.com/falcosecurity/plugins/blob/master/release.md) for more information about plugins rulesets.\n",
                      "markdown": "`- See [plugins release doc](https://github.com/falcosecurity/plugins/blob/master/release.md) for more information.\n\n### Rules repo\n- Rulesets are versioned individually through git tags\n- See [rules release doc](https://github.com/falcosecurity/rules/blob/main/RELEASE.md) for more information.\n- See [plugins release doc](https://github.com/falcosecurity/plugins/blob/master/release.md) for more information about plugins rulesets.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 22,
                  "endLine": 208,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n### Plugins repo\n\n- Plugins version is a git tag (`x.y.z`)\n- See [plugins release doc](https://github.com/falcosecurity/plugins/blob/master/release.md) for more information.\n\n### Rules repo\n",
                    "rendered": {
                      "text": "\n### Plugins repo\n\n- Plugins version is a git tag (`x.y.z`)\n- See [plugins release doc](https://github.com/falcosecurity/plugins/blob/master/release.md) for more information.\n\n### Rules repo\n",
                      "markdown": "`\n### Plugins repo\n\n- Plugins version is a git tag (`x.y.z`)\n- See [plugins release doc](https://github.com/falcosecurity/plugins/blob/master/release.md) for more information.\n\n### Rules repo\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 19,
                  "endLine": 202,
                  "endColumn": 24,
                  "snippet": {
                    "text": "API:    x.y.z (sem-ver like)\nEngine:        x\nDriver:\n  API version:    x.y.z (sem-ver)\n  Schema version: x.y.z (sem-ver)\n  Default driver: x.y.z+driver (sem-ver like, indirectly encodes compatibility range in addition to default version Falco is shipped with)\n```\n\n\n### Libs repo\n- Libs version is a git tag (`x.y.z`) and when building Falco the libs version is set via the `FALCOSECURITY_LIBS_VERSION` flag (see above).\n- The driver version is not directly linked to the userspace components of the Falco binary. This is because of the clear separation between userspace and kernel space, which adds an ",
                    "rendered": {
                      "text": "API:    x.y.z (sem-ver like)\nEngine:        x\nDriver:\n  API version:    x.y.z (sem-ver)\n  Schema version: x.y.z (sem-ver)\n  Default driver: x.y.z+driver (sem-ver like, indirectly encodes compatibility range in addition to default version Falco is shipped with)\n```\n\n\n### Libs repo\n- Libs version is a git tag (`x.y.z`) and when building Falco the libs version is set via the `FALCOSECURITY_LIBS_VERSION` flag (see above).\n- The driver version is not directly linked to the userspace components of the Falco binary. This is because of the clear separation between userspace and kernel space, which adds an ",
                      "markdown": "`API:    x.y.z (sem-ver like)\nEngine:        x\nDriver:\n  API version:    x.y.z (sem-ver)\n  Schema version: x.y.z (sem-ver)\n  Default driver: x.y.z+driver (sem-ver like, indirectly encodes compatibility range in addition to default version Falco is shipped with)\n```\n\n\n### Libs repo\n- Libs version is a git tag (`x.y.z`) and when building Falco the libs version is set via the `FALCOSECURITY_LIBS_VERSION` flag (see above).\n- The driver version is not directly linked to the userspace components of the Falco binary. This is because of the clear separation between userspace and kernel space, which adds an `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 12,
                  "endLine": 185,
                  "endColumn": 18,
                  "snippet": {
                    "text": "at references the stable libs version is used (read below).\n- Similarly, Falco plugins versions are bumped in Falco's cmake setup ([plugins cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/plugins.cmake)) and those versions are the ones used for the Falco release.\n- At release time Plugin, Libs and Driver versions are compatible with Falco.\n- If you use the standard Falco setup leveraging driver-loader, [driver-loader script](https://github.com/falcosecurity/falco/blob/master/scripts/falco-driver-loader) will fetch the kernel space artifact (object file) corresponding to the d",
                    "rendered": {
                      "text": "at references the stable libs version is used (read below).\n- Similarly, Falco plugins versions are bumped in Falco's cmake setup ([plugins cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/plugins.cmake)) and those versions are the ones used for the Falco release.\n- At release time Plugin, Libs and Driver versions are compatible with Falco.\n- If you use the standard Falco setup leveraging driver-loader, [driver-loader script](https://github.com/falcosecurity/falco/blob/master/scripts/falco-driver-loader) will fetch the kernel space artifact (object file) corresponding to the d",
                      "markdown": "`at references the stable libs version is used (read below).\n- Similarly, Falco plugins versions are bumped in Falco's cmake setup ([plugins cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/plugins.cmake)) and those versions are the ones used for the Falco release.\n- At release time Plugin, Libs and Driver versions are compatible with Falco.\n- If you use the standard Falco setup leveraging driver-loader, [driver-loader script](https://github.com/falcosecurity/falco/blob/master/scripts/falco-driver-loader) will fetch the kernel space artifact (object file) corresponding to the d`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 431,
                  "endLine": 183,
                  "endColumn": 437,
                  "snippet": {
                    "text": "rity-libs cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/falcosecurity-libs.cmake#L30) and [driver cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/driver.cmake#L29)) in order to merge new Falco features. In practice, they are mostly bumped at the same time referencing the same `libs` commit. However, for the official Falco build `FALCOSECURITY_LIBS_VERSION` flag that references the stable libs version is used (read below).\n- Similarly, Falco plugins versions are bumped in Falco's cmake setup ([plugins cmake](https://github.com/falcosecurity/falco/blob",
                    "rendered": {
                      "text": "rity-libs cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/falcosecurity-libs.cmake#L30) and [driver cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/driver.cmake#L29)) in order to merge new Falco features. In practice, they are mostly bumped at the same time referencing the same `libs` commit. However, for the official Falco build `FALCOSECURITY_LIBS_VERSION` flag that references the stable libs version is used (read below).\n- Similarly, Falco plugins versions are bumped in Falco's cmake setup ([plugins cmake](https://github.com/falcosecurity/falco/blob",
                      "markdown": "`rity-libs cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/falcosecurity-libs.cmake#L30) and [driver cmake](https://github.com/falcosecurity/falco/blob/master/cmake/modules/driver.cmake#L29)) in order to merge new Falco features. In practice, they are mostly bumped at the same time referencing the same `libs` commit. However, for the official Falco build `FALCOSECURITY_LIBS_VERSION` flag that references the stable libs version is used (read below).\n- Similarly, Falco plugins versions are bumped in Falco's cmake setup ([plugins cmake](https://github.com/falcosecurity/falco/blob`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 1044,
                  "endLine": 182,
                  "endColumn": 1050,
                  "snippet": {
                    "text": "ines](https://github.com/falcosecurity/rules/blob/main/RELEASE.md#versioning-a-ruleset) to understand how this affects the versioning of Falco rules. Breaking changes introduced in the Falco engine are not necessarily tied to the drivers or libs versions. The version number must be incremented every time and only when a single change or an atomic group of changes - which meet the criteria described above - is included in the `master` branch. Thus, a version bump can occur multiple times during the development and testing phases of a given release cycle. A given version bump must not group multiple c",
                    "rendered": {
                      "text": "ines](https://github.com/falcosecurity/rules/blob/main/RELEASE.md#versioning-a-ruleset) to understand how this affects the versioning of Falco rules. Breaking changes introduced in the Falco engine are not necessarily tied to the drivers or libs versions. The version number must be incremented every time and only when a single change or an atomic group of changes - which meet the criteria described above - is included in the `master` branch. Thus, a version bump can occur multiple times during the development and testing phases of a given release cycle. A given version bump must not group multiple c",
                      "markdown": "`ines](https://github.com/falcosecurity/rules/blob/main/RELEASE.md#versioning-a-ruleset) to understand how this affects the versioning of Falco rules. Breaking changes introduced in the Falco engine are not necessarily tied to the drivers or libs versions. The version number must be incremented every time and only when a single change or an atomic group of changes - which meet the criteria described above - is included in the `master` branch. Thus, a version bump can occur multiple times during the development and testing phases of a given release cycle. A given version bump must not group multiple c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 20,
                  "endLine": 181,
                  "endColumn": 25,
                  "snippet": {
                    "text": "ster/release.md) provides similar details around Falco's plugins. `SHA256` checksums are provided throughout Falco's source code to empower the end user to perform integrity checks. All Falco releases also contain the sources as part of the packages.\n\n\n### Falco repo (this repo)\n- Falco version is a git tag (`x.y.z`), see [Procedures](#procedures) section. Note that the Falco version is a sem-ver-like schema, but not fully compatible with sem-ver.\n- [FALCO_ENGINE_VERSION](https://github.com/falcosecurity/falco/blob/master/userspace/engine/falco_engine_version.h) is not sem-ver and must be bumped ei",
                    "rendered": {
                      "text": "ster/release.md) provides similar details around Falco's plugins. `SHA256` checksums are provided throughout Falco's source code to empower the end user to perform integrity checks. All Falco releases also contain the sources as part of the packages.\n\n\n### Falco repo (this repo)\n- Falco version is a git tag (`x.y.z`), see [Procedures](#procedures) section. Note that the Falco version is a sem-ver-like schema, but not fully compatible with sem-ver.\n- [FALCO_ENGINE_VERSION](https://github.com/falcosecurity/falco/blob/master/userspace/engine/falco_engine_version.h) is not sem-ver and must be bumped ei",
                      "markdown": "`ster/release.md) provides similar details around Falco's plugins. `SHA256` checksums are provided throughout Falco's source code to empower the end user to perform integrity checks. All Falco releases also contain the sources as part of the packages.\n\n\n### Falco repo (this repo)\n- Falco version is a git tag (`x.y.z`), see [Procedures](#procedures) section. Note that the Falco version is a sem-ver-like schema, but not fully compatible with sem-ver.\n- [FALCO_ENGINE_VERSION](https://github.com/falcosecurity/falco/blob/master/userspace/engine/falco_engine_version.h) is not sem-ver and must be bumped ei`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 48,
                  "endLine": 157,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n### 2. Update the meeting notes\n\nFor each release we archive the meeting notes in git for historical purposes.\n\n - The notes from the Falco meetings can be [found here](https://hackmd.io/3qYPnZPUQLGKCzR14va_qg).\n    - Note: There may be other notes from working groups that can optionally be added as well as needed.\n",
                    "rendered": {
                      "text": "\n### 2. Update the meeting notes\n\nFor each release we archive the meeting notes in git for historical purposes.\n\n - The notes from the Falco meetings can be [found here](https://hackmd.io/3qYPnZPUQLGKCzR14va_qg).\n    - Note: There may be other notes from working groups that can optionally be added as well as needed.\n",
                      "markdown": "`\n### 2. Update the meeting notes\n\nFor each release we archive the meeting notes in git for historical purposes.\n\n - The notes from the Falco meetings can be [found here](https://hackmd.io/3qYPnZPUQLGKCzR14va_qg).\n    - Note: There may be other notes from working groups that can optionally be added as well as needed.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 85,
                  "endLine": 125,
                  "endColumn": 91,
                  "snippet": {
                    "text": "\n## Publishing Pre-Releases (RCs and tagged development versions)\n\nCore maintainers and/or the release manager can decide to publish pre-releases at any time before the final release\nis live for development and testing purposes.\n\nThe prerelease tag must be formatted as `M.m.p-r`where `r` is the prerelease version information (e.g. `0.35.0-rc1`.)\n",
                    "rendered": {
                      "text": "\n## Publishing Pre-Releases (RCs and tagged development versions)\n\nCore maintainers and/or the release manager can decide to publish pre-releases at any time before the final release\nis live for development and testing purposes.\n\nThe prerelease tag must be formatted as `M.m.p-r`where `r` is the prerelease version information (e.g. `0.35.0-rc1`.)\n",
                      "markdown": "`\n## Publishing Pre-Releases (RCs and tagged development versions)\n\nCore maintainers and/or the release manager can decide to publish pre-releases at any time before the final release\nis live for development and testing purposes.\n\nThe prerelease tag must be formatted as `M.m.p-r`where `r` is the prerelease version information (e.g. `0.35.0-rc1`.)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 27,
                  "endLine": 117,
                  "endColumn": 32,
                  "snippet": {
                    "text": "- Generate the change log using [rn2md](https://github.com/leodido/rn2md):\n    - Execute `rn2md -o falcosecurity -m <version> -r falco`\n    - In case `rn2md` emits error try to generate an GitHub OAuth access token and provide it with the `-t` flag\n- Add the latest changes on top the previous `CHANGELOG.md`\n- Submit a PR with the above modifications\n- Await PR approval\n- Close the completed milestone as soon as the PR is merged into the release branch\n",
                    "rendered": {
                      "text": "- Generate the change log using [rn2md](https://github.com/leodido/rn2md):\n    - Execute `rn2md -o falcosecurity -m <version> -r falco`\n    - In case `rn2md` emits error try to generate an GitHub OAuth access token and provide it with the `-t` flag\n- Add the latest changes on top the previous `CHANGELOG.md`\n- Submit a PR with the above modifications\n- Await PR approval\n- Close the completed milestone as soon as the PR is merged into the release branch\n",
                      "markdown": "`- Generate the change log using [rn2md](https://github.com/leodido/rn2md):\n    - Execute `rn2md -o falcosecurity -m <version> -r falco`\n    - In case `rn2md` emits error try to generate an GitHub OAuth access token and provide it with the `-t` flag\n- Add the latest changes on top the previous `CHANGELOG.md`\n- Submit a PR with the above modifications\n- Await PR approval\n- Close the completed milestone as soon as the PR is merged into the release branch\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/RELEASE.md"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 1,
                  "endLine": 86,
                  "endColumn": 7,
                  "snippet": {
                    "text": ", on the proposed due date, the assignees for the upcoming release proceed with the processes described below.  \n\n## Pre-Release Checklist\n\nBefore proceeding with the release, make sure to complete the following preparatory steps, which can be easily done using the GitHub UI:\n\n### 1. Release notes\n- Find the previous release date (`YYYY-MM-DD`) by looking at the [Falco releases](https://github.com/falcosecurity/falco/releases)\n- Check the release note block of every PR matching the `is:pr is:merged closed:>YYYY-MM-DD` [filter](https://github.com/falcosecurity/falco/pulls?q=is%3Apr+is%3Amerged+closed",
                    "rendered": {
                      "text": ", on the proposed due date, the assignees for the upcoming release proceed with the processes described below.  \n\n## Pre-Release Checklist\n\nBefore proceeding with the release, make sure to complete the following preparatory steps, which can be easily done using the GitHub UI:\n\n### 1. Release notes\n- Find the previous release date (`YYYY-MM-DD`) by looking at the [Falco releases](https://github.com/falcosecurity/falco/releases)\n- Check the release note block of every PR matching the `is:pr is:merged closed:>YYYY-MM-DD` [filter](https://github.com/falcosecurity/falco/pulls?q=is%3Apr+is%3Amerged+closed",
                      "markdown": "`, on the proposed due date, the assignees for the upcoming release proceed with the processes described below.  \n\n## Pre-Release Checklist\n\nBefore proceeding with the release, make sure to complete the following preparatory steps, which can be easily done using the GitHub UI:\n\n### 1. Release notes\n- Find the previous release date (`YYYY-MM-DD`) by looking at the [Falco releases](https://github.com/falcosecurity/falco/releases)\n- Check the release note block of every PR matching the `is:pr is:merged closed:>YYYY-MM-DD` [filter](https://github.com/falcosecurity/falco/pulls?q=is%3Apr+is%3Amerged+closed`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/COPYING"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 39,
                  "endLine": 195,
                  "snippet": {
                    "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/COPYING"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 57,
                  "endLine": 111,
                  "endColumn": 61,
                  "snippet": {
                    "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                    "rendered": {
                      "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                      "markdown": "`          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/COPYING"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 60,
                  "endLine": 57,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                    "rendered": {
                      "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                      "markdown": "`      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/COPYING"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 5,
                  "endLine": 18,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                    "rendered": {
                      "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                      "markdown": "`\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/COPYING"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 24,
                  "endLine": 140,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                    "rendered": {
                      "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                      "markdown": "`      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 52,
                  "endLine": 134,
                  "endColumn": 56,
                  "snippet": {
                    "text": "by time to time. None of this make a perfect safety standpoint of course, but we try to maximize our odds. Go would definitely make our life easier from this perspective, however the tradeoffs never made it worth it so far due to the points above.\n10. The C++ codebase of falcosecurity/libs, which is at the core of Falco, is quite large and complex. Porting all that code to another language would be a major effort requiring lots of development resource and with an high chance of failure and regression. As such, our approach so far has been to choose refactors and code polishing instead, up until we",
                    "rendered": {
                      "text": "by time to time. None of this make a perfect safety standpoint of course, but we try to maximize our odds. Go would definitely make our life easier from this perspective, however the tradeoffs never made it worth it so far due to the points above.\n10. The C++ codebase of falcosecurity/libs, which is at the core of Falco, is quite large and complex. Porting all that code to another language would be a major effort requiring lots of development resource and with an high chance of failure and regression. As such, our approach so far has been to choose refactors and code polishing instead, up until we",
                      "markdown": "`by time to time. None of this make a perfect safety standpoint of course, but we try to maximize our odds. Go would definitely make our life easier from this perspective, however the tradeoffs never made it worth it so far due to the points above.\n10. The C++ codebase of falcosecurity/libs, which is at the core of Falco, is quite large and complex. Porting all that code to another language would be a major effort requiring lots of development resource and with an high chance of failure and regression. As such, our approach so far has been to choose refactors and code polishing instead, up until we`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 220,
                  "endLine": 132,
                  "endColumn": 224,
                  "snippet": {
                    "text": "e codebase is the best strategy to ensure maximum cross-language compatibility.\n8. In general, plugins have GLIBC requirements/dependencies because they have low-level C bindings required for dynamic loading. A potential solution for the future could be to also support plugin to be statically-linked at compilation time and so released as bundled in the Falco binary. Although no work started yet in this direction, this would solve most issues you reported and would provide a totally-static binary too. Of course, this would not be compatible with dynamic loading anymore, but it may be a viable solut",
                    "rendered": {
                      "text": "e codebase is the best strategy to ensure maximum cross-language compatibility.\n8. In general, plugins have GLIBC requirements/dependencies because they have low-level C bindings required for dynamic loading. A potential solution for the future could be to also support plugin to be statically-linked at compilation time and so released as bundled in the Falco binary. Although no work started yet in this direction, this would solve most issues you reported and would provide a totally-static binary too. Of course, this would not be compatible with dynamic loading anymore, but it may be a viable solut",
                      "markdown": "`e codebase is the best strategy to ensure maximum cross-language compatibility.\n8. In general, plugins have GLIBC requirements/dependencies because they have low-level C bindings required for dynamic loading. A potential solution for the future could be to also support plugin to be statically-linked at compilation time and so released as bundled in the Falco binary. Although no work started yet in this direction, this would solve most issues you reported and would provide a totally-static binary too. Of course, this would not be compatible with dynamic loading anymore, but it may be a viable solut`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 165,
                  "endLine": 128,
                  "endColumn": 174,
                  "snippet": {
                    "text": "d the Kernel module), and we all know that interfacing Go with C is possible but brings tons of complexity and tradeoffs to the table.\n4. As a security tool meant to consume a crazy high throughput of events per second, Falco needs to squeeze performance in all hot paths at runtime and requires deep control on memory allocation, which the Go runtime can't provide (there's also garbage collection involved).\n5. Although Go didn't suit the engineering requirements of the core of Falco, we still thought that it could be a good candidate for writing Falco extensions through the plugin system. This is the ma",
                    "rendered": {
                      "text": "d the Kernel module), and we all know that interfacing Go with C is possible but brings tons of complexity and tradeoffs to the table.\n4. As a security tool meant to consume a crazy high throughput of events per second, Falco needs to squeeze performance in all hot paths at runtime and requires deep control on memory allocation, which the Go runtime can't provide (there's also garbage collection involved).\n5. Although Go didn't suit the engineering requirements of the core of Falco, we still thought that it could be a good candidate for writing Falco extensions through the plugin system. This is the ma",
                      "markdown": "`d the Kernel module), and we all know that interfacing Go with C is possible but brings tons of complexity and tradeoffs to the table.\n4. As a security tool meant to consume a crazy high throughput of events per second, Falco needs to squeeze performance in all hot paths at runtime and requires deep control on memory allocation, which the Go runtime can't provide (there's also garbage collection involved).\n5. Although Go didn't suit the engineering requirements of the core of Falco, we still thought that it could be a good candidate for writing Falco extensions through the plugin system. This is the ma`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 136,
                  "endLine": 128,
                  "endColumn": 140,
                  "snippet": {
                    "text": "shared with the eBPF probe and the Kernel module), and we all know that interfacing Go with C is possible but brings tons of complexity and tradeoffs to the table.\n4. As a security tool meant to consume a crazy high throughput of events per second, Falco needs to squeeze performance in all hot paths at runtime and requires deep control on memory allocation, which the Go runtime can't provide (there's also garbage collection involved).\n5. Although Go didn't suit the engineering requirements of the core of Falco, we still thought that it could be a good candidate for writing Falco extensions through",
                    "rendered": {
                      "text": "shared with the eBPF probe and the Kernel module), and we all know that interfacing Go with C is possible but brings tons of complexity and tradeoffs to the table.\n4. As a security tool meant to consume a crazy high throughput of events per second, Falco needs to squeeze performance in all hot paths at runtime and requires deep control on memory allocation, which the Go runtime can't provide (there's also garbage collection involved).\n5. Although Go didn't suit the engineering requirements of the core of Falco, we still thought that it could be a good candidate for writing Falco extensions through",
                      "markdown": "`shared with the eBPF probe and the Kernel module), and we all know that interfacing Go with C is possible but brings tons of complexity and tradeoffs to the table.\n4. As a security tool meant to consume a crazy high throughput of events per second, Falco needs to squeeze performance in all hot paths at runtime and requires deep control on memory allocation, which the Go runtime can't provide (there's also garbage collection involved).\n5. Although Go didn't suit the engineering requirements of the core of Falco, we still thought that it could be a good candidate for writing Falco extensions through`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 203,
                  "endLine": 126,
                  "endColumn": 207,
                  "snippet": {
                    "text": "ritten some time ago, where Go didn't yet have the same level of maturity and adoption as today.\n2. The Falco execution model is sequential and mono-thread due to the statefulness requirements of the tool, and so most of the concurrency-related selling points of the Go runtime would not be leveraged at all.\n3. The Falco code deals with very low-level programming in many places (e.g. some headers are shared with the eBPF probe and the Kernel module), and we all know that interfacing Go with C is possible but brings tons of complexity and tradeoffs to the table.\n4. As a security tool meant to consum",
                    "rendered": {
                      "text": "ritten some time ago, where Go didn't yet have the same level of maturity and adoption as today.\n2. The Falco execution model is sequential and mono-thread due to the statefulness requirements of the tool, and so most of the concurrency-related selling points of the Go runtime would not be leveraged at all.\n3. The Falco code deals with very low-level programming in many places (e.g. some headers are shared with the eBPF probe and the Kernel module), and we all know that interfacing Go with C is possible but brings tons of complexity and tradeoffs to the table.\n4. As a security tool meant to consum",
                      "markdown": "`ritten some time ago, where Go didn't yet have the same level of maturity and adoption as today.\n2. The Falco execution model is sequential and mono-thread due to the statefulness requirements of the tool, and so most of the concurrency-related selling points of the Go runtime would not be leveraged at all.\n3. The Falco code deals with very low-level programming in many places (e.g. some headers are shared with the eBPF probe and the Kernel module), and we all know that interfacing Go with C is possible but brings tons of complexity and tradeoffs to the table.\n4. As a security tool meant to consum`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 26,
                  "endLine": 125,
                  "endColumn": 30,
                  "snippet": {
                    "text": " manual tests.\n\nLastly, The Falco Project has moved its Falco regression tests to [falcosecurity/testing](https://github.com/falcosecurity/testing).\n\n\n</details>\n\n</br>\n\n## Why is Falco in C++ rather than Go or {language}?\n\n<details>\n\t<summary>Expand Information</summary>\n\n1. The first lines of code at the base of Falco were written some time ago, where Go didn't yet have the same level of maturity and adoption as today.\n2. The Falco execution model is sequential and mono-thread due to the statefulness requirements of the tool, and so most of the concurrency-related selling points of the Go runtim",
                    "rendered": {
                      "text": " manual tests.\n\nLastly, The Falco Project has moved its Falco regression tests to [falcosecurity/testing](https://github.com/falcosecurity/testing).\n\n\n</details>\n\n</br>\n\n## Why is Falco in C++ rather than Go or {language}?\n\n<details>\n\t<summary>Expand Information</summary>\n\n1. The first lines of code at the base of Falco were written some time ago, where Go didn't yet have the same level of maturity and adoption as today.\n2. The Falco execution model is sequential and mono-thread due to the statefulness requirements of the tool, and so most of the concurrency-related selling points of the Go runtim",
                      "markdown": "` manual tests.\n\nLastly, The Falco Project has moved its Falco regression tests to [falcosecurity/testing](https://github.com/falcosecurity/testing).\n\n\n</details>\n\n</br>\n\n## Why is Falco in C++ rather than Go or {language}?\n\n<details>\n\t<summary>Expand Information</summary>\n\n1. The first lines of code at the base of Falco were written some time ago, where Go didn't yet have the same level of maturity and adoption as today.\n2. The Falco execution model is sequential and mono-thread due to the statefulness requirements of the tool, and so most of the concurrency-related selling points of the Go runtim`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 130,
                  "endLine": 25,
                  "endColumn": 138,
                  "snippet": {
                    "text": "ps://github.com/falcosecurity/rules): Contains the official ruleset for Falco, providing pre-defined detection rules for various security threats and abnormal behaviors.\n- [falcosecurity/plugins](https://github.com/falcosecurity/plugins/): Falco plugins facilitate integration with external services, expand Falco's capabilities beyond syscalls and container events, and are designed to evolve with specialized functionality in future releases.\n- [falcosecurity/falcoctl](https://github.com/falcosecurity/falcoctl): Command-line utility for managing and interacting with Falco.\n\nFor more information, visit t",
                    "rendered": {
                      "text": "ps://github.com/falcosecurity/rules): Contains the official ruleset for Falco, providing pre-defined detection rules for various security threats and abnormal behaviors.\n- [falcosecurity/plugins](https://github.com/falcosecurity/plugins/): Falco plugins facilitate integration with external services, expand Falco's capabilities beyond syscalls and container events, and are designed to evolve with specialized functionality in future releases.\n- [falcosecurity/falcoctl](https://github.com/falcosecurity/falcoctl): Command-line utility for managing and interacting with Falco.\n\nFor more information, visit t",
                      "markdown": "`ps://github.com/falcosecurity/rules): Contains the official ruleset for Falco, providing pre-defined detection rules for various security threats and abnormal behaviors.\n- [falcosecurity/plugins](https://github.com/falcosecurity/plugins/): Falco plugins facilitate integration with external services, expand Falco's capabilities beyond syscalls and container events, and are designed to evolve with specialized functionality in future releases.\n- [falcosecurity/falcoctl](https://github.com/falcosecurity/falcoctl): Command-line utility for managing and interacting with Falco.\n\nFor more information, visit t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 11,
                  "endColumn": 3,
                  "snippet": {
                    "text": "x\"></img></a>\n\n[![Falco](https://falco.org/img/brand/falco-horizontal-color.svg)](https://falco.org)\n\n[Falco](https://falco.org/) is a cloud native runtime security tool for Linux operating systems. It is designed to detect and alert on abnormal behavior and potential security threats in real-time.\n\nAt its core, Falco is a kernel monitoring and detection agent that observes events, such as syscalls, based on custom rules. Falco can enhance these events by integrating metadata from the container runtime and Kubernetes. The collected events can be analyzed off-host in SIEM or data lake systems.\n\nFal",
                    "rendered": {
                      "text": "x\"></img></a>\n\n[![Falco](https://falco.org/img/brand/falco-horizontal-color.svg)](https://falco.org)\n\n[Falco](https://falco.org/) is a cloud native runtime security tool for Linux operating systems. It is designed to detect and alert on abnormal behavior and potential security threats in real-time.\n\nAt its core, Falco is a kernel monitoring and detection agent that observes events, such as syscalls, based on custom rules. Falco can enhance these events by integrating metadata from the container runtime and Kubernetes. The collected events can be analyzed off-host in SIEM or data lake systems.\n\nFal",
                      "markdown": "`x\"></img></a>\n\n[![Falco](https://falco.org/img/brand/falco-horizontal-color.svg)](https://falco.org)\n\n[Falco](https://falco.org/) is a cloud native runtime security tool for Linux operating systems. It is designed to detect and alert on abnormal behavior and potential security threats in real-time.\n\nAt its core, Falco is a kernel monitoring and detection agent that observes events, such as syscalls, based on custom rules. Falco can enhance these events by integrating metadata from the container runtime and Kubernetes. The collected events can be analyzed off-host in SIEM or data lake systems.\n\nFal`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 517,
                  "endLine": 133,
                  "endColumn": 523,
                  "snippet": {
                    "text": "with an address sanitizer in our CI, we run Falco through Valgrind before each release, and have ways to stress-test it to detect performance regressions or weird memory usage (e.g. https://github.com/falcosecurity/event-generator). On top of that, we also have third parties auditing the codebase by time to time. None of this make a perfect safety standpoint of course, but we try to maximize our odds. Go would definitely make our life easier from this perspective, however the tradeoffs never made it worth it so far due to the points above.\n10. The C++ codebase of falcosecurity/libs, which is at the ",
                    "rendered": {
                      "text": "with an address sanitizer in our CI, we run Falco through Valgrind before each release, and have ways to stress-test it to detect performance regressions or weird memory usage (e.g. https://github.com/falcosecurity/event-generator). On top of that, we also have third parties auditing the codebase by time to time. None of this make a perfect safety standpoint of course, but we try to maximize our odds. Go would definitely make our life easier from this perspective, however the tradeoffs never made it worth it so far due to the points above.\n10. The C++ codebase of falcosecurity/libs, which is at the ",
                      "markdown": "`with an address sanitizer in our CI, we run Falco through Valgrind before each release, and have ways to stress-test it to detect performance regressions or weird memory usage (e.g. https://github.com/falcosecurity/event-generator). On top of that, we also have third parties auditing the codebase by time to time. None of this make a perfect safety standpoint of course, but we try to maximize our odds. Go would definitely make our life easier from this perspective, however the tradeoffs never made it worth it so far due to the points above.\n10. The C++ codebase of falcosecurity/libs, which is at the `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 452,
                  "endLine": 133,
                  "endColumn": 457,
                  "snippet": {
                    "text": " to use smart pointers whenever possible, we build the libraries with an address sanitizer in our CI, we run Falco through Valgrind before each release, and have ways to stress-test it to detect performance regressions or weird memory usage (e.g. https://github.com/falcosecurity/event-generator). On top of that, we also have third parties auditing the codebase by time to time. None of this make a perfect safety standpoint of course, but we try to maximize our odds. Go would definitely make our life easier from this perspective, however the tradeoffs never made it worth it so far due to the points a",
                    "rendered": {
                      "text": " to use smart pointers whenever possible, we build the libraries with an address sanitizer in our CI, we run Falco through Valgrind before each release, and have ways to stress-test it to detect performance regressions or weird memory usage (e.g. https://github.com/falcosecurity/event-generator). On top of that, we also have third parties auditing the codebase by time to time. None of this make a perfect safety standpoint of course, but we try to maximize our odds. Go would definitely make our life easier from this perspective, however the tradeoffs never made it worth it so far due to the points a",
                      "markdown": "` to use smart pointers whenever possible, we build the libraries with an address sanitizer in our CI, we run Falco through Valgrind before each release, and have ways to stress-test it to detect performance regressions or weird memory usage (e.g. https://github.com/falcosecurity/event-generator). On top of that, we also have third parties auditing the codebase by time to time. None of this make a perfect safety standpoint of course, but we try to maximize our odds. Go would definitely make our life easier from this perspective, however the tradeoffs never made it worth it so far due to the points a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 235,
                  "endLine": 132,
                  "endColumn": 241,
                  "snippet": {
                    "text": "he best strategy to ensure maximum cross-language compatibility.\n8. In general, plugins have GLIBC requirements/dependencies because they have low-level C bindings required for dynamic loading. A potential solution for the future could be to also support plugin to be statically-linked at compilation time and so released as bundled in the Falco binary. Although no work started yet in this direction, this would solve most issues you reported and would provide a totally-static binary too. Of course, this would not be compatible with dynamic loading anymore, but it may be a viable solution for our stati",
                    "rendered": {
                      "text": "he best strategy to ensure maximum cross-language compatibility.\n8. In general, plugins have GLIBC requirements/dependencies because they have low-level C bindings required for dynamic loading. A potential solution for the future could be to also support plugin to be statically-linked at compilation time and so released as bundled in the Falco binary. Although no work started yet in this direction, this would solve most issues you reported and would provide a totally-static binary too. Of course, this would not be compatible with dynamic loading anymore, but it may be a viable solution for our stati",
                      "markdown": "`he best strategy to ensure maximum cross-language compatibility.\n8. In general, plugins have GLIBC requirements/dependencies because they have low-level C bindings required for dynamic loading. A potential solution for the future could be to also support plugin to be statically-linked at compilation time and so released as bundled in the Falco binary. Although no work started yet in this direction, this would solve most issues you reported and would provide a totally-static binary too. Of course, this would not be compatible with dynamic loading anymore, but it may be a viable solution for our stati`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 65,
                  "endLine": 125,
                  "endColumn": 71,
                  "snippet": {
                    "text": "ct has moved its Falco regression tests to [falcosecurity/testing](https://github.com/falcosecurity/testing).\n\n\n</details>\n\n</br>\n\n## Why is Falco in C++ rather than Go or {language}?\n\n<details>\n\t<summary>Expand Information</summary>\n\n1. The first lines of code at the base of Falco were written some time ago, where Go didn't yet have the same level of maturity and adoption as today.\n2. The Falco execution model is sequential and mono-thread due to the statefulness requirements of the tool, and so most of the concurrency-related selling points of the Go runtime would not be leveraged at all.\n3. The F",
                    "rendered": {
                      "text": "ct has moved its Falco regression tests to [falcosecurity/testing](https://github.com/falcosecurity/testing).\n\n\n</details>\n\n</br>\n\n## Why is Falco in C++ rather than Go or {language}?\n\n<details>\n\t<summary>Expand Information</summary>\n\n1. The first lines of code at the base of Falco were written some time ago, where Go didn't yet have the same level of maturity and adoption as today.\n2. The Falco execution model is sequential and mono-thread due to the statefulness requirements of the tool, and so most of the concurrency-related selling points of the Go runtime would not be leveraged at all.\n3. The F",
                      "markdown": "`ct has moved its Falco regression tests to [falcosecurity/testing](https://github.com/falcosecurity/testing).\n\n\n</details>\n\n</br>\n\n## Why is Falco in C++ rather than Go or {language}?\n\n<details>\n\t<summary>Expand Information</summary>\n\n1. The first lines of code at the base of Falco were written some time ago, where Go didn't yet have the same level of maturity and adoption as today.\n2. The Falco execution model is sequential and mono-thread due to the statefulness requirements of the tool, and so most of the concurrency-related selling points of the Go runtime would not be leveraged at all.\n3. The F`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 50,
                  "endLine": 105,
                  "endColumn": 55,
                  "snippet": {
                    "text": "Build and run the unit test suite:\n\n```bash\nnproc=$(grep processor /proc/cpuinfo | tail -n 1 | awk '{print $3}');\nmake -j$(($nproc-1)) falco_unit_tests;\n# Run the tests\nsudo ./unit_tests/falco_unit_tests;\n",
                    "rendered": {
                      "text": "Build and run the unit test suite:\n\n```bash\nnproc=$(grep processor /proc/cpuinfo | tail -n 1 | awk '{print $3}');\nmake -j$(($nproc-1)) falco_unit_tests;\n# Run the tests\nsudo ./unit_tests/falco_unit_tests;\n",
                      "markdown": "`Build and run the unit test suite:\n\n```bash\nnproc=$(grep processor /proc/cpuinfo | tail -n 1 | awk '{print $3}');\nmake -j$(($nproc-1)) falco_unit_tests;\n# Run the tests\nsudo ./unit_tests/falco_unit_tests;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 38,
                  "endLine": 105,
                  "endColumn": 44,
                  "snippet": {
                    "text": "Build and run the unit test suite:\n\n```bash\nnproc=$(grep processor /proc/cpuinfo | tail -n 1 | awk '{print $3}');\nmake -j$(($nproc-1)) falco_unit_tests;\n# Run the tests\nsudo ./unit_tests/falco_unit_tests;\n",
                    "rendered": {
                      "text": "Build and run the unit test suite:\n\n```bash\nnproc=$(grep processor /proc/cpuinfo | tail -n 1 | awk '{print $3}');\nmake -j$(($nproc-1)) falco_unit_tests;\n# Run the tests\nsudo ./unit_tests/falco_unit_tests;\n",
                      "markdown": "`Build and run the unit test suite:\n\n```bash\nnproc=$(grep processor /proc/cpuinfo | tail -n 1 | awk '{print $3}');\nmake -j$(($nproc-1)) falco_unit_tests;\n# Run the tests\nsudo ./unit_tests/falco_unit_tests;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 125,
                  "endLine": 56,
                  "endColumn": 131,
                  "snippet": {
                    "text": "\n## Join the Community\n\nTo get involved with the Falco Project please visit the [Community](https://github.com/falcosecurity/community) repository to find more information and ways to get involved.\n\nIf you have any questions about Falco or contributing, do not hesitate to file an issue or contact the Falco maintainers and community members for assistance.\n\n",
                    "rendered": {
                      "text": "\n## Join the Community\n\nTo get involved with the Falco Project please visit the [Community](https://github.com/falcosecurity/community) repository to find more information and ways to get involved.\n\nIf you have any questions about Falco or contributing, do not hesitate to file an issue or contact the Falco maintainers and community members for assistance.\n\n",
                      "markdown": "`\n## Join the Community\n\nTo get involved with the Falco Project please visit the [Community](https://github.com/falcosecurity/community) repository to find more information and ways to get involved.\n\nIf you have any questions about Falco or contributing, do not hesitate to file an issue or contact the Falco maintainers and community members for assistance.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 81,
                  "endLine": 48,
                  "endColumn": 89,
                  "snippet": {
                    "text": "\n### Demo Environment\n\nA demo environment is provided via a docker-compose file that can be started on a docker host which includes falco, falcosidekick, falcosidekick-ui and its required redis database. For more information see the [docker-compose section](docker/docker-compose/)\n\n## How to Contribute\n\n",
                    "rendered": {
                      "text": "\n### Demo Environment\n\nA demo environment is provided via a docker-compose file that can be started on a docker host which includes falco, falcosidekick, falcosidekick-ui and its required redis database. For more information see the [docker-compose section](docker/docker-compose/)\n\n## How to Contribute\n\n",
                      "markdown": "`\n### Demo Environment\n\nA demo environment is provided via a docker-compose file that can be started on a docker host which includes falco, falcosidekick, falcosidekick-ui and its required redis database. For more information see the [docker-compose section](docker/docker-compose/)\n\n## How to Contribute\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/README.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 130,
                  "endLine": 25,
                  "endColumn": 138,
                  "snippet": {
                    "text": "ps://github.com/falcosecurity/rules): Contains the official ruleset for Falco, providing pre-defined detection rules for various security threats and abnormal behaviors.\n- [falcosecurity/plugins](https://github.com/falcosecurity/plugins/): Falco plugins facilitate integration with external services, expand Falco's capabilities beyond syscalls and container events, and are designed to evolve with specialized functionality in future releases.\n- [falcosecurity/falcoctl](https://github.com/falcosecurity/falcoctl): Command-line utility for managing and interacting with Falco.\n\nFor more information, visit t",
                    "rendered": {
                      "text": "ps://github.com/falcosecurity/rules): Contains the official ruleset for Falco, providing pre-defined detection rules for various security threats and abnormal behaviors.\n- [falcosecurity/plugins](https://github.com/falcosecurity/plugins/): Falco plugins facilitate integration with external services, expand Falco's capabilities beyond syscalls and container events, and are designed to evolve with specialized functionality in future releases.\n- [falcosecurity/falcoctl](https://github.com/falcosecurity/falcoctl): Command-line utility for managing and interacting with Falco.\n\nFor more information, visit t",
                      "markdown": "`ps://github.com/falcosecurity/rules): Contains the official ruleset for Falco, providing pre-defined detection rules for various security threats and abnormal behaviors.\n- [falcosecurity/plugins](https://github.com/falcosecurity/plugins/): Falco plugins facilitate integration with external services, expand Falco's capabilities beyond syscalls and container events, and are designed to evolve with specialized functionality in future releases.\n- [falcosecurity/falcoctl](https://github.com/falcosecurity/falcoctl): Command-line utility for managing and interacting with Falco.\n\nFor more information, visit t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_configs/engine_modern_config.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 38,
                  "endLine": 9,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_configs/engine_kmod_config.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 38,
                  "endLine": 9,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_atomic_signal_handler.cpp"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 5,
                  "endLine": 79,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t}\n\n\t// check that the total time is consistent with the expectations\n\tauto diff = std::chrono::high_resolution_clock::now() - start;\n\tauto secs = std::chrono::duration_cast<std::chrono::seconds>(diff);\n\tASSERT_GE(secs, thread_wait_sec + handler_wait_sec);\n\n",
                    "rendered": {
                      "text": "\t}\n\n\t// check that the total time is consistent with the expectations\n\tauto diff = std::chrono::high_resolution_clock::now() - start;\n\tauto secs = std::chrono::duration_cast<std::chrono::seconds>(diff);\n\tASSERT_GE(secs, thread_wait_sec + handler_wait_sec);\n\n",
                      "markdown": "`\t}\n\n\t// check that the total time is consistent with the expectations\n\tauto diff = std::chrono::high_resolution_clock::now() - start;\n\tauto secs = std::chrono::duration_cast<std::chrono::seconds>(diff);\n\tASSERT_GE(secs, thread_wait_sec + handler_wait_sec);\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_atomic_signal_handler.cpp"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 7,
                  "endLine": 58,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t\t\t\t        [thread_wait_sec]() { std::this_thread::sleep_for(thread_wait_sec); });\n\t\t\t\t}\n\t\t\t}\n\t\t\tauto diff = std::chrono::high_resolution_clock::now() - start;\n\t\t\tres.duration_secs = std::chrono::duration_cast<std::chrono::seconds>(diff);\n\t\t\treturn res;\n\t\t}));\n",
                    "rendered": {
                      "text": "\t\t\t\t\t        [thread_wait_sec]() { std::this_thread::sleep_for(thread_wait_sec); });\n\t\t\t\t}\n\t\t\t}\n\t\t\tauto diff = std::chrono::high_resolution_clock::now() - start;\n\t\t\tres.duration_secs = std::chrono::duration_cast<std::chrono::seconds>(diff);\n\t\t\treturn res;\n\t\t}));\n",
                      "markdown": "`\t\t\t\t\t        [thread_wait_sec]() { std::this_thread::sleep_for(thread_wait_sec); });\n\t\t\t\t}\n\t\t\t}\n\t\t\tauto diff = std::chrono::high_resolution_clock::now() - start;\n\t\t\tres.duration_secs = std::chrono::duration_cast<std::chrono::seconds>(diff);\n\t\t\treturn res;\n\t\t}));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_atomic_signal_handler.cpp"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 23,
                  "endLine": 71,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\thandler.trigger();\n\tfor(int i = 0; i < thread_num; i++) {\n\t\t// wait for all threads to finish and get the results from the futures\n\t\tauto res = futures[i].get();\n\t\tif(res.handled) {\n\t\t\ttotal_handled++;\n\t\t}\n",
                    "rendered": {
                      "text": "\thandler.trigger();\n\tfor(int i = 0; i < thread_num; i++) {\n\t\t// wait for all threads to finish and get the results from the futures\n\t\tauto res = futures[i].get();\n\t\tif(res.handled) {\n\t\t\ttotal_handled++;\n\t\t}\n",
                      "markdown": "`\thandler.trigger();\n\tfor(int i = 0; i < thread_num; i++) {\n\t\t// wait for all threads to finish and get the results from the futures\n\t\tauto res = futures[i].get();\n\t\tif(res.handled) {\n\t\t\ttotal_handled++;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_configuration_rule_selection.cpp"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 73,
                  "endLine": 85,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_op,\n\t          falco_configuration::rule_selection_operation::enable);\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_rule, \"Adding ssh keys to authorized_keys\");\n}\n",
                    "rendered": {
                      "text": "\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_op,\n\t          falco_configuration::rule_selection_operation::enable);\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_rule, \"Adding ssh keys to authorized_keys\");\n}\n",
                      "markdown": "`\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_op,\n\t          falco_configuration::rule_selection_operation::enable);\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_rule, \"Adding ssh keys to authorized_keys\");\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_configuration_rule_selection.cpp"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 68,
                  "endLine": 75,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\t        \"\",\n\t        std::vector<std::string>{\n\t                R\"(rules[]={\"disable\": {\"tag\": \"maturity_incubating\"}})\",\n\t                R\"(rules[]={\"enable\": {\"rule\": \"Adding ssh keys to authorized_keys\"}})\"}));\n\n\tEXPECT_EQ(falco_config.m_rules_selection.size(), 2);\n\n",
                    "rendered": {
                      "text": "\t        \"\",\n\t        std::vector<std::string>{\n\t                R\"(rules[]={\"disable\": {\"tag\": \"maturity_incubating\"}})\",\n\t                R\"(rules[]={\"enable\": {\"rule\": \"Adding ssh keys to authorized_keys\"}})\"}));\n\n\tEXPECT_EQ(falco_config.m_rules_selection.size(), 2);\n\n",
                      "markdown": "`\t        \"\",\n\t        std::vector<std::string>{\n\t                R\"(rules[]={\"disable\": {\"tag\": \"maturity_incubating\"}})\",\n\t                R\"(rules[]={\"enable\": {\"rule\": \"Adding ssh keys to authorized_keys\"}})\"}));\n\n\tEXPECT_EQ(falco_config.m_rules_selection.size(), 2);\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_configuration_rule_selection.cpp"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 73,
                  "endLine": 66,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_op,\n\t          falco_configuration::rule_selection_operation::enable);\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_rule, \"Adding ssh keys to authorized_keys\");\n}\n\nTEST(ConfigurationRuleSelection, cli_options_object) {\n",
                    "rendered": {
                      "text": "\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_op,\n\t          falco_configuration::rule_selection_operation::enable);\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_rule, \"Adding ssh keys to authorized_keys\");\n}\n\nTEST(ConfigurationRuleSelection, cli_options_object) {\n",
                      "markdown": "`\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_op,\n\t          falco_configuration::rule_selection_operation::enable);\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_rule, \"Adding ssh keys to authorized_keys\");\n}\n\nTEST(ConfigurationRuleSelection, cli_options_object) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_configuration_rule_selection.cpp"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 74,
                  "endLine": 56,
                  "endColumn": 89,
                  "snippet": {
                    "text": "\tASSERT_NO_THROW(falco_config.init_from_content(\n\t        \"\",\n\t        std::vector<std::string>{\"rules[].disable.tag=maturity_incubating\",\n\t                                 \"rules[].enable.rule=Adding ssh keys to authorized_keys\"}));\n\n\tEXPECT_EQ(falco_config.m_rules_selection.size(), 2);\n\n",
                    "rendered": {
                      "text": "\tASSERT_NO_THROW(falco_config.init_from_content(\n\t        \"\",\n\t        std::vector<std::string>{\"rules[].disable.tag=maturity_incubating\",\n\t                                 \"rules[].enable.rule=Adding ssh keys to authorized_keys\"}));\n\n\tEXPECT_EQ(falco_config.m_rules_selection.size(), 2);\n\n",
                      "markdown": "`\tASSERT_NO_THROW(falco_config.init_from_content(\n\t        \"\",\n\t        std::vector<std::string>{\"rules[].disable.tag=maturity_incubating\",\n\t                                 \"rules[].enable.rule=Adding ssh keys to authorized_keys\"}));\n\n\tEXPECT_EQ(falco_config.m_rules_selection.size(), 2);\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_configuration_rule_selection.cpp"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 60,
                  "endLine": 85,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_op,\n\t          falco_configuration::rule_selection_operation::enable);\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_rule, \"Adding ssh keys to authorized_keys\");\n}\n",
                    "rendered": {
                      "text": "\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_op,\n\t          falco_configuration::rule_selection_operation::enable);\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_rule, \"Adding ssh keys to authorized_keys\");\n}\n",
                      "markdown": "`\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_op,\n\t          falco_configuration::rule_selection_operation::enable);\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_rule, \"Adding ssh keys to authorized_keys\");\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_configuration_rule_selection.cpp"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 55,
                  "endLine": 75,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t        \"\",\n\t        std::vector<std::string>{\n\t                R\"(rules[]={\"disable\": {\"tag\": \"maturity_incubating\"}})\",\n\t                R\"(rules[]={\"enable\": {\"rule\": \"Adding ssh keys to authorized_keys\"}})\"}));\n\n\tEXPECT_EQ(falco_config.m_rules_selection.size(), 2);\n\n",
                    "rendered": {
                      "text": "\t        \"\",\n\t        std::vector<std::string>{\n\t                R\"(rules[]={\"disable\": {\"tag\": \"maturity_incubating\"}})\",\n\t                R\"(rules[]={\"enable\": {\"rule\": \"Adding ssh keys to authorized_keys\"}})\"}));\n\n\tEXPECT_EQ(falco_config.m_rules_selection.size(), 2);\n\n",
                      "markdown": "`\t        \"\",\n\t        std::vector<std::string>{\n\t                R\"(rules[]={\"disable\": {\"tag\": \"maturity_incubating\"}})\",\n\t                R\"(rules[]={\"enable\": {\"rule\": \"Adding ssh keys to authorized_keys\"}})\"}));\n\n\tEXPECT_EQ(falco_config.m_rules_selection.size(), 2);\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_configuration_rule_selection.cpp"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 60,
                  "endLine": 66,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_op,\n\t          falco_configuration::rule_selection_operation::enable);\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_rule, \"Adding ssh keys to authorized_keys\");\n}\n\nTEST(ConfigurationRuleSelection, cli_options_object) {\n",
                    "rendered": {
                      "text": "\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_op,\n\t          falco_configuration::rule_selection_operation::enable);\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_rule, \"Adding ssh keys to authorized_keys\");\n}\n\nTEST(ConfigurationRuleSelection, cli_options_object) {\n",
                      "markdown": "`\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_op,\n\t          falco_configuration::rule_selection_operation::enable);\n\tEXPECT_EQ(falco_config.m_rules_selection[1].m_rule, \"Adding ssh keys to authorized_keys\");\n}\n\nTEST(ConfigurationRuleSelection, cli_options_object) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_configuration_rule_selection.cpp"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 61,
                  "endLine": 56,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\tASSERT_NO_THROW(falco_config.init_from_content(\n\t        \"\",\n\t        std::vector<std::string>{\"rules[].disable.tag=maturity_incubating\",\n\t                                 \"rules[].enable.rule=Adding ssh keys to authorized_keys\"}));\n\n\tEXPECT_EQ(falco_config.m_rules_selection.size(), 2);\n\n",
                    "rendered": {
                      "text": "\tASSERT_NO_THROW(falco_config.init_from_content(\n\t        \"\",\n\t        std::vector<std::string>{\"rules[].disable.tag=maturity_incubating\",\n\t                                 \"rules[].enable.rule=Adding ssh keys to authorized_keys\"}));\n\n\tEXPECT_EQ(falco_config.m_rules_selection.size(), 2);\n\n",
                      "markdown": "`\tASSERT_NO_THROW(falco_config.init_from_content(\n\t        \"\",\n\t        std::vector<std::string>{\"rules[].disable.tag=maturity_incubating\",\n\t                                 \"rules[].enable.rule=Adding ssh keys to authorized_keys\"}));\n\n\tEXPECT_EQ(falco_config.m_rules_selection.size(), 2);\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_configuration_env_vars.cpp"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 39,
                  "endLine": 182,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\tauto path_list_2 = conf.get_scalar<std::string>(\"paths[2]\", default_value);\n\tASSERT_EQ(path_list_2,\n\t          \"/foo/\" + env_var_value +\n\t                  \"/\");  // Even when env var is in the middle of a string. it gets expanded\n\n\tauto path_list_3 = conf.get_scalar<std::string>(\"paths[3]\", default_value);\n\tASSERT_EQ(path_list_3,\n",
                    "rendered": {
                      "text": "\tauto path_list_2 = conf.get_scalar<std::string>(\"paths[2]\", default_value);\n\tASSERT_EQ(path_list_2,\n\t          \"/foo/\" + env_var_value +\n\t                  \"/\");  // Even when env var is in the middle of a string. it gets expanded\n\n\tauto path_list_3 = conf.get_scalar<std::string>(\"paths[3]\", default_value);\n\tASSERT_EQ(path_list_3,\n",
                      "markdown": "`\tauto path_list_2 = conf.get_scalar<std::string>(\"paths[2]\", default_value);\n\tASSERT_EQ(path_list_2,\n\t          \"/foo/\" + env_var_value +\n\t                  \"/\");  // Even when env var is in the middle of a string. it gets expanded\n\n\tauto path_list_3 = conf.get_scalar<std::string>(\"paths[3]\", default_value);\n\tASSERT_EQ(path_list_3,\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/unit_tests/falco/test_configuration_env_vars.cpp"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 46,
                  "endLine": 173,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\tauto path_list_0 = conf.get_scalar<std::string>(\"paths[0]\", default_value);\n\tASSERT_EQ(\n\t        path_list_0,\n\t        env_var_value + \"/foo\");  // Even if env var is part of bigger string, it gets expanded\n\n\tauto path_list_1 = conf.get_scalar<std::string>(\"paths[1]\", default_value);\n\tASSERT_EQ(path_list_1, \"$ENV_VAR/foo\");  // Does not follow the `${VAR}` format, so should be\n",
                    "rendered": {
                      "text": "\tauto path_list_0 = conf.get_scalar<std::string>(\"paths[0]\", default_value);\n\tASSERT_EQ(\n\t        path_list_0,\n\t        env_var_value + \"/foo\");  // Even if env var is part of bigger string, it gets expanded\n\n\tauto path_list_1 = conf.get_scalar<std::string>(\"paths[1]\", default_value);\n\tASSERT_EQ(path_list_1, \"$ENV_VAR/foo\");  // Does not follow the `${VAR}` format, so should be\n",
                      "markdown": "`\tauto path_list_0 = conf.get_scalar<std::string>(\"paths[0]\", default_value);\n\tASSERT_EQ(\n\t        path_list_0,\n\t        env_var_value + \"/foo\");  // Even if env var is part of bigger string, it gets expanded\n\n\tauto path_list_1 = conf.get_scalar<std::string>(\"paths[1]\", default_value);\n\tASSERT_EQ(path_list_1, \"$ENV_VAR/foo\");  // Does not follow the `${VAR}` format, so should be\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine_version.h"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 39,
                  "endColumn": 96,
                  "snippet": {
                    "text": "// It represents the fields supported by this version of Falco,\n// the event types, and the underlying driverevent schema. It's used to\n// detetect changes in engine version in our CI jobs.\n#define FALCO_ENGINE_CHECKSUM \"8a7f383c1e7682c484096bb6a5cb68c29b818acbe65fa2854acbcc98277fd7e0\"\n",
                    "rendered": {
                      "text": "// It represents the fields supported by this version of Falco,\n// the event types, and the underlying driverevent schema. It's used to\n// detetect changes in engine version in our CI jobs.\n#define FALCO_ENGINE_CHECKSUM \"8a7f383c1e7682c484096bb6a5cb68c29b818acbe65fa2854acbcc98277fd7e0\"\n",
                      "markdown": "`// It represents the fields supported by this version of Falco,\n// the event types, and the underlying driverevent schema. It's used to\n// detetect changes in engine version in our CI jobs.\n#define FALCO_ENGINE_CHECKSUM \"8a7f383c1e7682c484096bb6a5cb68c29b818acbe65fa2854acbcc98277fd7e0\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine_version.h"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 71,
                  "endLine": 34,
                  "endColumn": 77,
                  "snippet": {
                    "text": "// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n// the event types, and the underlying driverevent schema. It's used to\n",
                    "rendered": {
                      "text": "// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n// the event types, and the underlying driverevent schema. It's used to\n",
                      "markdown": "`// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n// the event types, and the underlying driverevent schema. It's used to\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine_version.h"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 24,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n// the event types, and the underlying driverevent schema. It's used to\n",
                    "rendered": {
                      "text": "// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n// the event types, and the underlying driverevent schema. It's used to\n",
                      "markdown": "`// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n// the event types, and the underlying driverevent schema. It's used to\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine_version.h"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 93,
                  "endLine": 34,
                  "snippet": {
                    "text": "\n// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n// the event types, and the underlying driverevent schema. It's used to\n",
                    "rendered": {
                      "text": "\n// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n// the event types, and the underlying driverevent schema. It's used to\n",
                      "markdown": "`\n// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n// the event types, and the underlying driverevent schema. It's used to\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine_version.h"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 47,
                  "endLine": 33,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n",
                    "rendered": {
                      "text": "\n// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n",
                      "markdown": "`\n// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine_version.h"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 30,
                  "endLine": 33,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n",
                    "rendered": {
                      "text": "\n// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n",
                      "markdown": "`\n// This is the result of running the following command:\n//   FALCO=\"falco -c ./falco.yaml\"\n//   echo $($FALCO --version | grep 'Engine:' | awk '{print $2}') $(echo $($FALCO --version | grep\n//   'Schema version:' | awk '{print $3}') $($FALCO --list --markdown | grep '^`' | sort) $($FALCO\n//   --list-events | sort) | sha256sum)\n// It represents the fields supported by this version of Falco,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader_compiler.cpp"
                },
                "region": {
                  "startLine": 511,
                  "startColumn": 72,
                  "endLine": 511,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\n\t\t// populate set of event types and emit an special warning\n\t\tif(r.source == falco_common::syscall_source) {\n\t\t\tauto evttypes = libsinsp::filter::ast::ppm_event_codes(rule.condition.get());\n\t\t\tif((evttypes.empty() || evttypes.size() > 100) && r.warn_evttypes) {\n\t\t\t\tcfg.res->add_warning(falco::load_result::load_result::LOAD_NO_EVTTYPE,\n\t\t\t\t                     \"Rule matches too many evt.type values. This has a \"\n",
                    "rendered": {
                      "text": "\n\t\t// populate set of event types and emit an special warning\n\t\tif(r.source == falco_common::syscall_source) {\n\t\t\tauto evttypes = libsinsp::filter::ast::ppm_event_codes(rule.condition.get());\n\t\t\tif((evttypes.empty() || evttypes.size() > 100) && r.warn_evttypes) {\n\t\t\t\tcfg.res->add_warning(falco::load_result::load_result::LOAD_NO_EVTTYPE,\n\t\t\t\t                     \"Rule matches too many evt.type values. This has a \"\n",
                      "markdown": "`\n\t\t// populate set of event types and emit an special warning\n\t\tif(r.source == falco_common::syscall_source) {\n\t\t\tauto evttypes = libsinsp::filter::ast::ppm_event_codes(rule.condition.get());\n\t\t\tif((evttypes.empty() || evttypes.size() > 100) && r.warn_evttypes) {\n\t\t\t\tcfg.res->add_warning(falco::load_result::load_result::LOAD_NO_EVTTYPE,\n\t\t\t\t                     \"Rule matches too many evt.type values. This has a \"\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader_compiler.cpp"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 55,
                  "endLine": 364,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n\t// validate the rule's condition: we compile it into a sinsp filter\n\t// on-the-fly and we throw an exception with details on failure\n\tsinsp_filter_compiler compiler(filter_factory, ast_out.get());\n\ttry {\n\t\tfilter_out = compiler.compile();\n\t} catch(const sinsp_exception& e) {\n",
                    "rendered": {
                      "text": "\n\t// validate the rule's condition: we compile it into a sinsp filter\n\t// on-the-fly and we throw an exception with details on failure\n\tsinsp_filter_compiler compiler(filter_factory, ast_out.get());\n\ttry {\n\t\tfilter_out = compiler.compile();\n\t} catch(const sinsp_exception& e) {\n",
                      "markdown": "`\n\t// validate the rule's condition: we compile it into a sinsp filter\n\t// on-the-fly and we throw an exception with details on failure\n\tsinsp_filter_compiler compiler(filter_factory, ast_out.get());\n\ttry {\n\t\tfilter_out = compiler.compile();\n\t} catch(const sinsp_exception& e) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader_compiler.cpp"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 29,
                  "endLine": 356,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t               parent_ctx);\n\n\t// check for warnings in the filtering condition\n\tif(warn_resolver.run(ast_out.get(), warn_codes)) {\n\t\tfor(const auto& w : warn_codes) {\n\t\t\tcfg.res->add_warning(w, \"\", parent_ctx);\n\t\t}\n",
                    "rendered": {
                      "text": "\t               parent_ctx);\n\n\t// check for warnings in the filtering condition\n\tif(warn_resolver.run(ast_out.get(), warn_codes)) {\n\t\tfor(const auto& w : warn_codes) {\n\t\t\tcfg.res->add_warning(w, \"\", parent_ctx);\n\t\t}\n",
                      "markdown": "`\t               parent_ctx);\n\n\t// check for warnings in the filtering condition\n\tif(warn_resolver.run(ast_out.get(), warn_codes)) {\n\t\tfor(const auto& w : warn_codes) {\n\t\t\tcfg.res->add_warning(w, \"\", parent_ctx);\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader_compiler.cpp"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 44,
                  "endLine": 404,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n\t\t// note: this should not be nullptr if the source is not unknown\n\t\tauto source = cfg.sources.at(r.source);\n\t\tTHROW(!source, std::string(\"Unknown source at compile-time\") + r.source, r.ctx);\n\n\t\t// build filter AST by parsing the condition, building exceptions,\n\t\t// and resolving lists and macros\n",
                    "rendered": {
                      "text": "\n\t\t// note: this should not be nullptr if the source is not unknown\n\t\tauto source = cfg.sources.at(r.source);\n\t\tTHROW(!source, std::string(\"Unknown source at compile-time\") + r.source, r.ctx);\n\n\t\t// build filter AST by parsing the condition, building exceptions,\n\t\t// and resolving lists and macros\n",
                      "markdown": "`\n\t\t// note: this should not be nullptr if the source is not unknown\n\t\tauto source = cfg.sources.at(r.source);\n\t\tTHROW(!source, std::string(\"Unknown source at compile-time\") + r.source, r.ctx);\n\n\t\t// build filter AST by parsing the condition, building exceptions,\n\t\t// and resolving lists and macros\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader_compiler.cpp"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 55,
                  "endLine": 149,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                                                            const std::string& name) {\n\tauto ret = c.macros().at(name);\n\tif(!ret) {\n\t\tthrow falco_exception(\"can't find internal macro info at name: \" + name);\n\t}\n\treturn ret;\n}\n",
                    "rendered": {
                      "text": "                                                            const std::string& name) {\n\tauto ret = c.macros().at(name);\n\tif(!ret) {\n\t\tthrow falco_exception(\"can't find internal macro info at name: \" + name);\n\t}\n\treturn ret;\n}\n",
                      "markdown": "`                                                            const std::string& name) {\n\tauto ret = c.macros().at(name);\n\tif(!ret) {\n\t\tthrow falco_exception(\"can't find internal macro info at name: \" + name);\n\t}\n\treturn ret;\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader_compiler.cpp"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 54,
                  "endLine": 140,
                  "endColumn": 58,
                  "snippet": {
                    "text": "                                                          const std::string& name) {\n\tauto ret = c.lists().at(name);\n\tif(!ret) {\n\t\tthrow falco_exception(\"can't find internal list info at name: \" + name);\n\t}\n\treturn ret;\n}\n",
                    "rendered": {
                      "text": "                                                          const std::string& name) {\n\tauto ret = c.lists().at(name);\n\tif(!ret) {\n\t\tthrow falco_exception(\"can't find internal list info at name: \" + name);\n\t}\n\treturn ret;\n}\n",
                      "markdown": "`                                                          const std::string& name) {\n\tauto ret = c.lists().at(name);\n\tif(!ret) {\n\t\tthrow falco_exception(\"can't find internal list info at name: \" + name);\n\t}\n\treturn ret;\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader_compiler.cpp"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 30,
                  "endLine": 149,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                                                            const std::string& name) {\n\tauto ret = c.macros().at(name);\n\tif(!ret) {\n\t\tthrow falco_exception(\"can't find internal macro info at name: \" + name);\n\t}\n\treturn ret;\n}\n",
                    "rendered": {
                      "text": "                                                            const std::string& name) {\n\tauto ret = c.macros().at(name);\n\tif(!ret) {\n\t\tthrow falco_exception(\"can't find internal macro info at name: \" + name);\n\t}\n\treturn ret;\n}\n",
                      "markdown": "`                                                            const std::string& name) {\n\tauto ret = c.macros().at(name);\n\tif(!ret) {\n\t\tthrow falco_exception(\"can't find internal macro info at name: \" + name);\n\t}\n\treturn ret;\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader_compiler.cpp"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 30,
                  "endLine": 140,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                                                          const std::string& name) {\n\tauto ret = c.lists().at(name);\n\tif(!ret) {\n\t\tthrow falco_exception(\"can't find internal list info at name: \" + name);\n\t}\n\treturn ret;\n}\n",
                    "rendered": {
                      "text": "                                                          const std::string& name) {\n\tauto ret = c.lists().at(name);\n\tif(!ret) {\n\t\tthrow falco_exception(\"can't find internal list info at name: \" + name);\n\t}\n\treturn ret;\n}\n",
                      "markdown": "`                                                          const std::string& name) {\n\tauto ret = c.lists().at(name);\n\tif(!ret) {\n\t\tthrow falco_exception(\"can't find internal list info at name: \" + name);\n\t}\n\treturn ret;\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader.cpp"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 83,
                  "endLine": 190,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\t}\n\n\t// If not using alt content, the last location's name must be found in rules_contents\n\tconst std::string& snip_content = (!alt_content.empty() ? alt_content : it->second.get());\n\n\tif(snip_content.empty()) {\n\t\treturn \"<No context available>\\n\";\n",
                    "rendered": {
                      "text": "\t}\n\n\t// If not using alt content, the last location's name must be found in rules_contents\n\tconst std::string& snip_content = (!alt_content.empty() ? alt_content : it->second.get());\n\n\tif(snip_content.empty()) {\n\t\treturn \"<No context available>\\n\";\n",
                      "markdown": "`\t}\n\n\t// If not using alt content, the last location's name must be found in rules_contents\n\tconst std::string& snip_content = (!alt_content.empty() ? alt_content : it->second.get());\n\n\tif(snip_content.empty()) {\n\t\treturn \"<No context available>\\n\";\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader.cpp"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 34,
                  "endLine": 177,
                  "endColumn": 38,
                  "snippet": {
                    "text": "std::string rule_loader::context::snippet(\n        const falco::load_result::rules_contents_t& rules_contents,\n        size_t snippet_width) const {\n\t// All valid contexts should have at least one location.\n\tif(m_locs.empty()) {\n\t\tthrow falco_exception(\"rule_loader::context without location?\");\n\t}\n",
                    "rendered": {
                      "text": "std::string rule_loader::context::snippet(\n        const falco::load_result::rules_contents_t& rules_contents,\n        size_t snippet_width) const {\n\t// All valid contexts should have at least one location.\n\tif(m_locs.empty()) {\n\t\tthrow falco_exception(\"rule_loader::context without location?\");\n\t}\n",
                      "markdown": "`std::string rule_loader::context::snippet(\n        const falco::load_result::rules_contents_t& rules_contents,\n        size_t snippet_width) const {\n\t// All valid contexts should have at least one location.\n\tif(m_locs.empty()) {\n\t\tthrow falco_exception(\"rule_loader::context without location?\");\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader.cpp"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 34,
                  "endLine": 150,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n\tret[\"locations\"] = nlohmann::json::array();\n\n\t// All valid contexts should have at least one location.\n\tif(m_locs.empty()) {\n\t\tthrow falco_exception(\"rule_loader::context without location?\");\n\t}\n",
                    "rendered": {
                      "text": "\n\tret[\"locations\"] = nlohmann::json::array();\n\n\t// All valid contexts should have at least one location.\n\tif(m_locs.empty()) {\n\t\tthrow falco_exception(\"rule_loader::context without location?\");\n\t}\n",
                      "markdown": "`\n\tret[\"locations\"] = nlohmann::json::array();\n\n\t// All valid contexts should have at least one location.\n\tif(m_locs.empty()) {\n\t\tthrow falco_exception(\"rule_loader::context without location?\");\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader.cpp"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 34,
                  "endLine": 122,
                  "endColumn": 38,
                  "snippet": {
                    "text": "std::string rule_loader::context::as_string() {\n\tstd::ostringstream os;\n\n\t// All valid contexts should have at least one location.\n\tif(m_locs.empty()) {\n\t\tthrow falco_exception(\"rule_loader::context without location?\");\n\t}\n",
                    "rendered": {
                      "text": "std::string rule_loader::context::as_string() {\n\tstd::ostringstream os;\n\n\t// All valid contexts should have at least one location.\n\tif(m_locs.empty()) {\n\t\tthrow falco_exception(\"rule_loader::context without location?\");\n\t}\n",
                      "markdown": "`std::string rule_loader::context::as_string() {\n\tstd::ostringstream os;\n\n\t// All valid contexts should have at least one location.\n\tif(m_locs.empty()) {\n\t\tthrow falco_exception(\"rule_loader::context without location?\");\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader.cpp"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 34,
                  "endLine": 98,
                  "endColumn": 38,
                  "snippet": {
                    "text": "}\n\nconst std::string& rule_loader::context::name() const {\n\t// All valid contexts should have at least one location.\n\tif(m_locs.empty()) {\n\t\tthrow falco_exception(\"rule_loader::context without location?\");\n\t}\n",
                    "rendered": {
                      "text": "}\n\nconst std::string& rule_loader::context::name() const {\n\t// All valid contexts should have at least one location.\n\tif(m_locs.empty()) {\n\t\tthrow falco_exception(\"rule_loader::context without location?\");\n\t}\n",
                      "markdown": "`}\n\nconst std::string& rule_loader::context::name() const {\n\t// All valid contexts should have at least one location.\n\tif(m_locs.empty()) {\n\t\tthrow falco_exception(\"rule_loader::context without location?\");\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine.cpp"
                },
                "region": {
                  "startLine": 710,
                  "startColumn": 88,
                  "endLine": 710,
                  "endColumn": 93,
                  "snippet": {
                    "text": "\tout[\"details\"][\"events\"] = std::move(events);\n\n\t// Store compiled condition\n\tout[\"details\"][\"condition_compiled\"] = libsinsp::filter::ast::as_string(macro.condition.get());\n\n\t// Compute the plugins that are actually used by this macro.\n\t// Note: macros have no specific source, we need to set an empty list of used\n",
                    "rendered": {
                      "text": "\tout[\"details\"][\"events\"] = std::move(events);\n\n\t// Store compiled condition\n\tout[\"details\"][\"condition_compiled\"] = libsinsp::filter::ast::as_string(macro.condition.get());\n\n\t// Compute the plugins that are actually used by this macro.\n\t// Note: macros have no specific source, we need to set an empty list of used\n",
                      "markdown": "`\tout[\"details\"][\"events\"] = std::move(events);\n\n\t// Store compiled condition\n\tout[\"details\"][\"condition_compiled\"] = libsinsp::filter::ast::as_string(macro.condition.get());\n\n\t// Compute the plugins that are actually used by this macro.\n\t// Note: macros have no specific source, we need to set an empty list of used\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine.cpp"
                },
                "region": {
                  "startLine": 706,
                  "startColumn": 47,
                  "endLine": 706,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n\t// Store event types\n\tnlohmann::json events;\n\tget_json_evt_types(events, \"\", macro.condition.get());\n\tout[\"details\"][\"events\"] = std::move(events);\n\n\t// Store compiled condition\n",
                    "rendered": {
                      "text": "\n\t// Store event types\n\tnlohmann::json events;\n\tget_json_evt_types(events, \"\", macro.condition.get());\n\tout[\"details\"][\"events\"] = std::move(events);\n\n\t// Store compiled condition\n",
                      "markdown": "`\n\t// Store event types\n\tnlohmann::json events;\n\tget_json_evt_types(events, \"\", macro.condition.get());\n\tout[\"details\"][\"events\"] = std::move(events);\n\n\t// Store compiled condition\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine.cpp"
                },
                "region": {
                  "startLine": 696,
                  "startColumn": 46,
                  "endLine": 696,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t\tcompiled_details.known_lists.insert(l.name);\n\t}\n\tfilter_details_resolver().run(ast.get(), details);\n\tfilter_details_resolver().run(macro.condition.get(), compiled_details);\n\n\tout[\"details\"][\"used\"] = macro.used;\n\tout[\"details\"][\"macros\"] = sequence_to_json_array(details.macros);\n",
                    "rendered": {
                      "text": "\t\tcompiled_details.known_lists.insert(l.name);\n\t}\n\tfilter_details_resolver().run(ast.get(), details);\n\tfilter_details_resolver().run(macro.condition.get(), compiled_details);\n\n\tout[\"details\"][\"used\"] = macro.used;\n\tout[\"details\"][\"macros\"] = sequence_to_json_array(details.macros);\n",
                      "markdown": "`\t\tcompiled_details.known_lists.insert(l.name);\n\t}\n\tfilter_details_resolver().run(ast.get(), details);\n\tfilter_details_resolver().run(macro.condition.get(), compiled_details);\n\n\tout[\"details\"][\"used\"] = macro.used;\n\tout[\"details\"][\"macros\"] = sequence_to_json_array(details.macros);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine.cpp"
                },
                "region": {
                  "startLine": 695,
                  "startColumn": 34,
                  "endLine": 695,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\tdetails.known_lists.insert(l.name);\n\t\tcompiled_details.known_lists.insert(l.name);\n\t}\n\tfilter_details_resolver().run(ast.get(), details);\n\tfilter_details_resolver().run(macro.condition.get(), compiled_details);\n\n\tout[\"details\"][\"used\"] = macro.used;\n",
                    "rendered": {
                      "text": "\t\tdetails.known_lists.insert(l.name);\n\t\tcompiled_details.known_lists.insert(l.name);\n\t}\n\tfilter_details_resolver().run(ast.get(), details);\n\tfilter_details_resolver().run(macro.condition.get(), compiled_details);\n\n\tout[\"details\"][\"used\"] = macro.used;\n",
                      "markdown": "`\t\tdetails.known_lists.insert(l.name);\n\t\tcompiled_details.known_lists.insert(l.name);\n\t}\n\tfilter_details_resolver().run(ast.get(), details);\n\tfilter_details_resolver().run(macro.condition.get(), compiled_details);\n\n\tout[\"details\"][\"used\"] = macro.used;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine.cpp"
                },
                "region": {
                  "startLine": 648,
                  "startColumn": 84,
                  "endLine": 648,
                  "endColumn": 89,
                  "snippet": {
                    "text": "\tout[\"details\"][\"events\"] = std::move(events);\n\n\t// Store compiled condition and output\n\tout[\"details\"][\"condition_compiled\"] = libsinsp::filter::ast::as_string(r.condition.get());\n\tout[\"details\"][\"output_compiled\"] = r.output;\n\n\t// Compute the plugins that are actually used by this rule. This is involves:\n",
                    "rendered": {
                      "text": "\tout[\"details\"][\"events\"] = std::move(events);\n\n\t// Store compiled condition and output\n\tout[\"details\"][\"condition_compiled\"] = libsinsp::filter::ast::as_string(r.condition.get());\n\tout[\"details\"][\"output_compiled\"] = r.output;\n\n\t// Compute the plugins that are actually used by this rule. This is involves:\n",
                      "markdown": "`\tout[\"details\"][\"events\"] = std::move(events);\n\n\t// Store compiled condition and output\n\tout[\"details\"][\"condition_compiled\"] = libsinsp::filter::ast::as_string(r.condition.get());\n\tout[\"details\"][\"output_compiled\"] = r.output;\n\n\t// Compute the plugins that are actually used by this rule. This is involves:\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine.cpp"
                },
                "region": {
                  "startLine": 644,
                  "startColumn": 52,
                  "endLine": 644,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n\t// Store event types\n\tnlohmann::json events;\n\tget_json_evt_types(events, info.source, r.condition.get());\n\tout[\"details\"][\"events\"] = std::move(events);\n\n\t// Store compiled condition and output\n",
                    "rendered": {
                      "text": "\n\t// Store event types\n\tnlohmann::json events;\n\tget_json_evt_types(events, info.source, r.condition.get());\n\tout[\"details\"][\"events\"] = std::move(events);\n\n\t// Store compiled condition and output\n",
                      "markdown": "`\n\t// Store event types\n\tnlohmann::json events;\n\tget_json_evt_types(events, info.source, r.condition.get());\n\tout[\"details\"][\"events\"] = std::move(events);\n\n\t// Store compiled condition and output\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine.cpp"
                },
                "region": {
                  "startLine": 591,
                  "startColumn": 42,
                  "endLine": 591,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\tcompiled_details.known_lists.insert(l.name);\n\t}\n\tfilter_details_resolver().run(ast.get(), details);\n\tfilter_details_resolver().run(r.condition.get(), compiled_details);\n\n\tout[\"details\"][\"macros\"] = sequence_to_json_array(details.macros);\n\tout[\"details\"][\"lists\"] = sequence_to_json_array(details.lists);\n",
                    "rendered": {
                      "text": "\t\tcompiled_details.known_lists.insert(l.name);\n\t}\n\tfilter_details_resolver().run(ast.get(), details);\n\tfilter_details_resolver().run(r.condition.get(), compiled_details);\n\n\tout[\"details\"][\"macros\"] = sequence_to_json_array(details.macros);\n\tout[\"details\"][\"lists\"] = sequence_to_json_array(details.lists);\n",
                      "markdown": "`\t\tcompiled_details.known_lists.insert(l.name);\n\t}\n\tfilter_details_resolver().run(ast.get(), details);\n\tfilter_details_resolver().run(r.condition.get(), compiled_details);\n\n\tout[\"details\"][\"macros\"] = sequence_to_json_array(details.macros);\n\tout[\"details\"][\"lists\"] = sequence_to_json_array(details.lists);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine.cpp"
                },
                "region": {
                  "startLine": 590,
                  "startColumn": 34,
                  "endLine": 590,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\tdetails.known_lists.insert(l.name);\n\t\tcompiled_details.known_lists.insert(l.name);\n\t}\n\tfilter_details_resolver().run(ast.get(), details);\n\tfilter_details_resolver().run(r.condition.get(), compiled_details);\n\n\tout[\"details\"][\"macros\"] = sequence_to_json_array(details.macros);\n",
                    "rendered": {
                      "text": "\t\tdetails.known_lists.insert(l.name);\n\t\tcompiled_details.known_lists.insert(l.name);\n\t}\n\tfilter_details_resolver().run(ast.get(), details);\n\tfilter_details_resolver().run(r.condition.get(), compiled_details);\n\n\tout[\"details\"][\"macros\"] = sequence_to_json_array(details.macros);\n",
                      "markdown": "`\t\tdetails.known_lists.insert(l.name);\n\t\tcompiled_details.known_lists.insert(l.name);\n\t}\n\tfilter_details_resolver().run(ast.get(), details);\n\tfilter_details_resolver().run(r.condition.get(), compiled_details);\n\n\tout[\"details\"][\"macros\"] = sequence_to_json_array(details.macros);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine.cpp"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 32,
                  "endLine": 380,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t// note: there are no thread-safety guarantees on the filter_ruleset::run()\n\t// method, but the thread-safety assumptions of falco_engine::process_event()\n\t// imply that concurrent invokers use different and non-switchable values of\n\t// source_idx, which means that at any time each filter_ruleset will only\n\t// be accessed by a single thread.\n\n\tconst falco_source *source = find_source(source_idx);\n",
                    "rendered": {
                      "text": "\t// note: there are no thread-safety guarantees on the filter_ruleset::run()\n\t// method, but the thread-safety assumptions of falco_engine::process_event()\n\t// imply that concurrent invokers use different and non-switchable values of\n\t// source_idx, which means that at any time each filter_ruleset will only\n\t// be accessed by a single thread.\n\n\tconst falco_source *source = find_source(source_idx);\n",
                      "markdown": "`\t// note: there are no thread-safety guarantees on the filter_ruleset::run()\n\t// method, but the thread-safety assumptions of falco_engine::process_event()\n\t// imply that concurrent invokers use different and non-switchable values of\n\t// source_idx, which means that at any time each filter_ruleset will only\n\t// be accessed by a single thread.\n\n\tconst falco_source *source = find_source(source_idx);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine.cpp"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 56,
                  "endLine": 210,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t\tauto info = m_rule_collector->rules().at(rule.name);\n\t\t\tif(!info) {\n\t\t\t\t// this is just defensive, it should never happen\n\t\t\t\tthrow falco_exception(\"can't find internal rule info at name: \" + name);\n\t\t\t}\n\n\t\t\tauto source = find_source(rule.source);\n",
                    "rendered": {
                      "text": "\t\t\tauto info = m_rule_collector->rules().at(rule.name);\n\t\t\tif(!info) {\n\t\t\t\t// this is just defensive, it should never happen\n\t\t\t\tthrow falco_exception(\"can't find internal rule info at name: \" + name);\n\t\t\t}\n\n\t\t\tauto source = find_source(rule.source);\n",
                      "markdown": "`\t\t\tauto info = m_rule_collector->rules().at(rule.name);\n\t\t\tif(!info) {\n\t\t\t\t// this is just defensive, it should never happen\n\t\t\t\tthrow falco_exception(\"can't find internal rule info at name: \" + name);\n\t\t\t}\n\n\t\t\tauto source = find_source(rule.source);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine.cpp"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 5,
                  "endLine": 612,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t}\n\n\t// Get fields from output string\n\tauto fmt = create_formatter(r.source, r.output);\n\tfmt->get_field_names(out_fields);\n\tout[\"details\"][\"output_fields\"] = sequence_to_json_array(out_fields);\n\n",
                    "rendered": {
                      "text": "\t}\n\n\t// Get fields from output string\n\tauto fmt = create_formatter(r.source, r.output);\n\tfmt->get_field_names(out_fields);\n\tout[\"details\"][\"output_fields\"] = sequence_to_json_array(out_fields);\n\n",
                      "markdown": "`\t}\n\n\t// Get fields from output string\n\tauto fmt = create_formatter(r.source, r.output);\n\tfmt->get_field_names(out_fields);\n\tout[\"details\"][\"output_fields\"] = sequence_to_json_array(out_fields);\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine.cpp"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 39,
                  "endLine": 380,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t// note: there are no thread-safety guarantees on the filter_ruleset::run()\n\t// method, but the thread-safety assumptions of falco_engine::process_event()\n\t// imply that concurrent invokers use different and non-switchable values of\n\t// source_idx, which means that at any time each filter_ruleset will only\n\t// be accessed by a single thread.\n\n\tconst falco_source *source = find_source(source_idx);\n",
                    "rendered": {
                      "text": "\t// note: there are no thread-safety guarantees on the filter_ruleset::run()\n\t// method, but the thread-safety assumptions of falco_engine::process_event()\n\t// imply that concurrent invokers use different and non-switchable values of\n\t// source_idx, which means that at any time each filter_ruleset will only\n\t// be accessed by a single thread.\n\n\tconst falco_source *source = find_source(source_idx);\n",
                      "markdown": "`\t// note: there are no thread-safety guarantees on the filter_ruleset::run()\n\t// method, but the thread-safety assumptions of falco_engine::process_event()\n\t// imply that concurrent invokers use different and non-switchable values of\n\t// source_idx, which means that at any time each filter_ruleset will only\n\t// be accessed by a single thread.\n\n\tconst falco_source *source = find_source(source_idx);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/falco_engine.cpp"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 32,
                  "endLine": 210,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t\tauto info = m_rule_collector->rules().at(rule.name);\n\t\t\tif(!info) {\n\t\t\t\t// this is just defensive, it should never happen\n\t\t\t\tthrow falco_exception(\"can't find internal rule info at name: \" + name);\n\t\t\t}\n\n\t\t\tauto source = find_source(rule.source);\n",
                    "rendered": {
                      "text": "\t\t\tauto info = m_rule_collector->rules().at(rule.name);\n\t\t\tif(!info) {\n\t\t\t\t// this is just defensive, it should never happen\n\t\t\t\tthrow falco_exception(\"can't find internal rule info at name: \" + name);\n\t\t\t}\n\n\t\t\tauto source = find_source(rule.source);\n",
                      "markdown": "`\t\t\tauto info = m_rule_collector->rules().at(rule.name);\n\t\t\tif(!info) {\n\t\t\t\t// this is just defensive, it should never happen\n\t\t\t\tthrow falco_exception(\"can't find internal rule info at name: \" + name);\n\t\t\t}\n\n\t\t\tauto source = find_source(rule.source);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/stats_manager.cpp"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 17,
                  "endLine": 42,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tif(val > 0) {\n\t\t\tfalco_common::format_priority((falco_common::priority_type)i, fmt, true);\n\t\t\ttransform(fmt.begin(), fmt.end(), fmt.begin(), ::toupper);\n\t\t\tout += \"   \" + fmt + \": \" + std::to_string(val) + \"\\n\";\n\t\t}\n\t}\n\tout += \"Triggered rules by rule name:\\n\";\n",
                    "rendered": {
                      "text": "\t\tif(val > 0) {\n\t\t\tfalco_common::format_priority((falco_common::priority_type)i, fmt, true);\n\t\t\ttransform(fmt.begin(), fmt.end(), fmt.begin(), ::toupper);\n\t\t\tout += \"   \" + fmt + \": \" + std::to_string(val) + \"\\n\";\n\t\t}\n\t}\n\tout += \"Triggered rules by rule name:\\n\";\n",
                      "markdown": "`\t\tif(val > 0) {\n\t\t\tfalco_common::format_priority((falco_common::priority_type)i, fmt, true);\n\t\t\ttransform(fmt.begin(), fmt.end(), fmt.begin(), ::toupper);\n\t\t\tout += \"   \" + fmt + \": \" + std::to_string(val) + \"\\n\";\n\t\t}\n\t}\n\tout += \"Triggered rules by rule name:\\n\";\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_inspectors.cpp"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 16,
                  "endLine": 107,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\tinspector->set_dropfailed(true);\n\t}\n\n\tinspector->set_hostname_and_port_resolution_mode(false);\n}\n\nstatic bool populate_filterchecks(const std::shared_ptr<sinsp>& inspector,\n",
                    "rendered": {
                      "text": "\t\tinspector->set_dropfailed(true);\n\t}\n\n\tinspector->set_hostname_and_port_resolution_mode(false);\n}\n\nstatic bool populate_filterchecks(const std::shared_ptr<sinsp>& inspector,\n",
                      "markdown": "`\t\tinspector->set_dropfailed(true);\n\t}\n\n\tinspector->set_hostname_and_port_resolution_mode(false);\n}\n\nstatic bool populate_filterchecks(const std::shared_ptr<sinsp>& inspector,\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_inspectors.cpp"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 36,
                  "endLine": 32,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tsinsp_evt::param_fmt event_buffer_format = sinsp_evt::PF_NORMAL;\n\tif(s.options.print_base64) {\n\t\tfalco_logger::log(falco_logger::level::WARNING,\n\t\t                  \"The -b/--print-base64 option is deprecated and will be removed. Use -o \"\n\t\t                  \"buffer_format_base64=true instead.\");\n\t\tevent_buffer_format = sinsp_evt::PF_BASE64;\n\t}\n",
                    "rendered": {
                      "text": "\tsinsp_evt::param_fmt event_buffer_format = sinsp_evt::PF_NORMAL;\n\tif(s.options.print_base64) {\n\t\tfalco_logger::log(falco_logger::level::WARNING,\n\t\t                  \"The -b/--print-base64 option is deprecated and will be removed. Use -o \"\n\t\t                  \"buffer_format_base64=true instead.\");\n\t\tevent_buffer_format = sinsp_evt::PF_BASE64;\n\t}\n",
                      "markdown": "`\tsinsp_evt::param_fmt event_buffer_format = sinsp_evt::PF_NORMAL;\n\tif(s.options.print_base64) {\n\t\tfalco_logger::log(falco_logger::level::WARNING,\n\t\t                  \"The -b/--print-base64 option is deprecated and will be removed. Use -o \"\n\t\t                  \"buffer_format_base64=true instead.\");\n\t\tevent_buffer_format = sinsp_evt::PF_BASE64;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/init_inspectors.cpp"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 54,
                  "endLine": 78,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\t\tif(!p.empty()) {\n\t\t\tinspector->add_cri_socket_path(p);\n\t\t\tfalco_logger::log(falco_logger::level::DEBUG,\n\t\t\t                  \"Enabled container runtime socket at '\" + p + \"' via config file\");\n\t\t}\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tif(!p.empty()) {\n\t\t\tinspector->add_cri_socket_path(p);\n\t\t\tfalco_logger::log(falco_logger::level::DEBUG,\n\t\t\t                  \"Enabled container runtime socket at '\" + p + \"' via config file\");\n\t\t}\n\t}\n\n",
                      "markdown": "`\t\tif(!p.empty()) {\n\t\t\tinspector->add_cri_socket_path(p);\n\t\t\tfalco_logger::log(falco_logger::level::DEBUG,\n\t\t\t                  \"Enabled container runtime socket at '\" + p + \"' via config file\");\n\t\t}\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/print_plugin_info.cpp"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 33,
                  "endLine": 96,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t\t\treturn run_result::exit();\n\t\t\t}\n\t\t}\n\t\treturn run_result::fatal(\"can't find plugin and print its info: \" +\n\t\t                         s.options.print_plugin_info);\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\treturn run_result::exit();\n\t\t\t}\n\t\t}\n\t\treturn run_result::fatal(\"can't find plugin and print its info: \" +\n\t\t                         s.options.print_plugin_info);\n\t}\n\n",
                      "markdown": "`\t\t\t\treturn run_result::exit();\n\t\t\t}\n\t\t}\n\t\treturn run_result::fatal(\"can't find plugin and print its info: \" +\n\t\t                         s.options.print_plugin_info);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_request_context.cpp"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 55,
                  "endLine": 156,
                  "endColumn": 60,
                  "snippet": {
                    "text": "        server* srv) {\n\tswitch(m_state) {\n\tcase request_context_base::REQUEST:\n\t\tm_bidi_ctx = std::make_unique<bidi_context>(m_srv_ctx.get());\n\t\tm_bidi_ctx->m_status = bidi_context::STREAMING;\n\t\tm_state = request_context_base::WRITE;\n\t\tm_reader_writer->Read(&m_req, this);\n",
                    "rendered": {
                      "text": "        server* srv) {\n\tswitch(m_state) {\n\tcase request_context_base::REQUEST:\n\t\tm_bidi_ctx = std::make_unique<bidi_context>(m_srv_ctx.get());\n\t\tm_bidi_ctx->m_status = bidi_context::STREAMING;\n\t\tm_state = request_context_base::WRITE;\n\t\tm_reader_writer->Read(&m_req, this);\n",
                      "markdown": "`        server* srv) {\n\tswitch(m_state) {\n\tcase request_context_base::REQUEST:\n\t\tm_bidi_ctx = std::make_unique<bidi_context>(m_srv_ctx.get());\n\t\tm_bidi_ctx->m_status = bidi_context::STREAMING;\n\t\tm_state = request_context_base::WRITE;\n\t\tm_reader_writer->Read(&m_req, this);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_request_context.cpp"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 60,
                  "endLine": 148,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\t// Request to start processing given requests.\n\t// Using \"this\" - ie., the memory address of this context - as the tag that uniquely identifies\n\t// the request. In this way, different contexts can serve different requests concurrently.\n\t(srv->m_output_svc.*m_request_func)(srvctx, m_reader_writer.get(), cq, cq, this);\n};\n\ntemplate<>\n",
                    "rendered": {
                      "text": "\t// Request to start processing given requests.\n\t// Using \"this\" - ie., the memory address of this context - as the tag that uniquely identifies\n\t// the request. In this way, different contexts can serve different requests concurrently.\n\t(srv->m_output_svc.*m_request_func)(srvctx, m_reader_writer.get(), cq, cq, this);\n};\n\ntemplate<>\n",
                      "markdown": "`\t// Request to start processing given requests.\n\t// Using \"this\" - ie., the memory address of this context - as the tag that uniquely identifies\n\t// the request. In this way, different contexts can serve different requests concurrently.\n\t(srv->m_output_svc.*m_request_func)(srvctx, m_reader_writer.get(), cq, cq, this);\n};\n\ntemplate<>\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_request_context.cpp"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 34,
                  "endLine": 144,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t        std::make_unique<::grpc::ServerAsyncReaderWriter<outputs::response, outputs::request>>(\n\t                srvctx);\n\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n\t// Request to start processing given requests.\n\t// Using \"this\" - ie., the memory address of this context - as the tag that uniquely identifies\n\t// the request. In this way, different contexts can serve different requests concurrently.\n",
                    "rendered": {
                      "text": "\t        std::make_unique<::grpc::ServerAsyncReaderWriter<outputs::response, outputs::request>>(\n\t                srvctx);\n\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n\t// Request to start processing given requests.\n\t// Using \"this\" - ie., the memory address of this context - as the tag that uniquely identifies\n\t// the request. In this way, different contexts can serve different requests concurrently.\n",
                      "markdown": "`\t        std::make_unique<::grpc::ServerAsyncReaderWriter<outputs::response, outputs::request>>(\n\t                srvctx);\n\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n\t// Request to start processing given requests.\n\t// Using \"this\" - ie., the memory address of this context - as the tag that uniquely identifies\n\t// the request. In this way, different contexts can serve different requests concurrently.\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_request_context.cpp"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 24,
                  "endLine": 139,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        server* srv) {\n\tm_state = request_context_base::REQUEST;\n\tm_srv_ctx = std::make_unique<::grpc::ServerContext>();\n\tauto srvctx = m_srv_ctx.get();\n\tm_reader_writer =\n\t        std::make_unique<::grpc::ServerAsyncReaderWriter<outputs::response, outputs::request>>(\n\t                srvctx);\n",
                    "rendered": {
                      "text": "        server* srv) {\n\tm_state = request_context_base::REQUEST;\n\tm_srv_ctx = std::make_unique<::grpc::ServerContext>();\n\tauto srvctx = m_srv_ctx.get();\n\tm_reader_writer =\n\t        std::make_unique<::grpc::ServerAsyncReaderWriter<outputs::response, outputs::request>>(\n\t                srvctx);\n",
                      "markdown": "`        server* srv) {\n\tm_state = request_context_base::REQUEST;\n\tm_srv_ctx = std::make_unique<::grpc::ServerContext>();\n\tauto srvctx = m_srv_ctx.get();\n\tm_reader_writer =\n\t        std::make_unique<::grpc::ServerAsyncReaderWriter<outputs::response, outputs::request>>(\n\t                srvctx);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_request_context.cpp"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 41,
                  "endLine": 117,
                  "endColumn": 46,
                  "snippet": {
                    "text": "template<>\nvoid request_context<version::service, version::request, version::response>::process(server* srv) {\n\tversion::response res;\n\t(srv->*m_process_func)(context(m_srv_ctx.get()), m_req, res);\n\n\t// Notify the gRPC runtime that this processing is done\n\tm_state = request_context_base::FINISH;\n",
                    "rendered": {
                      "text": "template<>\nvoid request_context<version::service, version::request, version::response>::process(server* srv) {\n\tversion::response res;\n\t(srv->*m_process_func)(context(m_srv_ctx.get()), m_req, res);\n\n\t// Notify the gRPC runtime that this processing is done\n\tm_state = request_context_base::FINISH;\n",
                      "markdown": "`template<>\nvoid request_context<version::service, version::request, version::response>::process(server* srv) {\n\tversion::response res;\n\t(srv->*m_process_func)(context(m_srv_ctx.get()), m_req, res);\n\n\t// Notify the gRPC runtime that this processing is done\n\tm_state = request_context_base::FINISH;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_request_context.cpp"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 66,
                  "endLine": 111,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\t// Request to start processing given requests.\n\t// Using \"this\" - ie., the memory address of this context - as the tag that uniquely identifies\n\t// the request. In this way, different contexts can serve different requests concurrently.\n\t(srv->m_version_svc.*m_request_func)(srvctx, &m_req, m_res_writer.get(), cq, cq, this);\n}\n\ntemplate<>\n",
                    "rendered": {
                      "text": "\t// Request to start processing given requests.\n\t// Using \"this\" - ie., the memory address of this context - as the tag that uniquely identifies\n\t// the request. In this way, different contexts can serve different requests concurrently.\n\t(srv->m_version_svc.*m_request_func)(srvctx, &m_req, m_res_writer.get(), cq, cq, this);\n}\n\ntemplate<>\n",
                      "markdown": "`\t// Request to start processing given requests.\n\t// Using \"this\" - ie., the memory address of this context - as the tag that uniquely identifies\n\t// the request. In this way, different contexts can serve different requests concurrently.\n\t(srv->m_version_svc.*m_request_func)(srvctx, &m_req, m_res_writer.get(), cq, cq, this);\n}\n\ntemplate<>\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_request_context.cpp"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 34,
                  "endLine": 107,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tauto srvctx = m_srv_ctx.get();\n\tm_res_writer = std::make_unique<::grpc::ServerAsyncResponseWriter<version::response>>(srvctx);\n\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n\t// Request to start processing given requests.\n\t// Using \"this\" - ie., the memory address of this context - as the tag that uniquely identifies\n\t// the request. In this way, different contexts can serve different requests concurrently.\n",
                    "rendered": {
                      "text": "\tauto srvctx = m_srv_ctx.get();\n\tm_res_writer = std::make_unique<::grpc::ServerAsyncResponseWriter<version::response>>(srvctx);\n\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n\t// Request to start processing given requests.\n\t// Using \"this\" - ie., the memory address of this context - as the tag that uniquely identifies\n\t// the request. In this way, different contexts can serve different requests concurrently.\n",
                      "markdown": "`\tauto srvctx = m_srv_ctx.get();\n\tm_res_writer = std::make_unique<::grpc::ServerAsyncResponseWriter<version::response>>(srvctx);\n\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n\t// Request to start processing given requests.\n\t// Using \"this\" - ie., the memory address of this context - as the tag that uniquely identifies\n\t// the request. In this way, different contexts can serve different requests concurrently.\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_request_context.cpp"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 24,
                  "endLine": 104,
                  "endColumn": 29,
                  "snippet": {
                    "text": "void request_context<version::service, version::request, version::response>::start(server* srv) {\n\tm_state = request_context_base::REQUEST;\n\tm_srv_ctx = std::make_unique<::grpc::ServerContext>();\n\tauto srvctx = m_srv_ctx.get();\n\tm_res_writer = std::make_unique<::grpc::ServerAsyncResponseWriter<version::response>>(srvctx);\n\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n",
                    "rendered": {
                      "text": "void request_context<version::service, version::request, version::response>::start(server* srv) {\n\tm_state = request_context_base::REQUEST;\n\tm_srv_ctx = std::make_unique<::grpc::ServerContext>();\n\tauto srvctx = m_srv_ctx.get();\n\tm_res_writer = std::make_unique<::grpc::ServerAsyncResponseWriter<version::response>>(srvctx);\n\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n",
                      "markdown": "`void request_context<version::service, version::request, version::response>::start(server* srv) {\n\tm_state = request_context_base::REQUEST;\n\tm_srv_ctx = std::make_unique<::grpc::ServerContext>();\n\tauto srvctx = m_srv_ctx.get();\n\tm_res_writer = std::make_unique<::grpc::ServerAsyncResponseWriter<version::response>>(srvctx);\n\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_request_context.cpp"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 59,
                  "endLine": 45,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t// When it is the 1st process call\n\tif(m_state == request_context_base::REQUEST) {\n\t\tm_state = request_context_base::WRITE;\n\t\tm_stream_ctx = std::make_unique<stream_context>(m_srv_ctx.get());\n\t}\n\n\t// Processing\n",
                    "rendered": {
                      "text": "\t// When it is the 1st process call\n\tif(m_state == request_context_base::REQUEST) {\n\t\tm_state = request_context_base::WRITE;\n\t\tm_stream_ctx = std::make_unique<stream_context>(m_srv_ctx.get());\n\t}\n\n\t// Processing\n",
                      "markdown": "`\t// When it is the 1st process call\n\tif(m_state == request_context_base::REQUEST) {\n\t\tm_state = request_context_base::WRITE;\n\t\tm_stream_ctx = std::make_unique<stream_context>(m_srv_ctx.get());\n\t}\n\n\t// Processing\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_request_context.cpp"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 65,
                  "endLine": 36,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n\t// todo(leodido) > log \"calling m_request_func: tag=this, state=m_state\"\n\t(srv->m_output_svc.*m_request_func)(srvctx, &m_req, m_res_writer.get(), cq, cq, this);\n}\n\ntemplate<>\n",
                    "rendered": {
                      "text": "\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n\t// todo(leodido) > log \"calling m_request_func: tag=this, state=m_state\"\n\t(srv->m_output_svc.*m_request_func)(srvctx, &m_req, m_res_writer.get(), cq, cq, this);\n}\n\ntemplate<>\n",
                      "markdown": "`\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n\t// todo(leodido) > log \"calling m_request_func: tag=this, state=m_state\"\n\t(srv->m_output_svc.*m_request_func)(srvctx, &m_req, m_res_writer.get(), cq, cq, this);\n}\n\ntemplate<>\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_request_context.cpp"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 34,
                  "endLine": 34,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tm_res_writer = std::make_unique<::grpc::ServerAsyncWriter<outputs::response>>(srvctx);\n\tm_stream_ctx.reset();\n\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n\t// todo(leodido) > log \"calling m_request_func: tag=this, state=m_state\"\n\t(srv->m_output_svc.*m_request_func)(srvctx, &m_req, m_res_writer.get(), cq, cq, this);\n}\n",
                    "rendered": {
                      "text": "\tm_res_writer = std::make_unique<::grpc::ServerAsyncWriter<outputs::response>>(srvctx);\n\tm_stream_ctx.reset();\n\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n\t// todo(leodido) > log \"calling m_request_func: tag=this, state=m_state\"\n\t(srv->m_output_svc.*m_request_func)(srvctx, &m_req, m_res_writer.get(), cq, cq, this);\n}\n",
                      "markdown": "`\tm_res_writer = std::make_unique<::grpc::ServerAsyncWriter<outputs::response>>(srvctx);\n\tm_stream_ctx.reset();\n\tm_req.Clear();\n\tauto cq = srv->m_completion_queue.get();\n\t// todo(leodido) > log \"calling m_request_func: tag=this, state=m_state\"\n\t(srv->m_output_svc.*m_request_func)(srvctx, &m_req, m_res_writer.get(), cq, cq, this);\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/grpc_request_context.cpp"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 24,
                  "endLine": 30,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        server* srv) {\n\tm_state = request_context_base::REQUEST;\n\tm_srv_ctx = std::make_unique<::grpc::ServerContext>();\n\tauto srvctx = m_srv_ctx.get();\n\tm_res_writer = std::make_unique<::grpc::ServerAsyncWriter<outputs::response>>(srvctx);\n\tm_stream_ctx.reset();\n\tm_req.Clear();\n",
                    "rendered": {
                      "text": "        server* srv) {\n\tm_state = request_context_base::REQUEST;\n\tm_srv_ctx = std::make_unique<::grpc::ServerContext>();\n\tauto srvctx = m_srv_ctx.get();\n\tm_res_writer = std::make_unique<::grpc::ServerAsyncWriter<outputs::response>>(srvctx);\n\tm_stream_ctx.reset();\n\tm_req.Clear();\n",
                      "markdown": "`        server* srv) {\n\tm_state = request_context_base::REQUEST;\n\tm_srv_ctx = std::make_unique<::grpc::ServerContext>();\n\tauto srvctx = m_srv_ctx.get();\n\tm_res_writer = std::make_unique<::grpc::ServerAsyncWriter<outputs::response>>(srvctx);\n\tm_stream_ctx.reset();\n\tm_req.Clear();\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs_http.cpp"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 57,
                  "endLine": 33,
                  "endColumn": 65,
                  "snippet": {
                    "text": "                                       const std::string &hostname,\n                                       bool json_output,\n                                       std::string &err) {\n\tif(!falco::outputs::abstract_output::init(oc, buffered, hostname, json_output, err)) {\n\t\treturn false;\n\t}\n\n",
                    "rendered": {
                      "text": "                                       const std::string &hostname,\n                                       bool json_output,\n                                       std::string &err) {\n\tif(!falco::outputs::abstract_output::init(oc, buffered, hostname, json_output, err)) {\n\t\treturn false;\n\t}\n\n",
                      "markdown": "`                                       const std::string &hostname,\n                                       bool json_output,\n                                       std::string &err) {\n\tif(!falco::outputs::abstract_output::init(oc, buffered, hostname, json_output, err)) {\n\t\treturn false;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs_http.cpp"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 58,
                  "endLine": 30,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\nbool falco::outputs::output_http::init(const config &oc,\n                                       bool buffered,\n                                       const std::string &hostname,\n                                       bool json_output,\n                                       std::string &err) {\n\tif(!falco::outputs::abstract_output::init(oc, buffered, hostname, json_output, err)) {\n",
                    "rendered": {
                      "text": "\nbool falco::outputs::output_http::init(const config &oc,\n                                       bool buffered,\n                                       const std::string &hostname,\n                                       bool json_output,\n                                       std::string &err) {\n\tif(!falco::outputs::abstract_output::init(oc, buffered, hostname, json_output, err)) {\n",
                      "markdown": "`\nbool falco::outputs::output_http::init(const config &oc,\n                                       bool buffered,\n                                       const std::string &hostname,\n                                       bool json_output,\n                                       std::string &err) {\n\tif(!falco::outputs::abstract_output::init(oc, buffered, hostname, json_output, err)) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs.h"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 15,
                  "endLine": 91,
                  "endColumn": 23,
                  "snippet": {
                    "text": "protected:\n\tconfig m_oc;\n\tbool m_buffered;\n\tstd::string m_hostname;\n\tbool m_json_output;\n};\n\n",
                    "rendered": {
                      "text": "protected:\n\tconfig m_oc;\n\tbool m_buffered;\n\tstd::string m_hostname;\n\tbool m_json_output;\n};\n\n",
                      "markdown": "`protected:\n\tconfig m_oc;\n\tbool m_buffered;\n\tstd::string m_hostname;\n\tbool m_json_output;\n};\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs.h"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 15,
                  "endLine": 69,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t                  std::string& err) {\n\t\tm_oc = oc;\n\t\tm_buffered = buffered;\n\t\tm_hostname = hostname;\n\t\tm_json_output = json_output;\n\n\t\terr = \"\";\n",
                    "rendered": {
                      "text": "\t                  std::string& err) {\n\t\tm_oc = oc;\n\t\tm_buffered = buffered;\n\t\tm_hostname = hostname;\n\t\tm_json_output = json_output;\n\n\t\terr = \"\";\n",
                      "markdown": "`\t                  std::string& err) {\n\t\tm_oc = oc;\n\t\tm_buffered = buffered;\n\t\tm_hostname = hostname;\n\t\tm_json_output = json_output;\n\n\t\terr = \"\";\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs.h"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 4,
                  "endLine": 69,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t                  std::string& err) {\n\t\tm_oc = oc;\n\t\tm_buffered = buffered;\n\t\tm_hostname = hostname;\n\t\tm_json_output = json_output;\n\n\t\terr = \"\";\n",
                    "rendered": {
                      "text": "\t                  std::string& err) {\n\t\tm_oc = oc;\n\t\tm_buffered = buffered;\n\t\tm_hostname = hostname;\n\t\tm_json_output = json_output;\n\n\t\terr = \"\";\n",
                      "markdown": "`\t                  std::string& err) {\n\t\tm_oc = oc;\n\t\tm_buffered = buffered;\n\t\tm_hostname = hostname;\n\t\tm_json_output = json_output;\n\n\t\terr = \"\";\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/outputs.h"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 38,
                  "endLine": 64,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n\tvirtual bool init(const config& oc,\n\t                  bool buffered,\n\t                  const std::string& hostname,\n\t                  bool json_output,\n\t                  std::string& err) {\n\t\tm_oc = oc;\n",
                    "rendered": {
                      "text": "\n\tvirtual bool init(const config& oc,\n\t                  bool buffered,\n\t                  const std::string& hostname,\n\t                  bool json_output,\n\t                  std::string& err) {\n\t\tm_oc = oc;\n",
                      "markdown": "`\n\tvirtual bool init(const config& oc,\n\t                  bool buffered,\n\t                  const std::string& hostname,\n\t                  bool json_output,\n\t                  std::string& err) {\n\t\tm_oc = oc;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.h"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 15,
                  "endLine": 106,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tbool m_json_output;\n\tbool m_time_format_iso_8601;\n\tstd::chrono::milliseconds m_timeout;\n\tstd::string m_hostname;\n\n\tenum ctrl_msg_type {\n\t\tCTRL_MSG_STOP = 0,\n",
                    "rendered": {
                      "text": "\tbool m_json_output;\n\tbool m_time_format_iso_8601;\n\tstd::chrono::milliseconds m_timeout;\n\tstd::string m_hostname;\n\n\tenum ctrl_msg_type {\n\t\tCTRL_MSG_STOP = 0,\n",
                      "markdown": "`\tbool m_json_output;\n\tbool m_time_format_iso_8601;\n\tstd::chrono::milliseconds m_timeout;\n\tstd::string m_hostname;\n\n\tenum ctrl_msg_type {\n\t\tCTRL_MSG_STOP = 0,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/falco_outputs.h"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 34,
                  "endLine": 52,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t              bool buffered,\n\t              size_t outputs_queue_capacity,\n\t              bool time_format_iso_8601,\n\t              const std::string &hostname);\n\n\tvirtual ~falco_outputs();\n\n",
                    "rendered": {
                      "text": "\t              bool buffered,\n\t              size_t outputs_queue_capacity,\n\t              bool time_format_iso_8601,\n\t              const std::string &hostname);\n\n\tvirtual ~falco_outputs();\n\n",
                      "markdown": "`\t              bool buffered,\n\t              size_t outputs_queue_capacity,\n\t              bool time_format_iso_8601,\n\t              const std::string &hostname);\n\n\tvirtual ~falco_outputs();\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/falco-version.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/falco-version.cmake"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 41,
                  "endLine": 19,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# Retrieve git ref and commit hash\ninclude(GetVersionFromGit)\n\n# Get Falco version variable according to git index\nif(NOT FALCO_VERSION)\n\tset(FALCO_VERSION \"0.0.0\")\n\tget_version_from_git(FALCO_VERSION \"\" \"\")\n",
                    "rendered": {
                      "text": "# Retrieve git ref and commit hash\ninclude(GetVersionFromGit)\n\n# Get Falco version variable according to git index\nif(NOT FALCO_VERSION)\n\tset(FALCO_VERSION \"0.0.0\")\n\tget_version_from_git(FALCO_VERSION \"\" \"\")\n",
                      "markdown": "`# Retrieve git ref and commit hash\ninclude(GetVersionFromGit)\n\n# Get Falco version variable according to git index\nif(NOT FALCO_VERSION)\n\tset(FALCO_VERSION \"0.0.0\")\n\tget_version_from_git(FALCO_VERSION \"\" \"\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/falco-version.cmake"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 10,
                  "endLine": 16,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# the License.\n#\n\n# Retrieve git ref and commit hash\ninclude(GetVersionFromGit)\n\n# Get Falco version variable according to git index\n",
                    "rendered": {
                      "text": "# the License.\n#\n\n# Retrieve git ref and commit hash\ninclude(GetVersionFromGit)\n\n# Get Falco version variable according to git index\n",
                      "markdown": "`# the License.\n#\n\n# Retrieve git ref and commit hash\ninclude(GetVersionFromGit)\n\n# Get Falco version variable according to git index\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/CompilerFlags.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/rules.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2024 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2024 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2024 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/njson.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/falcoctl.cmake"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 20,
                  "endLine": 32,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\t\tset(FALCOCTL_HASH \"32d1be4ab2335d9c3fc8ae8900341bcc26d3166094fc553ddb7bb783aa6c7b68\")\n\telse() # aarch64\n\t\tset(FALCOCTL_SYSTEM_PROC_GO \"arm64\")\n\t\tset(FALCOCTL_HASH \"9186fd948c1230c338a7fa36d6569ce85d3c4aa8153b30e8d86d2e887eb76756\")\n\tendif()\n\n\tExternalProject_Add(\n",
                    "rendered": {
                      "text": "\t\tset(FALCOCTL_HASH \"32d1be4ab2335d9c3fc8ae8900341bcc26d3166094fc553ddb7bb783aa6c7b68\")\n\telse() # aarch64\n\t\tset(FALCOCTL_SYSTEM_PROC_GO \"arm64\")\n\t\tset(FALCOCTL_HASH \"9186fd948c1230c338a7fa36d6569ce85d3c4aa8153b30e8d86d2e887eb76756\")\n\tendif()\n\n\tExternalProject_Add(\n",
                      "markdown": "`\t\tset(FALCOCTL_HASH \"32d1be4ab2335d9c3fc8ae8900341bcc26d3166094fc553ddb7bb783aa6c7b68\")\n\telse() # aarch64\n\t\tset(FALCOCTL_SYSTEM_PROC_GO \"arm64\")\n\t\tset(FALCOCTL_HASH \"9186fd948c1230c338a7fa36d6569ce85d3c4aa8153b30e8d86d2e887eb76756\")\n\tendif()\n\n\tExternalProject_Add(\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/falcoctl.cmake"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 20,
                  "endLine": 29,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\n\tif(${CMAKE_HOST_SYSTEM_PROCESSOR} STREQUAL \"x86_64\")\n\t\tset(FALCOCTL_SYSTEM_PROC_GO \"amd64\")\n\t\tset(FALCOCTL_HASH \"32d1be4ab2335d9c3fc8ae8900341bcc26d3166094fc553ddb7bb783aa6c7b68\")\n\telse() # aarch64\n\t\tset(FALCOCTL_SYSTEM_PROC_GO \"arm64\")\n\t\tset(FALCOCTL_HASH \"9186fd948c1230c338a7fa36d6569ce85d3c4aa8153b30e8d86d2e887eb76756\")\n",
                    "rendered": {
                      "text": "\n\tif(${CMAKE_HOST_SYSTEM_PROCESSOR} STREQUAL \"x86_64\")\n\t\tset(FALCOCTL_SYSTEM_PROC_GO \"amd64\")\n\t\tset(FALCOCTL_HASH \"32d1be4ab2335d9c3fc8ae8900341bcc26d3166094fc553ddb7bb783aa6c7b68\")\n\telse() # aarch64\n\t\tset(FALCOCTL_SYSTEM_PROC_GO \"arm64\")\n\t\tset(FALCOCTL_HASH \"9186fd948c1230c338a7fa36d6569ce85d3c4aa8153b30e8d86d2e887eb76756\")\n",
                      "markdown": "`\n\tif(${CMAKE_HOST_SYSTEM_PROCESSOR} STREQUAL \"x86_64\")\n\t\tset(FALCOCTL_SYSTEM_PROC_GO \"amd64\")\n\t\tset(FALCOCTL_HASH \"32d1be4ab2335d9c3fc8ae8900341bcc26d3166094fc553ddb7bb783aa6c7b68\")\n\telse() # aarch64\n\t\tset(FALCOCTL_SYSTEM_PROC_GO \"arm64\")\n\t\tset(FALCOCTL_HASH \"9186fd948c1230c338a7fa36d6569ce85d3c4aa8153b30e8d86d2e887eb76756\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/falcoctl.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/copy_files_to_build_dir.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/cxxopts.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/falcosecurity-libs.cmake"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 33,
                  "endLine": 45,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\t# version (or branch, or commit) just pass the variable - ie., `cmake\n\t# -DFALCOSECURITY_LIBS_VERSION=dev ..`\n\tif(NOT FALCOSECURITY_LIBS_VERSION)\n\t\tset(FALCOSECURITY_LIBS_VERSION \"aeb87935dcdd6b3bffb50302269353f2468f612c\")\n\t\tset(FALCOSECURITY_LIBS_CHECKSUM\n\t\t\t\"SHA256=fc2f18ed2f9e4bdcb93f32eee326a813a3614af50b82d30a7ccf96ac2a7cfbf0\"\n\t\t)\n",
                    "rendered": {
                      "text": "\t# version (or branch, or commit) just pass the variable - ie., `cmake\n\t# -DFALCOSECURITY_LIBS_VERSION=dev ..`\n\tif(NOT FALCOSECURITY_LIBS_VERSION)\n\t\tset(FALCOSECURITY_LIBS_VERSION \"aeb87935dcdd6b3bffb50302269353f2468f612c\")\n\t\tset(FALCOSECURITY_LIBS_CHECKSUM\n\t\t\t\"SHA256=fc2f18ed2f9e4bdcb93f32eee326a813a3614af50b82d30a7ccf96ac2a7cfbf0\"\n\t\t)\n",
                      "markdown": "`\t# version (or branch, or commit) just pass the variable - ie., `cmake\n\t# -DFALCOSECURITY_LIBS_VERSION=dev ..`\n\tif(NOT FALCOSECURITY_LIBS_VERSION)\n\t\tset(FALCOSECURITY_LIBS_VERSION \"aeb87935dcdd6b3bffb50302269353f2468f612c\")\n\t\tset(FALCOSECURITY_LIBS_CHECKSUM\n\t\t\t\"SHA256=fc2f18ed2f9e4bdcb93f32eee326a813a3614af50b82d30a7ccf96ac2a7cfbf0\"\n\t\t)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/falcosecurity-libs.cmake"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                    "rendered": {
                      "text": "# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n",
                      "markdown": "`# Copyright (C) 2023 The Falco Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n# in compliance with the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under the License\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/cmake/modules/falcosecurity-libs.cmake"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 39,
                  "endLine": 40,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\tset(FALCOSECURITY_LIBS_REPO \"falcosecurity/libs\")\n\tendif()\n\n\t# FALCOSECURITY_LIBS_VERSION accepts a git reference (branch name, commit hash, or tag) to the\n\t# falcosecurity/libs repository. In case you want to test against another falcosecurity/libs\n\t# version (or branch, or commit) just pass the variable - ie., `cmake\n\t# -DFALCOSECURITY_LIBS_VERSION=dev ..`\n",
                    "rendered": {
                      "text": "\t\tset(FALCOSECURITY_LIBS_REPO \"falcosecurity/libs\")\n\tendif()\n\n\t# FALCOSECURITY_LIBS_VERSION accepts a git reference (branch name, commit hash, or tag) to the\n\t# falcosecurity/libs repository. In case you want to test against another falcosecurity/libs\n\t# version (or branch, or commit) just pass the variable - ie., `cmake\n\t# -DFALCOSECURITY_LIBS_VERSION=dev ..`\n",
                      "markdown": "`\t\tset(FALCOSECURITY_LIBS_REPO \"falcosecurity/libs\")\n\tendif()\n\n\t# FALCOSECURITY_LIBS_VERSION accepts a git reference (branch name, commit hash, or tag) to the\n\t# falcosecurity/libs repository. In case you want to test against another falcosecurity/libs\n\t# version (or branch, or commit) just pass the variable - ie., `cmake\n\t# -DFALCOSECURITY_LIBS_VERSION=dev ..`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/master.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 22,
                  "endLine": 1,
                  "endColumn": 30,
                  "snippet": {
                    "text": "name: Dev Packages and Docker images\non:\n  push:\n    branches: [master]\n",
                    "rendered": {
                      "text": "name: Dev Packages and Docker images\non:\n  push:\n    branches: [master]\n",
                      "markdown": "`name: Dev Packages and Docker images\non:\n  push:\n    branches: [master]\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 10,
                  "endLine": 45,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n          password: ${{ secrets.DOCKERHUB_SECRET }}\n      \n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1\n",
                    "rendered": {
                      "text": "        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n          password: ${{ secrets.DOCKERHUB_SECRET }}\n      \n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1\n",
                      "markdown": "`        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n          password: ${{ secrets.DOCKERHUB_SECRET }}\n      \n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 20,
                  "endLine": 10,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        required: true\n        type: string\n      is_latest:\n        description: Update the latest tag with the new image\n        required: false\n        type: boolean\n        default: false\n",
                    "rendered": {
                      "text": "        required: true\n        type: string\n      is_latest:\n        description: Update the latest tag with the new image\n        required: false\n        type: boolean\n        default: false\n",
                      "markdown": "`        required: true\n        type: string\n      is_latest:\n        description: Update the latest tag with the new image\n        required: false\n        type: boolean\n        default: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 27,
                  "endLine": 136,
                  "endColumn": 35,
                  "snippet": {
                    "text": "          crane copy docker.io/falcosecurity/falco-driver-loader-legacy:${{ inputs.tag }} public.ecr.aws/falcosecurity/falco-driver-loader-legacy:${{ inputs.tag }}\n          crane copy public.ecr.aws/falcosecurity/falco-no-driver:${{ inputs.tag }} public.ecr.aws/falcosecurity/falco:${{ inputs.tag }}-slim\n\n      - name: Tag latest on Docker Hub and ECR\n        if: inputs.is_latest\n        run: |\n          crane tag docker.io/falcosecurity/falco-no-driver:${{ inputs.tag }} latest\n",
                    "rendered": {
                      "text": "          crane copy docker.io/falcosecurity/falco-driver-loader-legacy:${{ inputs.tag }} public.ecr.aws/falcosecurity/falco-driver-loader-legacy:${{ inputs.tag }}\n          crane copy public.ecr.aws/falcosecurity/falco-no-driver:${{ inputs.tag }} public.ecr.aws/falcosecurity/falco:${{ inputs.tag }}-slim\n\n      - name: Tag latest on Docker Hub and ECR\n        if: inputs.is_latest\n        run: |\n          crane tag docker.io/falcosecurity/falco-no-driver:${{ inputs.tag }} latest\n",
                      "markdown": "`          crane copy docker.io/falcosecurity/falco-driver-loader-legacy:${{ inputs.tag }} public.ecr.aws/falcosecurity/falco-driver-loader-legacy:${{ inputs.tag }}\n          crane copy public.ecr.aws/falcosecurity/falco-no-driver:${{ inputs.tag }} public.ecr.aws/falcosecurity/falco:${{ inputs.tag }}-slim\n\n      - name: Tag latest on Docker Hub and ECR\n        if: inputs.is_latest\n        run: |\n          crane tag docker.io/falcosecurity/falco-no-driver:${{ inputs.tag }} latest\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 59,
                  "endLine": 110,
                  "endColumn": 67,
                  "snippet": {
                    "text": "          images: docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }},docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          push: true\n\n      - name: Create falco-driver-loader-legacy manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco-driver-loader-legacy:${{ inputs.tag }}\n",
                    "rendered": {
                      "text": "          images: docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }},docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          push: true\n\n      - name: Create falco-driver-loader-legacy manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco-driver-loader-legacy:${{ inputs.tag }}\n",
                      "markdown": "`          images: docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }},docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          push: true\n\n      - name: Create falco-driver-loader-legacy manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco-driver-loader-legacy:${{ inputs.tag }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 52,
                  "endLine": 103,
                  "endColumn": 60,
                  "snippet": {
                    "text": "          images: docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }},docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          push: true\n          \n      - name: Create falco-driver-loader manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco-driver-loader:${{ inputs.tag }}\n",
                    "rendered": {
                      "text": "          images: docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }},docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          push: true\n          \n      - name: Create falco-driver-loader manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco-driver-loader:${{ inputs.tag }}\n",
                      "markdown": "`          images: docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }},docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          push: true\n          \n      - name: Create falco-driver-loader manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco-driver-loader:${{ inputs.tag }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 38,
                  "endLine": 96,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        run: |\n          crane copy docker.io/falcosecurity/falco-no-driver:${{ inputs.tag }} docker.io/falcosecurity/falco:${{ inputs.tag }}-slim\n\n      - name: Create falco manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco:${{ inputs.tag }}\n",
                    "rendered": {
                      "text": "        run: |\n          crane copy docker.io/falcosecurity/falco-no-driver:${{ inputs.tag }} docker.io/falcosecurity/falco:${{ inputs.tag }}-slim\n\n      - name: Create falco manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco:${{ inputs.tag }}\n",
                      "markdown": "`        run: |\n          crane copy docker.io/falcosecurity/falco-no-driver:${{ inputs.tag }} docker.io/falcosecurity/falco:${{ inputs.tag }}-slim\n\n      - name: Create falco manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco:${{ inputs.tag }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 34,
                  "endLine": 92,
                  "endColumn": 42,
                  "snippet": {
                    "text": "          images: docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }},docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          push: true\n          \n      - name: Tag slim manifest on Docker Hub\n        run: |\n          crane copy docker.io/falcosecurity/falco-no-driver:${{ inputs.tag }} docker.io/falcosecurity/falco:${{ inputs.tag }}-slim\n\n",
                    "rendered": {
                      "text": "          images: docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }},docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          push: true\n          \n      - name: Tag slim manifest on Docker Hub\n        run: |\n          crane copy docker.io/falcosecurity/falco-no-driver:${{ inputs.tag }} docker.io/falcosecurity/falco:${{ inputs.tag }}-slim\n\n",
                      "markdown": "`          images: docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }},docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          push: true\n          \n      - name: Tag slim manifest on Docker Hub\n        run: |\n          crane copy docker.io/falcosecurity/falco-no-driver:${{ inputs.tag }} docker.io/falcosecurity/falco:${{ inputs.tag }}-slim\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 43,
                  "endLine": 85,
                  "endColumn": 51,
                  "snippet": {
                    "text": "          images: docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }},docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          push: true\n\n      - name: Create distroless manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco-distroless:${{ inputs.tag }}\n",
                    "rendered": {
                      "text": "          images: docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }},docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          push: true\n\n      - name: Create distroless manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco-distroless:${{ inputs.tag }}\n",
                      "markdown": "`          images: docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }},docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          push: true\n\n      - name: Create distroless manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco-distroless:${{ inputs.tag }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 42,
                  "endLine": 78,
                  "endColumn": 50,
                  "snippet": {
                    "text": "          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:x86_64-${{ inputs.tag }}\n\n      - name: Create no-driver manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco-no-driver:${{ inputs.tag }}\n",
                    "rendered": {
                      "text": "          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:x86_64-${{ inputs.tag }}\n\n      - name: Create no-driver manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco-no-driver:${{ inputs.tag }}\n",
                      "markdown": "`          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:x86_64-${{ inputs.tag }}\n\n      - name: Create no-driver manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n        with:\n          inputs: docker.io/falcosecurity/falco-no-driver:${{ inputs.tag }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 9,
                  "endLine": 76,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:x86_64-${{ inputs.tag }}\n\n      - name: Create no-driver manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n",
                    "rendered": {
                      "text": "          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:x86_64-${{ inputs.tag }}\n\n      - name: Create no-driver manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n",
                      "markdown": "`          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:x86_64-${{ inputs.tag }}\n\n      - name: Create no-driver manifest on Docker Hub\n        uses: Noelware/docker-manifest-action@8e337e3cb9656abfcf20146b99706fd88716e942 # v0.4.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 9,
                  "endLine": 75,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:x86_64-${{ inputs.tag }}\n\n      - name: Create no-driver manifest on Docker Hub\n",
                    "rendered": {
                      "text": "          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:x86_64-${{ inputs.tag }}\n\n      - name: Create no-driver manifest on Docker Hub\n",
                      "markdown": "`          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:x86_64-${{ inputs.tag }}\n\n      - name: Create no-driver manifest on Docker Hub\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 9,
                  "endLine": 74,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:x86_64-${{ inputs.tag }}\n\n",
                    "rendered": {
                      "text": "          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:x86_64-${{ inputs.tag }}\n\n",
                      "markdown": "`          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:x86_64-${{ inputs.tag }}\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 9,
                  "endLine": 73,
                  "endColumn": 17,
                  "snippet": {
                    "text": "rity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/fal",
                    "rendered": {
                      "text": "rity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/fal",
                      "markdown": "`rity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader-legacy:aarch64-${{ inputs.tag }}\n          docker push docker.io/fal`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 9,
                  "endLine": 72,
                  "endColumn": 17,
                  "snippet": {
                    "text": "-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-drive",
                    "rendered": {
                      "text": "-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-drive",
                      "markdown": "`-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-drive`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 9,
                  "endLine": 71,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n",
                    "rendered": {
                      "text": "          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n",
                      "markdown": "`          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:x86_64-${{ inputs.tag }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 9,
                  "endLine": 70,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n",
                    "rendered": {
                      "text": "          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n",
                      "markdown": "`          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-driver-loader:aarch64-${{ inputs.tag }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 9,
                  "endLine": 69,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n",
                    "rendered": {
                      "text": "        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n",
                      "markdown": "`        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:x86_64-${{ inputs.tag }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 9,
                  "endLine": 68,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      - name: Push arch-specific images to Docker Hub\n        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n",
                    "rendered": {
                      "text": "      - name: Push arch-specific images to Docker Hub\n        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n",
                      "markdown": "`      - name: Push arch-specific images to Docker Hub\n        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco:aarch64-${{ inputs.tag }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 9,
                  "endLine": 67,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      # We're pushing the arch-specific manifests to Docker Hub so that we'll be able to easily create the index/multiarch later\n      - name: Push arch-specific images to Docker Hub\n        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n",
                    "rendered": {
                      "text": "      # We're pushing the arch-specific manifests to Docker Hub so that we'll be able to easily create the index/multiarch later\n      - name: Push arch-specific images to Docker Hub\n        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n",
                      "markdown": "`      # We're pushing the arch-specific manifests to Docker Hub so that we'll be able to easily create the index/multiarch later\n      - name: Push arch-specific images to Docker Hub\n        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-distroless:x86_64-${{ inputs.tag }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 42,
                  "endLine": 65,
                  "endColumn": 50,
                  "snippet": {
                    "text": "          version: v0.15.1\n\n      # We're pushing the arch-specific manifests to Docker Hub so that we'll be able to easily create the index/multiarch later\n      - name: Push arch-specific images to Docker Hub\n        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n",
                    "rendered": {
                      "text": "          version: v0.15.1\n\n      # We're pushing the arch-specific manifests to Docker Hub so that we'll be able to easily create the index/multiarch later\n      - name: Push arch-specific images to Docker Hub\n        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n",
                      "markdown": "`          version: v0.15.1\n\n      # We're pushing the arch-specific manifests to Docker Hub so that we'll be able to easily create the index/multiarch later\n      - name: Push arch-specific images to Docker Hub\n        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n          docker push docker.io/falcosecurity/falco-no-driver:x86_64-${{ inputs.tag }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 52,
                  "endLine": 64,
                  "endColumn": 60,
                  "snippet": {
                    "text": "        with:\n          version: v0.15.1\n\n      # We're pushing the arch-specific manifests to Docker Hub so that we'll be able to easily create the index/multiarch later\n      - name: Push arch-specific images to Docker Hub\n        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n",
                    "rendered": {
                      "text": "        with:\n          version: v0.15.1\n\n      # We're pushing the arch-specific manifests to Docker Hub so that we'll be able to easily create the index/multiarch later\n      - name: Push arch-specific images to Docker Hub\n        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n",
                      "markdown": "`        with:\n          version: v0.15.1\n\n      # We're pushing the arch-specific manifests to Docker Hub so that we'll be able to easily create the index/multiarch later\n      - name: Push arch-specific images to Docker Hub\n        run: |\n          docker push docker.io/falcosecurity/falco-no-driver:aarch64-${{ inputs.tag }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 22,
                  "endLine": 41,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        run: |\n          for img in /tmp/falco-images/falco-*.tar; do docker load --input $img; done\n    \n      - name: Login to Docker Hub\n        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n",
                    "rendered": {
                      "text": "        run: |\n          for img in /tmp/falco-images/falco-*.tar; do docker load --input $img; done\n    \n      - name: Login to Docker Hub\n        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n",
                      "markdown": "`        run: |\n          for img in /tmp/falco-images/falco-*.tar; do docker load --input $img; done\n    \n      - name: Login to Docker Hub\n        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 54,
                  "endLine": 39,
                  "endColumn": 62,
                  "snippet": {
                    "text": "      \n      - name: Load all images\n        run: |\n          for img in /tmp/falco-images/falco-*.tar; do docker load --input $img; done\n    \n      - name: Login to Docker Hub\n        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0\n",
                    "rendered": {
                      "text": "      \n      - name: Load all images\n        run: |\n          for img in /tmp/falco-images/falco-*.tar; do docker load --input $img; done\n    \n      - name: Login to Docker Hub\n        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0\n",
                      "markdown": "`      \n      - name: Load all images\n        run: |\n          for img in /tmp/falco-images/falco-*.tar; do docker load --input $img; done\n    \n      - name: Login to Docker Hub\n        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_publish_docker.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 20,
                  "endLine": 28,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  publish-docker:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0\n    \n      - name: Download images tarballs\n",
                    "rendered": {
                      "text": "  publish-docker:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0\n    \n      - name: Download images tarballs\n",
                      "markdown": "`  publish-docker:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0\n    \n      - name: Download images tarballs\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_docker.yaml"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 11,
                  "endLine": 91,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco-driver-loader-legacy:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-driver-loader-legacy-${{ inputs.arch }}.tar\n\n      - name: Upload images tarballs\n        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n",
                    "rendered": {
                      "text": "            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco-driver-loader-legacy:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-driver-loader-legacy-${{ inputs.arch }}.tar\n\n      - name: Upload images tarballs\n        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n",
                      "markdown": "`            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco-driver-loader-legacy:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-driver-loader-legacy-${{ inputs.arch }}.tar\n\n      - name: Upload images tarballs\n        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_docker.yaml"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 9,
                  "endLine": 86,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      - name: Build falco-driver-loader-legacy image\n        run: |\n          cd ${{ github.workspace }}/docker/driver-loader-legacy/\n          docker build -t docker.io/falcosecurity/falco-driver-loader-legacy:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg VERSION_BUCKET=deb${{ inputs.bucket_suffix }} \\\n            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n",
                    "rendered": {
                      "text": "      - name: Build falco-driver-loader-legacy image\n        run: |\n          cd ${{ github.workspace }}/docker/driver-loader-legacy/\n          docker build -t docker.io/falcosecurity/falco-driver-loader-legacy:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg VERSION_BUCKET=deb${{ inputs.bucket_suffix }} \\\n            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n",
                      "markdown": "`      - name: Build falco-driver-loader-legacy image\n        run: |\n          cd ${{ github.workspace }}/docker/driver-loader-legacy/\n          docker build -t docker.io/falcosecurity/falco-driver-loader-legacy:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg VERSION_BUCKET=deb${{ inputs.bucket_suffix }} \\\n            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_docker.yaml"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 11,
                  "endLine": 81,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            --build-arg FALCO_IMAGE_TAG=${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco-driver-loader:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-driver-loader-${{ inputs.arch }}.tar\n\n      - name: Build falco-driver-loader-legacy image\n        run: |\n",
                    "rendered": {
                      "text": "            --build-arg FALCO_IMAGE_TAG=${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco-driver-loader:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-driver-loader-${{ inputs.arch }}.tar\n\n      - name: Build falco-driver-loader-legacy image\n        run: |\n",
                      "markdown": "`            --build-arg FALCO_IMAGE_TAG=${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco-driver-loader:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-driver-loader-${{ inputs.arch }}.tar\n\n      - name: Build falco-driver-loader-legacy image\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_docker.yaml"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 9,
                  "endLine": 77,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      - name: Build falco-driver-loader image\n        run: |\n          cd ${{ github.workspace }}/docker/driver-loader/\n          docker build -t docker.io/falcosecurity/falco-driver-loader:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg FALCO_IMAGE_TAG=${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n",
                    "rendered": {
                      "text": "      - name: Build falco-driver-loader image\n        run: |\n          cd ${{ github.workspace }}/docker/driver-loader/\n          docker build -t docker.io/falcosecurity/falco-driver-loader:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg FALCO_IMAGE_TAG=${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n",
                      "markdown": "`      - name: Build falco-driver-loader image\n        run: |\n          cd ${{ github.workspace }}/docker/driver-loader/\n          docker build -t docker.io/falcosecurity/falco-driver-loader:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg FALCO_IMAGE_TAG=${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_docker.yaml"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 11,
                  "endLine": 72,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-${{ inputs.arch }}.tar\n\n      - name: Build falco-driver-loader image\n        run: |\n",
                    "rendered": {
                      "text": "            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-${{ inputs.arch }}.tar\n\n      - name: Build falco-driver-loader image\n        run: |\n",
                      "markdown": "`            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-${{ inputs.arch }}.tar\n\n      - name: Build falco-driver-loader image\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_docker.yaml"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 9,
                  "endLine": 67,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      - name: Build falco image\n        run: |\n          cd ${{ github.workspace }}/docker/falco/\n          docker build -t docker.io/falcosecurity/falco:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg VERSION_BUCKET=deb${{ inputs.bucket_suffix }} \\\n            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n",
                    "rendered": {
                      "text": "      - name: Build falco image\n        run: |\n          cd ${{ github.workspace }}/docker/falco/\n          docker build -t docker.io/falcosecurity/falco:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg VERSION_BUCKET=deb${{ inputs.bucket_suffix }} \\\n            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n",
                      "markdown": "`      - name: Build falco image\n        run: |\n          cd ${{ github.workspace }}/docker/falco/\n          docker build -t docker.io/falcosecurity/falco:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg VERSION_BUCKET=deb${{ inputs.bucket_suffix }} \\\n            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_docker.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 11,
                  "endLine": 62,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco-distroless:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-distroless-${{ inputs.arch }}.tar\n            \n      - name: Build falco image\n        run: |\n",
                    "rendered": {
                      "text": "            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco-distroless:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-distroless-${{ inputs.arch }}.tar\n            \n      - name: Build falco image\n        run: |\n",
                      "markdown": "`            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco-distroless:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-distroless-${{ inputs.arch }}.tar\n            \n      - name: Build falco image\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_docker.yaml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 9,
                  "endLine": 57,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      - name: Build distroless image\n        run: |\n          cd ${{ github.workspace }}/docker/no-driver/\n          docker build -f Dockerfile.distroless -t docker.io/falcosecurity/falco-distroless:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg VERSION_BUCKET=bin${{ inputs.bucket_suffix }} \\\n            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n",
                    "rendered": {
                      "text": "      - name: Build distroless image\n        run: |\n          cd ${{ github.workspace }}/docker/no-driver/\n          docker build -f Dockerfile.distroless -t docker.io/falcosecurity/falco-distroless:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg VERSION_BUCKET=bin${{ inputs.bucket_suffix }} \\\n            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n",
                      "markdown": "`      - name: Build distroless image\n        run: |\n          cd ${{ github.workspace }}/docker/no-driver/\n          docker build -f Dockerfile.distroless -t docker.io/falcosecurity/falco-distroless:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg VERSION_BUCKET=bin${{ inputs.bucket_suffix }} \\\n            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_docker.yaml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 11,
                  "endLine": 52,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco-no-driver:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-no-driver-${{ inputs.arch }}.tar\n\n      - name: Build distroless image\n        run: |\n",
                    "rendered": {
                      "text": "            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco-no-driver:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-no-driver-${{ inputs.arch }}.tar\n\n      - name: Build distroless image\n        run: |\n",
                      "markdown": "`            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n            .\n            docker save docker.io/falcosecurity/falco-no-driver:${{ inputs.arch }}-${{ inputs.tag }} --output /tmp/falco-no-driver-${{ inputs.arch }}.tar\n\n      - name: Build distroless image\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_docker.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 9,
                  "endLine": 47,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      - name: Build no-driver image\n        run: |\n          cd ${{ github.workspace }}/docker/no-driver/\n          docker build -t docker.io/falcosecurity/falco-no-driver:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg VERSION_BUCKET=bin${{ inputs.bucket_suffix }} \\\n            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n",
                    "rendered": {
                      "text": "      - name: Build no-driver image\n        run: |\n          cd ${{ github.workspace }}/docker/no-driver/\n          docker build -t docker.io/falcosecurity/falco-no-driver:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg VERSION_BUCKET=bin${{ inputs.bucket_suffix }} \\\n            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n",
                      "markdown": "`      - name: Build no-driver image\n        run: |\n          cd ${{ github.workspace }}/docker/no-driver/\n          docker build -t docker.io/falcosecurity/falco-no-driver:${{ inputs.arch }}-${{ inputs.tag }} \\\n            --build-arg VERSION_BUCKET=bin${{ inputs.bucket_suffix }} \\\n            --build-arg FALCO_VERSION=${{ inputs.version }} \\\n            --build-arg TARGETARCH=${TARGETARCH} \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_docker.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 20,
                  "endLine": 41,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n        \n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0\n          \n      - name: Build no-driver image\n",
                    "rendered": {
                      "text": "      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n        \n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0\n          \n      - name: Build no-driver image\n",
                      "markdown": "`      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n        \n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0\n          \n      - name: Build no-driver image\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_docker.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 24,
                  "endLine": 23,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        required: true\n        type: string\n\n# Here we just build all docker images as tarballs, \n# then we upload all the tarballs to be later downloaded by reusable_publish_docker workflow.\n# In this way, we don't need to publish any arch specific image, \n# and this \"build\" workflow is actually only building images.\n",
                    "rendered": {
                      "text": "        required: true\n        type: string\n\n# Here we just build all docker images as tarballs, \n# then we upload all the tarballs to be later downloaded by reusable_publish_docker workflow.\n# In this way, we don't need to publish any arch specific image, \n# and this \"build\" workflow is actually only building images.\n",
                      "markdown": "`        required: true\n        type: string\n\n# Here we just build all docker images as tarballs, \n# then we upload all the tarballs to be later downloaded by reusable_publish_docker workflow.\n# In this way, we don't need to publish any arch specific image, \n# and this \"build\" workflow is actually only building images.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/format.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n      - name: Install deps ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n",
                    "rendered": {
                      "text": "\n      - name: Install deps ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n",
                      "markdown": "`\n      - name: Install deps ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/format.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 24,
                  "endLine": 33,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        if: failure()\n        run: git diff > format_diff.patch\n\n      - name: Upload the git diff artifact 📦\n        if: failure()\n        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n        with:\n",
                    "rendered": {
                      "text": "        if: failure()\n        run: git diff > format_diff.patch\n\n      - name: Upload the git diff artifact 📦\n        if: failure()\n        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n        with:\n",
                      "markdown": "`        if: failure()\n        run: git diff > format_diff.patch\n\n      - name: Upload the git diff artifact 📦\n        if: failure()\n        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/format.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 12,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n      - name: Generate the git-diff 🚒\n        if: failure()\n        run: git diff > format_diff.patch\n\n      - name: Upload the git diff artifact 📦\n        if: failure()\n",
                    "rendered": {
                      "text": "\n      - name: Generate the git-diff 🚒\n        if: failure()\n        run: git diff > format_diff.patch\n\n      - name: Upload the git diff artifact 📦\n        if: failure()\n",
                      "markdown": "`\n      - name: Generate the git-diff 🚒\n        if: failure()\n        run: git diff > format_diff.patch\n\n      - name: Upload the git diff artifact 📦\n        if: failure()\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/format.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 9,
                  "endLine": 23,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n      - name: Run pre-commit ©️\n        run: |\n",
                    "rendered": {
                      "text": "        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n      - name: Run pre-commit ©️\n        run: |\n",
                      "markdown": "`        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n      - name: Run pre-commit ©️\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/format.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 69,
                  "endLine": 22,
                  "endColumn": 74,
                  "snippet": {
                    "text": "      - name: Install deps ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n      - name: Run pre-commit ©️\n",
                    "rendered": {
                      "text": "      - name: Install deps ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n      - name: Run pre-commit ©️\n",
                      "markdown": "`      - name: Install deps ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n      - name: Run pre-commit ©️\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/format.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 14,
                  "endLine": 22,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      - name: Install deps ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n      - name: Run pre-commit ©️\n",
                    "rendered": {
                      "text": "      - name: Install deps ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n      - name: Run pre-commit ©️\n",
                      "markdown": "`      - name: Install deps ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n      - name: Run pre-commit ©️\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/format.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 14,
                  "endLine": 21,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n      - name: Install deps ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n",
                    "rendered": {
                      "text": "\n      - name: Install deps ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n",
                      "markdown": "`\n      - name: Install deps ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends ca-certificates pip git\n          pip install pre-commit\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 18,
                  "endLine": 173,
                  "snippet": {
                    "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1\n",
                    "rendered": {
                      "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1\n",
                      "markdown": "`      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 40,
                  "endLine": 130,
                  "endColumn": 46,
                  "snippet": {
                    "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          apk add g++ gcc cmake make git bash perl linux-headers autoconf automake m4 libtool elfutils-dev libelf-static patch binutils bpftool clang\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                    "rendered": {
                      "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          apk add g++ gcc cmake make git bash perl linux-headers autoconf automake m4 libtool elfutils-dev libelf-static patch binutils bpftool clang\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                      "markdown": "`      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          apk add g++ gcc cmake make git bash perl linux-headers autoconf automake m4 libtool elfutils-dev libelf-static patch binutils bpftool clang\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 18,
                  "endLine": 62,
                  "endColumn": 26,
                  "snippet": {
                    "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                    "rendered": {
                      "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                      "markdown": "`      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 9,
                  "endLine": 205,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      - name: Run unit Tests\n        run: |\n          cd build\n          node ./unit_tests/falco_unit_tests.js\n\n      - name: Build packages\n        run: |\n",
                    "rendered": {
                      "text": "      - name: Run unit Tests\n        run: |\n          cd build\n          node ./unit_tests/falco_unit_tests.js\n\n      - name: Build packages\n        run: |\n",
                      "markdown": "`      - name: Run unit Tests\n        run: |\n          cd build\n          node ./unit_tests/falco_unit_tests.js\n\n      - name: Build packages\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 20,
                  "endLine": 175,
                  "endColumn": 26,
                  "snippet": {
                    "text": "          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1\n        with:\n          node-version: 14\n",
                    "rendered": {
                      "text": "          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1\n        with:\n          node-version: 14\n",
                      "markdown": "`          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1\n        with:\n          node-version: 14\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 79,
                  "endLine": 173,
                  "endColumn": 84,
                  "snippet": {
                    "text": "      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1\n",
                    "rendered": {
                      "text": "      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1\n",
                      "markdown": "`      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 45,
                  "endLine": 173,
                  "endColumn": 50,
                  "snippet": {
                    "text": "      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1\n",
                    "rendered": {
                      "text": "      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1\n",
                      "markdown": "`      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 14,
                  "endLine": 172,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n",
                    "rendered": {
                      "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n",
                      "markdown": "`      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          sudo apt update\n          sudo DEBIAN_FRONTEND=noninteractive apt install cmake build-essential git emscripten -y\n\n      - name: Select node version\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 9,
                  "endLine": 156,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      - name: Rename static package\n        run: |\n          cd build\n          mv falco-${{ inputs.version }}-x86_64.tar.gz falco-${{ inputs.version }}-static-x86_64.tar.gz\n\n      - name: Upload Falco static package\n        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n",
                    "rendered": {
                      "text": "      - name: Rename static package\n        run: |\n          cd build\n          mv falco-${{ inputs.version }}-x86_64.tar.gz falco-${{ inputs.version }}-static-x86_64.tar.gz\n\n      - name: Upload Falco static package\n        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n",
                      "markdown": "`      - name: Rename static package\n        run: |\n          cd build\n          mv falco-${{ inputs.version }}-x86_64.tar.gz falco-${{ inputs.version }}-static-x86_64.tar.gz\n\n      - name: Upload Falco static package\n        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 45,
                  "endLine": 130,
                  "endColumn": 51,
                  "snippet": {
                    "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          apk add g++ gcc cmake make git bash perl linux-headers autoconf automake m4 libtool elfutils-dev libelf-static patch binutils bpftool clang\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                    "rendered": {
                      "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          apk add g++ gcc cmake make git bash perl linux-headers autoconf automake m4 libtool elfutils-dev libelf-static patch binutils bpftool clang\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                      "markdown": "`      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          apk add g++ gcc cmake make git bash perl linux-headers autoconf automake m4 libtool elfutils-dev libelf-static patch binutils bpftool clang\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 36,
                  "endLine": 130,
                  "endColumn": 41,
                  "snippet": {
                    "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          apk add g++ gcc cmake make git bash perl linux-headers autoconf automake m4 libtool elfutils-dev libelf-static patch binutils bpftool clang\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                    "rendered": {
                      "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          apk add g++ gcc cmake make git bash perl linux-headers autoconf automake m4 libtool elfutils-dev libelf-static patch binutils bpftool clang\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                      "markdown": "`      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          apk add g++ gcc cmake make git bash perl linux-headers autoconf automake m4 libtool elfutils-dev libelf-static patch binutils bpftool clang\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 26,
                  "endLine": 111,
                  "endColumn": 31,
                  "snippet": {
                    "text": "          path: |\n            ${{ github.workspace }}/build/falco-*.deb\n\n      - name: Upload Falco rpm package\n        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n        with:\n          name: falco-${{ inputs.version }}-${{ inputs.arch }}${{ inputs.sanitizers == true && '-sanitizers' || '' }}.rpm\n",
                    "rendered": {
                      "text": "          path: |\n            ${{ github.workspace }}/build/falco-*.deb\n\n      - name: Upload Falco rpm package\n        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n        with:\n          name: falco-${{ inputs.version }}-${{ inputs.arch }}${{ inputs.sanitizers == true && '-sanitizers' || '' }}.rpm\n",
                      "markdown": "`          path: |\n            ${{ github.workspace }}/build/falco-*.deb\n\n      - name: Upload Falco rpm package\n        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n        with:\n          name: falco-${{ inputs.version }}-${{ inputs.arch }}${{ inputs.sanitizers == true && '-sanitizers' || '' }}.rpm\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 175,
                  "endLine": 63,
                  "snippet": {
                    "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n\n",
                    "rendered": {
                      "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n\n",
                      "markdown": "`      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 120,
                  "endLine": 62,
                  "endColumn": 125,
                  "snippet": {
                    "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                    "rendered": {
                      "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                      "markdown": "`      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 94,
                  "endLine": 62,
                  "endColumn": 100,
                  "snippet": {
                    "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                    "rendered": {
                      "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                      "markdown": "`      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 33,
                  "endLine": 62,
                  "endColumn": 38,
                  "snippet": {
                    "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                    "rendered": {
                      "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                      "markdown": "`      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 14,
                  "endLine": 62,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                    "rendered": {
                      "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                      "markdown": "`      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build deps\n        run: |\n          sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake curl wget build-essential git pkg-config autoconf automake libtool libelf-dev m4 rpm\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 99,
                  "endLine": 36,
                  "endColumn": 104,
                  "snippet": {
                    "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          dnf install -y bpftool ca-certificates cmake make automake gcc gcc-c++ kernel-devel clang git pkg-config autoconf automake libbpf-devel elfutils-libelf-devel\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                    "rendered": {
                      "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          dnf install -y bpftool ca-certificates cmake make automake gcc gcc-c++ kernel-devel clang git pkg-config autoconf automake libbpf-devel elfutils-libelf-devel\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                      "markdown": "`      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          dnf install -y bpftool ca-certificates cmake make automake gcc gcc-c++ kernel-devel clang git pkg-config autoconf automake libbpf-devel elfutils-libelf-devel\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_build_packages.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 9,
                  "endLine": 36,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          dnf install -y bpftool ca-certificates cmake make automake gcc gcc-c++ kernel-devel clang git pkg-config autoconf automake libbpf-devel elfutils-libelf-devel\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                    "rendered": {
                      "text": "      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          dnf install -y bpftool ca-certificates cmake make automake gcc gcc-c++ kernel-devel clang git pkg-config autoconf automake libbpf-devel elfutils-libelf-devel\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n",
                      "markdown": "`      # Always install deps before invoking checkout action, to properly perform a full clone.\n      - name: Install build dependencies\n        run: |\n          dnf install -y bpftool ca-certificates cmake make automake gcc gcc-c++ kernel-devel clang git pkg-config autoconf automake libbpf-devel elfutils-libelf-devel\n\n      - name: Checkout\n        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/staticanalysis.yaml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 18,
                  "endLine": 20,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n      - name: Install build dependencies ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install build-essential git cppcheck cmake -y\n\n      - name: Build and run cppcheck 🏎️\n",
                    "rendered": {
                      "text": "\n      - name: Install build dependencies ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install build-essential git cppcheck cmake -y\n\n      - name: Build and run cppcheck 🏎️\n",
                      "markdown": "`\n      - name: Install build dependencies ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install build-essential git cppcheck cmake -y\n\n      - name: Build and run cppcheck 🏎️\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/staticanalysis.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 42,
                  "endLine": 21,
                  "endColumn": 47,
                  "snippet": {
                    "text": "      - name: Install build dependencies ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install build-essential git cppcheck cmake -y\n\n      - name: Build and run cppcheck 🏎️\n        run: |\n",
                    "rendered": {
                      "text": "      - name: Install build dependencies ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install build-essential git cppcheck cmake -y\n\n      - name: Build and run cppcheck 🏎️\n        run: |\n",
                      "markdown": "`      - name: Install build dependencies ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install build-essential git cppcheck cmake -y\n\n      - name: Build and run cppcheck 🏎️\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/staticanalysis.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 14,
                  "endLine": 21,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      - name: Install build dependencies ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install build-essential git cppcheck cmake -y\n\n      - name: Build and run cppcheck 🏎️\n        run: |\n",
                    "rendered": {
                      "text": "      - name: Install build dependencies ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install build-essential git cppcheck cmake -y\n\n      - name: Build and run cppcheck 🏎️\n        run: |\n",
                      "markdown": "`      - name: Install build dependencies ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install build-essential git cppcheck cmake -y\n\n      - name: Build and run cppcheck 🏎️\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/staticanalysis.yaml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 14,
                  "endLine": 20,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n      - name: Install build dependencies ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install build-essential git cppcheck cmake -y\n\n      - name: Build and run cppcheck 🏎️\n",
                    "rendered": {
                      "text": "\n      - name: Install build dependencies ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install build-essential git cppcheck cmake -y\n\n      - name: Build and run cppcheck 🏎️\n",
                      "markdown": "`\n      - name: Install build dependencies ⛓️\n        run: |\n          sudo apt update -y\n          sudo apt install build-essential git cppcheck cmake -y\n\n      - name: Build and run cppcheck 🏎️\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/bump-libs.yaml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 41,
                  "endLine": 60,
                  "endColumn": 49,
                  "snippet": {
                    "text": "            ```release-note\n            NONE\n            ```\n          commit-message: 'update(cmake): update libs and driver to latest master.'\n          token: ${{ secrets.GITHUB_TOKEN }}\t  \n",
                    "rendered": {
                      "text": "            ```release-note\n            NONE\n            ```\n          commit-message: 'update(cmake): update libs and driver to latest master.'\n          token: ${{ secrets.GITHUB_TOKEN }}\t  \n",
                      "markdown": "`            ```release-note\n            NONE\n            ```\n          commit-message: 'update(cmake): update libs and driver to latest master.'\n          token: ${{ secrets.GITHUB_TOKEN }}\t  \n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/bump-libs.yaml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 32,
                  "endLine": 52,
                  "endColumn": 40,
                  "snippet": {
                    "text": "          signoff: true\n          base: master\n          branch: update/libs\n          title: 'update(cmake): update libs and driver to latest master'\n          body: |\n            This PR updates libs and driver to latest commit.\n            /kind release\n",
                    "rendered": {
                      "text": "          signoff: true\n          base: master\n          branch: update/libs\n          title: 'update(cmake): update libs and driver to latest master'\n          body: |\n            This PR updates libs and driver to latest commit.\n            /kind release\n",
                      "markdown": "`          signoff: true\n          base: master\n          branch: update/libs\n          title: 'update(cmake): update libs and driver to latest master'\n          body: |\n            This PR updates libs and driver to latest commit.\n            /kind release\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/bump-libs.yaml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 9,
                  "endLine": 43,
                  "endColumn": 14,
                  "snippet": {
                    "text": "' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '47s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '38s/DRIVER_VERSION \"(.+)\"/DRIVER_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/driver.cmake\n          sed -i -E '40s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/driver.cmake\n\n      - name: Create Pull Request\n        uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5\n        with:\n          path: falco\n          signoff: true\n          ba",
                    "rendered": {
                      "text": "' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '47s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '38s/DRIVER_VERSION \"(.+)\"/DRIVER_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/driver.cmake\n          sed -i -E '40s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/driver.cmake\n\n      - name: Create Pull Request\n        uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5\n        with:\n          path: falco\n          signoff: true\n          ba",
                      "markdown": "`' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '47s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '38s/DRIVER_VERSION \"(.+)\"/DRIVER_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/driver.cmake\n          sed -i -E '40s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/driver.cmake\n\n      - name: Create Pull Request\n        uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5\n        with:\n          path: falco\n          signoff: true\n          ba`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/bump-libs.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 9,
                  "endLine": 42,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          cd falco\n          sed -i -E '45s/FALCOSECURITY_LIBS_VERSION \"(.+)\"/FALCOSECURITY_LIBS_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '47s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '38s/DRIVER_VERSION \"(.+)\"/DRIVER_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/driver.cmake\n          sed -i -E '40s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/driver.cmake\n\n      - name: Create Pull Request\n",
                    "rendered": {
                      "text": "          cd falco\n          sed -i -E '45s/FALCOSECURITY_LIBS_VERSION \"(.+)\"/FALCOSECURITY_LIBS_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '47s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '38s/DRIVER_VERSION \"(.+)\"/DRIVER_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/driver.cmake\n          sed -i -E '40s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/driver.cmake\n\n      - name: Create Pull Request\n",
                      "markdown": "`          cd falco\n          sed -i -E '45s/FALCOSECURITY_LIBS_VERSION \"(.+)\"/FALCOSECURITY_LIBS_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '47s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '38s/DRIVER_VERSION \"(.+)\"/DRIVER_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/driver.cmake\n          sed -i -E '40s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/driver.cmake\n\n      - name: Create Pull Request\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/bump-libs.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 9,
                  "endLine": 41,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        run: |\n          cd falco\n          sed -i -E '45s/FALCOSECURITY_LIBS_VERSION \"(.+)\"/FALCOSECURITY_LIBS_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '47s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '38s/DRIVER_VERSION \"(.+)\"/DRIVER_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/driver.cmake\n          sed -i -E '40s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/driver.cmake\n\n",
                    "rendered": {
                      "text": "        run: |\n          cd falco\n          sed -i -E '45s/FALCOSECURITY_LIBS_VERSION \"(.+)\"/FALCOSECURITY_LIBS_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '47s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '38s/DRIVER_VERSION \"(.+)\"/DRIVER_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/driver.cmake\n          sed -i -E '40s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/driver.cmake\n\n",
                      "markdown": "`        run: |\n          cd falco\n          sed -i -E '45s/FALCOSECURITY_LIBS_VERSION \"(.+)\"/FALCOSECURITY_LIBS_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '47s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '38s/DRIVER_VERSION \"(.+)\"/DRIVER_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/driver.cmake\n          sed -i -E '40s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/driver.cmake\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/bump-libs.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9,
                  "endLine": 40,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: Bump libs version and hash\n        run: |\n          cd falco\n          sed -i -E '45s/FALCOSECURITY_LIBS_VERSION \"(.+)\"/FALCOSECURITY_LIBS_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '47s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '38s/DRIVER_VERSION \"(.+)\"/DRIVER_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/driver.cmake\n          sed -i -E '40s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/driver.cmake\n",
                    "rendered": {
                      "text": "      - name: Bump libs version and hash\n        run: |\n          cd falco\n          sed -i -E '45s/FALCOSECURITY_LIBS_VERSION \"(.+)\"/FALCOSECURITY_LIBS_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '47s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '38s/DRIVER_VERSION \"(.+)\"/DRIVER_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/driver.cmake\n          sed -i -E '40s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/driver.cmake\n",
                      "markdown": "`      - name: Bump libs version and hash\n        run: |\n          cd falco\n          sed -i -E '45s/FALCOSECURITY_LIBS_VERSION \"(.+)\"/FALCOSECURITY_LIBS_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '47s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/falcosecurity-libs.cmake\n          sed -i -E '38s/DRIVER_VERSION \"(.+)\"/DRIVER_VERSION \"${{ steps.store.outputs.COMMIT }}\"/' cmake/modules/driver.cmake\n          sed -i -E '40s/\"SHA256=(.+)\"/\"SHA256=${{ steps.store.outputs.SHASUM }}\"/' cmake/modules/driver.cmake\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/bump-libs.yaml"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 41,
                  "endLine": 30,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        run: |\n          echo \"SHASUM=$(sha256sum master.tar.gz | awk '{print $1}')\" >> \"$GITHUB_OUTPUT\"\n          gunzip -c master.tar.gz > master.tar\n          echo \"COMMIT=$(cat master.tar | git get-tar-commit-id)\" >> \"$GITHUB_OUTPUT\"\n\n      - name: Checkout\n        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n",
                    "rendered": {
                      "text": "        run: |\n          echo \"SHASUM=$(sha256sum master.tar.gz | awk '{print $1}')\" >> \"$GITHUB_OUTPUT\"\n          gunzip -c master.tar.gz > master.tar\n          echo \"COMMIT=$(cat master.tar | git get-tar-commit-id)\" >> \"$GITHUB_OUTPUT\"\n\n      - name: Checkout\n        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n",
                      "markdown": "`        run: |\n          echo \"SHASUM=$(sha256sum master.tar.gz | awk '{print $1}')\" >> \"$GITHUB_OUTPUT\"\n          gunzip -c master.tar.gz > master.tar\n          echo \"COMMIT=$(cat master.tar | git get-tar-commit-id)\" >> \"$GITHUB_OUTPUT\"\n\n      - name: Checkout\n        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/bump-libs.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 50,
                  "endLine": 28,
                  "endColumn": 55,
                  "snippet": {
                    "text": "      - name: Store libs hash and shasum\n        id: store\n        run: |\n          echo \"SHASUM=$(sha256sum master.tar.gz | awk '{print $1}')\" >> \"$GITHUB_OUTPUT\"\n          gunzip -c master.tar.gz > master.tar\n          echo \"COMMIT=$(cat master.tar | git get-tar-commit-id)\" >> \"$GITHUB_OUTPUT\"\n\n",
                    "rendered": {
                      "text": "      - name: Store libs hash and shasum\n        id: store\n        run: |\n          echo \"SHASUM=$(sha256sum master.tar.gz | awk '{print $1}')\" >> \"$GITHUB_OUTPUT\"\n          gunzip -c master.tar.gz > master.tar\n          echo \"COMMIT=$(cat master.tar | git get-tar-commit-id)\" >> \"$GITHUB_OUTPUT\"\n\n",
                      "markdown": "`      - name: Store libs hash and shasum\n        id: store\n        run: |\n          echo \"SHASUM=$(sha256sum master.tar.gz | awk '{print $1}')\" >> \"$GITHUB_OUTPUT\"\n          gunzip -c master.tar.gz > master.tar\n          echo \"COMMIT=$(cat master.tar | git get-tar-commit-id)\" >> \"$GITHUB_OUTPUT\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/bump-libs.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 9,
                  "endLine": 23,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    steps:\n      - name: Download libs master tar.gz\n        run: |\n          wget https://github.com/falcosecurity/libs/archive/refs/heads/master.tar.gz\n\n      - name: Store libs hash and shasum\n        id: store\n",
                    "rendered": {
                      "text": "    steps:\n      - name: Download libs master tar.gz\n        run: |\n          wget https://github.com/falcosecurity/libs/archive/refs/heads/master.tar.gz\n\n      - name: Store libs hash and shasum\n        id: store\n",
                      "markdown": "`    steps:\n      - name: Download libs master tar.gz\n        run: |\n          wget https://github.com/falcosecurity/libs/archive/refs/heads/master.tar.gz\n\n      - name: Store libs hash and shasum\n        id: store\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_test_packages.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 18,
                  "endLine": 54,
                  "endColumn": 26,
                  "snippet": {
                    "text": "      # Some builds use sanitizers, we always install support for them so they can run\n      - name: Install sanitizer support\n        run: |\n          sudo apt update -y\n          sudo apt install -y libasan5 libubsan1\n          \n      - name: Run tests\n",
                    "rendered": {
                      "text": "      # Some builds use sanitizers, we always install support for them so they can run\n      - name: Install sanitizer support\n        run: |\n          sudo apt update -y\n          sudo apt install -y libasan5 libubsan1\n          \n      - name: Run tests\n",
                      "markdown": "`      # Some builds use sanitizers, we always install support for them so they can run\n      - name: Install sanitizer support\n        run: |\n          sudo apt update -y\n          sudo apt install -y libasan5 libubsan1\n          \n      - name: Run tests\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_test_packages.yaml"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 18,
                  "endLine": 48,
                  "endColumn": 26,
                  "snippet": {
                    "text": "      - name: Install kernel headers for falco-driver-loader tests\n        if: ${{ inputs.arch == 'x86_64' }}\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends linux-headers-$(uname -r)\n\n      # Some builds use sanitizers, we always install support for them so they can run\n",
                    "rendered": {
                      "text": "      - name: Install kernel headers for falco-driver-loader tests\n        if: ${{ inputs.arch == 'x86_64' }}\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends linux-headers-$(uname -r)\n\n      # Some builds use sanitizers, we always install support for them so they can run\n",
                      "markdown": "`      - name: Install kernel headers for falco-driver-loader tests\n        if: ${{ inputs.arch == 'x86_64' }}\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends linux-headers-$(uname -r)\n\n      # Some builds use sanitizers, we always install support for them so they can run\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_test_packages.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 14,
                  "endLine": 55,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      - name: Install sanitizer support\n        run: |\n          sudo apt update -y\n          sudo apt install -y libasan5 libubsan1\n          \n      - name: Run tests\n        env:\n",
                    "rendered": {
                      "text": "      - name: Install sanitizer support\n        run: |\n          sudo apt update -y\n          sudo apt install -y libasan5 libubsan1\n          \n      - name: Run tests\n        env:\n",
                      "markdown": "`      - name: Install sanitizer support\n        run: |\n          sudo apt update -y\n          sudo apt install -y libasan5 libubsan1\n          \n      - name: Run tests\n        env:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_test_packages.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 14,
                  "endLine": 54,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      # Some builds use sanitizers, we always install support for them so they can run\n      - name: Install sanitizer support\n        run: |\n          sudo apt update -y\n          sudo apt install -y libasan5 libubsan1\n          \n      - name: Run tests\n",
                    "rendered": {
                      "text": "      # Some builds use sanitizers, we always install support for them so they can run\n      - name: Install sanitizer support\n        run: |\n          sudo apt update -y\n          sudo apt install -y libasan5 libubsan1\n          \n      - name: Run tests\n",
                      "markdown": "`      # Some builds use sanitizers, we always install support for them so they can run\n      - name: Install sanitizer support\n        run: |\n          sudo apt update -y\n          sudo apt install -y libasan5 libubsan1\n          \n      - name: Run tests\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_test_packages.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 14,
                  "endLine": 49,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        if: ${{ inputs.arch == 'x86_64' }}\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends linux-headers-$(uname -r)\n\n      # Some builds use sanitizers, we always install support for them so they can run\n      - name: Install sanitizer support\n",
                    "rendered": {
                      "text": "        if: ${{ inputs.arch == 'x86_64' }}\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends linux-headers-$(uname -r)\n\n      # Some builds use sanitizers, we always install support for them so they can run\n      - name: Install sanitizer support\n",
                      "markdown": "`        if: ${{ inputs.arch == 'x86_64' }}\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends linux-headers-$(uname -r)\n\n      # Some builds use sanitizers, we always install support for them so they can run\n      - name: Install sanitizer support\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_test_packages.yaml"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 14,
                  "endLine": 48,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      - name: Install kernel headers for falco-driver-loader tests\n        if: ${{ inputs.arch == 'x86_64' }}\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends linux-headers-$(uname -r)\n\n      # Some builds use sanitizers, we always install support for them so they can run\n",
                    "rendered": {
                      "text": "      - name: Install kernel headers for falco-driver-loader tests\n        if: ${{ inputs.arch == 'x86_64' }}\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends linux-headers-$(uname -r)\n\n      # Some builds use sanitizers, we always install support for them so they can run\n",
                      "markdown": "`      - name: Install kernel headers for falco-driver-loader tests\n        if: ${{ inputs.arch == 'x86_64' }}\n        run: |\n          sudo apt update -y\n          sudo apt install -y --no-install-recommends linux-headers-$(uname -r)\n\n      # Some builds use sanitizers, we always install support for them so they can run\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_test_packages.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 14,
                  "endLine": 42,
                  "endColumn": 18,
                  "snippet": {
                    "text": "          ls falco-*.tar.gz\n          tar -xvf $(ls falco-*.tar.gz)\n          cd falco-${{ inputs.version }}-${{ inputs.arch }}\n          sudo cp -r * /\n     \n      # We only run driver loader tests on x86_64\n      - name: Install kernel headers for falco-driver-loader tests\n",
                    "rendered": {
                      "text": "          ls falco-*.tar.gz\n          tar -xvf $(ls falco-*.tar.gz)\n          cd falco-${{ inputs.version }}-${{ inputs.arch }}\n          sudo cp -r * /\n     \n      # We only run driver loader tests on x86_64\n      - name: Install kernel headers for falco-driver-loader tests\n",
                      "markdown": "`          ls falco-*.tar.gz\n          tar -xvf $(ls falco-*.tar.gz)\n          cd falco-${{ inputs.version }}-${{ inputs.arch }}\n          sudo cp -r * /\n     \n      # We only run driver loader tests on x86_64\n      - name: Install kernel headers for falco-driver-loader tests\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.github/workflows/reusable_test_packages.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9,
                  "endLine": 40,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: Install Falco package\n        run: |\n          ls falco-*.tar.gz\n          tar -xvf $(ls falco-*.tar.gz)\n          cd falco-${{ inputs.version }}-${{ inputs.arch }}\n          sudo cp -r * /\n     \n",
                    "rendered": {
                      "text": "      - name: Install Falco package\n        run: |\n          ls falco-*.tar.gz\n          tar -xvf $(ls falco-*.tar.gz)\n          cd falco-${{ inputs.version }}-${{ inputs.arch }}\n          sudo cp -r * /\n     \n",
                      "markdown": "`      - name: Install Falco package\n        run: |\n          ls falco-*.tar.gz\n          tar -xvf $(ls falco-*.tar.gz)\n          cd falco-${{ inputs.version }}-${{ inputs.arch }}\n          sudo cp -r * /\n     \n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 771,
                  "startColumn": 4,
                  "endLine": 771,
                  "endColumn": 15,
                  "snippet": {
                    "text": "#   # When the `threadiness` value is set to 0, Falco will automatically determine\n#   # the appropriate number of threads based on the number of online cores in the system.\n#   threadiness: 0\n#   private_key: \"/etc/falco/certs/server.key\"\n#   cert_chain: \"/etc/falco/certs/server.crt\"\n#   root_certs: \"/etc/falco/certs/ca.crt\"\n\n",
                    "rendered": {
                      "text": "#   # When the `threadiness` value is set to 0, Falco will automatically determine\n#   # the appropriate number of threads based on the number of online cores in the system.\n#   threadiness: 0\n#   private_key: \"/etc/falco/certs/server.key\"\n#   cert_chain: \"/etc/falco/certs/server.crt\"\n#   root_certs: \"/etc/falco/certs/ca.crt\"\n\n",
                      "markdown": "`#   # When the `threadiness` value is set to 0, Falco will automatically determine\n#   # the appropriate number of threads based on the number of online cores in the system.\n#   threadiness: 0\n#   private_key: \"/etc/falco/certs/server.key\"\n#   cert_chain: \"/etc/falco/certs/server.crt\"\n#   root_certs: \"/etc/falco/certs/ca.crt\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1183,
                  "startColumn": 11,
                  "endLine": 1183,
                  "endColumn": 65,
                  "snippet": {
                    "text": "# Falco rule.\n#\n# This is useful in lowering CPU utilization and further tailoring Falco to\n# specific environments according to your threat model and budget constraints.\n#\n# --- [base_syscalls.repair]\n#\n",
                    "rendered": {
                      "text": "# Falco rule.\n#\n# This is useful in lowering CPU utilization and further tailoring Falco to\n# specific environments according to your threat model and budget constraints.\n#\n# --- [base_syscalls.repair]\n#\n",
                      "markdown": "`# Falco rule.\n#\n# This is useful in lowering CPU utilization and further tailoring Falco to\n# specific environments according to your threat model and budget constraints.\n#\n# --- [base_syscalls.repair]\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1010,
                  "startColumn": 35,
                  "endLine": 1010,
                  "endColumn": 43,
                  "snippet": {
                    "text": "#\n# To customize the hostname in Falco, you can set the environment variable\n# `FALCO_HOSTNAME` to your desired hostname. This is particularly useful in\n# Kubernetes deployments where the hostname can be set to the pod name.\n#\n# --- [Usage]\n#\n",
                    "rendered": {
                      "text": "#\n# To customize the hostname in Falco, you can set the environment variable\n# `FALCO_HOSTNAME` to your desired hostname. This is particularly useful in\n# Kubernetes deployments where the hostname can be set to the pod name.\n#\n# --- [Usage]\n#\n",
                      "markdown": "`#\n# To customize the hostname in Falco, you can set the environment variable\n# `FALCO_HOSTNAME` to your desired hostname. This is particularly useful in\n# Kubernetes deployments where the hostname can be set to the pod name.\n#\n# --- [Usage]\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1009,
                  "startColumn": 35,
                  "endLine": 1009,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# are computed based on the delta between two snapshots.\n#\n# To customize the hostname in Falco, you can set the environment variable\n# `FALCO_HOSTNAME` to your desired hostname. This is particularly useful in\n# Kubernetes deployments where the hostname can be set to the pod name.\n#\n# --- [Usage]\n",
                    "rendered": {
                      "text": "# are computed based on the delta between two snapshots.\n#\n# To customize the hostname in Falco, you can set the environment variable\n# `FALCO_HOSTNAME` to your desired hostname. This is particularly useful in\n# Kubernetes deployments where the hostname can be set to the pod name.\n#\n# --- [Usage]\n",
                      "markdown": "`# are computed based on the delta between two snapshots.\n#\n# To customize the hostname in Falco, you can set the environment variable\n# `FALCO_HOSTNAME` to your desired hostname. This is particularly useful in\n# Kubernetes deployments where the hostname can be set to the pod name.\n#\n# --- [Usage]\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1008,
                  "startColumn": 19,
                  "endLine": 1008,
                  "endColumn": 27,
                  "snippet": {
                    "text": "# exception of event rates per second and drop percentage stats. These values\n# are computed based on the delta between two snapshots.\n#\n# To customize the hostname in Falco, you can set the environment variable\n# `FALCO_HOSTNAME` to your desired hostname. This is particularly useful in\n# Kubernetes deployments where the hostname can be set to the pod name.\n#\n",
                    "rendered": {
                      "text": "# exception of event rates per second and drop percentage stats. These values\n# are computed based on the delta between two snapshots.\n#\n# To customize the hostname in Falco, you can set the environment variable\n# `FALCO_HOSTNAME` to your desired hostname. This is particularly useful in\n# Kubernetes deployments where the hostname can be set to the pod name.\n#\n",
                      "markdown": "`# exception of event rates per second and drop percentage stats. These values\n# are computed based on the delta between two snapshots.\n#\n# To customize the hostname in Falco, you can set the environment variable\n# `FALCO_HOSTNAME` to your desired hostname. This is particularly useful in\n# Kubernetes deployments where the hostname can be set to the pod name.\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 635,
                  "startColumn": 72,
                  "endLine": 635,
                  "endColumn": 80,
                  "snippet": {
                    "text": "# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n# property you will find three new ones: \"evt.cpu\", \"home_directory\" which will contain the value of the\n# environment variable $HOME, and \"evt.hostname\" which will contain the hostname.\n\n\n##########################\n",
                    "rendered": {
                      "text": "# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n# property you will find three new ones: \"evt.cpu\", \"home_directory\" which will contain the value of the\n# environment variable $HOME, and \"evt.hostname\" which will contain the hostname.\n\n\n##########################\n",
                      "markdown": "`# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n# property you will find three new ones: \"evt.cpu\", \"home_directory\" which will contain the value of the\n# environment variable $HOME, and \"evt.hostname\" which will contain the hostname.\n\n\n##########################\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 635,
                  "startColumn": 39,
                  "endLine": 635,
                  "endColumn": 47,
                  "snippet": {
                    "text": "# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n# property you will find three new ones: \"evt.cpu\", \"home_directory\" which will contain the value of the\n# environment variable $HOME, and \"evt.hostname\" which will contain the hostname.\n\n\n##########################\n",
                    "rendered": {
                      "text": "# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n# property you will find three new ones: \"evt.cpu\", \"home_directory\" which will contain the value of the\n# environment variable $HOME, and \"evt.hostname\" which will contain the hostname.\n\n\n##########################\n",
                      "markdown": "`# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n# property you will find three new ones: \"evt.cpu\", \"home_directory\" which will contain the value of the\n# environment variable $HOME, and \"evt.hostname\" which will contain the hostname.\n\n\n##########################\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 630,
                  "startColumn": 14,
                  "endLine": 630,
                  "endColumn": 22,
                  "snippet": {
                    "text": "#     extra_output: \"on CPU %evt.cpu\"\n#     extra_fields:\n#       - home_directory: \"${HOME}\"\n#       - evt.hostname\n#\n# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n",
                    "rendered": {
                      "text": "#     extra_output: \"on CPU %evt.cpu\"\n#     extra_fields:\n#       - home_directory: \"${HOME}\"\n#       - evt.hostname\n#\n# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n",
                      "markdown": "`#     extra_output: \"on CPU %evt.cpu\"\n#     extra_fields:\n#       - home_directory: \"${HOME}\"\n#       - evt.hostname\n#\n# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 34,
                  "endLine": 113,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#   when deploying Falco over a container with read-only host mounts instead of\n#   directly on the host. Defaults to \"/host\". \n#\n# - FALCO_HOSTNAME: Customize the hostname output field logged by Falco by\n#   setting the \"FALCO_HOSTNAME\" environment variable.\n#\n# - FALCO_CGROUP_MEM_PATH: Specifies the file path holding the container\n",
                    "rendered": {
                      "text": "#   when deploying Falco over a container with read-only host mounts instead of\n#   directly on the host. Defaults to \"/host\". \n#\n# - FALCO_HOSTNAME: Customize the hostname output field logged by Falco by\n#   setting the \"FALCO_HOSTNAME\" environment variable.\n#\n# - FALCO_CGROUP_MEM_PATH: Specifies the file path holding the container\n",
                      "markdown": "`#   when deploying Falco over a container with read-only host mounts instead of\n#   directly on the host. Defaults to \"/host\". \n#\n# - FALCO_HOSTNAME: Customize the hostname output field logged by Falco by\n#   setting the \"FALCO_HOSTNAME\" environment variable.\n#\n# - FALCO_CGROUP_MEM_PATH: Specifies the file path holding the container\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 497,
                  "startColumn": 51,
                  "endLine": 497,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n# [Incubating] `buffer_format_base64`\n#\n# When enabled, Falco will output data buffer with base64 encoding. This is useful\n# for encoding binary data that needs to be used over media designed to consume\n# this format.\nbuffer_format_base64: false\n",
                    "rendered": {
                      "text": "\n# [Incubating] `buffer_format_base64`\n#\n# When enabled, Falco will output data buffer with base64 encoding. This is useful\n# for encoding binary data that needs to be used over media designed to consume\n# this format.\nbuffer_format_base64: false\n",
                      "markdown": "`\n# [Incubating] `buffer_format_base64`\n#\n# When enabled, Falco will output data buffer with base64 encoding. This is useful\n# for encoding binary data that needs to be used over media designed to consume\n# this format.\nbuffer_format_base64: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1266,
                  "startColumn": 83,
                  "endLine": 1266,
                  "endColumn": 87,
                  "snippet": {
                    "text": "# `thread_table_size`\n#\n# Set the maximum number of entries (the absolute maximum value can only be MAX UINT32) \n# for Falco's internal threadtable (process cache). Please note that Falco operates at a \n# granular level, focusing on individual threads. Falco rules reference the thread leader \n# as the process. The size of the threadtable should typically be much higher than the \n# number of currently alive processes. The default value should work well on modern \n",
                    "rendered": {
                      "text": "# `thread_table_size`\n#\n# Set the maximum number of entries (the absolute maximum value can only be MAX UINT32) \n# for Falco's internal threadtable (process cache). Please note that Falco operates at a \n# granular level, focusing on individual threads. Falco rules reference the thread leader \n# as the process. The size of the threadtable should typically be much higher than the \n# number of currently alive processes. The default value should work well on modern \n",
                      "markdown": "`# `thread_table_size`\n#\n# Set the maximum number of entries (the absolute maximum value can only be MAX UINT32) \n# for Falco's internal threadtable (process cache). Please note that Falco operates at a \n# granular level, focusing on individual threads. Falco rules reference the thread leader \n# as the process. The size of the threadtable should typically be much higher than the \n# number of currently alive processes. The default value should work well on modern \n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1219,
                  "startColumn": 74,
                  "endLine": 1220,
                  "snippet": {
                    "text": "# deployment update (overriding rules), else remove unwanted syscalls from the\n# Falco rules.\n#\n# Passing `-o \"log_level=debug\" -o \"log_stderr=true\" --dry-run` to Falco's cmd\n# args will print the final set of syscalls to STDOUT.\n#\n# --- [Suggestions]\n#\n",
                    "rendered": {
                      "text": "# deployment update (overriding rules), else remove unwanted syscalls from the\n# Falco rules.\n#\n# Passing `-o \"log_level=debug\" -o \"log_stderr=true\" --dry-run` to Falco's cmd\n# args will print the final set of syscalls to STDOUT.\n#\n# --- [Suggestions]\n#\n",
                      "markdown": "`# deployment update (overriding rules), else remove unwanted syscalls from the\n# Falco rules.\n#\n# Passing `-o \"log_level=debug\" -o \"log_stderr=true\" --dry-run` to Falco's cmd\n# args will print the final set of syscalls to STDOUT.\n#\n# --- [Suggestions]\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1216,
                  "startColumn": 12,
                  "endLine": 1216,
                  "endColumn": 20,
                  "snippet": {
                    "text": "# \"!<syscall-name>\"] base_syscalls.repair: <bool>\n#\n# We recommend to only exclude syscalls, e.g. \"!mprotect\" if you need a fast\n# deployment update (overriding rules), else remove unwanted syscalls from the\n# Falco rules.\n#\n# Passing `-o \"log_level=debug\" -o \"log_stderr=true\" --dry-run` to Falco's cmd\n",
                    "rendered": {
                      "text": "# \"!<syscall-name>\"] base_syscalls.repair: <bool>\n#\n# We recommend to only exclude syscalls, e.g. \"!mprotect\" if you need a fast\n# deployment update (overriding rules), else remove unwanted syscalls from the\n# Falco rules.\n#\n# Passing `-o \"log_level=debug\" -o \"log_stderr=true\" --dry-run` to Falco's cmd\n",
                      "markdown": "`# \"!<syscall-name>\"] base_syscalls.repair: <bool>\n#\n# We recommend to only exclude syscalls, e.g. \"!mprotect\" if you need a fast\n# deployment update (overriding rules), else remove unwanted syscalls from the\n# Falco rules.\n#\n# Passing `-o \"log_level=debug\" -o \"log_stderr=true\" --dry-run` to Falco's cmd\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1162,
                  "startColumn": 61,
                  "endLine": 1162,
                  "endColumn": 70,
                  "snippet": {
                    "text": "#   successfully build up it's state engine and life-cycle management.\n#\n# If the default behavior described above does not fit the user's use case for\n# Falco, the `base_syscalls` option allows for finer end-user control of\n# syscalls traced by Falco.\n#\n# --- [base_syscalls.all]\n",
                    "rendered": {
                      "text": "#   successfully build up it's state engine and life-cycle management.\n#\n# If the default behavior described above does not fit the user's use case for\n# Falco, the `base_syscalls` option allows for finer end-user control of\n# syscalls traced by Falco.\n#\n# --- [base_syscalls.all]\n",
                      "markdown": "`#   successfully build up it's state engine and life-cycle management.\n#\n# If the default behavior described above does not fit the user's use case for\n# Falco, the `base_syscalls` option allows for finer end-user control of\n# syscalls traced by Falco.\n#\n# --- [base_syscalls.all]\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1104,
                  "startColumn": 24,
                  "endLine": 1104,
                  "endColumn": 28,
                  "snippet": {
                    "text": "# `plugins_metrics_enabled`: Falco can now expose your custom plugins' \n# metrics. Please note that if the respective plugin has no metrics implemented, \n# there will be no metrics available. In other words, there are no default or \n# generic plugin metrics at this time. This may be subject to change.\n#\n# If metrics are enabled, the web server can be configured to activate the\n# corresponding Prometheus endpoint using `webserver.prometheus_metrics_enabled`.\n",
                    "rendered": {
                      "text": "# `plugins_metrics_enabled`: Falco can now expose your custom plugins' \n# metrics. Please note that if the respective plugin has no metrics implemented, \n# there will be no metrics available. In other words, there are no default or \n# generic plugin metrics at this time. This may be subject to change.\n#\n# If metrics are enabled, the web server can be configured to activate the\n# corresponding Prometheus endpoint using `webserver.prometheus_metrics_enabled`.\n",
                      "markdown": "`# `plugins_metrics_enabled`: Falco can now expose your custom plugins' \n# metrics. Please note that if the respective plugin has no metrics implemented, \n# there will be no metrics available. In other words, there are no default or \n# generic plugin metrics at this time. This may be subject to change.\n#\n# If metrics are enabled, the web server can be configured to activate the\n# corresponding Prometheus endpoint using `webserver.prometheus_metrics_enabled`.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1092,
                  "startColumn": 39,
                  "endLine": 1092,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# configuration `/proc/sys/kernel/bpf_stats_enabled` must be set. This option,\n# or an equivalent statistics feature, is not available for non `*bpf*` drivers.\n# Additionally, please be aware that the current implementation of `libbpf` does\n# not support granularity of statistics at the bpf tail call level.\n#\n# `include_empty_values`: When the option is set to true, fields with an empty\n# numeric value will be included in the output. However, this rule does not\n",
                    "rendered": {
                      "text": "# configuration `/proc/sys/kernel/bpf_stats_enabled` must be set. This option,\n# or an equivalent statistics feature, is not available for non `*bpf*` drivers.\n# Additionally, please be aware that the current implementation of `libbpf` does\n# not support granularity of statistics at the bpf tail call level.\n#\n# `include_empty_values`: When the option is set to true, fields with an empty\n# numeric value will be included in the output. However, this rule does not\n",
                      "markdown": "`# configuration `/proc/sys/kernel/bpf_stats_enabled` must be set. This option,\n# or an equivalent statistics feature, is not available for non `*bpf*` drivers.\n# Additionally, please be aware that the current implementation of `libbpf` does\n# not support granularity of statistics at the bpf tail call level.\n#\n# `include_empty_values`: When the option is set to true, fields with an empty\n# numeric value will be included in the output. However, this rule does not\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1079,
                  "startColumn": 72,
                  "endLine": 1079,
                  "endColumn": 76,
                  "snippet": {
                    "text": "#\n# `kernel_event_counters_enabled`: Emit kernel side event and drop counters, as\n# an alternative to `syscall_event_drops`, but with some differences. These\n# counters reflect monotonic values since Falco's start and are exported at a\n# constant stats interval.\n#\n# `kernel_event_counters_per_cpu_enabled`: Detailed kernel event and drop counters\n",
                    "rendered": {
                      "text": "#\n# `kernel_event_counters_enabled`: Emit kernel side event and drop counters, as\n# an alternative to `syscall_event_drops`, but with some differences. These\n# counters reflect monotonic values since Falco's start and are exported at a\n# constant stats interval.\n#\n# `kernel_event_counters_per_cpu_enabled`: Detailed kernel event and drop counters\n",
                      "markdown": "`#\n# `kernel_event_counters_enabled`: Emit kernel side event and drop counters, as\n# an alternative to `syscall_event_drops`, but with some differences. These\n# counters reflect monotonic values since Falco's start and are exported at a\n# constant stats interval.\n#\n# `kernel_event_counters_per_cpu_enabled`: Detailed kernel event and drop counters\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1047,
                  "startColumn": 23,
                  "endLine": 1047,
                  "endColumn": 27,
                  "snippet": {
                    "text": "# recommend emitting metrics as the rule \"Falco internal: metrics snapshot\".\n# This option is particularly useful when Falco logs are preserved in a data\n# lake. Please note that to use this option, the Falco rules config `priority`\n# must be set to `info` at a minimum.\n#\n# `output_file`: Append stats to a `jsonl` file. Use with caution in production\n# as Falco does not automatically rotate the file. It can be used in combination\n",
                    "rendered": {
                      "text": "# recommend emitting metrics as the rule \"Falco internal: metrics snapshot\".\n# This option is particularly useful when Falco logs are preserved in a data\n# lake. Please note that to use this option, the Falco rules config `priority`\n# must be set to `info` at a minimum.\n#\n# `output_file`: Append stats to a `jsonl` file. Use with caution in production\n# as Falco does not automatically rotate the file. It can be used in combination\n",
                      "markdown": "`# recommend emitting metrics as the rule \"Falco internal: metrics snapshot\".\n# This option is particularly useful when Falco logs are preserved in a data\n# lake. Please note that to use this option, the Falco rules config `priority`\n# must be set to `info` at a minimum.\n#\n# `output_file`: Append stats to a `jsonl` file. Use with caution in production\n# as Falco does not automatically rotate the file. It can be used in combination\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 984,
                  "startColumn": 45,
                  "endLine": 984,
                  "endColumn": 49,
                  "snippet": {
                    "text": "# - It introduces a redesigned stats/metrics system.\n# - Native support for resource utilization metrics and specialized performance\n#   metrics.\n# - Metrics are emitted as monotonic counters at predefined intervals\n#   (snapshots).\n# - All metrics are consolidated into a single log message, adhering to the\n#   established rules schema and naming conventions.\n",
                    "rendered": {
                      "text": "# - It introduces a redesigned stats/metrics system.\n# - Native support for resource utilization metrics and specialized performance\n#   metrics.\n# - Metrics are emitted as monotonic counters at predefined intervals\n#   (snapshots).\n# - All metrics are consolidated into a single log message, adhering to the\n#   established rules schema and naming conventions.\n",
                      "markdown": "`# - It introduces a redesigned stats/metrics system.\n# - Native support for resource utilization metrics and specialized performance\n#   metrics.\n# - Metrics are emitted as monotonic counters at predefined intervals\n#   (snapshots).\n# - All metrics are consolidated into a single log message, adhering to the\n#   established rules schema and naming conventions.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 969,
                  "startColumn": 1,
                  "endLine": 969,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# By selecting `output_file`, equivalent JSON output will be appended to a file.\n#\n# periodic metric snapshots (including stats and resource utilization) captured\n# at regular intervals\n#\n# --- [Warning]\n#\n",
                    "rendered": {
                      "text": "# By selecting `output_file`, equivalent JSON output will be appended to a file.\n#\n# periodic metric snapshots (including stats and resource utilization) captured\n# at regular intervals\n#\n# --- [Warning]\n#\n",
                      "markdown": "`# By selecting `output_file`, equivalent JSON output will be appended to a file.\n#\n# periodic metric snapshots (including stats and resource utilization) captured\n# at regular intervals\n#\n# --- [Warning]\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 965,
                  "startColumn": 79,
                  "endLine": 965,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\n# [Stable] `metrics`\n#\n# Generates \"Falco internal: metrics snapshot\" rule output when `priority=info` at minimum\n# By selecting `output_file`, equivalent JSON output will be appended to a file.\n#\n# periodic metric snapshots (including stats and resource utilization) captured\n",
                    "rendered": {
                      "text": "\n# [Stable] `metrics`\n#\n# Generates \"Falco internal: metrics snapshot\" rule output when `priority=info` at minimum\n# By selecting `output_file`, equivalent JSON output will be appended to a file.\n#\n# periodic metric snapshots (including stats and resource utilization) captured\n",
                      "markdown": "`\n# [Stable] `metrics`\n#\n# Generates \"Falco internal: metrics snapshot\" rule output when `priority=info` at minimum\n# By selecting `output_file`, equivalent JSON output will be appended to a file.\n#\n# periodic metric snapshots (including stats and resource utilization) captured\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 951,
                  "startColumn": 62,
                  "endLine": 951,
                  "endColumn": 66,
                  "snippet": {
                    "text": "# a given time period as dictated by the settings. Statistics here reflect the\n# delta in a 1s time period.\n#\n# If instead you prefer periodic metrics of monotonic counters at a regular\n# interval, which include syscall drop statistics and additional metrics,\n# explore the `metrics` configuration option.\nsyscall_event_drops:\n",
                    "rendered": {
                      "text": "# a given time period as dictated by the settings. Statistics here reflect the\n# delta in a 1s time period.\n#\n# If instead you prefer periodic metrics of monotonic counters at a regular\n# interval, which include syscall drop statistics and additional metrics,\n# explore the `metrics` configuration option.\nsyscall_event_drops:\n",
                      "markdown": "`# a given time period as dictated by the settings. Statistics here reflect the\n# delta in a 1s time period.\n#\n# If instead you prefer periodic metrics of monotonic counters at a regular\n# interval, which include syscall drop statistics and additional metrics,\n# explore the `metrics` configuration option.\nsyscall_event_drops:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 932,
                  "startColumn": 10,
                  "endLine": 932,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#\n# Notice it is not possible to ignore and log/alert messages at the same time.\n#\n# The rate at which log/alert messages are emitted is governed by a token\n# bucket. The rate corresponds to one message every 30 seconds with a burst of\n# one message (by default).\n#\n",
                    "rendered": {
                      "text": "#\n# Notice it is not possible to ignore and log/alert messages at the same time.\n#\n# The rate at which log/alert messages are emitted is governed by a token\n# bucket. The rate corresponds to one message every 30 seconds with a burst of\n# one message (by default).\n#\n",
                      "markdown": "`#\n# Notice it is not possible to ignore and log/alert messages at the same time.\n#\n# The rate at which log/alert messages are emitted is governed by a token\n# bucket. The rate corresponds to one message every 30 seconds with a burst of\n# one message (by default).\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 930,
                  "startColumn": 60,
                  "endLine": 930,
                  "endColumn": 64,
                  "snippet": {
                    "text": "#   - alert: emit a Falco alert noting that the buffer was full\n#   - exit: exit Falco with a non-zero rc\n#\n# Notice it is not possible to ignore and log/alert messages at the same time.\n#\n# The rate at which log/alert messages are emitted is governed by a token\n# bucket. The rate corresponds to one message every 30 seconds with a burst of\n",
                    "rendered": {
                      "text": "#   - alert: emit a Falco alert noting that the buffer was full\n#   - exit: exit Falco with a non-zero rc\n#\n# Notice it is not possible to ignore and log/alert messages at the same time.\n#\n# The rate at which log/alert messages are emitted is governed by a token\n# bucket. The rate corresponds to one message every 30 seconds with a burst of\n",
                      "markdown": "`#   - alert: emit a Falco alert noting that the buffer was full\n#   - exit: exit Falco with a non-zero rc\n#\n# Notice it is not possible to ignore and log/alert messages at the same time.\n#\n# The rate at which log/alert messages are emitted is governed by a token\n# bucket. The rate corresponds to one message every 30 seconds with a burst of\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 82,
                  "endLine": 918,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\n# [Stable] `syscall_event_drops` -> [CHANGE NOTICE] Automatic notifications will be simplified in Falco 0.38! If you depend on the detailed drop counters payload, use 'metrics.output_rule' along with 'metrics.kernel_event_counters_enabled' instead\n#\n# Generates \"Falco internal: syscall event drop\" rule output when `priority=debug` at minimum\n#\n# --- [Description]\n#\n",
                    "rendered": {
                      "text": "\n# [Stable] `syscall_event_drops` -> [CHANGE NOTICE] Automatic notifications will be simplified in Falco 0.38! If you depend on the detailed drop counters payload, use 'metrics.output_rule' along with 'metrics.kernel_event_counters_enabled' instead\n#\n# Generates \"Falco internal: syscall event drop\" rule output when `priority=debug` at minimum\n#\n# --- [Description]\n#\n",
                      "markdown": "`\n# [Stable] `syscall_event_drops` -> [CHANGE NOTICE] Automatic notifications will be simplified in Falco 0.38! If you depend on the detailed drop counters payload, use 'metrics.output_rule' along with 'metrics.kernel_event_counters_enabled' instead\n#\n# Generates \"Falco internal: syscall event drop\" rule output when `priority=debug` at minimum\n#\n# --- [Description]\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 900,
                  "startColumn": 58,
                  "endLine": 900,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\n# [Stable] `syscall_event_timeouts`\n#\n# Generates Falco operational logs when `log_level=notice` at minimum\n#\n# Falco utilizes a shared buffer between the kernel and userspace to receive\n# events, such as system call information, in userspace. However, there may be\n",
                    "rendered": {
                      "text": "\n# [Stable] `syscall_event_timeouts`\n#\n# Generates Falco operational logs when `log_level=notice` at minimum\n#\n# Falco utilizes a shared buffer between the kernel and userspace to receive\n# events, such as system call information, in userspace. However, there may be\n",
                      "markdown": "`\n# [Stable] `syscall_event_timeouts`\n#\n# Generates Falco operational logs when `log_level=notice` at minimum\n#\n# Falco utilizes a shared buffer between the kernel and userspace to receive\n# events, such as system call information, in userspace. However, there may be\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 874,
                  "startColumn": 58,
                  "endLine": 874,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\n# [Stable] `output_timeout`\n#\n# Generates Falco operational logs when `log_level=notice` at minimum\n#\n# A timeout error occurs when a process or operation takes longer to complete\n# than the allowed or expected time limit. In the context of Falco, an output\n",
                    "rendered": {
                      "text": "\n# [Stable] `output_timeout`\n#\n# Generates Falco operational logs when `log_level=notice` at minimum\n#\n# A timeout error occurs when a process or operation takes longer to complete\n# than the allowed or expected time limit. In the context of Falco, an output\n",
                      "markdown": "`\n# [Stable] `output_timeout`\n#\n# Generates Falco operational logs when `log_level=notice` at minimum\n#\n# A timeout error occurs when a process or operation takes longer to complete\n# than the allowed or expected time limit. In the context of Falco, an output\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 858,
                  "startColumn": 47,
                  "endLine": 858,
                  "endColumn": 56,
                  "snippet": {
                    "text": "# `libs` library, which Falco utilizes. This setting is independent of the\n# `priority` field of rules and the `log_level` setting that controls Falco's\n# operational logs. It allows you to specify the desired log level for the `libs`\n# library specifically, providing more granular control over the logging\n# behavior of the underlying components used by Falco. Only logs of a certain\n# severity level or higher will be emitted. Supported levels: \"fatal\",\n# \"critical\", \"error\", \"warning\", \"notice\", \"info\", \"debug\", \"trace\". It is not\n",
                    "rendered": {
                      "text": "# `libs` library, which Falco utilizes. This setting is independent of the\n# `priority` field of rules and the `log_level` setting that controls Falco's\n# operational logs. It allows you to specify the desired log level for the `libs`\n# library specifically, providing more granular control over the logging\n# behavior of the underlying components used by Falco. Only logs of a certain\n# severity level or higher will be emitted. Supported levels: \"fatal\",\n# \"critical\", \"error\", \"warning\", \"notice\", \"info\", \"debug\", \"trace\". It is not\n",
                      "markdown": "`# `libs` library, which Falco utilizes. This setting is independent of the\n# `priority` field of rules and the `log_level` setting that controls Falco's\n# operational logs. It allows you to specify the desired log level for the `libs`\n# library specifically, providing more granular control over the logging\n# behavior of the underlying components used by Falco. Only logs of a certain\n# severity level or higher will be emitted. Supported levels: \"fatal\",\n# \"critical\", \"error\", \"warning\", \"notice\", \"info\", \"debug\", \"trace\". It is not\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 845,
                  "startColumn": 65,
                  "endLine": 845,
                  "endColumn": 74,
                  "snippet": {
                    "text": "# The `log_level` setting determines the minimum log level to include in Falco's\n# logs related to the functioning of the software. This setting is separate from\n# the `priority` field of rules and specifically controls the log level of\n# Falco's operational logging. By specifying a log level, you can control the\n# verbosity of Falco's operational logs. Only logs of a certain severity level\n# or higher will be emitted. Supported levels: \"emergency\", \"alert\", \"critical\",\n# \"error\", \"warning\", \"notice\", \"info\", \"debug\".\n",
                    "rendered": {
                      "text": "# The `log_level` setting determines the minimum log level to include in Falco's\n# logs related to the functioning of the software. This setting is separate from\n# the `priority` field of rules and specifically controls the log level of\n# Falco's operational logging. By specifying a log level, you can control the\n# verbosity of Falco's operational logs. Only logs of a certain severity level\n# or higher will be emitted. Supported levels: \"emergency\", \"alert\", \"critical\",\n# \"error\", \"warning\", \"notice\", \"info\", \"debug\".\n",
                      "markdown": "`# The `log_level` setting determines the minimum log level to include in Falco's\n# logs related to the functioning of the software. This setting is separate from\n# the `priority` field of rules and specifically controls the log level of\n# Falco's operational logging. By specifying a log level, you can control the\n# verbosity of Falco's operational logs. Only logs of a certain severity level\n# or higher will be emitted. Supported levels: \"emergency\", \"alert\", \"critical\",\n# \"error\", \"warning\", \"notice\", \"info\", \"debug\".\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 758,
                  "startColumn": 43,
                  "endLine": 758,
                  "endColumn": 52,
                  "snippet": {
                    "text": "# - Update the paths of the generated certificates for mutual TLS authentication\n#   if you choose to use mTLS.\n# - Specify the address to bind and expose the gRPC server.\n# - Adjust the threadiness configuration to control the number of threads and\n#   contexts used by the server.\n#\n# Keep in mind that if any issues arise while creating the gRPC server, the\n",
                    "rendered": {
                      "text": "# - Update the paths of the generated certificates for mutual TLS authentication\n#   if you choose to use mTLS.\n# - Specify the address to bind and expose the gRPC server.\n# - Adjust the threadiness configuration to control the number of threads and\n#   contexts used by the server.\n#\n# Keep in mind that if any issues arise while creating the gRPC server, the\n",
                      "markdown": "`# - Update the paths of the generated certificates for mutual TLS authentication\n#   if you choose to use mTLS.\n# - Specify the address to bind and expose the gRPC server.\n# - Adjust the threadiness configuration to control the number of threads and\n#   contexts used by the server.\n#\n# Keep in mind that if any issues arise while creating the gRPC server, the\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 755,
                  "startColumn": 3,
                  "endLine": 755,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# the options:\n#\n# - Uncomment the relevant configuration options related to the gRPC server.\n# - Update the paths of the generated certificates for mutual TLS authentication\n#   if you choose to use mTLS.\n# - Specify the address to bind and expose the gRPC server.\n# - Adjust the threadiness configuration to control the number of threads and\n",
                    "rendered": {
                      "text": "# the options:\n#\n# - Uncomment the relevant configuration options related to the gRPC server.\n# - Update the paths of the generated certificates for mutual TLS authentication\n#   if you choose to use mTLS.\n# - Specify the address to bind and expose the gRPC server.\n# - Adjust the threadiness configuration to control the number of threads and\n",
                      "markdown": "`# the options:\n#\n# - Uncomment the relevant configuration options related to the gRPC server.\n# - Update the paths of the generated certificates for mutual TLS authentication\n#   if you choose to use mTLS.\n# - Specify the address to bind and expose the gRPC server.\n# - Adjust the threadiness configuration to control the number of threads and\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 644,
                  "startColumn": 1,
                  "endLine": 644,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n# Falco supports various output channels, such as syslog, stdout, file, gRPC,\n# webhook, and more. You can enable or disable these channels as needed to\n# control where Falco alerts and log messages are directed. This flexibility\n# allows seamless integration with your preferred logging and alerting systems.\n# Multiple outputs can be enabled simultaneously.\n\n",
                    "rendered": {
                      "text": "\n# Falco supports various output channels, such as syslog, stdout, file, gRPC,\n# webhook, and more. You can enable or disable these channels as needed to\n# control where Falco alerts and log messages are directed. This flexibility\n# allows seamless integration with your preferred logging and alerting systems.\n# Multiple outputs can be enabled simultaneously.\n\n",
                      "markdown": "`\n# Falco supports various output channels, such as syslog, stdout, file, gRPC,\n# webhook, and more. You can enable or disable these channels as needed to\n# control where Falco alerts and log messages are directed. This flexibility\n# allows seamless integration with your preferred logging and alerting systems.\n# Multiple outputs can be enabled simultaneously.\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 633,
                  "startColumn": 1,
                  "endLine": 633,
                  "endColumn": 5,
                  "snippet": {
                    "text": "#       - evt.hostname\n#\n# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n# property you will find three new ones: \"evt.cpu\", \"home_directory\" which will contain the value of the\n# environment variable $HOME, and \"evt.hostname\" which will contain the hostname.\n\n",
                    "rendered": {
                      "text": "#       - evt.hostname\n#\n# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n# property you will find three new ones: \"evt.cpu\", \"home_directory\" which will contain the value of the\n# environment variable $HOME, and \"evt.hostname\" which will contain the hostname.\n\n",
                      "markdown": "`#       - evt.hostname\n#\n# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n# property you will find three new ones: \"evt.cpu\", \"home_directory\" which will contain the value of the\n# environment variable $HOME, and \"evt.hostname\" which will contain the hostname.\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 557,
                  "startColumn": 4,
                  "endLine": 557,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#\n# The `rule_matching` configuration key's values are:\n#  - `first`: Falco stops checking conditions of rules against upcoming event\n#    at the first matching rule\n#  - `all`: Falco will continue checking conditions of rules even if a matching \n#    one was already found\n#\n",
                    "rendered": {
                      "text": "#\n# The `rule_matching` configuration key's values are:\n#  - `first`: Falco stops checking conditions of rules against upcoming event\n#    at the first matching rule\n#  - `all`: Falco will continue checking conditions of rules even if a matching \n#    one was already found\n#\n",
                      "markdown": "`#\n# The `rule_matching` configuration key's values are:\n#  - `first`: Falco stops checking conditions of rules against upcoming event\n#    at the first matching rule\n#  - `all`: Falco will continue checking conditions of rules even if a matching \n#    one was already found\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 543,
                  "startColumn": 10,
                  "endLine": 543,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# field of the rules in the generated JSON output. The \"tags\" field provides\n# additional metadata associated with the rule. To reduce the logging volume,\n# if the tags associated with the rule are not needed for your use case or can\n# be added at a later stage, it is recommended to turn it off.\njson_include_tags_property: true\n\n# [Stable] `buffered_outputs`\n",
                    "rendered": {
                      "text": "# field of the rules in the generated JSON output. The \"tags\" field provides\n# additional metadata associated with the rule. To reduce the logging volume,\n# if the tags associated with the rule are not needed for your use case or can\n# be added at a later stage, it is recommended to turn it off.\njson_include_tags_property: true\n\n# [Stable] `buffered_outputs`\n",
                      "markdown": "`# field of the rules in the generated JSON output. The \"tags\" field provides\n# additional metadata associated with the rule. To reduce the logging volume,\n# if the tags associated with the rule are not needed for your use case or can\n# be added at a later stage, it is recommended to turn it off.\njson_include_tags_property: true\n\n# [Stable] `buffered_outputs`\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 506,
                  "startColumn": 1,
                  "endLine": 506,
                  "endColumn": 10,
                  "snippet": {
                    "text": "#\n# Any rule with a priority level more severe than or equal to the specified\n# minimum level will be loaded and run by Falco. This allows you to filter and\n# control the rules based on their severity, ensuring that only rules of a\n# certain priority or higher are active and evaluated by Falco. Supported\n# levels: \"emergency\", \"alert\", \"critical\", \"error\", \"warning\", \"notice\",\n# \"info\", \"debug\"\n",
                    "rendered": {
                      "text": "#\n# Any rule with a priority level more severe than or equal to the specified\n# minimum level will be loaded and run by Falco. This allows you to filter and\n# control the rules based on their severity, ensuring that only rules of a\n# certain priority or higher are active and evaluated by Falco. Supported\n# levels: \"emergency\", \"alert\", \"critical\", \"error\", \"warning\", \"notice\",\n# \"info\", \"debug\"\n",
                      "markdown": "`#\n# Any rule with a priority level more severe than or equal to the specified\n# minimum level will be loaded and run by Falco. This allows you to filter and\n# control the rules based on their severity, ensuring that only rules of a\n# certain priority or higher are active and evaluated by Falco. Supported\n# levels: \"emergency\", \"alert\", \"critical\", \"error\", \"warning\", \"notice\",\n# \"info\", \"debug\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 443,
                  "startColumn": 34,
                  "endLine": 444,
                  "snippet": {
                    "text": "# system will continue to evolve with more specialized functionality in future\n# releases.\n#\n# Please refer to the plugins repo at\n# https://github.com/falcosecurity/plugins/blob/master/plugins/ for detailed\n# documentation on the available plugins. This repository provides comprehensive\n# information about each plugin and how to utilize them with Falco.\n#\n",
                    "rendered": {
                      "text": "# system will continue to evolve with more specialized functionality in future\n# releases.\n#\n# Please refer to the plugins repo at\n# https://github.com/falcosecurity/plugins/blob/master/plugins/ for detailed\n# documentation on the available plugins. This repository provides comprehensive\n# information about each plugin and how to utilize them with Falco.\n#\n",
                      "markdown": "`# system will continue to evolve with more specialized functionality in future\n# releases.\n#\n# Please refer to the plugins repo at\n# https://github.com/falcosecurity/plugins/blob/master/plugins/ for detailed\n# documentation on the available plugins. This repository provides comprehensive\n# information about each plugin and how to utilize them with Falco.\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 38,
                  "endLine": 304,
                  "endColumn": 42,
                  "snippet": {
                    "text": "# \n# --- [Suggestions]\n#\n# The buffer size was previously fixed at 8 MB (index 4). You now have the\n# option to adjust the size based on your needs. Increasing the size, such as to\n# 16 MB (index 5), can reduce syscall drops in heavy production systems, but may\n# impact performance. Decreasing the size can speed up the system but may\n",
                    "rendered": {
                      "text": "# \n# --- [Suggestions]\n#\n# The buffer size was previously fixed at 8 MB (index 4). You now have the\n# option to adjust the size based on your needs. Increasing the size, such as to\n# 16 MB (index 5), can reduce syscall drops in heavy production systems, but may\n# impact performance. Decreasing the size can speed up the system but may\n",
                      "markdown": "`# \n# --- [Suggestions]\n#\n# The buffer size was previously fixed at 8 MB (index 4). You now have the\n# option to adjust the size based on your needs. Increasing the size, such as to\n# 16 MB (index 5), can reduce syscall drops in heavy production systems, but may\n# impact performance. Decreasing the size can speed up the system but may\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 8,
                  "endLine": 271,
                  "endColumn": 17,
                  "snippet": {
                    "text": "# events, allowing them to be transferred from the kernel to the userspace\n# efficiently. The buffer size for each online CPU is determined by the buffer\n# index, and each CPU has its own dedicated buffer. Adjusting this index allows\n# you to control the overall size of the syscall buffers.\n#\n# --- [Usage]\n#\n",
                    "rendered": {
                      "text": "# events, allowing them to be transferred from the kernel to the userspace\n# efficiently. The buffer size for each online CPU is determined by the buffer\n# index, and each CPU has its own dedicated buffer. Adjusting this index allows\n# you to control the overall size of the syscall buffers.\n#\n# --- [Usage]\n#\n",
                      "markdown": "`# events, allowing them to be transferred from the kernel to the userspace\n# efficiently. The buffer size for each online CPU is determined by the buffer\n# index, and each CPU has its own dedicated buffer. Adjusting this index allows\n# you to control the overall size of the syscall buffers.\n#\n# --- [Usage]\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 75,
                  "endLine": 168,
                  "snippet": {
                    "text": "\n# NOTICE: Before Falco 0.38, this config key was `rules_file` (singular form), which is now deprecated in favor of `rules_files` (plural form).\n#\n# Falco rules can be specified using files or directories, which are loaded at\n# startup.\n#\n# If the entry is a file, it will be read directly. If the entry is a directory,\n# all files within that directory will be read in alphabetical order.\n",
                    "rendered": {
                      "text": "\n# NOTICE: Before Falco 0.38, this config key was `rules_file` (singular form), which is now deprecated in favor of `rules_files` (plural form).\n#\n# Falco rules can be specified using files or directories, which are loaded at\n# startup.\n#\n# If the entry is a file, it will be read directly. If the entry is a directory,\n# all files within that directory will be read in alphabetical order.\n",
                      "markdown": "`\n# NOTICE: Before Falco 0.38, this config key was `rules_file` (singular form), which is now deprecated in favor of `rules_files` (plural form).\n#\n# Falco rules can be specified using files or directories, which are loaded at\n# startup.\n#\n# If the entry is a file, it will be read directly. If the entry is a directory,\n# all files within that directory will be read in alphabetical order.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 35,
                  "endLine": 84,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# * Stable -> General Availability (GA) features for which long-term support is expected.\n# * Deprecated -> Deprecated keys, soon to be removed.\n#\n# For more info, please take a look at the proposal: https://github.com/falcosecurity/falco/blob/master/proposals/20231220-features-adoption-and-deprecation.md.\n\n\n################################\n",
                    "rendered": {
                      "text": "# * Stable -> General Availability (GA) features for which long-term support is expected.\n# * Deprecated -> Deprecated keys, soon to be removed.\n#\n# For more info, please take a look at the proposal: https://github.com/falcosecurity/falco/blob/master/proposals/20231220-features-adoption-and-deprecation.md.\n\n\n################################\n",
                      "markdown": "`# * Stable -> General Availability (GA) features for which long-term support is expected.\n# * Deprecated -> Deprecated keys, soon to be removed.\n#\n# For more info, please take a look at the proposal: https://github.com/falcosecurity/falco/blob/master/proposals/20231220-features-adoption-and-deprecation.md.\n\n\n################################\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 94,
                  "endLine": 79,
                  "endColumn": 98,
                  "snippet": {
                    "text": "########################\n\n# As per features adoption and deprecation proposal we support 4 levels of configuration keys maturity:\n# * Sandbox -> Experimental/alpha features, not recommended for production use, can be removed at any time without further notice.\n# * Incubating -> Beta features, long-term support is not guaranteed.\n# * Stable -> General Availability (GA) features for which long-term support is expected.\n# * Deprecated -> Deprecated keys, soon to be removed.\n",
                    "rendered": {
                      "text": "########################\n\n# As per features adoption and deprecation proposal we support 4 levels of configuration keys maturity:\n# * Sandbox -> Experimental/alpha features, not recommended for production use, can be removed at any time without further notice.\n# * Incubating -> Beta features, long-term support is not guaranteed.\n# * Stable -> General Availability (GA) features for which long-term support is expected.\n# * Deprecated -> Deprecated keys, soon to be removed.\n",
                      "markdown": "`########################\n\n# As per features adoption and deprecation proposal we support 4 levels of configuration keys maturity:\n# * Sandbox -> Experimental/alpha features, not recommended for production use, can be removed at any time without further notice.\n# * Incubating -> Beta features, long-term support is not guaranteed.\n# * Stable -> General Availability (GA) features for which long-term support is expected.\n# * Deprecated -> Deprecated keys, soon to be removed.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 38,
                  "endLine": 9,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1240,
                  "startColumn": 67,
                  "endLine": 1240,
                  "endColumn": 71,
                  "snippet": {
                    "text": "# process rules: [clone, clone3, fork, vfork, execve, execveat, close]\n#\n# For networking related events: While you can log `connect` or `accept*`\n# syscalls without the socket syscall, the log will not contain the ip tuples.\n# Additionally, for `listen` and `accept*` syscalls, the `bind` syscall is also\n# necessary.\n#\n",
                    "rendered": {
                      "text": "# process rules: [clone, clone3, fork, vfork, execve, execveat, close]\n#\n# For networking related events: While you can log `connect` or `accept*`\n# syscalls without the socket syscall, the log will not contain the ip tuples.\n# Additionally, for `listen` and `accept*` syscalls, the `bind` syscall is also\n# necessary.\n#\n",
                      "markdown": "`# process rules: [clone, clone3, fork, vfork, execve, execveat, close]\n#\n# For networking related events: While you can log `connect` or `accept*`\n# syscalls without the socket syscall, the log will not contain the ip tuples.\n# Additionally, for `listen` and `accept*` syscalls, the `bind` syscall is also\n# necessary.\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1092,
                  "startColumn": 50,
                  "endLine": 1092,
                  "endColumn": 56,
                  "snippet": {
                    "text": "# configuration `/proc/sys/kernel/bpf_stats_enabled` must be set. This option,\n# or an equivalent statistics feature, is not available for non `*bpf*` drivers.\n# Additionally, please be aware that the current implementation of `libbpf` does\n# not support granularity of statistics at the bpf tail call level.\n#\n# `include_empty_values`: When the option is set to true, fields with an empty\n# numeric value will be included in the output. However, this rule does not\n",
                    "rendered": {
                      "text": "# configuration `/proc/sys/kernel/bpf_stats_enabled` must be set. This option,\n# or an equivalent statistics feature, is not available for non `*bpf*` drivers.\n# Additionally, please be aware that the current implementation of `libbpf` does\n# not support granularity of statistics at the bpf tail call level.\n#\n# `include_empty_values`: When the option is set to true, fields with an empty\n# numeric value will be included in the output. However, this rule does not\n",
                      "markdown": "`# configuration `/proc/sys/kernel/bpf_stats_enabled` must be set. This option,\n# or an equivalent statistics feature, is not available for non `*bpf*` drivers.\n# Additionally, please be aware that the current implementation of `libbpf` does\n# not support granularity of statistics at the bpf tail call level.\n#\n# `include_empty_values`: When the option is set to true, fields with an empty\n# numeric value will be included in the output. However, this rule does not\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1087,
                  "startColumn": 27,
                  "endLine": 1087,
                  "endColumn": 33,
                  "snippet": {
                    "text": "#\n# `libbpf_stats_enabled`: Exposes statistics similar to `bpftool prog show`,\n# providing information such as the number of invocations of each BPF program\n# attached by Falco and the time spent in each program measured in nanoseconds.\n# To enable this feature, the kernel must be >= 5.1, and the kernel\n# configuration `/proc/sys/kernel/bpf_stats_enabled` must be set. This option,\n# or an equivalent statistics feature, is not available for non `*bpf*` drivers.\n",
                    "rendered": {
                      "text": "#\n# `libbpf_stats_enabled`: Exposes statistics similar to `bpftool prog show`,\n# providing information such as the number of invocations of each BPF program\n# attached by Falco and the time spent in each program measured in nanoseconds.\n# To enable this feature, the kernel must be >= 5.1, and the kernel\n# configuration `/proc/sys/kernel/bpf_stats_enabled` must be set. This option,\n# or an equivalent statistics feature, is not available for non `*bpf*` drivers.\n",
                      "markdown": "`#\n# `libbpf_stats_enabled`: Exposes statistics similar to `bpftool prog show`,\n# providing information such as the number of invocations of each BPF program\n# attached by Falco and the time spent in each program measured in nanoseconds.\n# To enable this feature, the kernel must be >= 5.1, and the kernel\n# configuration `/proc/sys/kernel/bpf_stats_enabled` must be set. This option,\n# or an equivalent statistics feature, is not available for non `*bpf*` drivers.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1031,
                  "startColumn": 20,
                  "endLine": 1031,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# w - week - assuming a week has always 7d\n# y - year - assuming a year has always 365d\n#\n# Example of a valid time duration: 1h30m20s10ms\n#\n# A minimum interval of 100ms is enforced for metric collection. However, for\n# production environments, we recommend selecting one of the following intervals\n",
                    "rendered": {
                      "text": "# w - week - assuming a week has always 7d\n# y - year - assuming a year has always 365d\n#\n# Example of a valid time duration: 1h30m20s10ms\n#\n# A minimum interval of 100ms is enforced for metric collection. However, for\n# production environments, we recommend selecting one of the following intervals\n",
                      "markdown": "`# w - week - assuming a week has always 7d\n# y - year - assuming a year has always 365d\n#\n# Example of a valid time duration: 1h30m20s10ms\n#\n# A minimum interval of 100ms is enforced for metric collection. However, for\n# production environments, we recommend selecting one of the following intervals\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1020,
                  "startColumn": 1,
                  "endLine": 1020,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# used by Prometheus.\n# https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations\n#\n# Time durations are specified as a number, followed immediately by one of the\n# following units:\n# \n# ms - millisecond\n",
                    "rendered": {
                      "text": "# used by Prometheus.\n# https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations\n#\n# Time durations are specified as a number, followed immediately by one of the\n# following units:\n# \n# ms - millisecond\n",
                      "markdown": "`# used by Prometheus.\n# https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations\n#\n# Time durations are specified as a number, followed immediately by one of the\n# following units:\n# \n# ms - millisecond\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 1016,
                  "startColumn": 53,
                  "endLine": 1016,
                  "endColumn": 59,
                  "snippet": {
                    "text": "#\n# `enabled`: Disabled by default.\n#\n# `interval`: The stats interval in Falco follows the time duration definitions\n# used by Prometheus.\n# https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations\n#\n",
                    "rendered": {
                      "text": "#\n# `enabled`: Disabled by default.\n#\n# `interval`: The stats interval in Falco follows the time duration definitions\n# used by Prometheus.\n# https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations\n#\n",
                      "markdown": "`#\n# `enabled`: Disabled by default.\n#\n# `interval`: The stats interval in Falco follows the time duration definitions\n# used by Prometheus.\n# https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 949,
                  "startColumn": 15,
                  "endLine": 949,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Enabled by default, but requires Falco rules config `priority` set to `debug`.\n# Emits a Falco rule named \"Falco internal: syscall event drop\" as many times in\n# a given time period as dictated by the settings. Statistics here reflect the\n# delta in a 1s time period.\n#\n# If instead you prefer periodic metrics of monotonic counters at a regular\n# interval, which include syscall drop statistics and additional metrics,\n",
                    "rendered": {
                      "text": "# Enabled by default, but requires Falco rules config `priority` set to `debug`.\n# Emits a Falco rule named \"Falco internal: syscall event drop\" as many times in\n# a given time period as dictated by the settings. Statistics here reflect the\n# delta in a 1s time period.\n#\n# If instead you prefer periodic metrics of monotonic counters at a regular\n# interval, which include syscall drop statistics and additional metrics,\n",
                      "markdown": "`# Enabled by default, but requires Falco rules config `priority` set to `debug`.\n# Emits a Falco rule named \"Falco internal: syscall event drop\" as many times in\n# a given time period as dictated by the settings. Statistics here reflect the\n# delta in a 1s time period.\n#\n# If instead you prefer periodic metrics of monotonic counters at a regular\n# interval, which include syscall drop statistics and additional metrics,\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 948,
                  "startColumn": 9,
                  "endLine": 948,
                  "endColumn": 15,
                  "snippet": {
                    "text": "#\n# Enabled by default, but requires Falco rules config `priority` set to `debug`.\n# Emits a Falco rule named \"Falco internal: syscall event drop\" as many times in\n# a given time period as dictated by the settings. Statistics here reflect the\n# delta in a 1s time period.\n#\n# If instead you prefer periodic metrics of monotonic counters at a regular\n",
                    "rendered": {
                      "text": "#\n# Enabled by default, but requires Falco rules config `priority` set to `debug`.\n# Emits a Falco rule named \"Falco internal: syscall event drop\" as many times in\n# a given time period as dictated by the settings. Statistics here reflect the\n# delta in a 1s time period.\n#\n# If instead you prefer periodic metrics of monotonic counters at a regular\n",
                      "markdown": "`#\n# Enabled by default, but requires Falco rules config `priority` set to `debug`.\n# Emits a Falco rule named \"Falco internal: syscall event drop\" as many times in\n# a given time period as dictated by the settings. Statistics here reflect the\n# delta in a 1s time period.\n#\n# If instead you prefer periodic metrics of monotonic counters at a regular\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 911,
                  "startColumn": 62,
                  "endLine": 911,
                  "endColumn": 68,
                  "snippet": {
                    "text": "# timeouts without an event after which Falco will generate an alert, but please\n# note that this requires setting Falco's operational logs `log_level` to a\n# minimum of `notice`. The default value is set to 1000 consecutive timeouts\n# without receiving any events. The mapping of this value to a time interval\n# depends on the CPU frequency.\nsyscall_event_timeouts:\n  max_consecutives: 1000\n",
                    "rendered": {
                      "text": "# timeouts without an event after which Falco will generate an alert, but please\n# note that this requires setting Falco's operational logs `log_level` to a\n# minimum of `notice`. The default value is set to 1000 consecutive timeouts\n# without receiving any events. The mapping of this value to a time interval\n# depends on the CPU frequency.\nsyscall_event_timeouts:\n  max_consecutives: 1000\n",
                      "markdown": "`# timeouts without an event after which Falco will generate an alert, but please\n# note that this requires setting Falco's operational logs `log_level` to a\n# minimum of `notice`. The default value is set to 1000 consecutive timeouts\n# without receiving any events. The mapping of this value to a time interval\n# depends on the CPU frequency.\nsyscall_event_timeouts:\n  max_consecutives: 1000\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 889,
                  "startColumn": 5,
                  "endLine": 889,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# error.\n#\n# Falco actively monitors the performance of output channels. With this setting\n# the timeout error can be logged, but please note that this requires setting\n# Falco's operational logs `log_level` to a minimum of `notice`.\n#\n# It's important to note that Falco outputs will not be discarded from the\n",
                    "rendered": {
                      "text": "# error.\n#\n# Falco actively monitors the performance of output channels. With this setting\n# the timeout error can be logged, but please note that this requires setting\n# Falco's operational logs `log_level` to a minimum of `notice`.\n#\n# It's important to note that Falco outputs will not be discarded from the\n",
                      "markdown": "`# error.\n#\n# Falco actively monitors the performance of output channels. With this setting\n# the timeout error can be logged, but please note that this requires setting\n# Falco's operational logs `log_level` to a minimum of `notice`.\n#\n# It's important to note that Falco outputs will not be discarded from the\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 885,
                  "startColumn": 67,
                  "endLine": 886,
                  "snippet": {
                    "text": "# The `output_timeout` parameter specifies the duration, in milliseconds, to\n# wait before considering the deadline exceeded. By default, the timeout is set\n# to 2000ms (2 seconds), meaning that the consumer of Falco outputs can block\n# the Falco output channel for up to 2 seconds without triggering a timeout\n# error.\n#\n# Falco actively monitors the performance of output channels. With this setting\n# the timeout error can be logged, but please note that this requires setting\n",
                    "rendered": {
                      "text": "# The `output_timeout` parameter specifies the duration, in milliseconds, to\n# wait before considering the deadline exceeded. By default, the timeout is set\n# to 2000ms (2 seconds), meaning that the consumer of Falco outputs can block\n# the Falco output channel for up to 2 seconds without triggering a timeout\n# error.\n#\n# Falco actively monitors the performance of output channels. With this setting\n# the timeout error can be logged, but please note that this requires setting\n",
                      "markdown": "`# The `output_timeout` parameter specifies the duration, in milliseconds, to\n# wait before considering the deadline exceeded. By default, the timeout is set\n# to 2000ms (2 seconds), meaning that the consumer of Falco outputs can block\n# the Falco output channel for up to 2 seconds without triggering a timeout\n# error.\n#\n# Falco actively monitors the performance of output channels. With this setting\n# the timeout error can be logged, but please note that this requires setting\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 883,
                  "startColumn": 64,
                  "endLine": 883,
                  "endColumn": 73,
                  "snippet": {
                    "text": "# resource constraints, or performance bottlenecks can cause timeouts.\n#\n# The `output_timeout` parameter specifies the duration, in milliseconds, to\n# wait before considering the deadline exceeded. By default, the timeout is set\n# to 2000ms (2 seconds), meaning that the consumer of Falco outputs can block\n# the Falco output channel for up to 2 seconds without triggering a timeout\n# error.\n",
                    "rendered": {
                      "text": "# resource constraints, or performance bottlenecks can cause timeouts.\n#\n# The `output_timeout` parameter specifies the duration, in milliseconds, to\n# wait before considering the deadline exceeded. By default, the timeout is set\n# to 2000ms (2 seconds), meaning that the consumer of Falco outputs can block\n# the Falco output channel for up to 2 seconds without triggering a timeout\n# error.\n",
                      "markdown": "`# resource constraints, or performance bottlenecks can cause timeouts.\n#\n# The `output_timeout` parameter specifies the duration, in milliseconds, to\n# wait before considering the deadline exceeded. By default, the timeout is set\n# to 2000ms (2 seconds), meaning that the consumer of Falco outputs can block\n# the Falco output channel for up to 2 seconds without triggering a timeout\n# error.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 878,
                  "startColumn": 1,
                  "endLine": 878,
                  "endColumn": 10,
                  "snippet": {
                    "text": "#\n# A timeout error occurs when a process or operation takes longer to complete\n# than the allowed or expected time limit. In the context of Falco, an output\n# timeout error refers to the situation where an output channel fails to deliver\n# an alert within a specified deadline. Various reasons, such as network issues,\n# resource constraints, or performance bottlenecks can cause timeouts.\n#\n",
                    "rendered": {
                      "text": "#\n# A timeout error occurs when a process or operation takes longer to complete\n# than the allowed or expected time limit. In the context of Falco, an output\n# timeout error refers to the situation where an output channel fails to deliver\n# an alert within a specified deadline. Various reasons, such as network issues,\n# resource constraints, or performance bottlenecks can cause timeouts.\n#\n",
                      "markdown": "`#\n# A timeout error occurs when a process or operation takes longer to complete\n# than the allowed or expected time limit. In the context of Falco, an output\n# timeout error refers to the situation where an output channel fails to deliver\n# an alert within a specified deadline. Various reasons, such as network issues,\n# resource constraints, or performance bottlenecks can cause timeouts.\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 877,
                  "startColumn": 30,
                  "endLine": 877,
                  "endColumn": 36,
                  "snippet": {
                    "text": "# Generates Falco operational logs when `log_level=notice` at minimum\n#\n# A timeout error occurs when a process or operation takes longer to complete\n# than the allowed or expected time limit. In the context of Falco, an output\n# timeout error refers to the situation where an output channel fails to deliver\n# an alert within a specified deadline. Various reasons, such as network issues,\n# resource constraints, or performance bottlenecks can cause timeouts.\n",
                    "rendered": {
                      "text": "# Generates Falco operational logs when `log_level=notice` at minimum\n#\n# A timeout error occurs when a process or operation takes longer to complete\n# than the allowed or expected time limit. In the context of Falco, an output\n# timeout error refers to the situation where an output channel fails to deliver\n# an alert within a specified deadline. Various reasons, such as network issues,\n# resource constraints, or performance bottlenecks can cause timeouts.\n",
                      "markdown": "`# Generates Falco operational logs when `log_level=notice` at minimum\n#\n# A timeout error occurs when a process or operation takes longer to complete\n# than the allowed or expected time limit. In the context of Falco, an output\n# timeout error refers to the situation where an output channel fails to deliver\n# an alert within a specified deadline. Various reasons, such as network issues,\n# resource constraints, or performance bottlenecks can cause timeouts.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 876,
                  "startColumn": 3,
                  "endLine": 876,
                  "endColumn": 12,
                  "snippet": {
                    "text": "#\n# Generates Falco operational logs when `log_level=notice` at minimum\n#\n# A timeout error occurs when a process or operation takes longer to complete\n# than the allowed or expected time limit. In the context of Falco, an output\n# timeout error refers to the situation where an output channel fails to deliver\n# an alert within a specified deadline. Various reasons, such as network issues,\n",
                    "rendered": {
                      "text": "#\n# Generates Falco operational logs when `log_level=notice` at minimum\n#\n# A timeout error occurs when a process or operation takes longer to complete\n# than the allowed or expected time limit. In the context of Falco, an output\n# timeout error refers to the situation where an output channel fails to deliver\n# an alert within a specified deadline. Various reasons, such as network issues,\n",
                      "markdown": "`#\n# Generates Falco operational logs when `log_level=notice` at minimum\n#\n# A timeout error occurs when a process or operation takes longer to complete\n# than the allowed or expected time limit. In the context of Falco, an output\n# timeout error refers to the situation where an output channel fails to deliver\n# an alert within a specified deadline. Various reasons, such as network issues,\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 808,
                  "startColumn": 66,
                  "endLine": 808,
                  "endColumn": 70,
                  "snippet": {
                    "text": "# key/cert as follows:\n#\n# $ openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out\n# certificate.pem $ cat certificate.pem key.pem > falco.pem $ sudo cp falco.pem\n# /etc/falco/falco.pem\nwebserver:\n  enabled: true\n",
                    "rendered": {
                      "text": "# key/cert as follows:\n#\n# $ openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out\n# certificate.pem $ cat certificate.pem key.pem > falco.pem $ sudo cp falco.pem\n# /etc/falco/falco.pem\nwebserver:\n  enabled: true\n",
                      "markdown": "`# key/cert as follows:\n#\n# $ openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out\n# certificate.pem $ cat certificate.pem key.pem > falco.pem $ sudo cp falco.pem\n# /etc/falco/falco.pem\nwebserver:\n  enabled: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 808,
                  "startColumn": 19,
                  "endLine": 808,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# key/cert as follows:\n#\n# $ openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out\n# certificate.pem $ cat certificate.pem key.pem > falco.pem $ sudo cp falco.pem\n# /etc/falco/falco.pem\nwebserver:\n  enabled: true\n",
                    "rendered": {
                      "text": "# key/cert as follows:\n#\n# $ openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out\n# certificate.pem $ cat certificate.pem key.pem > falco.pem $ sudo cp falco.pem\n# /etc/falco/falco.pem\nwebserver:\n  enabled: true\n",
                      "markdown": "`# key/cert as follows:\n#\n# $ openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out\n# certificate.pem $ cat certificate.pem key.pem > falco.pem $ sudo cp falco.pem\n# /etc/falco/falco.pem\nwebserver:\n  enabled: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 807,
                  "startColumn": 3,
                  "endLine": 807,
                  "endColumn": 12,
                  "snippet": {
                    "text": "# corresponding key that are contained in a single file. You can generate a\n# key/cert as follows:\n#\n# $ openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out\n# certificate.pem $ cat certificate.pem key.pem > falco.pem $ sudo cp falco.pem\n# /etc/falco/falco.pem\nwebserver:\n",
                    "rendered": {
                      "text": "# corresponding key that are contained in a single file. You can generate a\n# key/cert as follows:\n#\n# $ openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out\n# certificate.pem $ cat certificate.pem key.pem > falco.pem $ sudo cp falco.pem\n# /etc/falco/falco.pem\nwebserver:\n",
                      "markdown": "`# corresponding key that are contained in a single file. You can generate a\n# key/cert as follows:\n#\n# $ openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out\n# certificate.pem $ cat certificate.pem key.pem > falco.pem $ sudo cp falco.pem\n# /etc/falco/falco.pem\nwebserver:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 722,
                  "startColumn": 34,
                  "endLine": 722,
                  "endColumn": 40,
                  "snippet": {
                    "text": "program_output:\n  enabled: false\n  keep_alive: false\n  program: \"jq '{text: .output}' | curl -d @- -X POST https://hooks.slack.com/services/XXX\"\n\n# [Stable] `grpc_output`\n#\n",
                    "rendered": {
                      "text": "program_output:\n  enabled: false\n  keep_alive: false\n  program: \"jq '{text: .output}' | curl -d @- -X POST https://hooks.slack.com/services/XXX\"\n\n# [Stable] `grpc_output`\n#\n",
                      "markdown": "`program_output:\n  enabled: false\n  keep_alive: false\n  program: \"jq '{text: .output}' | curl -d @- -X POST https://hooks.slack.com/services/XXX\"\n\n# [Stable] `grpc_output`\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 713,
                  "startColumn": 18,
                  "endLine": 713,
                  "endColumn": 22,
                  "snippet": {
                    "text": "#   - logging (alternate method than syslog):\n#         program: logger -t falco-test\n#   - send over a network connection:\n#         program: nc host.example.com 80\n# If `keep_alive` is set to `true`, the program will be started once and\n# continuously written to, with each output message on its own line. If\n# `keep_alive` is set to `false`, the program will be re-spawned for each output\n",
                    "rendered": {
                      "text": "#   - logging (alternate method than syslog):\n#         program: logger -t falco-test\n#   - send over a network connection:\n#         program: nc host.example.com 80\n# If `keep_alive` is set to `true`, the program will be started once and\n# continuously written to, with each output message on its own line. If\n# `keep_alive` is set to `false`, the program will be re-spawned for each output\n",
                      "markdown": "`#   - logging (alternate method than syslog):\n#         program: logger -t falco-test\n#   - send over a network connection:\n#         program: nc host.example.com 80\n# If `keep_alive` is set to `true`, the program will be started once and\n# continuously written to, with each output message on its own line. If\n# `keep_alive` is set to `false`, the program will be re-spawned for each output\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 709,
                  "startColumn": 42,
                  "endLine": 709,
                  "endColumn": 48,
                  "snippet": {
                    "text": "#\n# Possible additional things you might want to do with program output:\n#   - send to a slack webhook:\n#         program: \"jq '{text: .output}' | curl -d @- -X POST https://hooks.slack.com/services/XXX\"\n#   - logging (alternate method than syslog):\n#         program: logger -t falco-test\n#   - send over a network connection:\n",
                    "rendered": {
                      "text": "#\n# Possible additional things you might want to do with program output:\n#   - send to a slack webhook:\n#         program: \"jq '{text: .output}' | curl -d @- -X POST https://hooks.slack.com/services/XXX\"\n#   - logging (alternate method than syslog):\n#         program: logger -t falco-test\n#   - send over a network connection:\n",
                      "markdown": "`#\n# Possible additional things you might want to do with program output:\n#   - send to a slack webhook:\n#         program: \"jq '{text: .output}' | curl -d @- -X POST https://hooks.slack.com/services/XXX\"\n#   - logging (alternate method than syslog):\n#         program: logger -t falco-test\n#   - send over a network connection:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 634,
                  "startColumn": 19,
                  "endLine": 634,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#\n# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n# property you will find three new ones: \"evt.cpu\", \"home_directory\" which will contain the value of the\n# environment variable $HOME, and \"evt.hostname\" which will contain the hostname.\n\n\n",
                    "rendered": {
                      "text": "#\n# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n# property you will find three new ones: \"evt.cpu\", \"home_directory\" which will contain the value of the\n# environment variable $HOME, and \"evt.hostname\" which will contain the hostname.\n\n\n",
                      "markdown": "`#\n# In the example above every event coming from the syscall source will get an extra message\n# at the end telling the CPU number. In addition, if `json_output` is true, in the \"output_fields\"\n# property you will find three new ones: \"evt.cpu\", \"home_directory\" which will contain the value of the\n# environment variable $HOME, and \"evt.hostname\" which will contain the hostname.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 497,
                  "startColumn": 50,
                  "endLine": 497,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n# [Incubating] `buffer_format_base64`\n#\n# When enabled, Falco will output data buffer with base64 encoding. This is useful\n# for encoding binary data that needs to be used over media designed to consume\n# this format.\nbuffer_format_base64: false\n",
                    "rendered": {
                      "text": "\n# [Incubating] `buffer_format_base64`\n#\n# When enabled, Falco will output data buffer with base64 encoding. This is useful\n# for encoding binary data that needs to be used over media designed to consume\n# this format.\nbuffer_format_base64: false\n",
                      "markdown": "`\n# [Incubating] `buffer_format_base64`\n#\n# When enabled, Falco will output data buffer with base64 encoding. This is useful\n# for encoding binary data that needs to be used over media designed to consume\n# this format.\nbuffer_format_base64: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 491,
                  "startColumn": 55,
                  "endLine": 491,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# [Stable] `time_format_iso_8601`\n#\n# When enabled, Falco will display log and output messages with times in the ISO\n# 8601 format. By default, times are shown in the local time zone determined by\n# the /etc/localtime configuration.\ntime_format_iso_8601: false\n\n",
                    "rendered": {
                      "text": "# [Stable] `time_format_iso_8601`\n#\n# When enabled, Falco will display log and output messages with times in the ISO\n# 8601 format. By default, times are shown in the local time zone determined by\n# the /etc/localtime configuration.\ntime_format_iso_8601: false\n\n",
                      "markdown": "`# [Stable] `time_format_iso_8601`\n#\n# When enabled, Falco will display log and output messages with times in the ISO\n# 8601 format. By default, times are shown in the local time zone determined by\n# the /etc/localtime configuration.\ntime_format_iso_8601: false\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 35,
                  "endLine": 390,
                  "endColumn": 41,
                  "snippet": {
                    "text": "# The default choice of index 2 (one syscall buffer for each CPU pair) was made\n# because the modern bpf probe utilizes a different memory allocation strategy\n# compared to the other two drivers (bpf and kernel module). However, you have\n# the flexibility to experiment and find the optimal configuration for your\n# system.\n# \n# When considering a fixed buf_size_preset and a fixed buffer dimension:\n",
                    "rendered": {
                      "text": "# The default choice of index 2 (one syscall buffer for each CPU pair) was made\n# because the modern bpf probe utilizes a different memory allocation strategy\n# compared to the other two drivers (bpf and kernel module). However, you have\n# the flexibility to experiment and find the optimal configuration for your\n# system.\n# \n# When considering a fixed buf_size_preset and a fixed buffer dimension:\n",
                      "markdown": "`# The default choice of index 2 (one syscall buffer for each CPU pair) was made\n# because the modern bpf probe utilizes a different memory allocation strategy\n# compared to the other two drivers (bpf and kernel module). However, you have\n# the flexibility to experiment and find the optimal configuration for your\n# system.\n# \n# When considering a fixed buf_size_preset and a fixed buffer dimension:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/falco.yaml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 101,
                  "endLine": 79,
                  "endColumn": 107,
                  "snippet": {
                    "text": "########################\n\n# As per features adoption and deprecation proposal we support 4 levels of configuration keys maturity:\n# * Sandbox -> Experimental/alpha features, not recommended for production use, can be removed at any time without further notice.\n# * Incubating -> Beta features, long-term support is not guaranteed.\n# * Stable -> General Availability (GA) features for which long-term support is expected.\n# * Deprecated -> Deprecated keys, soon to be removed.\n",
                    "rendered": {
                      "text": "########################\n\n# As per features adoption and deprecation proposal we support 4 levels of configuration keys maturity:\n# * Sandbox -> Experimental/alpha features, not recommended for production use, can be removed at any time without further notice.\n# * Incubating -> Beta features, long-term support is not guaranteed.\n# * Stable -> General Availability (GA) features for which long-term support is expected.\n# * Deprecated -> Deprecated keys, soon to be removed.\n",
                      "markdown": "`########################\n\n# As per features adoption and deprecation proposal we support 4 levels of configuration keys maturity:\n# * Sandbox -> Experimental/alpha features, not recommended for production use, can be removed at any time without further notice.\n# * Incubating -> Beta features, long-term support is not guaranteed.\n# * Stable -> General Availability (GA) features for which long-term support is expected.\n# * Deprecated -> Deprecated keys, soon to be removed.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/.pre-commit-config.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 13,
                  "endLine": 23,
                  "snippet": {
                    "text": "  - id: dco-hook-local\n    name: DCO hook local\n    entry: ./tools/local_hooks/dco-pre-commit-msg.sh\n    language: script\n    stages: [prepare-commit-msg]\n",
                    "rendered": {
                      "text": "  - id: dco-hook-local\n    name: DCO hook local\n    entry: ./tools/local_hooks/dco-pre-commit-msg.sh\n    language: script\n    stages: [prepare-commit-msg]\n",
                      "markdown": "`  - id: dco-hook-local\n    name: DCO hook local\n    entry: ./tools/local_hooks/dco-pre-commit-msg.sh\n    language: script\n    stages: [prepare-commit-msg]\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 222,
                  "endLine": 201,
                  "endColumn": 226,
                  "snippet": {
                    "text": "\n### 64-bit constants\n\nPut an `LL` at the end of your `64-bit` constants. Without the `LL`, some platform compilers try to interpret the constant on the right-hand side as a `long integer` instead of a `long long` and this could lead to an error at building time.\n\nExample:\n\n",
                    "rendered": {
                      "text": "\n### 64-bit constants\n\nPut an `LL` at the end of your `64-bit` constants. Without the `LL`, some platform compilers try to interpret the constant on the right-hand side as a `long integer` instead of a `long long` and this could lead to an error at building time.\n\nExample:\n\n",
                      "markdown": "`\n### 64-bit constants\n\nPut an `LL` at the end of your `64-bit` constants. Without the `LL`, some platform compilers try to interpret the constant on the right-hand side as a `long integer` instead of a `long long` and this could lead to an error at building time.\n\nExample:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 11,
                  "endLine": 201,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n### 64-bit constants\n\nPut an `LL` at the end of your `64-bit` constants. Without the `LL`, some platform compilers try to interpret the constant on the right-hand side as a `long integer` instead of a `long long` and this could lead to an error at building time.\n\nExample:\n\n",
                    "rendered": {
                      "text": "\n### 64-bit constants\n\nPut an `LL` at the end of your `64-bit` constants. Without the `LL`, some platform compilers try to interpret the constant on the right-hand side as a `long integer` instead of a `long long` and this could lead to an error at building time.\n\nExample:\n\n",
                      "markdown": "`\n### 64-bit constants\n\nPut an `LL` at the end of your `64-bit` constants. Without the `LL`, some platform compilers try to interpret the constant on the right-hand side as a `long integer` instead of a `long long` and this could lead to an error at building time.\n\nExample:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 14,
                  "endLine": 56,
                  "endColumn": 18,
                  "snippet": {
                    "text": "pre-commit install --install-hooks --hook-type prepare-commit-msg --overwrite \n```\n\nYou have done, at every new commit, this hook will check that your patch respects the coding style of this repo!\n\nIf you want to detach the git hooks, you can simply type:\n\n",
                    "rendered": {
                      "text": "pre-commit install --install-hooks --hook-type prepare-commit-msg --overwrite \n```\n\nYou have done, at every new commit, this hook will check that your patch respects the coding style of this repo!\n\nIf you want to detach the git hooks, you can simply type:\n\n",
                      "markdown": "`pre-commit install --install-hooks --hook-type prepare-commit-msg --overwrite \n```\n\nYou have done, at every new commit, this hook will check that your patch respects the coding style of this repo!\n\nIf you want to detach the git hooks, you can simply type:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 98,
                  "endLine": 26,
                  "endColumn": 102,
                  "snippet": {
                    "text": "\n#### 1.Pre-commit framework (suggested if you don't have the 2 tools already installed on your machine)\n\nThe `pre-commit` framework allows you to automatically install different `git-hooks` that will run at every new commit. More precisely, if you use the `.pre-commit-config.yaml` in this repo you will install 3 different hooks:\n\n1. The `clang-format` hook: this is a `pre-commit` git hook that runs `clang-format` on your staged changes.\n2. The `cmake-format` hook: this is a `pre-commit` git hook that runs `cmake-format` on your staged changes.\n",
                    "rendered": {
                      "text": "\n#### 1.Pre-commit framework (suggested if you don't have the 2 tools already installed on your machine)\n\nThe `pre-commit` framework allows you to automatically install different `git-hooks` that will run at every new commit. More precisely, if you use the `.pre-commit-config.yaml` in this repo you will install 3 different hooks:\n\n1. The `clang-format` hook: this is a `pre-commit` git hook that runs `clang-format` on your staged changes.\n2. The `cmake-format` hook: this is a `pre-commit` git hook that runs `cmake-format` on your staged changes.\n",
                      "markdown": "`\n#### 1.Pre-commit framework (suggested if you don't have the 2 tools already installed on your machine)\n\nThe `pre-commit` framework allows you to automatically install different `git-hooks` that will run at every new commit. More precisely, if you use the `.pre-commit-config.yaml` in this repo you will install 3 different hooks:\n\n1. The `clang-format` hook: this is a `pre-commit` git hook that runs `clang-format` on your staged changes.\n2. The `cmake-format` hook: this is a `pre-commit` git hook that runs `cmake-format` on your staged changes.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 71,
                  "endLine": 142,
                  "endColumn": 77,
                  "snippet": {
                    "text": "pre-commit install --install-hooks --hook-type prepare-commit-msg --overwrite \n```\n\nAnd you have done! Now you don't have to remember the `-s` option every time you commit something, the DCO hook will automatically add the DCO if you forget it! 😄\n\n## Some best practices 📏\n\n",
                    "rendered": {
                      "text": "pre-commit install --install-hooks --hook-type prepare-commit-msg --overwrite \n```\n\nAnd you have done! Now you don't have to remember the `-s` option every time you commit something, the DCO hook will automatically add the DCO if you forget it! 😄\n\n## Some best practices 📏\n\n",
                      "markdown": "`pre-commit install --install-hooks --hook-type prepare-commit-msg --overwrite \n```\n\nAnd you have done! Now you don't have to remember the `-s` option every time you commit something, the DCO hook will automatically add the DCO if you forget it! 😄\n\n## Some best practices 📏\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 7,
                  "endLine": 131,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nor with the inline message:\n\n```bash\ngit commit -s -m \"my first commit\"\n```\n\n### Use `pre-commit` hook\n",
                    "rendered": {
                      "text": "\nor with the inline message:\n\n```bash\ngit commit -s -m \"my first commit\"\n```\n\n### Use `pre-commit` hook\n",
                      "markdown": "`\nor with the inline message:\n\n```bash\ngit commit -s -m \"my first commit\"\n```\n\n### Use `pre-commit` hook\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 7,
                  "endLine": 125,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nTo do this you just need to remember the `-s` while performing your commits:\n\n```bash\ngit commit -s\n```\n\nor with the inline message:\n",
                    "rendered": {
                      "text": "\nTo do this you just need to remember the `-s` while performing your commits:\n\n```bash\ngit commit -s\n```\n\nor with the inline message:\n",
                      "markdown": "`\nTo do this you just need to remember the `-s` while performing your commits:\n\n```bash\ngit commit -s\n```\n\nor with the inline message:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 32,
                  "endLine": 108,
                  "endColumn": 4,
                  "snippet": {
                    "text": "If they are correct you have done, otherwise, you have to set them:\n\n```bash\ngit config user.name <full-name>\ngit config user.email <mail-used_with-GitHub-profile>\n```\n\n>__Please note__: If you have problems in doing this you can read the full documentation [here](https://docs.github.com/en/get-started/getting-started-with-git/setting-your-username-in-git).\n",
                    "rendered": {
                      "text": "If they are correct you have done, otherwise, you have to set them:\n\n```bash\ngit config user.name <full-name>\ngit config user.email <mail-used_with-GitHub-profile>\n```\n\n>__Please note__: If you have problems in doing this you can read the full documentation [here](https://docs.github.com/en/get-started/getting-started-with-git/setting-your-username-in-git).\n",
                      "markdown": "`If they are correct you have done, otherwise, you have to set them:\n\n```bash\ngit config user.name <full-name>\ngit config user.email <mail-used_with-GitHub-profile>\n```\n\n>__Please note__: If you have problems in doing this you can read the full documentation [here](https://docs.github.com/en/get-started/getting-started-with-git/setting-your-username-in-git).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 7,
                  "endLine": 107,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nIf they are correct you have done, otherwise, you have to set them:\n\n```bash\ngit config user.name <full-name>\ngit config user.email <mail-used_with-GitHub-profile>\n```\n\n",
                    "rendered": {
                      "text": "\nIf they are correct you have done, otherwise, you have to set them:\n\n```bash\ngit config user.name <full-name>\ngit config user.email <mail-used_with-GitHub-profile>\n```\n\n",
                      "markdown": "`\nIf they are correct you have done, otherwise, you have to set them:\n\n```bash\ngit config user.name <full-name>\ngit config user.email <mail-used_with-GitHub-profile>\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 26,
                  "endLine": 101,
                  "endColumn": 4,
                  "snippet": {
                    "text": "Before doing this you have to configure your git user `name` and `email` if you haven't already done it. To check your actual `name` and `email` type:\n\n```bash\ngit config --get user.name\ngit config --get user.email\n```\n\nIf they are correct you have done, otherwise, you have to set them:\n",
                    "rendered": {
                      "text": "Before doing this you have to configure your git user `name` and `email` if you haven't already done it. To check your actual `name` and `email` type:\n\n```bash\ngit config --get user.name\ngit config --get user.email\n```\n\nIf they are correct you have done, otherwise, you have to set them:\n",
                      "markdown": "`Before doing this you have to configure your git user `name` and `email` if you haven't already done it. To check your actual `name` and `email` type:\n\n```bash\ngit config --get user.name\ngit config --get user.email\n```\n\nIf they are correct you have done, otherwise, you have to set them:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 7,
                  "endLine": 100,
                  "endColumn": 4,
                  "snippet": {
                    "text": "Another requirement for contributing to the `libs` repository, is applying the [DCO](https://cert-manager.io/docs/contributing/sign-off/) to every commit you want to push upstream.\nBefore doing this you have to configure your git user `name` and `email` if you haven't already done it. To check your actual `name` and `email` type:\n\n```bash\ngit config --get user.name\ngit config --get user.email\n```\n\n",
                    "rendered": {
                      "text": "Another requirement for contributing to the `libs` repository, is applying the [DCO](https://cert-manager.io/docs/contributing/sign-off/) to every commit you want to push upstream.\nBefore doing this you have to configure your git user `name` and `email` if you haven't already done it. To check your actual `name` and `email` type:\n\n```bash\ngit config --get user.name\ngit config --get user.email\n```\n\n",
                      "markdown": "`Another requirement for contributing to the `libs` repository, is applying the [DCO](https://cert-manager.io/docs/contributing/sign-off/) to every commit you want to push upstream.\nBefore doing this you have to configure your git user `name` and `email` if you haven't already done it. To check your actual `name` and `email` type:\n\n```bash\ngit config --get user.name\ngit config --get user.email\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 44,
                  "endLine": 97,
                  "endColumn": 49,
                  "snippet": {
                    "text": "### Introduction\n\nAnother requirement for contributing to the `libs` repository, is applying the [DCO](https://cert-manager.io/docs/contributing/sign-off/) to every commit you want to push upstream.\nBefore doing this you have to configure your git user `name` and `email` if you haven't already done it. To check your actual `name` and `email` type:\n\n```bash\ngit config --get user.name\n",
                    "rendered": {
                      "text": "### Introduction\n\nAnother requirement for contributing to the `libs` repository, is applying the [DCO](https://cert-manager.io/docs/contributing/sign-off/) to every commit you want to push upstream.\nBefore doing this you have to configure your git user `name` and `email` if you haven't already done it. To check your actual `name` and `email` type:\n\n```bash\ngit config --get user.name\n",
                      "markdown": "`### Introduction\n\nAnother requirement for contributing to the `libs` repository, is applying the [DCO](https://cert-manager.io/docs/contributing/sign-off/) to every commit you want to push upstream.\nBefore doing this you have to configure your git user `name` and `email` if you haven't already done it. To check your actual `name` and `email` type:\n\n```bash\ngit config --get user.name\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 140,
                  "endLine": 90,
                  "endColumn": 146,
                  "snippet": {
                    "text": "\n#### Other solutions\n\nObviously, you can also install the 2 tools locally and enable some extension of your favorite IDE (like `VScode`) to format your code every time you save your files!\n\n## Add DCO signed-off to your commits 🔏\n\n",
                    "rendered": {
                      "text": "\n#### Other solutions\n\nObviously, you can also install the 2 tools locally and enable some extension of your favorite IDE (like `VScode`) to format your code every time you save your files!\n\n## Add DCO signed-off to your commits 🔏\n\n",
                      "markdown": "`\n#### Other solutions\n\nObviously, you can also install the 2 tools locally and enable some extension of your favorite IDE (like `VScode`) to format your code every time you save your files!\n\n## Add DCO signed-off to your commits 🔏\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 25,
                  "endLine": 58,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nYou have done, at every new commit, this hook will check that your patch respects the coding style of this repo!\n\nIf you want to detach the git hooks, you can simply type:\n\n```bash\npre-commit uninstall --hook-type prepare-commit-msg\n",
                    "rendered": {
                      "text": "\nYou have done, at every new commit, this hook will check that your patch respects the coding style of this repo!\n\nIf you want to detach the git hooks, you can simply type:\n\n```bash\npre-commit uninstall --hook-type prepare-commit-msg\n",
                      "markdown": "`\nYou have done, at every new commit, this hook will check that your patch respects the coding style of this repo!\n\nIf you want to detach the git hooks, you can simply type:\n\n```bash\npre-commit uninstall --hook-type prepare-commit-msg\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 48,
                  "endLine": 50,
                  "endColumn": 53,
                  "snippet": {
                    "text": "pre-commit install --install-hooks --hook-type pre-commit --overwrite  \n```\n\nIf you want to install also the `pre-commit-msg` git hook for the DCO you have to type the following command, but be sure to have configured all you need as said in the [dedicated section]((#add-dco-signed-off-to-your-commits))\n\n```bash\npre-commit install --install-hooks --hook-type prepare-commit-msg --overwrite \n",
                    "rendered": {
                      "text": "pre-commit install --install-hooks --hook-type pre-commit --overwrite  \n```\n\nIf you want to install also the `pre-commit-msg` git hook for the DCO you have to type the following command, but be sure to have configured all you need as said in the [dedicated section]((#add-dco-signed-off-to-your-commits))\n\n```bash\npre-commit install --install-hooks --hook-type prepare-commit-msg --overwrite \n",
                      "markdown": "`pre-commit install --install-hooks --hook-type pre-commit --overwrite  \n```\n\nIf you want to install also the `pre-commit-msg` git hook for the DCO you have to type the following command, but be sure to have configured all you need as said in the [dedicated section]((#add-dco-signed-off-to-your-commits))\n\n```bash\npre-commit install --install-hooks --hook-type prepare-commit-msg --overwrite \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 62,
                  "endLine": 44,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\nOnce you have installed `pre-commit`, you don't need to install anything else! This is the good point of using a framework like `pre-commit`, all the tools necessary to format your code will be directly managed by the framework. But in order to be ready, you need to install the git hooks in your local repo.\n\nThis simple command allows you to install the two `pre-commit` git hooks, `clang-format` and `cmake-format`.\n\n```bash\npre-commit install --install-hooks --hook-type pre-commit --overwrite  \n",
                    "rendered": {
                      "text": "\nOnce you have installed `pre-commit`, you don't need to install anything else! This is the good point of using a framework like `pre-commit`, all the tools necessary to format your code will be directly managed by the framework. But in order to be ready, you need to install the git hooks in your local repo.\n\nThis simple command allows you to install the two `pre-commit` git hooks, `clang-format` and `cmake-format`.\n\n```bash\npre-commit install --install-hooks --hook-type pre-commit --overwrite  \n",
                      "markdown": "`\nOnce you have installed `pre-commit`, you don't need to install anything else! This is the good point of using a framework like `pre-commit`, all the tools necessary to format your code will be directly managed by the framework. But in order to be ready, you need to install the git hooks in your local repo.\n\nThis simple command allows you to install the two `pre-commit` git hooks, `clang-format` and `cmake-format`.\n\n```bash\npre-commit install --install-hooks --hook-type pre-commit --overwrite  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 278,
                  "endLine": 42,
                  "endColumn": 283,
                  "snippet": {
                    "text": "\n##### Step 2\n\nOnce you have installed `pre-commit`, you don't need to install anything else! This is the good point of using a framework like `pre-commit`, all the tools necessary to format your code will be directly managed by the framework. But in order to be ready, you need to install the git hooks in your local repo.\n\nThis simple command allows you to install the two `pre-commit` git hooks, `clang-format` and `cmake-format`.\n\n",
                    "rendered": {
                      "text": "\n##### Step 2\n\nOnce you have installed `pre-commit`, you don't need to install anything else! This is the good point of using a framework like `pre-commit`, all the tools necessary to format your code will be directly managed by the framework. But in order to be ready, you need to install the git hooks in your local repo.\n\nThis simple command allows you to install the two `pre-commit` git hooks, `clang-format` and `cmake-format`.\n\n",
                      "markdown": "`\n##### Step 2\n\nOnce you have installed `pre-commit`, you don't need to install anything else! This is the good point of using a framework like `pre-commit`, all the tools necessary to format your code will be directly managed by the framework. But in order to be ready, you need to install the git hooks in your local repo.\n\nThis simple command allows you to install the two `pre-commit` git hooks, `clang-format` and `cmake-format`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 56,
                  "endLine": 30,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n1. The `clang-format` hook: this is a `pre-commit` git hook that runs `clang-format` on your staged changes.\n2. The `cmake-format` hook: this is a `pre-commit` git hook that runs `cmake-format` on your staged changes.\n3. The `DCO signed-off` hook: this is a `pre-commit-msg` git hook that adds the `DCO` on your commit if not present. This hook is not strictly related to the coding style so we will talk about it in a separate section: [Add DCO signed-off to your commits](#add-dco-signed-off-to-your-commits).\n\nNow let's see what we need to use `pre-commit` framework.\n\n",
                    "rendered": {
                      "text": "\n1. The `clang-format` hook: this is a `pre-commit` git hook that runs `clang-format` on your staged changes.\n2. The `cmake-format` hook: this is a `pre-commit` git hook that runs `cmake-format` on your staged changes.\n3. The `DCO signed-off` hook: this is a `pre-commit-msg` git hook that adds the `DCO` on your commit if not present. This hook is not strictly related to the coding style so we will talk about it in a separate section: [Add DCO signed-off to your commits](#add-dco-signed-off-to-your-commits).\n\nNow let's see what we need to use `pre-commit` framework.\n\n",
                      "markdown": "`\n1. The `clang-format` hook: this is a `pre-commit` git hook that runs `clang-format` on your staged changes.\n2. The `cmake-format` hook: this is a `pre-commit` git hook that runs `cmake-format` on your staged changes.\n3. The `DCO signed-off` hook: this is a `pre-commit-msg` git hook that adds the `DCO` on your commit if not present. This hook is not strictly related to the coding style so we will talk about it in a separate section: [Add DCO signed-off to your commits](#add-dco-signed-off-to-your-commits).\n\nNow let's see what we need to use `pre-commit` framework.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 50,
                  "endLine": 29,
                  "endColumn": 55,
                  "snippet": {
                    "text": "hat will run at every new commit. More precisely, if you use the `.pre-commit-config.yaml` in this repo you will install 3 different hooks:\n\n1. The `clang-format` hook: this is a `pre-commit` git hook that runs `clang-format` on your staged changes.\n2. The `cmake-format` hook: this is a `pre-commit` git hook that runs `cmake-format` on your staged changes.\n3. The `DCO signed-off` hook: this is a `pre-commit-msg` git hook that adds the `DCO` on your commit if not present. This hook is not strictly related to the coding style so we will talk about it in a separate section: [Add DCO signed-off to your",
                    "rendered": {
                      "text": "hat will run at every new commit. More precisely, if you use the `.pre-commit-config.yaml` in this repo you will install 3 different hooks:\n\n1. The `clang-format` hook: this is a `pre-commit` git hook that runs `clang-format` on your staged changes.\n2. The `cmake-format` hook: this is a `pre-commit` git hook that runs `cmake-format` on your staged changes.\n3. The `DCO signed-off` hook: this is a `pre-commit-msg` git hook that adds the `DCO` on your commit if not present. This hook is not strictly related to the coding style so we will talk about it in a separate section: [Add DCO signed-off to your",
                      "markdown": "`hat will run at every new commit. More precisely, if you use the `.pre-commit-config.yaml` in this repo you will install 3 different hooks:\n\n1. The `clang-format` hook: this is a `pre-commit` git hook that runs `clang-format` on your staged changes.\n2. The `cmake-format` hook: this is a `pre-commit` git hook that runs `cmake-format` on your staged changes.\n3. The `DCO signed-off` hook: this is a `pre-commit-msg` git hook that adds the `DCO` on your commit if not present. This hook is not strictly related to the coding style so we will talk about it in a separate section: [Add DCO signed-off to your`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 50,
                  "endLine": 28,
                  "endColumn": 55,
                  "snippet": {
                    "text": "lled on your machine)\n\nThe `pre-commit` framework allows you to automatically install different `git-hooks` that will run at every new commit. More precisely, if you use the `.pre-commit-config.yaml` in this repo you will install 3 different hooks:\n\n1. The `clang-format` hook: this is a `pre-commit` git hook that runs `clang-format` on your staged changes.\n2. The `cmake-format` hook: this is a `pre-commit` git hook that runs `cmake-format` on your staged changes.\n3. The `DCO signed-off` hook: this is a `pre-commit-msg` git hook that adds the `DCO` on your commit if not present. This hook is not str",
                    "rendered": {
                      "text": "lled on your machine)\n\nThe `pre-commit` framework allows you to automatically install different `git-hooks` that will run at every new commit. More precisely, if you use the `.pre-commit-config.yaml` in this repo you will install 3 different hooks:\n\n1. The `clang-format` hook: this is a `pre-commit` git hook that runs `clang-format` on your staged changes.\n2. The `cmake-format` hook: this is a `pre-commit` git hook that runs `cmake-format` on your staged changes.\n3. The `DCO signed-off` hook: this is a `pre-commit-msg` git hook that adds the `DCO` on your commit if not present. This hook is not str",
                      "markdown": "`lled on your machine)\n\nThe `pre-commit` framework allows you to automatically install different `git-hooks` that will run at every new commit. More precisely, if you use the `.pre-commit-config.yaml` in this repo you will install 3 different hooks:\n\n1. The `clang-format` hook: this is a `pre-commit` git hook that runs `clang-format` on your staged changes.\n2. The `cmake-format` hook: this is a `pre-commit` git hook that runs `cmake-format` on your staged changes.\n3. The `DCO signed-off` hook: this is a `pre-commit-msg` git hook that adds the `DCO` on your commit if not present. This hook is not str`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Contributing.md"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 71,
                  "endLine": 15,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\n> __Please note__: tools versions are important! Different versions will enforce slightly different changes on the code. For example `clang-format-18` will produce a slightly different output respect to `clang-format-17` always respecting the imposed style.\n\nThe coding style is expressed through the 2 configuration file that you find in this repo: `.clang-format`, `.cmake-format.json`.  \n\n### Enforce the style locally\n\n",
                    "rendered": {
                      "text": "\n> __Please note__: tools versions are important! Different versions will enforce slightly different changes on the code. For example `clang-format-18` will produce a slightly different output respect to `clang-format-17` always respecting the imposed style.\n\nThe coding style is expressed through the 2 configuration file that you find in this repo: `.clang-format`, `.cmake-format.json`.  \n\n### Enforce the style locally\n\n",
                      "markdown": "`\n> __Please note__: tools versions are important! Different versions will enforce slightly different changes on the code. For example `clang-format-18` will produce a slightly different output respect to `clang-format-17` always respecting the imposed style.\n\nThe coding style is expressed through the 2 configuration file that you find in this repo: `.clang-format`, `.cmake-format.json`.  \n\n### Enforce the style locally\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 348,
                  "endLine": 71,
                  "endColumn": 401,
                  "snippet": {
                    "text": "nally created Falco in 2016 to detect unexpected or suspicious activity using a rules engine on top of the data that comes from the sysdig kernel system call driver. Sysdig provides tooling to help with vulnerability management, compliance, detection, incident response and forensics in Cloud-native environments. Sysdig Secure has extended Falco to include: a rule library, the ability to update macros, lists & rules via the user interface and API, automated tuning of rules, and rule creation based on profiling known system behavior. On top of the basic Falco rules, Sysdig Secure implements the concept of a \"Security policy\" that can comprise seve",
                    "rendered": {
                      "text": "nally created Falco in 2016 to detect unexpected or suspicious activity using a rules engine on top of the data that comes from the sysdig kernel system call driver. Sysdig provides tooling to help with vulnerability management, compliance, detection, incident response and forensics in Cloud-native environments. Sysdig Secure has extended Falco to include: a rule library, the ability to update macros, lists & rules via the user interface and API, automated tuning of rules, and rule creation based on profiling known system behavior. On top of the basic Falco rules, Sysdig Secure implements the concept of a \"Security policy\" that can comprise seve",
                      "markdown": "`nally created Falco in 2016 to detect unexpected or suspicious activity using a rules engine on top of the data that comes from the sysdig kernel system call driver. Sysdig provides tooling to help with vulnerability management, compliance, detection, incident response and forensics in Cloud-native environments. Sysdig Secure has extended Falco to include: a rule library, the ability to update macros, lists & rules via the user interface and API, automated tuning of rules, and rule creation based on profiling known system behavior. On top of the basic Falco rules, Sysdig Secure implements the concept of a \"Security policy\" that can comprise seve`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 310,
                  "endLine": 89,
                  "endColumn": 319,
                  "snippet": {
                    "text": "](https://sysflow.io) SysFlow is a cloud-native system telemetry framework that focuses on data abstraction, behavioral analytics, and noise reduction. At its core, SysFlow exposes a compact open telemetry format that records workload behaviors by connecting event and flow representations of process control flows, file interactions, and network communications. The resulting abstraction encodes a graph structure that enables provenance reasoning on host and container environments, and fast retrieval of security-relevant information.\n\n* [StackRox](https://stackrox.io) is the industry’s first Kubernetes-n",
                    "rendered": {
                      "text": "](https://sysflow.io) SysFlow is a cloud-native system telemetry framework that focuses on data abstraction, behavioral analytics, and noise reduction. At its core, SysFlow exposes a compact open telemetry format that records workload behaviors by connecting event and flow representations of process control flows, file interactions, and network communications. The resulting abstraction encodes a graph structure that enables provenance reasoning on host and container environments, and fast retrieval of security-relevant information.\n\n* [StackRox](https://stackrox.io) is the industry’s first Kubernetes-n",
                      "markdown": "`](https://sysflow.io) SysFlow is a cloud-native system telemetry framework that focuses on data abstraction, behavioral analytics, and noise reduction. At its core, SysFlow exposes a compact open telemetry format that records workload behaviors by connecting event and flow representations of process control flows, file interactions, and network communications. The resulting abstraction encodes a graph structure that enables provenance reasoning on host and container environments, and fast retrieval of security-relevant information.\n\n* [StackRox](https://stackrox.io) is the industry’s first Kubernetes-n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 161,
                  "endLine": 89,
                  "endColumn": 165,
                  "snippet": {
                    "text": "f them are triggered by a combination of Falco's findings. You can kill, restart and rename pods according to the ever changing policies.\n\n* [SysFlow](https://sysflow.io) SysFlow is a cloud-native system telemetry framework that focuses on data abstraction, behavioral analytics, and noise reduction. At its core, SysFlow exposes a compact open telemetry format that records workload behaviors by connecting event and flow representations of process control flows, file interactions, and network communications. The resulting abstraction encodes a graph structure that enables provenance reasoning on hos",
                    "rendered": {
                      "text": "f them are triggered by a combination of Falco's findings. You can kill, restart and rename pods according to the ever changing policies.\n\n* [SysFlow](https://sysflow.io) SysFlow is a cloud-native system telemetry framework that focuses on data abstraction, behavioral analytics, and noise reduction. At its core, SysFlow exposes a compact open telemetry format that records workload behaviors by connecting event and flow representations of process control flows, file interactions, and network communications. The resulting abstraction encodes a graph structure that enables provenance reasoning on hos",
                      "markdown": "`f them are triggered by a combination of Falco's findings. You can kill, restart and rename pods according to the ever changing policies.\n\n* [SysFlow](https://sysflow.io) SysFlow is a cloud-native system telemetry framework that focuses on data abstraction, behavioral analytics, and noise reduction. At its core, SysFlow exposes a compact open telemetry format that records workload behaviors by connecting event and flow representations of process control flows, file interactions, and network communications. The resulting abstraction encodes a graph structure that enables provenance reasoning on hos`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 437,
                  "endLine": 71,
                  "endColumn": 445,
                  "snippet": {
                    "text": "ine on top of the data that comes from the sysdig kernel system call driver. Sysdig provides tooling to help with vulnerability management, compliance, detection, incident response and forensics in Cloud-native environments. Sysdig Secure has extended Falco to include: a rule library, the ability to update macros, lists & rules via the user interface and API, automated tuning of rules, and rule creation based on profiling known system behavior. On top of the basic Falco rules, Sysdig Secure implements the concept of a \"Security policy\" that can comprise several rules which are evaluated for a user-def",
                    "rendered": {
                      "text": "ine on top of the data that comes from the sysdig kernel system call driver. Sysdig provides tooling to help with vulnerability management, compliance, detection, incident response and forensics in Cloud-native environments. Sysdig Secure has extended Falco to include: a rule library, the ability to update macros, lists & rules via the user interface and API, automated tuning of rules, and rule creation based on profiling known system behavior. On top of the basic Falco rules, Sysdig Secure implements the concept of a \"Security policy\" that can comprise several rules which are evaluated for a user-def",
                      "markdown": "`ine on top of the data that comes from the sysdig kernel system call driver. Sysdig provides tooling to help with vulnerability management, compliance, detection, incident response and forensics in Cloud-native environments. Sysdig Secure has extended Falco to include: a rule library, the ability to update macros, lists & rules via the user interface and API, automated tuning of rules, and rule creation based on profiling known system behavior. On top of the basic Falco rules, Sysdig Secure implements the concept of a \"Security policy\" that can comprise several rules which are evaluated for a user-def`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 207,
                  "endLine": 67,
                  "endColumn": 216,
                  "snippet": {
                    "text": "rs to easily collect Falco events and analyze Falco events on DecSecOps focused dashboards.\n\n* [Swissblock Technologies](https://swissblock.net/) At Swissblock we connect the dots by combining cutting-edge algorithmic trading strategies with in-depth market analysis. We route all Falco events to our control systems, both monitoring and logging. Being able to deeply analyse alerts, we can understand what is running on our Kubernetes clusters and check against security policies, specifically defined for each workload. A set of alarms notifies us in case of critical events, letting us react fast. In the n",
                    "rendered": {
                      "text": "rs to easily collect Falco events and analyze Falco events on DecSecOps focused dashboards.\n\n* [Swissblock Technologies](https://swissblock.net/) At Swissblock we connect the dots by combining cutting-edge algorithmic trading strategies with in-depth market analysis. We route all Falco events to our control systems, both monitoring and logging. Being able to deeply analyse alerts, we can understand what is running on our Kubernetes clusters and check against security policies, specifically defined for each workload. A set of alarms notifies us in case of critical events, letting us react fast. In the n",
                      "markdown": "`rs to easily collect Falco events and analyze Falco events on DecSecOps focused dashboards.\n\n* [Swissblock Technologies](https://swissblock.net/) At Swissblock we connect the dots by combining cutting-edge algorithmic trading strategies with in-depth market analysis. We route all Falco events to our control systems, both monitoring and logging. Being able to deeply analyse alerts, we can understand what is running on our Kubernetes clusters and check against security policies, specifically defined for each workload. A set of alarms notifies us in case of critical events, letting us react fast. In the n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 52,
                  "endLine": 67,
                  "endColumn": 56,
                  "snippet": {
                    "text": "analyze problems in your application and infrastructure. Sumo Logic provides native integrations for many CNCF projects, such as Falco, that allows end users to easily collect Falco events and analyze Falco events on DecSecOps focused dashboards.\n\n* [Swissblock Technologies](https://swissblock.net/) At Swissblock we connect the dots by combining cutting-edge algorithmic trading strategies with in-depth market analysis. We route all Falco events to our control systems, both monitoring and logging. Being able to deeply analyse alerts, we can understand what is running on our Kubernetes clusters and ",
                    "rendered": {
                      "text": "analyze problems in your application and infrastructure. Sumo Logic provides native integrations for many CNCF projects, such as Falco, that allows end users to easily collect Falco events and analyze Falco events on DecSecOps focused dashboards.\n\n* [Swissblock Technologies](https://swissblock.net/) At Swissblock we connect the dots by combining cutting-edge algorithmic trading strategies with in-depth market analysis. We route all Falco events to our control systems, both monitoring and logging. Being able to deeply analyse alerts, we can understand what is running on our Kubernetes clusters and ",
                      "markdown": "`analyze problems in your application and infrastructure. Sumo Logic provides native integrations for many CNCF projects, such as Falco, that allows end users to easily collect Falco events and analyze Falco events on DecSecOps focused dashboards.\n\n* [Swissblock Technologies](https://swissblock.net/) At Swissblock we connect the dots by combining cutting-edge algorithmic trading strategies with in-depth market analysis. We route all Falco events to our control systems, both monitoring and logging. Being able to deeply analyse alerts, we can understand what is running on our Kubernetes clusters and `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 237,
                  "endLine": 63,
                  "endColumn": 241,
                  "snippet": {
                    "text": "for real time security monitoring and alerting in Kubernetes.\n\n* [Skyscanner](https://www.skyscanner.net) - Skyscanner is the world's travel search engine for flights, hotels and car rentals. Most of our infrastructure is based on Kubernetes, and our Security team is using Falco to monitor anomalies at runtime, integrating Falco's findings with our internal ChatOps tooling to provide insight on the behavior of our machines in production. We also postprocess and store Falco's results to generate dashboards for auditing purposes.\n\n* [Sumo Logic](https://www.sumologic.com/) - Sumo Logic provides a Sa",
                    "rendered": {
                      "text": "for real time security monitoring and alerting in Kubernetes.\n\n* [Skyscanner](https://www.skyscanner.net) - Skyscanner is the world's travel search engine for flights, hotels and car rentals. Most of our infrastructure is based on Kubernetes, and our Security team is using Falco to monitor anomalies at runtime, integrating Falco's findings with our internal ChatOps tooling to provide insight on the behavior of our machines in production. We also postprocess and store Falco's results to generate dashboards for auditing purposes.\n\n* [Sumo Logic](https://www.sumologic.com/) - Sumo Logic provides a Sa",
                      "markdown": "`for real time security monitoring and alerting in Kubernetes.\n\n* [Skyscanner](https://www.skyscanner.net) - Skyscanner is the world's travel search engine for flights, hotels and car rentals. Most of our infrastructure is based on Kubernetes, and our Security team is using Falco to monitor anomalies at runtime, integrating Falco's findings with our internal ChatOps tooling to provide insight on the behavior of our machines in production. We also postprocess and store Falco's results to generate dashboards for auditing purposes.\n\n* [Sumo Logic](https://www.sumologic.com/) - Sumo Logic provides a Sa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 327,
                  "endLine": 44,
                  "endColumn": 331,
                  "snippet": {
                    "text": "orks.com) - MathWorks develops mathematical computing software for engineers and scientists. MathWorks uses Falco for Kubernetes threat detection, unexpected application behavior, and maps Falco rules to their cloud infrastructure's security kill chain model. MathWorks presented their Falco use case at [KubeCon + CloudNativeCon North America 2020](https://www.youtube.com/watch?v=L-5RYBTV010).\n\n* [Pocteo](https://pocteo.co) - Pocteo helps with Kubernetes adoption in enterprises by providing a variety of services such as training, consulting, auditing and mentoring. We build CI/CD pipelines the GitO",
                    "rendered": {
                      "text": "orks.com) - MathWorks develops mathematical computing software for engineers and scientists. MathWorks uses Falco for Kubernetes threat detection, unexpected application behavior, and maps Falco rules to their cloud infrastructure's security kill chain model. MathWorks presented their Falco use case at [KubeCon + CloudNativeCon North America 2020](https://www.youtube.com/watch?v=L-5RYBTV010).\n\n* [Pocteo](https://pocteo.co) - Pocteo helps with Kubernetes adoption in enterprises by providing a variety of services such as training, consulting, auditing and mentoring. We build CI/CD pipelines the GitO",
                      "markdown": "`orks.com) - MathWorks develops mathematical computing software for engineers and scientists. MathWorks uses Falco for Kubernetes threat detection, unexpected application behavior, and maps Falco rules to their cloud infrastructure's security kill chain model. MathWorks presented their Falco use case at [KubeCon + CloudNativeCon North America 2020](https://www.youtube.com/watch?v=L-5RYBTV010).\n\n* [Pocteo](https://pocteo.co) - Pocteo helps with Kubernetes adoption in enterprises by providing a variety of services such as training, consulting, auditing and mentoring. We build CI/CD pipelines the GitO`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 543,
                  "endLine": 23,
                  "endColumn": 547,
                  "snippet": {
                    "text": "ily build DevSecOps pipelines for projects. This makes it easy for developers to incorporate Security principles early on in the development cycle. In production, Falco is used to verify that the code the developer ships does not violate any of the production security requirements. BAH [are speaking at Kubecon NA 2019](https://kccncna19.sched.com/event/UaWr/building-reusable-devsecops-pipelines-on-a-secure-kubernetes-platform-steven-terrana-booz-allen-hamilton-michael-ducy-sysdig) on their use of Falco.\n\n* [Coveo](https://www.coveo.com/) - Coveo stitches together content and data, learning from ev",
                    "rendered": {
                      "text": "ily build DevSecOps pipelines for projects. This makes it easy for developers to incorporate Security principles early on in the development cycle. In production, Falco is used to verify that the code the developer ships does not violate any of the production security requirements. BAH [are speaking at Kubecon NA 2019](https://kccncna19.sched.com/event/UaWr/building-reusable-devsecops-pipelines-on-a-secure-kubernetes-platform-steven-terrana-booz-allen-hamilton-michael-ducy-sysdig) on their use of Falco.\n\n* [Coveo](https://www.coveo.com/) - Coveo stitches together content and data, learning from ev",
                      "markdown": "`ily build DevSecOps pipelines for projects. This makes it easy for developers to incorporate Security principles early on in the development cycle. In production, Falco is used to verify that the code the developer ships does not violate any of the production security requirements. BAH [are speaking at Kubecon NA 2019](https://kccncna19.sched.com/event/UaWr/building-reusable-devsecops-pipelines-on-a-secure-kubernetes-platform-steven-terrana-booz-allen-hamilton-michael-ducy-sysdig) on their use of Falco.\n\n* [Coveo](https://www.coveo.com/) - Coveo stitches together content and data, learning from ev`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 427,
                  "endLine": 75,
                  "endColumn": 433,
                  "snippet": {
                    "text": " payments technology enabling banks and fintechs to remain competitive and flourish into the future. Vault Core and Vault Payments are the foundation layer of a bank's technology stack. They can run any bank, any product, and any payment set. Thought Machine uses Falco to perform cloud agnostic real time detections of suspicious container behaviour.\n\n* [Tulip Retail](https://tulip.com) Tulip Retail uses Falco to monitor container activity in our environments. It's numerous integration points, easy deployment and easily customizable rules were the main reasons we chose Falco.\n\n* [Vinted](https://vint",
                    "rendered": {
                      "text": " payments technology enabling banks and fintechs to remain competitive and flourish into the future. Vault Core and Vault Payments are the foundation layer of a bank's technology stack. They can run any bank, any product, and any payment set. Thought Machine uses Falco to perform cloud agnostic real time detections of suspicious container behaviour.\n\n* [Tulip Retail](https://tulip.com) Tulip Retail uses Falco to monitor container activity in our environments. It's numerous integration points, easy deployment and easily customizable rules were the main reasons we chose Falco.\n\n* [Vinted](https://vint",
                      "markdown": "` payments technology enabling banks and fintechs to remain competitive and flourish into the future. Vault Core and Vault Payments are the foundation layer of a bank's technology stack. They can run any bank, any product, and any payment set. Thought Machine uses Falco to perform cloud agnostic real time detections of suspicious container behaviour.\n\n* [Tulip Retail](https://tulip.com) Tulip Retail uses Falco to monitor container activity in our environments. It's numerous integration points, easy deployment and easily customizable rules were the main reasons we chose Falco.\n\n* [Vinted](https://vint`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 588,
                  "endLine": 71,
                  "endColumn": 593,
                  "snippet": {
                    "text": " detection, incident response and forensics in Cloud-native environments. Sysdig Secure has extended Falco to include: a rule library, the ability to update macros, lists & rules via the user interface and API, automated tuning of rules, and rule creation based on profiling known system behavior. On top of the basic Falco rules, Sysdig Secure implements the concept of a \"Security policy\" that can comprise several rules which are evaluated for a user-defined infrastructure scope like Kubernetes namespaces, OpenShift clusters, deployment workload, cloud regions etc.\n\n* [Thales Group](https://www.thal",
                    "rendered": {
                      "text": " detection, incident response and forensics in Cloud-native environments. Sysdig Secure has extended Falco to include: a rule library, the ability to update macros, lists & rules via the user interface and API, automated tuning of rules, and rule creation based on profiling known system behavior. On top of the basic Falco rules, Sysdig Secure implements the concept of a \"Security policy\" that can comprise several rules which are evaluated for a user-defined infrastructure scope like Kubernetes namespaces, OpenShift clusters, deployment workload, cloud regions etc.\n\n* [Thales Group](https://www.thal",
                      "markdown": "` detection, incident response and forensics in Cloud-native environments. Sysdig Secure has extended Falco to include: a rule library, the ability to update macros, lists & rules via the user interface and API, automated tuning of rules, and rule creation based on profiling known system behavior. On top of the basic Falco rules, Sysdig Secure implements the concept of a \"Security policy\" that can comprise several rules which are evaluated for a user-defined infrastructure scope like Kubernetes namespaces, OpenShift clusters, deployment workload, cloud regions etc.\n\n* [Thales Group](https://www.thal`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 143,
                  "endLine": 71,
                  "endColumn": 148,
                  "snippet": {
                    "text": "://github.com/falcosecurity/charts/tree/master/falcosidekick) to send Falco alerts to a PubSub which in turn publishes those alerts to our SIEM (SumoLogic)\n\n* [Sysdig](https://www.sysdig.com/) Sysdig originally created Falco in 2016 to detect unexpected or suspicious activity using a rules engine on top of the data that comes from the sysdig kernel system call driver. Sysdig provides tooling to help with vulnerability management, compliance, detection, incident response and forensics in Cloud-native environments. Sysdig Secure has extended Falco to include: a rule library, the ability to update mac",
                    "rendered": {
                      "text": "://github.com/falcosecurity/charts/tree/master/falcosidekick) to send Falco alerts to a PubSub which in turn publishes those alerts to our SIEM (SumoLogic)\n\n* [Sysdig](https://www.sysdig.com/) Sysdig originally created Falco in 2016 to detect unexpected or suspicious activity using a rules engine on top of the data that comes from the sysdig kernel system call driver. Sysdig provides tooling to help with vulnerability management, compliance, detection, incident response and forensics in Cloud-native environments. Sysdig Secure has extended Falco to include: a rule library, the ability to update mac",
                      "markdown": "`://github.com/falcosecurity/charts/tree/master/falcosidekick) to send Falco alerts to a PubSub which in turn publishes those alerts to our SIEM (SumoLogic)\n\n* [Sysdig](https://www.sysdig.com/) Sysdig originally created Falco in 2016 to detect unexpected or suspicious activity using a rules engine on top of the data that comes from the sysdig kernel system call driver. Sysdig provides tooling to help with vulnerability management, compliance, detection, incident response and forensics in Cloud-native environments. Sysdig Secure has extended Falco to include: a rule library, the ability to update mac`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 221,
                  "endLine": 69,
                  "endColumn": 227,
                  "snippet": {
                    "text": "vents directly to Falco, fully leveraging Falco PodSecurityPolicies analyses.\n\n* [Shapesecurity/F5](https://www.shapesecurity.com/) Shapesecurity defends against application fraud attacks like Account Take Over, Credential Stuffing, Fake Accounts, etc. Required by FedRamp certification, we needed to find a FIM solution to help monitor and protect our Kubernetes clusters. Traditional FIM solutions were not scalable and not working for our environment, but with Falco we found the solution we needed. Falco's detection capabilities have helped us identify anomalous behaviour within our clusters. We leve",
                    "rendered": {
                      "text": "vents directly to Falco, fully leveraging Falco PodSecurityPolicies analyses.\n\n* [Shapesecurity/F5](https://www.shapesecurity.com/) Shapesecurity defends against application fraud attacks like Account Take Over, Credential Stuffing, Fake Accounts, etc. Required by FedRamp certification, we needed to find a FIM solution to help monitor and protect our Kubernetes clusters. Traditional FIM solutions were not scalable and not working for our environment, but with Falco we found the solution we needed. Falco's detection capabilities have helped us identify anomalous behaviour within our clusters. We leve",
                      "markdown": "`vents directly to Falco, fully leveraging Falco PodSecurityPolicies analyses.\n\n* [Shapesecurity/F5](https://www.shapesecurity.com/) Shapesecurity defends against application fraud attacks like Account Take Over, Credential Stuffing, Fake Accounts, etc. Required by FedRamp certification, we needed to find a FIM solution to help monitor and protect our Kubernetes clusters. Traditional FIM solutions were not scalable and not working for our environment, but with Falco we found the solution we needed. Falco's detection capabilities have helped us identify anomalous behaviour within our clusters. We leve`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 93,
                  "endLine": 65,
                  "endColumn": 102,
                  "snippet": {
                    "text": "co's findings with our internal ChatOps tooling to provide insight on the behavior of our machines in production. We also postprocess and store Falco's results to generate dashboards for auditing purposes.\n\n* [Sumo Logic](https://www.sumologic.com/) - Sumo Logic provides a SaaS based log aggregation service that provides dashboards and applications to easily identify and analyze problems in your application and infrastructure. Sumo Logic provides native integrations for many CNCF projects, such as Falco, that allows end users to easily collect Falco events and analyze Falco events on DecSecOps focused ",
                    "rendered": {
                      "text": "co's findings with our internal ChatOps tooling to provide insight on the behavior of our machines in production. We also postprocess and store Falco's results to generate dashboards for auditing purposes.\n\n* [Sumo Logic](https://www.sumologic.com/) - Sumo Logic provides a SaaS based log aggregation service that provides dashboards and applications to easily identify and analyze problems in your application and infrastructure. Sumo Logic provides native integrations for many CNCF projects, such as Falco, that allows end users to easily collect Falco events and analyze Falco events on DecSecOps focused ",
                      "markdown": "`co's findings with our internal ChatOps tooling to provide insight on the behavior of our machines in production. We also postprocess and store Falco's results to generate dashboards for auditing purposes.\n\n* [Sumo Logic](https://www.sumologic.com/) - Sumo Logic provides a SaaS based log aggregation service that provides dashboards and applications to easily identify and analyze problems in your application and infrastructure. Sumo Logic provides native integrations for many CNCF projects, such as Falco, that allows end users to easily collect Falco events and analyze Falco events on DecSecOps focused `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 288,
                  "endLine": 61,
                  "endColumn": 294,
                  "snippet": {
                    "text": "n Systems.\n\n* [Sight Machine](https://www.sightmachine.com) - Sight Machine is the category leader for manufacturing analytics and used by Global 500 companies to make better, faster decisions about their operations. Sight Machine uses Falco to help enforce SOC2 compliance as well as a tool for real time security monitoring and alerting in Kubernetes.\n\n* [Skyscanner](https://www.skyscanner.net) - Skyscanner is the world's travel search engine for flights, hotels and car rentals. Most of our infrastructure is based on Kubernetes, and our Security team is using Falco to monitor anomalies at runtime, i",
                    "rendered": {
                      "text": "n Systems.\n\n* [Sight Machine](https://www.sightmachine.com) - Sight Machine is the category leader for manufacturing analytics and used by Global 500 companies to make better, faster decisions about their operations. Sight Machine uses Falco to help enforce SOC2 compliance as well as a tool for real time security monitoring and alerting in Kubernetes.\n\n* [Skyscanner](https://www.skyscanner.net) - Skyscanner is the world's travel search engine for flights, hotels and car rentals. Most of our infrastructure is based on Kubernetes, and our Security team is using Falco to monitor anomalies at runtime, i",
                      "markdown": "`n Systems.\n\n* [Sight Machine](https://www.sightmachine.com) - Sight Machine is the category leader for manufacturing analytics and used by Global 500 companies to make better, faster decisions about their operations. Sight Machine uses Falco to help enforce SOC2 compliance as well as a tool for real time security monitoring and alerting in Kubernetes.\n\n* [Skyscanner](https://www.skyscanner.net) - Skyscanner is the world's travel search engine for flights, hotels and car rentals. Most of our infrastructure is based on Kubernetes, and our Security team is using Falco to monitor anomalies at runtime, i`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 298,
                  "endLine": 48,
                  "endColumn": 304,
                  "snippet": {
                    "text": "\n\n* [Preferral](https://www.preferral.com) - Preferral is a HIPAA-compliant platform for Referral Management and Online Referral Forms. Preferral streamlines the referral process for patients, specialists and their referral partners. By automating the referral process, referring practices spend less time on the phone, manual efforts are eliminated, and patients get the right care from the right specialist. Preferral leverages Falco to provide a Host Intrusion Detection System to meet their HIPAA compliance requirements.\n  * https://hipaa.preferral.com/01-preferral_hipaa_compliance/\n\n* [Qonto](https:",
                    "rendered": {
                      "text": "\n\n* [Preferral](https://www.preferral.com) - Preferral is a HIPAA-compliant platform for Referral Management and Online Referral Forms. Preferral streamlines the referral process for patients, specialists and their referral partners. By automating the referral process, referring practices spend less time on the phone, manual efforts are eliminated, and patients get the right care from the right specialist. Preferral leverages Falco to provide a Host Intrusion Detection System to meet their HIPAA compliance requirements.\n  * https://hipaa.preferral.com/01-preferral_hipaa_compliance/\n\n* [Qonto](https:",
                      "markdown": "`\n\n* [Preferral](https://www.preferral.com) - Preferral is a HIPAA-compliant platform for Referral Management and Online Referral Forms. Preferral streamlines the referral process for patients, specialists and their referral partners. By automating the referral process, referring practices spend less time on the phone, manual efforts are eliminated, and patients get the right care from the right specialist. Preferral leverages Falco to provide a Host Intrusion Detection System to meet their HIPAA compliance requirements.\n  * https://hipaa.preferral.com/01-preferral_hipaa_compliance/\n\n* [Qonto](https:`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 505,
                  "endLine": 37,
                  "endColumn": 510,
                  "snippet": {
                    "text": "each the underlying host. gVisor provides defense-in-depth, protection against untrusted code execution, and a secure-by-default Kubernetes experience where containers are a security boundary. Falco can be used with gVisor to detect unusual or suspicious activity using its threat detection engine on top of gVisor runtime execution information.\n\n* [League](https://league.com/ca/) - League provides health benefits management services to help employees understand and get the most from their benefits, and employers to provide effective, efficient plans. Falco is used to monitor our deployed services on",
                    "rendered": {
                      "text": "each the underlying host. gVisor provides defense-in-depth, protection against untrusted code execution, and a secure-by-default Kubernetes experience where containers are a security boundary. Falco can be used with gVisor to detect unusual or suspicious activity using its threat detection engine on top of gVisor runtime execution information.\n\n* [League](https://league.com/ca/) - League provides health benefits management services to help employees understand and get the most from their benefits, and employers to provide effective, efficient plans. Falco is used to monitor our deployed services on",
                      "markdown": "`each the underlying host. gVisor provides defense-in-depth, protection against untrusted code execution, and a secure-by-default Kubernetes experience where containers are a security boundary. Falco can be used with gVisor to detect unusual or suspicious activity using its threat detection engine on top of gVisor runtime execution information.\n\n* [League](https://league.com/ca/) - League provides health benefits management services to help employees understand and get the most from their benefits, and employers to provide effective, efficient plans. Falco is used to monitor our deployed services on`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 459,
                  "endLine": 31,
                  "endColumn": 467,
                  "snippet": {
                    "text": "work-in-progress edits, dailies, and more into private workspaces where they can invite their team and clients to collaborate on projects. Understanding what is running on production servers, and the context around why things are running is even more tricky now that we have further abstractions like Docker and Kubernetes. To get this needed visibility into our system, we rely on Falco. Falco's ability to collect raw system calls such as open, connect, exec, along with their arguments offer key insights on what is happening on the production system and became the foundation of our intrusion detection a",
                    "rendered": {
                      "text": "work-in-progress edits, dailies, and more into private workspaces where they can invite their team and clients to collaborate on projects. Understanding what is running on production servers, and the context around why things are running is even more tricky now that we have further abstractions like Docker and Kubernetes. To get this needed visibility into our system, we rely on Falco. Falco's ability to collect raw system calls such as open, connect, exec, along with their arguments offer key insights on what is happening on the production system and became the foundation of our intrusion detection a",
                      "markdown": "`work-in-progress edits, dailies, and more into private workspaces where they can invite their team and clients to collaborate on projects. Understanding what is running on production servers, and the context around why things are running is even more tricky now that we have further abstractions like Docker and Kubernetes. To get this needed visibility into our system, we rely on Falco. Falco's ability to collect raw system calls such as open, connect, exec, along with their arguments offer key insights on what is happening on the production system and became the foundation of our intrusion detection a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 284,
                  "endLine": 27,
                  "endColumn": 293,
                  "snippet": {
                    "text": "ng action for.\n\n* [Deckhouse](https://deckhouse.io/) - Deckhouse Platform presents to you the opportunity to create homogeneous Kubernetes clusters anywhere and handles comprehensive, automagical management for them. It supplies all the add-ons you need for auto-scaling, observability, security, and service mesh. Falco is used as a part of the [runtime-audit-engine](https://deckhouse.io/documentation/latest/modules/650-runtime-audit-engine/) module to provide threats detection and enforce security compliance out of the box. By pairing with [shell-operator](https://github.com/flant/shell-operator) Falco",
                    "rendered": {
                      "text": "ng action for.\n\n* [Deckhouse](https://deckhouse.io/) - Deckhouse Platform presents to you the opportunity to create homogeneous Kubernetes clusters anywhere and handles comprehensive, automagical management for them. It supplies all the add-ons you need for auto-scaling, observability, security, and service mesh. Falco is used as a part of the [runtime-audit-engine](https://deckhouse.io/documentation/latest/modules/650-runtime-audit-engine/) module to provide threats detection and enforce security compliance out of the box. By pairing with [shell-operator](https://github.com/flant/shell-operator) Falco",
                      "markdown": "`ng action for.\n\n* [Deckhouse](https://deckhouse.io/) - Deckhouse Platform presents to you the opportunity to create homogeneous Kubernetes clusters anywhere and handles comprehensive, automagical management for them. It supplies all the add-ons you need for auto-scaling, observability, security, and service mesh. Falco is used as a part of the [runtime-audit-engine](https://deckhouse.io/documentation/latest/modules/650-runtime-audit-engine/) module to provide threats detection and enforce security compliance out of the box. By pairing with [shell-operator](https://github.com/flant/shell-operator) Falco`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 617,
                  "endLine": 25,
                  "endColumn": 625,
                  "snippet": {
                    "text": "n servers, and the context around why things are running is even more tricky now that we have further abstractions with containers and orchestration systems. Falco is giving us a good visibility inside containers and complement other Host and Network Intrusion Detection Systems. In a near future, we expect to deploy serverless functions to take action when Falco identifies patterns worth taking action for.\n\n* [Deckhouse](https://deckhouse.io/) - Deckhouse Platform presents to you the opportunity to create homogeneous Kubernetes clusters anywhere and handles comprehensive, automagical management for th",
                    "rendered": {
                      "text": "n servers, and the context around why things are running is even more tricky now that we have further abstractions with containers and orchestration systems. Falco is giving us a good visibility inside containers and complement other Host and Network Intrusion Detection Systems. In a near future, we expect to deploy serverless functions to take action when Falco identifies patterns worth taking action for.\n\n* [Deckhouse](https://deckhouse.io/) - Deckhouse Platform presents to you the opportunity to create homogeneous Kubernetes clusters anywhere and handles comprehensive, automagical management for th",
                      "markdown": "`n servers, and the context around why things are running is even more tricky now that we have further abstractions with containers and orchestration systems. Falco is giving us a good visibility inside containers and complement other Host and Network Intrusion Detection Systems. In a near future, we expect to deploy serverless functions to take action when Falco identifies patterns worth taking action for.\n\n* [Deckhouse](https://deckhouse.io/) - Deckhouse Platform presents to you the opportunity to create homogeneous Kubernetes clusters anywhere and handles comprehensive, automagical management for th`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/ADOPTERS.md"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 6,
                  "endColumn": 6,
                  "snippet": {
                    "text": "Known end users with notable contributions to the project include:\n* AWS\n* IBM\n* Red Hat\n\nFalco is being used by numerous other companies, both large and small, to build higher layer products and services. The list includes but is not limited to:\n* Equinix Metal\n",
                    "rendered": {
                      "text": "Known end users with notable contributions to the project include:\n* AWS\n* IBM\n* Red Hat\n\nFalco is being used by numerous other companies, both large and small, to build higher layer products and services. The list includes but is not limited to:\n* Equinix Metal\n",
                      "markdown": "`Known end users with notable contributions to the project include:\n* AWS\n* IBM\n* Red Hat\n\nFalco is being used by numerous other companies, both large and small, to build higher layer products and services. The list includes but is not limited to:\n* Equinix Metal\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 20,
                  "endLine": 215,
                  "endColumn": 24,
                  "snippet": {
                    "text": "citly state the experimental nature of the item.\n\n## Transition Phases\n\nSince software components may need to adapt to implement the requirements this proposal mandates, we assume the following stages are required to transition from the current state to the desired state fully:\n\n- Within Falco 0.38, at least stable features must be identified, and the adoption policy and relevant documentation should be implemented in Falco. Exceptions may be made temporarily for the deprecation policy.\n- Within subsequent releases and no later than Falco 1.0.0 (still not scheduled to date), all the policies must ",
                    "rendered": {
                      "text": "citly state the experimental nature of the item.\n\n## Transition Phases\n\nSince software components may need to adapt to implement the requirements this proposal mandates, we assume the following stages are required to transition from the current state to the desired state fully:\n\n- Within Falco 0.38, at least stable features must be identified, and the adoption policy and relevant documentation should be implemented in Falco. Exceptions may be made temporarily for the deprecation policy.\n- Within subsequent releases and no later than Falco 1.0.0 (still not scheduled to date), all the policies must ",
                      "markdown": "`citly state the experimental nature of the item.\n\n## Transition Phases\n\nSince software components may need to adapt to implement the requirements this proposal mandates, we assume the following stages are required to transition from the current state to the desired state fully:\n\n- Within Falco 0.38, at least stable features must be identified, and the adoption policy and relevant documentation should be implemented in Falco. Exceptions may be made temporarily for the deprecation policy.\n- Within subsequent releases and no later than Falco 1.0.0 (still not scheduled to date), all the policies must `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 99,
                  "endLine": 204,
                  "endColumn": 103,
                  "snippet": {
                    "text": "\n### Documentation\n\nDocumentation must be tied to a specific release and reflect the adoption level status of a feature at that specific release. In particular:\n\n- Deprecated items must be labeled `DEPRECATED` in all relevant documentation.\n- Stable items must be sufficiently documented. Explicitly labeling the Stable status is not required or recommended.\n",
                    "rendered": {
                      "text": "\n### Documentation\n\nDocumentation must be tied to a specific release and reflect the adoption level status of a feature at that specific release. In particular:\n\n- Deprecated items must be labeled `DEPRECATED` in all relevant documentation.\n- Stable items must be sufficiently documented. Explicitly labeling the Stable status is not required or recommended.\n",
                      "markdown": "`\n### Documentation\n\nDocumentation must be tied to a specific release and reflect the adoption level status of a feature at that specific release. In particular:\n\n- Deprecated items must be labeled `DEPRECATED` in all relevant documentation.\n- Stable items must be sufficiently documented. Explicitly labeling the Stable status is not required or recommended.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 143,
                  "endLine": 200,
                  "endColumn": 147,
                  "snippet": {
                    "text": "- *MINOR* version when adding functionality in a backward-compatible manner.\n- *PATCH* version when making backward-compatible bug fixes.\n\nMoreover, *MAJOR* version zero (0.y.z) is for versioning stabilization (i.e., before defining the public set of user-facing features and APIs). At this stage, the *MINOR* version is allowed to be incremented instead of the *MAJOR* version.\n\n### Documentation\n\n",
                    "rendered": {
                      "text": "- *MINOR* version when adding functionality in a backward-compatible manner.\n- *PATCH* version when making backward-compatible bug fixes.\n\nMoreover, *MAJOR* version zero (0.y.z) is for versioning stabilization (i.e., before defining the public set of user-facing features and APIs). At this stage, the *MINOR* version is allowed to be incremented instead of the *MAJOR* version.\n\n### Documentation\n\n",
                      "markdown": "`- *MINOR* version when adding functionality in a backward-compatible manner.\n- *PATCH* version when making backward-compatible bug fixes.\n\nMoreover, *MAJOR* version zero (0.y.z) is for versioning stabilization (i.e., before defining the public set of user-facing features and APIs). At this stage, the *MINOR* version is allowed to be incremented instead of the *MAJOR* version.\n\n### Documentation\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 2,
                  "endLine": 144,
                  "endColumn": 6,
                  "snippet": {
                    "text": "or no less than the indicated release cycles (see tables below) after their announced deprecation. \n   - If the change affects the feature partially, the deprecation applies only to that feature part. \n   - If the change removes the feature entirely, the deprecation applies to the entire feature.\n3. At least for the entire deprecation period, the feature must be labeled as *Deprecated* in all relevant documentation, and:\n   - for deprecated configurations or CLI elements, a warning must be emitted warnings when the feature is being enabled or used;\n   - for deprecated APIs, when technically feasib",
                    "rendered": {
                      "text": "or no less than the indicated release cycles (see tables below) after their announced deprecation. \n   - If the change affects the feature partially, the deprecation applies only to that feature part. \n   - If the change removes the feature entirely, the deprecation applies to the entire feature.\n3. At least for the entire deprecation period, the feature must be labeled as *Deprecated* in all relevant documentation, and:\n   - for deprecated configurations or CLI elements, a warning must be emitted warnings when the feature is being enabled or used;\n   - for deprecated APIs, when technically feasib",
                      "markdown": "`or no less than the indicated release cycles (see tables below) after their announced deprecation. \n   - If the change affects the feature partially, the deprecation applies only to that feature part. \n   - If the change removes the feature entirely, the deprecation applies to the entire feature.\n3. At least for the entire deprecation period, the feature must be labeled as *Deprecated* in all relevant documentation, and:\n   - for deprecated configurations or CLI elements, a warning must be emitted warnings when the feature is being enabled or used;\n   - for deprecated APIs, when technically feasib`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 45,
                  "endLine": 140,
                  "endColumn": 49,
                  "snippet": {
                    "text": ").\n\n\n### Deprecation Policy\n\nThe deprecation policy applies to any non-backward compatible user-facing changes. Any other changes introduced in a backward-compatible manner does not fall under the scope of this deprecation policy.\n\n**Deprecation rules**:\n1. Sandbox features can be removed or changed at any time without notice. No deprecation period is required.\n2. Incubating or Stable features and documented behaviors must enter a deprecation period and function for no less than the indicated release cycles (see tables below) after their announced deprecation. \n   - If the change affects the featu",
                    "rendered": {
                      "text": ").\n\n\n### Deprecation Policy\n\nThe deprecation policy applies to any non-backward compatible user-facing changes. Any other changes introduced in a backward-compatible manner does not fall under the scope of this deprecation policy.\n\n**Deprecation rules**:\n1. Sandbox features can be removed or changed at any time without notice. No deprecation period is required.\n2. Incubating or Stable features and documented behaviors must enter a deprecation period and function for no less than the indicated release cycles (see tables below) after their announced deprecation. \n   - If the change affects the featu",
                      "markdown": "`).\n\n\n### Deprecation Policy\n\nThe deprecation policy applies to any non-backward compatible user-facing changes. Any other changes introduced in a backward-compatible manner does not fall under the scope of this deprecation policy.\n\n**Deprecation rules**:\n1. Sandbox features can be removed or changed at any time without notice. No deprecation period is required.\n2. Incubating or Stable features and documented behaviors must enter a deprecation period and function for no less than the indicated release cycles (see tables below) after their announced deprecation. \n   - If the change affects the featu`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 99,
                  "endLine": 127,
                  "endColumn": 103,
                  "snippet": {
                    "text": "unctionality additions to an existing feature are inherently introduced at the same level as the feature itself unless logically separable (for instance, a sub-feature that may be enabled separately).\n3. A feature can be promoted *from Sandbox to Incubating* or *from Incubating to Stable* only after at least one release cycle has passed without user-facing changes to the feature.\n4. A feature cannot be demoted to a previous level.\n\n\n_Note about behaviors_:\nThis policy indirectly applies to behaviors, too. Behavior changes are assumed to be a consequence of a feature change. The adoption level of a",
                    "rendered": {
                      "text": "unctionality additions to an existing feature are inherently introduced at the same level as the feature itself unless logically separable (for instance, a sub-feature that may be enabled separately).\n3. A feature can be promoted *from Sandbox to Incubating* or *from Incubating to Stable* only after at least one release cycle has passed without user-facing changes to the feature.\n4. A feature cannot be demoted to a previous level.\n\n\n_Note about behaviors_:\nThis policy indirectly applies to behaviors, too. Behavior changes are assumed to be a consequence of a feature change. The adoption level of a",
                      "markdown": "`unctionality additions to an existing feature are inherently introduced at the same level as the feature itself unless logically separable (for instance, a sub-feature that may be enabled separately).\n3. A feature can be promoted *from Sandbox to Incubating* or *from Incubating to Stable* only after at least one release cycle has passed without user-facing changes to the feature.\n4. A feature cannot be demoted to a previous level.\n\n\n_Note about behaviors_:\nThis policy indirectly applies to behaviors, too. Behavior changes are assumed to be a consequence of a feature change. The adoption level of a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 79,
                  "endLine": 126,
                  "endColumn": 83,
                  "snippet": {
                    "text": "d as *Sandbox* and the user must be proactively informed by the experimental nature of the feature (i.e. emitting a notice when the feature is being enabled).\n   - Incubating: The feature must be labeled as *Incubating*.\n2. Any functionality additions to an existing feature are inherently introduced at the same level as the feature itself unless logically separable (for instance, a sub-feature that may be enabled separately).\n3. A feature can be promoted *from Sandbox to Incubating* or *from Incubating to Stable* only after at least one release cycle has passed without user-facing changes to the f",
                    "rendered": {
                      "text": "d as *Sandbox* and the user must be proactively informed by the experimental nature of the feature (i.e. emitting a notice when the feature is being enabled).\n   - Incubating: The feature must be labeled as *Incubating*.\n2. Any functionality additions to an existing feature are inherently introduced at the same level as the feature itself unless logically separable (for instance, a sub-feature that may be enabled separately).\n3. A feature can be promoted *from Sandbox to Incubating* or *from Incubating to Stable* only after at least one release cycle has passed without user-facing changes to the f",
                      "markdown": "`d as *Sandbox* and the user must be proactively informed by the experimental nature of the feature (i.e. emitting a notice when the feature is being enabled).\n   - Incubating: The feature must be labeled as *Incubating*.\n2. Any functionality additions to an existing feature are inherently introduced at the same level as the feature itself unless logically separable (for instance, a sub-feature that may be enabled separately).\n3. A feature can be promoted *from Sandbox to Incubating* or *from Incubating to Stable* only after at least one release cycle has passed without user-facing changes to the f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 30,
                  "endLine": 123,
                  "endColumn": 34,
                  "snippet": {
                    "text": "cation-policy) section below. |\n\n### Adoption Policy\n\nThe adoption policy applies to any backward compatible user-facing changes which add functionalities. For non-backward compatible changes see the [deprecation policy](#Deprecation-policy) below.\n\n**Adoption rules**:\n1. A feature can be introduced at only one of the following levels:\n   - Sandbox: The feature must be opt-in (e.g., not enabled by default), labeled as *Sandbox* and the user must be proactively informed by the experimental nature of the feature (i.e. emitting a notice when the feature is being enabled).\n   - Incubating: The feature",
                    "rendered": {
                      "text": "cation-policy) section below. |\n\n### Adoption Policy\n\nThe adoption policy applies to any backward compatible user-facing changes which add functionalities. For non-backward compatible changes see the [deprecation policy](#Deprecation-policy) below.\n\n**Adoption rules**:\n1. A feature can be introduced at only one of the following levels:\n   - Sandbox: The feature must be opt-in (e.g., not enabled by default), labeled as *Sandbox* and the user must be proactively informed by the experimental nature of the feature (i.e. emitting a notice when the feature is being enabled).\n   - Incubating: The feature",
                      "markdown": "`cation-policy) section below. |\n\n### Adoption Policy\n\nThe adoption policy applies to any backward compatible user-facing changes which add functionalities. For non-backward compatible changes see the [deprecation policy](#Deprecation-policy) below.\n\n**Adoption rules**:\n1. A feature can be introduced at only one of the following levels:\n   - Sandbox: The feature must be opt-in (e.g., not enabled by default), labeled as *Sandbox* and the user must be proactively informed by the experimental nature of the feature (i.e. emitting a notice when the feature is being enabled).\n   - Incubating: The feature`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 92,
                  "endLine": 113,
                  "endColumn": 96,
                  "snippet": {
                    "text": "\n| Maturity Level | Intended for |\n| --- | --- |\n| Sandbox |  Experimental/alpha features, not recommended for production use, can be removed at any time without further notice. |\n| Incubating | Beta features, long-term support is not guaranteed. |\n| Stable | General Availability (GA) features for which long-term support is expected. |\n| Deprecated | See the [deprecation policy](#Deprecation-policy) section below. |\n",
                    "rendered": {
                      "text": "\n| Maturity Level | Intended for |\n| --- | --- |\n| Sandbox |  Experimental/alpha features, not recommended for production use, can be removed at any time without further notice. |\n| Incubating | Beta features, long-term support is not guaranteed. |\n| Stable | General Availability (GA) features for which long-term support is expected. |\n| Deprecated | See the [deprecation policy](#Deprecation-policy) section below. |\n",
                      "markdown": "`\n| Maturity Level | Intended for |\n| --- | --- |\n| Sandbox |  Experimental/alpha features, not recommended for production use, can be removed at any time without further notice. |\n| Incubating | Beta features, long-term support is not guaranteed. |\n| Stable | General Availability (GA) features for which long-term support is expected. |\n| Deprecated | See the [deprecation policy](#Deprecation-policy) section below. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 252,
                  "endLine": 109,
                  "endColumn": 256,
                  "snippet": {
                    "text": "\n### Maturation Levels\n\nMaturation levels (inspired by those we already have in place for [repositories](https://github.com/falcosecurity/evolution/blob/main/REPOSITORIES.md#status)) are used to characterize the maturity of a feature. Each feature will have an assigned level  at any specific time (i.e., a Falco release). Levels are shown in the table below.\n\n| Maturity Level | Intended for |\n| --- | --- |\n",
                    "rendered": {
                      "text": "\n### Maturation Levels\n\nMaturation levels (inspired by those we already have in place for [repositories](https://github.com/falcosecurity/evolution/blob/main/REPOSITORIES.md#status)) are used to characterize the maturity of a feature. Each feature will have an assigned level  at any specific time (i.e., a Falco release). Levels are shown in the table below.\n\n| Maturity Level | Intended for |\n| --- | --- |\n",
                      "markdown": "`\n### Maturation Levels\n\nMaturation levels (inspired by those we already have in place for [repositories](https://github.com/falcosecurity/evolution/blob/main/REPOSITORIES.md#status)) are used to characterize the maturity of a feature. Each feature will have an assigned level  at any specific time (i.e., a Falco release). Levels are shown in the table below.\n\n| Maturity Level | Intended for |\n| --- | --- |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 46,
                  "endLine": 30,
                  "endColumn": 54,
                  "snippet": {
                    "text": "rticular tasks. Features encompass aspects such as functionality, user value, usability, integrability, scalability, configurability, and discoverability. Features can range from essential user interface elements to complex, multifunctional operations.\n\nA feature change refers to any modification or update to an existing feature or the addition of a new feature. This does not include documentation, Falco compatibility across different environments, platforms, systems, or other software or hardware, bug fixing (stated it does not require a feature change to overcome the problem), and performance (unles",
                    "rendered": {
                      "text": "rticular tasks. Features encompass aspects such as functionality, user value, usability, integrability, scalability, configurability, and discoverability. Features can range from essential user interface elements to complex, multifunctional operations.\n\nA feature change refers to any modification or update to an existing feature or the addition of a new feature. This does not include documentation, Falco compatibility across different environments, platforms, systems, or other software or hardware, bug fixing (stated it does not require a feature change to overcome the problem), and performance (unles",
                      "markdown": "`rticular tasks. Features encompass aspects such as functionality, user value, usability, integrability, scalability, configurability, and discoverability. Features can range from essential user interface elements to complex, multifunctional operations.\n\nA feature change refers to any modification or update to an existing feature or the addition of a new feature. This does not include documentation, Falco compatibility across different environments, platforms, systems, or other software or hardware, bug fixing (stated it does not require a feature change to overcome the problem), and performance (unles`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 52,
                  "endLine": 140,
                  "endColumn": 58,
                  "snippet": {
                    "text": "# Deprecation Policy\n\nThe deprecation policy applies to any non-backward compatible user-facing changes. Any other changes introduced in a backward-compatible manner does not fall under the scope of this deprecation policy.\n\n**Deprecation rules**:\n1. Sandbox features can be removed or changed at any time without notice. No deprecation period is required.\n2. Incubating or Stable features and documented behaviors must enter a deprecation period and function for no less than the indicated release cycles (see tables below) after their announced deprecation. \n   - If the change affects the feature partia",
                    "rendered": {
                      "text": "# Deprecation Policy\n\nThe deprecation policy applies to any non-backward compatible user-facing changes. Any other changes introduced in a backward-compatible manner does not fall under the scope of this deprecation policy.\n\n**Deprecation rules**:\n1. Sandbox features can be removed or changed at any time without notice. No deprecation period is required.\n2. Incubating or Stable features and documented behaviors must enter a deprecation period and function for no less than the indicated release cycles (see tables below) after their announced deprecation. \n   - If the change affects the feature partia",
                      "markdown": "`# Deprecation Policy\n\nThe deprecation policy applies to any non-backward compatible user-facing changes. Any other changes introduced in a backward-compatible manner does not fall under the scope of this deprecation policy.\n\n**Deprecation rules**:\n1. Sandbox features can be removed or changed at any time without notice. No deprecation period is required.\n2. Incubating or Stable features and documented behaviors must enter a deprecation period and function for no less than the indicated release cycles (see tables below) after their announced deprecation. \n   - If the change affects the feature partia`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 99,
                  "endLine": 113,
                  "endColumn": 105,
                  "snippet": {
                    "text": "\n| Maturity Level | Intended for |\n| --- | --- |\n| Sandbox |  Experimental/alpha features, not recommended for production use, can be removed at any time without further notice. |\n| Incubating | Beta features, long-term support is not guaranteed. |\n| Stable | General Availability (GA) features for which long-term support is expected. |\n| Deprecated | See the [deprecation policy](#Deprecation-policy) section below. |\n",
                    "rendered": {
                      "text": "\n| Maturity Level | Intended for |\n| --- | --- |\n| Sandbox |  Experimental/alpha features, not recommended for production use, can be removed at any time without further notice. |\n| Incubating | Beta features, long-term support is not guaranteed. |\n| Stable | General Availability (GA) features for which long-term support is expected. |\n| Deprecated | See the [deprecation policy](#Deprecation-policy) section below. |\n",
                      "markdown": "`\n| Maturity Level | Intended for |\n| --- | --- |\n| Sandbox |  Experimental/alpha features, not recommended for production use, can be removed at any time without further notice. |\n| Incubating | Beta features, long-term support is not guaranteed. |\n| Stable | General Availability (GA) features for which long-term support is expected. |\n| Deprecated | See the [deprecation policy](#Deprecation-policy) section below. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/proposals/20231220-features-adoption-and-deprecation.md"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 268,
                  "endLine": 109,
                  "endColumn": 274,
                  "snippet": {
                    "text": "\n### Maturation Levels\n\nMaturation levels (inspired by those we already have in place for [repositories](https://github.com/falcosecurity/evolution/blob/main/REPOSITORIES.md#status)) are used to characterize the maturity of a feature. Each feature will have an assigned level  at any specific time (i.e., a Falco release). Levels are shown in the table below.\n\n| Maturity Level | Intended for |\n| --- | --- |\n",
                    "rendered": {
                      "text": "\n### Maturation Levels\n\nMaturation levels (inspired by those we already have in place for [repositories](https://github.com/falcosecurity/evolution/blob/main/REPOSITORIES.md#status)) are used to characterize the maturity of a feature. Each feature will have an assigned level  at any specific time (i.e., a Falco release). Levels are shown in the table below.\n\n| Maturity Level | Intended for |\n| --- | --- |\n",
                      "markdown": "`\n### Maturation Levels\n\nMaturation levels (inspired by those we already have in place for [repositories](https://github.com/falcosecurity/evolution/blob/main/REPOSITORIES.md#status)) are used to characterize the maturity of a feature. Each feature will have an assigned level  at any specific time (i.e., a Falco release). Levels are shown in the table below.\n\n| Maturity Level | Intended for |\n| --- | --- |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/rule_loader_collector.cpp"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 26,
                  "endLine": 282,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n\tTHROW(!prev, ERROR_NO_PREVIOUS_RULE_REPLACE, info.ctx);\n\tTHROW(!info.has_any_value(),\n\t      \"The rule must have at least one field that can be replaced\",\n\t      info.ctx);\n\n\t// note: source can be nullptr in case we've collected a\n",
                    "rendered": {
                      "text": "\n\tTHROW(!prev, ERROR_NO_PREVIOUS_RULE_REPLACE, info.ctx);\n\tTHROW(!info.has_any_value(),\n\t      \"The rule must have at least one field that can be replaced\",\n\t      info.ctx);\n\n\t// note: source can be nullptr in case we've collected a\n",
                      "markdown": "`\n\tTHROW(!prev, ERROR_NO_PREVIOUS_RULE_REPLACE, info.ctx);\n\tTHROW(!info.has_any_value(),\n\t      \"The rule must have at least one field that can be replaced\",\n\t      info.ctx);\n\n\t// note: source can be nullptr in case we've collected a\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/yaml_helper.h"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 22,
                  "endLine": 290,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t\t\t\t\t\t// Eat \"${\" and \"}\" when getting the env var name\n\t\t\t\t\t\tauto env_str = substr.substr(2, end_pos - 2);\n\t\t\t\t\t\tconst char* env_value =\n\t\t\t\t\t\t        std::getenv(env_str.c_str());  // Get the environment variable value\n\t\t\t\t\t\tif(env_value) {\n\t\t\t\t\t\t\t// env variable name + \"${}\"\n\t\t\t\t\t\t\tvalue.replace(start_pos, env_str.length() + 3, env_value);\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t// Eat \"${\" and \"}\" when getting the env var name\n\t\t\t\t\t\tauto env_str = substr.substr(2, end_pos - 2);\n\t\t\t\t\t\tconst char* env_value =\n\t\t\t\t\t\t        std::getenv(env_str.c_str());  // Get the environment variable value\n\t\t\t\t\t\tif(env_value) {\n\t\t\t\t\t\t\t// env variable name + \"${}\"\n\t\t\t\t\t\t\tvalue.replace(start_pos, env_str.length() + 3, env_value);\n",
                      "markdown": "`\t\t\t\t\t\t// Eat \"${\" and \"}\" when getting the env var name\n\t\t\t\t\t\tauto env_str = substr.substr(2, end_pos - 2);\n\t\t\t\t\t\tconst char* env_value =\n\t\t\t\t\t\t        std::getenv(env_str.c_str());  // Get the environment variable value\n\t\t\t\t\t\tif(env_value) {\n\t\t\t\t\t\t\t// env variable name + \"${}\"\n\t\t\t\t\t\t\tvalue.replace(start_pos, env_str.length() + 3, env_value);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/yaml_helper.h"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 41,
                  "endLine": 395,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\t\t\t}\n\t\t\t}\n\t\t} catch(const std::exception& e) {\n\t\t\tthrow std::runtime_error(\"Config error at key \\\"\" + key +\n\t\t\t                         \"\\\": \" + std::string(e.what()));\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t}\n\t\t\t}\n\t\t} catch(const std::exception& e) {\n\t\t\tthrow std::runtime_error(\"Config error at key \\\"\" + key +\n\t\t\t                         \"\\\": \" + std::string(e.what()));\n\t\t}\n\t}\n",
                      "markdown": "`\t\t\t\t}\n\t\t\t}\n\t\t} catch(const std::exception& e) {\n\t\t\tthrow std::runtime_error(\"Config error at key \\\"\" + key +\n\t\t\t                         \"\\\": \" + std::string(e.what()));\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/yaml_helper.h"
                },
                "region": {
                  "startLine": 362,
                  "startColumn": 67,
                  "endLine": 362,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\n\t\t\t\tif(should_shift) {\n\t\t\t\t\tif(nodeKey.empty()) {\n\t\t\t\t\t\tthrow std::runtime_error(\"Parsing error: unexpected character at pos \" +\n\t\t\t\t\t\t                         std::to_string(i));\n\t\t\t\t\t}\n\t\t\t\t\tret.reset(ret[nodeKey]);\n",
                    "rendered": {
                      "text": "\n\t\t\t\tif(should_shift) {\n\t\t\t\t\tif(nodeKey.empty()) {\n\t\t\t\t\t\tthrow std::runtime_error(\"Parsing error: unexpected character at pos \" +\n\t\t\t\t\t\t                         std::to_string(i));\n\t\t\t\t\t}\n\t\t\t\t\tret.reset(ret[nodeKey]);\n",
                      "markdown": "`\n\t\t\t\tif(should_shift) {\n\t\t\t\t\tif(nodeKey.empty()) {\n\t\t\t\t\t\tthrow std::runtime_error(\"Parsing error: unexpected character at pos \" +\n\t\t\t\t\t\t                         std::to_string(i));\n\t\t\t\t\t}\n\t\t\t\t\tret.reset(ret[nodeKey]);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/yaml_helper.h"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 69,
                  "endLine": 354,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n\t\t\t\tif(c != '.' && c != '[') {\n\t\t\t\t\tif(i > 0 && nodeKey.empty() && key[i - 1] != '.') {\n\t\t\t\t\t\tthrow std::runtime_error(\"Parsing error: expected '.' character at pos \" +\n\t\t\t\t\t\t                         std::to_string(i - 1));\n\t\t\t\t\t}\n\t\t\t\t\tnodeKey += c;\n",
                    "rendered": {
                      "text": "\n\t\t\t\tif(c != '.' && c != '[') {\n\t\t\t\t\tif(i > 0 && nodeKey.empty() && key[i - 1] != '.') {\n\t\t\t\t\t\tthrow std::runtime_error(\"Parsing error: expected '.' character at pos \" +\n\t\t\t\t\t\t                         std::to_string(i - 1));\n\t\t\t\t\t}\n\t\t\t\t\tnodeKey += c;\n",
                      "markdown": "`\n\t\t\t\tif(c != '.' && c != '[') {\n\t\t\t\t\tif(i > 0 && nodeKey.empty() && key[i - 1] != '.') {\n\t\t\t\t\t\tthrow std::runtime_error(\"Parsing error: expected '.' character at pos \" +\n\t\t\t\t\t\t                         std::to_string(i - 1));\n\t\t\t\t\t}\n\t\t\t\t\tnodeKey += c;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/yaml_helper.h"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 42,
                  "endLine": 287,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\t\t\tif(substr.rfind(\"${\", 0) == 0) {\n\t\t\t\t\tauto end_pos = substr.find('}');\n\t\t\t\t\tif(end_pos != std::string::npos) {\n\t\t\t\t\t\t// Eat \"${\" and \"}\" when getting the env var name\n\t\t\t\t\t\tauto env_str = substr.substr(2, end_pos - 2);\n\t\t\t\t\t\tconst char* env_value =\n\t\t\t\t\t\t        std::getenv(env_str.c_str());  // Get the environment variable value\n",
                    "rendered": {
                      "text": "\t\t\t\tif(substr.rfind(\"${\", 0) == 0) {\n\t\t\t\t\tauto end_pos = substr.find('}');\n\t\t\t\t\tif(end_pos != std::string::npos) {\n\t\t\t\t\t\t// Eat \"${\" and \"}\" when getting the env var name\n\t\t\t\t\t\tauto env_str = substr.substr(2, end_pos - 2);\n\t\t\t\t\t\tconst char* env_value =\n\t\t\t\t\t\t        std::getenv(env_str.c_str());  // Get the environment variable value\n",
                      "markdown": "`\t\t\t\tif(substr.rfind(\"${\", 0) == 0) {\n\t\t\t\t\tauto end_pos = substr.find('}');\n\t\t\t\t\tif(end_pos != std::string::npos) {\n\t\t\t\t\t\t// Eat \"${\" and \"}\" when getting the env var name\n\t\t\t\t\t\tauto env_str = substr.substr(2, end_pos - 2);\n\t\t\t\t\t\tconst char* env_value =\n\t\t\t\t\t\t        std::getenv(env_str.c_str());  // Get the environment variable value\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/yaml_helper.h"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 1,
                  "endLine": 196,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tvoid set_object(const std::string& key, const YAML::Node& value) {\n\t\tYAML::Node node;\n\t\tget_node(node, key, true);\n\t\tnode = value;\n\t}\n\n\t/**\n",
                    "rendered": {
                      "text": "\tvoid set_object(const std::string& key, const YAML::Node& value) {\n\t\tYAML::Node node;\n\t\tget_node(node, key, true);\n\t\tnode = value;\n\t}\n\n\t/**\n",
                      "markdown": "`\tvoid set_object(const std::string& key, const YAML::Node& value) {\n\t\tYAML::Node node;\n\t\tget_node(node, key, true);\n\t\tnode = value;\n\t}\n\n\t/**\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/yaml_helper.h"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 1,
                  "endLine": 187,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tvoid set_scalar(const std::string& key, const T& value) {\n\t\tYAML::Node node;\n\t\tget_node(node, key, true);\n\t\tnode = value;\n\t}\n\n\t/**\n",
                    "rendered": {
                      "text": "\tvoid set_scalar(const std::string& key, const T& value) {\n\t\tYAML::Node node;\n\t\tget_node(node, key, true);\n\t\tnode = value;\n\t}\n\n\t/**\n",
                      "markdown": "`\tvoid set_scalar(const std::string& key, const T& value) {\n\t\tYAML::Node node;\n\t\tget_node(node, key, true);\n\t\tnode = value;\n\t}\n\n\t/**\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/engine/yaml_helper.h"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 19,
                  "endLine": 101,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\tschema_warnings->clear();\n\t\t\tif(!schema.empty()) {\n\t\t\t\t// Validate each node.\n\t\t\t\tfor(const auto& node : nodes) {\n\t\t\t\t\tvalidate_node(node, schema, schema_warnings);\n\t\t\t\t}\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\tschema_warnings->clear();\n\t\t\tif(!schema.empty()) {\n\t\t\t\t// Validate each node.\n\t\t\t\tfor(const auto& node : nodes) {\n\t\t\t\t\tvalidate_node(node, schema, schema_warnings);\n\t\t\t\t}\n\t\t\t} else {\n",
                      "markdown": "`\t\t\tschema_warnings->clear();\n\t\t\tif(!schema.empty()) {\n\t\t\t\t// Validate each node.\n\t\t\t\tfor(const auto& node : nodes) {\n\t\t\t\t\tvalidate_node(node, schema, schema_warnings);\n\t\t\t\t}\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/userspace/falco/app/actions/load_rules_files.cpp"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 27,
                  "endLine": 38,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n\tif(s.config->m_rules_filenames.empty()) {\n\t\treturn run_result::fatal(\n\t\t        \"You must specify at least one rules file/directory via -r or a rules_file entry \"\n\t\t        \"in falco.yaml\");\n\t}\n\n",
                    "rendered": {
                      "text": "\n\tif(s.config->m_rules_filenames.empty()) {\n\t\treturn run_result::fatal(\n\t\t        \"You must specify at least one rules file/directory via -r or a rules_file entry \"\n\t\t        \"in falco.yaml\");\n\t}\n\n",
                      "markdown": "`\n\tif(s.config->m_rules_filenames.empty()) {\n\t\treturn run_result::fatal(\n\t\t        \"You must specify at least one rules file/directory via -r or a rules_file entry \"\n\t\t        \"in falco.yaml\");\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                      "markdown": "`#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 58,
                  "endLine": 40,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\techo \"  --kernel-release <value> set the kernel release\"\n\techo \"  --kernel-version <value> set the kernel version\"\n \techo \"  --http-insecure\t         enable insecure downloads\"\n\techo \"  --print-env              skip execution and print env variables for other tools to consume\"\n\techo \"\"\n\techo \"Environment variables:\"\n\techo \"  FALCOCTL_DRIVER_REPOS         specify different URL(s) where to look for prebuilt Falco drivers (comma separated)\"\n",
                    "rendered": {
                      "text": "\techo \"  --kernel-release <value> set the kernel release\"\n\techo \"  --kernel-version <value> set the kernel version\"\n \techo \"  --http-insecure\t         enable insecure downloads\"\n\techo \"  --print-env              skip execution and print env variables for other tools to consume\"\n\techo \"\"\n\techo \"Environment variables:\"\n\techo \"  FALCOCTL_DRIVER_REPOS         specify different URL(s) where to look for prebuilt Falco drivers (comma separated)\"\n",
                      "markdown": "`\techo \"  --kernel-release <value> set the kernel release\"\n\techo \"  --kernel-version <value> set the kernel version\"\n \techo \"  --http-insecure\t         enable insecure downloads\"\n\techo \"  --print-env              skip execution and print env variables for other tools to consume\"\n\techo \"\"\n\techo \"Environment variables:\"\n\techo \"  FALCOCTL_DRIVER_REPOS         specify different URL(s) where to look for prebuilt Falco drivers (comma separated)\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 8,
                  "endLine": 24,
                  "endColumn": 16,
                  "snippet": {
                    "text": "print_usage() {\n\techo \"\"\n\techo \"Usage:\"\n\techo \"  docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro falcosecurity/falco-driver-loader:latest [driver] [options]\"\n\techo \"\"\n\techo \"Available drivers:\"\n\techo \"  auto\t       leverage automatic driver selection logic (default)\"\n",
                    "rendered": {
                      "text": "print_usage() {\n\techo \"\"\n\techo \"Usage:\"\n\techo \"  docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro falcosecurity/falco-driver-loader:latest [driver] [options]\"\n\techo \"\"\n\techo \"Available drivers:\"\n\techo \"  auto\t       leverage automatic driver selection logic (default)\"\n",
                      "markdown": "`print_usage() {\n\techo \"\"\n\techo \"Usage:\"\n\techo \"  docker run -i -t --privileged -v /root/.falco:/root/.falco -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro -v /etc:/host/etc:ro falcosecurity/falco-driver-loader:latest [driver] [options]\"\n\techo \"\"\n\techo \"Available drivers:\"\n\techo \"  auto\t       leverage automatic driver selection logic (default)\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/driver-loader/docker-entrypoint.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n",
                      "markdown": "`#!/usr/bin/env bash\n# SPDX-License-Identifier: Apache-2.0\n#\n# Copyright (C) 2023 The Falco Authors.\n#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 38,
                  "endLine": 39,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ENV HOME /root\n\nCOPY --from=builder /falco /\n\nCMD [\"/usr/bin/falco\", \"-o\", \"time_format_iso_8601=true\"]\n",
                    "rendered": {
                      "text": "ENV HOME /root\n\nCOPY --from=builder /falco /\n\nCMD [\"/usr/bin/falco\", \"-o\", \"time_format_iso_8601=true\"]\n",
                      "markdown": "`ENV HOME /root\n\nCOPY --from=builder /falco /\n\nCMD [\"/usr/bin/falco\", \"-o\", \"time_format_iso_8601=true\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 14,
                  "endLine": 31,
                  "endColumn": 22,
                  "snippet": {
                    "text": "LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\n",
                    "rendered": {
                      "text": "LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\n",
                      "markdown": "`LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 14,
                  "endLine": 9,
                  "endColumn": 22,
                  "snippet": {
                    "text": "ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\nWORKDIR /\n\n",
                    "rendered": {
                      "text": "ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\nWORKDIR /\n\n",
                      "markdown": "`ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\nWORKDIR /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 19,
                  "endLine": 35,
                  "endColumn": 4,
                  "snippet": {
                    "text": "RUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\nENV HOME /root\n\nCOPY --from=builder /falco /\n\n",
                    "rendered": {
                      "text": "RUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\nENV HOME /root\n\nCOPY --from=builder /falco /\n\n",
                      "markdown": "`RUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\nENV HOME /root\n\nCOPY --from=builder /falco /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 34,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\nENV HOME /root\n\nCOPY --from=builder /falco /\n",
                    "rendered": {
                      "text": "\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\nENV HOME /root\n\nCOPY --from=builder /falco /\n",
                      "markdown": "`\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\nENV HOME /root\n\nCOPY --from=builder /falco /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 6,
                  "endLine": 32,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\nENV HOME /root\n",
                    "rendered": {
                      "text": "# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\nENV HOME /root\n",
                      "markdown": "`# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\nENV HOME /root\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 59,
                  "endLine": 31,
                  "endColumn": 65,
                  "snippet": {
                    "text": "LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\n",
                    "rendered": {
                      "text": "LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\n",
                      "markdown": "`LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 24,
                  "endLine": 31,
                  "endColumn": 33,
                  "snippet": {
                    "text": "LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\n",
                    "rendered": {
                      "text": "LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\n",
                      "markdown": "`LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 31,
                  "endColumn": 12,
                  "snippet": {
                    "text": "LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\n",
                    "rendered": {
                      "text": "LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\n",
                      "markdown": "`LABEL usage=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro --name NAME IMAGE\"\n# NOTE: for the \"least privileged\" use case, please refer to the official documentation\n\nRUN apt-get -y update && apt-get -y install ca-certificates curl jq libelf1 \\\n    && apt clean -y && rm -rf /var/lib/apt/lists/*\n\nENV HOST_ROOT /host\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 6,
                  "endLine": 21,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n    && mv /falco/etc/falco/falco.yaml.new /falco/etc/falco/falco.yaml\n\nFROM debian:12-slim\n\n",
                    "rendered": {
                      "text": "    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n    && mv /falco/etc/falco/falco.yaml.new /falco/etc/falco/falco.yaml\n\nFROM debian:12-slim\n\n",
                      "markdown": "`    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n    && mv /falco/etc/falco/falco.yaml.new /falco/etc/falco/falco.yaml\n\nFROM debian:12-slim\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 20,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n    && mv /falco/etc/falco/falco.yaml.new /falco/etc/falco/falco.yaml\n\nFROM debian:12-slim\n",
                    "rendered": {
                      "text": "    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n    && mv /falco/etc/falco/falco.yaml.new /falco/etc/falco/falco.yaml\n\nFROM debian:12-slim\n",
                      "markdown": "`    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n    && mv /falco/etc/falco/falco.yaml.new /falco/etc/falco/falco.yaml\n\nFROM debian:12-slim\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 17,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-$(urlencode ${FALCO_VERSION})-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n",
                    "rendered": {
                      "text": "    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-$(urlencode ${FALCO_VERSION})-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n",
                      "markdown": "`    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-$(urlencode ${FALCO_VERSION})-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /falco/etc/falco/falco.yaml > /falco/etc/falco/falco.yaml.new \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 3,
                  "endLine": 15,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nRUN curl -L -o falco.tar.gz \\\n    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-$(urlencode ${FALCO_VERSION})-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n",
                    "rendered": {
                      "text": "\nRUN curl -L -o falco.tar.gz \\\n    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-$(urlencode ${FALCO_VERSION})-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n",
                      "markdown": "`\nRUN curl -L -o falco.tar.gz \\\n    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-$(urlencode ${FALCO_VERSION})-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n    mv falco-${FALCO_VERSION}-$(uname -m) falco && \\\n    rm -rf /falco/usr/src/falco-*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nWORKDIR /\n\nRUN curl -L -o falco.tar.gz \\\n    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-$(urlencode ${FALCO_VERSION})-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n",
                    "rendered": {
                      "text": "\nWORKDIR /\n\nRUN curl -L -o falco.tar.gz \\\n    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-$(urlencode ${FALCO_VERSION})-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n",
                      "markdown": "`\nWORKDIR /\n\nRUN curl -L -o falco.tar.gz \\\n    https://download.falco.org/packages/${VERSION_BUCKET}/$(uname -m)/falco-$(urlencode ${FALCO_VERSION})-$(uname -m).tar.gz && \\\n    tar -xvf falco.tar.gz && \\\n    rm -f falco.tar.gz && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 60,
                  "endLine": 9,
                  "endColumn": 66,
                  "snippet": {
                    "text": "ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\nWORKDIR /\n\n",
                    "rendered": {
                      "text": "ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\nWORKDIR /\n\n",
                      "markdown": "`ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\nWORKDIR /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 24,
                  "endLine": 9,
                  "endColumn": 33,
                  "snippet": {
                    "text": "ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\nWORKDIR /\n\n",
                    "rendered": {
                      "text": "ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\nWORKDIR /\n\n",
                      "markdown": "`ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\nWORKDIR /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 3,
                  "endLine": 9,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\nWORKDIR /\n\n",
                    "rendered": {
                      "text": "ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\nWORKDIR /\n\n",
                      "markdown": "`ENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\nWORKDIR /\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 34,
                  "endLine": 7,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG FALCO_VERSION\nARG VERSION_BUCKET=bin\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\n",
                    "rendered": {
                      "text": "ARG FALCO_VERSION\nARG VERSION_BUCKET=bin\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\n",
                      "markdown": "`ARG FALCO_VERSION\nARG VERSION_BUCKET=bin\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/docker/no-driver/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 6,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nARG FALCO_VERSION\nARG VERSION_BUCKET=bin\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n",
                    "rendered": {
                      "text": "\nARG FALCO_VERSION\nARG VERSION_BUCKET=bin\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n",
                      "markdown": "`\nARG FALCO_VERSION\nARG VERSION_BUCKET=bin\n\nENV FALCO_VERSION=${FALCO_VERSION}\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nRUN apt-get -y update && apt-get -y install gridsite-clients curl ca-certificates\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 88,
                  "endLine": 72,
                  "endColumn": 95,
                  "snippet": {
                    "text": "\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json --check\n\n# Add new formatters here...\n\n",
                    "rendered": {
                      "text": "\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json --check\n\n# Add new formatters here...\n\n",
                      "markdown": "`\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json --check\n\n# Add new formatters here...\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 47,
                  "endLine": 72,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json --check\n\n# Add new formatters here...\n\n",
                    "rendered": {
                      "text": "\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json --check\n\n# Add new formatters here...\n\n",
                      "markdown": "`\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json --check\n\n# Add new formatters here...\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json --check\n\n# Add new formatters here...\n\n",
                    "rendered": {
                      "text": "\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json --check\n\n# Add new formatters here...\n\n",
                      "markdown": "`\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json --check\n\n# Add new formatters here...\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 88,
                  "endLine": 68,
                  "endColumn": 95,
                  "snippet": {
                    "text": "\n.PHONY: format-cmake\nformat-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json -i\n\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n",
                    "rendered": {
                      "text": "\n.PHONY: format-cmake\nformat-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json -i\n\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n",
                      "markdown": "`\n.PHONY: format-cmake\nformat-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json -i\n\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 47,
                  "endLine": 68,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n.PHONY: format-cmake\nformat-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json -i\n\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n",
                    "rendered": {
                      "text": "\n.PHONY: format-cmake\nformat-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json -i\n\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n",
                      "markdown": "`\n.PHONY: format-cmake\nformat-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json -i\n\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 68,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n.PHONY: format-cmake\nformat-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json -i\n\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n",
                    "rendered": {
                      "text": "\n.PHONY: format-cmake\nformat-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json -i\n\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n",
                      "markdown": "`\n.PHONY: format-cmake\nformat-cmake: cmake-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cmake)$$|CMakeLists.txt$$' | xargs ${CMAKE_FORMAT_EXE} --config-files ${PROJECT_ROOT_DIR}/.cmake-format.json -i\n\n.PHONY: check-cmake\ncheck-cmake: cmake-format-install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 73,
                  "endLine": 49,
                  "endColumn": 80,
                  "snippet": {
                    "text": "\n.PHONY: check-clang\ncheck-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -n\n\n######################\n#    Cmake-format    #\n",
                    "rendered": {
                      "text": "\n.PHONY: check-clang\ncheck-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -n\n\n######################\n#    Cmake-format    #\n",
                      "markdown": "`\n.PHONY: check-clang\ncheck-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -n\n\n######################\n#    Cmake-format    #\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 47,
                  "endLine": 49,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n.PHONY: check-clang\ncheck-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -n\n\n######################\n#    Cmake-format    #\n",
                    "rendered": {
                      "text": "\n.PHONY: check-clang\ncheck-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -n\n\n######################\n#    Cmake-format    #\n",
                      "markdown": "`\n.PHONY: check-clang\ncheck-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -n\n\n######################\n#    Cmake-format    #\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 49,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n.PHONY: check-clang\ncheck-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -n\n\n######################\n#    Cmake-format    #\n",
                    "rendered": {
                      "text": "\n.PHONY: check-clang\ncheck-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -n\n\n######################\n#    Cmake-format    #\n",
                      "markdown": "`\n.PHONY: check-clang\ncheck-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -n\n\n######################\n#    Cmake-format    #\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 73,
                  "endLine": 45,
                  "endColumn": 80,
                  "snippet": {
                    "text": "\n.PHONY: format-clang\nformat-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -i\n\n.PHONY: check-clang\ncheck-clang: clang-format-install\n",
                    "rendered": {
                      "text": "\n.PHONY: format-clang\nformat-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -i\n\n.PHONY: check-clang\ncheck-clang: clang-format-install\n",
                      "markdown": "`\n.PHONY: format-clang\nformat-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -i\n\n.PHONY: check-clang\ncheck-clang: clang-format-install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 47,
                  "endLine": 45,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n.PHONY: format-clang\nformat-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -i\n\n.PHONY: check-clang\ncheck-clang: clang-format-install\n",
                    "rendered": {
                      "text": "\n.PHONY: format-clang\nformat-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -i\n\n.PHONY: check-clang\ncheck-clang: clang-format-install\n",
                      "markdown": "`\n.PHONY: format-clang\nformat-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -i\n\n.PHONY: check-clang\ncheck-clang: clang-format-install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n.PHONY: format-clang\nformat-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -i\n\n.PHONY: check-clang\ncheck-clang: clang-format-install\n",
                    "rendered": {
                      "text": "\n.PHONY: format-clang\nformat-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -i\n\n.PHONY: check-clang\ncheck-clang: clang-format-install\n",
                      "markdown": "`\n.PHONY: format-clang\nformat-clang: clang-format-install\n\tgit ls-files --directory ${PROJECT_ROOT_DIR} | grep -E '\\.(cpp|h|c)$$' | xargs ${CLANG_FORMAT_EXE} -Werror --style=file:${PROJECT_ROOT_DIR}/.clang-format -i\n\n.PHONY: check-clang\ncheck-clang: clang-format-install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 26,
                  "endLine": 26,
                  "endColumn": 31,
                  "snippet": {
                    "text": "CMAKE_FORMAT_VERSION = \"$(shell ${CMAKE_FORMAT_EXE} --version | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*')\"\nCMAKE_FORMAT_DESIRED_VERSION = \"0.6.13\"\n\nPROJECT_ROOT_DIR = $(shell git rev-parse --show-toplevel)\n\n######################\n#    Clang-format    #\n",
                    "rendered": {
                      "text": "CMAKE_FORMAT_VERSION = \"$(shell ${CMAKE_FORMAT_EXE} --version | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*')\"\nCMAKE_FORMAT_DESIRED_VERSION = \"0.6.13\"\n\nPROJECT_ROOT_DIR = $(shell git rev-parse --show-toplevel)\n\n######################\n#    Clang-format    #\n",
                      "markdown": "`CMAKE_FORMAT_VERSION = \"$(shell ${CMAKE_FORMAT_EXE} --version | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*')\"\nCMAKE_FORMAT_DESIRED_VERSION = \"0.6.13\"\n\nPROJECT_ROOT_DIR = $(shell git rev-parse --show-toplevel)\n\n######################\n#    Clang-format    #\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 63,
                  "endLine": 23,
                  "endColumn": 69,
                  "snippet": {
                    "text": "CLANG_FORMAT_DESIRED_VERSION =\"18.1.8\"\n\nCMAKE_FORMAT_EXE ?= cmake-format\nCMAKE_FORMAT_VERSION = \"$(shell ${CMAKE_FORMAT_EXE} --version | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*')\"\nCMAKE_FORMAT_DESIRED_VERSION = \"0.6.13\"\n\nPROJECT_ROOT_DIR = $(shell git rev-parse --show-toplevel)\n",
                    "rendered": {
                      "text": "CLANG_FORMAT_DESIRED_VERSION =\"18.1.8\"\n\nCMAKE_FORMAT_EXE ?= cmake-format\nCMAKE_FORMAT_VERSION = \"$(shell ${CMAKE_FORMAT_EXE} --version | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*')\"\nCMAKE_FORMAT_DESIRED_VERSION = \"0.6.13\"\n\nPROJECT_ROOT_DIR = $(shell git rev-parse --show-toplevel)\n",
                      "markdown": "`CLANG_FORMAT_DESIRED_VERSION =\"18.1.8\"\n\nCMAKE_FORMAT_EXE ?= cmake-format\nCMAKE_FORMAT_VERSION = \"$(shell ${CMAKE_FORMAT_EXE} --version | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*')\"\nCMAKE_FORMAT_DESIRED_VERSION = \"0.6.13\"\n\nPROJECT_ROOT_DIR = $(shell git rev-parse --show-toplevel)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falco-no-driver.zip/Makefile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 63,
                  "endLine": 19,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\n# mofidy the following variables to match your paths\nCLANG_FORMAT_EXE ?= clang-format\nCLANG_FORMAT_VERSION = \"$(shell ${CLANG_FORMAT_EXE} --version | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*')\"\nCLANG_FORMAT_DESIRED_VERSION =\"18.1.8\"\n\nCMAKE_FORMAT_EXE ?= cmake-format\n",
                    "rendered": {
                      "text": "\n# mofidy the following variables to match your paths\nCLANG_FORMAT_EXE ?= clang-format\nCLANG_FORMAT_VERSION = \"$(shell ${CLANG_FORMAT_EXE} --version | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*')\"\nCLANG_FORMAT_DESIRED_VERSION =\"18.1.8\"\n\nCMAKE_FORMAT_EXE ?= cmake-format\n",
                      "markdown": "`\n# mofidy the following variables to match your paths\nCLANG_FORMAT_EXE ?= clang-format\nCLANG_FORMAT_VERSION = \"$(shell ${CLANG_FORMAT_EXE} --version | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*')\"\nCLANG_FORMAT_DESIRED_VERSION =\"18.1.8\"\n\nCMAKE_FORMAT_EXE ?= cmake-format\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}