{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/cmd/init.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"context\"\n\t\"log\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"context\"\n\t\"log\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"context\"\n\t\"log\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/cmd/server.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"context\"\n\t\"fmt\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"context\"\n\t\"fmt\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"context\"\n\t\"fmt\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/cmd/server.go"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 20,
                  "endLine": 133,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tserverCmd.Flags().Uint16Var(&probePort, \"probe-port\", 2703, \"Health and readiness listening port\")\n\tserverCmd.Flags().Uint16Var(&metricsPort, \"metrics-port\", 2705, \"Metrics listening port\")\n\tserverCmd.Flags().DurationVar(&maxCredentialRenewal, \"max-credential-retention-before-renewal\", 3*time.Hour,\n\t\t\"Maximum amount of time that agent waits before renewing credentials. Set 0 to disable caching.\")\n\tserverCmd.Flags().IntVar(&maxCacheSize, \"max-cache-size\", 2000,\n\t\t\"Maximum amount of unique credentials to cache. Set 0 to disable caching.\")\n\tserverCmd.Flags().IntVar(&refreshQps, \"max-service-qps\", 3,\n",
                    "rendered": {
                      "text": "\tserverCmd.Flags().Uint16Var(&probePort, \"probe-port\", 2703, \"Health and readiness listening port\")\n\tserverCmd.Flags().Uint16Var(&metricsPort, \"metrics-port\", 2705, \"Metrics listening port\")\n\tserverCmd.Flags().DurationVar(&maxCredentialRenewal, \"max-credential-retention-before-renewal\", 3*time.Hour,\n\t\t\"Maximum amount of time that agent waits before renewing credentials. Set 0 to disable caching.\")\n\tserverCmd.Flags().IntVar(&maxCacheSize, \"max-cache-size\", 2000,\n\t\t\"Maximum amount of unique credentials to cache. Set 0 to disable caching.\")\n\tserverCmd.Flags().IntVar(&refreshQps, \"max-service-qps\", 3,\n",
                      "markdown": "`\tserverCmd.Flags().Uint16Var(&probePort, \"probe-port\", 2703, \"Health and readiness listening port\")\n\tserverCmd.Flags().Uint16Var(&metricsPort, \"metrics-port\", 2705, \"Metrics listening port\")\n\tserverCmd.Flags().DurationVar(&maxCredentialRenewal, \"max-credential-retention-before-renewal\", 3*time.Hour,\n\t\t\"Maximum amount of time that agent waits before renewing credentials. Set 0 to disable caching.\")\n\tserverCmd.Flags().IntVar(&maxCacheSize, \"max-cache-size\", 2000,\n\t\t\"Maximum amount of unique credentials to cache. Set 0 to disable caching.\")\n\tserverCmd.Flags().IntVar(&refreshQps, \"max-service-qps\", 3,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/cmd/server.go"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 4,
                  "endLine": 108,
                  "endColumn": 13,
                  "snippet": {
                    "text": "func overrideEndpointInCfg(log *logrus.Entry, cfg *aws.Config, endpoint string) {\n\tlog.Printf(\"Overriding %s default endpoint with %s\\n\", eksauth.ServiceID, endpoint)\n\tcfg.EndpointResolverWithOptions = aws.EndpointResolverWithOptionsFunc(func(service, region string, options ...interface{}) (aws.Endpoint, error) {\n\t\tif service == eksauth.ServiceID {\n\t\t\treturn aws.Endpoint{\n\t\t\t\tPartitionID:   \"aws\",\n\t\t\t\tURL:           endpoint,\n",
                    "rendered": {
                      "text": "func overrideEndpointInCfg(log *logrus.Entry, cfg *aws.Config, endpoint string) {\n\tlog.Printf(\"Overriding %s default endpoint with %s\\n\", eksauth.ServiceID, endpoint)\n\tcfg.EndpointResolverWithOptions = aws.EndpointResolverWithOptionsFunc(func(service, region string, options ...interface{}) (aws.Endpoint, error) {\n\t\tif service == eksauth.ServiceID {\n\t\t\treturn aws.Endpoint{\n\t\t\t\tPartitionID:   \"aws\",\n\t\t\t\tURL:           endpoint,\n",
                      "markdown": "`func overrideEndpointInCfg(log *logrus.Entry, cfg *aws.Config, endpoint string) {\n\tlog.Printf(\"Overriding %s default endpoint with %s\\n\", eksauth.ServiceID, endpoint)\n\tcfg.EndpointResolverWithOptions = aws.EndpointResolverWithOptionsFunc(func(service, region string, options ...interface{}) (aws.Endpoint, error) {\n\t\tif service == eksauth.ServiceID {\n\t\t\treturn aws.Endpoint{\n\t\t\t\tPartitionID:   \"aws\",\n\t\t\t\tURL:           endpoint,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/cmd/server.go"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 7,
                  "endLine": 88,
                  "endColumn": 11,
                  "snippet": {
                    "text": "func createServers(cfg aws.Config) []*server.Server {\n\tservers := make([]*server.Server, len(bindHosts))\n\t// listen on all bindHosts\n\tfor i, ip := range bindHosts {\n\t\taddr := fmt.Sprintf(\"%s:%d\", ip, serverPort)\n\t\tservers[i] = server.NewEksCredentialServer(addr, handlers.EksCredentialHandlerOpts{\n\t\t\tCfg:               cfg,\n",
                    "rendered": {
                      "text": "func createServers(cfg aws.Config) []*server.Server {\n\tservers := make([]*server.Server, len(bindHosts))\n\t// listen on all bindHosts\n\tfor i, ip := range bindHosts {\n\t\taddr := fmt.Sprintf(\"%s:%d\", ip, serverPort)\n\t\tservers[i] = server.NewEksCredentialServer(addr, handlers.EksCredentialHandlerOpts{\n\t\t\tCfg:               cfg,\n",
                      "markdown": "`func createServers(cfg aws.Config) []*server.Server {\n\tservers := make([]*server.Server, len(bindHosts))\n\t// listen on all bindHosts\n\tfor i, ip := range bindHosts {\n\t\taddr := fmt.Sprintf(\"%s:%d\", ip, serverPort)\n\t\tservers[i] = server.NewEksCredentialServer(addr, handlers.EksCredentialHandlerOpts{\n\t\t\tCfg:               cfg,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/cmd/server.go"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 49,
                  "endLine": 37,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\nvar serverCmd = &cobra.Command{\n\tUse:   \"server\",\n\tShort: \"A proxy server that exchanges kubernetes service account token with temporary AWS credentials by calling EKS Auth APIs\",\n\tLong: fmt.Sprintf(`This command initalizes a proxy server that will listen by default on port %d.\n\n\tRequest that are sent to the credential path (/v1/credentials) will be proxied to EKS to fetch temporary\n",
                    "rendered": {
                      "text": "\nvar serverCmd = &cobra.Command{\n\tUse:   \"server\",\n\tShort: \"A proxy server that exchanges kubernetes service account token with temporary AWS credentials by calling EKS Auth APIs\",\n\tLong: fmt.Sprintf(`This command initalizes a proxy server that will listen by default on port %d.\n\n\tRequest that are sent to the credential path (/v1/credentials) will be proxied to EKS to fetch temporary\n",
                      "markdown": "`\nvar serverCmd = &cobra.Command{\n\tUse:   \"server\",\n\tShort: \"A proxy server that exchanges kubernetes service account token with temporary AWS credentials by calling EKS Auth APIs\",\n\tLong: fmt.Sprintf(`This command initalizes a proxy server that will listen by default on port %d.\n\n\tRequest that are sent to the credential path (/v1/credentials) will be proxied to EKS to fetch temporary\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/cmd/root.go"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 89,
                  "endLine": 15,
                  "endColumn": 93,
                  "snippet": {
                    "text": "// rootCmd represents the base command when called without any subcommands\nvar rootCmd = &cobra.Command{\n\tUse:   \"eks-pod-identity-agent\",\n\tShort: \"The agent contains a proxy server and its initializer, for more information look at the server command\",\n\tPersistentPreRun: func(cmd *cobra.Command, args []string) {\n\t\tlogger.Initialize(loggingVerbosity)\n\t},\n",
                    "rendered": {
                      "text": "// rootCmd represents the base command when called without any subcommands\nvar rootCmd = &cobra.Command{\n\tUse:   \"eks-pod-identity-agent\",\n\tShort: \"The agent contains a proxy server and its initializer, for more information look at the server command\",\n\tPersistentPreRun: func(cmd *cobra.Command, args []string) {\n\t\tlogger.Initialize(loggingVerbosity)\n\t},\n",
                      "markdown": "`// rootCmd represents the base command when called without any subcommands\nvar rootCmd = &cobra.Command{\n\tUse:   \"eks-pod-identity-agent\",\n\tShort: \"The agent contains a proxy server and its initializer, for more information look at the server command\",\n\tPersistentPreRun: func(cmd *cobra.Command, args []string) {\n\t\tlogger.Initialize(loggingVerbosity)\n\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/cmd/root.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"os\"\n\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"os\"\n\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"os\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/hack/scripts/mockgen.sh"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 36,
                  "snippet": {
                    "text": "//\n// Licensed under the Apache License, Version 2.0 (the \"License\"). You may\n// not use this file except in compliance with the License. A copy of the\n// License is located at\n//\n//     http://aws.amazon.com/apache2.0/\n//\n// or in the \"license\" file accompanying this file. This file is distributed\n",
                    "rendered": {
                      "text": "//\n// Licensed under the Apache License, Version 2.0 (the \"License\"). You may\n// not use this file except in compliance with the License. A copy of the\n// License is located at\n//\n//     http://aws.amazon.com/apache2.0/\n//\n// or in the \"license\" file accompanying this file. This file is distributed\n",
                      "markdown": "`//\n// Licensed under the Apache License, Version 2.0 (the \"License\"). You may\n// not use this file except in compliance with the License. A copy of the\n// License is located at\n//\n//     http://aws.amazon.com/apache2.0/\n//\n// or in the \"license\" file accompanying this file. This file is distributed\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/hack/scripts/mockgen.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the\n# \"License\"). You may not use this file except in compliance\n#  with the License. A copy of the License is located at\n#\n#     http://aws.amazon.com/apache2.0/\n#\n# or in the \"license\" file accompanying this file. This file is\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the\n# \"License\"). You may not use this file except in compliance\n#  with the License. A copy of the License is located at\n#\n#     http://aws.amazon.com/apache2.0/\n#\n# or in the \"license\" file accompanying this file. This file is\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the\n# \"License\"). You may not use this file except in compliance\n#  with the License. A copy of the License is located at\n#\n#     http://aws.amazon.com/apache2.0/\n#\n# or in the \"license\" file accompanying this file. This file is\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/hack/scripts/mockgen.sh"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 37,
                  "endLine": 30,
                  "endColumn": 4,
                  "snippet": {
                    "text": "tmp_gen=\"$(mktemp)\"\nyear=\"$(date +\"%Y\")\"\n$(dirname -- \"$( readlink -f -- \"$0\"; )\")/../tools/bin/mockgen -source \"$(pwd)/${inputfile}\" -package \"${package}\" > \"${tmp_gen}\"\nmkdir -p $(pwd)/${relativeoutputdir}/\ncat  > \"$(pwd)/${relativeoutputdir}/${outputfile}\" << EOF\n// Copyright 2023-${year} Amazon.com, Inc. or its affiliates. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"). You may\n",
                    "rendered": {
                      "text": "tmp_gen=\"$(mktemp)\"\nyear=\"$(date +\"%Y\")\"\n$(dirname -- \"$( readlink -f -- \"$0\"; )\")/../tools/bin/mockgen -source \"$(pwd)/${inputfile}\" -package \"${package}\" > \"${tmp_gen}\"\nmkdir -p $(pwd)/${relativeoutputdir}/\ncat  > \"$(pwd)/${relativeoutputdir}/${outputfile}\" << EOF\n// Copyright 2023-${year} Amazon.com, Inc. or its affiliates. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"). You may\n",
                      "markdown": "`tmp_gen=\"$(mktemp)\"\nyear=\"$(date +\"%Y\")\"\n$(dirname -- \"$( readlink -f -- \"$0\"; )\")/../tools/bin/mockgen -source \"$(pwd)/${inputfile}\" -package \"${package}\" > \"${tmp_gen}\"\nmkdir -p $(pwd)/${relativeoutputdir}/\ncat  > \"$(pwd)/${relativeoutputdir}/${outputfile}\" << EOF\n// Copyright 2023-${year} Amazon.com, Inc. or its affiliates. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"). You may\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/hack/scripts/mockgen.sh"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 33,
                  "endLine": 21,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\npackage=\"$1\"\ninputfile=\"$2\"\noutputfile=\"$(echo ${inputfile} | sed -e 's/\\.go$/_mocks.go/')\"\nrelativeoutputdir=\"$3\"\n\necho \"Generating mocks from ${inputfile} to ${outputfile} in package ${package}\"\n",
                    "rendered": {
                      "text": "\npackage=\"$1\"\ninputfile=\"$2\"\noutputfile=\"$(echo ${inputfile} | sed -e 's/\\.go$/_mocks.go/')\"\nrelativeoutputdir=\"$3\"\n\necho \"Generating mocks from ${inputfile} to ${outputfile} in package ${package}\"\n",
                      "markdown": "`\npackage=\"$1\"\ninputfile=\"$2\"\noutputfile=\"$(echo ${inputfile} | sed -e 's/\\.go$/_mocks.go/')\"\nrelativeoutputdir=\"$3\"\n\necho \"Generating mocks from ${inputfile} to ${outputfile} in package ${package}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/hack/scripts/mockgen.sh"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 6,
                  "endLine": 16,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script wraps the mockgen tool and inserts licensing information.\n# Usage: mockgen.sh target-package-name source-file-name [relative-output-directory-path]\n\npackage=\"$1\"\n",
                    "rendered": {
                      "text": "# License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script wraps the mockgen tool and inserts licensing information.\n# Usage: mockgen.sh target-package-name source-file-name [relative-output-directory-path]\n\npackage=\"$1\"\n",
                      "markdown": "`# License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script wraps the mockgen tool and inserts licensing information.\n# Usage: mockgen.sh target-package-name source-file-name [relative-output-directory-path]\n\npackage=\"$1\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/hack/run-bin.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/hack/run-bin.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/charts/eks-pod-identity-agent/README.md"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 38,
                  "endLine": 50,
                  "endColumn": 46,
                  "snippet": {
                    "text": "   | `system-node-critical`   |\n| `resources`               | Resources for containers in pod                         | `{}`                     |\n| `tolerations`             | Optional deployment tolerations                         | `all`                    |\n| `updateStrategy`          | Optional update strategy                                | `type: RollingUpdate`    |\n\nSpecify each parameter using the `--set key=value[,key=value]` argument to `helm install` or provide a YAML file\ncontaining the values for the above parameters.\n",
                    "rendered": {
                      "text": "   | `system-node-critical`   |\n| `resources`               | Resources for containers in pod                         | `{}`                     |\n| `tolerations`             | Optional deployment tolerations                         | `all`                    |\n| `updateStrategy`          | Optional update strategy                                | `type: RollingUpdate`    |\n\nSpecify each parameter using the `--set key=value[,key=value]` argument to `helm install` or provide a YAML file\ncontaining the values for the above parameters.\n",
                      "markdown": "`   | `system-node-critical`   |\n| `resources`               | Resources for containers in pod                         | `{}`                     |\n| `tolerations`             | Optional deployment tolerations                         | `all`                    |\n| `updateStrategy`          | Optional update strategy                                | `type: RollingUpdate`    |\n\nSpecify each parameter using the `--set key=value[,key=value]` argument to `helm install` or provide a YAML file\ncontaining the values for the above parameters.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/charts/eks-pod-identity-agent/README.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 2,
                  "endLine": 11,
                  "endColumn": 10,
                  "snippet": {
                    "text": "- Kubernetes v{?} running on AWS\n- Helm v3\n\n## Update below Env to your cluster and region in values.yaml\n\n* `EKS_CLUSTER_NAME` \n* `AWS_REGION_NAME`\n",
                    "rendered": {
                      "text": "- Kubernetes v{?} running on AWS\n- Helm v3\n\n## Update below Env to your cluster and region in values.yaml\n\n* `EKS_CLUSTER_NAME` \n* `AWS_REGION_NAME`\n",
                      "markdown": "`- Kubernetes v{?} running on AWS\n- Helm v3\n\n## Update below Env to your cluster and region in values.yaml\n\n* `EKS_CLUSTER_NAME` \n* `AWS_REGION_NAME`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/charts/eks-pod-identity-agent/README.md"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 29,
                  "endLine": 45,
                  "endColumn": 35,
                  "snippet": {
                    "text": "tainer      | (see `values.yaml`)      |\n| `init.create`             | Specifies whether init-container should be created      | `true`                   |\n| `nameOverride`            | Override the name of the chart                          | `eks-pod-identity-agent` |\n| `nodeSelector`            | Node labels for pod assignment                          | `{}`                     |\n| `podAnnotations`          | annotations to add to each pod                          | `{}`                     |\n| `priorityClassName`       | Name of the priorityClass                               | `system-node-crit",
                    "rendered": {
                      "text": "tainer      | (see `values.yaml`)      |\n| `init.create`             | Specifies whether init-container should be created      | `true`                   |\n| `nameOverride`            | Override the name of the chart                          | `eks-pod-identity-agent` |\n| `nodeSelector`            | Node labels for pod assignment                          | `{}`                     |\n| `podAnnotations`          | annotations to add to each pod                          | `{}`                     |\n| `priorityClassName`       | Name of the priorityClass                               | `system-node-crit",
                      "markdown": "`tainer      | (see `values.yaml`)      |\n| `init.create`             | Specifies whether init-container should be created      | `true`                   |\n| `nameOverride`            | Override the name of the chart                          | `eks-pod-identity-agent` |\n| `nodeSelector`            | Node labels for pod assignment                          | `{}`                     |\n| `podAnnotations`          | annotations to add to each pod                          | `{}`                     |\n| `priorityClassName`       | Name of the priorityClass                               | `system-node-crit`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/charts/eks-pod-identity-agent/README.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 29,
                  "endLine": 41,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            | (see `values.yaml`)      |\n| `fullnameOverride`        | Override the fullname of the chart                      | `eks-pod-identity-agent` |\n| `image.pullPolicy`        | Container pull policy                                   | `Always`                 |\n| `imagePullSecrets`        | Docker registry pull secret                             | `[]`                     |\n| `init.additionalArgs`     | Additional arguments to pass to the init-container      | (see `values.yaml`)      |\n| `init.create`             | Specifies whether init-container should be created      | `true`             ",
                    "rendered": {
                      "text": "            | (see `values.yaml`)      |\n| `fullnameOverride`        | Override the fullname of the chart                      | `eks-pod-identity-agent` |\n| `image.pullPolicy`        | Container pull policy                                   | `Always`                 |\n| `imagePullSecrets`        | Docker registry pull secret                             | `[]`                     |\n| `init.additionalArgs`     | Additional arguments to pass to the init-container      | (see `values.yaml`)      |\n| `init.create`             | Specifies whether init-container should be created      | `true`             ",
                      "markdown": "`            | (see `values.yaml`)      |\n| `fullnameOverride`        | Override the fullname of the chart                      | `eks-pod-identity-agent` |\n| `image.pullPolicy`        | Container pull policy                                   | `Always`                 |\n| `imagePullSecrets`        | Docker registry pull secret                             | `[]`                     |\n| `init.additionalArgs`     | Additional arguments to pass to the init-container      | (see `values.yaml`)      |\n| `init.create`             | Specifies whether init-container should be created      | `true`             `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/charts/eks-pod-identity-agent/README.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 8,
                  "endLine": 19,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n## Installing the Chart\n\n```shell\ngit clone https://github.com/aws/eks-pod-identity-agent.git\ncd eks-pod-identity-agent/\nhelm install eks-pod-identity-agent --namespace kube-system ./charts/eks-pod-identity-agent --values ./charts/eks-pod-identity-agent/values.yaml\n```\n",
                    "rendered": {
                      "text": "\n## Installing the Chart\n\n```shell\ngit clone https://github.com/aws/eks-pod-identity-agent.git\ncd eks-pod-identity-agent/\nhelm install eks-pod-identity-agent --namespace kube-system ./charts/eks-pod-identity-agent --values ./charts/eks-pod-identity-agent/values.yaml\n```\n",
                      "markdown": "`\n## Installing the Chart\n\n```shell\ngit clone https://github.com/aws/eks-pod-identity-agent.git\ncd eks-pod-identity-agent/\nhelm install eks-pod-identity-agent --namespace kube-system ./charts/eks-pod-identity-agent --values ./charts/eks-pod-identity-agent/values.yaml\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/charts/eks-pod-identity-agent/README.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 15,
                  "endLine": 11,
                  "endColumn": 20,
                  "snippet": {
                    "text": "- Kubernetes v{?} running on AWS\n- Helm v3\n\n## Update below Env to your cluster and region in values.yaml\n\n* `EKS_CLUSTER_NAME` \n* `AWS_REGION_NAME`\n",
                    "rendered": {
                      "text": "- Kubernetes v{?} running on AWS\n- Helm v3\n\n## Update below Env to your cluster and region in values.yaml\n\n* `EKS_CLUSTER_NAME` \n* `AWS_REGION_NAME`\n",
                      "markdown": "`- Kubernetes v{?} running on AWS\n- Helm v3\n\n## Update below Env to your cluster and region in values.yaml\n\n* `EKS_CLUSTER_NAME` \n* `AWS_REGION_NAME`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 642,
                  "startColumn": 15,
                  "endLine": 642,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\tt.Error()\n\t}\n\n\tif _, ok := tc.Get(\"foo\"); ok {\n\t\tt.Error()\n\t}\n}\n",
                    "rendered": {
                      "text": "\t\tt.Error()\n\t}\n\n\tif _, ok := tc.Get(\"foo\"); ok {\n\t\tt.Error()\n\t}\n}\n",
                      "markdown": "`\t\tt.Error()\n\t}\n\n\tif _, ok := tc.Get(\"foo\"); ok {\n\t\tt.Error()\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 638,
                  "startColumn": 15,
                  "endLine": 638,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\tt.Error()\n\t}\n\n\tif v, ok := tc.Get(\"RENAME\"); !ok || v != 3 {\n\t\tt.Error()\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tt.Error()\n\t}\n\n\tif v, ok := tc.Get(\"RENAME\"); !ok || v != 3 {\n\t\tt.Error()\n\t}\n\n",
                      "markdown": "`\t\tt.Error()\n\t}\n\n\tif v, ok := tc.Get(\"RENAME\"); !ok || v != 3 {\n\t\tt.Error()\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 579,
                  "startColumn": 15,
                  "endLine": 579,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\tt.Error(\"onEvicted isn't called for 'foo'\")\n\t}\n\n\t_, found := tc.Get(\"bar\")\n\tif !found {\n\t\tt.Error(\"bar shouldn't be removed from the cache\")\n\t}\n",
                    "rendered": {
                      "text": "\t\tt.Error(\"onEvicted isn't called for 'foo'\")\n\t}\n\n\t_, found := tc.Get(\"bar\")\n\tif !found {\n\t\tt.Error(\"bar shouldn't be removed from the cache\")\n\t}\n",
                      "markdown": "`\t\tt.Error(\"onEvicted isn't called for 'foo'\")\n\t}\n\n\t_, found := tc.Get(\"bar\")\n\tif !found {\n\t\tt.Error(\"bar shouldn't be removed from the cache\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 532,
                  "startColumn": 14,
                  "endLine": 532,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tif v != nil {\n\t\tt.Error(\"v is not nil:\", v)\n\t}\n\tv, found = tc.Get(\"baz\")\n\tif found {\n\t\tt.Error(\"baz was found, but it should have been deleted\")\n\t}\n",
                    "rendered": {
                      "text": "\tif v != nil {\n\t\tt.Error(\"v is not nil:\", v)\n\t}\n\tv, found = tc.Get(\"baz\")\n\tif found {\n\t\tt.Error(\"baz was found, but it should have been deleted\")\n\t}\n",
                      "markdown": "`\tif v != nil {\n\t\tt.Error(\"v is not nil:\", v)\n\t}\n\tv, found = tc.Get(\"baz\")\n\tif found {\n\t\tt.Error(\"baz was found, but it should have been deleted\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 525,
                  "startColumn": 15,
                  "endLine": 525,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\ttc.Set(\"foo\", \"bar\")\n\ttc.Set(\"baz\", \"yes\")\n\ttc.Reset()\n\tv, found := tc.Get(\"foo\")\n\tif found {\n\t\tt.Error(\"foo was found, but it should have been deleted\")\n\t}\n",
                    "rendered": {
                      "text": "\ttc.Set(\"foo\", \"bar\")\n\ttc.Set(\"baz\", \"yes\")\n\ttc.Reset()\n\tv, found := tc.Get(\"foo\")\n\tif found {\n\t\tt.Error(\"foo was found, but it should have been deleted\")\n\t}\n",
                      "markdown": "`\ttc.Set(\"foo\", \"bar\")\n\ttc.Set(\"baz\", \"yes\")\n\ttc.Reset()\n\tv, found := tc.Get(\"foo\")\n\tif found {\n\t\tt.Error(\"foo was found, but it should have been deleted\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 11,
                  "endLine": 304,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n\ttime.Sleep(10 * time.Millisecond)\n\n\tv, ok = tc.Get(\"x\")\n\tif ok || v != nil {\n\t\tt.Fatalf(\"Get retrieved expired item: %v\", v)\n\t}\n",
                    "rendered": {
                      "text": "\n\ttime.Sleep(10 * time.Millisecond)\n\n\tv, ok = tc.Get(\"x\")\n\tif ok || v != nil {\n\t\tt.Fatalf(\"Get retrieved expired item: %v\", v)\n\t}\n",
                      "markdown": "`\n\ttime.Sleep(10 * time.Millisecond)\n\n\tv, ok = tc.Get(\"x\")\n\tif ok || v != nil {\n\t\tt.Fatalf(\"Get retrieved expired item: %v\", v)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 11,
                  "endLine": 166,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\ttc.Set(\"bar\", 4)\n\t})\n\ttc.Delete(\"foo\")\n\tv, _ := tc.Get(\"bar\")\n\tif !works {\n\t\tt.Error(\"works bool not true\")\n\t}\n",
                    "rendered": {
                      "text": "\t\ttc.Set(\"bar\", 4)\n\t})\n\ttc.Delete(\"foo\")\n\tv, _ := tc.Get(\"bar\")\n\tif !works {\n\t\tt.Error(\"works bool not true\")\n\t}\n",
                      "markdown": "`\t\ttc.Set(\"bar\", 4)\n\t})\n\ttc.Delete(\"foo\")\n\tv, _ := tc.Get(\"bar\")\n\tif !works {\n\t\tt.Error(\"works bool not true\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 15,
                  "endLine": 142,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tfoo := v.(*TestStruct)\n\tfoo.Num++\n\n\ty, found := tc.Get(\"foo\")\n\tif !found {\n\t\tt.Fatal(\"*TestStruct was not found for foo (second time)\")\n\t}\n",
                    "rendered": {
                      "text": "\tfoo := v.(*TestStruct)\n\tfoo.Num++\n\n\ty, found := tc.Get(\"foo\")\n\tif !found {\n\t\tt.Fatal(\"*TestStruct was not found for foo (second time)\")\n\t}\n",
                      "markdown": "`\tfoo := v.(*TestStruct)\n\tfoo.Num++\n\n\ty, found := tc.Get(\"foo\")\n\tif !found {\n\t\tt.Fatal(\"*TestStruct was not found for foo (second time)\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 15,
                  "endLine": 135,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n\ttc := NewLru[string, any](100, DefaultExpiration, 0)\n\ttc.Set(\"foo\", &TestStruct{Num: 1})\n\tv, found := tc.Get(\"foo\")\n\tif !found {\n\t\tt.Fatal(\"*TestStruct was not found for foo\")\n\t}\n",
                    "rendered": {
                      "text": "\n\ttc := NewLru[string, any](100, DefaultExpiration, 0)\n\ttc.Set(\"foo\", &TestStruct{Num: 1})\n\tv, found := tc.Get(\"foo\")\n\tif !found {\n\t\tt.Fatal(\"*TestStruct was not found for foo\")\n\t}\n",
                      "markdown": "`\n\ttc := NewLru[string, any](100, DefaultExpiration, 0)\n\ttc.Set(\"foo\", &TestStruct{Num: 1})\n\tv, found := tc.Get(\"foo\")\n\tif !found {\n\t\tt.Fatal(\"*TestStruct was not found for foo\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 14,
                  "endLine": 121,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t}\n\n\t<-time.After(20 * time.Millisecond)\n\t_, found = tc.Get(\"d\")\n\tif found {\n\t\tt.Error(\"Found d when it should have been automatically deleted (later than the default)\")\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\t<-time.After(20 * time.Millisecond)\n\t_, found = tc.Get(\"d\")\n\tif found {\n\t\tt.Error(\"Found d when it should have been automatically deleted (later than the default)\")\n\t}\n",
                      "markdown": "`\t}\n\n\t<-time.After(20 * time.Millisecond)\n\t_, found = tc.Get(\"d\")\n\tif found {\n\t\tt.Error(\"Found d when it should have been automatically deleted (later than the default)\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 14,
                  "endLine": 115,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\tt.Error(\"Did not find b even though it was set to never expire\")\n\t}\n\n\t_, found = tc.Get(\"d\")\n\tif !found {\n\t\tt.Error(\"Did not find d even though it was set to expire later than the default\")\n\t}\n",
                    "rendered": {
                      "text": "\t\tt.Error(\"Did not find b even though it was set to never expire\")\n\t}\n\n\t_, found = tc.Get(\"d\")\n\tif !found {\n\t\tt.Error(\"Did not find d even though it was set to expire later than the default\")\n\t}\n",
                      "markdown": "`\t\tt.Error(\"Did not find b even though it was set to never expire\")\n\t}\n\n\t_, found = tc.Get(\"d\")\n\tif !found {\n\t\tt.Error(\"Did not find d even though it was set to expire later than the default\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 14,
                  "endLine": 110,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\tt.Error(\"Found a when it should have been automatically deleted\")\n\t}\n\n\t_, found = tc.Get(\"b\")\n\tif !found {\n\t\tt.Error(\"Did not find b even though it was set to never expire\")\n\t}\n",
                    "rendered": {
                      "text": "\t\tt.Error(\"Found a when it should have been automatically deleted\")\n\t}\n\n\t_, found = tc.Get(\"b\")\n\tif !found {\n\t\tt.Error(\"Did not find b even though it was set to never expire\")\n\t}\n",
                      "markdown": "`\t\tt.Error(\"Found a when it should have been automatically deleted\")\n\t}\n\n\t_, found = tc.Get(\"b\")\n\tif !found {\n\t\tt.Error(\"Did not find b even though it was set to never expire\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 14,
                  "endLine": 105,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t}\n\n\t<-time.After(30 * time.Millisecond)\n\t_, found = tc.Get(\"a\")\n\tif found {\n\t\tt.Error(\"Found a when it should have been automatically deleted\")\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\t<-time.After(30 * time.Millisecond)\n\t_, found = tc.Get(\"a\")\n\tif found {\n\t\tt.Error(\"Found a when it should have been automatically deleted\")\n\t}\n",
                      "markdown": "`\t}\n\n\t<-time.After(30 * time.Millisecond)\n\t_, found = tc.Get(\"a\")\n\tif found {\n\t\tt.Error(\"Found a when it should have been automatically deleted\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 14,
                  "endLine": 99,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\ttc.SetWithExpire(\"d\", 4, 70*time.Millisecond)\n\n\t<-time.After(25 * time.Millisecond)\n\t_, found = tc.Get(\"c\")\n\tif found {\n\t\tt.Error(\"Found c when it should have been automatically deleted\")\n\t}\n",
                    "rendered": {
                      "text": "\ttc.SetWithExpire(\"d\", 4, 70*time.Millisecond)\n\n\t<-time.After(25 * time.Millisecond)\n\t_, found = tc.Get(\"c\")\n\tif found {\n\t\tt.Error(\"Found c when it should have been automatically deleted\")\n\t}\n",
                      "markdown": "`\ttc.SetWithExpire(\"d\", 4, 70*time.Millisecond)\n\n\t<-time.After(25 * time.Millisecond)\n\t_, found = tc.Get(\"c\")\n\tif found {\n\t\tt.Error(\"Found c when it should have been automatically deleted\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 14,
                  "endLine": 78,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\tt.Error(\"b2 (which should be b) plus B does not equal bB; value:\", b2)\n\t}\n\n\tv, found = tc.Get(\"c\")\n\tif !found {\n\t\tt.Error(\"c was not found while getting c2\")\n\t}\n",
                    "rendered": {
                      "text": "\t\tt.Error(\"b2 (which should be b) plus B does not equal bB; value:\", b2)\n\t}\n\n\tv, found = tc.Get(\"c\")\n\tif !found {\n\t\tt.Error(\"c was not found while getting c2\")\n\t}\n",
                      "markdown": "`\t\tt.Error(\"b2 (which should be b) plus B does not equal bB; value:\", b2)\n\t}\n\n\tv, found = tc.Get(\"c\")\n\tif !found {\n\t\tt.Error(\"c was not found while getting c2\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 14,
                  "endLine": 68,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\tt.Error(\"a2 (which should be 1) plus 2 does not equal 3; value:\", a2)\n\t}\n\n\tv, found = tc.Get(\"b\")\n\tif !found {\n\t\tt.Error(\"b was not found while getting b2\")\n\t}\n",
                    "rendered": {
                      "text": "\t\tt.Error(\"a2 (which should be 1) plus 2 does not equal 3; value:\", a2)\n\t}\n\n\tv, found = tc.Get(\"b\")\n\tif !found {\n\t\tt.Error(\"b was not found while getting b2\")\n\t}\n",
                      "markdown": "`\t\tt.Error(\"a2 (which should be 1) plus 2 does not equal 3; value:\", a2)\n\t}\n\n\tv, found = tc.Get(\"b\")\n\tif !found {\n\t\tt.Error(\"b was not found while getting b2\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 15,
                  "endLine": 58,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\ttc.Set(\"b\", \"b\")\n\ttc.Set(\"c\", 3.5)\n\n\tv, found := tc.Get(\"a\")\n\tif !found {\n\t\tt.Error(\"a was not found while getting a2\")\n\t}\n",
                    "rendered": {
                      "text": "\ttc.Set(\"b\", \"b\")\n\ttc.Set(\"c\", 3.5)\n\n\tv, found := tc.Get(\"a\")\n\tif !found {\n\t\tt.Error(\"a was not found while getting a2\")\n\t}\n",
                      "markdown": "`\ttc.Set(\"b\", \"b\")\n\ttc.Set(\"c\", 3.5)\n\n\tv, found := tc.Get(\"a\")\n\tif !found {\n\t\tt.Error(\"a was not found while getting a2\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 15,
                  "endLine": 49,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\tt.Error(\"Getting B found value that shouldn't exist:\", b)\n\t}\n\n\tc, found := tc.Get(\"c\")\n\tif found || c != nil {\n\t\tt.Error(\"Getting C found value that shouldn't exist:\", c)\n\t}\n",
                    "rendered": {
                      "text": "\t\tt.Error(\"Getting B found value that shouldn't exist:\", b)\n\t}\n\n\tc, found := tc.Get(\"c\")\n\tif found || c != nil {\n\t\tt.Error(\"Getting C found value that shouldn't exist:\", c)\n\t}\n",
                      "markdown": "`\t\tt.Error(\"Getting B found value that shouldn't exist:\", b)\n\t}\n\n\tc, found := tc.Get(\"c\")\n\tif found || c != nil {\n\t\tt.Error(\"Getting C found value that shouldn't exist:\", c)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 15,
                  "endLine": 44,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\tt.Error(\"Getting A found value that shouldn't exist:\", a)\n\t}\n\n\tb, found := tc.Get(\"b\")\n\tif found || b != nil {\n\t\tt.Error(\"Getting B found value that shouldn't exist:\", b)\n\t}\n",
                    "rendered": {
                      "text": "\t\tt.Error(\"Getting A found value that shouldn't exist:\", a)\n\t}\n\n\tb, found := tc.Get(\"b\")\n\tif found || b != nil {\n\t\tt.Error(\"Getting B found value that shouldn't exist:\", b)\n\t}\n",
                      "markdown": "`\t\tt.Error(\"Getting A found value that shouldn't exist:\", a)\n\t}\n\n\tb, found := tc.Get(\"b\")\n\tif found || b != nil {\n\t\tt.Error(\"Getting B found value that shouldn't exist:\", b)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 15,
                  "endLine": 39,
                  "endColumn": 20,
                  "snippet": {
                    "text": "func TestCache(t *testing.T) {\n\ttc := NewLru[string, any](100, DefaultExpiration, 0)\n\n\ta, found := tc.Get(\"a\")\n\tif found || a != nil {\n\t\tt.Error(\"Getting A found value that shouldn't exist:\", a)\n\t}\n",
                    "rendered": {
                      "text": "func TestCache(t *testing.T) {\n\ttc := NewLru[string, any](100, DefaultExpiration, 0)\n\n\ta, found := tc.Get(\"a\")\n\tif found || a != nil {\n\t\tt.Error(\"Getting A found value that shouldn't exist:\", a)\n\t}\n",
                      "markdown": "`func TestCache(t *testing.T) {\n\ttc := NewLru[string, any](100, DefaultExpiration, 0)\n\n\ta, found := tc.Get(\"a\")\n\tif found || a != nil {\n\t\tt.Error(\"Getting A found value that shouldn't exist:\", a)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13,
                  "endLine": 26,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t}\n\n\tfor _, k := range dontWant {\n\t\tv, ok := tc.Get(k)\n\t\tif ok {\n\t\t\tt.Errorf(\"key %q found with value %v\", k, v)\n\t\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tfor _, k := range dontWant {\n\t\tv, ok := tc.Get(k)\n\t\tif ok {\n\t\t\tt.Errorf(\"key %q found with value %v\", k, v)\n\t\t}\n",
                      "markdown": "`\t}\n\n\tfor _, k := range dontWant {\n\t\tv, ok := tc.Get(k)\n\t\tif ok {\n\t\t\tt.Errorf(\"key %q found with value %v\", k, v)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 13,
                  "endLine": 19,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\tt.Helper()\n\n\tfor _, k := range want {\n\t\t_, ok := tc.Get(k)\n\t\tif !ok {\n\t\t\tt.Errorf(\"key not found: %q\", k)\n\t\t}\n",
                    "rendered": {
                      "text": "\tt.Helper()\n\n\tfor _, k := range want {\n\t\t_, ok := tc.Get(k)\n\t\tif !ok {\n\t\t\tt.Errorf(\"key not found: %q\", k)\n\t\t}\n",
                      "markdown": "`\tt.Helper()\n\n\tfor _, k := range want {\n\t\t_, ok := tc.Get(k)\n\t\tif !ok {\n\t\t\tt.Errorf(\"key not found: %q\", k)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 18,
                  "endLine": 117,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n\t_, found = tc.Get(\"d\")\n\tif !found {\n\t\tt.Error(\"Did not find d even though it was set to expire later than the default\")\n\t}\n\n\t<-time.After(20 * time.Millisecond)\n",
                    "rendered": {
                      "text": "\n\t_, found = tc.Get(\"d\")\n\tif !found {\n\t\tt.Error(\"Did not find d even though it was set to expire later than the default\")\n\t}\n\n\t<-time.After(20 * time.Millisecond)\n",
                      "markdown": "`\n\t_, found = tc.Get(\"d\")\n\tif !found {\n\t\tt.Error(\"Did not find d even though it was set to expire later than the default\")\n\t}\n\n\t<-time.After(20 * time.Millisecond)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache_test.go"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 18,
                  "endLine": 112,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n\t_, found = tc.Get(\"b\")\n\tif !found {\n\t\tt.Error(\"Did not find b even though it was set to never expire\")\n\t}\n\n\t_, found = tc.Get(\"d\")\n",
                    "rendered": {
                      "text": "\n\t_, found = tc.Get(\"b\")\n\tif !found {\n\t\tt.Error(\"Did not find b even though it was set to never expire\")\n\t}\n\n\t_, found = tc.Get(\"d\")\n",
                      "markdown": "`\n\t_, found = tc.Get(\"b\")\n\tif !found {\n\t\tt.Error(\"Did not find b even though it was set to never expire\")\n\t}\n\n\t_, found = tc.Get(\"d\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/common.mk"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 21,
                  "endLine": 3,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# Use GOPROXY environment variable if set\nGOPROXY := $(shell go env GOPROXY)\nifeq ($(GOPROXY),)\n# We could use proxy.go but we have to rely on a direct connection\n# due to internal Amazon limitations (eg running it within the corp net\n",
                    "rendered": {
                      "text": "\n# Use GOPROXY environment variable if set\nGOPROXY := $(shell go env GOPROXY)\nifeq ($(GOPROXY),)\n# We could use proxy.go but we have to rely on a direct connection\n# due to internal Amazon limitations (eg running it within the corp net\n",
                      "markdown": "`\n# Use GOPROXY environment variable if set\nGOPROXY := $(shell go env GOPROXY)\nifeq ($(GOPROXY),)\n# We could use proxy.go but we have to rely on a direct connection\n# due to internal Amazon limitations (eg running it within the corp net\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 220,
                  "endLine": 44,
                  "endColumn": 224,
                  "snippet": {
                    "text": "\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.\n\n\n## Code of Conduct\n",
                    "rendered": {
                      "text": "\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.\n\n\n## Code of Conduct\n",
                      "markdown": "`\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.\n\n\n## Code of Conduct\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 7,
                  "endLine": 44,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.\n\n\n## Code of Conduct\n",
                    "rendered": {
                      "text": "\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.\n\n\n## Code of Conduct\n",
                      "markdown": "`\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.\n\n\n## Code of Conduct\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 38,
                  "endLine": 12,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n## Reporting Bugs/Feature Requests\n\nWe welcome you to use the GitHub issue tracker to report bugs or suggest features.\n\nWhen filing an issue, please check existing open, or recently closed, issues to make sure somebody else hasn't already\nreported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n",
                    "rendered": {
                      "text": "\n## Reporting Bugs/Feature Requests\n\nWe welcome you to use the GitHub issue tracker to report bugs or suggest features.\n\nWhen filing an issue, please check existing open, or recently closed, issues to make sure somebody else hasn't already\nreported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n",
                      "markdown": "`\n## Reporting Bugs/Feature Requests\n\nWe welcome you to use the GitHub issue tracker to report bugs or suggest features.\n\nWhen filing an issue, please check existing open, or recently closed, issues to make sure somebody else hasn't already\nreported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 48,
                  "endLine": 44,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.\n\n\n## Code of Conduct\n",
                    "rendered": {
                      "text": "\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.\n\n\n## Code of Conduct\n",
                      "markdown": "`\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.\n\n\n## Code of Conduct\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 77,
                  "endLine": 28,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\n1. You are working against the latest source on the *main* branch.\n2. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.\n3. You open an issue to discuss any significant work - we would hate for your time to be wasted.\n\nTo send us a pull request, please:\n\n",
                    "rendered": {
                      "text": "\n1. You are working against the latest source on the *main* branch.\n2. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.\n3. You open an issue to discuss any significant work - we would hate for your time to be wasted.\n\nTo send us a pull request, please:\n\n",
                      "markdown": "`\n1. You are working against the latest source on the *main* branch.\n2. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.\n3. You open an issue to discuss any significant work - we would hate for your time to be wasted.\n\nTo send us a pull request, please:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/pkg/handlers/eks_credential_handler_test.go"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 17,
                  "endLine": 69,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\teksAuthResponse *credentials.EksCredentialsResponse\n\t}{\n\t\t{\n\t\t\tname:      \"No IP is provided\",\n\t\t\tsentBytes: []byte(fmt.Sprintf(\"Access Denied. Called agent through invalid address\")),\n\t\t},\n\t\t{\n",
                    "rendered": {
                      "text": "\t\teksAuthResponse *credentials.EksCredentialsResponse\n\t}{\n\t\t{\n\t\t\tname:      \"No IP is provided\",\n\t\t\tsentBytes: []byte(fmt.Sprintf(\"Access Denied. Called agent through invalid address\")),\n\t\t},\n\t\t{\n",
                      "markdown": "`\t\teksAuthResponse *credentials.EksCredentialsResponse\n\t}{\n\t\t{\n\t\t\tname:      \"No IP is provided\",\n\t\t\tsentBytes: []byte(fmt.Sprintf(\"Access Denied. Called agent through invalid address\")),\n\t\t},\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/pkg/handlers/eks_credential_handler.go"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 33,
                  "endLine": 78,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n\teksCredentialsRequest := &credentials.EksCredentialsRequest{\n\t\tClusterName:         h.ClusterName,\n\t\tServiceAccountToken: req.Header.Get(\"Authorization\"),\n\t\tRequestTargetHost:   req.Host,\n\t}\n\n",
                    "rendered": {
                      "text": "\n\teksCredentialsRequest := &credentials.EksCredentialsRequest{\n\t\tClusterName:         h.ClusterName,\n\t\tServiceAccountToken: req.Header.Get(\"Authorization\"),\n\t\tRequestTargetHost:   req.Host,\n\t}\n\n",
                      "markdown": "`\n\teksCredentialsRequest := &credentials.EksCredentialsRequest{\n\t\tClusterName:         h.ClusterName,\n\t\tServiceAccountToken: req.Header.Get(\"Authorization\"),\n\t\tRequestTargetHost:   req.Host,\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/pkg/initalizer/iproute/link.go"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 18,
                  "endLine": 90,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\treturn err\n\t\t}\n\t} else {\n\t\tlog.Infof(\"Found IP %s on interface %s, continuing\", addrFamily.LinkLocalAddr, l.link.Attrs().Name)\n\t}\n\n\treturn nil\n",
                    "rendered": {
                      "text": "\t\t\treturn err\n\t\t}\n\t} else {\n\t\tlog.Infof(\"Found IP %s on interface %s, continuing\", addrFamily.LinkLocalAddr, l.link.Attrs().Name)\n\t}\n\n\treturn nil\n",
                      "markdown": "`\t\t\treturn err\n\t\t}\n\t} else {\n\t\tlog.Infof(\"Found IP %s on interface %s, continuing\", addrFamily.LinkLocalAddr, l.link.Attrs().Name)\n\t}\n\n\treturn nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/pkg/initalizer/iproute/link.go"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 19,
                  "endLine": 85,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t}\n\n\tif !isIpAttachedToLink {\n\t\tlog.Infof(\"Adding IP %s to %v as it was not found on interface\", addrFamily.LinkLocalAddr, l.link.Attrs().Name)\n\t\tif err = l.addIpToLink(addrFamily.LinkLocalAddr); err != nil {\n\t\t\treturn err\n\t\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tif !isIpAttachedToLink {\n\t\tlog.Infof(\"Adding IP %s to %v as it was not found on interface\", addrFamily.LinkLocalAddr, l.link.Attrs().Name)\n\t\tif err = l.addIpToLink(addrFamily.LinkLocalAddr); err != nil {\n\t\t\treturn err\n\t\t}\n",
                      "markdown": "`\t}\n\n\tif !isIpAttachedToLink {\n\t\tlog.Infof(\"Adding IP %s to %v as it was not found on interface\", addrFamily.LinkLocalAddr, l.link.Attrs().Name)\n\t\tif err = l.addIpToLink(addrFamily.LinkLocalAddr); err != nil {\n\t\t\treturn err\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/pkg/server/server_test.go"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 26,
                  "endLine": 176,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n\t\t\t// validate headers\n\t\t\tfor headerName, expectedValue := range tc.headers {\n\t\t\t\tcontent := resp.Header.Get(headerName)\n\t\t\t\tg.Expect(content).To(Equal(expectedValue))\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\n\t\t\t// validate headers\n\t\t\tfor headerName, expectedValue := range tc.headers {\n\t\t\t\tcontent := resp.Header.Get(headerName)\n\t\t\t\tg.Expect(content).To(Equal(expectedValue))\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\n\t\t\t// validate headers\n\t\t\tfor headerName, expectedValue := range tc.headers {\n\t\t\t\tcontent := resp.Header.Get(headerName)\n\t\t\t\tg.Expect(content).To(Equal(expectedValue))\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/pkg/server/server_test.go"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 20,
                  "endLine": 135,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\t\tClusterName:         someClusterName,\n\t\t\t}\n\n\t\t\t// setup EKS Auth Service call Interceptor\n\t\t\tif tc.httpCode == 200 {\n\t\t\t\teksAuthMockService.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).Return(getMockCredentials(), nil, nil)\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tClusterName:         someClusterName,\n\t\t\t}\n\n\t\t\t// setup EKS Auth Service call Interceptor\n\t\t\tif tc.httpCode == 200 {\n\t\t\t\teksAuthMockService.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).Return(getMockCredentials(), nil, nil)\n\t\t\t}\n",
                      "markdown": "`\t\t\t\tClusterName:         someClusterName,\n\t\t\t}\n\n\t\t\t// setup EKS Auth Service call Interceptor\n\t\t\tif tc.httpCode == 200 {\n\t\t\t\teksAuthMockService.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).Return(getMockCredentials(), nil, nil)\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/charts/eks-pod-identity-agent/templates/metrics.yaml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 5,
                  "endLine": 5,
                  "snippet": {
                    "text": "{{- if .Values.metrics.enabled -}}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: eks-pod-identity-agent\n  namespace: {{ .Release.Namespace }}\n  labels:\n",
                    "rendered": {
                      "text": "{{- if .Values.metrics.enabled -}}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: eks-pod-identity-agent\n  namespace: {{ .Release.Namespace }}\n  labels:\n",
                      "markdown": "`{{- if .Values.metrics.enabled -}}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: eks-pod-identity-agent\n  namespace: {{ .Release.Namespace }}\n  labels:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/charts/eks-pod-identity-agent/templates/_helpers.tpl"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 11,
                  "endLine": 10,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"eks-pod-identity-agent.fullname\" -}}\n",
                    "rendered": {
                      "text": "\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"eks-pod-identity-agent.fullname\" -}}\n",
                      "markdown": "`\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"eks-pod-identity-agent.fullname\" -}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/charts/eks-pod-identity-agent/templates/_helpers.tpl"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 4,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"eks-pod-identity-agent.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n",
                    "rendered": {
                      "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"eks-pod-identity-agent.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n",
                      "markdown": "`{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"eks-pod-identity-agent.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/charts/eks-pod-identity-agent/templates/_helpers.tpl"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 4,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"eks-pod-identity-agent.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n",
                    "rendered": {
                      "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"eks-pod-identity-agent.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n",
                      "markdown": "`{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"eks-pod-identity-agent.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cloud/eksauth/service.go"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 4,
                  "endLine": 23,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\trequest *credentials.EksCredentialsRequest) (*credentials.EksCredentialsResponse, credentials.ResponseMetadata, error)\n}\n\ntype service struct {\n\teksAuthService *eksauth.Client\n}\n\n",
                    "rendered": {
                      "text": "\t\trequest *credentials.EksCredentialsRequest) (*credentials.EksCredentialsResponse, credentials.ResponseMetadata, error)\n}\n\ntype service struct {\n\teksAuthService *eksauth.Client\n}\n\n",
                      "markdown": "`\t\trequest *credentials.EksCredentialsRequest) (*credentials.EksCredentialsResponse, credentials.ResponseMetadata, error)\n}\n\ntype service struct {\n\teksAuthService *eksauth.Client\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache_test.go"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 34,
                  "endLine": 343,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedErrMsg: \"error directed at second call\",\n\t\t\ttimerBuilder: func(counter *int) internalClock {\n\t\t\t\treturn func() time.Time {\n\t\t\t\t\t*counter += 1\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedErrMsg: \"error directed at second call\",\n\t\t\ttimerBuilder: func(counter *int) internalClock {\n\t\t\t\treturn func() time.Time {\n\t\t\t\t\t*counter += 1\n",
                      "markdown": "`\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedErrMsg: \"error directed at second call\",\n\t\t\ttimerBuilder: func(counter *int) internalClock {\n\t\t\t\treturn func() time.Time {\n\t\t\t\t\t*counter += 1\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache_test.go"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 49,
                  "endLine": 340,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at cache\")).Times(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedErrMsg: \"error directed at second call\",\n",
                    "rendered": {
                      "text": "\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at cache\")).Times(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedErrMsg: \"error directed at second call\",\n",
                      "markdown": "`\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at cache\")).Times(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedErrMsg: \"error directed at second call\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache_test.go"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 49,
                  "endLine": 338,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(&shortDurationCreds, responseMetadataTest(\"test\"), nil).Times(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at cache\")).Times(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n",
                    "rendered": {
                      "text": "\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(&shortDurationCreds, responseMetadataTest(\"test\"), nil).Times(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at cache\")).Times(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n",
                      "markdown": "`\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(&shortDurationCreds, responseMetadataTest(\"test\"), nil).Times(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at cache\")).Times(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache_test.go"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 34,
                  "endLine": 310,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedErrMsg: \"error directed at second call\",\n\t\t},\n\t\t{\n\t\t\tname: \"it does not evict credentials if its an unknown API error\",\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedErrMsg: \"error directed at second call\",\n\t\t},\n\t\t{\n\t\t\tname: \"it does not evict credentials if its an unknown API error\",\n",
                      "markdown": "`\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedErrMsg: \"error directed at second call\",\n\t\t},\n\t\t{\n\t\t\tname: \"it does not evict credentials if its an unknown API error\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache_test.go"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 49,
                  "endLine": 307,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\t\t\t\t\tReturn(nil, nil, &types.AccessDeniedException{}).\n\t\t\t\t\t\tTimes(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedErrMsg: \"error directed at second call\",\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\tReturn(nil, nil, &types.AccessDeniedException{}).\n\t\t\t\t\t\tTimes(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedErrMsg: \"error directed at second call\",\n",
                      "markdown": "`\t\t\t\t\t\tReturn(nil, nil, &types.AccessDeniedException{}).\n\t\t\t\t\t\tTimes(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, nil, fmt.Errorf(\"error directed at second call\")).Times(1),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedErrMsg: \"error directed at second call\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache_test.go"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 74,
                  "endLine": 289,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(&longDurationCreds, responseMetadataTest(\"test\"), nil).Times(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, responseMetadataTest(\"test\"), fmt.Errorf(\"error directed at cache\")).MinTimes(2),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedCredentials: longDurationCreds,\n",
                    "rendered": {
                      "text": "\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(&longDurationCreds, responseMetadataTest(\"test\"), nil).Times(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, responseMetadataTest(\"test\"), fmt.Errorf(\"error directed at cache\")).MinTimes(2),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedCredentials: longDurationCreds,\n",
                      "markdown": "`\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(&longDurationCreds, responseMetadataTest(\"test\"), nil).Times(1),\n\t\t\t\t\tdelegate.EXPECT().GetIamCredentials(gomock.Any(), gomock.Any()).\n\t\t\t\t\t\tReturn(nil, responseMetadataTest(\"test\"), fmt.Errorf(\"error directed at cache\")).MinTimes(2),\n\t\t\t\t)\n\t\t\t},\n\t\t\texpectedCredentials: longDurationCreds,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache_test.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 44,
                  "endLine": 58,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t\texpectedErrMsg: \"service account is empty\",\n\t\t},\n\t\t{\n\t\t\tname:           \"it can handle no request at all\",\n\t\t\trequest:        nil,\n\t\t\texpectedErrMsg: \"request to fetch credentials is empty\",\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\texpectedErrMsg: \"service account is empty\",\n\t\t},\n\t\t{\n\t\t\tname:           \"it can handle no request at all\",\n\t\t\trequest:        nil,\n\t\t\texpectedErrMsg: \"request to fetch credentials is empty\",\n\t\t},\n",
                      "markdown": "`\t\t\texpectedErrMsg: \"service account is empty\",\n\t\t},\n\t\t{\n\t\t\tname:           \"it can handle no request at all\",\n\t\t\trequest:        nil,\n\t\t\texpectedErrMsg: \"request to fetch credentials is empty\",\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache.go"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 30,
                  "endLine": 142,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t}\n\n\t// check if the request is in the cache, if it is, return it\n\tif val, ok := r.internalCache.Get(request.ServiceAccountToken); ok {\n\t\tif _, withinTtl := r.credentialsInEntryWithinValidTtl(val); withinTtl {\n\t\t\tlog.WithField(\"cache-hit\", 1).Tracef(\"Using cached credentials\")\n\t\t\treturn val.credentials, nil, nil\n",
                    "rendered": {
                      "text": "\t}\n\n\t// check if the request is in the cache, if it is, return it\n\tif val, ok := r.internalCache.Get(request.ServiceAccountToken); ok {\n\t\tif _, withinTtl := r.credentialsInEntryWithinValidTtl(val); withinTtl {\n\t\t\tlog.WithField(\"cache-hit\", 1).Tracef(\"Using cached credentials\")\n\t\t\treturn val.credentials, nil, nil\n",
                      "markdown": "`\t}\n\n\t// check if the request is in the cache, if it is, return it\n\tif val, ok := r.internalCache.Get(request.ServiceAccountToken); ok {\n\t\tif _, withinTtl := r.credentialsInEntryWithinValidTtl(val); withinTtl {\n\t\t\tlog.WithField(\"cache-hit\", 1).Tracef(\"Using cached credentials\")\n\t\t\treturn val.credentials, nil, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache.go"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 37,
                  "endLine": 243,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\tcalculatedRetryInterval := r.retryInterval + time.Duration(rand.Int63n(int64(r.maxRetryJitter)))\n\t\tnewRefreshTtl := minDuration(oldCredsDuration, calculatedRetryInterval)\n\t\tlog.WithField(\"ttl\", newRefreshTtl).\n\t\t\tInfof(\"Credentials still valid for at least %0.2fs, keeping them will try again after ttl expires\", oldCredsDuration.Seconds())\n\t\tr.internalCache.SetWithRefreshExpire(key, entry, newRefreshTtl, oldCredsDuration)\n\t} else {\n\t\tpromCacheState.WithLabelValues(\"evicted\").Inc()\n",
                    "rendered": {
                      "text": "\t\tcalculatedRetryInterval := r.retryInterval + time.Duration(rand.Int63n(int64(r.maxRetryJitter)))\n\t\tnewRefreshTtl := minDuration(oldCredsDuration, calculatedRetryInterval)\n\t\tlog.WithField(\"ttl\", newRefreshTtl).\n\t\t\tInfof(\"Credentials still valid for at least %0.2fs, keeping them will try again after ttl expires\", oldCredsDuration.Seconds())\n\t\tr.internalCache.SetWithRefreshExpire(key, entry, newRefreshTtl, oldCredsDuration)\n\t} else {\n\t\tpromCacheState.WithLabelValues(\"evicted\").Inc()\n",
                      "markdown": "`\t\tcalculatedRetryInterval := r.retryInterval + time.Duration(rand.Int63n(int64(r.maxRetryJitter)))\n\t\tnewRefreshTtl := minDuration(oldCredsDuration, calculatedRetryInterval)\n\t\tlog.WithField(\"ttl\", newRefreshTtl).\n\t\t\tInfof(\"Credentials still valid for at least %0.2fs, keeping them will try again after ttl expires\", oldCredsDuration.Seconds())\n\t\tr.internalCache.SetWithRefreshExpire(key, entry, newRefreshTtl, oldCredsDuration)\n\t} else {\n\t\tpromCacheState.WithLabelValues(\"evicted\").Inc()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache.go"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 48,
                  "endLine": 152,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\tr.internalCache.Delete(request.ServiceAccountToken)\n\t}\n\n\tlog.WithField(\"cache-hit\", 0).Tracef(\"Could not find entry in cache, requesting creds from delegate\")\n\n\tiamCredentials, metadata, err := r.callDelegateAndCache(ctx, request)\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\t\tr.internalCache.Delete(request.ServiceAccountToken)\n\t}\n\n\tlog.WithField(\"cache-hit\", 0).Tracef(\"Could not find entry in cache, requesting creds from delegate\")\n\n\tiamCredentials, metadata, err := r.callDelegateAndCache(ctx, request)\n\tif err != nil {\n",
                      "markdown": "`\t\tr.internalCache.Delete(request.ServiceAccountToken)\n\t}\n\n\tlog.WithField(\"cache-hit\", 0).Tracef(\"Could not find entry in cache, requesting creds from delegate\")\n\n\tiamCredentials, metadata, err := r.callDelegateAndCache(ctx, request)\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache.go"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 43,
                  "endLine": 52,
                  "snippet": {
                    "text": "\tcredentials        *credentials.EksCredentialsResponse\n}\n\n// internalClock is used to get the current time\ntype internalClock func() time.Time\n\n// type assertion\nvar _ credentials.CredentialRetriever = &cachedCredentialRetriever{}\n",
                    "rendered": {
                      "text": "\tcredentials        *credentials.EksCredentialsResponse\n}\n\n// internalClock is used to get the current time\ntype internalClock func() time.Time\n\n// type assertion\nvar _ credentials.CredentialRetriever = &cachedCredentialRetriever{}\n",
                      "markdown": "`\tcredentials        *credentials.EksCredentialsResponse\n}\n\n// internalClock is used to get the current time\ntype internalClock func() time.Time\n\n// type assertion\nvar _ credentials.CredentialRetriever = &cachedCredentialRetriever{}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 25,
                  "endLine": 41,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t// purposes\n\tnow internalClock\n\t// refreshRateLimiter slows down refreshes to avoid getting throttled by EKS Auth\n\t// in case there is some sort of backlog of creds waiting to be refreshed\n\trefreshRateLimiter *rate.Limiter\n}\n\n",
                    "rendered": {
                      "text": "\t// purposes\n\tnow internalClock\n\t// refreshRateLimiter slows down refreshes to avoid getting throttled by EKS Auth\n\t// in case there is some sort of backlog of creds waiting to be refreshed\n\trefreshRateLimiter *rate.Limiter\n}\n\n",
                      "markdown": "`\t// purposes\n\tnow internalClock\n\t// refreshRateLimiter slows down refreshes to avoid getting throttled by EKS Auth\n\t// in case there is some sort of backlog of creds waiting to be refreshed\n\trefreshRateLimiter *rate.Limiter\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 47,
                  "endLine": 34,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t// retryInterval is the least amount of time the cache will to wait to renew\n\t// credentials, default is 1m\n\tretryInterval time.Duration\n\t// maxRetryJitter is the maximum amount jitter time we can add when credentials\n\t// are scheduled for renewal\n\tmaxRetryJitter time.Duration\n\t// now internal clock that is used to get time. Usefull for testing\n",
                    "rendered": {
                      "text": "\t// retryInterval is the least amount of time the cache will to wait to renew\n\t// credentials, default is 1m\n\tretryInterval time.Duration\n\t// maxRetryJitter is the maximum amount jitter time we can add when credentials\n\t// are scheduled for renewal\n\tmaxRetryJitter time.Duration\n\t// now internal clock that is used to get time. Usefull for testing\n",
                      "markdown": "`\t// retryInterval is the least amount of time the cache will to wait to renew\n\t// credentials, default is 1m\n\tretryInterval time.Duration\n\t// maxRetryJitter is the maximum amount jitter time we can add when credentials\n\t// are scheduled for renewal\n\tmaxRetryJitter time.Duration\n\t// now internal clock that is used to get time. Usefull for testing\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 40,
                  "endLine": 31,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t// minCredentialTtl minimum amount of time credentials need to have in order\n\t// to store them and consider them valid, default is 15s\n\tminCredentialTtl time.Duration\n\t// retryInterval is the least amount of time the cache will to wait to renew\n\t// credentials, default is 1m\n\tretryInterval time.Duration\n\t// maxRetryJitter is the maximum amount jitter time we can add when credentials\n",
                    "rendered": {
                      "text": "\t// minCredentialTtl minimum amount of time credentials need to have in order\n\t// to store them and consider them valid, default is 15s\n\tminCredentialTtl time.Duration\n\t// retryInterval is the least amount of time the cache will to wait to renew\n\t// credentials, default is 1m\n\tretryInterval time.Duration\n\t// maxRetryJitter is the maximum amount jitter time we can add when credentials\n",
                      "markdown": "`\t// minCredentialTtl minimum amount of time credentials need to have in order\n\t// to store them and consider them valid, default is 15s\n\tminCredentialTtl time.Duration\n\t// retryInterval is the least amount of time the cache will to wait to renew\n\t// credentials, default is 1m\n\tretryInterval time.Duration\n\t// maxRetryJitter is the maximum amount jitter time we can add when credentials\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 38,
                  "endLine": 28,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t// credentialsRenewalTtl the maximum amount of time that we can hold\n\t// credentials in the cache\n\tcredentialsRenewalTtl time.Duration\n\t// minCredentialTtl minimum amount of time credentials need to have in order\n\t// to store them and consider them valid, default is 15s\n\tminCredentialTtl time.Duration\n\t// retryInterval is the least amount of time the cache will to wait to renew\n",
                    "rendered": {
                      "text": "\t// credentialsRenewalTtl the maximum amount of time that we can hold\n\t// credentials in the cache\n\tcredentialsRenewalTtl time.Duration\n\t// minCredentialTtl minimum amount of time credentials need to have in order\n\t// to store them and consider them valid, default is 15s\n\tminCredentialTtl time.Duration\n\t// retryInterval is the least amount of time the cache will to wait to renew\n",
                      "markdown": "`\t// credentialsRenewalTtl the maximum amount of time that we can hold\n\t// credentials in the cache\n\tcredentialsRenewalTtl time.Duration\n\t// minCredentialTtl minimum amount of time credentials need to have in order\n\t// to store them and consider them valid, default is 15s\n\tminCredentialTtl time.Duration\n\t// retryInterval is the least amount of time the cache will to wait to renew\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 47,
                  "endLine": 25,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\tinternalCache *expiring.Cache[string, cacheEntry]\n\t// delegate is who we are actually getting the credentials from\n\tdelegate credentials.CredentialRetriever\n\t// credentialsRenewalTtl the maximum amount of time that we can hold\n\t// credentials in the cache\n\tcredentialsRenewalTtl time.Duration\n\t// minCredentialTtl minimum amount of time credentials need to have in order\n",
                    "rendered": {
                      "text": "\tinternalCache *expiring.Cache[string, cacheEntry]\n\t// delegate is who we are actually getting the credentials from\n\tdelegate credentials.CredentialRetriever\n\t// credentialsRenewalTtl the maximum amount of time that we can hold\n\t// credentials in the cache\n\tcredentialsRenewalTtl time.Duration\n\t// minCredentialTtl minimum amount of time credentials need to have in order\n",
                      "markdown": "`\tinternalCache *expiring.Cache[string, cacheEntry]\n\t// delegate is who we are actually getting the credentials from\n\tdelegate credentials.CredentialRetriever\n\t// credentialsRenewalTtl the maximum amount of time that we can hold\n\t// credentials in the cache\n\tcredentialsRenewalTtl time.Duration\n\t// minCredentialTtl minimum amount of time credentials need to have in order\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/credsretriever/refreshing_cache.go"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 53,
                  "endLine": 20,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\ntype cachedCredentialRetriever struct {\n\t// internalCache is where credentials are stored, it runs a janitor that evicts and refreshes\n\t// entries once they expire. Key in the cache is the service token, values\n\t// are of type cacheEntry.\n\tinternalCache *expiring.Cache[string, cacheEntry]\n\t// delegate is who we are actually getting the credentials from\n",
                    "rendered": {
                      "text": "\ntype cachedCredentialRetriever struct {\n\t// internalCache is where credentials are stored, it runs a janitor that evicts and refreshes\n\t// entries once they expire. Key in the cache is the service token, values\n\t// are of type cacheEntry.\n\tinternalCache *expiring.Cache[string, cacheEntry]\n\t// delegate is who we are actually getting the credentials from\n",
                      "markdown": "`\ntype cachedCredentialRetriever struct {\n\t// internalCache is where credentials are stored, it runs a janitor that evicts and refreshes\n\t// entries once they expire. Key in the cache is the service token, values\n\t// are of type cacheEntry.\n\tinternalCache *expiring.Cache[string, cacheEntry]\n\t// delegate is who we are actually getting the credentials from\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache.go"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 11,
                  "endLine": 229,
                  "endColumn": 16,
                  "snippet": {
                    "text": "func (c *cache[K, V]) ReplaceWithRefreshExpire(k K, v V, refresh, expire time.Duration) error {\n\tc.mu.Lock()\n\n\t_, ok := c.get(k)\n\tif !ok {\n\t\tc.mu.Unlock()\n\t\treturn fmt.Errorf(\"freshcache.Replace: item %v doesn't exist\", k)\n",
                    "rendered": {
                      "text": "func (c *cache[K, V]) ReplaceWithRefreshExpire(k K, v V, refresh, expire time.Duration) error {\n\tc.mu.Lock()\n\n\t_, ok := c.get(k)\n\tif !ok {\n\t\tc.mu.Unlock()\n\t\treturn fmt.Errorf(\"freshcache.Replace: item %v doesn't exist\", k)\n",
                      "markdown": "`func (c *cache[K, V]) ReplaceWithRefreshExpire(k K, v V, refresh, expire time.Duration) error {\n\tc.mu.Lock()\n\n\t_, ok := c.get(k)\n\tif !ok {\n\t\tc.mu.Unlock()\n\t\treturn fmt.Errorf(\"freshcache.Replace: item %v doesn't exist\", k)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache.go"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 11,
                  "endLine": 196,
                  "endColumn": 16,
                  "snippet": {
                    "text": "func (c *cache[K, V]) AddWithRefreshExpire(k K, v V, refresh, expire time.Duration) error {\n\tc.mu.Lock()\n\n\t_, ok := c.get(k)\n\tif ok {\n\t\tc.mu.Unlock()\n\t\treturn fmt.Errorf(\"freshcache.Add: item %v already exists\", k)\n",
                    "rendered": {
                      "text": "func (c *cache[K, V]) AddWithRefreshExpire(k K, v V, refresh, expire time.Duration) error {\n\tc.mu.Lock()\n\n\t_, ok := c.get(k)\n\tif ok {\n\t\tc.mu.Unlock()\n\t\treturn fmt.Errorf(\"freshcache.Add: item %v already exists\", k)\n",
                      "markdown": "`func (c *cache[K, V]) AddWithRefreshExpire(k K, v V, refresh, expire time.Duration) error {\n\tc.mu.Lock()\n\n\t_, ok := c.get(k)\n\tif ok {\n\t\tc.mu.Unlock()\n\t\treturn fmt.Errorf(\"freshcache.Add: item %v already exists\", k)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache.go"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 6,
                  "endLine": 172,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t}\n\n\titem.Expiration = time.Now().Add(d).UnixNano()\n\tc.lru.Get(k)\n\tc.items[k] = item\n\treturn item.Object, true\n}\n",
                    "rendered": {
                      "text": "\t}\n\n\titem.Expiration = time.Now().Add(d).UnixNano()\n\tc.lru.Get(k)\n\tc.items[k] = item\n\treturn item.Object, true\n}\n",
                      "markdown": "`\t}\n\n\titem.Expiration = time.Now().Add(d).UnixNano()\n\tc.lru.Get(k)\n\tc.items[k] = item\n\treturn item.Object, true\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 55,
                  "endLine": 25,
                  "endColumn": 59,
                  "snippet": {
                    "text": "type (\n\t// Cache is a thread-safe in-memory key/value store.\n\tCache[K comparable, V any] struct {\n\t\t*cache[K, V] // If this is confusing, see the comment at newCacheWithJanitor()\n\t}\n\n\tcache[K comparable, V any] struct {\n",
                    "rendered": {
                      "text": "type (\n\t// Cache is a thread-safe in-memory key/value store.\n\tCache[K comparable, V any] struct {\n\t\t*cache[K, V] // If this is confusing, see the comment at newCacheWithJanitor()\n\t}\n\n\tcache[K comparable, V any] struct {\n",
                      "markdown": "`type (\n\t// Cache is a thread-safe in-memory key/value store.\n\tCache[K comparable, V any] struct {\n\t\t*cache[K, V] // If this is confusing, see the comment at newCacheWithJanitor()\n\t}\n\n\tcache[K comparable, V any] struct {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache.go"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 54,
                  "endLine": 224,
                  "endColumn": 60,
                  "snippet": {
                    "text": "// expired.\n//\n// It will return an error if the cache key doesn't exist. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) ReplaceWithRefreshExpire(k K, v V, refresh, expire time.Duration) error {\n\tc.mu.Lock()\n",
                    "rendered": {
                      "text": "// expired.\n//\n// It will return an error if the cache key doesn't exist. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) ReplaceWithRefreshExpire(k K, v V, refresh, expire time.Duration) error {\n\tc.mu.Lock()\n",
                      "markdown": "`// expired.\n//\n// It will return an error if the cache key doesn't exist. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) ReplaceWithRefreshExpire(k K, v V, refresh, expire time.Duration) error {\n\tc.mu.Lock()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache.go"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 54,
                  "endLine": 214,
                  "endColumn": 60,
                  "snippet": {
                    "text": "// expired.\n//\n// It will return an error if the cache key doesn't exist. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) ReplaceWithExpire(k K, v V, d time.Duration) error {\n\treturn c.ReplaceWithRefreshExpire(k, v, NoRefresh, d)\n",
                    "rendered": {
                      "text": "// expired.\n//\n// It will return an error if the cache key doesn't exist. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) ReplaceWithExpire(k K, v V, d time.Duration) error {\n\treturn c.ReplaceWithRefreshExpire(k, v, NoRefresh, d)\n",
                      "markdown": "`// expired.\n//\n// It will return an error if the cache key doesn't exist. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) ReplaceWithExpire(k K, v V, d time.Duration) error {\n\treturn c.ReplaceWithRefreshExpire(k, v, NoRefresh, d)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache.go"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 54,
                  "endLine": 191,
                  "endColumn": 60,
                  "snippet": {
                    "text": "// it has expired.\n//\n// It will return an error if the cache key already exists. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) AddWithRefreshExpire(k K, v V, refresh, expire time.Duration) error {\n\tc.mu.Lock()\n",
                    "rendered": {
                      "text": "// it has expired.\n//\n// It will return an error if the cache key already exists. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) AddWithRefreshExpire(k K, v V, refresh, expire time.Duration) error {\n\tc.mu.Lock()\n",
                      "markdown": "`// it has expired.\n//\n// It will return an error if the cache key already exists. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) AddWithRefreshExpire(k K, v V, refresh, expire time.Duration) error {\n\tc.mu.Lock()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache.go"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 54,
                  "endLine": 181,
                  "endColumn": 60,
                  "snippet": {
                    "text": "// it has expired.\n//\n// It will return an error if the cache key already exists. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) AddWithExpire(k K, v V, d time.Duration) error {\n\treturn c.AddWithRefreshExpire(k, v, NoRefresh, d)\n",
                    "rendered": {
                      "text": "// it has expired.\n//\n// It will return an error if the cache key already exists. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) AddWithExpire(k K, v V, d time.Duration) error {\n\treturn c.AddWithRefreshExpire(k, v, NoRefresh, d)\n",
                      "markdown": "`// it has expired.\n//\n// It will return an error if the cache key already exists. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) AddWithExpire(k K, v V, d time.Duration) error {\n\treturn c.AddWithRefreshExpire(k, v, NoRefresh, d)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache.go"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 54,
                  "endLine": 156,
                  "endColumn": 60,
                  "snippet": {
                    "text": "// TouchWithExpire replaces the expiry of a key and returns the current value, if any.\n//\n// The boolean return value indicates if this item was set. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) TouchWithExpire(k K, d time.Duration) (V, bool) {\n\tif d == DefaultExpiration {\n",
                    "rendered": {
                      "text": "// TouchWithExpire replaces the expiry of a key and returns the current value, if any.\n//\n// The boolean return value indicates if this item was set. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) TouchWithExpire(k K, d time.Duration) (V, bool) {\n\tif d == DefaultExpiration {\n",
                      "markdown": "`// TouchWithExpire replaces the expiry of a key and returns the current value, if any.\n//\n// The boolean return value indicates if this item was set. If the duration is 0\n// (DefaultExpiration), the cache's default expiration time is used. If it is -1\n// (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) TouchWithExpire(k K, d time.Duration) (V, bool) {\n\tif d == DefaultExpiration {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache.go"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 75,
                  "endLine": 116,
                  "snippet": {
                    "text": "\n// SetWithRefreshExpire sets a cache item, replacing any existing item.\n//\n// If the duration is 0 (DefaultExpiration), the cache's default expiration time\n// is used. If it is -1 (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) SetWithRefreshExpire(k K, v V, refresh, expire time.Duration) {\n\t// \"Inlining\" of set\n\tvar e, r int64\n",
                    "rendered": {
                      "text": "\n// SetWithRefreshExpire sets a cache item, replacing any existing item.\n//\n// If the duration is 0 (DefaultExpiration), the cache's default expiration time\n// is used. If it is -1 (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) SetWithRefreshExpire(k K, v V, refresh, expire time.Duration) {\n\t// \"Inlining\" of set\n\tvar e, r int64\n",
                      "markdown": "`\n// SetWithRefreshExpire sets a cache item, replacing any existing item.\n//\n// If the duration is 0 (DefaultExpiration), the cache's default expiration time\n// is used. If it is -1 (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) SetWithRefreshExpire(k K, v V, refresh, expire time.Duration) {\n\t// \"Inlining\" of set\n\tvar e, r int64\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache.go"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 75,
                  "endLine": 108,
                  "snippet": {
                    "text": "\n// SetWithExpire sets a cache item, replacing any existing item.\n//\n// If the duration is 0 (DefaultExpiration), the cache's default expiration time\n// is used. If it is -1 (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) SetWithExpire(k K, v V, d time.Duration) {\n\tc.SetWithRefreshExpire(k, v, NoRefresh, d)\n}\n",
                    "rendered": {
                      "text": "\n// SetWithExpire sets a cache item, replacing any existing item.\n//\n// If the duration is 0 (DefaultExpiration), the cache's default expiration time\n// is used. If it is -1 (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) SetWithExpire(k K, v V, d time.Duration) {\n\tc.SetWithRefreshExpire(k, v, NoRefresh, d)\n}\n",
                      "markdown": "`\n// SetWithExpire sets a cache item, replacing any existing item.\n//\n// If the duration is 0 (DefaultExpiration), the cache's default expiration time\n// is used. If it is -1 (NoExpiration), the item never expires.\nfunc (c *cache[K, V]) SetWithExpire(k K, v V, d time.Duration) {\n\tc.SetWithRefreshExpire(k, v, NoRefresh, d)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/cache/expiring/cache.go"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 69,
                  "endLine": 38,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\t\tlru               *lruCache[K, bool]\n\t}\n\n\t// Item stored in both caches; it holds the value and the expiration time as\n\t// timestamp.\n\tItem[V any] struct {\n\t\tObject     V\n",
                    "rendered": {
                      "text": "\t\tlru               *lruCache[K, bool]\n\t}\n\n\t// Item stored in both caches; it holds the value and the expiration time as\n\t// timestamp.\n\tItem[V any] struct {\n\t\tObject     V\n",
                      "markdown": "`\t\tlru               *lruCache[K, bool]\n\t}\n\n\t// Item stored in both caches; it holds the value and the expiration time as\n\t// timestamp.\n\tItem[V any] struct {\n\t\tObject     V\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/internal/middleware/rate_limiter/rate_limiter_test.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 19,
                  "endLine": 25,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\tdefer server.Close()\n\n\tmakeRequest := func() error {\n\t\tresp, err := http.Get(server.URL)\n\t\tdefer func() {\n\t\t\t_ = resp.Body.Close()\n\t\t}()\n",
                    "rendered": {
                      "text": "\tdefer server.Close()\n\n\tmakeRequest := func() error {\n\t\tresp, err := http.Get(server.URL)\n\t\tdefer func() {\n\t\t\t_ = resp.Body.Close()\n\t\t}()\n",
                      "markdown": "`\tdefer server.Close()\n\n\tmakeRequest := func() error {\n\t\tresp, err := http.Get(server.URL)\n\t\tdefer func() {\n\t\t\t_ = resp.Body.Close()\n\t\t}()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/README.md"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 31,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Refer [README.md in `charts`](./charts/eks-pod-identity-agent/README.md) for Helm installation.\n\n### Kubectl Install\n\nUpdate below Env in hack/dev/ds.yaml:\n\n* `EKS_CLUSTER_NAME`\n* `AWS_REGION_NAME`\n",
                    "rendered": {
                      "text": "Refer [README.md in `charts`](./charts/eks-pod-identity-agent/README.md) for Helm installation.\n\n### Kubectl Install\n\nUpdate below Env in hack/dev/ds.yaml:\n\n* `EKS_CLUSTER_NAME`\n* `AWS_REGION_NAME`\n",
                      "markdown": "`Refer [README.md in `charts`](./charts/eks-pod-identity-agent/README.md) for Helm installation.\n\n### Kubectl Install\n\nUpdate below Env in hack/dev/ds.yaml:\n\n* `EKS_CLUSTER_NAME`\n* `AWS_REGION_NAME`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/README.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 12,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n### Kubectl Install\n\nUpdate below Env in hack/dev/ds.yaml:\n\n* `EKS_CLUSTER_NAME`\n* `AWS_REGION_NAME`\n",
                    "rendered": {
                      "text": "\n### Kubectl Install\n\nUpdate below Env in hack/dev/ds.yaml:\n\n* `EKS_CLUSTER_NAME`\n* `AWS_REGION_NAME`\n",
                      "markdown": "`\n### Kubectl Install\n\nUpdate below Env in hack/dev/ds.yaml:\n\n* `EKS_CLUSTER_NAME`\n* `AWS_REGION_NAME`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/README.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 197,
                  "endLine": 11,
                  "endColumn": 206,
                  "snippet": {
                    "text": "om other types of credentials by creating the association first, before removing the old credentials.\n\nThe container credentials provider provides temporary credentials from an agent that runs on each worker node. In Amazon EKS, the agent is the EKS Pod Identity Agent and on Amazon Elastic Container Service (ECS) the agent is the amazon-ecs-agent. AWS SDKs use environment variables to locate the agent to connect to.\n\nVisit [EKS user guide](https://docs.aws.amazon.com/eks/latest/userguide/pod-id-how-it-works.html)  to learn more about the Pod Identity feature.\n\n## Building\n\n* `make build`  builds the Li",
                    "rendered": {
                      "text": "om other types of credentials by creating the association first, before removing the old credentials.\n\nThe container credentials provider provides temporary credentials from an agent that runs on each worker node. In Amazon EKS, the agent is the EKS Pod Identity Agent and on Amazon Elastic Container Service (ECS) the agent is the amazon-ecs-agent. AWS SDKs use environment variables to locate the agent to connect to.\n\nVisit [EKS user guide](https://docs.aws.amazon.com/eks/latest/userguide/pod-id-how-it-works.html)  to learn more about the Pod Identity feature.\n\n## Building\n\n* `make build`  builds the Li",
                      "markdown": "`om other types of credentials by creating the association first, before removing the old credentials.\n\nThe container credentials provider provides temporary credentials from an agent that runs on each worker node. In Amazon EKS, the agent is the EKS Pod Identity Agent and on Amazon Elastic Container Service (ECS) the agent is the amazon-ecs-agent. AWS SDKs use environment variables to locate the agent to connect to.\n\nVisit [EKS user guide](https://docs.aws.amazon.com/eks/latest/userguide/pod-id-how-it-works.html)  to learn more about the Pod Identity feature.\n\n## Building\n\n* `make build`  builds the Li`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/README.md"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 226,
                  "endLine": 7,
                  "endColumn": 232,
                  "snippet": {
                    "text": "e agent as part of the worker node AMI or use Helm to install the agent.\n\nYou can use AWS SDKs to receive temporary IAM permissions required to access various AWS services from your applications running on the EKS cluster. All AWS SDKs have a series of places (or sources) that they check in order to find valid credentials to use to make a request to an AWS service. After valid credentials are found, the search is stopped. This systematic search is called the default credential provider chain.  For more information about the Credential provider chain, refer to the [AWS SDKs and Tools Reference Guide]",
                    "rendered": {
                      "text": "e agent as part of the worker node AMI or use Helm to install the agent.\n\nYou can use AWS SDKs to receive temporary IAM permissions required to access various AWS services from your applications running on the EKS cluster. All AWS SDKs have a series of places (or sources) that they check in order to find valid credentials to use to make a request to an AWS service. After valid credentials are found, the search is stopped. This systematic search is called the default credential provider chain.  For more information about the Credential provider chain, refer to the [AWS SDKs and Tools Reference Guide]",
                      "markdown": "`e agent as part of the worker node AMI or use Helm to install the agent.\n\nYou can use AWS SDKs to receive temporary IAM permissions required to access various AWS services from your applications running on the EKS cluster. All AWS SDKs have a series of places (or sources) that they check in order to find valid credentials to use to make a request to an AWS service. After valid credentials are found, the search is stopped. This systematic search is called the default credential provider chain.  For more information about the Credential provider chain, refer to the [AWS SDKs and Tools Reference Guide]`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/README.md"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 662,
                  "endLine": 5,
                  "endColumn": 668,
                  "snippet": {
                    "text": "ntity agent on the worker nodes. AWS recommends you install the [Pod Identity Agent as an EKS Add-on](https://docs.aws.amazon.com/eks/latest/userguide/pod-id-agent-setup.html). Alternatively, you can self manage the add-on using the open source code in this repo, bake the agent as part of the worker node AMI or use Helm to install the agent.\n\nYou can use AWS SDKs to receive temporary IAM permissions required to access various AWS services from your applications running on the EKS cluster. All AWS SDKs have a series of places (or sources) that they check in order to find valid credentials to use to m",
                    "rendered": {
                      "text": "ntity agent on the worker nodes. AWS recommends you install the [Pod Identity Agent as an EKS Add-on](https://docs.aws.amazon.com/eks/latest/userguide/pod-id-agent-setup.html). Alternatively, you can self manage the add-on using the open source code in this repo, bake the agent as part of the worker node AMI or use Helm to install the agent.\n\nYou can use AWS SDKs to receive temporary IAM permissions required to access various AWS services from your applications running on the EKS cluster. All AWS SDKs have a series of places (or sources) that they check in order to find valid credentials to use to m",
                      "markdown": "`ntity agent on the worker nodes. AWS recommends you install the [Pod Identity Agent as an EKS Add-on](https://docs.aws.amazon.com/eks/latest/userguide/pod-id-agent-setup.html). Alternatively, you can self manage the add-on using the open source code in this repo, bake the agent as part of the worker node AMI or use Helm to install the agent.\n\nYou can use AWS SDKs to receive temporary IAM permissions required to access various AWS services from your applications running on the EKS cluster. All AWS SDKs have a series of places (or sources) that they check in order to find valid credentials to use to m`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 112,
                  "endLine": 83,
                  "endColumn": 117,
                  "snippet": {
                    "text": ".PHONY: lint\nlint:\n\tif ! command -v golangci-lint 2> /dev/null; then \\\n\t\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(shell go env GOPATH)/bin v1.52.1; \\\n\tfi\n\tgolangci-lint run ./...\n",
                    "rendered": {
                      "text": ".PHONY: lint\nlint:\n\tif ! command -v golangci-lint 2> /dev/null; then \\\n\t\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(shell go env GOPATH)/bin v1.52.1; \\\n\tfi\n\tgolangci-lint run ./...\n",
                      "markdown": "`.PHONY: lint\nlint:\n\tif ! command -v golangci-lint 2> /dev/null; then \\\n\t\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(shell go env GOPATH)/bin v1.52.1; \\\n\tfi\n\tgolangci-lint run ./...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 1,
                  "endLine": 83,
                  "endColumn": 7,
                  "snippet": {
                    "text": ".PHONY: lint\nlint:\n\tif ! command -v golangci-lint 2> /dev/null; then \\\n\t\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(shell go env GOPATH)/bin v1.52.1; \\\n\tfi\n\tgolangci-lint run ./...\n",
                    "rendered": {
                      "text": ".PHONY: lint\nlint:\n\tif ! command -v golangci-lint 2> /dev/null; then \\\n\t\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(shell go env GOPATH)/bin v1.52.1; \\\n\tfi\n\tgolangci-lint run ./...\n",
                      "markdown": "`.PHONY: lint\nlint:\n\tif ! command -v golangci-lint 2> /dev/null; then \\\n\t\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(shell go env GOPATH)/bin v1.52.1; \\\n\tfi\n\tgolangci-lint run ./...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 54,
                  "endLine": 41,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n.PHONY: build\nbuild:\n\t@echo \"Building eks-pod-identity-agent for $(shell go env GOOS)/$(GOARCH)\"\n\tGOOS=$(GOOS) GOARCH=$(GOARCH) CGO_ENABLED=0 go build \\\n\t\t-ldflags \"-X 'k8s.io/component-base/version.gitVersion=$(GIT_VERSION_SHORT)' \\\n\t\t-X 'k8s.io/component-base/version.gitCommit=$(GIT_COMMIT_ID)' \\\n",
                    "rendered": {
                      "text": "\n.PHONY: build\nbuild:\n\t@echo \"Building eks-pod-identity-agent for $(shell go env GOOS)/$(GOARCH)\"\n\tGOOS=$(GOOS) GOARCH=$(GOARCH) CGO_ENABLED=0 go build \\\n\t\t-ldflags \"-X 'k8s.io/component-base/version.gitVersion=$(GIT_VERSION_SHORT)' \\\n\t\t-X 'k8s.io/component-base/version.gitCommit=$(GIT_COMMIT_ID)' \\\n",
                      "markdown": "`\n.PHONY: build\nbuild:\n\t@echo \"Building eks-pod-identity-agent for $(shell go env GOOS)/$(GOARCH)\"\n\tGOOS=$(GOOS) GOARCH=$(GOARCH) CGO_ENABLED=0 go build \\\n\t\t-ldflags \"-X 'k8s.io/component-base/version.gitVersion=$(GIT_VERSION_SHORT)' \\\n\t\t-X 'k8s.io/component-base/version.gitCommit=$(GIT_COMMIT_ID)' \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".PHONY: push\npush: docker\n\teval $$(aws ecr get-login --registry-ids $(REGISTRY_ID) --no-include-email)\n\tdocker push $(IMAGE):$(TAG)\n\n.PHONY: build\nbuild:\n",
                    "rendered": {
                      "text": ".PHONY: push\npush: docker\n\teval $$(aws ecr get-login --registry-ids $(REGISTRY_ID) --no-include-email)\n\tdocker push $(IMAGE):$(TAG)\n\n.PHONY: build\nbuild:\n",
                      "markdown": "`.PHONY: push\npush: docker\n\teval $$(aws ecr get-login --registry-ids $(REGISTRY_ID) --no-include-email)\n\tdocker push $(IMAGE):$(TAG)\n\n.PHONY: build\nbuild:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 5,
                  "endLine": 36,
                  "snippet": {
                    "text": "\tdocker buildx build --platform=linux/amd64 --progress plain --output=type=docker -t $(IMAGE):$(TAG) .\n\n.PHONY: push\npush: docker\n\teval $$(aws ecr get-login --registry-ids $(REGISTRY_ID) --no-include-email)\n\tdocker push $(IMAGE):$(TAG)\n\n.PHONY: build\n",
                    "rendered": {
                      "text": "\tdocker buildx build --platform=linux/amd64 --progress plain --output=type=docker -t $(IMAGE):$(TAG) .\n\n.PHONY: push\npush: docker\n\teval $$(aws ecr get-login --registry-ids $(REGISTRY_ID) --no-include-email)\n\tdocker push $(IMAGE):$(TAG)\n\n.PHONY: build\n",
                      "markdown": "`\tdocker buildx build --platform=linux/amd64 --progress plain --output=type=docker -t $(IMAGE):$(TAG) .\n\n.PHONY: push\npush: docker\n\teval $$(aws ecr get-login --registry-ids $(REGISTRY_ID) --no-include-email)\n\tdocker push $(IMAGE):$(TAG)\n\n.PHONY: build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 32,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".PHONY: docker\ndocker:\n\t@echo 'Building image $(IMAGE)...'\n\tdocker buildx build --platform=linux/amd64 --progress plain --output=type=docker -t $(IMAGE):$(TAG) .\n\n.PHONY: push\npush: docker\n",
                    "rendered": {
                      "text": ".PHONY: docker\ndocker:\n\t@echo 'Building image $(IMAGE)...'\n\tdocker buildx build --platform=linux/amd64 --progress plain --output=type=docker -t $(IMAGE):$(TAG) .\n\n.PHONY: push\npush: docker\n",
                      "markdown": "`.PHONY: docker\ndocker:\n\t@echo 'Building image $(IMAGE)...'\n\tdocker buildx build --platform=linux/amd64 --progress plain --output=type=docker -t $(IMAGE):$(TAG) .\n\n.PHONY: push\npush: docker\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7,
                  "endLine": 30,
                  "snippet": {
                    "text": "TAG?=0.1.0\n\n\n.PHONY: docker\ndocker:\n\t@echo 'Building image $(IMAGE)...'\n\tdocker buildx build --platform=linux/amd64 --progress plain --output=type=docker -t $(IMAGE):$(TAG) .\n\n",
                    "rendered": {
                      "text": "TAG?=0.1.0\n\n\n.PHONY: docker\ndocker:\n\t@echo 'Building image $(IMAGE)...'\n\tdocker buildx build --platform=linux/amd64 --progress plain --output=type=docker -t $(IMAGE):$(TAG) .\n\n",
                      "markdown": "`TAG?=0.1.0\n\n\n.PHONY: docker\ndocker:\n\t@echo 'Building image $(IMAGE)...'\n\tdocker buildx build --platform=linux/amd64 --progress plain --output=type=docker -t $(IMAGE):$(TAG) .\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 18,
                  "endLine": 10,
                  "endColumn": 23,
                  "snippet": {
                    "text": "GIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\nGOARCH?=$(shell go env GOARCH)\nOUTPUT := _output/$(GOARCH)\nBINARY := $(OUTPUT)/bin/eks-pod-identity-agent\n\n",
                    "rendered": {
                      "text": "GIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\nGOARCH?=$(shell go env GOARCH)\nOUTPUT := _output/$(GOARCH)\nBINARY := $(OUTPUT)/bin/eks-pod-identity-agent\n\n",
                      "markdown": "`GIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\nGOARCH?=$(shell go env GOARCH)\nOUTPUT := _output/$(GOARCH)\nBINARY := $(OUTPUT)/bin/eks-pod-identity-agent\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 16,
                  "endLine": 9,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\nGOARCH?=$(shell go env GOARCH)\nOUTPUT := _output/$(GOARCH)\nBINARY := $(OUTPUT)/bin/eks-pod-identity-agent\n",
                    "rendered": {
                      "text": "# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\nGOARCH?=$(shell go env GOARCH)\nOUTPUT := _output/$(GOARCH)\nBINARY := $(OUTPUT)/bin/eks-pod-identity-agent\n",
                      "markdown": "`# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\nGOARCH?=$(shell go env GOARCH)\nOUTPUT := _output/$(GOARCH)\nBINARY := $(OUTPUT)/bin/eks-pod-identity-agent\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 24,
                  "endLine": 8,
                  "endColumn": 29,
                  "snippet": {
                    "text": "GIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\nGOARCH?=$(shell go env GOARCH)\nOUTPUT := _output/$(GOARCH)\n",
                    "rendered": {
                      "text": "GIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\nGOARCH?=$(shell go env GOARCH)\nOUTPUT := _output/$(GOARCH)\n",
                      "markdown": "`GIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\nGOARCH?=$(shell go env GOARCH)\nOUTPUT := _output/$(GOARCH)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 28,
                  "endLine": 7,
                  "endColumn": 33,
                  "snippet": {
                    "text": "# GIT_VERSION includes the latest git tag and is unique and not semver\nGIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\nGOARCH?=$(shell go env GOARCH)\n",
                    "rendered": {
                      "text": "# GIT_VERSION includes the latest git tag and is unique and not semver\nGIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\nGOARCH?=$(shell go env GOARCH)\n",
                      "markdown": "`# GIT_VERSION includes the latest git tag and is unique and not semver\nGIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\nGOARCH?=$(shell go env GOARCH)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 6,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n# GIT_VERSION includes the latest git tag and is unique and not semver\nGIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\n",
                    "rendered": {
                      "text": "\n# GIT_VERSION includes the latest git tag and is unique and not semver\nGIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\n",
                      "markdown": "`\n# GIT_VERSION includes the latest git tag and is unique and not semver\nGIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\nGOOS?=$(shell go env GOOS)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 22,
                  "endLine": 5,
                  "endColumn": 27,
                  "snippet": {
                    "text": "include $(ROOT_DIR_RELATIVE)/common.mk\n\n# GIT_VERSION includes the latest git tag and is unique and not semver\nGIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\n",
                    "rendered": {
                      "text": "include $(ROOT_DIR_RELATIVE)/common.mk\n\n# GIT_VERSION includes the latest git tag and is unique and not semver\nGIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\n",
                      "markdown": "`include $(ROOT_DIR_RELATIVE)/common.mk\n\n# GIT_VERSION includes the latest git tag and is unique and not semver\nGIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\nGIT_COMMIT_ID := $(shell git show -s --format=%H)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-eks-pod-identity-agent.zip/Makefile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 33,
                  "endLine": 4,
                  "endColumn": 38,
                  "snippet": {
                    "text": "ROOT_DIR_RELATIVE := .\ninclude $(ROOT_DIR_RELATIVE)/common.mk\n\n# GIT_VERSION includes the latest git tag and is unique and not semver\nGIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\n",
                    "rendered": {
                      "text": "ROOT_DIR_RELATIVE := .\ninclude $(ROOT_DIR_RELATIVE)/common.mk\n\n# GIT_VERSION includes the latest git tag and is unique and not semver\nGIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\n",
                      "markdown": "`ROOT_DIR_RELATIVE := .\ninclude $(ROOT_DIR_RELATIVE)/common.mk\n\n# GIT_VERSION includes the latest git tag and is unique and not semver\nGIT_VERSION := $(shell git describe --tags --always)\n# GIT_VERSION_SHORT is only the latest git tag, not unique, semver\nGIT_VERSION_SHORT := $(shell git describe --tags --abbrev=0 --always)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}